// Auto generated by JuleC.
// JuleC version: jule0.0.12 @master
// Date: 1/5/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION


#include "api/jule.hpp"                                   

#include "std/jule/integrated/integrated.hpp"                                   
#include <dirent.h>
#include <cstdio>
#include <sys/stat.h>
#include <fcntl.h>
#include <unistd.h>
#include <time.h>

struct _1e3202d89_Importer{};
struct _1e313497a_Kind{};
struct _1e315091e_Lookup{};
struct _1e4060344_CommonFlag{};
struct _216493d0a_acceptRange;
struct _20a1aa08d_Range16;
struct _20a1aa511_Range32;
struct _20a1aa984_RangeTable;
struct _20a1b0802_lazyBuff;
struct _2162e43ca_DirEntry;
struct _2162e6113_Directory;
struct _2163c2bb2_File;
struct _2163c2d9e_Status;
struct _20a3939e6_Cmd;
struct _20a35491e_Log;
struct _1d42b43cc_Token;
struct _1d42b9767_File;
struct _1d42bb7be_kindPair;
struct _1d42c23b8_lex;
struct _1e24d0d9e_Ast;
struct _1e24d1a92_Node;
struct _1e24d1e8d_Directive;
struct _1e2515686_TypeDecl;
struct _1e2515c4c_IdentTypeDecl;
struct _1e251639b_SubIdentTypeDecl;
struct _1e2516753_NamespaceTypeDecl;
struct _1e2516a3e_SptrTypeDecl;
struct _1e2516e3a_SlcTypeDecl;
struct _1e2517226_TupleTypeDecl;
struct _1e2517512_PtrTypeDecl;
struct _1e2517b94_ArrTypeDecl;
struct _1e25183e2_MapTypeDecl;
struct _1e2518799_RetTypeDecl;
struct _1e2519ba7_Expr;
struct _1e2519e93_RangeExpr;
struct _1e251a548_UseExpr;
struct _1e251a834_TupleExpr;
struct _1e251abdb_LitExpr;
struct _1e251b3e5_UnsafeExpr;
struct _1e251b79c_CoExpr;
struct _1e251bc20_IdentExpr;
struct _1e251c429_UnaryExpr;
struct _1e251c7d1_VariadicExpr;
struct _1e251cb88_CastExpr;
struct _1e251d040_NsSelectionExpr;
struct _1e251d4b3_SubIdentExpr;
struct _1e251d936_BinopExpr;
struct _1e251de75_FnCallExpr;
struct _1e251e904_FieldExprPair;
struct _1e2520152_StructLit;
struct _1e25205c5_BraceLit;
struct _1e25210dc_KeyValPair;
struct _1e2521560_SliceExpr;
struct _1e2521e01_IndexingExpr;
struct _1e252250b_SlicingExpr;
struct _1e25227e7_Constraint;
struct _1e2522c6a_GenericDecl;
struct _1e2523122_LabelSt;
struct _1e25234c9_GotoSt;
struct _1e25237b5_FallSt;
struct _1e2523dc0_AssignLeft;
struct _1e252440e_AssignSt;
struct _1e2525399_Stmt;
struct _1e25259a4_ScopeTree;
struct _1e252617a_ParamDecl;
struct _1e252749a_FnDecl;
struct _1e2528479_VarDecl;
struct _1e2528831_RetSt;
struct _1e2528e91_Iter;
struct _1e2529766_WhileKind;
struct _1e252a107_RangeKind;
struct _1e252a4ae_BreakSt;
struct _1e252a866_ContSt;
struct _1e252acd9_If;
struct _1e252b191_Else;
struct _1e252b614_Conditional;
struct _1e252bcda_TypeAliasDecl;
struct _1e252c25d_Case;
struct _1e252c934_MatchCase;
struct _1e252d1c6_UseDecl;
struct _1e252d649_EnumItemDecl;
struct _1e252e172_EnumDecl;
struct _1e252eb78_TypeEnumItemDecl;
struct _1e252ed76_TypeEnumDecl;
struct _1e25303c6_FieldDecl;
struct _1e2530c34_StructDecl;
struct _1e253133e_TraitDecl;
struct _1e2531949_Impl;
struct _1e23b4a96_Const;
struct _1e2b90cab_floatInfo;
struct _1e2ba0628_decimalSlice;
struct _1e31c2144_leftCheat;
struct _1e31c24a7_decimal;
struct _1e24e8339_Field;
struct _1e2507799_Operators;
struct _1e2505d6e_Struct;
struct _1e250d4d6_FieldIns;
struct _1e2583c87_OperandExprModel;
struct _1e2583e74_BinopExprModel;
struct _1e2584161_UnaryExprModel;
struct _1e258434d_StructArgExprModel;
struct _1e258453a_StructLitExprModel;
struct _1e2584727_AllocStructLitExprModel;
struct _1e2584914_CastingExprModel;
struct _1e2584b01_FnCallExprModel;
struct _1e2584cdd_SliceExprModel;
struct _1e2584eca_IndexingExprModel;
struct _1e25851b7_AnonFnExprModel;
struct _1e25853a4_KeyValPairExprModel;
struct _1e2585591_MapExprModel;
struct _1e258577d_SlicingExprModel;
struct _1e258596a_TraitSubIdentExprModel;
struct _1e2585d88_StructSubIdentExprModel;
struct _1e2586075_StructStaticIdentExprModel;
struct _1e2586262_ArrayExprModel;
struct _1e258644e_CommonIdentExprModel;
struct _1e258663b_CommonSubIdentExprModel;
struct _1e2586828_TupleExprModel;
struct _1e2586a15_BuiltinOutCallExprModel;
struct _1e2586c02_BuiltinOutlnCallExprModel;
struct _1e2586dde_BuiltinCloneCallExprModel;
struct _1e25870cb_BuiltinNewCallExprModel;
struct _1e25872b8_BuiltinPanicCallExprModel;
struct _1e25874a5_BuiltinAssertCallExprModel;
struct _1e2587692_BuiltinMakeCallExprModel;
struct _1e258787e_BuiltinAppendCallExprModel;
struct _1e2587a6b_BuiltinCopyCallExprModel;
struct _1e2587c58_BuiltinErrorCallExprModel;
struct _1e2585b57_SizeofExprModel;
struct _1e25883b8_AlignofExprModel;
struct _1e25885a5_RuneExprModel;
struct _1e2588792_IntegratedToStrExprModel;
struct _1e258897e_BackendEmitExprModel;
struct _1e2588b6b_FreeExprModel;
struct _1e2589331_RetType;
struct _1e2589a07_Param;
struct _1e258b344_Fn;
struct _1e258d126_ParamIns;
struct _1e258dee5_FnIns;
struct _1e2591e60_ReferenceStack;
struct _1e25932c4_Pass;
struct _1e259776d_symbolBuilder;
struct _1e259d246_Trait;
struct _1e259e896_EnumItem;
struct _1e25a038b_Enum;
struct _1e25a13c0_TypeEnumItem;
struct _1e25a1986_TypeEnum;
struct _1e31ceb68_constraintChecker;
struct _1e31d1bd1_Impl;
struct _1e31d6c3b_Scope;
struct _1e31d7137_If;
struct _1e31d7423_Else;
struct _1e31d7797_Conditional;
struct _1e31d7a83_InfIter;
struct _1e31d8006_WhileIter;
struct _1e31d88db_RangeIter;
struct _1e31d8cd7_ContSt;
struct _1e31d918e_BreakSt;
struct _1e31d947a_Label;
struct _1e31d9766_GotoSt;
struct _1e31d9b1d_Postfix;
struct _1e31da091_Assign;
struct _1e31da448_MultiAssign;
struct _1e31da987_Match;
struct _1e31db4d2_Case;
struct _1e31dba87_FallSt;
struct _1e31dc00a_RetSt;
struct _1e31dc615_scopeLabel;
struct _1e31dca88_scopeGoto;
struct _1e31dd89c_scopeChecker;
struct _1e31ee979_directiveChecker;
struct _1e320561c_ImportInfo;
struct _1e3208576_Package;
struct _1e320d768_Sema;
struct _1e322751d_missingRetChecker;
struct _1e32291ce_IterRelation;
struct _1e322a147_Var;
struct _1e322ab70_FuncPattern;
struct _1e30e2e55_typeCompatibilityChecker;
struct _1e30e495c_assignTypeChecker;
struct _1e30e6376_dynamicTypeAnnotation;
struct _1e30eab72_fnCallArgChecker;
struct _1e30ed57b_structLitChecker;
struct _1e3100160_rangeChecker;
struct _1e31022b6_retTypeChecker;
struct _1e310432e_SymbolTable;
struct _1e310908c_Data;
struct _1e310a115_Value;
struct _1e310ab0a_Eval;
struct _1e3126ac1_unaryEval;
struct _1e312885e_binaryEval;
struct _1e313367c_InsGeneric;
struct _1e31341b6_TypeAlias;
struct _1e3134da9_TypeKind;
struct _1e3139012_TypeSymbol;
struct _1e3139881_Prim;
struct _1e313d115_Sptr;
struct _1e313da72_Slc;
struct _1e313e600_Tuple;
struct _1e3140128_Map;
struct _1e3140c1c_Arr;
struct _1e3141679_Ptr;
struct _1e31425c0_referencer;
struct _1e3143318_typeChecker;
struct _1e314aa29_identTypeLookup;
struct _1e337e39a_FileInfo;
struct _1e33ce0dc_stmt;
struct _1e33ce917_scopeParser;
struct _1e33dbc76_exprBuilder;
struct _1e33e70b1_assignInfo;
struct _1e33ea603_parser;
struct _1e340b8bc_typeBuilder;
struct _1e3317a2b_CompileInfo;
struct _1e3318d7e_directiveEval;
struct _1e333ae7d_JuleImporter;
struct _1e32ee34d_OrderedDefines;
struct _1e33bb32c_defineOrderer;
struct _1e3bd4947_liveTable;
struct _1e3c16517_scopeDeadCode;
struct _1e3c1a472_exprDeadCode;
struct _1d42d3d8b_UnsafeBinopExprModel;
struct _1d42d4d15_UnsafeIndexingExprModel;
struct _1e10cb072_PushToSliceExprModel;
struct _1e12489e7_MutSlicingExprModel;
struct _1e17484d0_StrInsertBeginExprModel;
struct _1e1600552_scopeOptimizer;
struct _1e1605678_exprOptimizer;
struct _1e3bdecc6_Optimizer;
struct _20a4244a0_AnsiEscape;
struct _1e3b45149_Logger;
struct _1e42a40c1_AbsTime;
struct _1e42a4764_Time;
struct _1e422d358_scopeCoder;
struct _1e4235d77_exprCoder;
struct _1e4243c75_deriveCoder;
struct _1e42451a5_TestCoder;
struct _1e4247806_identCoder;
struct _1e42a9a88_SerializationInfo;
struct _1e42a9c75_traitHash;
struct _1e42b09a1_customType;
struct _1e42b1298_typeCoder;
struct _1e6b747d5_Flag;
struct _1e6b78498_Flag;
struct _1e6b7be80_Flag;
struct _1e6b809ab_Flag;
struct _1e6b84493_Flag;
struct _1e42e927b_FlagSet;
struct _1e3381952_IR;
struct _1e253220d_StructIns;
struct _1e3bd4c11_ObjectDeadCode;
struct _1e42a9e62_ObjectCoder;
struct _1e42eb954_ArgParser;
struct _216493d0a_acceptRange {
	jule::U8 _field_lo = jule::U8();
	jule::U8 _field_hi = jule::U8();
	

	_216493d0a_acceptRange(void) = default;

	inline bool operator==(_216493d0a_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_216493d0a_acceptRange _other) { return !this->operator==(_other); }


};
struct _20a1aa08d_Range16 {
	jule::U16 _field_Lo = jule::U16();
	jule::U16 _field_Hi = jule::U16();
	jule::U16 _field_Stride = jule::U16();
	

	_20a1aa08d_Range16(void) = default;

	inline bool operator==(_20a1aa08d_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_20a1aa08d_Range16 _other) { return !this->operator==(_other); }


};
struct _20a1aa511_Range32 {
	jule::U32 _field_Lo = jule::U32();
	jule::U32 _field_Hi = jule::U32();
	jule::U32 _field_Stride = jule::U32();
	

	_20a1aa511_Range32(void) = default;

	inline bool operator==(_20a1aa511_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_20a1aa511_Range32 _other) { return !this->operator==(_other); }


};
struct _20a1aa984_RangeTable {
	jule::Slice<_20a1aa08d_Range16> _field_R16 = jule::Slice<_20a1aa08d_Range16>();
	jule::Slice<_20a1aa511_Range32> _field_R32 = jule::Slice<_20a1aa511_Range32>();
	jule::I64 _field_LatinOffset = jule::I64();
	

	_20a1aa984_RangeTable(void) = default;

	inline bool operator==(_20a1aa984_RangeTable _other) {
		return 
			this->_field_R16 == _other._field_R16 &&
			this->_field_R32 == _other._field_R32 &&
			this->_field_LatinOffset == _other._field_LatinOffset;
	}

	inline bool operator!=(_20a1aa984_RangeTable _other) { return !this->operator==(_other); }


};
inline jule::U8 _20a1b09de_index(_20a1b0802_lazyBuff*, jule::I64);
inline void _20a1b0b21_append(_20a1b0802_lazyBuff*, jule::U8);
inline jule::Str _20a1b0c53_string(_20a1b0802_lazyBuff*);
struct _20a1b0802_lazyBuff {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_buff = jule::Slice<jule::U8>();
	jule::I64 _field_w = jule::I64();
	jule::Str _field_volAndPath = jule::Str();
	jule::I64 _field_volLen = jule::I64();
	

	_20a1b0802_lazyBuff(void) = default;

	inline bool operator==(_20a1b0802_lazyBuff _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_buff == _other._field_buff &&
			this->_field_w == _other._field_w &&
			this->_field_volAndPath == _other._field_volAndPath &&
			this->_field_volLen == _other._field_volLen;
	}

	inline bool operator!=(_20a1b0802_lazyBuff _other) { return !this->operator==(_other); }


};
struct _2162e43ca_DirEntry {
	jule::Str _field_Name = jule::Str();
	jule::Ptr<_2163c2d9e_Status> _field_Stat = jule::Ptr<_2163c2d9e_Status>();
	

	_2162e43ca_DirEntry(void) = default;

	inline bool operator==(_2162e43ca_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_2162e43ca_DirEntry _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Slice<jule::Ptr<_2162e43ca_DirEntry>>> static__20a1b1968_Read(jule::Str);
inline jule::VoidExceptional static__20a1b1a9a_Create(jule::Str);
inline jule::VoidExceptional static__20a1b1bcc_Remove(jule::Str);
struct _2162e6113_Directory {
	

	_2162e6113_Directory(void) = default;

	inline bool operator==(_2162e6113_Directory _other) { return true; }

	inline bool operator!=(_2162e6113_Directory _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_2163c2bb2_File> static__2162caaa9_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_2163c2bb2_File>> static__2162cb35c_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__2162cbdda_Read(jule::Str);
inline jule::VoidExceptional static__2162cc8be_Write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::Exceptional<jule::I64> _2162cde31_Seek(_2163c2bb2_File*, jule::I64, jule::I64);
inline jule::VoidExceptional _2162ce97b_Close(_2163c2bb2_File*);
inline jule::Exceptional<jule::Ptr<_2163c2bb2_File>> static__21642b15a_Open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__21642c403_Remove(jule::Str);
inline jule::Exceptional<jule::I64> _216456b69_Write(_2163c2bb2_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _21645ed81_Read(_2163c2bb2_File*, jule::Slice<jule::U8>);
struct _2163c2bb2_File {
	jule::Uintptr _field_handle = jule::Uintptr();
	

	_2163c2bb2_File(void) = default;

	inline bool operator==(_2163c2bb2_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_2163c2bb2_File _other) { return !this->operator==(_other); }


};
inline jule::Bool _2162d1a05_IsDir(_2163c2d9e_Status*);
inline jule::Bool _2162d2cc0_IsReg(_2163c2d9e_Status*);
inline jule::Exceptional<jule::Ptr<_2163c2d9e_Status>> static__20a1b1eda_Of(jule::Str);
struct _2163c2d9e_Status {
	jule::U64 _field_Mode = jule::U64();
	jule::U64 _field_Size = jule::U64();
	

	_2163c2d9e_Status(void) = default;

	inline bool operator==(_2163c2d9e_Status _other) {
		return 
			this->_field_Mode == _other._field_Mode &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_2163c2d9e_Status _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_20a3939e6_Cmd> static__20a393e25_New(jule::Str);
inline jule::Exceptional<jule::I64> _20a394189_Spawn(_20a3939e6_Cmd*);
inline jule::Exceptional<jule::I64> _20a3a3bb0_spawn(_20a3939e6_Cmd*);
struct _20a3939e6_Cmd {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::Str> _field_Args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_Env = jule::Slice<jule::Str>();
	

	_20a3939e6_Cmd(void) = default;

	inline bool operator==(_20a3939e6_Cmd _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_Args == _other._field_Args &&
			this->_field_Env == _other._field_Env;
	}

	inline bool operator!=(_20a3939e6_Cmd _other) { return !this->operator==(_other); }


};
struct _20a35491e_Log {
	jule::I64 _field_Kind = 0LL;
	jule::I64 _field_Row = jule::I64();
	jule::I64 _field_Column = jule::I64();
	jule::Str _field_Path = jule::Str();
	jule::Str _field_Text = jule::Str();
	jule::Str _field_Line = jule::Str();
	jule::Str _field_Suggestion = jule::Str();
	

	_20a35491e_Log(void) = default;

	inline bool operator==(_20a35491e_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_20a35491e_Log _other) { return !this->operator==(_other); }


};
inline jule::U8 _1d42b4784_Prec(_1d42b43cc_Token*);
struct _1d42b43cc_Token {
	jule::Ptr<_1d42b9767_File> _field_File = jule::Ptr<_1d42b9767_File>();
	jule::I64 _field_Row = jule::I64();
	jule::I64 _field_Column = jule::I64();
	jule::Str _field_Kind = jule::Str();
	jule::U64 _field_Id = 0LLU;
	

	_1d42b43cc_Token(void) = default;

	inline bool operator==(_1d42b43cc_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_1d42b43cc_Token _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d42b9b74_IsOk(_1d42b9767_File*);
inline void _1d42b9de9_Fill(_1d42b9767_File*, jule::Slice<jule::U8>);
inline jule::Str _1d42ba15d_Dir(_1d42b9767_File*);
inline jule::Str _1d42ba3c2_Name(_1d42b9767_File*);
inline jule::Uintptr _1d42ba636_Addr(_1d42b9767_File*);
inline jule::Str _1d42ba944_GetRow(_1d42b9767_File*, jule::I64);
struct _1d42b9767_File {
	jule::Str _field_Path = jule::Str();
	jule::Slice<jule::U8> _field_Data = jule::Slice<jule::U8>();
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _field_Tokens = jule::Slice<jule::Ptr<_1d42b43cc_Token>>();
	

	_1d42b9767_File(void) = default;

	inline bool operator==(_1d42b9767_File _other) {
		return 
			this->_field_Path == _other._field_Path &&
			this->_field_Data == _other._field_Data &&
			this->_field_Tokens == _other._field_Tokens;
	}

	inline bool operator!=(_1d42b9767_File _other) { return !this->operator==(_other); }


};
struct _1d42bb7be_kindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U64 _field_id = 0LLU;
	

	_1d42bb7be_kindPair(void) = default;

	inline bool operator==(_1d42bb7be_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1d42bb7be_kindPair _other) { return !this->operator==(_other); }


};
inline void _1d42c295c_pushErr(_1d42c23b8_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _1d42c2c7b_pushErrTok(_1d42c23b8_lex*, jule::Ptr<_1d42b43cc_Token>&, jule::Str);
inline void _1d42c2e57_lex(_1d42c23b8_lex*);
inline jule::Str _1d42c3265_id(_1d42c23b8_lex*, jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _1d42c34c9_resume(_1d42c23b8_lex*);
inline void _1d42c374e_lexLineComment(_1d42c23b8_lex*, jule::Ptr<_1d42b43cc_Token>&);
inline void _1d42c39c4_lexRangeComment(_1d42c23b8_lex*, jule::Ptr<_1d42b43cc_Token>&);
inline jule::Str _1d42c3cd2_num(_1d42c23b8_lex*, jule::Slice<jule::U8>&);
inline jule::Str _1d42c40e0_escapeSeq(_1d42c23b8_lex*, jule::Slice<jule::U8>&);
inline jule::Str _1d42c4497_getRune(_1d42c23b8_lex*, jule::Slice<jule::U8>&, jule::Bool);
inline jule::Str _1d42c47a5_lexRune(_1d42c23b8_lex*, jule::Slice<jule::U8>&);
inline jule::Str _1d42c4a19_lexStr(_1d42c23b8_lex*);
inline jule::Bool _1d42c4c7d_isFirstTokenOfLine(_1d42c23b8_lex*);
inline void _1d42c4e59_newLine(_1d42c23b8_lex*);
inline jule::Bool _1d42c5454_isOp(_1d42c23b8_lex*, jule::Slice<jule::U8>&, jule::Str, jule::U64, jule::Ptr<_1d42b43cc_Token>&);
inline jule::Bool _1d42c580b_lexBasicOps(_1d42c23b8_lex*, jule::Slice<jule::U8>, jule::Ptr<_1d42b43cc_Token>&);
inline jule::Bool _1d42c5bb3_lexId(_1d42c23b8_lex*, jule::Slice<jule::U8>&, jule::Ptr<_1d42b43cc_Token>&);
inline jule::Bool _1d42c606a_lexNum(_1d42c23b8_lex*, jule::Slice<jule::U8>&, jule::Ptr<_1d42b43cc_Token>&);
inline jule::Ptr<_1d42b43cc_Token> _1d42c62ce_token(_1d42c23b8_lex*);
struct _1d42c23b8_lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _field_tokens = jule::Slice<jule::Ptr<_1d42b43cc_Token>>();
	jule::Ptr<_1d42b9767_File> _field_file = jule::Ptr<_1d42b9767_File>();
	jule::I64 _field_pos = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::I64 _field_row = jule::I64();
	jule::Slice<_20a35491e_Log> _field_errors = jule::Slice<_20a35491e_Log>();
	

	_1d42c23b8_lex(void) = default;

	inline bool operator==(_1d42c23b8_lex _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_file == _other._field_file &&
			this->_field_pos == _other._field_pos &&
			this->_field_column == _other._field_column &&
			this->_field_row == _other._field_row &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1d42c23b8_lex _other) { return !this->operator==(_other); }


};
struct _1e24d0d9e_Ast {
	jule::Ptr<_1d42b9767_File> _field_File = jule::Ptr<_1d42b9767_File>();
	jule::Slice<jule::Ptr<_1e24d1e8d_Directive>> _field_TopDirectives = jule::Slice<jule::Ptr<_1e24d1e8d_Directive>>();
	jule::Slice<jule::Ptr<_1e252d1c6_UseDecl>> _field_UseDecls = jule::Slice<jule::Ptr<_1e252d1c6_UseDecl>>();
	jule::Slice<_1e24d1a92_Node> _field_Nodes = jule::Slice<_1e24d1a92_Node>();
	

	_1e24d0d9e_Ast(void) = default;

	inline bool operator==(_1e24d0d9e_Ast _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_TopDirectives == _other._field_TopDirectives &&
			this->_field_UseDecls == _other._field_UseDecls &&
			this->_field_Nodes == _other._field_Nodes;
	}

	inline bool operator!=(_1e24d0d9e_Ast _other) { return !this->operator==(_other); }


};
struct _1e24d1a92_Node {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Any _field_Data = jule::Any();
	

	_1e24d1a92_Node(void) = default;

	inline bool operator==(_1e24d1a92_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1e24d1a92_Node _other) { return !this->operator==(_other); }


};
struct _1e24d1e8d_Directive {
	jule::Ptr<_1d42b43cc_Token> _field_Tag = jule::Ptr<_1d42b43cc_Token>();
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _field_Args = jule::Slice<jule::Ptr<_1d42b43cc_Token>>();
	

	_1e24d1e8d_Directive(void) = default;

	inline bool operator==(_1e24d1e8d_Directive _other) {
		return 
			this->_field_Tag == _other._field_Tag &&
			this->_field_Args == _other._field_Args;
	}

	inline bool operator!=(_1e24d1e8d_Directive _other) { return !this->operator==(_other); }


};
struct _1e2515686_TypeDecl {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Any _field_Kind = jule::Any();
	

	_1e2515686_TypeDecl(void) = default;

	inline bool operator==(_1e2515686_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1e2515686_TypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e25160b0_IsPrim(_1e2515c4c_IdentTypeDecl*);
struct _1e2515c4c_IdentTypeDecl {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Slice<jule::Ptr<_1e2515686_TypeDecl>> _field_Generics = jule::Slice<jule::Ptr<_1e2515686_TypeDecl>>();
	

	_1e2515c4c_IdentTypeDecl(void) = default;

	inline bool operator==(_1e2515c4c_IdentTypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Generics == _other._field_Generics;
	}

	inline bool operator!=(_1e2515c4c_IdentTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e251639b_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1e2515c4c_IdentTypeDecl>> _field_Idents = jule::Slice<jule::Ptr<_1e2515c4c_IdentTypeDecl>>();
	

	_1e251639b_SubIdentTypeDecl(void) = default;

	inline bool operator==(_1e251639b_SubIdentTypeDecl _other) {
		return 
			this->_field_Idents == _other._field_Idents;
	}

	inline bool operator!=(_1e251639b_SubIdentTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e2516753_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _field_Idents = jule::Slice<jule::Ptr<_1d42b43cc_Token>>();
	jule::Ptr<_1e2515686_TypeDecl> _field_Kind = jule::Ptr<_1e2515686_TypeDecl>();
	

	_1e2516753_NamespaceTypeDecl(void) = default;

	inline bool operator==(_1e2516753_NamespaceTypeDecl _other) {
		return 
			this->_field_Idents == _other._field_Idents &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1e2516753_NamespaceTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e2516a3e_SptrTypeDecl {
	jule::Ptr<_1e2515686_TypeDecl> _field_Elem = jule::Ptr<_1e2515686_TypeDecl>();
	

	_1e2516a3e_SptrTypeDecl(void) = default;

	inline bool operator==(_1e2516a3e_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1e2516a3e_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e2516e3a_SlcTypeDecl {
	jule::Ptr<_1e2515686_TypeDecl> _field_Elem = jule::Ptr<_1e2515686_TypeDecl>();
	

	_1e2516e3a_SlcTypeDecl(void) = default;

	inline bool operator==(_1e2516e3a_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1e2516e3a_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e2517226_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1e2515686_TypeDecl>> _field_Types = jule::Slice<jule::Ptr<_1e2515686_TypeDecl>>();
	

	_1e2517226_TupleTypeDecl(void) = default;

	inline bool operator==(_1e2517226_TupleTypeDecl _other) {
		return 
			this->_field_Types == _other._field_Types;
	}

	inline bool operator!=(_1e2517226_TupleTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e2517864_IsUnsafe(_1e2517512_PtrTypeDecl*);
struct _1e2517512_PtrTypeDecl {
	jule::Ptr<_1e2515686_TypeDecl> _field_Elem = jule::Ptr<_1e2515686_TypeDecl>();
	

	_1e2517512_PtrTypeDecl(void) = default;

	inline bool operator==(_1e2517512_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1e2517512_PtrTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e251806d_AutoSized(_1e2517b94_ArrTypeDecl*);
struct _1e2517b94_ArrTypeDecl {
	jule::Ptr<_1e2515686_TypeDecl> _field_Elem = jule::Ptr<_1e2515686_TypeDecl>();
	jule::Ptr<_1e2519ba7_Expr> _field_Size = jule::Ptr<_1e2519ba7_Expr>();
	

	_1e2517b94_ArrTypeDecl(void) = default;

	inline bool operator==(_1e2517b94_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_1e2517b94_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e25183e2_MapTypeDecl {
	jule::Ptr<_1e2515686_TypeDecl> _field_Key = jule::Ptr<_1e2515686_TypeDecl>();
	jule::Ptr<_1e2515686_TypeDecl> _field_Val = jule::Ptr<_1e2515686_TypeDecl>();
	

	_1e25183e2_MapTypeDecl(void) = default;

	inline bool operator==(_1e25183e2_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1e25183e2_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e2518799_RetTypeDecl {
	jule::Ptr<_1e2515686_TypeDecl> _field_Kind = jule::Ptr<_1e2515686_TypeDecl>();
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _field_Idents = jule::Slice<jule::Ptr<_1d42b43cc_Token>>();
	

	_1e2518799_RetTypeDecl(void) = default;

	inline bool operator==(_1e2518799_RetTypeDecl _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Idents == _other._field_Idents;
	}

	inline bool operator!=(_1e2518799_RetTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e2519ba7_Expr {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Ptr<_1d42b43cc_Token> _field_End = jule::Ptr<_1d42b43cc_Token>();
	jule::Any _field_Kind = jule::Any();
	

	_1e2519ba7_Expr(void) = default;

	inline bool operator==(_1e2519ba7_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1e2519ba7_Expr _other) { return !this->operator==(_other); }


};
struct _1e2519e93_RangeExpr {
	jule::Ptr<_1e2519ba7_Expr> _field_Expr = jule::Ptr<_1e2519ba7_Expr>();
	

	_1e2519e93_RangeExpr(void) = default;

	inline bool operator==(_1e2519e93_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e2519e93_RangeExpr _other) { return !this->operator==(_other); }


};
struct _1e251a548_UseExpr {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Ptr<_1e2519ba7_Expr> _field_Expr = jule::Ptr<_1e2519ba7_Expr>();
	

	_1e251a548_UseExpr(void) = default;

	inline bool operator==(_1e251a548_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e251a548_UseExpr _other) { return !this->operator==(_other); }


};
struct _1e251a834_TupleExpr {
	jule::Slice<jule::Ptr<_1e2519ba7_Expr>> _field_Expr = jule::Slice<jule::Ptr<_1e2519ba7_Expr>>();
	

	_1e251a834_TupleExpr(void) = default;

	inline bool operator==(_1e251a834_TupleExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e251a834_TupleExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e251b03d_IsNil(_1e251abdb_LitExpr*);
struct _1e251abdb_LitExpr {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Str _field_Value = jule::Str();
	

	_1e251abdb_LitExpr(void) = default;

	inline bool operator==(_1e251abdb_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1e251abdb_LitExpr _other) { return !this->operator==(_other); }


};
struct _1e251b3e5_UnsafeExpr {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Ptr<_1e2519ba7_Expr> _field_Expr = jule::Ptr<_1e2519ba7_Expr>();
	

	_1e251b3e5_UnsafeExpr(void) = default;

	inline bool operator==(_1e251b3e5_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e251b3e5_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _1e251b79c_CoExpr {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Ptr<_1e2519ba7_Expr> _field_Expr = jule::Ptr<_1e2519ba7_Expr>();
	

	_1e251b79c_CoExpr(void) = default;

	inline bool operator==(_1e251b79c_CoExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e251b79c_CoExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e251c072_IsSelf(_1e251bc20_IdentExpr*);
struct _1e251bc20_IdentExpr {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_CppLinked = jule::Bool();
	

	_1e251bc20_IdentExpr(void) = default;

	inline bool operator==(_1e251bc20_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked;
	}

	inline bool operator!=(_1e251bc20_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1e251c429_UnaryExpr {
	jule::Ptr<_1d42b43cc_Token> _field_Op = jule::Ptr<_1d42b43cc_Token>();
	jule::Ptr<_1e2519ba7_Expr> _field_Expr = jule::Ptr<_1e2519ba7_Expr>();
	

	_1e251c429_UnaryExpr(void) = default;

	inline bool operator==(_1e251c429_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e251c429_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1e251c7d1_VariadicExpr {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Ptr<_1e2519ba7_Expr> _field_Expr = jule::Ptr<_1e2519ba7_Expr>();
	

	_1e251c7d1_VariadicExpr(void) = default;

	inline bool operator==(_1e251c7d1_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e251c7d1_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1e251cb88_CastExpr {
	jule::Ptr<_1e2515686_TypeDecl> _field_Kind = jule::Ptr<_1e2515686_TypeDecl>();
	jule::Ptr<_1e2519ba7_Expr> _field_Expr = jule::Ptr<_1e2519ba7_Expr>();
	

	_1e251cb88_CastExpr(void) = default;

	inline bool operator==(_1e251cb88_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e251cb88_CastExpr _other) { return !this->operator==(_other); }


};
struct _1e251d040_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _field_Ns = jule::Slice<jule::Ptr<_1d42b43cc_Token>>();
	jule::Ptr<_1d42b43cc_Token> _field_Ident = jule::Ptr<_1d42b43cc_Token>();
	

	_1e251d040_NsSelectionExpr(void) = default;

	inline bool operator==(_1e251d040_NsSelectionExpr _other) {
		return 
			this->_field_Ns == _other._field_Ns &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1e251d040_NsSelectionExpr _other) { return !this->operator==(_other); }


};
struct _1e251d4b3_SubIdentExpr {
	jule::Bool _field_IsSelf = jule::Bool();
	jule::Ptr<_1e2519ba7_Expr> _field_Expr = jule::Ptr<_1e2519ba7_Expr>();
	jule::Ptr<_1d42b43cc_Token> _field_Ident = jule::Ptr<_1d42b43cc_Token>();
	

	_1e251d4b3_SubIdentExpr(void) = default;

	inline bool operator==(_1e251d4b3_SubIdentExpr _other) {
		return 
			this->_field_IsSelf == _other._field_IsSelf &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1e251d4b3_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1e251d936_BinopExpr {
	jule::Ptr<_1e2519ba7_Expr> _field_Left = jule::Ptr<_1e2519ba7_Expr>();
	jule::Ptr<_1e2519ba7_Expr> _field_Right = jule::Ptr<_1e2519ba7_Expr>();
	jule::Ptr<_1d42b43cc_Token> _field_Op = jule::Ptr<_1d42b43cc_Token>();
	

	_1e251d936_BinopExpr(void) = default;

	inline bool operator==(_1e251d936_BinopExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1e251d936_BinopExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e251e2d8_Unhandled(_1e251de75_FnCallExpr*);
inline jule::Bool _1e251e54c_Ignored(_1e251de75_FnCallExpr*);
struct _1e251de75_FnCallExpr {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Ptr<_1e2519ba7_Expr> _field_Expr = jule::Ptr<_1e2519ba7_Expr>();
	jule::Slice<jule::Ptr<_1e2519ba7_Expr>> _field_Args = jule::Slice<jule::Ptr<_1e2519ba7_Expr>>();
	jule::Ptr<_1e25259a4_ScopeTree> _field_Exception = jule::Ptr<_1e25259a4_ScopeTree>();
	

	_1e251de75_FnCallExpr(void) = default;

	inline bool operator==(_1e251de75_FnCallExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Args == _other._field_Args &&
			this->_field_Exception == _other._field_Exception;
	}

	inline bool operator!=(_1e251de75_FnCallExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e251ec56_IsTargeted(_1e251e904_FieldExprPair*);
struct _1e251e904_FieldExprPair {
	jule::Ptr<_1d42b43cc_Token> _field_Field = jule::Ptr<_1d42b43cc_Token>();
	jule::Ptr<_1e2519ba7_Expr> _field_Expr = jule::Ptr<_1e2519ba7_Expr>();
	

	_1e251e904_FieldExprPair(void) = default;

	inline bool operator==(_1e251e904_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e251e904_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1e2520152_StructLit {
	jule::Ptr<_1d42b43cc_Token> _field_End = jule::Ptr<_1d42b43cc_Token>();
	jule::Ptr<_1e2515686_TypeDecl> _field_Kind = jule::Ptr<_1e2515686_TypeDecl>();
	jule::Slice<jule::Ptr<_1e2519ba7_Expr>> _field_Exprs = jule::Slice<jule::Ptr<_1e2519ba7_Expr>>();
	

	_1e2520152_StructLit(void) = default;

	inline bool operator==(_1e2520152_StructLit _other) {
		return 
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_1e2520152_StructLit _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e2520c46_IsEmpty(_1e25205c5_BraceLit*);
struct _1e25205c5_BraceLit {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Ptr<_1d42b43cc_Token> _field_End = jule::Ptr<_1d42b43cc_Token>();
	jule::Slice<jule::Ptr<_1e2519ba7_Expr>> _field_Exprs = jule::Slice<jule::Ptr<_1e2519ba7_Expr>>();
	

	_1e25205c5_BraceLit(void) = default;

	inline bool operator==(_1e25205c5_BraceLit _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_1e25205c5_BraceLit _other) { return !this->operator==(_other); }


};
struct _1e25210dc_KeyValPair {
	jule::Ptr<_1e2519ba7_Expr> _field_Key = jule::Ptr<_1e2519ba7_Expr>();
	jule::Ptr<_1e2519ba7_Expr> _field_Val = jule::Ptr<_1e2519ba7_Expr>();
	jule::Ptr<_1d42b43cc_Token> _field_Colon = jule::Ptr<_1d42b43cc_Token>();
	

	_1e25210dc_KeyValPair(void) = default;

	inline bool operator==(_1e25210dc_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_1e25210dc_KeyValPair _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e25218b2_IsEmpty(_1e2521560_SliceExpr*);
struct _1e2521560_SliceExpr {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Ptr<_1d42b43cc_Token> _field_End = jule::Ptr<_1d42b43cc_Token>();
	jule::Slice<jule::Ptr<_1e2519ba7_Expr>> _field_Exprs = jule::Slice<jule::Ptr<_1e2519ba7_Expr>>();
	

	_1e2521560_SliceExpr(void) = default;

	inline bool operator==(_1e2521560_SliceExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_1e2521560_SliceExpr _other) { return !this->operator==(_other); }


};
struct _1e2521e01_IndexingExpr {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Ptr<_1d42b43cc_Token> _field_End = jule::Ptr<_1d42b43cc_Token>();
	jule::Ptr<_1e2519ba7_Expr> _field_Expr = jule::Ptr<_1e2519ba7_Expr>();
	jule::Ptr<_1e2519ba7_Expr> _field_Index = jule::Ptr<_1e2519ba7_Expr>();
	

	_1e2521e01_IndexingExpr(void) = default;

	inline bool operator==(_1e2521e01_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1e2521e01_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1e252250b_SlicingExpr {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Ptr<_1d42b43cc_Token> _field_End = jule::Ptr<_1d42b43cc_Token>();
	jule::Ptr<_1e2519ba7_Expr> _field_Expr = jule::Ptr<_1e2519ba7_Expr>();
	jule::Ptr<_1e2519ba7_Expr> _field_Start = jule::Ptr<_1e2519ba7_Expr>();
	jule::Ptr<_1e2519ba7_Expr> _field_To = jule::Ptr<_1e2519ba7_Expr>();
	

	_1e252250b_SlicingExpr(void) = default;

	inline bool operator==(_1e252250b_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_1e252250b_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1e25227e7_Constraint {
	jule::Slice<jule::Ptr<_1e2515686_TypeDecl>> _field_Mask = jule::Slice<jule::Ptr<_1e2515686_TypeDecl>>();
	

	_1e25227e7_Constraint(void) = default;

	inline bool operator==(_1e25227e7_Constraint _other) {
		return 
			this->_field_Mask == _other._field_Mask;
	}

	inline bool operator!=(_1e25227e7_Constraint _other) { return !this->operator==(_other); }


};
struct _1e2522c6a_GenericDecl {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1e25227e7_Constraint> _field_Constraint = jule::Ptr<_1e25227e7_Constraint>();
	

	_1e2522c6a_GenericDecl(void) = default;

	inline bool operator==(_1e2522c6a_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_1e2522c6a_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1e2523122_LabelSt {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Str _field_Ident = jule::Str();
	

	_1e2523122_LabelSt(void) = default;

	inline bool operator==(_1e2523122_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1e2523122_LabelSt _other) { return !this->operator==(_other); }


};
struct _1e25234c9_GotoSt {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Ptr<_1d42b43cc_Token> _field_Label = jule::Ptr<_1d42b43cc_Token>();
	

	_1e25234c9_GotoSt(void) = default;

	inline bool operator==(_1e25234c9_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1e25234c9_GotoSt _other) { return !this->operator==(_other); }


};
struct _1e25237b5_FallSt {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	

	_1e25237b5_FallSt(void) = default;

	inline bool operator==(_1e25237b5_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_1e25237b5_FallSt _other) { return !this->operator==(_other); }


};
struct _1e2523dc0_AssignLeft {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1e2519ba7_Expr> _field_Expr = jule::Ptr<_1e2519ba7_Expr>();
	

	_1e2523dc0_AssignLeft(void) = default;

	inline bool operator==(_1e2523dc0_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e2523dc0_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1e252440e_AssignSt {
	jule::Bool _field_Declarative = jule::Bool();
	jule::Ptr<_1d42b43cc_Token> _field_Setter = jule::Ptr<_1d42b43cc_Token>();
	jule::Slice<jule::Ptr<_1e2523dc0_AssignLeft>> _field_Left = jule::Slice<jule::Ptr<_1e2523dc0_AssignLeft>>();
	jule::Ptr<_1e2519ba7_Expr> _field_Right = jule::Ptr<_1e2519ba7_Expr>();
	

	_1e252440e_AssignSt(void) = default;

	inline bool operator==(_1e252440e_AssignSt _other) {
		return 
			this->_field_Declarative == _other._field_Declarative &&
			this->_field_Setter == _other._field_Setter &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1e252440e_AssignSt _other) { return !this->operator==(_other); }


};
struct _1e2525399_Stmt {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Any _field_Data = jule::Any();
	

	_1e2525399_Stmt(void) = default;

	inline bool operator==(_1e2525399_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1e2525399_Stmt _other) { return !this->operator==(_other); }


};
struct _1e25259a4_ScopeTree {
	jule::Ptr<_1e25259a4_ScopeTree> _field_Parent = jule::Ptr<_1e25259a4_ScopeTree>();
	jule::Bool _field_Unsafety = jule::Bool();
	jule::Bool _field_Deferred = jule::Bool();
	jule::Slice<_1e2525399_Stmt> _field_Stmts = jule::Slice<_1e2525399_Stmt>();
	jule::Ptr<_1d42b43cc_Token> _field_End = jule::Ptr<_1d42b43cc_Token>();
	

	_1e25259a4_ScopeTree(void) = default;

	inline bool operator==(_1e25259a4_ScopeTree _other) {
		return 
			this->_field_Parent == _other._field_Parent &&
			this->_field_Unsafety == _other._field_Unsafety &&
			this->_field_Deferred == _other._field_Deferred &&
			this->_field_Stmts == _other._field_Stmts &&
			this->_field_End == _other._field_End;
	}

	inline bool operator!=(_1e25259a4_ScopeTree _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e25264dd_IsSelf(_1e252617a_ParamDecl*);
inline jule::Bool _1e2526752_IsRef(_1e252617a_ParamDecl*);
struct _1e252617a_ParamDecl {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Variadic = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Ptr<_1e2515686_TypeDecl> _field_Kind = jule::Ptr<_1e2515686_TypeDecl>();
	jule::Str _field_Ident = jule::Str();
	

	_1e252617a_ParamDecl(void) = default;

	inline bool operator==(_1e252617a_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1e252617a_ParamDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e25277ec_IsAnon(_1e252749a_FnDecl*);
struct _1e252749a_FnDecl {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Bool _field_Global = jule::Bool();
	jule::Bool _field_Unsafety = jule::Bool();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Statically = jule::Bool();
	jule::Bool _field_Exceptional = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_1e24d1e8d_Directive>> _field_Directives = jule::Slice<jule::Ptr<_1e24d1e8d_Directive>>();
	jule::Ptr<_1e25259a4_ScopeTree> _field_Scope = jule::Ptr<_1e25259a4_ScopeTree>();
	jule::Slice<jule::Ptr<_1e2522c6a_GenericDecl>> _field_Generics = jule::Slice<jule::Ptr<_1e2522c6a_GenericDecl>>();
	jule::Ptr<_1e2518799_RetTypeDecl> _field_Result = jule::Ptr<_1e2518799_RetTypeDecl>();
	jule::Slice<jule::Ptr<_1e252617a_ParamDecl>> _field_Params = jule::Slice<jule::Ptr<_1e252617a_ParamDecl>>();
	

	_1e252749a_FnDecl(void) = default;

	inline bool operator==(_1e252749a_FnDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Global == _other._field_Global &&
			this->_field_Unsafety == _other._field_Unsafety &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Statically == _other._field_Statically &&
			this->_field_Exceptional == _other._field_Exceptional &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Result == _other._field_Result &&
			this->_field_Params == _other._field_Params;
	}

	inline bool operator!=(_1e252749a_FnDecl _other) { return !this->operator==(_other); }


};
struct _1e2528479_VarDecl {
	jule::Ptr<_1e25259a4_ScopeTree> _field_Scope = jule::Ptr<_1e25259a4_ScopeTree>();
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Constant = jule::Bool();
	jule::Bool _field_Statically = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Slice<jule::Ptr<_1e24d1e8d_Directive>> _field_Directives = jule::Slice<jule::Ptr<_1e24d1e8d_Directive>>();
	jule::Ptr<_1e2515686_TypeDecl> _field_Kind = jule::Ptr<_1e2515686_TypeDecl>();
	jule::Ptr<_1e2519ba7_Expr> _field_Expr = jule::Ptr<_1e2519ba7_Expr>();
	

	_1e2528479_VarDecl(void) = default;

	inline bool operator==(_1e2528479_VarDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Constant == _other._field_Constant &&
			this->_field_Statically == _other._field_Statically &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e2528479_VarDecl _other) { return !this->operator==(_other); }


};
struct _1e2528831_RetSt {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Ptr<_1e2519ba7_Expr> _field_Expr = jule::Ptr<_1e2519ba7_Expr>();
	

	_1e2528831_RetSt(void) = default;

	inline bool operator==(_1e2528831_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e2528831_RetSt _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e25292e3_IsInf(_1e2528e91_Iter*);
struct _1e2528e91_Iter {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Any _field_Kind = jule::Any();
	jule::Ptr<_1e25259a4_ScopeTree> _field_Scope = jule::Ptr<_1e25259a4_ScopeTree>();
	

	_1e2528e91_Iter(void) = default;

	inline bool operator==(_1e2528e91_Iter _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1e2528e91_Iter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e2529ab8_IsWhileNext(_1e2529766_WhileKind*);
struct _1e2529766_WhileKind {
	jule::Ptr<_1e2519ba7_Expr> _field_Expr = jule::Ptr<_1e2519ba7_Expr>();
	jule::Any _field_Next = jule::Any();
	jule::Ptr<_1d42b43cc_Token> _field_NextToken = jule::Ptr<_1d42b43cc_Token>();
	

	_1e2529766_WhileKind(void) = default;

	inline bool operator==(_1e2529766_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_1e2529766_WhileKind _other) { return !this->operator==(_other); }


};
struct _1e252a107_RangeKind {
	jule::Ptr<_1d42b43cc_Token> _field_InToken = jule::Ptr<_1d42b43cc_Token>();
	jule::Ptr<_1e2519ba7_Expr> _field_Expr = jule::Ptr<_1e2519ba7_Expr>();
	jule::Ptr<_1e2528479_VarDecl> _field_KeyA = jule::Ptr<_1e2528479_VarDecl>();
	jule::Ptr<_1e2528479_VarDecl> _field_KeyB = jule::Ptr<_1e2528479_VarDecl>();
	

	_1e252a107_RangeKind(void) = default;

	inline bool operator==(_1e252a107_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1e252a107_RangeKind _other) { return !this->operator==(_other); }


};
struct _1e252a4ae_BreakSt {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Ptr<_1d42b43cc_Token> _field_Label = jule::Ptr<_1d42b43cc_Token>();
	

	_1e252a4ae_BreakSt(void) = default;

	inline bool operator==(_1e252a4ae_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1e252a4ae_BreakSt _other) { return !this->operator==(_other); }


};
struct _1e252a866_ContSt {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Ptr<_1d42b43cc_Token> _field_Label = jule::Ptr<_1d42b43cc_Token>();
	

	_1e252a866_ContSt(void) = default;

	inline bool operator==(_1e252a866_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1e252a866_ContSt _other) { return !this->operator==(_other); }


};
struct _1e252acd9_If {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Ptr<_1e2519ba7_Expr> _field_Expr = jule::Ptr<_1e2519ba7_Expr>();
	jule::Ptr<_1e25259a4_ScopeTree> _field_Scope = jule::Ptr<_1e25259a4_ScopeTree>();
	

	_1e252acd9_If(void) = default;

	inline bool operator==(_1e252acd9_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1e252acd9_If _other) { return !this->operator==(_other); }


};
struct _1e252b191_Else {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Ptr<_1e25259a4_ScopeTree> _field_Scope = jule::Ptr<_1e25259a4_ScopeTree>();
	

	_1e252b191_Else(void) = default;

	inline bool operator==(_1e252b191_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1e252b191_Else _other) { return !this->operator==(_other); }


};
struct _1e252b614_Conditional {
	jule::Ptr<_1e252acd9_If> _field_Head = jule::Ptr<_1e252acd9_If>();
	jule::Slice<jule::Ptr<_1e252acd9_If>> _field_Tail = jule::Slice<jule::Ptr<_1e252acd9_If>>();
	jule::Ptr<_1e252b191_Else> _field_Default = jule::Ptr<_1e252b191_Else>();
	

	_1e252b614_Conditional(void) = default;

	inline bool operator==(_1e252b614_Conditional _other) {
		return 
			this->_field_Head == _other._field_Head &&
			this->_field_Tail == _other._field_Tail &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1e252b614_Conditional _other) { return !this->operator==(_other); }


};
struct _1e252bcda_TypeAliasDecl {
	jule::Ptr<_1e25259a4_ScopeTree> _field_Scope = jule::Ptr<_1e25259a4_ScopeTree>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1e2515686_TypeDecl> _field_Kind = jule::Ptr<_1e2515686_TypeDecl>();
	

	_1e252bcda_TypeAliasDecl(void) = default;

	inline bool operator==(_1e252bcda_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1e252bcda_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1e252c25d_Case {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Ptr<_1e25259a4_ScopeTree> _field_Scope = jule::Ptr<_1e25259a4_ScopeTree>();
	jule::Slice<jule::Ptr<_1e2519ba7_Expr>> _field_Exprs = jule::Slice<jule::Ptr<_1e2519ba7_Expr>>();
	

	_1e252c25d_Case(void) = default;

	inline bool operator==(_1e252c25d_Case _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_1e252c25d_Case _other) { return !this->operator==(_other); }


};
struct _1e252c934_MatchCase {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Ptr<_1d42b43cc_Token> _field_End = jule::Ptr<_1d42b43cc_Token>();
	jule::Bool _field_TypeMatch = jule::Bool();
	jule::Ptr<_1e2519ba7_Expr> _field_Expr = jule::Ptr<_1e2519ba7_Expr>();
	jule::Slice<jule::Ptr<_1e252c25d_Case>> _field_Cases = jule::Slice<jule::Ptr<_1e252c25d_Case>>();
	jule::Ptr<_1e252b191_Else> _field_Default = jule::Ptr<_1e252b191_Else>();
	

	_1e252c934_MatchCase(void) = default;

	inline bool operator==(_1e252c934_MatchCase _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_TypeMatch == _other._field_TypeMatch &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Cases == _other._field_Cases &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1e252c934_MatchCase _other) { return !this->operator==(_other); }


};
struct _1e252d1c6_UseDecl {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Str _field_LinkPath = jule::Str();
	jule::Str _field_Alias = jule::Str();
	jule::Bool _field_Full = jule::Bool();
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _field_Selected = jule::Slice<jule::Ptr<_1d42b43cc_Token>>();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Std = jule::Bool();
	

	_1e252d1c6_UseDecl(void) = default;

	inline bool operator==(_1e252d1c6_UseDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_LinkPath == _other._field_LinkPath &&
			this->_field_Alias == _other._field_Alias &&
			this->_field_Full == _other._field_Full &&
			this->_field_Selected == _other._field_Selected &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Std == _other._field_Std;
	}

	inline bool operator!=(_1e252d1c6_UseDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e252d99b_AutoExpr(_1e252d649_EnumItemDecl*);
struct _1e252d649_EnumItemDecl {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1e2519ba7_Expr> _field_Expr = jule::Ptr<_1e2519ba7_Expr>();
	

	_1e252d649_EnumItemDecl(void) = default;

	inline bool operator==(_1e252d649_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e252d649_EnumItemDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e252e705_DefaultTyped(_1e252e172_EnumDecl*);
struct _1e252e172_EnumDecl {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1e2515686_TypeDecl> _field_Kind = jule::Ptr<_1e2515686_TypeDecl>();
	jule::Slice<jule::Ptr<_1e252d649_EnumItemDecl>> _field_Items = jule::Slice<jule::Ptr<_1e252d649_EnumItemDecl>>();
	jule::Ptr<_1d42b43cc_Token> _field_End = jule::Ptr<_1d42b43cc_Token>();
	

	_1e252e172_EnumDecl(void) = default;

	inline bool operator==(_1e252e172_EnumDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Items == _other._field_Items &&
			this->_field_End == _other._field_End;
	}

	inline bool operator!=(_1e252e172_EnumDecl _other) { return !this->operator==(_other); }


};
struct _1e252eb78_TypeEnumItemDecl {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1e2515686_TypeDecl> _field_Kind = jule::Ptr<_1e2515686_TypeDecl>();
	

	_1e252eb78_TypeEnumItemDecl(void) = default;

	inline bool operator==(_1e252eb78_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1e252eb78_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1e252ed76_TypeEnumDecl {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_1e252eb78_TypeEnumItemDecl>> _field_Items = jule::Slice<jule::Ptr<_1e252eb78_TypeEnumItemDecl>>();
	jule::Ptr<_1d42b43cc_Token> _field_End = jule::Ptr<_1d42b43cc_Token>();
	

	_1e252ed76_TypeEnumDecl(void) = default;

	inline bool operator==(_1e252ed76_TypeEnumDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Items == _other._field_Items &&
			this->_field_End == _other._field_End;
	}

	inline bool operator!=(_1e252ed76_TypeEnumDecl _other) { return !this->operator==(_other); }


};
struct _1e25303c6_FieldDecl {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1e2515686_TypeDecl> _field_Kind = jule::Ptr<_1e2515686_TypeDecl>();
	jule::Ptr<_1e2519ba7_Expr> _field_Default = jule::Ptr<_1e2519ba7_Expr>();
	

	_1e25303c6_FieldDecl(void) = default;

	inline bool operator==(_1e25303c6_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1e25303c6_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1e2530c34_StructDecl {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Ptr<_1d42b43cc_Token> _field_End = jule::Ptr<_1d42b43cc_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_1e25303c6_FieldDecl>> _field_Fields = jule::Slice<jule::Ptr<_1e25303c6_FieldDecl>>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Slice<jule::Ptr<_1e24d1e8d_Directive>> _field_Directives = jule::Slice<jule::Ptr<_1e24d1e8d_Directive>>();
	jule::Slice<jule::Ptr<_1e2522c6a_GenericDecl>> _field_Generics = jule::Slice<jule::Ptr<_1e2522c6a_GenericDecl>>();
	

	_1e2530c34_StructDecl(void) = default;

	inline bool operator==(_1e2530c34_StructDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Fields == _other._field_Fields &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Generics == _other._field_Generics;
	}

	inline bool operator!=(_1e2530c34_StructDecl _other) { return !this->operator==(_other); }


};
struct _1e253133e_TraitDecl {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Ptr<_1d42b43cc_Token> _field_End = jule::Ptr<_1d42b43cc_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_Public = jule::Bool();
	jule::Slice<jule::Ptr<_1e252749a_FnDecl>> _field_Methods = jule::Slice<jule::Ptr<_1e252749a_FnDecl>>();
	

	_1e253133e_TraitDecl(void) = default;

	inline bool operator==(_1e253133e_TraitDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Public == _other._field_Public &&
			this->_field_Methods == _other._field_Methods;
	}

	inline bool operator!=(_1e253133e_TraitDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e2531cac_IsTraitImpl(_1e2531949_Impl*);
inline jule::Bool _1e2532021_IsStructImpl(_1e2531949_Impl*);
struct _1e2531949_Impl {
	jule::Ptr<_1d42b43cc_Token> _field_End = jule::Ptr<_1d42b43cc_Token>();
	jule::Ptr<_1e2515686_TypeDecl> _field_Base = jule::Ptr<_1e2515686_TypeDecl>();
	jule::Ptr<_1e2515686_TypeDecl> _field_Dest = jule::Ptr<_1e2515686_TypeDecl>();
	jule::Slice<jule::Ptr<_1e252749a_FnDecl>> _field_Methods = jule::Slice<jule::Ptr<_1e252749a_FnDecl>>();
	jule::Slice<jule::Ptr<_1e2528479_VarDecl>> _field_Statics = jule::Slice<jule::Ptr<_1e2528479_VarDecl>>();
	

	_1e2531949_Impl(void) = default;

	inline bool operator==(_1e2531949_Impl _other) {
		return 
			this->_field_End == _other._field_End &&
			this->_field_Base == _other._field_Base &&
			this->_field_Dest == _other._field_Dest &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Statics == _other._field_Statics;
	}

	inline bool operator!=(_1e2531949_Impl _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e23b4a96_Const> static__1e257a575_NewI64(jule::I64);
inline jule::Ptr<_1e23b4a96_Const> static__1e257a81c_NewU64(jule::U64);
inline jule::Ptr<_1e23b4a96_Const> static__1e257aab4_NewBool(jule::Bool);
inline jule::Ptr<_1e23b4a96_Const> static__1e257ad5b_NewStr(jule::Str);
inline jule::Ptr<_1e23b4a96_Const> static__1e257b103_NewF64(jule::F64);
inline jule::Ptr<_1e23b4a96_Const> static__1e257b301_NewNil(void);
inline jule::I64 _1e257b8ea_ReadI64(_1e23b4a96_Const*);
inline jule::U64 _1e257bb5e_ReadU64(_1e23b4a96_Const*);
inline jule::Bool _1e257bdc3_ReadBool(_1e23b4a96_Const*);
inline jule::Str _1e257c137_ReadStr(_1e23b4a96_Const*);
inline jule::F64 _1e257c39b_ReadF64(_1e23b4a96_Const*);
inline jule::I64 _1e257c610_AsI64(_1e23b4a96_Const*);
inline jule::U64 _1e257c874_AsU64(_1e23b4a96_Const*);
inline jule::F64 _1e257cad8_AsF64(_1e23b4a96_Const*);
inline void _1e257cd5d_SetI64(_1e23b4a96_Const*, jule::I64);
inline void _1e257d0d3_SetU64(_1e23b4a96_Const*, jule::U64);
inline void _1e257d358_SetBool(_1e23b4a96_Const*, jule::Bool);
inline void _1e257d5cd_SetStr(_1e23b4a96_Const*, jule::Str);
inline void _1e257d853_SetF64(_1e23b4a96_Const*, jule::F64);
inline void _1e257da2e_SetNil(_1e23b4a96_Const*);
inline jule::Bool _1e257dc93_IsI64(_1e23b4a96_Const*);
inline jule::Bool _1e257e007_IsU64(_1e23b4a96_Const*);
inline jule::Bool _1e257e26b_IsBool(_1e23b4a96_Const*);
inline jule::Bool _1e257e4d0_IsStr(_1e23b4a96_Const*);
inline jule::Bool _1e257e744_IsF64(_1e23b4a96_Const*);
inline jule::Bool _1e257e9a8_IsNil(_1e23b4a96_Const*);
inline jule::Bool _1e257ecb6_AreSameTypes(_1e23b4a96_Const*, _1e23b4a96_Const);
inline jule::Bool _1e25800c4_And(_1e23b4a96_Const*, _1e23b4a96_Const);
inline jule::Bool _1e25803d2_Or(_1e23b4a96_Const*, _1e23b4a96_Const);
inline jule::Bool _1e25806e0_Eq(_1e23b4a96_Const*, _1e23b4a96_Const);
inline jule::Bool _1e25809ed_Lt(_1e23b4a96_Const*, _1e23b4a96_Const);
inline jule::Bool _1e2580d0b_LtEq(_1e23b4a96_Const*, _1e23b4a96_Const);
inline jule::Bool _1e2581119_Gt(_1e23b4a96_Const*, _1e23b4a96_Const);
inline jule::Bool _1e2581427_GtEq(_1e23b4a96_Const*, _1e23b4a96_Const);
inline jule::Bool _1e2581735_Add(_1e23b4a96_Const*, _1e23b4a96_Const);
inline jule::Bool _1e2581a43_Sub(_1e23b4a96_Const*, _1e23b4a96_Const);
inline jule::Bool _1e2581d51_Mul(_1e23b4a96_Const*, _1e23b4a96_Const);
inline jule::Bool _1e258215e_Div(_1e23b4a96_Const*, _1e23b4a96_Const);
inline jule::Bool _1e258246c_Mod(_1e23b4a96_Const*, _1e23b4a96_Const);
inline jule::Bool _1e258277a_BitwiseAnd(_1e23b4a96_Const*, _1e23b4a96_Const);
inline jule::Bool _1e2582a88_BitwiseOr(_1e23b4a96_Const*, _1e23b4a96_Const);
inline jule::Bool _1e2582d96_Xor(_1e23b4a96_Const*, _1e23b4a96_Const);
inline jule::Bool _1e25831a4_Lshift(_1e23b4a96_Const*, _1e23b4a96_Const);
inline jule::Bool _1e25834b2_Rshift(_1e23b4a96_Const*, _1e23b4a96_Const);
struct _1e23b4a96_Const {
	jule::Any _field_data = jule::Any();
	

	_1e23b4a96_Const(void) = default;

	inline jule::Bool operator==(_1e23b4a96_Const _other) { return _1e25806e0_Eq(this, _other); }

	inline bool operator!=(_1e23b4a96_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1e23b4a96_Const _other) { return _1e2581119_Gt(this, _other); }

	inline jule::Bool operator>=(_1e23b4a96_Const _other) { return _1e2581427_GtEq(this, _other); }

	inline jule::Bool operator<(_1e23b4a96_Const _other) { return _1e25809ed_Lt(this, _other); }

	inline jule::Bool operator<=(_1e23b4a96_Const _other) { return _1e2580d0b_LtEq(this, _other); }


};
struct _1e2b90cab_floatInfo {
	jule::U64 _field_mantbits = jule::U64();
	jule::U64 _field_expbits = jule::U64();
	jule::I64 _field_bias = jule::I64();
	

	_1e2b90cab_floatInfo(void) = default;

	inline bool operator==(_1e2b90cab_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1e2b90cab_floatInfo _other) { return !this->operator==(_other); }


};
struct _1e2ba0628_decimalSlice {
	jule::Slice<jule::U8> _field_d = jule::Slice<jule::U8>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();
	

	_1e2ba0628_decimalSlice(void) = default;

	inline bool operator==(_1e2ba0628_decimalSlice _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg;
	}

	inline bool operator!=(_1e2ba0628_decimalSlice _other) { return !this->operator==(_other); }


};
struct _1e31c2144_leftCheat {
	jule::I64 _field_delta = jule::I64();
	jule::Str _field_cutoff = jule::Str();
	

	_1e31c2144_leftCheat(void) = default;

	inline bool operator==(_1e31c2144_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1e31c2144_leftCheat _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e2dbe8e1_set(_1e31c24a7_decimal*, jule::Str);
inline std::tuple<jule::U64,jule::Bool> _1e2dd9565_floatBits(_1e31c24a7_decimal*, _1e2b90cab_floatInfo&);
inline void _1e31c2694_assign(_1e31c24a7_decimal*, jule::U64);
inline void _1e31c27c6_shift(_1e31c24a7_decimal*, jule::I64);
inline void _1e31c2908_roundDown(_1e31c24a7_decimal*, jule::I64);
inline void _1e31c2a3a_roundUp(_1e31c24a7_decimal*, jule::I64);
inline void _1e31c2b6c_round(_1e31c24a7_decimal*, jule::I64);
inline jule::U64 _1e31c2c9e_roundedInteger(_1e31c24a7_decimal*);
struct _1e31c24a7_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();
	jule::Bool _field_trunc = jule::Bool();
	

	_1e31c24a7_decimal(void) = default;

	inline bool operator==(_1e31c24a7_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1e31c24a7_decimal _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e250d4d6_FieldIns> _1e24d7180_instance(jule::Ptr<_1e24e8339_Field>);
struct _1e24e8339_Field {
	jule::Ptr<_1e2505d6e_Struct> _field_Owner = jule::Ptr<_1e2505d6e_Struct>();
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1e3139012_TypeSymbol> _field_Kind = jule::Ptr<_1e3139012_TypeSymbol>();
	jule::Ptr<_1e2519ba7_Expr> _field_Default = jule::Ptr<_1e2519ba7_Expr>();
	

	_1e24e8339_Field(void) = default;

	inline bool operator==(_1e24e8339_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1e24e8339_Field _other) { return !this->operator==(_other); }


};
struct _1e2507799_Operators {
	jule::Ptr<_1e258dee5_FnIns> _field_Eq = jule::Ptr<_1e258dee5_FnIns>();
	jule::Ptr<_1e258dee5_FnIns> _field_Gt = jule::Ptr<_1e258dee5_FnIns>();
	jule::Ptr<_1e258dee5_FnIns> _field_GtEq = jule::Ptr<_1e258dee5_FnIns>();
	jule::Ptr<_1e258dee5_FnIns> _field_Lt = jule::Ptr<_1e258dee5_FnIns>();
	jule::Ptr<_1e258dee5_FnIns> _field_LtEq = jule::Ptr<_1e258dee5_FnIns>();
	jule::Ptr<_1e258dee5_FnIns> _field_Shl = jule::Ptr<_1e258dee5_FnIns>();
	jule::Ptr<_1e258dee5_FnIns> _field_Shr = jule::Ptr<_1e258dee5_FnIns>();
	jule::Ptr<_1e258dee5_FnIns> _field_Add = jule::Ptr<_1e258dee5_FnIns>();
	jule::Ptr<_1e258dee5_FnIns> _field_Sub = jule::Ptr<_1e258dee5_FnIns>();
	jule::Ptr<_1e258dee5_FnIns> _field_Div = jule::Ptr<_1e258dee5_FnIns>();
	jule::Ptr<_1e258dee5_FnIns> _field_Mul = jule::Ptr<_1e258dee5_FnIns>();
	jule::Ptr<_1e258dee5_FnIns> _field_Mod = jule::Ptr<_1e258dee5_FnIns>();
	jule::Ptr<_1e258dee5_FnIns> _field_BitAnd = jule::Ptr<_1e258dee5_FnIns>();
	jule::Ptr<_1e258dee5_FnIns> _field_BitOr = jule::Ptr<_1e258dee5_FnIns>();
	jule::Ptr<_1e258dee5_FnIns> _field_BitXor = jule::Ptr<_1e258dee5_FnIns>();
	jule::Ptr<_1e258dee5_FnIns> _field_Neg = jule::Ptr<_1e258dee5_FnIns>();
	jule::Ptr<_1e258dee5_FnIns> _field_Pos = jule::Ptr<_1e258dee5_FnIns>();
	jule::Ptr<_1e258dee5_FnIns> _field_BitNot = jule::Ptr<_1e258dee5_FnIns>();
	jule::Ptr<_1e258dee5_FnIns> _field_AddAssign = jule::Ptr<_1e258dee5_FnIns>();
	jule::Ptr<_1e258dee5_FnIns> _field_SubAssign = jule::Ptr<_1e258dee5_FnIns>();
	jule::Ptr<_1e258dee5_FnIns> _field_DivAssign = jule::Ptr<_1e258dee5_FnIns>();
	jule::Ptr<_1e258dee5_FnIns> _field_MulAssign = jule::Ptr<_1e258dee5_FnIns>();
	jule::Ptr<_1e258dee5_FnIns> _field_ModAssign = jule::Ptr<_1e258dee5_FnIns>();
	jule::Ptr<_1e258dee5_FnIns> _field_ShlAssign = jule::Ptr<_1e258dee5_FnIns>();
	jule::Ptr<_1e258dee5_FnIns> _field_ShrAssign = jule::Ptr<_1e258dee5_FnIns>();
	jule::Ptr<_1e258dee5_FnIns> _field_BitOrAssign = jule::Ptr<_1e258dee5_FnIns>();
	jule::Ptr<_1e258dee5_FnIns> _field_BitAndAssign = jule::Ptr<_1e258dee5_FnIns>();
	jule::Ptr<_1e258dee5_FnIns> _field_BitXorAssign = jule::Ptr<_1e258dee5_FnIns>();
	

	_1e2507799_Operators(void) = default;

	inline bool operator==(_1e2507799_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_1e2507799_Operators _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e253220d_StructIns> _1e24dd274_instance(jule::Ptr<_1e2505d6e_Struct>);
inline jule::Ptr<_1e253220d_StructIns> _1e24e24dc_appendInstance(_1e2505d6e_Struct*, jule::Ptr<_1e253220d_StructIns>&);
inline jule::Ptr<_1e258b344_Fn> _1e24e528c_FindMethod(_1e2505d6e_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_1e322a147_Var> _1e24e629e_FindStatic(_1e2505d6e_Struct*, jule::Str);
inline jule::Ptr<_1e24e8339_Field> _1e24e56dd_FindField(_1e2505d6e_Struct*, jule::Str);
inline jule::Bool _1e24e79ba_IsImplements(_1e2505d6e_Struct*, jule::Ptr<_1e259d246_Trait>);
inline jule::Bool _1e24e6dc6_IsDerives(_1e2505d6e_Struct*, jule::Str);
inline jule::Bool _1e24eab77_IsUses(_1e2505d6e_Struct*, jule::Ptr<_1e2505d6e_Struct>);
inline jule::Bool _1e24eb33c_HasRefAccessible(_1e2505d6e_Struct*);
struct _1e2505d6e_Struct {
	jule::Ptr<_1e320d768_Sema> _field_sema = jule::Ptr<_1e320d768_Sema>();
	jule::Slice<jule::Ptr<_1e2505d6e_Struct>> _field_Depends = jule::Slice<jule::Ptr<_1e2505d6e_Struct>>();
	jule::Slice<jule::Ptr<_1e2505d6e_Struct>> _field_Uses = jule::Slice<jule::Ptr<_1e2505d6e_Struct>>();
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_1e24e8339_Field>> _field_Fields = jule::Slice<jule::Ptr<_1e24e8339_Field>>();
	jule::Slice<jule::Ptr<_1e258b344_Fn>> _field_Methods = jule::Slice<jule::Ptr<_1e258b344_Fn>>();
	jule::Slice<jule::Ptr<_1e322a147_Var>> _field_Statics = jule::Slice<jule::Ptr<_1e322a147_Var>>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Slice<jule::Ptr<_1e24d1e8d_Directive>> _field_Directives = jule::Slice<jule::Ptr<_1e24d1e8d_Directive>>();
	jule::Slice<jule::Ptr<_1e2522c6a_GenericDecl>> _field_Generics = jule::Slice<jule::Ptr<_1e2522c6a_GenericDecl>>();
	jule::Slice<jule::Ptr<_1e259d246_Trait>> _field_Implements = jule::Slice<jule::Ptr<_1e259d246_Trait>>();
	jule::Slice<jule::Ptr<_1e253220d_StructIns>> _field_Instances = jule::Slice<jule::Ptr<_1e253220d_StructIns>>();
	

	_1e2505d6e_Struct(void) = default;

	inline bool operator==(_1e2505d6e_Struct _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_Depends == _other._field_Depends &&
			this->_field_Uses == _other._field_Uses &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Fields == _other._field_Fields &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Statics == _other._field_Statics &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Implements == _other._field_Implements &&
			this->_field_Instances == _other._field_Instances;
	}

	inline bool operator!=(_1e2505d6e_Struct _other) { return !this->operator==(_other); }


};
struct _1e250d4d6_FieldIns {
	jule::Ptr<_1e24e8339_Field> _field_Decl = jule::Ptr<_1e24e8339_Field>();
	jule::Ptr<_1e3134da9_TypeKind> _field_Kind = jule::Ptr<_1e3134da9_TypeKind>();
	jule::Ptr<_1e310908c_Data> _field_Default = jule::Ptr<_1e310908c_Data>();
	

	_1e250d4d6_FieldIns(void) = default;

	inline bool operator==(_1e250d4d6_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1e250d4d6_FieldIns _other) { return !this->operator==(_other); }


};
struct _1e2583c87_OperandExprModel {
	jule::Ptr<_1e3134da9_TypeKind> _field_Kind = jule::Ptr<_1e3134da9_TypeKind>();
	jule::Any _field_Model = jule::Any();
	

	_1e2583c87_OperandExprModel(void) = default;

	inline bool operator==(_1e2583c87_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_1e2583c87_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1e2583e74_BinopExprModel {
	jule::Ptr<_1e2583c87_OperandExprModel> _field_Left = jule::Ptr<_1e2583c87_OperandExprModel>();
	jule::Ptr<_1e2583c87_OperandExprModel> _field_Right = jule::Ptr<_1e2583c87_OperandExprModel>();
	jule::Ptr<_1d42b43cc_Token> _field_Op = jule::Ptr<_1d42b43cc_Token>();
	

	_1e2583e74_BinopExprModel(void) = default;

	inline bool operator==(_1e2583e74_BinopExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1e2583e74_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _1e2584161_UnaryExprModel {
	jule::Ptr<_1e310908c_Data> _field_Expr = jule::Ptr<_1e310908c_Data>();
	jule::Ptr<_1d42b43cc_Token> _field_Op = jule::Ptr<_1d42b43cc_Token>();
	

	_1e2584161_UnaryExprModel(void) = default;

	inline bool operator==(_1e2584161_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1e2584161_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1e258434d_StructArgExprModel {
	jule::Ptr<_1e250d4d6_FieldIns> _field_Field = jule::Ptr<_1e250d4d6_FieldIns>();
	jule::Any _field_Expr = jule::Any();
	

	_1e258434d_StructArgExprModel(void) = default;

	inline bool operator==(_1e258434d_StructArgExprModel _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e258434d_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1e258453a_StructLitExprModel {
	jule::Ptr<_1e253220d_StructIns> _field_Strct = jule::Ptr<_1e253220d_StructIns>();
	jule::Slice<jule::Ptr<_1e258434d_StructArgExprModel>> _field_Args = jule::Slice<jule::Ptr<_1e258434d_StructArgExprModel>>();
	

	_1e258453a_StructLitExprModel(void) = default;

	inline bool operator==(_1e258453a_StructLitExprModel _other) {
		return 
			this->_field_Strct == _other._field_Strct &&
			this->_field_Args == _other._field_Args;
	}

	inline bool operator!=(_1e258453a_StructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1e2584727_AllocStructLitExprModel {
	jule::Ptr<_1e258453a_StructLitExprModel> _field_Lit = jule::Ptr<_1e258453a_StructLitExprModel>();
	

	_1e2584727_AllocStructLitExprModel(void) = default;

	inline bool operator==(_1e2584727_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_1e2584727_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1e2584914_CastingExprModel {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_1e3134da9_TypeKind> _field_Kind = jule::Ptr<_1e3134da9_TypeKind>();
	jule::Ptr<_1e3134da9_TypeKind> _field_ExprKind = jule::Ptr<_1e3134da9_TypeKind>();
	

	_1e2584914_CastingExprModel(void) = default;

	inline bool operator==(_1e2584914_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_1e2584914_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1e2584b01_FnCallExprModel {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Ptr<_1e258dee5_FnIns> _field_Func = jule::Ptr<_1e258dee5_FnIns>();
	jule::Bool _field_IsCo = jule::Bool();
	jule::Any _field_Expr = jule::Any();
	jule::Slice<jule::Any> _field_Args = jule::Slice<jule::Any>();
	jule::Ptr<_1e31d6c3b_Scope> _field_Except = jule::Ptr<_1e31d6c3b_Scope>();
	jule::Bool _field_Assigned = jule::Bool();
	

	_1e2584b01_FnCallExprModel(void) = default;

	inline bool operator==(_1e2584b01_FnCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Func == _other._field_Func &&
			this->_field_IsCo == _other._field_IsCo &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Args == _other._field_Args &&
			this->_field_Except == _other._field_Except &&
			this->_field_Assigned == _other._field_Assigned;
	}

	inline bool operator!=(_1e2584b01_FnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e2584cdd_SliceExprModel {
	jule::Ptr<_1e3134da9_TypeKind> _field_ElemKind = jule::Ptr<_1e3134da9_TypeKind>();
	jule::Slice<jule::Any> _field_Elems = jule::Slice<jule::Any>();
	

	_1e2584cdd_SliceExprModel(void) = default;

	inline bool operator==(_1e2584cdd_SliceExprModel _other) {
		return 
			this->_field_ElemKind == _other._field_ElemKind &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1e2584cdd_SliceExprModel _other) { return !this->operator==(_other); }


};
struct _1e2584eca_IndexingExprModel {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Ptr<_1e310908c_Data> _field_Expr = jule::Ptr<_1e310908c_Data>();
	jule::Ptr<_1e310908c_Data> _field_Index = jule::Ptr<_1e310908c_Data>();
	

	_1e2584eca_IndexingExprModel(void) = default;

	inline bool operator==(_1e2584eca_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1e2584eca_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1e25851b7_AnonFnExprModel {
	jule::Ptr<_1e258dee5_FnIns> _field_Func = jule::Ptr<_1e258dee5_FnIns>();
	jule::Bool _field_Global = jule::Bool();
	

	_1e25851b7_AnonFnExprModel(void) = default;

	inline bool operator==(_1e25851b7_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_1e25851b7_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1e25853a4_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any();
	jule::Any _field_Val = jule::Any();
	

	_1e25853a4_KeyValPairExprModel(void) = default;

	inline bool operator==(_1e25853a4_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1e25853a4_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1e2585591_MapExprModel {
	jule::Ptr<_1e3134da9_TypeKind> _field_KeyKind = jule::Ptr<_1e3134da9_TypeKind>();
	jule::Ptr<_1e3134da9_TypeKind> _field_ValKind = jule::Ptr<_1e3134da9_TypeKind>();
	jule::Slice<jule::Ptr<_1e25853a4_KeyValPairExprModel>> _field_Entries = jule::Slice<jule::Ptr<_1e25853a4_KeyValPairExprModel>>();
	

	_1e2585591_MapExprModel(void) = default;

	inline bool operator==(_1e2585591_MapExprModel _other) {
		return 
			this->_field_KeyKind == _other._field_KeyKind &&
			this->_field_ValKind == _other._field_ValKind &&
			this->_field_Entries == _other._field_Entries;
	}

	inline bool operator!=(_1e2585591_MapExprModel _other) { return !this->operator==(_other); }


};
struct _1e258577d_SlicingExprModel {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Any _field_Left = jule::Any();
	jule::Any _field_Right = jule::Any();
	

	_1e258577d_SlicingExprModel(void) = default;

	inline bool operator==(_1e258577d_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1e258577d_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1e258596a_TraitSubIdentExprModel {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_1e258b344_Fn> _field_Method = jule::Ptr<_1e258b344_Fn>();
	jule::Ptr<_1e259d246_Trait> _field_Trt = jule::Ptr<_1e259d246_Trait>();
	

	_1e258596a_TraitSubIdentExprModel(void) = default;

	inline bool operator==(_1e258596a_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_1e258596a_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1e2585d88_StructSubIdentExprModel {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Ptr<_1e310908c_Data> _field_Expr = jule::Ptr<_1e310908c_Data>();
	jule::Ptr<_1e3134da9_TypeKind> _field_ExprKind = jule::Ptr<_1e3134da9_TypeKind>();
	jule::Ptr<_1e258dee5_FnIns> _field_Method = jule::Ptr<_1e258dee5_FnIns>();
	jule::Ptr<_1e250d4d6_FieldIns> _field_Field = jule::Ptr<_1e250d4d6_FieldIns>();
	

	_1e2585d88_StructSubIdentExprModel(void) = default;

	inline bool operator==(_1e2585d88_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field;
	}

	inline bool operator!=(_1e2585d88_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1e2586075_StructStaticIdentExprModel {
	jule::Ptr<_1e253220d_StructIns> _field_Structure = jule::Ptr<_1e253220d_StructIns>();
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_1e258dee5_FnIns> _field_Method = jule::Ptr<_1e258dee5_FnIns>();
	

	_1e2586075_StructStaticIdentExprModel(void) = default;

	inline bool operator==(_1e2586075_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_1e2586075_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1e2586262_ArrayExprModel {
	jule::Ptr<_1e3140c1c_Arr> _field_Kind = jule::Ptr<_1e3140c1c_Arr>();
	jule::Slice<jule::Any> _field_Elems = jule::Slice<jule::Any>();
	

	_1e2586262_ArrayExprModel(void) = default;

	inline bool operator==(_1e2586262_ArrayExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1e2586262_ArrayExprModel _other) { return !this->operator==(_other); }


};
struct _1e258644e_CommonIdentExprModel {
	jule::Str _field_Ident = jule::Str();
	

	_1e258644e_CommonIdentExprModel(void) = default;

	inline bool operator==(_1e258644e_CommonIdentExprModel _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1e258644e_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1e258663b_CommonSubIdentExprModel {
	jule::Ptr<_1e3134da9_TypeKind> _field_ExprKind = jule::Ptr<_1e3134da9_TypeKind>();
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Str _field_Ident = jule::Str();
	

	_1e258663b_CommonSubIdentExprModel(void) = default;

	inline bool operator==(_1e258663b_CommonSubIdentExprModel _other) {
		return 
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1e258663b_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1e2586828_TupleExprModel {
	jule::Slice<jule::Ptr<_1e310908c_Data>> _field_Datas = jule::Slice<jule::Ptr<_1e310908c_Data>>();
	

	_1e2586828_TupleExprModel(void) = default;

	inline bool operator==(_1e2586828_TupleExprModel _other) {
		return 
			this->_field_Datas == _other._field_Datas;
	}

	inline bool operator!=(_1e2586828_TupleExprModel _other) { return !this->operator==(_other); }


};
struct _1e2586a15_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any();
	jule::Bool _field_Debug = jule::Bool();
	

	_1e2586a15_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(_1e2586a15_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1e2586a15_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e2586c02_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any();
	jule::Bool _field_Debug = jule::Bool();
	

	_1e2586c02_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(_1e2586c02_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1e2586c02_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e2586dde_BuiltinCloneCallExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_1e2586dde_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(_1e2586dde_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e2586dde_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e25870cb_BuiltinNewCallExprModel {
	jule::Ptr<_1e3134da9_TypeKind> _field_Kind = jule::Ptr<_1e3134da9_TypeKind>();
	jule::Any _field_Init = jule::Any();
	

	_1e25870cb_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(_1e25870cb_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_1e25870cb_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e25872b8_BuiltinPanicCallExprModel {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Any _field_Expr = jule::Any();
	

	_1e25872b8_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(_1e25872b8_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e25872b8_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e25874a5_BuiltinAssertCallExprModel {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Str _field_Log = jule::Str();
	

	_1e25874a5_BuiltinAssertCallExprModel(void) = default;

	inline bool operator==(_1e25874a5_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_1e25874a5_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e2587692_BuiltinMakeCallExprModel {
	jule::Ptr<_1e3134da9_TypeKind> _field_Kind = jule::Ptr<_1e3134da9_TypeKind>();
	jule::Any _field_Len = jule::Any();
	jule::Any _field_Cap = jule::Any();
	

	_1e2587692_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(_1e2587692_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_1e2587692_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e258787e_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any();
	jule::Any _field_Elements = jule::Any();
	

	_1e258787e_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(_1e258787e_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_1e258787e_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e2587a6b_BuiltinCopyCallExprModel {
	jule::Ptr<_1e310908c_Data> _field_Dest = jule::Ptr<_1e310908c_Data>();
	jule::Ptr<_1e310908c_Data> _field_Src = jule::Ptr<_1e310908c_Data>();
	

	_1e2587a6b_BuiltinCopyCallExprModel(void) = default;

	inline bool operator==(_1e2587a6b_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_1e2587a6b_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e2587c58_BuiltinErrorCallExprModel {
	jule::Ptr<_1e258dee5_FnIns> _field_Func = jule::Ptr<_1e258dee5_FnIns>();
	jule::Any _field_Err = jule::Any();
	

	_1e2587c58_BuiltinErrorCallExprModel(void) = default;

	inline bool operator==(_1e2587c58_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_1e2587c58_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e2585b57_SizeofExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_1e2585b57_SizeofExprModel(void) = default;

	inline bool operator==(_1e2585b57_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e2585b57_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1e25883b8_AlignofExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_1e25883b8_AlignofExprModel(void) = default;

	inline bool operator==(_1e25883b8_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e25883b8_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1e25885a5_RuneExprModel {
	jule::I32 _field_Code = jule::I32();
	

	_1e25885a5_RuneExprModel(void) = default;

	inline bool operator==(_1e25885a5_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_1e25885a5_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1e2588792_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_1e2588792_IntegratedToStrExprModel(void) = default;

	inline bool operator==(_1e2588792_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e2588792_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1e258897e_BackendEmitExprModel {
	jule::Str _field_Code = jule::Str();
	jule::Slice<jule::Any> _field_Exprs = jule::Slice<jule::Any>();
	

	_1e258897e_BackendEmitExprModel(void) = default;

	inline bool operator==(_1e258897e_BackendEmitExprModel _other) {
		return 
			this->_field_Code == _other._field_Code &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_1e258897e_BackendEmitExprModel _other) { return !this->operator==(_other); }


};
struct _1e2588b6b_FreeExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_1e2588b6b_FreeExprModel(void) = default;

	inline bool operator==(_1e2588b6b_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e2588b6b_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1e2589331_RetType {
	jule::Ptr<_1e3139012_TypeSymbol> _field_Kind = jule::Ptr<_1e3139012_TypeSymbol>();
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _field_Idents = jule::Slice<jule::Ptr<_1d42b43cc_Token>>();
	

	_1e2589331_RetType(void) = default;

	inline bool operator==(_1e2589331_RetType _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Idents == _other._field_Idents;
	}

	inline bool operator!=(_1e2589331_RetType _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e258d126_ParamIns> _1e2589dc0_instance(jule::Ptr<_1e2589a07_Param>);
inline jule::Bool _1e258a134_IsSelf(_1e2589a07_Param*);
inline jule::Bool _1e258a398_IsRef(_1e2589a07_Param*);
struct _1e2589a07_Param {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Variadic = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Ptr<_1e3139012_TypeSymbol> _field_Kind = jule::Ptr<_1e3139012_TypeSymbol>();
	jule::Str _field_Ident = jule::Str();
	

	_1e2589a07_Param(void) = default;

	inline bool operator==(_1e2589a07_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1e2589a07_Param _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e258b7a6_IsVoid(_1e258b344_Fn*);
inline jule::Bool _1e258ba1a_IsMethod(_1e258b344_Fn*);
inline jule::Bool _1e258bc7e_IsEntryPoint(_1e258b344_Fn*);
inline jule::Bool _1e258bee3_IsInit(_1e258b344_Fn*);
inline jule::Bool _1e258c257_IsAnon(_1e258b344_Fn*);
inline jule::Bool _1e258c4bb_AnyVar(_1e258b344_Fn*);
inline jule::Ptr<_1e258dee5_FnIns> _1e258c730_instanceForce(jule::Ptr<_1e258b344_Fn>);
inline jule::Ptr<_1e258dee5_FnIns> _1e258c994_instance(jule::Ptr<_1e258b344_Fn>);
inline jule::Ptr<_1e258dee5_FnIns> _1e258cc6e_appendInstance(_1e258b344_Fn*, jule::Ptr<_1e258dee5_FnIns>&);
struct _1e258b344_Fn {
	jule::Ptr<_1e320d768_Sema> _field_sema = jule::Ptr<_1e320d768_Sema>();
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Bool _field_Global = jule::Bool();
	jule::Bool _field_Unsafety = jule::Bool();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Statically = jule::Bool();
	jule::Bool _field_Exceptional = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_1e24d1e8d_Directive>> _field_Directives = jule::Slice<jule::Ptr<_1e24d1e8d_Directive>>();
	jule::Ptr<_1e25259a4_ScopeTree> _field_Scope = jule::Ptr<_1e25259a4_ScopeTree>();
	jule::Slice<jule::Ptr<_1e2522c6a_GenericDecl>> _field_Generics = jule::Slice<jule::Ptr<_1e2522c6a_GenericDecl>>();
	jule::Ptr<_1e2589331_RetType> _field_Result = jule::Ptr<_1e2589331_RetType>();
	jule::Slice<jule::Ptr<_1e2589a07_Param>> _field_Params = jule::Slice<jule::Ptr<_1e2589a07_Param>>();
	jule::Ptr<_1e2505d6e_Struct> _field_Owner = jule::Ptr<_1e2505d6e_Struct>();
	jule::Slice<jule::Ptr<_1e258dee5_FnIns>> _field_Instances = jule::Slice<jule::Ptr<_1e258dee5_FnIns>>();
	

	_1e258b344_Fn(void) = default;

	inline bool operator==(_1e258b344_Fn _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_Token == _other._field_Token &&
			this->_field_Global == _other._field_Global &&
			this->_field_Unsafety == _other._field_Unsafety &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Statically == _other._field_Statically &&
			this->_field_Exceptional == _other._field_Exceptional &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Result == _other._field_Result &&
			this->_field_Params == _other._field_Params &&
			this->_field_Owner == _other._field_Owner &&
			this->_field_Instances == _other._field_Instances;
	}

	inline bool operator!=(_1e258b344_Fn _other) { return !this->operator==(_other); }


};
inline jule::Str _1e258d500_Str(_1e258d126_ParamIns*);
struct _1e258d126_ParamIns {
	jule::Ptr<_1e2589a07_Param> _field_Decl = jule::Ptr<_1e2589a07_Param>();
	jule::Ptr<_1e3134da9_TypeKind> _field_Kind = jule::Ptr<_1e3134da9_TypeKind>();
	

	_1e258d126_ParamIns(void) = default;

	inline bool operator==(_1e258d126_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1e258d126_ParamIns _other) { return !this->operator==(_other); }


};
inline jule::Str _1e258e325_Str(_1e258dee5_FnIns*);
inline jule::Bool _1e258e633_Equals(jule::Ptr<_1e258dee5_FnIns>, jule::Ptr<_1e3134da9_TypeKind>);
inline jule::Bool _1e258ea95_EqualsFn(jule::Ptr<_1e258dee5_FnIns>, jule::Ptr<_1e258dee5_FnIns>&);
inline jule::Bool _1e258eda3_equalsTrait(jule::Ptr<_1e258dee5_FnIns>, jule::Ptr<_1e258dee5_FnIns>&);
inline jule::Slice<jule::Ptr<_1e3134da9_TypeKind>> _1e2590117_Types(_1e258dee5_FnIns*);
inline jule::Bool _1e259037b_IsBuiltin(_1e258dee5_FnIns*);
inline jule::Bool _1e25905e0_IsAnon(_1e258dee5_FnIns*);
inline jule::Bool _1e25908ed_Same(_1e258dee5_FnIns*, jule::Ptr<_1e258dee5_FnIns>);
inline jule::Str _1e2590c0b_GetKindStr(_1e258dee5_FnIns*, jule::Bool);
struct _1e258dee5_FnIns {
	jule::Ptr<_1e253220d_StructIns> _field_Owner = jule::Ptr<_1e253220d_StructIns>();
	jule::Ptr<_1e258b344_Fn> _field_Decl = jule::Ptr<_1e258b344_Fn>();
	jule::Slice<jule::Ptr<_1e313367c_InsGeneric>> _field_Generics = jule::Slice<jule::Ptr<_1e313367c_InsGeneric>>();
	jule::Slice<jule::Ptr<_1e258d126_ParamIns>> _field_Params = jule::Slice<jule::Ptr<_1e258d126_ParamIns>>();
	jule::Ptr<_1e3134da9_TypeKind> _field_Result = jule::Ptr<_1e3134da9_TypeKind>();
	jule::Ptr<_1e31d6c3b_Scope> _field_Scope = jule::Ptr<_1e31d6c3b_Scope>();
	jule::Ptr<_1e2591e60_ReferenceStack> _field_Refers = jule::Ptr<_1e2591e60_ReferenceStack>();
	jule::Bool _field_Anon = jule::Bool();
	jule::Fn<jule::Ptr<_1e310908c_Data>(jule::Ptr<_1e310ab0a_Eval>&,jule::Ptr<_1e251de75_FnCallExpr>&,jule::Ptr<_1e310908c_Data>&)> _field_caller = jule::Fn<jule::Ptr<_1e310908c_Data>(jule::Ptr<_1e310ab0a_Eval>&,jule::Ptr<_1e251de75_FnCallExpr>&,jule::Ptr<_1e310908c_Data>&)>();
	jule::Bool _field_reloaded = jule::Bool();
	

	_1e258dee5_FnIns(void) = default;

	inline bool operator==(_1e258dee5_FnIns _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Params == _other._field_Params &&
			this->_field_Result == _other._field_Result &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Refers == _other._field_Refers &&
			this->_field_Anon == _other._field_Anon &&
			this->_field_caller == _other._field_caller &&
			this->_field_reloaded == _other._field_reloaded;
	}

	inline bool operator!=(_1e258dee5_FnIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e2591e60_ReferenceStack> static__1e25921e6_new(void);
inline jule::I64 _1e259257b_Len(_1e2591e60_ReferenceStack*);
inline jule::Any _1e2592889_At(_1e2591e60_ReferenceStack*, jule::I64);
inline void _1e2592b0e_Push(_1e2591e60_ReferenceStack*, jule::Any);
inline jule::Bool _1e5c52c7c_Exist(_1e2591e60_ReferenceStack*, jule::Ptr<_1e258dee5_FnIns>);
inline jule::Bool _1e5c67577_Exist(_1e2591e60_ReferenceStack*, jule::Ptr<_1e322a147_Var>);
inline jule::Bool _1e5d0c034_Exist(_1e2591e60_ReferenceStack*, jule::Ptr<_1e253220d_StructIns>);
inline jule::Bool _1e60836a6_Exist(_1e2591e60_ReferenceStack*, jule::Ptr<_1e259d246_Trait>);
struct _1e2591e60_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer = jule::Slice<jule::Any>();
	

	_1e2591e60_ReferenceStack(void) = default;

	inline bool operator==(_1e2591e60_ReferenceStack _other) {
		return 
			this->_field_buffer == _other._field_buffer;
	}

	inline bool operator!=(_1e2591e60_ReferenceStack _other) { return !this->operator==(_other); }


};
struct _1e25932c4_Pass {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Str _field_Text = jule::Str();
	

	_1e25932c4_Pass(void) = default;

	inline bool operator==(_1e25932c4_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_1e25932c4_Pass _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e259776d_symbolBuilder> _1e2597c24_getRoot(jule::Ptr<_1e259776d_symbolBuilder>);
inline void _1e25980dc_pushErr(_1e259776d_symbolBuilder*, jule::Ptr<_1d42b43cc_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _1e25984a5_pushErrText(_1e259776d_symbolBuilder*, jule::Ptr<_1d42b43cc_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _1e25987c4_pushSuggestion(_1e259776d_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e2598b7b_checkCppUseDeclPath(_1e259776d_symbolBuilder*, jule::Ptr<_1e252d1c6_UseDecl>&, jule::Str);
inline jule::Ptr<_1e320561c_ImportInfo> _1e2598e56_buildCppHeaderImport(_1e259776d_symbolBuilder*, jule::Ptr<_1e252d1c6_UseDecl>&);
inline jule::Ptr<_1e320561c_ImportInfo> _1e2599264_buildStdImport(_1e259776d_symbolBuilder*, jule::Ptr<_1e252d1c6_UseDecl>&);
inline jule::Ptr<_1e320561c_ImportInfo> _1e2599572_buildIdentImport(jule::Ptr<_1e259776d_symbolBuilder>, jule::Ptr<_1e252d1c6_UseDecl>&);
inline jule::Ptr<_1e320561c_ImportInfo> _1e2599880_buildImport(jule::Ptr<_1e259776d_symbolBuilder>, jule::Ptr<_1e252d1c6_UseDecl>&);
inline jule::Bool _1e2599b8d_checkDuplicateUseDecl(_1e259776d_symbolBuilder*, jule::Ptr<_1e320561c_ImportInfo>&);
inline void _1e2599eac_implImportSelections(_1e259776d_symbolBuilder*, jule::Ptr<_1e320561c_ImportInfo>&, jule::Ptr<_1e252d1c6_UseDecl>&);
inline jule::Str _1e259a2ba_getAsLinkPath(jule::Ptr<_1e259776d_symbolBuilder>, jule::Str);
inline void _1e259a683_pushCycleError(jule::Ptr<_1e259776d_symbolBuilder>, jule::Ptr<_1e259776d_symbolBuilder>&, jule::Str, jule::Str&);
inline void _1e259aa4b_pushCrossCycleError(jule::Ptr<_1e259776d_symbolBuilder>, jule::Ptr<_1e259776d_symbolBuilder>&, jule::Ptr<_1e320561c_ImportInfo>&, jule::Ptr<_1d42b43cc_Token>&);
inline jule::Bool _1e259ae03_checkImportCycles(jule::Ptr<_1e259776d_symbolBuilder>, jule::Ptr<_1e320561c_ImportInfo>, jule::Ptr<_1e252d1c6_UseDecl>&);
inline void _1e259b2dd_checkPackageAccessibility(_1e259776d_symbolBuilder*, jule::Ptr<_1e252d1c6_UseDecl>&, jule::Str&, jule::Str&);
inline jule::Bool _1e259b6a6_importPackage(jule::Ptr<_1e259776d_symbolBuilder>, jule::Ptr<_1e320561c_ImportInfo>&, jule::Ptr<_1e252d1c6_UseDecl>&);
inline jule::Ptr<_1e320561c_ImportInfo> _1e259b9b4_importUseDecl(jule::Ptr<_1e259776d_symbolBuilder>, jule::Ptr<_1e252d1c6_UseDecl>&);
inline void _1e259bb90_importUseDecls(jule::Ptr<_1e259776d_symbolBuilder>);
inline void _1e259be15_appendNode(_1e259776d_symbolBuilder*, _1e24d1a92_Node&);
inline void _1e259c0e1_appendNodes(_1e259776d_symbolBuilder*);
inline void _1e259c366_pushDirectivePass(_1e259776d_symbolBuilder*, jule::Ptr<_1e24d1e8d_Directive>&);
inline void _1e259c542_appendTopDirectives(_1e259776d_symbolBuilder*);
inline void _1e259c71d_build(jule::Ptr<_1e259776d_symbolBuilder>);
struct _1e259776d_symbolBuilder {
	jule::Ptr<_1e259776d_symbolBuilder> _field_owner = jule::Ptr<_1e259776d_symbolBuilder>();
	jule::Trait<_1e3202d89_Importer> _field_importer = jule::Trait<_1e3202d89_Importer>();
	jule::Slice<_20a35491e_Log> _field_errors = jule::Slice<_20a35491e_Log>();
	jule::Ptr<_1e24d0d9e_Ast> _field_ast = jule::Ptr<_1e24d0d9e_Ast>();
	jule::Ptr<_1e310432e_SymbolTable> _field_table = jule::Ptr<_1e310432e_SymbolTable>();
	

	_1e259776d_symbolBuilder(void) = default;

	inline bool operator==(_1e259776d_symbolBuilder _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_importer == _other._field_importer &&
			this->_field_errors == _other._field_errors &&
			this->_field_ast == _other._field_ast &&
			this->_field_table == _other._field_table;
	}

	inline bool operator!=(_1e259776d_symbolBuilder _other) { return !this->operator==(_other); }


};
inline jule::Str _1e259d642_Str(_1e259d246_Trait*);
inline jule::Bool _1e259d950_Equals(jule::Ptr<_1e259d246_Trait>, jule::Ptr<_1e3134da9_TypeKind>);
inline jule::Bool _1e259dcb3_IsBuiltin(_1e259d246_Trait*);
inline jule::Ptr<_1e258b344_Fn> _1e259e0c1_FindMethod(_1e259d246_Trait*, jule::Str);
struct _1e259d246_Trait {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Slice<jule::Ptr<_1e258b344_Fn>> _field_Methods = jule::Slice<jule::Ptr<_1e258b344_Fn>>();
	jule::Slice<jule::Ptr<_1e2505d6e_Struct>> _field_Implemented = jule::Slice<jule::Ptr<_1e2505d6e_Struct>>();
	

	_1e259d246_Trait(void) = default;

	inline bool operator==(_1e259d246_Trait _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Implemented == _other._field_Implemented;
	}

	inline bool operator!=(_1e259d246_Trait _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e259ec81_AutoExpr(_1e259e896_EnumItem*);
struct _1e259e896_EnumItem {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1e310a115_Value> _field_Value = jule::Ptr<_1e310a115_Value>();
	

	_1e259e896_EnumItem(void) = default;

	inline bool operator==(_1e259e896_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1e259e896_EnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1e25a06ee_Str(_1e25a038b_Enum*);
inline jule::Bool _1e25a0a0c_Equals(jule::Ptr<_1e25a038b_Enum>, jule::Ptr<_1e3134da9_TypeKind>);
inline jule::Ptr<_1e259e896_EnumItem> _1e25a0e4c_FindItem(_1e25a038b_Enum*, jule::Str);
struct _1e25a038b_Enum {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1e3139012_TypeSymbol> _field_Kind = jule::Ptr<_1e3139012_TypeSymbol>();
	jule::Slice<jule::Ptr<_1e259e896_EnumItem>> _field_Items = jule::Slice<jule::Ptr<_1e259e896_EnumItem>>();
	

	_1e25a038b_Enum(void) = default;

	inline bool operator==(_1e25a038b_Enum _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Items == _other._field_Items;
	}

	inline bool operator!=(_1e25a038b_Enum _other) { return !this->operator==(_other); }


};
struct _1e25a13c0_TypeEnumItem {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1e3139012_TypeSymbol> _field_Kind = jule::Ptr<_1e3139012_TypeSymbol>();
	

	_1e25a13c0_TypeEnumItem(void) = default;

	inline bool operator==(_1e25a13c0_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1e25a13c0_TypeEnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1e25a1cb6_Str(_1e25a1986_TypeEnum*);
inline jule::Bool _1e25a20c4_Equals(jule::Ptr<_1e25a1986_TypeEnum>, jule::Ptr<_1e3134da9_TypeKind>);
inline jule::Ptr<_1e25a13c0_TypeEnumItem> _1e25a24c0_FindItem(_1e25a1986_TypeEnum*, jule::Str);
struct _1e25a1986_TypeEnum {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_1e25a13c0_TypeEnumItem>> _field_Items = jule::Slice<jule::Ptr<_1e25a13c0_TypeEnumItem>>();
	

	_1e25a1986_TypeEnum(void) = default;

	inline bool operator==(_1e25a1986_TypeEnum _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Items == _other._field_Items;
	}

	inline bool operator!=(_1e25a1986_TypeEnum _other) { return !this->operator==(_other); }


};
inline jule::Fn<jule::Bool(jule::Ptr<_1e320d768_Sema>&,jule::Slice<jule::Ptr<_1e31341b6_TypeAlias>>&)> _1e31d0097_readyFn(jule::Ptr<_1e31ceb68_constraintChecker>);
inline jule::Bool _1e31d030b_readyFi(jule::Ptr<_1e31ceb68_constraintChecker>);
inline jule::Bool _1e31d0570_readySi(jule::Ptr<_1e31ceb68_constraintChecker>);
inline jule::Bool _1e31d07d4_ready(jule::Ptr<_1e31ceb68_constraintChecker>);
inline jule::Bool _1e31d0a48_check(jule::Ptr<_1e31ceb68_constraintChecker>);
struct _1e31ceb68_constraintChecker {
	jule::Ptr<_1e320d768_Sema> _field_s = jule::Ptr<_1e320d768_Sema>();
	jule::Slice<jule::Ptr<_1e2522c6a_GenericDecl>> _field_genericsD = jule::Slice<jule::Ptr<_1e2522c6a_GenericDecl>>();
	jule::Slice<jule::Ptr<_1e313367c_InsGeneric>> _field_generics = jule::Slice<jule::Ptr<_1e313367c_InsGeneric>>();
	jule::Slice<jule::Ptr<_1e31341b6_TypeAlias>> _field_genericsA = jule::Slice<jule::Ptr<_1e31341b6_TypeAlias>>();
	jule::Ptr<_1e258dee5_FnIns> _field_fi = jule::Ptr<_1e258dee5_FnIns>();
	jule::Ptr<_1e253220d_StructIns> _field_si = jule::Ptr<_1e253220d_StructIns>();
	jule::Ptr<_1d42b43cc_Token> _field_et = jule::Ptr<_1d42b43cc_Token>();
	jule::Bool _field_uniq = jule::Bool();
	

	_1e31ceb68_constraintChecker(void) = default;

	inline bool operator==(_1e31ceb68_constraintChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_genericsD == _other._field_genericsD &&
			this->_field_generics == _other._field_generics &&
			this->_field_genericsA == _other._field_genericsA &&
			this->_field_fi == _other._field_fi &&
			this->_field_si == _other._field_si &&
			this->_field_et == _other._field_et &&
			this->_field_uniq == _other._field_uniq;
	}

	inline bool operator!=(_1e31ceb68_constraintChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e31d20cc_IsTraitImpl(_1e31d1bd1_Impl*);
inline jule::Bool _1e31d2341_IsStructImpl(_1e31d1bd1_Impl*);
struct _1e31d1bd1_Impl {
	jule::Ptr<_1e2515686_TypeDecl> _field_Base = jule::Ptr<_1e2515686_TypeDecl>();
	jule::Ptr<_1e2515686_TypeDecl> _field_Dest = jule::Ptr<_1e2515686_TypeDecl>();
	jule::Slice<jule::Ptr<_1e258b344_Fn>> _field_Methods = jule::Slice<jule::Ptr<_1e258b344_Fn>>();
	jule::Slice<jule::Ptr<_1e322a147_Var>> _field_Statics = jule::Slice<jule::Ptr<_1e322a147_Var>>();
	

	_1e31d1bd1_Impl(void) = default;

	inline bool operator==(_1e31d1bd1_Impl _other) {
		return 
			this->_field_Base == _other._field_Base &&
			this->_field_Dest == _other._field_Dest &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Statics == _other._field_Statics;
	}

	inline bool operator!=(_1e31d1bd1_Impl _other) { return !this->operator==(_other); }


};
struct _1e31d6c3b_Scope {
	jule::Ptr<_1e31d6c3b_Scope> _field_Parent = jule::Ptr<_1e31d6c3b_Scope>();
	jule::Bool _field_Unsafety = jule::Bool();
	jule::Bool _field_Deferred = jule::Bool();
	jule::Slice<jule::Any> _field_Stmts = jule::Slice<jule::Any>();
	

	_1e31d6c3b_Scope(void) = default;

	inline bool operator==(_1e31d6c3b_Scope _other) {
		return 
			this->_field_Parent == _other._field_Parent &&
			this->_field_Unsafety == _other._field_Unsafety &&
			this->_field_Deferred == _other._field_Deferred &&
			this->_field_Stmts == _other._field_Stmts;
	}

	inline bool operator!=(_1e31d6c3b_Scope _other) { return !this->operator==(_other); }


};
struct _1e31d7137_If {
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_1e31d6c3b_Scope> _field_Scope = jule::Ptr<_1e31d6c3b_Scope>();
	

	_1e31d7137_If(void) = default;

	inline bool operator==(_1e31d7137_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1e31d7137_If _other) { return !this->operator==(_other); }


};
struct _1e31d7423_Else {
	jule::Ptr<_1e31d6c3b_Scope> _field_Scope = jule::Ptr<_1e31d6c3b_Scope>();
	

	_1e31d7423_Else(void) = default;

	inline bool operator==(_1e31d7423_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1e31d7423_Else _other) { return !this->operator==(_other); }


};
struct _1e31d7797_Conditional {
	jule::Slice<jule::Ptr<_1e31d7137_If>> _field_Elifs = jule::Slice<jule::Ptr<_1e31d7137_If>>();
	jule::Ptr<_1e31d7423_Else> _field_Default = jule::Ptr<_1e31d7423_Else>();
	

	_1e31d7797_Conditional(void) = default;

	inline bool operator==(_1e31d7797_Conditional _other) {
		return 
			this->_field_Elifs == _other._field_Elifs &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1e31d7797_Conditional _other) { return !this->operator==(_other); }


};
struct _1e31d7a83_InfIter {
	jule::Ptr<_1e31d6c3b_Scope> _field_Scope = jule::Ptr<_1e31d6c3b_Scope>();
	

	_1e31d7a83_InfIter(void) = default;

	inline bool operator==(_1e31d7a83_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1e31d7a83_InfIter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e31d839c_IsWhileNext(_1e31d8006_WhileIter*);
struct _1e31d8006_WhileIter {
	jule::Any _field_Expr = jule::Any();
	jule::Any _field_Next = jule::Any();
	jule::Ptr<_1e31d6c3b_Scope> _field_Scope = jule::Ptr<_1e31d6c3b_Scope>();
	

	_1e31d8006_WhileIter(void) = default;

	inline bool operator==(_1e31d8006_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1e31d8006_WhileIter _other) { return !this->operator==(_other); }


};
struct _1e31d88db_RangeIter {
	jule::Ptr<_1e310908c_Data> _field_Expr = jule::Ptr<_1e310908c_Data>();
	jule::Ptr<_1e31d6c3b_Scope> _field_Scope = jule::Ptr<_1e31d6c3b_Scope>();
	jule::Ptr<_1e322a147_Var> _field_KeyA = jule::Ptr<_1e322a147_Var>();
	jule::Ptr<_1e322a147_Var> _field_KeyB = jule::Ptr<_1e322a147_Var>();
	

	_1e31d88db_RangeIter(void) = default;

	inline bool operator==(_1e31d88db_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1e31d88db_RangeIter _other) { return !this->operator==(_other); }


};
struct _1e31d8cd7_ContSt {
	jule::Uintptr _field_It = jule::Uintptr();
	

	_1e31d8cd7_ContSt(void) = default;

	inline bool operator==(_1e31d8cd7_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_1e31d8cd7_ContSt _other) { return !this->operator==(_other); }


};
struct _1e31d918e_BreakSt {
	jule::Uintptr _field_It = jule::Uintptr();
	jule::Uintptr _field_Mtch = jule::Uintptr();
	

	_1e31d918e_BreakSt(void) = default;

	inline bool operator==(_1e31d918e_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_1e31d918e_BreakSt _other) { return !this->operator==(_other); }


};
struct _1e31d947a_Label {
	jule::Str _field_Ident = jule::Str();
	

	_1e31d947a_Label(void) = default;

	inline bool operator==(_1e31d947a_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1e31d947a_Label _other) { return !this->operator==(_other); }


};
struct _1e31d9766_GotoSt {
	jule::Str _field_Ident = jule::Str();
	

	_1e31d9766_GotoSt(void) = default;

	inline bool operator==(_1e31d9766_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1e31d9766_GotoSt _other) { return !this->operator==(_other); }


};
struct _1e31d9b1d_Postfix {
	jule::Any _field_Expr = jule::Any();
	jule::Str _field_Op = jule::Str();
	

	_1e31d9b1d_Postfix(void) = default;

	inline bool operator==(_1e31d9b1d_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1e31d9b1d_Postfix _other) { return !this->operator==(_other); }


};
struct _1e31da091_Assign {
	jule::Ptr<_1e2583c87_OperandExprModel> _field_L = jule::Ptr<_1e2583c87_OperandExprModel>();
	jule::Ptr<_1e2583c87_OperandExprModel> _field_R = jule::Ptr<_1e2583c87_OperandExprModel>();
	jule::Ptr<_1d42b43cc_Token> _field_Op = jule::Ptr<_1d42b43cc_Token>();
	

	_1e31da091_Assign(void) = default;

	inline bool operator==(_1e31da091_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1e31da091_Assign _other) { return !this->operator==(_other); }


};
struct _1e31da448_MultiAssign {
	jule::Slice<jule::Any> _field_L = jule::Slice<jule::Any>();
	jule::Any _field_R = jule::Any();
	

	_1e31da448_MultiAssign(void) = default;

	inline bool operator==(_1e31da448_MultiAssign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R;
	}

	inline bool operator!=(_1e31da448_MultiAssign _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e31dae93_IsGenericTypeMatch(_1e31da987_Match*);
struct _1e31da987_Match {
	jule::Ptr<_1e310908c_Data> _field_Expr = jule::Ptr<_1e310908c_Data>();
	jule::Bool _field_TypeMatch = jule::Bool();
	jule::Slice<jule::Ptr<_1e31db4d2_Case>> _field_Cases = jule::Slice<jule::Ptr<_1e31db4d2_Case>>();
	jule::Ptr<_1e31db4d2_Case> _field_Default = jule::Ptr<_1e31db4d2_Case>();
	

	_1e31da987_Match(void) = default;

	inline bool operator==(_1e31da987_Match _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_TypeMatch == _other._field_TypeMatch &&
			this->_field_Cases == _other._field_Cases &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1e31da987_Match _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e31db79b_isDefault(_1e31db4d2_Case*);
struct _1e31db4d2_Case {
	jule::Ptr<_1e31da987_Match> _field_Owner = jule::Ptr<_1e31da987_Match>();
	jule::Ptr<_1e31d6c3b_Scope> _field_Scope = jule::Ptr<_1e31d6c3b_Scope>();
	jule::Slice<jule::Ptr<_1e310908c_Data>> _field_Exprs = jule::Slice<jule::Ptr<_1e310908c_Data>>();
	jule::Ptr<_1e31db4d2_Case> _field_Next = jule::Ptr<_1e31db4d2_Case>();
	

	_1e31db4d2_Case(void) = default;

	inline bool operator==(_1e31db4d2_Case _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Exprs == _other._field_Exprs &&
			this->_field_Next == _other._field_Next;
	}

	inline bool operator!=(_1e31db4d2_Case _other) { return !this->operator==(_other); }


};
struct _1e31dba87_FallSt {
	jule::Uintptr _field_DestCase = jule::Uintptr();
	

	_1e31dba87_FallSt(void) = default;

	inline bool operator==(_1e31dba87_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_1e31dba87_FallSt _other) { return !this->operator==(_other); }


};
struct _1e31dc00a_RetSt {
	jule::Ptr<_1e258dee5_FnIns> _field_Func = jule::Ptr<_1e258dee5_FnIns>();
	jule::Slice<jule::Ptr<_1e322a147_Var>> _field_Vars = jule::Slice<jule::Ptr<_1e322a147_Var>>();
	jule::Any _field_Expr = jule::Any();
	

	_1e31dc00a_RetSt(void) = default;

	inline bool operator==(_1e31dc00a_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Vars == _other._field_Vars &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e31dc00a_RetSt _other) { return !this->operator==(_other); }


};
struct _1e31dc615_scopeLabel {
	jule::Ptr<_1d42b43cc_Token> _field_token = jule::Ptr<_1d42b43cc_Token>();
	jule::Ptr<_1e31d947a_Label> _field_label = jule::Ptr<_1e31d947a_Label>();
	jule::I64 _field_pos = jule::I64();
	jule::Ptr<_1e31dd89c_scopeChecker> _field_scope = jule::Ptr<_1e31dd89c_scopeChecker>();
	jule::Bool _field_used = jule::Bool();
	

	_1e31dc615_scopeLabel(void) = default;

	inline bool operator==(_1e31dc615_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1e31dc615_scopeLabel _other) { return !this->operator==(_other); }


};
struct _1e31dca88_scopeGoto {
	jule::Ptr<_1e25234c9_GotoSt> _field_gt = jule::Ptr<_1e25234c9_GotoSt>();
	jule::Ptr<_1e31dd89c_scopeChecker> _field_scope = jule::Ptr<_1e31dd89c_scopeChecker>();
	jule::I64 _field_pos = jule::I64();
	

	_1e31dca88_scopeGoto(void) = default;

	inline bool operator==(_1e31dca88_scopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1e31dca88_scopeGoto _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e320561c_ImportInfo> _1e31ddced_FindPackage(_1e31dd89c_scopeChecker*, jule::Str);
inline jule::Ptr<_1e320561c_ImportInfo> _1e31de10b_SelectPackage(_1e31dd89c_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_1e320561c_ImportInfo>)>);
inline jule::Ptr<_1e322a147_Var> _1e31de4b3_FindVar(_1e31dd89c_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1e31341b6_TypeAlias> _1e31de86a_FindTypeAlias(_1e31dd89c_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1e2505d6e_Struct> _1e31dec22_FindStruct(_1e31dd89c_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1e258b344_Fn> _1e31e00c9_FindFn(_1e31dd89c_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1e259d246_Trait> _1e31e03d7_FindTrait(_1e31dd89c_scopeChecker*, jule::Str);
inline jule::Ptr<_1e25a038b_Enum> _1e31e06e5_FindEnum(_1e31dd89c_scopeChecker*, jule::Str);
inline jule::Ptr<_1e25a1986_TypeEnum> _1e31e0a03_FindTypeEnum(_1e31dd89c_scopeChecker*, jule::Str);
inline jule::Bool _1e31e0d33_isUnsafe(jule::Ptr<_1e31dd89c_scopeChecker>);
inline jule::Bool _1e31e1097_isRoot(_1e31dd89c_scopeChecker*);
inline void _1e31e1273_stop(_1e31dd89c_scopeChecker*);
inline jule::Bool _1e31e14d7_stopped(_1e31dd89c_scopeChecker*);
inline jule::Bool _1e31e174b_isDeferred(jule::Ptr<_1e31dd89c_scopeChecker>);
inline jule::Ptr<_1e31dd89c_scopeChecker> _1e31e19b0_getRoot(jule::Ptr<_1e31dd89c_scopeChecker>);
inline jule::Ptr<_1e31dd89c_scopeChecker> _1e31e1c24_getHardRoot(jule::Ptr<_1e31dd89c_scopeChecker>);
inline jule::Ptr<_1e31d947a_Label> _1e31e2032_findLabel(_1e31dd89c_scopeChecker*, jule::Str);
inline jule::Ptr<_1e31dc615_scopeLabel> _1e31e2340_findLabelScope(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Str);
inline jule::Ptr<_1e31dc615_scopeLabel> _1e31e264d_findLabelAll(_1e31dd89c_scopeChecker*, jule::Str);
inline jule::Bool _1e31e2a05_isDuplicatedIdent(_1e31dd89c_scopeChecker*, jule::Uintptr, jule::Str);
inline void _1e31e2c7a_checkVarDecl(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Ptr<_1e2528479_VarDecl>);
inline void _1e31e3000_checkTypeAliasDecl(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Ptr<_1e252bcda_TypeAliasDecl>);
inline jule::Ptr<_1e31d6c3b_Scope> _1e31e3264_getChild(_1e31dd89c_scopeChecker*);
inline void _1e31e362c_checkChildSsc(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Ptr<_1e25259a4_ScopeTree>&, jule::Ptr<_1e31d6c3b_Scope>&, jule::Ptr<_1e31dd89c_scopeChecker>&);
inline jule::Ptr<_1e31d6c3b_Scope> _1e31e39d4_checkChildSc(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Ptr<_1e25259a4_ScopeTree>&, jule::Ptr<_1e31dd89c_scopeChecker>&);
inline jule::Ptr<_1e31d6c3b_Scope> _1e31e3ce2_checkChild(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Ptr<_1e25259a4_ScopeTree>&);
inline void _1e31e4067_checkAnonScope(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Ptr<_1e25259a4_ScopeTree>);
inline void _1e31e4386_processErrorCall(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Ptr<_1e2587c58_BuiltinErrorCallExprModel>&, jule::Ptr<_1d42b43cc_Token>);
inline void _1e31e460b_checkExpr(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Ptr<_1e2519ba7_Expr>);
inline void _1e31e4881_checkCoExpr(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Ptr<_1e251b79c_CoExpr>);
inline jule::Ptr<_1e31d7137_If> _1e31e4b8e_checkIf(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Ptr<_1e252acd9_If>);
inline jule::Ptr<_1e31d7423_Else> _1e31e4e9c_checkElse(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Ptr<_1e252b191_Else>);
inline void _1e31e5222_checkConditional(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Ptr<_1e252b614_Conditional>);
inline void _1e31e5684_checkIterScopeSsc(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Uintptr, jule::Ptr<_1e25259a4_ScopeTree>, jule::Ptr<_1e31d6c3b_Scope>&, jule::Ptr<_1e31dd89c_scopeChecker>);
inline jule::Ptr<_1e31d6c3b_Scope> _1e31e5ad5_checkIterScopeSc(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Uintptr, jule::Ptr<_1e25259a4_ScopeTree>, jule::Ptr<_1e31dd89c_scopeChecker>);
inline jule::Ptr<_1e31d6c3b_Scope> _1e31e5e8c_checkIterScope(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Uintptr, jule::Ptr<_1e25259a4_ScopeTree>&);
inline void _1e31e6212_checkInfIter(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Ptr<_1e2528e91_Iter>&);
inline void _1e31e6487_checkWhileIter(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Ptr<_1e2528e91_Iter>&);
inline void _1e31e670c_checkRangeIter(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Ptr<_1e2528e91_Iter>&);
inline void _1e31e6982_checkIter(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Ptr<_1e2528e91_Iter>);
inline jule::Bool _1e31e6c90_checkValidContLabel(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Uintptr);
inline jule::Bool _1e31e709d_checkValidBreakLabel(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_1e31d8cd7_ContSt> _1e31e73ab_checkContValidScope(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Ptr<_1e252a866_ContSt>);
inline void _1e31e7631_checkCont(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Ptr<_1e252a866_ContSt>);
inline void _1e31e78a6_checkLabel(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Ptr<_1e2523122_LabelSt>);
inline void _1e31e7b2b_pushGoto(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Ptr<_1e25234c9_GotoSt>);
inline void _1e31e7da1_checkPostfix(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Ptr<_1e252440e_AssignSt>);
inline jule::Bool _1e31e81ae_isNewAssignIdent(_1e31dd89c_scopeChecker*, jule::Str);
inline jule::Bool _1e31e8610_checkStructureAssignOp(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Ptr<_1e253220d_StructIns>&, jule::Ptr<_1e252440e_AssignSt>&, jule::Ptr<_1e310908c_Data>&);
inline void _1e31e8885_checkSingleAssign(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Ptr<_1e252440e_AssignSt>&);
inline void _1e31e8db3_processEndPartOfMultiAssign(_1e31dd89c_scopeChecker*, jule::Ptr<_1e31da448_MultiAssign>, jule::Ptr<_1e252440e_AssignSt>, jule::Ptr<_1e2523dc0_AssignLeft>, jule::Ptr<_1e310908c_Data>, jule::Ptr<_1e310908c_Data>);
inline void _1e31e9149_checkRetMultiAssign(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Ptr<_1e252440e_AssignSt>&);
inline void _1e31e93be_checkMultiAssign(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Ptr<_1e252440e_AssignSt>&);
inline void _1e31e9644_checkAssignSt(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Ptr<_1e252440e_AssignSt>);
inline jule::Ptr<_1e31d6c3b_Scope> _1e31e99eb_checkCaseScope(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Ptr<_1e31db4d2_Case>&, jule::Ptr<_1e25259a4_ScopeTree>&);
inline jule::Ptr<_1e31db4d2_Case> _1e31e9ee6_checkCase(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Ptr<_1e31da987_Match>, jule::I64, jule::Ptr<_1e252c25d_Case>, jule::Ptr<_1e310908c_Data>);
inline void _1e31ea3ae_checkCases(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Ptr<_1e252c934_MatchCase>&, jule::Ptr<_1e31da987_Match>, jule::Ptr<_1e310908c_Data>);
inline jule::Ptr<_1e31db4d2_Case> _1e31ea766_checkDefault(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Ptr<_1e31da987_Match>, jule::Ptr<_1e252b191_Else>);
inline void _1e31ea9db_checkComptimePanic(_1e31dd89c_scopeChecker*, jule::Ptr<_1e31d6c3b_Scope>&);
inline void _1e31ead0a_pushTypeMatch(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Ptr<_1e31da987_Match>, jule::Ptr<_1e252c934_MatchCase>&);
inline void _1e31eb080_checkTypeMatch(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Ptr<_1e252c934_MatchCase>&);
inline void _1e31eb305_checkCommonMatch(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Ptr<_1e252c934_MatchCase>&);
inline void _1e31eb57a_checkMatch(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Ptr<_1e252c934_MatchCase>);
inline void _1e31eb800_checkFall(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Ptr<_1e25237b5_FallSt>);
inline jule::Ptr<_1e31d918e_BreakSt> _1e31ebb0d_checkBreakWithLabel(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Ptr<_1e252a4ae_BreakSt>);
inline jule::Ptr<_1e31d918e_BreakSt> _1e31ebe1b_checkPlainBreak(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Ptr<_1e252a4ae_BreakSt>);
inline void _1e31ec191_checkBreak(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Ptr<_1e252a4ae_BreakSt>);
inline void _1e31ec416_checkRet(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Ptr<_1e2528831_RetSt>);
inline void _1e31ec68b_checkUseExpr(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Ptr<_1e251a548_UseExpr>);
inline void _1e31ec911_checkNode(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Any&);
inline void _1e31ecadc_checkResult(jule::Ptr<_1e31dd89c_scopeChecker>);
inline void _1e31eccb8_checkTree(jule::Ptr<_1e31dd89c_scopeChecker>);
inline void _1e31ed0d7_checkGoto(_1e31dd89c_scopeChecker*, jule::Ptr<_1e31dca88_scopeGoto>&, jule::Ptr<_1e31dc615_scopeLabel>&);
inline void _1e31ed2b3_checkGotos(_1e31dd89c_scopeChecker*);
inline void _1e31ed48e_checkLabels(_1e31dd89c_scopeChecker*);
inline void _1e31ed66a_checkVars(_1e31dd89c_scopeChecker*);
inline void _1e31ed846_checkAliases(_1e31dd89c_scopeChecker*);
inline void _1e31edb65_check(jule::Ptr<_1e31dd89c_scopeChecker>, jule::Ptr<_1e25259a4_ScopeTree>&, jule::Ptr<_1e31d6c3b_Scope>&);
inline jule::Ptr<_1e31dd89c_scopeChecker> _1e31eddc9_newChildChecker(jule::Ptr<_1e31dd89c_scopeChecker>);
struct _1e31dd89c_scopeChecker {
	jule::Ptr<_1d42b43cc_Token> _field_calledFrom = jule::Ptr<_1d42b43cc_Token>();
	jule::Ptr<_1e320d768_Sema> _field_s = jule::Ptr<_1e320d768_Sema>();
	jule::Ptr<_1e258dee5_FnIns> _field_owner = jule::Ptr<_1e258dee5_FnIns>();
	jule::Ptr<_1e31dd89c_scopeChecker> _field_parent = jule::Ptr<_1e31dd89c_scopeChecker>();
	jule::I64 _field_childIndex = jule::I64();
	jule::Ptr<_1e310432e_SymbolTable> _field_table = jule::Ptr<_1e310432e_SymbolTable>();
	jule::Ptr<_1e31d6c3b_Scope> _field_scope = jule::Ptr<_1e31d6c3b_Scope>();
	jule::Ptr<_1e25259a4_ScopeTree> _field_tree = jule::Ptr<_1e25259a4_ScopeTree>();
	jule::Ptr<_1e258dee5_FnIns> _field_result = jule::Ptr<_1e258dee5_FnIns>();
	jule::Uintptr _field_it = jule::Uintptr();
	jule::Uintptr _field_cse = jule::Uintptr();
	jule::Ptr<jule::Slice<jule::Ptr<_1e31dc615_scopeLabel>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_1e31dc615_scopeLabel>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_1e31dca88_scopeGoto>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_1e31dca88_scopeGoto>>>();
	jule::I64 _field_i = jule::I64();
	

	_1e31dd89c_scopeChecker(void) = default;

	inline bool operator==(_1e31dd89c_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1e31dd89c_scopeChecker _other) { return !this->operator==(_other); }


};
inline void _1e31eedb9_checkCdef(_1e31ee979_directiveChecker*, jule::Ptr<_1e24d1e8d_Directive>&);
inline void _1e320013e_checkTypedef(_1e31ee979_directiveChecker*, jule::Ptr<_1e24d1e8d_Directive>&);
inline void _1e32003b4_checkDerive(_1e31ee979_directiveChecker*, jule::Ptr<_1e24d1e8d_Directive>&);
inline void _1e3200639_checkNamespace(_1e31ee979_directiveChecker*, jule::Ptr<_1e24d1e8d_Directive>&);
inline void _1e32008ae_checkDeprecated(_1e31ee979_directiveChecker*, jule::Ptr<_1e24d1e8d_Directive>&);
inline void _1e3200b34_checkTest(_1e31ee979_directiveChecker*, jule::Ptr<_1e24d1e8d_Directive>&);
inline void _1e3200da9_checkDirective(_1e31ee979_directiveChecker*, jule::Ptr<_1e24d1e8d_Directive>&);
inline void _1e3201085_check(_1e31ee979_directiveChecker*);
struct _1e31ee979_directiveChecker {
	jule::Ptr<_1e320d768_Sema> _field_s = jule::Ptr<_1e320d768_Sema>();
	jule::Ptr<jule::Slice<jule::Ptr<_1e24d1e8d_Directive>>> _field_d = jule::Ptr<jule::Slice<jule::Ptr<_1e24d1e8d_Directive>>>();
	jule::Any _field_o = jule::Any();
	

	_1e31ee979_directiveChecker(void) = default;

	inline bool operator==(_1e31ee979_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1e31ee979_directiveChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e320561c_ImportInfo> _1e3205b39_FindPackage(_1e320561c_ImportInfo*, jule::Str);
inline jule::Ptr<_1e320561c_ImportInfo> _1e3205e47_SelectPackage(_1e320561c_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_1e320561c_ImportInfo>)>);
inline jule::Ptr<_1e322a147_Var> _1e32062ee_FindVar(_1e320561c_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1e31341b6_TypeAlias> _1e32066a6_FindTypeAlias(_1e320561c_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1e2505d6e_Struct> _1e3206a5d_FindStruct(_1e320561c_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1e258b344_Fn> _1e3206e15_FindFn(_1e320561c_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1e259d246_Trait> _1e3207223_FindTrait(_1e320561c_ImportInfo*, jule::Str);
inline jule::Ptr<_1e25a038b_Enum> _1e3207531_FindEnum(_1e320561c_ImportInfo*, jule::Str);
inline jule::Ptr<_1e25a1986_TypeEnum> _1e320783e_FindTypeEnum(_1e320561c_ImportInfo*, jule::Str);
inline jule::Bool _1e3207bd5_isLookupable(_1e320561c_ImportInfo*, jule::Str);
inline jule::Bool _1e3207ee3_existIdent(_1e320561c_ImportInfo*, jule::Str);
inline jule::Bool _1e3208279_isAccessibleViaSelection(_1e320561c_ImportInfo*);
struct _1e320561c_ImportInfo {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Str _field_Path = jule::Str();
	jule::Str _field_LinkPath = jule::Str();
	jule::Str _field_Ident = jule::Str();
	jule::Str _field_Alias = jule::Str();
	jule::Bool _field_Duplicate = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Std = jule::Bool();
	jule::Bool _field_ImportAll = jule::Bool();
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _field_Selected = jule::Slice<jule::Ptr<_1d42b43cc_Token>>();
	jule::Ptr<_1e3208576_Package> _field_Package = jule::Ptr<_1e3208576_Package>();
	jule::I64 _field_ModId = jule::I64();
	

	_1e320561c_ImportInfo(void) = default;

	inline bool operator==(_1e320561c_ImportInfo _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Path == _other._field_Path &&
			this->_field_LinkPath == _other._field_LinkPath &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Alias == _other._field_Alias &&
			this->_field_Duplicate == _other._field_Duplicate &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Std == _other._field_Std &&
			this->_field_ImportAll == _other._field_ImportAll &&
			this->_field_Selected == _other._field_Selected &&
			this->_field_Package == _other._field_Package &&
			this->_field_ModId == _other._field_ModId;
	}

	inline bool operator!=(_1e320561c_ImportInfo _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e320561c_ImportInfo> _1e3208a4e_FindPackage(_1e3208576_Package*, jule::Str);
inline jule::Ptr<_1e320561c_ImportInfo> _1e3208d5c_SelectPackage(_1e3208576_Package*, jule::Fn<jule::Bool(jule::Ptr<_1e320561c_ImportInfo>)>);
inline jule::Ptr<_1e322a147_Var> _1e3209214_FindVar(_1e3208576_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1e31341b6_TypeAlias> _1e32095bb_FindTypeAlias(_1e3208576_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1e2505d6e_Struct> _1e3209973_FindStruct(_1e3208576_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1e258b344_Fn> _1e3209d2a_FindFn(_1e3208576_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1e259d246_Trait> _1e320a138_FindTrait(_1e3208576_Package*, jule::Str);
inline jule::Ptr<_1e25a038b_Enum> _1e320a446_FindEnum(_1e3208576_Package*, jule::Str);
inline jule::Ptr<_1e25a1986_TypeEnum> _1e320a754_FindTypeEnum(_1e3208576_Package*, jule::Str);
struct _1e3208576_Package {
	jule::Slice<jule::Ptr<_1e310432e_SymbolTable>> _field_Files = jule::Slice<jule::Ptr<_1e310432e_SymbolTable>>();
	

	_1e3208576_Package(void) = default;

	inline bool operator==(_1e3208576_Package _other) {
		return 
			this->_field_Files == _other._field_Files;
	}

	inline bool operator!=(_1e3208576_Package _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e320561c_ImportInfo> _1e320dc85_FindPackage(_1e320d768_Sema*, jule::Str);
inline jule::Ptr<_1e320561c_ImportInfo> _1e320e093_SelectPackage(_1e320d768_Sema*, jule::Fn<jule::Bool(jule::Ptr<_1e320561c_ImportInfo>)>);
inline jule::Ptr<_1e322a147_Var> _1e320e44a_FindVar(_1e320d768_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1e31341b6_TypeAlias> _1e320e802_FindTypeAlias(_1e320d768_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1e2505d6e_Struct> _1e320eba9_FindStruct(_1e320d768_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1e258b344_Fn> _1e3210061_FindFn(_1e320d768_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1e259d246_Trait> _1e321036e_FindTrait(_1e320d768_Sema*, jule::Str);
inline jule::Ptr<_1e25a038b_Enum> _1e321067c_FindEnum(_1e320d768_Sema*, jule::Str);
inline jule::Ptr<_1e25a1986_TypeEnum> _1e321098a_FindTypeEnum(_1e320d768_Sema*, jule::Str);
inline jule::Bool _1e3210cdc_isFlag(_1e320d768_Sema*, jule::I64);
inline void _1e3211062_setCurrentFile(_1e320d768_Sema*, jule::Ptr<_1e310432e_SymbolTable>);
inline void _1e321142a_pushErr(_1e320d768_Sema*, jule::Ptr<_1d42b43cc_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e3211749_pushSugggestion(_1e320d768_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e3211b01_isAccessibleDefine(_1e320d768_Sema*, jule::Bool, jule::Ptr<_1d42b43cc_Token>);
inline jule::Bool _1e3212052_isDuplicatedIdent(_1e320d768_Sema*, jule::Uintptr, jule::Str, jule::Bool);
inline void _1e3212371_checkDirectives(jule::Ptr<_1e320d768_Sema>, jule::Slice<jule::Ptr<_1e24d1e8d_Directive>>&, jule::Any);
inline jule::Bool _1e32127c2_checkGenericQuantity(_1e320d768_Sema*, jule::I64, jule::I64, jule::Ptr<_1d42b43cc_Token>);
inline jule::Bool _1e3212b9b_isDuplicatedImportSelection(_1e320d768_Sema*, jule::Uintptr, jule::Str);
inline jule::Any _1e3213064_getImportDef(_1e320d768_Sema*, jule::Str, jule::Ptr<_1e320561c_ImportInfo>&);
inline jule::Bool _1e3213372_checkImportSelections(_1e320d768_Sema*, jule::Ptr<_1e320561c_ImportInfo>&);
inline jule::Bool _1e3213680_isUseAliasDuplication(_1e320d768_Sema*, jule::Ptr<_1e320561c_ImportInfo>&);
inline jule::Bool _1e321398d_checkImport(_1e320d768_Sema*, jule::Ptr<_1e320561c_ImportInfo>&);
inline void _1e3213b69_checkImports(_1e320d768_Sema*);
inline void _1e3213d45_implFileImpls(jule::Ptr<_1e320d768_Sema>);
inline void _1e3214021_implImpls(jule::Ptr<_1e320d768_Sema>);
inline void _1e32141ec_checkEnums(jule::Ptr<_1e320d768_Sema>);
inline jule::Ptr<_1e3134da9_TypeKind> _1e32146e7_buildTypeWithRefers(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e2515686_TypeDecl>&, jule::Trait<_1e315091e_Lookup>, jule::Slice<jule::Ptr<_1e31341b6_TypeAlias>>, jule::Ptr<_1e31425c0_referencer>);
inline jule::Bool _1e3214be2_checkTypeWithRefers(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e3139012_TypeSymbol>&, jule::Trait<_1e315091e_Lookup>, jule::Slice<jule::Ptr<_1e31341b6_TypeAlias>>, jule::Ptr<_1e31425c0_referencer>);
inline jule::Ptr<_1e31ceb68_constraintChecker> _1e3214e56_constraintChecker(jule::Ptr<_1e320d768_Sema>);
inline jule::Bool _1e321530d_checkType(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e3139012_TypeSymbol>&, jule::Trait<_1e315091e_Lookup>);
inline jule::Ptr<_1e3134da9_TypeKind> _1e321575e_buildTypeWithGenerics(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e2515686_TypeDecl>&, jule::Slice<jule::Ptr<_1e31341b6_TypeAlias>>, jule::Ptr<_1e2591e60_ReferenceStack>);
inline jule::Ptr<_1e3134da9_TypeKind> _1e3215a6c_buildType(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e2515686_TypeDecl>&);
inline jule::Ptr<_1e3134da9_TypeKind> _1e3215d7a_selectType(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e2515686_TypeDecl>&);
inline jule::Ptr<_1e310ab0a_Eval> _1e32162cb_evalpd(jule::Ptr<_1e320d768_Sema>, jule::Trait<_1e315091e_Lookup>, jule::Ptr<_1e3134da9_TypeKind>, jule::Ptr<_1e322a147_Var>);
inline jule::Ptr<_1e310ab0a_Eval> _1e3216683_evalp(jule::Ptr<_1e320d768_Sema>, jule::Trait<_1e315091e_Lookup>, jule::Ptr<_1e3134da9_TypeKind>);
inline jule::Ptr<_1e310ab0a_Eval> _1e3216991_eval(jule::Ptr<_1e320d768_Sema>, jule::Trait<_1e315091e_Lookup>);
inline jule::Bool _1e3216e8b_checkAssignType(jule::Ptr<_1e320d768_Sema>, jule::Bool, jule::Ptr<_1e3134da9_TypeKind>&, jule::Ptr<_1e310908c_Data>&, jule::Ptr<_1d42b43cc_Token>);
inline jule::Bool _1e32173dc_checkTypeCompatibility(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e3134da9_TypeKind>&, jule::Ptr<_1e3134da9_TypeKind>&, jule::Ptr<_1d42b43cc_Token>&);
inline jule::Ptr<_1e3134da9_TypeKind> _1e32177b6_buildNonGenericTypeKind(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e2515686_TypeDecl>&, jule::Slice<jule::Ptr<_1e2522c6a_GenericDecl>>&);
inline void _1e3217a6e_buildFnNonGenericTypeKinds(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e258dee5_FnIns>&);
inline jule::Ptr<_1e258dee5_FnIns> _1e3217d8d_getTraitCheckFnKind(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e258b344_Fn>&);
inline jule::Bool _1e32182de_checkConstraintsFn(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e258dee5_FnIns>&, jule::Ptr<_1d42b43cc_Token>&, jule::Ptr<_1e258dee5_FnIns>);
inline jule::Bool _1e3218740_checkConstraintsStruct(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e253220d_StructIns>&, jule::Ptr<_1d42b43cc_Token>&, jule::Ptr<_1e253220d_StructIns>);
inline jule::Bool _1e3218ae7_fnEnvironment(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e258dee5_FnIns>&, jule::Fn<jule::Bool(jule::Ptr<_1e320d768_Sema>&,jule::Slice<jule::Ptr<_1e31341b6_TypeAlias>>&)>);
inline void _1e3218d6c_checkFnParamKind(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e258d126_ParamIns>&);
inline jule::Bool _1e321917a_reloadFnInsTypes(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e258dee5_FnIns>);
inline jule::Bool _1e32195ed_checkRefValidityForInitExpr(jule::Ptr<_1e320d768_Sema>, jule::Bool, jule::Ptr<_1e310908c_Data>&, jule::Ptr<_1d42b43cc_Token>&);
inline jule::Bool _1e3219bc5_checkValidityForInitExpr(jule::Ptr<_1e320d768_Sema>, jule::Bool, jule::Bool, jule::Ptr<_1e3134da9_TypeKind>&, jule::Ptr<_1e310908c_Data>&, jule::Ptr<_1d42b43cc_Token>&);
inline jule::Bool _1e321a08d_checkTypeAliasDeclKind(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e31341b6_TypeAlias>&, jule::Trait<_1e315091e_Lookup>);
inline void _1e321a3ac_checkTypeAliasDecl(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e31341b6_TypeAlias>&, jule::Trait<_1e315091e_Lookup>);
inline void _1e321a632_checkTypeAliasDeclDup(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e31341b6_TypeAlias>&);
inline jule::Bool _1e321a896_checkTypeAliasDecls(jule::Ptr<_1e320d768_Sema>);
inline void _1e5968201_checkEnumItemsDup(_1e320d768_Sema*, jule::Slice<jule::Ptr<_1e259e896_EnumItem>>);
inline void _1e5973a25_checkEnumItemsDup(_1e320d768_Sema*, jule::Slice<jule::Ptr<_1e25a13c0_TypeEnumItem>>);
inline void _1e321ad91_checkEnumItemsStr(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e25a038b_Enum>&);
inline void _1e321b116_checkEnumItemsInt(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e25a038b_Enum>&);
inline void _1e321b38b_checkEnumDecl(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e25a038b_Enum>&);
inline void _1e321b611_checkTypeEnumDecl(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e25a1986_TypeEnum>&);
inline jule::Bool _1e321b875_checkEnumDecls(jule::Ptr<_1e320d768_Sema>);
inline jule::Bool _1e321bad9_checkTypeEnumDecls(jule::Ptr<_1e320d768_Sema>);
inline jule::Bool _1e321bde7_checkDeclGenerics(_1e320d768_Sema*, jule::Slice<jule::Ptr<_1e2522c6a_GenericDecl>>&);
inline jule::Bool _1e321c205_checkFnDeclParamsDup(_1e320d768_Sema*, jule::Ptr<_1e258b344_Fn>&);
inline jule::Bool _1e321c513_checkFnDeclResultDup(_1e320d768_Sema*, jule::Ptr<_1e258b344_Fn>&);
inline void _1e321c788_checkFnDeclPrototype(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e258b344_Fn>&);
inline void _1e321ca0d_checkTraitDeclMethod(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e258b344_Fn>&);
inline void _1e321cc83_checkTraitDeclMethods(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e259d246_Trait>&);
inline void _1e321d008_checkTraitDecl(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e259d246_Trait>&);
inline jule::Bool _1e321d26c_checkTraitDecls(jule::Ptr<_1e320d768_Sema>);
inline jule::Bool _1e321d624_checkTraitImplMethods(_1e320d768_Sema*, jule::Ptr<_1e259d246_Trait>&, jule::Ptr<_1e31d1bd1_Impl>&);
inline jule::Bool _1e321d9cb_implToStruct(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e2505d6e_Struct>&, jule::Ptr<_1e31d1bd1_Impl>&);
inline void _1e321dc51_implTrait(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e31d1bd1_Impl>&);
inline void _1e321dec6_implStruct(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e31d1bd1_Impl>&);
inline void _1e321e24b_implImpl(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e31d1bd1_Impl>&);
inline void _1e321e56a_checkVarDecl(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e322a147_Var>&, jule::Trait<_1e315091e_Lookup>);
inline void _1e321e7e0_checkGlobalVarDecl(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e322a147_Var>&);
inline jule::Bool _1e321ea54_checkGlobalDecls(jule::Ptr<_1e320d768_Sema>);
inline jule::Bool _1e321ee0b_checkStructTraitImpl(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e2505d6e_Struct>&, jule::Ptr<_1e259d246_Trait>&);
inline jule::Bool _1e3220219_checkStructImpls(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e2505d6e_Struct>&);
inline jule::Bool _1e3220527_checkStructFields(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e2505d6e_Struct>&);
inline void _1e322079c_checkStructDecl(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e2505d6e_Struct>&);
inline jule::Bool _1e3220a11_checkStructDecls(jule::Ptr<_1e320d768_Sema>);
inline void _1e3220c86_checkFnDecl(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e258b344_Fn>&);
inline jule::Bool _1e3220eea_checkFnDecls(jule::Ptr<_1e320d768_Sema>);
inline void _1e32213b3_pushCycleError(_1e320d768_Sema*, jule::Ptr<_1e2505d6e_Struct>&, jule::Ptr<_1e2505d6e_Struct>&, jule::Str&);
inline jule::Bool _1e3221814_checkCrossCycle(_1e320d768_Sema*, jule::Ptr<_1e2505d6e_Struct>&, jule::Ptr<_1e2505d6e_Struct>&, jule::Str&);
inline jule::Bool _1e3221c87_checkStructDeriveIllegalCycles(_1e320d768_Sema*, jule::Str, jule::Ptr<_1e2505d6e_Struct>&, jule::Ptr<_1e3134da9_TypeKind>&);
inline jule::Bool _1e32220c8_checkStructInsDeriveClone(_1e320d768_Sema*, jule::Ptr<_1e253220d_StructIns>);
inline void _1e32222b5_checkPackageDecls(jule::Ptr<_1e320d768_Sema>);
inline void _1e3222606_checkDataForTypeInference(_1e320d768_Sema*, jule::Ptr<_1e310908c_Data>&, jule::Ptr<_1d42b43cc_Token>&);
inline void _1e322288c_checkVar(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e322a147_Var>&);
inline void _1e3222bab_checkTypeVar(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e322a147_Var>&, jule::Trait<_1e315091e_Lookup>);
inline void _1e3222d87_checkGlobalTypes(jule::Ptr<_1e320d768_Sema>);
inline jule::Ptr<_1e258dee5_FnIns> _1e322323e_readyToCheckFn(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e253220d_StructIns>&, jule::Ptr<_1e258b344_Fn>&);
inline void _1e322355d_checkTypeMethod(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e253220d_StructIns>&, jule::Ptr<_1e258b344_Fn>&);
inline jule::Ptr<_1e258dee5_FnIns> _1e32239ae_checkStructInsOp(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e253220d_StructIns>&, jule::Ptr<_1e258b344_Fn>&, jule::Fn<jule::Bool(jule::Ptr<_1e258b344_Fn>)>);
inline jule::Bool _1e3223d66_checkStructEnv(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e253220d_StructIns>&, jule::Ptr<_1d42b43cc_Token>);
inline jule::Bool _1e322421d_precheckStructIns(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e253220d_StructIns>&, jule::Ptr<_1d42b43cc_Token>);
inline void _1e3224493_checkStructIns(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e253220d_StructIns>&);
inline void _1e3224718_checkTypeStruct(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e2505d6e_Struct>&);
inline void _1e32248e4_checkStructTypes(jule::Ptr<_1e320d768_Sema>);
inline void _1e3224b8b_checkStructInsOperators(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e253220d_StructIns>);
inline void _1e3224e22_precheckStructType(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e2505d6e_Struct>&);
inline void _1e32250ed_precheckStructTypes(jule::Ptr<_1e320d768_Sema>);
inline void _1e3225373_checkRets(_1e320d768_Sema*, jule::Ptr<_1e258dee5_FnIns>&);
inline void _1e3225692_checkFnInsSc(_1e320d768_Sema*, jule::Ptr<_1e258dee5_FnIns>&, jule::Ptr<_1e31dd89c_scopeChecker>&);
inline void _1e32259b1_checkFnInsCaller(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e258dee5_FnIns>&, jule::Ptr<_1d42b43cc_Token>);
inline void _1e3225c36_checkFnIns(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e258dee5_FnIns>&);
inline void _1e3225eab_checkTypeFn(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e258b344_Fn>&);
inline void _1e3226231_checkTestFn(_1e320d768_Sema*, jule::Ptr<_1e258dee5_FnIns>&);
inline void _1e32264a6_precheckTypeFn(jule::Ptr<_1e320d768_Sema>, jule::Ptr<_1e258b344_Fn>&);
inline void _1e3226682_precheckFnTypes(jule::Ptr<_1e320d768_Sema>);
inline void _1e322685d_checkFnTypes(jule::Ptr<_1e320d768_Sema>);
inline void _1e3226a39_checkPackageTypes(jule::Ptr<_1e320d768_Sema>);
inline void _1e3226c15_setFileSemaFields(jule::Ptr<_1e320d768_Sema>);
inline void _1e3226de1_setSemaFields(jule::Ptr<_1e320d768_Sema>);
inline void _1e3227166_check(jule::Ptr<_1e320d768_Sema>, jule::Slice<jule::Ptr<_1e310432e_SymbolTable>>&);
struct _1e320d768_Sema {
	jule::Slice<_20a35491e_Log> _field_errors = jule::Slice<_20a35491e_Log>();
	jule::Slice<jule::Ptr<_1e310432e_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_1e310432e_SymbolTable>>();
	jule::Ptr<_1e310432e_SymbolTable> _field_file = jule::Ptr<_1e310432e_SymbolTable>();
	jule::I64 _field_flags = 0LL;
	

	_1e320d768_Sema(void) = default;

	inline bool operator==(_1e320d768_Sema _other) {
		return 
			this->_field_errors == _other._field_errors &&
			this->_field_files == _other._field_files &&
			this->_field_file == _other._field_file &&
			this->_field_flags == _other._field_flags;
	}

	inline bool operator!=(_1e320d768_Sema _other) { return !this->operator==(_other); }


};
inline _1e322751d_missingRetChecker static__1e32278d6_new(void);
inline jule::Bool _1e3227bb1_checkConditional(_1e322751d_missingRetChecker*, jule::Ptr<_1e31d7797_Conditional>);
inline jule::Bool _1e3227ebe_checkMatch(_1e322751d_missingRetChecker*, jule::Ptr<_1e31da987_Match>);
inline jule::Bool _1e32282cc_checkInfIter(_1e322751d_missingRetChecker*, jule::Ptr<_1e31d7a83_InfIter>);
inline jule::Bool _1e32285da_checkScope(_1e322751d_missingRetChecker*, jule::Ptr<_1e31d6c3b_Scope>);
inline jule::Bool _1e32288e8_check(_1e322751d_missingRetChecker*, jule::Ptr<_1e31d6c3b_Scope>);
struct _1e322751d_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked = jule::Slice<jule::Uintptr>();
	jule::Bool _field_falled = jule::Bool();
	

	_1e322751d_missingRetChecker(void) = default;

	inline bool operator==(_1e322751d_missingRetChecker _other) {
		return 
			this->_field_breaked == _other._field_breaked &&
			this->_field_falled == _other._field_falled;
	}

	inline bool operator!=(_1e322751d_missingRetChecker _other) { return !this->operator==(_other); }


};
struct _1e32291ce_IterRelation {
	jule::Ptr<_1e322a147_Var> _field_Range = jule::Ptr<_1e322a147_Var>();
	

	_1e32291ce_IterRelation(void) = default;

	inline bool operator==(_1e32291ce_IterRelation _other) {
		return 
			this->_field_Range == _other._field_Range;
	}

	inline bool operator!=(_1e32291ce_IterRelation _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e322a4ee_IsInitialized(_1e322a147_Var*);
inline jule::Bool _1e322a763_IsTypeInferred(_1e322a147_Var*);
struct _1e322a147_Var {
	jule::Ptr<_1e31d6c3b_Scope> _field_Scope = jule::Ptr<_1e31d6c3b_Scope>();
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Constant = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Used = jule::Bool();
	jule::Bool _field_Statically = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Ptr<_1e3139012_TypeSymbol> _field_Kind = jule::Ptr<_1e3139012_TypeSymbol>();
	jule::Ptr<_1e310a115_Value> _field_Value = jule::Ptr<_1e310a115_Value>();
	jule::Ptr<_1e2591e60_ReferenceStack> _field_Refers = jule::Ptr<_1e2591e60_ReferenceStack>();
	jule::Slice<jule::Ptr<_1e24d1e8d_Directive>> _field_Directives = jule::Slice<jule::Ptr<_1e24d1e8d_Directive>>();
	jule::Ptr<_1e32291ce_IterRelation> _field_IterRelation = jule::Ptr<_1e32291ce_IterRelation>();
	jule::Slice<jule::Ptr<_1e322a147_Var>> _field_Depends = jule::Slice<jule::Ptr<_1e322a147_Var>>();
	

	_1e322a147_Var(void) = default;

	inline bool operator==(_1e322a147_Var _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Constant == _other._field_Constant &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Public == _other._field_Public &&
			this->_field_Used == _other._field_Used &&
			this->_field_Statically == _other._field_Statically &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Value == _other._field_Value &&
			this->_field_Refers == _other._field_Refers &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_IterRelation == _other._field_IterRelation &&
			this->_field_Depends == _other._field_Depends;
	}

	inline bool operator!=(_1e322a147_Var _other) { return !this->operator==(_other); }


};
inline jule::Bool static__1e322b2e1_Dispose(jule::Ptr<_1e258b344_Fn>);
inline jule::Bool static__1e322b588_Str(jule::Ptr<_1e258b344_Fn>);
inline jule::Bool static__1e322b8c9_logical(jule::Ptr<_1e258b344_Fn>&, jule::Str);
inline jule::Bool static__1e322bb71_Eq(jule::Ptr<_1e258b344_Fn>);
inline jule::Bool static__1e322be18_Gt(jule::Ptr<_1e258b344_Fn>);
inline jule::Bool static__1e322c1b0_GtEq(jule::Ptr<_1e258b344_Fn>);
inline jule::Bool static__1e322c457_Lt(jule::Ptr<_1e258b344_Fn>);
inline jule::Bool static__1e322c6ee_LtEq(jule::Ptr<_1e258b344_Fn>);
inline jule::Bool static__1e322ca40_result(jule::Ptr<_1e258b344_Fn>&, jule::Str);
inline jule::Bool static__1e322ccd7_Shl(jule::Ptr<_1e258b344_Fn>);
inline jule::Bool static__1e322d07e_Shr(jule::Ptr<_1e258b344_Fn>);
inline jule::Bool static__1e322d326_Add(jule::Ptr<_1e258b344_Fn>);
inline jule::Bool static__1e322d5bd_Sub(jule::Ptr<_1e258b344_Fn>);
inline jule::Bool static__1e322d865_Div(jule::Ptr<_1e258b344_Fn>);
inline jule::Bool static__1e322db0c_Mul(jule::Ptr<_1e258b344_Fn>);
inline jule::Bool static__1e322dda4_Mod(jule::Ptr<_1e258b344_Fn>);
inline jule::Bool static__1e322e14b_BitAnd(jule::Ptr<_1e258b344_Fn>);
inline jule::Bool static__1e322e3e3_BitOr(jule::Ptr<_1e258b344_Fn>);
inline jule::Bool static__1e322e68a_BitXor(jule::Ptr<_1e258b344_Fn>);
inline jule::Bool static__1e322e9cb_unary(jule::Ptr<_1e258b344_Fn>&, jule::Str);
inline jule::Bool static__1e322ec73_Neg(jule::Ptr<_1e258b344_Fn>);
inline jule::Bool static__1e323001a_Pos(jule::Ptr<_1e258b344_Fn>);
inline jule::Bool static__1e32302b2_BitNot(jule::Ptr<_1e258b344_Fn>);
inline jule::Bool static__1e3230603_assign(jule::Ptr<_1e258b344_Fn>&, jule::Str);
inline jule::Bool static__1e323089a_AddAssign(jule::Ptr<_1e258b344_Fn>);
inline jule::Bool static__1e3230b42_SubAssign(jule::Ptr<_1e258b344_Fn>);
inline jule::Bool static__1e3230dd9_DivAssign(jule::Ptr<_1e258b344_Fn>);
inline jule::Bool static__1e3231181_MulAssign(jule::Ptr<_1e258b344_Fn>);
inline jule::Bool static__1e3231428_ModAssign(jule::Ptr<_1e258b344_Fn>);
inline jule::Bool static__1e32316c0_ShlAssign(jule::Ptr<_1e258b344_Fn>);
inline jule::Bool static__1e3231967_ShrAssign(jule::Ptr<_1e258b344_Fn>);
inline jule::Bool static__1e3231c0e_BitOrAssign(jule::Ptr<_1e258b344_Fn>);
inline jule::Bool static__1e3231ea6_BitAndAssign(jule::Ptr<_1e258b344_Fn>);
inline jule::Bool static__1e323224d_BitXorAssign(jule::Ptr<_1e258b344_Fn>);
struct _1e322ab70_FuncPattern {
	

	_1e322ab70_FuncPattern(void) = default;

	inline bool operator==(_1e322ab70_FuncPattern _other) { return true; }

	inline bool operator!=(_1e322ab70_FuncPattern _other) { return !this->operator==(_other); }


};
inline void _1e30e3351_pushErr(_1e30e2e55_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e30e35b5_checkTrait(_1e30e2e55_typeCompatibilityChecker*);
inline jule::Bool _1e30e3829_checkPtr(_1e30e2e55_typeCompatibilityChecker*);
inline jule::Bool _1e30e3a8d_checkPrim(_1e30e2e55_typeCompatibilityChecker*);
inline jule::Bool _1e30e3e45_typeEnum(_1e30e2e55_typeCompatibilityChecker*, jule::Ptr<_1e25a1986_TypeEnum>&, jule::Ptr<_1e3134da9_TypeKind>&);
inline jule::Bool _1e30e41a9_checkTypeEnum(_1e30e2e55_typeCompatibilityChecker*);
inline jule::Bool _1e30e441d_check(_1e30e2e55_typeCompatibilityChecker*);
struct _1e30e2e55_typeCompatibilityChecker {
	jule::Ptr<_1e320d768_Sema> _field_s = jule::Ptr<_1e320d768_Sema>();
	jule::Ptr<_1e3134da9_TypeKind> _field_dest = jule::Ptr<_1e3134da9_TypeKind>();
	jule::Ptr<_1e3134da9_TypeKind> _field_src = jule::Ptr<_1e3134da9_TypeKind>();
	jule::Ptr<_1d42b43cc_Token> _field_errorToken = jule::Ptr<_1d42b43cc_Token>();
	

	_1e30e2e55_typeCompatibilityChecker(void) = default;

	inline bool operator==(_1e30e2e55_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1e30e2e55_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
inline void _1e30e4dbe_pushErr(_1e30e495c_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e30e5133_checkValidity(_1e30e495c_assignTypeChecker*);
inline jule::Bool _1e30e5397_checkConst(_1e30e495c_assignTypeChecker*);
inline jule::Bool _1e30e560b_isPrim(_1e30e495c_assignTypeChecker*);
inline jule::Bool _1e30e5870_checkCompatibility(_1e30e495c_assignTypeChecker*);
inline jule::Bool _1e30e5ad4_check(_1e30e495c_assignTypeChecker*);
struct _1e30e495c_assignTypeChecker {
	jule::Ptr<_1e320d768_Sema> _field_s = jule::Ptr<_1e320d768_Sema>();
	jule::Ptr<_1e3134da9_TypeKind> _field_dest = jule::Ptr<_1e3134da9_TypeKind>();
	jule::Ptr<_1e310908c_Data> _field_d = jule::Ptr<_1e310908c_Data>();
	jule::Ptr<_1d42b43cc_Token> _field_errorToken = jule::Ptr<_1d42b43cc_Token>();
	

	_1e30e495c_assignTypeChecker(void) = default;

	inline bool operator==(_1e30e495c_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1e30e495c_assignTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e5b0db8d_annotateConstraintElem(_1e30e6376_dynamicTypeAnnotation*, jule::Ptr<_1e3134da9_TypeKind>&);
inline jule::Bool _1e5b0d2ca_annotateConstraintElem(_1e30e6376_dynamicTypeAnnotation*, jule::Ptr<_1e3134da9_TypeKind>&);
inline jule::Bool _1e5b10552_annotateConstraintElem(_1e30e6376_dynamicTypeAnnotation*, jule::Ptr<_1e3134da9_TypeKind>&);
inline jule::Bool _1e5b16657_annotateConstraintElem(_1e30e6376_dynamicTypeAnnotation*, jule::Ptr<_1e3134da9_TypeKind>&);
inline jule::Bool _1e30e6c5b_annotateConstraintMap(_1e30e6376_dynamicTypeAnnotation*, jule::Ptr<_1e3134da9_TypeKind>&);
inline jule::Bool _1e30e7069_annotateConstraintTup(_1e30e6376_dynamicTypeAnnotation*, jule::Ptr<_1e3134da9_TypeKind>&);
inline jule::Bool _1e30e7377_annotateConstraintFn(_1e30e6376_dynamicTypeAnnotation*, jule::Ptr<_1e3134da9_TypeKind>&);
inline jule::Bool _1e30e76a7_annotateConstraintIdent(_1e30e6376_dynamicTypeAnnotation*, jule::Ptr<_1e3134da9_TypeKind>&);
inline jule::Bool _1e30e79c6_annotateConstraint(_1e30e6376_dynamicTypeAnnotation*, jule::Ptr<_1e3134da9_TypeKind>&);
inline void _1e30e7ce5_pushGeneric(_1e30e6376_dynamicTypeAnnotation*, jule::Ptr<_1e3134da9_TypeKind>&, jule::I64);
inline jule::Bool _1e30e8103_annotatePrim(_1e30e6376_dynamicTypeAnnotation*, jule::Ptr<_1e3134da9_TypeKind>&);
inline jule::Bool _1e30e8411_annotateArr(_1e30e6376_dynamicTypeAnnotation*, jule::Ptr<_1e3134da9_TypeKind>&);
inline jule::Bool _1e30e871e_annotateSlc(_1e30e6376_dynamicTypeAnnotation*, jule::Ptr<_1e3134da9_TypeKind>&);
inline jule::Bool _1e30e8ac6_checkMapKey(_1e30e6376_dynamicTypeAnnotation*, jule::Ptr<_1e3134da9_TypeKind>*, jule::Ptr<_1e3134da9_TypeKind>&);
inline jule::Bool _1e30e8dd4_annotateMap(_1e30e6376_dynamicTypeAnnotation*, jule::Ptr<_1e3134da9_TypeKind>&);
inline jule::Bool _1e30e91e2_annotateFn(_1e30e6376_dynamicTypeAnnotation*, jule::Ptr<_1e3134da9_TypeKind>&);
inline jule::Bool _1e30e9500_annotatePtr(_1e30e6376_dynamicTypeAnnotation*, jule::Ptr<_1e3134da9_TypeKind>&);
inline jule::Bool _1e30e980d_annotateSptr(_1e30e6376_dynamicTypeAnnotation*, jule::Ptr<_1e3134da9_TypeKind>&);
inline jule::Bool _1e30e9b1b_annotateStruct(_1e30e6376_dynamicTypeAnnotation*, jule::Ptr<_1e3134da9_TypeKind>&);
inline jule::Bool _1e30e9e29_annotateAny(_1e30e6376_dynamicTypeAnnotation*, jule::Ptr<_1e3134da9_TypeKind>&);
inline jule::Bool _1e30ea237_annotateKind(_1e30e6376_dynamicTypeAnnotation*, jule::Ptr<_1e3134da9_TypeKind>&);
inline jule::Bool _1e30ea49b_annotate(_1e30e6376_dynamicTypeAnnotation*);
struct _1e30e6376_dynamicTypeAnnotation {
	jule::Ptr<_1e310ab0a_Eval> _field_e = jule::Ptr<_1e310ab0a_Eval>();
	jule::Ptr<_1e258dee5_FnIns> _field_f = jule::Ptr<_1e258dee5_FnIns>();
	jule::Ptr<_1e258d126_ParamIns> _field_p = jule::Ptr<_1e258d126_ParamIns>();
	jule::Ptr<_1e310908c_Data> _field_a = jule::Ptr<_1e310908c_Data>();
	jule::Ptr<_1d42b43cc_Token> _field_errorToken = jule::Ptr<_1d42b43cc_Token>();
	jule::Ptr<_1e3134da9_TypeKind>* _field_k = nullptr;
	jule::Ptr<_1e2515686_TypeDecl> _field_c = jule::Ptr<_1e2515686_TypeDecl>();
	

	_1e30e6376_dynamicTypeAnnotation(void) = default;

	inline bool operator==(_1e30e6376_dynamicTypeAnnotation _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_f == _other._field_f &&
			this->_field_p == _other._field_p &&
			this->_field_a == _other._field_a &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_k == _other._field_k &&
			this->_field_c == _other._field_c;
	}

	inline bool operator!=(_1e30e6376_dynamicTypeAnnotation _other) { return !this->operator==(_other); }


};
inline void _1e30eb1c2_pushErrToken(_1e30eab72_fnCallArgChecker*, jule::Ptr<_1d42b43cc_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e30eb4e1_pushErr(_1e30eab72_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1e258d126_ParamIns>> _1e30eb755_getParams(_1e30eab72_fnCallArgChecker*);
inline jule::Bool _1e30eba63_checkCounts(_1e30eab72_fnCallArgChecker*, jule::Slice<jule::Ptr<_1e258d126_ParamIns>>&);
inline jule::Bool _1e30ebeb4_checkArg(_1e30eab72_fnCallArgChecker*, jule::Ptr<_1e258d126_ParamIns>&, jule::Ptr<_1e310908c_Data>&, jule::Ptr<_1d42b43cc_Token>&);
inline jule::Bool _1e30ec36b_push(_1e30eab72_fnCallArgChecker*, jule::Ptr<_1e258d126_ParamIns>&, jule::Ptr<_1e2519ba7_Expr>);
inline jule::Bool _1e30ec723_pushVariadic(_1e30eab72_fnCallArgChecker*, jule::Ptr<_1e258d126_ParamIns>&, jule::I64);
inline jule::Bool _1e30eca31_checkArgs(_1e30eab72_fnCallArgChecker*, jule::Slice<jule::Ptr<_1e258d126_ParamIns>>&);
inline jule::Bool _1e30eccb7_checkDynamicTypeAnnotation(_1e30eab72_fnCallArgChecker*);
inline jule::Bool _1e30ed03c_check(_1e30eab72_fnCallArgChecker*);
struct _1e30eab72_fnCallArgChecker {
	jule::Ptr<_1e310ab0a_Eval> _field_e = jule::Ptr<_1e310ab0a_Eval>();
	jule::Slice<jule::Ptr<_1e2519ba7_Expr>> _field_args = jule::Slice<jule::Ptr<_1e2519ba7_Expr>>();
	jule::Ptr<_1d42b43cc_Token> _field_errorToken = jule::Ptr<_1d42b43cc_Token>();
	jule::Ptr<_1e258dee5_FnIns> _field_f = jule::Ptr<_1e258dee5_FnIns>();
	jule::Bool _field_dynamicAnnotation = jule::Bool();
	jule::Slice<jule::Any> _field_argModels = jule::Slice<jule::Any>();
	

	_1e30eab72_fnCallArgChecker(void) = default;

	inline bool operator==(_1e30eab72_fnCallArgChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_args == _other._field_args &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_f == _other._field_f &&
			this->_field_dynamicAnnotation == _other._field_dynamicAnnotation &&
			this->_field_argModels == _other._field_argModels;
	}

	inline bool operator!=(_1e30eab72_fnCallArgChecker _other) { return !this->operator==(_other); }


};
inline void _1e30eda87_pushErr(_1e30ed57b_structLitChecker*, jule::Ptr<_1d42b43cc_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e30edda6_pushSugggestion(_1e30ed57b_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _1e30ee26e_pushMatch(_1e30ed57b_structLitChecker*, jule::Ptr<_1e250d4d6_FieldIns>&, jule::Ptr<_1e310908c_Data>&, jule::Ptr<_1d42b43cc_Token>&);
inline void _1e30ee58d_checkPair(_1e30ed57b_structLitChecker*, jule::Ptr<_1e251e904_FieldExprPair>&, jule::Slice<jule::Ptr<_1e2519ba7_Expr>>&);
inline jule::Bool _1e30ee89b_readyExprs(_1e30ed57b_structLitChecker*, jule::Slice<jule::Ptr<_1e2519ba7_Expr>>&);
inline void _1e30eeb21_check(_1e30ed57b_structLitChecker*, jule::Slice<jule::Ptr<_1e2519ba7_Expr>>&);
struct _1e30ed57b_structLitChecker {
	jule::Ptr<_1e310ab0a_Eval> _field_e = jule::Ptr<_1e310ab0a_Eval>();
	jule::Ptr<_1d42b43cc_Token> _field_errorToken = jule::Ptr<_1d42b43cc_Token>();
	jule::Ptr<_1e253220d_StructIns> _field_s = jule::Ptr<_1e253220d_StructIns>();
	jule::Slice<jule::Ptr<_1e258434d_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_1e258434d_StructArgExprModel>>();
	

	_1e30ed57b_structLitChecker(void) = default;

	inline bool operator==(_1e30ed57b_structLitChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_s == _other._field_s &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1e30ed57b_structLitChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e322a147_Var> _1e3100605_buildVar(_1e3100160_rangeChecker*, jule::Ptr<_1e2528479_VarDecl>&);
inline void _1e31007d1_setSizeKey(_1e3100160_rangeChecker*);
inline void _1e3100b99_checkRangeExprValidity(_1e3100160_rangeChecker*, jule::Ptr<_1e310908c_Data>&, jule::Ptr<_1e322a147_Var>&, jule::Ptr<_1e3134da9_TypeKind>&);
inline void _1e3100d75_checkSlice(_1e3100160_rangeChecker*);
inline void _1e3101051_checkArray(_1e3100160_rangeChecker*);
inline void _1e310122c_checkMapKeyA(_1e3100160_rangeChecker*);
inline void _1e3101408_checkMapKeyB(_1e3100160_rangeChecker*);
inline void _1e31015d4_checkMap(_1e3100160_rangeChecker*);
inline void _1e31017b0_checkStr(_1e3100160_rangeChecker*);
inline jule::Bool _1e3101a24_check(_1e3100160_rangeChecker*);
struct _1e3100160_rangeChecker {
	jule::Ptr<_1e31dd89c_scopeChecker> _field_sc = jule::Ptr<_1e31dd89c_scopeChecker>();
	jule::Ptr<_1e252a107_RangeKind> _field_rang = jule::Ptr<_1e252a107_RangeKind>();
	jule::Ptr<_1e31d88db_RangeIter> _field_Kind = jule::Ptr<_1e31d88db_RangeIter>();
	jule::Ptr<_1e310908c_Data> _field_d = jule::Ptr<_1e310908c_Data>();
	

	_1e3100160_rangeChecker(void) = default;

	inline bool operator==(_1e3100160_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1e3100160_rangeChecker _other) { return !this->operator==(_other); }


};
inline void _1e310276c_prepareTypes(_1e31022b6_retTypeChecker*);
inline void _1e31029e2_prepareExprs(_1e31022b6_retTypeChecker*, jule::Ptr<_1e2519ba7_Expr>&);
inline void _1e3102bbd_retVars(_1e31022b6_retTypeChecker*);
inline void _1e3102d99_checkExprs(_1e31022b6_retTypeChecker*);
inline jule::Bool _1e31031a7_check(_1e31022b6_retTypeChecker*, jule::Ptr<_1e2519ba7_Expr>&);
struct _1e31022b6_retTypeChecker {
	jule::Ptr<_1e31dd89c_scopeChecker> _field_sc = jule::Ptr<_1e31dd89c_scopeChecker>();
	jule::Ptr<_1e258dee5_FnIns> _field_f = jule::Ptr<_1e258dee5_FnIns>();
	jule::Slice<jule::Ptr<_1e3134da9_TypeKind>> _field_types = jule::Slice<jule::Ptr<_1e3134da9_TypeKind>>();
	jule::Slice<jule::Ptr<_1e2519ba7_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1e2519ba7_Expr>>();
	jule::Slice<jule::Ptr<_1e322a147_Var>> _field_vars = jule::Slice<jule::Ptr<_1e322a147_Var>>();
	jule::Ptr<_1d42b43cc_Token> _field_errorToken = jule::Ptr<_1d42b43cc_Token>();
	jule::Any _field_model = jule::Any();
	

	_1e31022b6_retTypeChecker(void) = default;

	inline bool operator==(_1e31022b6_retTypeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_f == _other._field_f &&
			this->_field_types == _other._field_types &&
			this->_field_exprs == _other._field_exprs &&
			this->_field_vars == _other._field_vars &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1e31022b6_retTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e320561c_ImportInfo> _1e310484b_FindPackage(_1e310432e_SymbolTable*, jule::Str);
inline jule::Ptr<_1e320561c_ImportInfo> _1e3104b59_SelectPackage(_1e310432e_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_1e320561c_ImportInfo>)>);
inline jule::Ptr<_1e322a147_Var> _1e3105011_FindVar(_1e310432e_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1e31341b6_TypeAlias> _1e31053b8_FindTypeAlias(_1e310432e_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1e2505d6e_Struct> _1e3105770_FindStruct(_1e310432e_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1e258b344_Fn> _1e3105b27_FindFn(_1e310432e_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1e259d246_Trait> _1e3105e35_FindTrait(_1e310432e_SymbolTable*, jule::Str);
inline jule::Ptr<_1e25a038b_Enum> _1e3106243_FindEnum(_1e310432e_SymbolTable*, jule::Str);
inline jule::Ptr<_1e25a1986_TypeEnum> _1e3106551_FindTypeEnum(_1e310432e_SymbolTable*, jule::Str);
inline jule::Ptr<_1e322a147_Var> _1e3106ac3_findVar(_1e310432e_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Ptr<_1e31341b6_TypeAlias> _1e3107024_findTypeAlias(_1e310432e_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Any _1e31073cb_defByIdent(_1e310432e_SymbolTable*, jule::Str, jule::Bool);
inline jule::Bool _1e310782c_isDuplicatedIdent(_1e310432e_SymbolTable*, jule::Uintptr, jule::Str, jule::Bool);
struct _1e310432e_SymbolTable {
	jule::Ptr<_1d42b9767_File> _field_File = jule::Ptr<_1d42b9767_File>();
	jule::Slice<_1e25932c4_Pass> _field_Passes = jule::Slice<_1e25932c4_Pass>();
	jule::Slice<jule::Ptr<_1e320561c_ImportInfo>> _field_Imports = jule::Slice<jule::Ptr<_1e320561c_ImportInfo>>();
	jule::Slice<jule::Ptr<_1e322a147_Var>> _field_Vars = jule::Slice<jule::Ptr<_1e322a147_Var>>();
	jule::Slice<jule::Ptr<_1e31341b6_TypeAlias>> _field_TypeAliases = jule::Slice<jule::Ptr<_1e31341b6_TypeAlias>>();
	jule::Slice<jule::Ptr<_1e2505d6e_Struct>> _field_Structs = jule::Slice<jule::Ptr<_1e2505d6e_Struct>>();
	jule::Slice<jule::Ptr<_1e258b344_Fn>> _field_Funcs = jule::Slice<jule::Ptr<_1e258b344_Fn>>();
	jule::Slice<jule::Ptr<_1e259d246_Trait>> _field_Traits = jule::Slice<jule::Ptr<_1e259d246_Trait>>();
	jule::Slice<jule::Ptr<_1e25a038b_Enum>> _field_Enums = jule::Slice<jule::Ptr<_1e25a038b_Enum>>();
	jule::Slice<jule::Ptr<_1e25a1986_TypeEnum>> _field_TypeEnums = jule::Slice<jule::Ptr<_1e25a1986_TypeEnum>>();
	jule::Slice<jule::Ptr<_1e31d1bd1_Impl>> _field_Impls = jule::Slice<jule::Ptr<_1e31d1bd1_Impl>>();
	

	_1e310432e_SymbolTable(void) = default;

	inline bool operator==(_1e310432e_SymbolTable _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Passes == _other._field_Passes &&
			this->_field_Imports == _other._field_Imports &&
			this->_field_Vars == _other._field_Vars &&
			this->_field_TypeAliases == _other._field_TypeAliases &&
			this->_field_Structs == _other._field_Structs &&
			this->_field_Funcs == _other._field_Funcs &&
			this->_field_Traits == _other._field_Traits &&
			this->_field_Enums == _other._field_Enums &&
			this->_field_TypeEnums == _other._field_TypeEnums &&
			this->_field_Impls == _other._field_Impls;
	}

	inline bool operator!=(_1e310432e_SymbolTable _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e3109477_IsNil(_1e310908c_Data*);
inline jule::Bool _1e31096db_IsVoid(_1e310908c_Data*);
inline jule::Bool _1e3109950_IsConst(_1e310908c_Data*);
inline jule::Bool _1e3109c5d_GoodOperand(_1e310908c_Data*, jule::Ptr<_1e310908c_Data>&);
struct _1e310908c_Data {
	jule::Ptr<_1e3134da9_TypeKind> _field_Kind = jule::Ptr<_1e3134da9_TypeKind>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Bool _field_Lvalue = jule::Bool();
	jule::Bool _field_IsRune = jule::Bool();
	jule::Any _field_Model = jule::Any();
	jule::Bool _field_Decl = jule::Bool();
	jule::Ptr<_1e23b4a96_Const> _field_Constant = jule::Ptr<_1e23b4a96_Const>();
	

	_1e310908c_Data(void) = default;

	inline bool operator==(_1e310908c_Data _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_1e310908c_Data _other) { return !this->operator==(_other); }


};
struct _1e310a115_Value {
	jule::Ptr<_1e2519ba7_Expr> _field_Expr = jule::Ptr<_1e2519ba7_Expr>();
	jule::Ptr<_1e310908c_Data> _field_Data = jule::Ptr<_1e310908c_Data>();
	

	_1e310a115_Value(void) = default;

	inline bool operator==(_1e310a115_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1e310a115_Value _other) { return !this->operator==(_other); }


};
inline void _1e310b116_pushErr(_1e310ab0a_Eval*, jule::Ptr<_1d42b43cc_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e310b435_pushSugggestion(_1e310ab0a_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _1e310b611_allowBuiltin(_1e310ab0a_Eval*);
inline void _1e310b7dc_disallowBuiltin(_1e310ab0a_Eval*);
inline jule::Bool _1e310ba51_isUnsafe(_1e310ab0a_Eval*);
inline jule::Bool _1e310bcb5_isGlobal(_1e310ab0a_Eval*);
inline jule::Bool _1e310c090_applyNumericPrefix(_1e310ab0a_Eval*, jule::Ptr<_1e310908c_Data>&);
inline jule::Ptr<_1e310908c_Data> _1e310c304_litNil(_1e310ab0a_Eval*);
inline jule::Ptr<_1e310908c_Data> _1e310c612_litStr(_1e310ab0a_Eval*, jule::Ptr<_1e251abdb_LitExpr>&);
inline jule::Ptr<_1e310908c_Data> _1e310c920_litBool(_1e310ab0a_Eval*, jule::Ptr<_1e251abdb_LitExpr>&);
inline jule::Ptr<_1e310908c_Data> _1e310cc2d_litRune(_1e310ab0a_Eval*, jule::Ptr<_1e251abdb_LitExpr>&);
inline jule::Ptr<_1e310908c_Data> _1e310d03b_litFloat(_1e310ab0a_Eval*, jule::Ptr<_1e251abdb_LitExpr>&);
inline jule::Ptr<_1e310908c_Data> _1e310d349_litInt(_1e310ab0a_Eval*, jule::Ptr<_1e251abdb_LitExpr>&);
inline jule::Ptr<_1e310908c_Data> _1e310d657_litNum(_1e310ab0a_Eval*, jule::Ptr<_1e251abdb_LitExpr>&);
inline jule::Ptr<_1e310908c_Data> _1e310d965_evalLit(_1e310ab0a_Eval*, jule::Ptr<_1e251abdb_LitExpr>);
inline jule::Any _1e310dc73_findBuiltins(_1e310ab0a_Eval*, jule::Str);
inline jule::Any _1e310e12a_getDef(_1e310ab0a_Eval*, jule::Str, jule::Bool);
inline void _1e5c50450_pushReference(_1e310ab0a_Eval*, jule::Ptr<_1e258dee5_FnIns>&);
inline void _1e5c64ec0_pushReference(_1e310ab0a_Eval*, jule::Ptr<_1e322a147_Var>&);
inline void _1e5d0973a_pushReference(_1e310ab0a_Eval*, jule::Ptr<_1e253220d_StructIns>&);
inline jule::Ptr<_1e310908c_Data> _1e310e6ad__evalEnum(_1e310ab0a_Eval*, jule::Ptr<_1e25a038b_Enum>);
inline jule::Ptr<_1e310908c_Data> _1e310ea65_evalEnum(_1e310ab0a_Eval*, jule::Ptr<_1e25a038b_Enum>, jule::Ptr<_1d42b43cc_Token>);
inline jule::Ptr<_1e310908c_Data> _1e310ed73__evalTypeEnum(_1e310ab0a_Eval*, jule::Ptr<_1e25a1986_TypeEnum>);
inline jule::Ptr<_1e310908c_Data> _1e311022a_evalTypeEnum(_1e310ab0a_Eval*, jule::Ptr<_1e25a1986_TypeEnum>, jule::Ptr<_1d42b43cc_Token>);
inline jule::Ptr<_1e310908c_Data> _1e3110538__evalStruct(_1e310ab0a_Eval*, jule::Ptr<_1e253220d_StructIns>);
inline jule::Ptr<_1e310908c_Data> _1e31108e0_evalStruct(_1e310ab0a_Eval*, jule::Ptr<_1e253220d_StructIns>, jule::Ptr<_1d42b43cc_Token>);
inline jule::Ptr<_1e310908c_Data> _1e3110bed_evalFnIns(_1e310ab0a_Eval*, jule::Ptr<_1e258dee5_FnIns>);
inline void _1e311101c_checkDeprecated(_1e310ab0a_Eval*, jule::Slice<jule::Ptr<_1e24d1e8d_Directive>>&, jule::Ptr<_1d42b43cc_Token>);
inline jule::Ptr<_1e310908c_Data> _1e31113c4_evalFn(_1e310ab0a_Eval*, jule::Ptr<_1e258b344_Fn>, jule::Ptr<_1d42b43cc_Token>);
inline void _1e311178c_pushIllegalCycleError(_1e310ab0a_Eval*, jule::Ptr<_1e322a147_Var>&, jule::Ptr<_1e322a147_Var>&, jule::Str&);
inline jule::Bool _1e3111b44_checkCrossCycle(_1e310ab0a_Eval*, jule::Ptr<_1e322a147_Var>&, jule::Str&);
inline jule::Bool _1e3111eeb_checkIllegalCycles(_1e310ab0a_Eval*, jule::Ptr<_1e322a147_Var>&, jule::Ptr<_1d42b43cc_Token>);
inline jule::Ptr<_1e310908c_Data> _1e31123a3_evalVar(_1e310ab0a_Eval*, jule::Ptr<_1e322a147_Var>, jule::Ptr<_1d42b43cc_Token>);
inline jule::Ptr<_1e310908c_Data> _1e311275a_evalTypeAlias(_1e310ab0a_Eval*, jule::Ptr<_1e31341b6_TypeAlias>, jule::Ptr<_1d42b43cc_Token>);
inline jule::Ptr<_1e310908c_Data> _1e3112b12_evalDef(_1e310ab0a_Eval*, jule::Any, jule::Ptr<_1d42b43cc_Token>);
inline jule::Ptr<_1e310908c_Data> _1e3112e20_evalIdent(_1e310ab0a_Eval*, jule::Ptr<_1e251bc20_IdentExpr>);
inline jule::Ptr<_1e310908c_Data> _1e311322d_evalUnary(jule::Ptr<_1e310ab0a_Eval>, jule::Ptr<_1e251c429_UnaryExpr>);
inline jule::Ptr<_1e310908c_Data> _1e311353b_evalVariadic(jule::Ptr<_1e310ab0a_Eval>, jule::Ptr<_1e251c7d1_VariadicExpr>);
inline jule::Ptr<_1e310908c_Data> _1e3113849_evalUnsafe(jule::Ptr<_1e310ab0a_Eval>, jule::Ptr<_1e251b3e5_UnsafeExpr>);
inline jule::Ptr<_1e310908c_Data> _1e3113b57_evalArr(jule::Ptr<_1e310ab0a_Eval>, jule::Ptr<_1e2521560_SliceExpr>);
inline jule::Ptr<_1e310908c_Data> _1e31140a8_evalExpSlc(jule::Ptr<_1e310ab0a_Eval>, jule::Ptr<_1e2521560_SliceExpr>, jule::Ptr<_1e3134da9_TypeKind>, jule::Any);
inline jule::Ptr<_1e310908c_Data> _1e31143b6_evalSliceExpr(jule::Ptr<_1e310ab0a_Eval>, jule::Ptr<_1e2521560_SliceExpr>);
inline void _1e3114707_checkIntegerIndexingByData(_1e310ab0a_Eval*, jule::Ptr<_1e310908c_Data>&, jule::Ptr<_1d42b43cc_Token>);
inline void _1e3114ad1_indexingPtr(_1e310ab0a_Eval*, jule::Ptr<_1e310908c_Data>&, jule::Ptr<_1e310908c_Data>&, jule::Ptr<_1e2521e01_IndexingExpr>&);
inline void _1e3114e99_indexingArr(_1e310ab0a_Eval*, jule::Ptr<_1e310908c_Data>&, jule::Ptr<_1e310908c_Data>&, jule::Ptr<_1e2521e01_IndexingExpr>&);
inline void _1e3115362_indexingSlc(_1e310ab0a_Eval*, jule::Ptr<_1e310908c_Data>&, jule::Ptr<_1e310908c_Data>&, jule::Ptr<_1e2521e01_IndexingExpr>&);
inline void _1e311572a_indexingMap(_1e310ab0a_Eval*, jule::Ptr<_1e310908c_Data>&, jule::Ptr<_1e310908c_Data>&, jule::Ptr<_1e2521e01_IndexingExpr>&);
inline void _1e3115ae3_indexingStr(_1e310ab0a_Eval*, jule::Ptr<_1e310908c_Data>&, jule::Ptr<_1e310908c_Data>&, jule::Ptr<_1e2521e01_IndexingExpr>&);
inline void _1e3115eab_toIndexing(_1e310ab0a_Eval*, jule::Ptr<_1e310908c_Data>&, jule::Ptr<_1e310908c_Data>&, jule::Ptr<_1e2521e01_IndexingExpr>&);
inline jule::Bool _1e311642e_pushGenericsFromExprSubIdent(jule::Ptr<_1e310ab0a_Eval>, jule::Ptr<_1e251d4b3_SubIdentExpr>&, jule::Slice<jule::Ptr<_1e2515686_TypeDecl>>&, jule::Ptr<_1e2519ba7_Expr>&);
inline jule::Bool _1e31167e7_pushGenericsFromData(jule::Ptr<_1e310ab0a_Eval>, jule::Slice<jule::Ptr<_1e2515686_TypeDecl>>&, jule::Ptr<_1e2519ba7_Expr>&);
inline jule::Ptr<_1e310908c_Data> _1e3116b27_evalIdentDeclFromIndexing(jule::Ptr<_1e310ab0a_Eval>, jule::Ptr<_1e2521e01_IndexingExpr>&);
inline jule::Bool _1e3117089_checkGenericFn(jule::Ptr<_1e310ab0a_Eval>, jule::Ptr<_1e258dee5_FnIns>&, jule::Ptr<_1d42b43cc_Token>&, jule::Any&);
inline void _1e31173ca_evalFnGenericFromIndexing(jule::Ptr<_1e310ab0a_Eval>, jule::Ptr<_1e310908c_Data>&, jule::Ptr<_1e2521e01_IndexingExpr>&);
inline jule::Ptr<_1e310908c_Data> _1e31176e9_evalIndexing(jule::Ptr<_1e310ab0a_Eval>, jule::Ptr<_1e2521e01_IndexingExpr>);
inline std::tuple<jule::Ptr<_1e310908c_Data>,jule::Ptr<_1e310908c_Data>> _1e3117a07_evalSlicingExprs(jule::Ptr<_1e310ab0a_Eval>, jule::Ptr<_1e252250b_SlicingExpr>&);
inline void _1e3117c7c_slicingArr(_1e310ab0a_Eval*, jule::Ptr<_1e310908c_Data>&);
inline void _1e3118145_slicingStr(_1e310ab0a_Eval*, jule::Ptr<_1e310908c_Data>&, jule::Ptr<_1e310908c_Data>&, jule::Ptr<_1e310908c_Data>&);
inline void _1e31185a7_checkSlicing(_1e310ab0a_Eval*, jule::Ptr<_1e310908c_Data>&, jule::Ptr<_1e310908c_Data>&, jule::Ptr<_1e310908c_Data>&, jule::Ptr<_1e252250b_SlicingExpr>&);
inline jule::Ptr<_1e310908c_Data> _1e31188b5_evalSlicing(jule::Ptr<_1e310ab0a_Eval>, jule::Ptr<_1e252250b_SlicingExpr>);
inline void _1e3118c7d_castPtr(_1e310ab0a_Eval*, jule::Ptr<_1e3134da9_TypeKind>, jule::Ptr<_1e310908c_Data>, jule::Ptr<_1d42b43cc_Token>);
inline void _1e3119146_castStruct(_1e310ab0a_Eval*, jule::Ptr<_1e3134da9_TypeKind>, jule::Ptr<_1e310908c_Data>, jule::Ptr<_1d42b43cc_Token>);
inline void _1e311950e_castRef(_1e310ab0a_Eval*, jule::Ptr<_1e3134da9_TypeKind>, jule::Ptr<_1e310908c_Data>, jule::Ptr<_1d42b43cc_Token>);
inline void _1e31198c7_castSlc(_1e310ab0a_Eval*, jule::Ptr<_1e3134da9_TypeKind>, jule::Ptr<_1e310908c_Data>, jule::Ptr<_1d42b43cc_Token>);
inline void _1e3119be6_castStr(_1e310ab0a_Eval*, jule::Ptr<_1e310908c_Data>, jule::Ptr<_1d42b43cc_Token>);
inline void _1e311a0ae_castInt(_1e310ab0a_Eval*, jule::Ptr<_1e3134da9_TypeKind>, jule::Ptr<_1e310908c_Data>, jule::Ptr<_1d42b43cc_Token>);
inline void _1e311a477_castNum(_1e310ab0a_Eval*, jule::Ptr<_1e3134da9_TypeKind>, jule::Ptr<_1e310908c_Data>, jule::Ptr<_1d42b43cc_Token>);
inline void _1e311a840_castPrim(_1e310ab0a_Eval*, jule::Ptr<_1e3134da9_TypeKind>, jule::Ptr<_1e310908c_Data>, jule::Ptr<_1d42b43cc_Token>);
inline void _1e311ab5e_castConstant(_1e310ab0a_Eval*, jule::Ptr<_1e3134da9_TypeKind>&, jule::Ptr<_1e310908c_Data>&);
inline void _1e311b027_castTypeEnum(_1e310ab0a_Eval*, jule::Ptr<_1e3134da9_TypeKind>&, jule::Ptr<_1e310908c_Data>&, jule::Ptr<_1d42b43cc_Token>&);
inline jule::Ptr<_1e310908c_Data> _1e311b478_evalCastByTypeNData(_1e310ab0a_Eval*, jule::Ptr<_1e3134da9_TypeKind>, jule::Ptr<_1e310908c_Data>, jule::Ptr<_1d42b43cc_Token>);
inline jule::Ptr<_1e310908c_Data> _1e311b8c9_evalCastT(jule::Ptr<_1e310ab0a_Eval>, jule::Ptr<_1e3134da9_TypeKind>&, jule::Ptr<_1e2519ba7_Expr>&, jule::Ptr<_1d42b43cc_Token>&);
inline jule::Ptr<_1e310908c_Data> _1e311bbd7_evalCast(jule::Ptr<_1e310ab0a_Eval>, jule::Ptr<_1e251cb88_CastExpr>);
inline jule::Ptr<_1e310908c_Data> _1e311bee5_evalNsSelection(_1e310ab0a_Eval*, jule::Ptr<_1e251d040_NsSelectionExpr>);
inline jule::Ptr<_1e310908c_Data> _1e311c446_evalStructLitExplicit(jule::Ptr<_1e310ab0a_Eval>, jule::Ptr<_1e253220d_StructIns>, jule::Slice<jule::Ptr<_1e2519ba7_Expr>>, jule::Ptr<_1d42b43cc_Token>);
inline jule::Ptr<_1e310908c_Data> _1e311c754_evalStructLit(jule::Ptr<_1e310ab0a_Eval>, jule::Ptr<_1e2520152_StructLit>);
inline jule::Ptr<_1e310908c_Data> _1e311ca62_evalType(_1e310ab0a_Eval*, jule::Ptr<_1e2515686_TypeDecl>);
inline void _1e311cd81_callTypeFn(jule::Ptr<_1e310ab0a_Eval>, jule::Ptr<_1e251de75_FnCallExpr>&, jule::Ptr<_1e310908c_Data>&);
inline void _1e311d1a0_callBuiltinFn(jule::Ptr<_1e310ab0a_Eval>, jule::Ptr<_1e251de75_FnCallExpr>&, jule::Ptr<_1e310908c_Data>&);
inline void _1e311d4e1_checkFnOfConcurrentCall(_1e310ab0a_Eval*, jule::Ptr<_1e258dee5_FnIns>&, jule::Ptr<_1d42b43cc_Token>);
inline void _1e311d8dc_processExceptionalHandler(_1e310ab0a_Eval*, jule::Ptr<_1e258dee5_FnIns>&, jule::Ptr<_1e251de75_FnCallExpr>&, jule::Ptr<_1e310908c_Data>&);
inline void _1e311dc1c_callFn(jule::Ptr<_1e310ab0a_Eval>, jule::Ptr<_1e251de75_FnCallExpr>&, jule::Ptr<_1e310908c_Data>&);
inline jule::Ptr<_1e310908c_Data> _1e311e02a_evalFnCall(jule::Ptr<_1e310ab0a_Eval>, jule::Ptr<_1e251de75_FnCallExpr>);
inline jule::Ptr<_1e310908c_Data> _1e311e3d2_evalEnumStatic(_1e310ab0a_Eval*, jule::Ptr<_1e25a038b_Enum>, jule::Ptr<_1d42b43cc_Token>);
inline jule::Ptr<_1e310908c_Data> _1e311e789_evalTypeEnumStatic(_1e310ab0a_Eval*, jule::Ptr<_1e25a1986_TypeEnum>, jule::Ptr<_1d42b43cc_Token>);
inline jule::Ptr<_1e310908c_Data> _1e311eb41_evalStructStatic(_1e310ab0a_Eval*, jule::Ptr<_1e253220d_StructIns>, jule::Ptr<_1d42b43cc_Token>);
inline jule::Ptr<_1e310908c_Data> _1e3120092_evalTraitSubIdent(_1e310ab0a_Eval*, jule::Ptr<_1e310908c_Data>, jule::Ptr<_1e259d246_Trait>, jule::Ptr<_1d42b43cc_Token>);
inline jule::Ptr<_1e310908c_Data> _1e312058c_evalStructSubIdent(_1e310ab0a_Eval*, jule::Ptr<_1e310908c_Data>, jule::Ptr<_1e253220d_StructIns>, jule::Ptr<_1e251d4b3_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_1e310908c_Data> _1e3120944_evalSliceSubIdent(_1e310ab0a_Eval*, jule::Ptr<_1e310908c_Data>, jule::Ptr<_1d42b43cc_Token>);
inline jule::Ptr<_1e310908c_Data> _1e3120ceb_evalArraySubIdent(_1e310ab0a_Eval*, jule::Ptr<_1e310908c_Data>, jule::Ptr<_1d42b43cc_Token>);
inline jule::Ptr<_1e310908c_Data> _1e31211a3_evalMapSubIdent(_1e310ab0a_Eval*, jule::Ptr<_1e310908c_Data>, jule::Ptr<_1d42b43cc_Token>);
inline jule::Ptr<_1e310908c_Data> _1e312155a_evalStrSubIdent(_1e310ab0a_Eval*, jule::Ptr<_1e310908c_Data>, jule::Ptr<_1d42b43cc_Token>);
inline jule::Ptr<_1e310908c_Data> _1e3121868_evalIntTypeStatic(_1e310ab0a_Eval*, jule::Ptr<_1d42b43cc_Token>);
inline jule::Ptr<_1e310908c_Data> _1e3121b76_evalUintTypeStatic(_1e310ab0a_Eval*, jule::Ptr<_1d42b43cc_Token>);
inline jule::Ptr<_1e310908c_Data> _1e3121e84_evalI8TypeStatic(_1e310ab0a_Eval*, jule::Ptr<_1d42b43cc_Token>);
inline jule::Ptr<_1e310908c_Data> _1e3122292_evalI16TypeStatic(_1e310ab0a_Eval*, jule::Ptr<_1d42b43cc_Token>);
inline jule::Ptr<_1e310908c_Data> _1e31225a0_evalI32TypeStatic(_1e310ab0a_Eval*, jule::Ptr<_1d42b43cc_Token>);
inline jule::Ptr<_1e310908c_Data> _1e31228ad_evalI64TypeStatic(_1e310ab0a_Eval*, jule::Ptr<_1d42b43cc_Token>);
inline jule::Ptr<_1e310908c_Data> _1e3122bbb_evalU8TypeStatic(_1e310ab0a_Eval*, jule::Ptr<_1d42b43cc_Token>);
inline jule::Ptr<_1e310908c_Data> _1e3122ec9_evalU16TypeStatic(_1e310ab0a_Eval*, jule::Ptr<_1d42b43cc_Token>);
inline jule::Ptr<_1e310908c_Data> _1e31232d7_evalU32TypeStatic(_1e310ab0a_Eval*, jule::Ptr<_1d42b43cc_Token>);
inline jule::Ptr<_1e310908c_Data> _1e31235e5_evalU64TypeStatic(_1e310ab0a_Eval*, jule::Ptr<_1d42b43cc_Token>);
inline jule::Ptr<_1e310908c_Data> _1e3123903_evalF32TypeStatic(_1e310ab0a_Eval*, jule::Ptr<_1d42b43cc_Token>);
inline jule::Ptr<_1e310908c_Data> _1e3123c11_evalF64TypeStatic(_1e310ab0a_Eval*, jule::Ptr<_1d42b43cc_Token>);
inline jule::Ptr<_1e310908c_Data> _1e31240b8_evalPrimStatic(_1e310ab0a_Eval*, jule::Str, jule::Ptr<_1d42b43cc_Token>);
inline jule::Ptr<_1e310908c_Data> _1e3124470_evalTypeStatic(_1e310ab0a_Eval*, jule::Ptr<_1e310908c_Data>, jule::Ptr<_1e251d4b3_SubIdentExpr>);
inline jule::Ptr<_1e310908c_Data> _1e3124827_evalObjSubIdent(_1e310ab0a_Eval*, jule::Ptr<_1e310908c_Data>, jule::Ptr<_1e251d4b3_SubIdentExpr>);
inline jule::Ptr<_1e310908c_Data> _1e3124b35_evalSubIdent(jule::Ptr<_1e310ab0a_Eval>, jule::Ptr<_1e251d4b3_SubIdentExpr>);
inline jule::Ptr<_1e310908c_Data> _1e3124e43_evalTuple(jule::Ptr<_1e310ab0a_Eval>, jule::Ptr<_1e251a834_TupleExpr>);
inline jule::Ptr<_1e310908c_Data> _1e31252ea_evalMap(jule::Ptr<_1e310ab0a_Eval>, jule::Ptr<_1e3140128_Map>, jule::Ptr<_1e25205c5_BraceLit>);
inline jule::Ptr<_1e310908c_Data> _1e3125608_evalBraceLit(jule::Ptr<_1e310ab0a_Eval>, jule::Ptr<_1e25205c5_BraceLit>);
inline jule::Ptr<_1e310908c_Data> _1e3125916_evalAnonFn(jule::Ptr<_1e310ab0a_Eval>, jule::Ptr<_1e252749a_FnDecl>);
inline jule::Ptr<_1e310908c_Data> _1e3125c24_evalBinop(jule::Ptr<_1e310ab0a_Eval>, jule::Ptr<_1e251d936_BinopExpr>);
inline jule::Ptr<_1e310908c_Data> _1e3126032_evalExprKind(jule::Ptr<_1e310ab0a_Eval>, jule::Any);
inline jule::Ptr<_1e310908c_Data> _1e3126340_eval(jule::Ptr<_1e310ab0a_Eval>, jule::Ptr<_1e2519ba7_Expr>);
inline jule::Ptr<_1e310908c_Data> _1e312664d_evalExpr(jule::Ptr<_1e310ab0a_Eval>, jule::Ptr<_1e2519ba7_Expr>);
struct _1e310ab0a_Eval {
	jule::Ptr<_1e320d768_Sema> _field_s = jule::Ptr<_1e320d768_Sema>();
	jule::Trait<_1e315091e_Lookup> _field_lookup = jule::Trait<_1e315091e_Lookup>();
	jule::Ptr<_1e3134da9_TypeKind> _field_prefix = jule::Ptr<_1e3134da9_TypeKind>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_immutable = jule::Bool();
	jule::Bool _field_ignored = jule::Bool();
	jule::Bool _field_disBuiltin = jule::Bool();
	jule::Ptr<_1e322a147_Var> _field_owner = jule::Ptr<_1e322a147_Var>();
	jule::Ptr<_1e250d4d6_FieldIns> _field_field = jule::Ptr<_1e250d4d6_FieldIns>();
	jule::Bool _field_arg = jule::Bool();
	

	_1e310ab0a_Eval(void) = default;

	inline bool operator==(_1e310ab0a_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1e310ab0a_Eval _other) { return !this->operator==(_other); }


};
inline _1e3126ac1_unaryEval static__1e3127077_new(jule::Ptr<_1e310ab0a_Eval>);
inline void _1e3127253_minus(_1e3126ac1_unaryEval*);
inline void _1e312742e_plus(_1e3126ac1_unaryEval*);
inline void _1e312760a_caret(_1e3126ac1_unaryEval*);
inline void _1e31277d6_excl(_1e3126ac1_unaryEval*);
inline void _1e31279b2_star(_1e3126ac1_unaryEval*);
inline void _1e3127b8d_amper(_1e3126ac1_unaryEval*);
inline void _1e3127d69_typeDecl(_1e3126ac1_unaryEval*);
inline void _1e3128045_evalData(_1e3126ac1_unaryEval*);
inline jule::Ptr<_1e310908c_Data> _1e3128320_eval(_1e3126ac1_unaryEval*, jule::Ptr<_1e251c429_UnaryExpr>);
struct _1e3126ac1_unaryEval {
	jule::Ptr<_1e310ab0a_Eval> _field_e = jule::Ptr<_1e310ab0a_Eval>();
	jule::Ptr<_1e310908c_Data> _field_d = jule::Ptr<_1e310908c_Data>();
	jule::Ptr<_1e251c429_UnaryExpr> _field_u = jule::Ptr<_1e251c429_UnaryExpr>();
	

	_1e3126ac1_unaryEval(void) = default;

	inline bool operator==(_1e3126ac1_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1e3126ac1_unaryEval _other) { return !this->operator==(_other); }


};
inline _1e312885e_binaryEval static__1e3128e25_newPlain(jule::Ptr<_1e310ab0a_Eval>);
inline _1e312885e_binaryEval static__1e3129266_new(jule::Ptr<_1e310ab0a_Eval>, jule::Ptr<_1d42b43cc_Token>);
inline jule::Bool _1e31294ca_checkTypeCompatibility(_1e312885e_binaryEval*);
inline jule::Bool _1e3129772_checkStructCommonOperatorCompatibility(_1e312885e_binaryEval*);
inline jule::Ptr<_1e310908c_Data> _1e3129a19_evalNil(_1e312885e_binaryEval*);
inline jule::Ptr<_1e310908c_Data> _1e3129c7d_evalEnum(_1e312885e_binaryEval*);
inline jule::Ptr<_1e310908c_Data> _1e3129ee2_evalTypeEnum(_1e312885e_binaryEval*);
inline jule::Ptr<_1e310908c_Data> _1e312a256_evalSptr(_1e312885e_binaryEval*);
inline jule::Ptr<_1e310908c_Data> _1e312a4ba_evalPtr(_1e312885e_binaryEval*);
inline jule::Ptr<_1e310908c_Data> _1e312a72e_evalArr(_1e312885e_binaryEval*);
inline jule::Ptr<_1e310908c_Data> _1e312a993_evalSlc(_1e312885e_binaryEval*);
inline jule::Ptr<_1e310908c_Data> _1e312ac07_evalFn(_1e312885e_binaryEval*);
inline jule::Ptr<_1e310908c_Data> _1e312ae6b_evalStruct(_1e312885e_binaryEval*);
inline jule::Ptr<_1e310908c_Data> _1e312b1d0_evalTrait(_1e312885e_binaryEval*);
inline jule::Ptr<_1e310908c_Data> _1e312b444_evalAny(_1e312885e_binaryEval*);
inline jule::Ptr<_1e310908c_Data> _1e312b6a8_evalBool(_1e312885e_binaryEval*);
inline jule::Ptr<_1e310908c_Data> _1e312b91c_evalStr(_1e312885e_binaryEval*);
inline void _1e312bae8_setTypeToGreater(_1e312885e_binaryEval*);
inline void _1e312bd3a_checkModData(_1e312885e_binaryEval*, jule::Ptr<_1e310908c_Data>&);
inline void _1e312c016_mod(_1e312885e_binaryEval*);
inline jule::Bool _1e312c3bd_numbersAreCompatibile(_1e312885e_binaryEval*, jule::Str&, jule::Str&);
inline jule::Ptr<_1e310908c_Data> _1e312c632_evalFloat(_1e312885e_binaryEval*);
inline jule::Ptr<_1e310908c_Data> _1e312c896_evalInt(_1e312885e_binaryEval*);
inline jule::Ptr<_1e310908c_Data> _1e312cb0a_evalPrim(_1e312885e_binaryEval*);
inline jule::Ptr<_1e310908c_Data> _1e312cd6e_evalOp(_1e312885e_binaryEval*);
inline void _1e312d0e4_evalConst(_1e312885e_binaryEval*, jule::Ptr<_1e310908c_Data>&);
inline void _1e312d369_checkData(_1e312885e_binaryEval*, jule::Ptr<_1e310908c_Data>&);
inline void _1e312d545_checkDatas(_1e312885e_binaryEval*);
inline void _1e312d7ba_setModel(_1e312885e_binaryEval*, jule::Ptr<_1e310908c_Data>&);
inline void _1e312da40_postEval(_1e312885e_binaryEval*, jule::Ptr<_1e310908c_Data>&);
inline jule::Ptr<_1e310908c_Data> _1e312dde7_solveExplicit(_1e312885e_binaryEval*, jule::Ptr<_1e310908c_Data>&, jule::Ptr<_1e310908c_Data>&);
inline jule::Ptr<_1e310908c_Data> _1e312e205_eval(_1e312885e_binaryEval*, jule::Ptr<_1e251d936_BinopExpr>&);
struct _1e312885e_binaryEval {
	jule::Ptr<_1e310ab0a_Eval> _field_e = jule::Ptr<_1e310ab0a_Eval>();
	jule::Ptr<_1e310908c_Data> _field_l = jule::Ptr<_1e310908c_Data>();
	jule::Ptr<_1e310908c_Data> _field_r = jule::Ptr<_1e310908c_Data>();
	jule::Ptr<_1d42b43cc_Token> _field_op = jule::Ptr<_1d42b43cc_Token>();
	

	_1e312885e_binaryEval(void) = default;

	inline bool operator==(_1e312885e_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1e312885e_binaryEval _other) { return !this->operator==(_other); }


};
struct _1e313367c_InsGeneric {
	jule::Ptr<_1e3134da9_TypeKind> _field_Kind = jule::Ptr<_1e3134da9_TypeKind>();
	jule::Slice<jule::Ptr<_1e3134da9_TypeKind>> _field_Constraint = jule::Slice<jule::Ptr<_1e3134da9_TypeKind>>();
	

	_1e313367c_InsGeneric(void) = default;

	inline bool operator==(_1e313367c_InsGeneric _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_1e313367c_InsGeneric _other) { return !this->operator==(_other); }


};
struct _1e31341b6_TypeAlias {
	jule::Ptr<_1e25259a4_ScopeTree> _field_Scope = jule::Ptr<_1e25259a4_ScopeTree>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Used = jule::Bool();
	jule::Bool _field_Generic = jule::Bool();
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1e3139012_TypeSymbol> _field_Kind = jule::Ptr<_1e3139012_TypeSymbol>();
	jule::Slice<jule::Any> _field_Refers = jule::Slice<jule::Any>();
	jule::Slice<jule::Ptr<_1e31341b6_TypeAlias>> _field_Generics = jule::Slice<jule::Ptr<_1e31341b6_TypeAlias>>();
	

	_1e31341b6_TypeAlias(void) = default;

	inline bool operator==(_1e31341b6_TypeAlias _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Used == _other._field_Used &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Refers == _other._field_Refers &&
			this->_field_Generics == _other._field_Generics;
	}

	inline bool operator!=(_1e31341b6_TypeAlias _other) { return !this->operator==(_other); }


};
inline jule::Str _1e31352a5_Str(_1e3134da9_TypeKind*);
inline jule::Bool _1e31355b3_Equals(jule::Ptr<_1e3134da9_TypeKind>, jule::Ptr<_1e3134da9_TypeKind>);
inline jule::Bool _1e3135a69_CppLinked(_1e3134da9_TypeKind*);
inline jule::Bool _1e3135ccd_IsNil(_1e3134da9_TypeKind*);
inline jule::Bool _1e3136042_Void(_1e3134da9_TypeKind*);
inline jule::Bool _1e31362a6_Mutable(_1e3134da9_TypeKind*);
inline jule::Bool _1e313651a_NilCompatible(_1e3134da9_TypeKind*);
inline jule::Bool _1e313677e_PerformsRC(_1e3134da9_TypeKind*);
inline jule::Bool _1e31369e3_SupportsCloning(_1e3134da9_TypeKind*);
inline jule::Bool _1e3136c57_Variadicable(_1e3134da9_TypeKind*);
inline jule::Ptr<_1e3139881_Prim> _1e3136ebb_Prim(_1e3134da9_TypeKind*);
inline jule::Ptr<_1e313d115_Sptr> _1e3137230_Sptr(_1e3134da9_TypeKind*);
inline jule::Ptr<_1e3141679_Ptr> _1e3137494_Ptr(_1e3134da9_TypeKind*);
inline jule::Ptr<_1e25a038b_Enum> _1e3137708_Enum(_1e3134da9_TypeKind*);
inline jule::Ptr<_1e25a1986_TypeEnum> _1e313796c_TypeEnum(_1e3134da9_TypeKind*);
inline jule::Ptr<_1e3140c1c_Arr> _1e3137bd1_Arr(_1e3134da9_TypeKind*);
inline jule::Ptr<_1e313da72_Slc> _1e3137e45_Slc(_1e3134da9_TypeKind*);
inline jule::Ptr<_1e258dee5_FnIns> _1e31381a9_Fn(_1e3134da9_TypeKind*);
inline jule::Ptr<_1e253220d_StructIns> _1e313841d_Struct(_1e3134da9_TypeKind*);
inline jule::Ptr<_1e259d246_Trait> _1e3138682_Trait(_1e3134da9_TypeKind*);
inline jule::Ptr<_1e3140128_Map> _1e31388e6_Map(_1e3134da9_TypeKind*);
inline jule::Ptr<_1e313e600_Tuple> _1e3138b5a_Tup(_1e3134da9_TypeKind*);
struct _1e3134da9_TypeKind {
	jule::Str _field_CppIdent = jule::Str();
	jule::Bool _field_Generic = jule::Bool();
	jule::Bool _field_Variadic = jule::Bool();
	jule::Trait<_1e313497a_Kind> _field_Kind = jule::Trait<_1e313497a_Kind>();
	

	_1e3134da9_TypeKind(void) = default;

	inline bool operator==(_1e3134da9_TypeKind _other) {
		return 
			this->_field_CppIdent == _other._field_CppIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1e3134da9_TypeKind _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e31393b9_checked(_1e3139012_TypeSymbol*);
inline void _1e3139595_removeKind(_1e3139012_TypeSymbol*);
struct _1e3139012_TypeSymbol {
	jule::Ptr<_1e2515686_TypeDecl> _field_Decl = jule::Ptr<_1e2515686_TypeDecl>();
	jule::Ptr<_1e3134da9_TypeKind> _field_Kind = jule::Ptr<_1e3134da9_TypeKind>();
	

	_1e3139012_TypeSymbol(void) = default;

	inline bool operator==(_1e3139012_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1e3139012_TypeSymbol _other) { return !this->operator==(_other); }


};
inline jule::Str _1e3139be4_Str(_1e3139881_Prim*);
inline jule::Bool _1e313a002_Equals(jule::Ptr<_1e3139881_Prim>, jule::Ptr<_1e3134da9_TypeKind>);
inline jule::Bool _1e313a475_IsConstraint(_1e3139881_Prim*);
inline jule::Bool _1e313a6d9_IsI8(_1e3139881_Prim*);
inline jule::Bool _1e313a94d_IsI16(_1e3139881_Prim*);
inline jule::Bool _1e313abb2_IsI32(_1e3139881_Prim*);
inline jule::Bool _1e313ae26_IsI64(_1e3139881_Prim*);
inline jule::Bool _1e313b18a_IsU8(_1e3139881_Prim*);
inline jule::Bool _1e313b3ee_IsU16(_1e3139881_Prim*);
inline jule::Bool _1e313b663_IsU32(_1e3139881_Prim*);
inline jule::Bool _1e313b8c7_IsU64(_1e3139881_Prim*);
inline jule::Bool _1e313bb3b_IsF32(_1e3139881_Prim*);
inline jule::Bool _1e313bda0_IsF64(_1e3139881_Prim*);
inline jule::Bool _1e313c114_IsInt(_1e3139881_Prim*);
inline jule::Bool _1e313c378_IsUint(_1e3139881_Prim*);
inline jule::Bool _1e313c5dc_IsUintptr(_1e3139881_Prim*);
inline jule::Bool _1e313c851_IsBool(_1e3139881_Prim*);
inline jule::Bool _1e313cab5_IsStr(_1e3139881_Prim*);
inline jule::Bool _1e313cd29_IsAny(_1e3139881_Prim*);
struct _1e3139881_Prim {
	jule::Str _field_Kind = jule::Str();
	

	_1e3139881_Prim(void) = default;

	inline bool operator==(_1e3139881_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1e3139881_Prim _other) { return !this->operator==(_other); }


};
inline jule::Str _1e313d478_Str(_1e313d115_Sptr*);
inline jule::Bool _1e313d786_Equals(jule::Ptr<_1e313d115_Sptr>, jule::Ptr<_1e3134da9_TypeKind>);
struct _1e313d115_Sptr {
	jule::Ptr<_1e3134da9_TypeKind> _field_Elem = jule::Ptr<_1e3134da9_TypeKind>();
	

	_1e313d115_Sptr(void) = default;

	inline bool operator==(_1e313d115_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1e313d115_Sptr _other) { return !this->operator==(_other); }


};
inline jule::Str _1e313e07d_Str(_1e313da72_Slc*);
inline jule::Bool _1e313e38b_Equals(jule::Ptr<_1e313da72_Slc>, jule::Ptr<_1e3134da9_TypeKind>);
struct _1e313da72_Slc {
	jule::Ptr<_1e3134da9_TypeKind> _field_Elem = jule::Ptr<_1e3134da9_TypeKind>();
	

	_1e313da72_Slc(void) = default;

	inline bool operator==(_1e313da72_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1e313da72_Slc _other) { return !this->operator==(_other); }


};
inline jule::Str _1e313e963_Str(_1e313e600_Tuple*);
inline jule::Bool _1e313ec71_Equals(jule::Ptr<_1e313e600_Tuple>, jule::Ptr<_1e3134da9_TypeKind>);
struct _1e313e600_Tuple {
	jule::Slice<jule::Ptr<_1e3134da9_TypeKind>> _field_Types = jule::Slice<jule::Ptr<_1e3134da9_TypeKind>>();
	

	_1e313e600_Tuple(void) = default;

	inline bool operator==(_1e313e600_Tuple _other) {
		return 
			this->_field_Types == _other._field_Types;
	}

	inline bool operator!=(_1e313e600_Tuple _other) { return !this->operator==(_other); }


};
inline jule::Str _1e314048b_Str(_1e3140128_Map*);
inline jule::Bool _1e3140799_Equals(jule::Ptr<_1e3140128_Map>, jule::Ptr<_1e3134da9_TypeKind>);
struct _1e3140128_Map {
	jule::Ptr<_1e3134da9_TypeKind> _field_Key = jule::Ptr<_1e3134da9_TypeKind>();
	jule::Ptr<_1e3134da9_TypeKind> _field_Val = jule::Ptr<_1e3134da9_TypeKind>();
	

	_1e3140128_Map(void) = default;

	inline bool operator==(_1e3140128_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1e3140128_Map _other) { return !this->operator==(_other); }


};
inline jule::Str _1e3141080_Str(_1e3140c1c_Arr*);
inline jule::Bool _1e314138d_Equals(jule::Ptr<_1e3140c1c_Arr>, jule::Ptr<_1e3134da9_TypeKind>);
struct _1e3140c1c_Arr {
	jule::Bool _field_Auto = jule::Bool();
	jule::I64 _field_N = jule::I64();
	jule::Ptr<_1e3134da9_TypeKind> _field_Elem = jule::Ptr<_1e3134da9_TypeKind>();
	

	_1e3140c1c_Arr(void) = default;

	inline bool operator==(_1e3140c1c_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1e3140c1c_Arr _other) { return !this->operator==(_other); }


};
inline jule::Str _1e31419dc_Str(_1e3141679_Ptr*);
inline jule::Bool _1e3141cea_Equals(jule::Ptr<_1e3141679_Ptr>, jule::Ptr<_1e3134da9_TypeKind>);
inline jule::Bool _1e314214c_IsUnsafe(_1e3141679_Ptr*);
struct _1e3141679_Ptr {
	jule::Ptr<_1e3134da9_TypeKind> _field_Elem = jule::Ptr<_1e3134da9_TypeKind>();
	

	_1e3141679_Ptr(void) = default;

	inline bool operator==(_1e3141679_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1e3141679_Ptr _other) { return !this->operator==(_other); }


};
struct _1e31425c0_referencer {
	jule::Str _field_ident = jule::Str();
	jule::Any _field_owner = jule::Any();
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	_1e31425c0_referencer(void) = default;

	inline bool operator==(_1e31425c0_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1e31425c0_referencer _other) { return !this->operator==(_other); }


};
inline void _1e3143a22_pushErr(_1e3143318_typeChecker*, jule::Ptr<_1d42b43cc_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e3143bed_allowBuiltin(_1e3143318_typeChecker*);
inline void _1e3143dc9_disallowBuiltin(_1e3143318_typeChecker*);
inline jule::Ptr<_1e3139881_Prim> _1e31441d7_buildPrim(_1e3143318_typeChecker*, jule::Ptr<_1e2515c4c_IdentTypeDecl>&);
inline void _1e607d9e2_pushReference(_1e3143318_typeChecker*, jule::Ptr<_1e253220d_StructIns>&);
inline void _1e6081a8e_pushReference(_1e3143318_typeChecker*, jule::Ptr<_1e259d246_Trait>&);
inline void _1e31446d2_pushReferenceByKind(_1e3143318_typeChecker*, jule::Ptr<_1e3134da9_TypeKind>&);
inline void _1e3144a9a_pushCycleError(_1e3143318_typeChecker*, jule::Any, jule::Any, jule::Str&);
inline jule::Bool _1e3144e52_checkCrossCycle(_1e3143318_typeChecker*, jule::Any, jule::Str&);
inline jule::Bool _1e3145309_checkIllegalCycles(_1e3143318_typeChecker*, jule::Ptr<_1e2515c4c_IdentTypeDecl>&, jule::Any);
inline jule::Trait<_1e313497a_Kind> _1e31456b1_fromTypeAlias(_1e3143318_typeChecker*, jule::Ptr<_1e2515c4c_IdentTypeDecl>&, jule::Ptr<_1e31341b6_TypeAlias>&);
inline jule::Ptr<_1e25a038b_Enum> _1e3145a68_fromEnum(_1e3143318_typeChecker*, jule::Ptr<_1e2515c4c_IdentTypeDecl>&, jule::Ptr<_1e25a038b_Enum>&);
inline jule::Ptr<_1e25a1986_TypeEnum> _1e3145e20_fromTypeEnum(_1e3143318_typeChecker*, jule::Ptr<_1e2515c4c_IdentTypeDecl>&, jule::Ptr<_1e25a1986_TypeEnum>&);
inline jule::Ptr<_1e259d246_Trait> _1e31462c7_fromTrait(_1e3143318_typeChecker*, jule::Ptr<_1e2515c4c_IdentTypeDecl>&, jule::Ptr<_1e259d246_Trait>&);
inline jule::Bool _1e314667e_checkStructIns(_1e3143318_typeChecker*, jule::Ptr<_1e253220d_StructIns>&, jule::Ptr<_1d42b43cc_Token>&);
inline void _1e3146926_appendUsedStructReference(_1e3143318_typeChecker*, jule::Ptr<_1e2505d6e_Struct>&);
inline jule::Ptr<_1e253220d_StructIns> _1e3146cde_buildStructInstance(_1e3143318_typeChecker*, jule::Ptr<_1e2515c4c_IdentTypeDecl>&, jule::Ptr<_1e2505d6e_Struct>&);
inline jule::Ptr<_1e253220d_StructIns> _1e3147196_fromStruct(_1e3143318_typeChecker*, jule::Ptr<_1e2515c4c_IdentTypeDecl>&, jule::Ptr<_1e2505d6e_Struct>&);
inline jule::Trait<_1e313497a_Kind> _1e31474a4_getDef(_1e3143318_typeChecker*, jule::Ptr<_1e2515c4c_IdentTypeDecl>&);
inline jule::Trait<_1e313497a_Kind> _1e31477b2_buildIdent(_1e3143318_typeChecker*, jule::Ptr<_1e2515c4c_IdentTypeDecl>);
inline jule::Trait<_1e313497a_Kind> _1e3147ac0_buildSubIdent(_1e3143318_typeChecker*, jule::Ptr<_1e251639b_SubIdentTypeDecl>);
inline jule::Ptr<_1e313d115_Sptr> _1e3147dcd_buildSptrFromType(_1e3143318_typeChecker*, jule::Ptr<_1e3134da9_TypeKind>&);
inline jule::Ptr<_1e313d115_Sptr> _1e31481db_buildSptr(_1e3143318_typeChecker*, jule::Ptr<_1e2516a3e_SptrTypeDecl>);
inline jule::Ptr<_1e3141679_Ptr> _1e31484e9_buildPtrFromType(_1e3143318_typeChecker*, jule::Ptr<_1e3134da9_TypeKind>&);
inline jule::Ptr<_1e3141679_Ptr> _1e3148807_buildPtr(_1e3143318_typeChecker*, jule::Ptr<_1e2517512_PtrTypeDecl>);
inline jule::Ptr<_1e313da72_Slc> _1e3148b15_buildSlc(_1e3143318_typeChecker*, jule::Ptr<_1e2516e3a_SlcTypeDecl>);
inline jule::Ptr<_1e3140c1c_Arr> _1e3148e23_buildArr(_1e3143318_typeChecker*, jule::Ptr<_1e2517b94_ArrTypeDecl>);
inline jule::Ptr<_1e3140128_Map> _1e3149231_buildMap(_1e3143318_typeChecker*, jule::Ptr<_1e25183e2_MapTypeDecl>);
inline jule::Ptr<_1e313e600_Tuple> _1e314953e_buildTuple(_1e3143318_typeChecker*, jule::Ptr<_1e2517226_TupleTypeDecl>);
inline jule::Bool _1e314984c_checkFnTypes(_1e3143318_typeChecker*, jule::Ptr<_1e258dee5_FnIns>&);
inline jule::Ptr<_1e258dee5_FnIns> _1e3149b5a_buildFn(_1e3143318_typeChecker*, jule::Ptr<_1e252749a_FnDecl>);
inline jule::Trait<_1e313497a_Kind> _1e3149e68_buildByNamespace(_1e3143318_typeChecker*, jule::Ptr<_1e2516753_NamespaceTypeDecl>);
inline jule::Ptr<_1e3134da9_TypeKind> _1e314a276_build(_1e3143318_typeChecker*, jule::Any&);
inline jule::Ptr<_1e3134da9_TypeKind> _1e314a584_checkDecl(_1e3143318_typeChecker*, jule::Ptr<_1e2515686_TypeDecl>&);
inline void _1e314a809_check(_1e3143318_typeChecker*, jule::Ptr<_1e3139012_TypeSymbol>&);
struct _1e3143318_typeChecker {
	jule::Ptr<_1e320d768_Sema> _field_s = jule::Ptr<_1e320d768_Sema>();
	jule::Trait<_1e315091e_Lookup> _field_lookup = jule::Trait<_1e315091e_Lookup>();
	jule::Ptr<_1e31425c0_referencer> _field_referencer = jule::Ptr<_1e31425c0_referencer>();
	jule::Ptr<_1e2591e60_ReferenceStack> _field_refers = jule::Ptr<_1e2591e60_ReferenceStack>();
	jule::Ptr<_1d42b43cc_Token> _field_errorToken = jule::Ptr<_1d42b43cc_Token>();
	jule::Slice<jule::Ptr<_1e2522c6a_GenericDecl>> _field_ignoreGenerics = jule::Slice<jule::Ptr<_1e2522c6a_GenericDecl>>();
	jule::Slice<jule::Ptr<_1e31341b6_TypeAlias>> _field_useGenerics = jule::Slice<jule::Ptr<_1e31341b6_TypeAlias>>();
	jule::Bool _field_notPlain = jule::Bool();
	jule::Bool _field_disBuiltin = jule::Bool();
	jule::Bool _field_selection = jule::Bool();
	jule::Ptr<_1e31341b6_TypeAlias> _field_ownerAlias = jule::Ptr<_1e31341b6_TypeAlias>();
	jule::Slice<jule::Ptr<_1e31341b6_TypeAlias>> _field_bannedGenerics = jule::Slice<jule::Ptr<_1e31341b6_TypeAlias>>();
	jule::Bool _field_inscatch = jule::Bool();
	

	_1e3143318_typeChecker(void) = default;

	inline bool operator==(_1e3143318_typeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_referencer == _other._field_referencer &&
			this->_field_refers == _other._field_refers &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_ignoreGenerics == _other._field_ignoreGenerics &&
			this->_field_useGenerics == _other._field_useGenerics &&
			this->_field_notPlain == _other._field_notPlain &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_selection == _other._field_selection &&
			this->_field_ownerAlias == _other._field_ownerAlias &&
			this->_field_bannedGenerics == _other._field_bannedGenerics &&
			this->_field_inscatch == _other._field_inscatch;
	}

	inline bool operator!=(_1e3143318_typeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool static__1e314ae69_identTypeDecl(jule::Str&, jule::Ptr<_1e2515c4c_IdentTypeDecl>);
inline jule::Bool static__1e314b2aa_exist(jule::Str&, jule::Any&);
struct _1e314aa29_identTypeLookup {
	

	_1e314aa29_identTypeLookup(void) = default;

	inline bool operator==(_1e314aa29_identTypeLookup _other) { return true; }

	inline bool operator!=(_1e314aa29_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _1e337e39a_FileInfo {
	jule::Ptr<_1e24d0d9e_Ast> _field_Ast = jule::Ptr<_1e24d0d9e_Ast>();
	jule::Slice<_20a35491e_Log> _field_Errors = jule::Slice<_20a35491e_Log>();
	

	_1e337e39a_FileInfo(void) = default;

	inline bool operator==(_1e337e39a_FileInfo _other) {
		return 
			this->_field_Ast == _other._field_Ast &&
			this->_field_Errors == _other._field_Errors;
	}

	inline bool operator!=(_1e337e39a_FileInfo _other) { return !this->operator==(_other); }


};
struct _1e33ce0dc_stmt {
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _field_tokens = jule::Slice<jule::Ptr<_1d42b43cc_Token>>();
	jule::Bool _field_terminated = jule::Bool();
	

	_1e33ce0dc_stmt(void) = default;

	inline bool operator==(_1e33ce0dc_stmt _other) {
		return 
			this->_field_tokens == _other._field_tokens &&
			this->_field_terminated == _other._field_terminated;
	}

	inline bool operator!=(_1e33ce0dc_stmt _other) { return !this->operator==(_other); }


};
inline void _1e33d0099_stop(_1e33ce917_scopeParser*);
inline jule::Bool _1e33d030d_stopped(_1e33ce917_scopeParser*);
inline jule::Bool _1e33d0572_finished(_1e33ce917_scopeParser*);
inline jule::Bool _1e33d07d6_isLastSt(_1e33ce917_scopeParser*);
inline void _1e33d0b05_pushErr(_1e33ce917_scopeParser*, jule::Ptr<_1d42b43cc_Token>, jule::Str);
inline void _1e33d0e24_pushSuggestion(_1e33ce917_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1e33d1199_insertAsNext(_1e33ce917_scopeParser*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Ptr<_1e33ce0dc_stmt> _1e33d140d_next(_1e33ce917_scopeParser*);
inline jule::Ptr<_1e25259a4_ScopeTree> _1e33d17b5_buildScope(_1e33ce917_scopeParser*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&, jule::Ptr<_1d42b43cc_Token>);
inline jule::Ptr<_1e2528479_VarDecl> _1e33d1ac3_buildVarSt(_1e33ce917_scopeParser*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Ptr<_1e2528831_RetSt> _1e33d1dd1_buildRetSt(_1e33ce917_scopeParser*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline jule::Ptr<_1e2528e91_Iter> _1e33d21de_buildWhileNextIter(_1e33ce917_scopeParser*, jule::Ptr<_1e33ce0dc_stmt>&);
inline jule::Ptr<_1e2529766_WhileKind> _1e33d24ec_buildWhileIterKind(_1e33ce917_scopeParser*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>> _1e33d280a_getRangeKindKeysTokens(_1e33ce917_scopeParser*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Ptr<_1e2528479_VarDecl> _1e33d2b18_buildRangeKindKey(_1e33ce917_scopeParser*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Slice<jule::Ptr<_1e2528479_VarDecl>> _1e33d2e26_buildRangeKindKeys(_1e33ce917_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>>&);
inline void _1e33d3267_setupRangeKindKeysPlain(_1e33ce917_scopeParser*, jule::Ptr<_1e252a107_RangeKind>&, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline void _1e33d35b9_setupRangeKindKeysExplicit(_1e33ce917_scopeParser*, jule::Ptr<_1e252a107_RangeKind>&, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline void _1e33d38e9_setupRangeKindKeys(_1e33ce917_scopeParser*, jule::Ptr<_1e252a107_RangeKind>&, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Ptr<_1e252a107_RangeKind> _1e33d3d4a_buildRangeIterKind(_1e33ce917_scopeParser*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&, jule::Ptr<_1d42b43cc_Token>&);
inline jule::Any _1e33d4202_buildCommonIterKind(_1e33ce917_scopeParser*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&, jule::Ptr<_1d42b43cc_Token>&);
inline jule::Ptr<_1e2528e91_Iter> _1e33d4510_buildCommonIter(_1e33ce917_scopeParser*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline jule::Ptr<_1e2528e91_Iter> _1e33d481d_buildIterSt(_1e33ce917_scopeParser*, jule::Ptr<_1e33ce0dc_stmt>&);
inline jule::Ptr<_1e252a4ae_BreakSt> _1e33d4b2b_buildBreakSt(_1e33ce917_scopeParser*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Ptr<_1e252a866_ContSt> _1e33d4e39_buildContSt(_1e33ce917_scopeParser*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Ptr<_1e252acd9_If> _1e33d5247_buildIf(_1e33ce917_scopeParser*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Ptr<_1e252b191_Else> _1e33d5555_buildElse(_1e33ce917_scopeParser*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Ptr<_1e252b614_Conditional> _1e33d5863_buildIfElseChain(_1e33ce917_scopeParser*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline jule::Ptr<_1e251b79c_CoExpr> _1e33d5b71_buildCoCallSt(_1e33ce917_scopeParser*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline jule::Ptr<_1e25234c9_GotoSt> _1e33d5e7e_buildGotoSt(_1e33ce917_scopeParser*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Ptr<_1e25237b5_FallSt> _1e33d628c_buildFallSt(_1e33ce917_scopeParser*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Ptr<_1e252bcda_TypeAliasDecl> _1e33d659a_buildTypeAliasSt(_1e33ce917_scopeParser*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline void _1e33d6a0c_pushCaseExpr(_1e33ce917_scopeParser*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>, jule::Ptr<_1d42b43cc_Token>, jule::Bool, jule::Slice<jule::Ptr<_1e2519ba7_Expr>>&);
inline jule::Slice<jule::Ptr<_1e2519ba7_Expr>> _1e33d6db4_buildCaseExprs(_1e33ce917_scopeParser*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&, jule::Bool);
inline jule::Ptr<_1e25259a4_ScopeTree> _1e33d71c2_buildCaseScope(_1e33ce917_scopeParser*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline std::tuple<jule::Ptr<_1e252c25d_Case>,jule::Bool> _1e33d7579_buildCase(_1e33ce917_scopeParser*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&, jule::Bool);
inline std::tuple<jule::Slice<jule::Ptr<_1e252c25d_Case>>,jule::Ptr<_1e252b191_Else>> _1e33d7931_buildCases(_1e33ce917_scopeParser*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>, jule::Bool);
inline jule::Ptr<_1e252c934_MatchCase> _1e33d7c3e_buildMatchCase(_1e33ce917_scopeParser*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline jule::Ptr<_1e25259a4_ScopeTree> _1e33d804c_buildScopeSt(_1e33ce917_scopeParser*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline jule::Ptr<_1e2523122_LabelSt> _1e33d835a_buildLabelSt(_1e33ce917_scopeParser*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline std::tuple<jule::Any,jule::Bool> _1e33d8668_buildIdSt(_1e33ce917_scopeParser*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Ptr<_1e33e70b1_assignInfo> _1e33d8976_buildAssignInfo(_1e33ce917_scopeParser*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Ptr<_1e2523dc0_AssignLeft> _1e33d8c84_buildAssignL(_1e33ce917_scopeParser*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Slice<jule::Ptr<_1e2523dc0_AssignLeft>> _1e33d9092_buildAssignLs(_1e33ce917_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>>&);
inline std::tuple<jule::Ptr<_1e252440e_AssignSt>,jule::Bool> _1e33d93a0_buildPlainAssign(_1e33ce917_scopeParser*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline std::tuple<jule::Ptr<_1e252440e_AssignSt>,jule::Bool> _1e33d96ad_buildDeclAssign(_1e33ce917_scopeParser*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline std::tuple<jule::Ptr<_1e252440e_AssignSt>,jule::Bool> _1e33d99bb_buildAssignSt(_1e33ce917_scopeParser*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Ptr<_1e251a548_UseExpr> _1e33d9cc9_buildUseExpr(_1e33ce917_scopeParser*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Any _1e33da0d7_buildSt(_1e33ce917_scopeParser*, jule::Ptr<_1e33ce0dc_stmt>&);
inline void _1e33da406_build(_1e33ce917_scopeParser*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&, jule::Ptr<_1e25259a4_ScopeTree>&);
struct _1e33ce917_scopeParser {
	jule::Ptr<_1e33ea603_parser> _field_p = jule::Ptr<_1e33ea603_parser>();
	jule::Ptr<_1e25259a4_ScopeTree> _field_s = jule::Ptr<_1e25259a4_ScopeTree>();
	jule::Slice<jule::Ptr<_1e33ce0dc_stmt>> _field_stmts = jule::Slice<jule::Ptr<_1e33ce0dc_stmt>>();
	jule::I64 _field_pos = jule::I64();
	

	_1e33ce917_scopeParser(void) = default;

	inline bool operator==(_1e33ce917_scopeParser _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1e33ce917_scopeParser _other) { return !this->operator==(_other); }


};
inline void _1e33dc57e_pushErr(_1e33dbc76_exprBuilder*, jule::Ptr<_1d42b43cc_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e33dc89d_pushSuggestion(_1e33dbc76_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1e251a834_TupleExpr> _1e33dcbab_buildTuple(_1e33dbc76_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>>&);
inline jule::Ptr<_1e251abdb_LitExpr> _1e33dceb9_buildLit(_1e33dbc76_exprBuilder*, jule::Ptr<_1d42b43cc_Token>);
inline jule::Ptr<_1e2515686_TypeDecl> _1e33dd2c7_buildPrimitiveType(_1e33dbc76_exprBuilder*, jule::Ptr<_1d42b43cc_Token>&);
inline jule::Any _1e33dd5d5_buildSingle(_1e33dbc76_exprBuilder*, jule::Ptr<_1d42b43cc_Token>);
inline jule::Ptr<_1e251bc20_IdentExpr> _1e33dd8e3_buildCppLinkedIdent(_1e33dbc76_exprBuilder*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Ptr<_1e251c429_UnaryExpr> _1e33ddc01_buildUnary(_1e33dbc76_exprBuilder*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline jule::Ptr<_1e251d4b3_SubIdentExpr> _1e33de00e_buildObjSubIdent(_1e33dbc76_exprBuilder*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline jule::Ptr<_1e251d040_NsSelectionExpr> _1e33de31c_buildNsSubIdent(_1e33dbc76_exprBuilder*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Ptr<_1e2515686_TypeDecl> _1e33de62a_buildType(_1e33dbc76_exprBuilder*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Any _1e33de938_buildSubIdent(_1e33dbc76_exprBuilder*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Ptr<_1e251c7d1_VariadicExpr> _1e33dec46_buildVariadic(_1e33dbc76_exprBuilder*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline jule::Any _1e33e0054_buildOpRight(_1e33dbc76_exprBuilder*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Ptr<_1e2519e93_RangeExpr> _1e33e0384_buildBetweenParentheses(_1e33dbc76_exprBuilder*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline jule::Ptr<_1e251cb88_CastExpr> _1e33e06a3_tryBuildCast(_1e33dbc76_exprBuilder*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline void _1e33e0a6b_pushArg(_1e33dbc76_exprBuilder*, jule::Slice<jule::Ptr<_1e2519ba7_Expr>>&, jule::Slice<jule::Ptr<_1d42b43cc_Token>>, jule::Ptr<_1d42b43cc_Token>);
inline jule::Slice<jule::Ptr<_1e2519ba7_Expr>> _1e33e0d79_buildArgs(_1e33dbc76_exprBuilder*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline jule::Slice<jule::Ptr<_1e2515686_TypeDecl>> _1e33e1187_buildCallGenerics(_1e33dbc76_exprBuilder*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline jule::Ptr<_1e251de75_FnCallExpr> _1e33e15d8_buildFnCall(_1e33dbc76_exprBuilder*, jule::Ptr<_1d42b43cc_Token>&, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Any _1e33e18e6_buildParenthesesRange(_1e33dbc76_exprBuilder*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Ptr<_1e251b3e5_UnsafeExpr> _1e33e1c04_buildUnsafeExpr(_1e33dbc76_exprBuilder*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline jule::Ptr<_1e252749a_FnDecl> _1e33e2012_buildAnonFn(_1e33dbc76_exprBuilder*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Any _1e33e2320_buildUnsafe(_1e33dbc76_exprBuilder*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline void _1e33e26d8_pushRangeLitPart(_1e33dbc76_exprBuilder*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>, jule::Ptr<_1d42b43cc_Token>, jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>> _1e33e2a18_getBraceRangeLitExprParts(_1e33dbc76_exprBuilder*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline jule::Ptr<_1e251e904_FieldExprPair> _1e33e2d37_buildFieldExprPair(_1e33dbc76_exprBuilder*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline jule::Ptr<_1e2519ba7_Expr> _1e33e3145_buildStructLitExpr(_1e33dbc76_exprBuilder*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Slice<jule::Ptr<_1e2519ba7_Expr>> _1e33e3453_buildStructLitExprs(_1e33dbc76_exprBuilder*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Ptr<_1e2520152_StructLit> _1e33e3783_buildTypedStructLiteral(_1e33dbc76_exprBuilder*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline jule::Ptr<_1e2519ba7_Expr> _1e33e3aa2_buildBraceLitPart(_1e33dbc76_exprBuilder*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Ptr<_1e25205c5_BraceLit> _1e33e3db0_buildBraceLit(_1e33dbc76_exprBuilder*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Any _1e33e41bd_buildBraceRange(_1e33dbc76_exprBuilder*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>> _1e33e44cb_getEnumerableParts(_1e33dbc76_exprBuilder*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline jule::Ptr<_1e2521560_SliceExpr> _1e33e47d9_buildSlice(_1e33dbc76_exprBuilder*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline jule::Ptr<_1e2521e01_IndexingExpr> _1e33e4c3a_buildIndexing(_1e33dbc76_exprBuilder*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>, jule::Slice<jule::Ptr<_1d42b43cc_Token>>, jule::Ptr<_1d42b43cc_Token>);
inline jule::Ptr<_1e252250b_SlicingExpr> _1e33e52ce_buildSlicing(_1e33dbc76_exprBuilder*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&, jule::Ptr<_1d42b43cc_Token>&, jule::Ptr<_1d42b43cc_Token>);
inline jule::Any _1e33e55dc_buildBracketRange(_1e33dbc76_exprBuilder*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline jule::Any _1e33e58ea_buildData(_1e33dbc76_exprBuilder*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Ptr<_1e251d936_BinopExpr> _1e33e5ca2_buildBinop(_1e33dbc76_exprBuilder*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&, jule::I64);
inline jule::Any _1e33e60b0_build(_1e33dbc76_exprBuilder*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Any _1e33e63bd_buildKind(_1e33dbc76_exprBuilder*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Ptr<_1e2519ba7_Expr> _1e33e66cb_buildFromTokens(_1e33dbc76_exprBuilder*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
struct _1e33dbc76_exprBuilder {
	jule::Ptr<_1e33ea603_parser> _field_p = jule::Ptr<_1e33ea603_parser>();
	

	_1e33dbc76_exprBuilder(void) = default;

	inline bool operator==(_1e33dbc76_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1e33dbc76_exprBuilder _other) { return !this->operator==(_other); }


};
struct _1e33e70b1_assignInfo {
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _field_l = jule::Slice<jule::Ptr<_1d42b43cc_Token>>();
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _field_r = jule::Slice<jule::Ptr<_1d42b43cc_Token>>();
	jule::Ptr<_1d42b43cc_Token> _field_setter = jule::Ptr<_1d42b43cc_Token>();
	jule::Bool _field_ok = jule::Bool();
	

	_1e33e70b1_assignInfo(void) = default;

	inline bool operator==(_1e33e70b1_assignInfo _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_setter == _other._field_setter &&
			this->_field_ok == _other._field_ok;
	}

	inline bool operator!=(_1e33e70b1_assignInfo _other) { return !this->operator==(_other); }


};
inline void _1e33ea933_stop(_1e33ea603_parser*);
inline jule::Bool _1e33eab97_stopped(_1e33ea603_parser*);
inline void _1e33eb060_pushErr(_1e33ea603_parser*, jule::Ptr<_1d42b43cc_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e33eb37e_pushSuggestion(_1e33ea603_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1e2519ba7_Expr> _1e33eb68c_buildExpr(jule::Ptr<_1e33ea603_parser>, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Ptr<_1e24d1e8d_Directive> _1e33eb99a_buildDirective(_1e33ea603_parser*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline void _1e33ebc20_pushDirective(_1e33ea603_parser*, jule::Ptr<_1e24d1e8d_Directive>);
inline jule::Ptr<_1e25259a4_ScopeTree> _1e33ec0c7_buildScope(jule::Ptr<_1e33ea603_parser>, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&, jule::Ptr<_1d42b43cc_Token>);
inline std::tuple<jule::Ptr<_1e2515686_TypeDecl>,jule::Bool> _1e33ec528__buildType(jule::Ptr<_1e33ea603_parser>, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&, jule::I64*, jule::Bool);
inline std::tuple<jule::Ptr<_1e2515686_TypeDecl>,jule::Bool> _1e33ec979_buildType(jule::Ptr<_1e33ea603_parser>, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&, jule::I64*, jule::Bool);
inline jule::Ptr<_1e252bcda_TypeAliasDecl> _1e33ecc87_buildTypeAliasDecl(jule::Ptr<_1e33ea603_parser>, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline void _1e33ed0a6_buildVarTypeAndExpr(jule::Ptr<_1e33ea603_parser>, jule::Ptr<_1e2528479_VarDecl>&, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline void _1e33ed3c5_buildVarCommon(jule::Ptr<_1e33ea603_parser>, jule::Ptr<_1e2528479_VarDecl>&, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline void _1e33ed78d_buildVarBegin(_1e33ea603_parser*, jule::Ptr<_1e2528479_VarDecl>&, jule::I64&, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Ptr<_1e2528479_VarDecl> _1e33eda9b_buildVar(jule::Ptr<_1e33ea603_parser>, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline jule::Ptr<_1e2522c6a_GenericDecl> _1e33edda9_buildGeneric(jule::Ptr<_1e33ea603_parser>, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Slice<jule::Ptr<_1e2522c6a_GenericDecl>> _1e33ee261_buildGenerics(jule::Ptr<_1e33ea603_parser>, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&, jule::Ptr<_1d42b43cc_Token>&);
inline jule::Ptr<_1e252617a_ParamDecl> _1e33ee56e_buildSelfParam(_1e33ea603_parser*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline void _1e33ee937_paramTypeBegin(_1e33ea603_parser*, jule::Ptr<_1e252617a_ParamDecl>&, jule::I64&, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline void _1e33eec56_buildParamType(jule::Ptr<_1e33ea603_parser>, jule::Ptr<_1e252617a_ParamDecl>&, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline void _1e3400075_buildParamBody(jule::Ptr<_1e33ea603_parser>, jule::Ptr<_1e252617a_ParamDecl>&, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline jule::Ptr<_1e252617a_ParamDecl> _1e3400383_buildParam(jule::Ptr<_1e33ea603_parser>, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline void _1e3400608_checkParams(_1e33ea603_parser*, jule::Slice<jule::Ptr<_1e252617a_ParamDecl>>&);
inline jule::Slice<jule::Ptr<_1e252617a_ParamDecl>> _1e34009b0_buildParams(jule::Ptr<_1e33ea603_parser>, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&, jule::Bool);
inline std::tuple<jule::Ptr<_1e2518799_RetTypeDecl>,jule::Bool> _1e3400d67_buildMultiRetType(jule::Ptr<_1e33ea603_parser>, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&, jule::I64&);
inline std::tuple<jule::Ptr<_1e2518799_RetTypeDecl>,jule::Bool> _1e340121e_buildRetType(jule::Ptr<_1e33ea603_parser>, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&, jule::I64&);
inline jule::Ptr<_1e252749a_FnDecl> _1e3401670_buildFnPrototype(jule::Ptr<_1e33ea603_parser>, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&, jule::I64&, jule::Bool);
inline jule::Ptr<_1e252749a_FnDecl> _1e3401ac1_buildFn(jule::Ptr<_1e33ea603_parser>, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_1d42b43cc_Token>> _1e3401dce_getUseDeclSelectors(_1e33ea603_parser*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline void _1e34021ed_buildCppUseDecl(_1e33ea603_parser*, jule::Ptr<_1e252d1c6_UseDecl>&, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline void _1e340251c_buildStdUseDecl(_1e33ea603_parser*, jule::Ptr<_1e252d1c6_UseDecl>&, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline void _1e340283b_buildIdentUseDecl(_1e33ea603_parser*, jule::Ptr<_1e252d1c6_UseDecl>&, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline void _1e3402b5a_parseUseDecl(_1e33ea603_parser*, jule::Ptr<_1e252d1c6_UseDecl>&, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline jule::Ptr<_1e252d1c6_UseDecl> _1e3403012_buildUseDecl(_1e33ea603_parser*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>, jule::Bool);
inline jule::Ptr<_1e2515686_TypeDecl> _1e34033b9_buildTypeEnumItemKind(jule::Ptr<_1e33ea603_parser>, jule::I64&, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Slice<jule::Ptr<_1e252eb78_TypeEnumItemDecl>> _1e34036c7_buildTypeEnumItems(jule::Ptr<_1e33ea603_parser>, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Ptr<_1e252ed76_TypeEnumDecl> _1e34039d5_buildTypeEnumDecl(jule::Ptr<_1e33ea603_parser>, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Ptr<_1e2519ba7_Expr> _1e3403d8c_buildEnumItemExpr(jule::Ptr<_1e33ea603_parser>, jule::I64&, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Slice<jule::Ptr<_1e252d649_EnumItemDecl>> _1e340419a_buildEnumItems(jule::Ptr<_1e33ea603_parser>, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Ptr<_1e252e172_EnumDecl> _1e34044a8_buildEnumDecl(jule::Ptr<_1e33ea603_parser>, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Any _1e34047b6_buildNodeEnumDecl(jule::Ptr<_1e33ea603_parser>, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Ptr<_1e25303c6_FieldDecl> _1e3404ac4_buildField(jule::Ptr<_1e33ea603_parser>, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline jule::Slice<jule::Ptr<_1e25303c6_FieldDecl>> _1e3404dd2_buildStructDeclFields(jule::Ptr<_1e33ea603_parser>, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline jule::Ptr<_1e2530c34_StructDecl> _1e34051e0_buildStructDecl(jule::Ptr<_1e33ea603_parser>, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline void _1e3405465_checkMethodReceiver(_1e33ea603_parser*, jule::Ptr<_1e252749a_FnDecl>&);
inline jule::Slice<jule::Ptr<_1e252749a_FnDecl>> _1e3405773_buildTraitMethods(jule::Ptr<_1e33ea603_parser>, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline jule::Ptr<_1e253133e_TraitDecl> _1e3405a81_buildTraitDecl(jule::Ptr<_1e33ea603_parser>, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Ptr<_1e252749a_FnDecl> _1e3405d8e_buildCppLinkFn(jule::Ptr<_1e33ea603_parser>, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline jule::Ptr<_1e2528479_VarDecl> _1e340619c_buildCppLinkVar(jule::Ptr<_1e33ea603_parser>, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline jule::Ptr<_1e2530c34_StructDecl> _1e34064aa_buildCppLinkStruct(jule::Ptr<_1e33ea603_parser>, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline jule::Ptr<_1e252bcda_TypeAliasDecl> _1e34067b8_buildCppLinkTypeAlias(jule::Ptr<_1e33ea603_parser>, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline jule::Ptr<_1e252d1c6_UseDecl> _1e3406ac6_buildCppLinkUse(jule::Ptr<_1e33ea603_parser>, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline jule::Any _1e3406dd4_buildCppLink(jule::Ptr<_1e33ea603_parser>, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Ptr<_1e252749a_FnDecl> _1e34071e2_getMethod(jule::Ptr<_1e33ea603_parser>, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline void _1e3407511_parseImplBody(jule::Ptr<_1e33ea603_parser>, jule::Ptr<_1e2531949_Impl>&, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Ptr<_1e2531949_Impl> _1e340781e_buildImpl(jule::Ptr<_1e33ea603_parser>, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline jule::Any _1e3407b2c_buildNodeData(jule::Ptr<_1e33ea603_parser>, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline void _1e3407e4b_applyFnMeta(_1e33ea603_parser*, jule::Ptr<_1e252749a_FnDecl>&, jule::Bool);
inline void _1e340826a_applyMeta(_1e33ea603_parser*, _1e24d1a92_Node&, jule::Bool);
inline std::tuple<jule::Bool,jule::Any> _1e340859a_buildGeneralScopeNodeData(jule::Ptr<_1e33ea603_parser>, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline void _1e34087a9_pushUseDecl(jule::Ptr<_1e33ea603_parser>, jule::Ptr<_1e252d1c6_UseDecl>&);
inline jule::Bool _1e3408ab7_pushMetaNodes(jule::Ptr<_1e33ea603_parser>, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline _1e24d1a92_Node _1e3408dc5_parseNode(jule::Ptr<_1e33ea603_parser>, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline void _1e340914a_appendNode(jule::Ptr<_1e33ea603_parser>, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline void _1e34095ac_removeRange(_1e33ea603_parser*, jule::I64, jule::Str, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&, jule::Slice<jule::I64>&);
inline void _1e3409975_pushWrongOrderCloseErr(_1e33ea603_parser*, jule::Ptr<_1d42b43cc_Token>&, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&, jule::Slice<jule::I64>&);
inline void _1e3409dd7_pushRangeClose(_1e33ea603_parser*, jule::Ptr<_1d42b43cc_Token>, jule::Str, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&, jule::Slice<jule::I64>&);
inline void _1e340a15c_checkRanges(_1e33ea603_parser*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline void _1e340a3d2_parse(jule::Ptr<_1e33ea603_parser>, jule::Ptr<_1d42b9767_File>&);
struct _1e33ea603_parser {
	jule::Ptr<_1e24d0d9e_Ast> _field_ast = jule::Ptr<_1e24d0d9e_Ast>();
	jule::Slice<jule::Ptr<_1e24d1e8d_Directive>> _field_directives = jule::Slice<jule::Ptr<_1e24d1e8d_Directive>>();
	jule::Slice<_20a35491e_Log> _field_errors = jule::Slice<_20a35491e_Log>();
	

	_1e33ea603_parser(void) = default;

	inline bool operator==(_1e33ea603_parser _other) {
		return 
			this->_field_ast == _other._field_ast &&
			this->_field_directives == _other._field_directives &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1e33ea603_parser _other) { return !this->operator==(_other); }


};
inline void _1e340be61_pushErr(_1e340b8bc_typeBuilder*, jule::Ptr<_1d42b43cc_Token>, jule::Str);
inline void _1e340c280_pushSuggestion(_1e340b8bc_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1e2515686_TypeDecl> _1e340c4e4_buildPrim(_1e340b8bc_typeBuilder*);
inline jule::Ptr<_1e2515686_TypeDecl> _1e340c758_buildNamespace(_1e340b8bc_typeBuilder*);
inline jule::Slice<jule::Ptr<_1e2515686_TypeDecl>> _1e340c9bc_buildGenerics(_1e340b8bc_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>> _1e340cc31_identGenerics(_1e340b8bc_typeBuilder*);
inline jule::Ptr<_1e2515686_TypeDecl> _1e340ce95_buildIdent(_1e340b8bc_typeBuilder*);
inline jule::Ptr<_1e2515686_TypeDecl> _1e340d209_buildCppLink(_1e340b8bc_typeBuilder*);
inline jule::Ptr<_1e2515686_TypeDecl> _1e340d46d_buildFn(_1e340b8bc_typeBuilder*);
inline jule::Ptr<_1e2515686_TypeDecl> _1e340d6d2_buildPtr(_1e340b8bc_typeBuilder*);
inline jule::Ptr<_1e2515686_TypeDecl> _1e340d946_buildSptr(_1e340b8bc_typeBuilder*);
inline jule::Ptr<_1e2515686_TypeDecl> _1e340dbaa_buildOp(_1e340b8bc_typeBuilder*);
inline jule::Ptr<_1e2515686_TypeDecl> _1e340de1e_buildSlc(_1e340b8bc_typeBuilder*);
inline jule::Ptr<_1e2515686_TypeDecl> _1e340e183_buildArr(_1e340b8bc_typeBuilder*);
inline jule::Ptr<_1e2515686_TypeDecl> _1e340e53a_buildMap(_1e340b8bc_typeBuilder*, jule::I64, jule::I64);
inline jule::Ptr<_1e2515686_TypeDecl> _1e340e79e_buildEnumerable(_1e340b8bc_typeBuilder*);
inline jule::Ptr<_1e2515686_TypeDecl> _1e340ea13_step(_1e340b8bc_typeBuilder*);
inline std::tuple<jule::Ptr<_1e2515686_TypeDecl>,jule::Bool> _1e340ec77_build(_1e340b8bc_typeBuilder*);
struct _1e340b8bc_typeBuilder {
	jule::Ptr<_1e33ea603_parser> _field_p = jule::Ptr<_1e33ea603_parser>();
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _field_tokens = jule::Slice<jule::Ptr<_1d42b43cc_Token>>();
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = jule::Bool();
	

	_1e340b8bc_typeBuilder(void) = default;

	inline bool operator==(_1e340b8bc_typeBuilder _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_i == _other._field_i &&
			this->_field_err == _other._field_err;
	}

	inline bool operator!=(_1e340b8bc_typeBuilder _other) { return !this->operator==(_other); }


};
struct _1e3317a2b_CompileInfo {
	jule::Bool _field_Prod = jule::Bool();
	jule::Bool _field_Test = jule::Bool();
	jule::Str _field_Compiler = jule::Str("clang", 5);
	jule::Str _field_CppStd = jule::Str("cpp14", 5);
	

	_1e3317a2b_CompileInfo(void) = default;

	inline bool operator==(_1e3317a2b_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_1e3317a2b_CompileInfo _other) { return !this->operator==(_other); }


};
inline void _1e33193ce_pushErr(_1e3318d7e_directiveEval*, jule::Ptr<_1d42b43cc_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>> _1e3319786_splitOperans(_1e3318d7e_directiveEval*, jule::Str, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Bool _1e3319a94_evalDirectiveIdent(_1e3318d7e_directiveEval*, jule::Str);
inline jule::Bool _1e3319da2_evalDirectivePart(_1e3318d7e_directiveEval*, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline jule::Bool _1e331a116_eval(_1e3318d7e_directiveEval*);
struct _1e3318d7e_directiveEval {
	jule::Slice<_20a35491e_Log> _field_logs = jule::Slice<_20a35491e_Log>();
	jule::Ptr<_1e24d1e8d_Directive> _field_d = jule::Ptr<_1e24d1e8d_Directive>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();
	

	_1e3318d7e_directiveEval(void) = default;

	inline bool operator==(_1e3318d7e_directiveEval _other) {
		return 
			this->_field_logs == _other._field_logs &&
			this->_field_d == _other._field_d &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_1e3318d7e_directiveEval _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e333ae7d_JuleImporter> static__1e3387c00_New(_1e3317a2b_CompileInfo);
inline jule::Slice<jule::Ptr<_1e320561c_ImportInfo>> _1e338952b_AllPackages(_1e333ae7d_JuleImporter*);
inline void _1e339a4d7_SetModPath(_1e333ae7d_JuleImporter*, jule::Str);
inline jule::Str _1e33a7291_GetModPath(_1e333ae7d_JuleImporter*);
inline jule::Str _1e33ada7d_ModById(_1e333ae7d_JuleImporter*, jule::I64);
inline jule::Ptr<_1e320561c_ImportInfo> _1e33b5aeb_GetImport(_1e333ae7d_JuleImporter*, jule::Str);
inline std::tuple<jule::Slice<jule::Ptr<_1e24d0d9e_Ast>>,jule::Slice<_20a35491e_Log>> _1e33bb1b7_ImportPackage(_1e333ae7d_JuleImporter*, jule::Str, jule::Bool);
inline void _1e3330901_Imported(_1e333ae7d_JuleImporter*, jule::Ptr<_1e320561c_ImportInfo>);
inline std::tuple<jule::Bool,jule::Slice<_20a35491e_Log>> _1e338ee27_isPassBuildDirectives(_1e333ae7d_JuleImporter*, jule::Ptr<_1e24d0d9e_Ast>&);
struct _1e333ae7d_JuleImporter {
	jule::Slice<jule::Str> _field_mods = jule::Slice<jule::Str>();
	jule::Str _field_mod = jule::Str();
	jule::Slice<jule::Ptr<_1e320561c_ImportInfo>> _field_pkgs = jule::Slice<jule::Ptr<_1e320561c_ImportInfo>>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();
	

	_1e333ae7d_JuleImporter(void) = default;

	inline bool operator==(_1e333ae7d_JuleImporter _other) {
		return 
			this->_field_mods == _other._field_mods &&
			this->_field_mod == _other._field_mod &&
			this->_field_pkgs == _other._field_pkgs &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_1e333ae7d_JuleImporter _other) { return !this->operator==(_other); }


};
struct _1e32ee34d_OrderedDefines {
	jule::Slice<jule::Ptr<_1e2505d6e_Struct>> _field_Structs = jule::Slice<jule::Ptr<_1e2505d6e_Struct>>();
	jule::Slice<jule::Ptr<_1e322a147_Var>> _field_Globals = jule::Slice<jule::Ptr<_1e322a147_Var>>();
	

	_1e32ee34d_OrderedDefines(void) = default;

	inline bool operator==(_1e32ee34d_OrderedDefines _other) {
		return 
			this->_field_Structs == _other._field_Structs &&
			this->_field_Globals == _other._field_Globals;
	}

	inline bool operator!=(_1e32ee34d_OrderedDefines _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e6633a03_isCommonOrdered(jule::Slice<jule::Ptr<_1e2505d6e_Struct>>&, jule::Ptr<_1e2505d6e_Struct>);
inline jule::Bool _1e663bdb3_isCommonOrdered(jule::Slice<jule::Ptr<_1e322a147_Var>>&, jule::Ptr<_1e322a147_Var>);
inline void _1e662ea43_orderCommon(jule::Slice<jule::Ptr<_1e2505d6e_Struct>>&);
inline void _1e662ec63_orderCommon(jule::Slice<jule::Ptr<_1e322a147_Var>>&);
inline void static__1e3388470_orderStructures(jule::Slice<jule::Ptr<_1e2505d6e_Struct>>&);
inline void static__1e33b3764_orderVars(jule::Slice<jule::Ptr<_1e322a147_Var>>&);
struct _1e33bb32c_defineOrderer {
	

	_1e33bb32c_defineOrderer(void) = default;

	inline bool operator==(_1e33bb32c_defineOrderer _other) { return true; }

	inline bool operator!=(_1e33bb32c_defineOrderer _other) { return !this->operator==(_other); }


};
struct _1e3bd4947_liveTable {
	jule::Slice<jule::Ptr<_1e322a147_Var>> _field_vars = jule::Slice<jule::Ptr<_1e322a147_Var>>();
	jule::Slice<jule::Ptr<_1e258dee5_FnIns>> _field_fns = jule::Slice<jule::Ptr<_1e258dee5_FnIns>>();
	jule::Slice<jule::Ptr<_1e253220d_StructIns>> _field_structs = jule::Slice<jule::Ptr<_1e253220d_StructIns>>();
	jule::Slice<jule::Ptr<_1e259d246_Trait>> _field_traits = jule::Slice<jule::Ptr<_1e259d246_Trait>>();
	

	_1e3bd4947_liveTable(void) = default;

	inline bool operator==(_1e3bd4947_liveTable _other) {
		return 
			this->_field_vars == _other._field_vars &&
			this->_field_fns == _other._field_fns &&
			this->_field_structs == _other._field_structs &&
			this->_field_traits == _other._field_traits;
	}

	inline bool operator!=(_1e3bd4947_liveTable _other) { return !this->operator==(_other); }


};
inline void _1e3c169e0_optimizeChild(jule::Ptr<_1e3c16517_scopeDeadCode>, jule::Ptr<_1e31d6c3b_Scope>&);
inline void _1e3c16c87_optimizeBodyChildExceptional(jule::Ptr<_1e3c16517_scopeDeadCode>, jule::Ptr<_1e31d6c3b_Scope>&);
inline void _1e3c1701d_optimizeBodyChild(jule::Ptr<_1e3c16517_scopeDeadCode>, jule::Ptr<_1e31d6c3b_Scope>&);
inline void _1e3c17293_optimizeExprModel(jule::Ptr<_1e3c16517_scopeDeadCode>, jule::Any&);
inline void _1e3c1746e_eliminateFollowed(_1e3c16517_scopeDeadCode*);
inline void _1e3c176e4_pushGoto(jule::Ptr<_1e3c16517_scopeDeadCode>, jule::Ptr<_1e31d9766_GotoSt>);
inline void _1e3c17969_pushLabel(jule::Ptr<_1e3c16517_scopeDeadCode>, jule::Ptr<_1e31d947a_Label>);
inline void _1e3c17bde_optimizeRangeIter(jule::Ptr<_1e3c16517_scopeDeadCode>, jule::Ptr<_1e31d88db_RangeIter>);
inline void _1e3c17e64_optimizeWhileIter(jule::Ptr<_1e3c16517_scopeDeadCode>, jule::Ptr<_1e31d8006_WhileIter>);
inline void _1e3c181d9_optimizeInfIter(jule::Ptr<_1e3c16517_scopeDeadCode>, jule::Ptr<_1e31d7a83_InfIter>);
inline void _1e3c1845e_optimizeConditional(jule::Ptr<_1e3c16517_scopeDeadCode>, jule::Ptr<_1e31d7797_Conditional>);
inline void _1e3c186d4_optimizeMatch(jule::Ptr<_1e3c16517_scopeDeadCode>, jule::Ptr<_1e31da987_Match>);
inline void _1e3c18959_optimizeAssign(jule::Ptr<_1e3c16517_scopeDeadCode>, jule::Ptr<_1e31da091_Assign>);
inline void _1e3c18bce_optimizeMultiAssign(jule::Ptr<_1e3c16517_scopeDeadCode>, jule::Ptr<_1e31da448_MultiAssign>);
inline void _1e3c18e54_optimizeStmt(jule::Ptr<_1e3c16517_scopeDeadCode>, jule::Any);
inline void _1e3c19130_optimizeStmts(jule::Ptr<_1e3c16517_scopeDeadCode>);
struct _1e3c16517_scopeDeadCode {
	jule::Ptr<_1e3c16517_scopeDeadCode> _field_parent = jule::Ptr<_1e3c16517_scopeDeadCode>();
	jule::Ptr<_1e31d6c3b_Scope> _field_s = jule::Ptr<_1e31d6c3b_Scope>();
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = jule::I64();
	jule::Ptr<jule::Slice<jule::Ptr<_1e31d947a_Label>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_1e31d947a_Label>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_1e31d9766_GotoSt>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_1e31d9766_GotoSt>>>();
	jule::Bool _field_except = jule::Bool();
	

	_1e3c16517_scopeDeadCode(void) = default;

	inline bool operator==(_1e3c16517_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_1e3c16517_scopeDeadCode _other) { return !this->operator==(_other); }


};
inline _1e3c1a472_exprDeadCode static__1e3c1aa6b_new(jule::Ptr<_1e3c16517_scopeDeadCode>&);
inline void _1e3c1ace1_binary(_1e3c1a472_exprDeadCode*, jule::Ptr<_1e2583e74_BinopExprModel>);
inline void _1e3c1b066_unary(_1e3c1a472_exprDeadCode*, jule::Ptr<_1e2584161_UnaryExprModel>);
inline void _1e3c1b2db_structureLit(_1e3c1a472_exprDeadCode*, jule::Ptr<_1e258453a_StructLitExprModel>);
inline void _1e3c1b561_allocStructure(_1e3c1a472_exprDeadCode*, jule::Ptr<_1e2584727_AllocStructLitExprModel>);
inline void _1e3c1b7d6_casting(_1e3c1a472_exprDeadCode*, jule::Ptr<_1e2584914_CastingExprModel>);
inline void _1e3c1ba5b_args(_1e3c1a472_exprDeadCode*, jule::Slice<jule::Any>&);
inline void _1e3c1bcd1_funcCall(_1e3c1a472_exprDeadCode*, jule::Ptr<_1e2584b01_FnCallExprModel>);
inline void _1e3c1c056_slice(_1e3c1a472_exprDeadCode*, jule::Ptr<_1e2584cdd_SliceExprModel>);
inline void _1e3c1c2cb_array(_1e3c1a472_exprDeadCode*, jule::Ptr<_1e2586262_ArrayExprModel>);
inline void _1e3c1c551_indexing(_1e3c1a472_exprDeadCode*, jule::Ptr<_1e2584eca_IndexingExprModel>);
inline void _1e3c1c7c6_anonFunc(_1e3c1a472_exprDeadCode*, jule::Ptr<_1e25851b7_AnonFnExprModel>);
inline void _1e3c1ca4b_map(_1e3c1a472_exprDeadCode*, jule::Ptr<_1e2585591_MapExprModel>);
inline void _1e3c1ccc1_slicing(_1e3c1a472_exprDeadCode*, jule::Ptr<_1e258577d_SlicingExprModel>);
inline void _1e3c1d046_traitSub(_1e3c1a472_exprDeadCode*, jule::Ptr<_1e258596a_TraitSubIdentExprModel>);
inline void _1e3c1d2bb_structureSub(_1e3c1a472_exprDeadCode*, jule::Ptr<_1e2585d88_StructSubIdentExprModel>);
inline void _1e3c1d541_commonSub(_1e3c1a472_exprDeadCode*, jule::Ptr<_1e258663b_CommonSubIdentExprModel>);
inline void _1e3c1d7b6_tuple(_1e3c1a472_exprDeadCode*, jule::Ptr<_1e2586828_TupleExprModel>);
inline void _1e3c1da3b_newCall(_1e3c1a472_exprDeadCode*, jule::Ptr<_1e25870cb_BuiltinNewCallExprModel>);
inline void _1e3c1dcb1_outCall(_1e3c1a472_exprDeadCode*, jule::Ptr<_1e2586a15_BuiltinOutCallExprModel>);
inline void _1e3c1e036_outlnCall(_1e3c1a472_exprDeadCode*, jule::Ptr<_1e2586c02_BuiltinOutlnCallExprModel>);
inline void _1e3c1e2ab_panicCall(_1e3c1a472_exprDeadCode*, jule::Ptr<_1e25872b8_BuiltinPanicCallExprModel>);
inline void _1e3c1e531_assertCall(_1e3c1a472_exprDeadCode*, jule::Ptr<_1e25874a5_BuiltinAssertCallExprModel>);
inline void _1e3c1e7a6_errorCall(_1e3c1a472_exprDeadCode*, jule::Ptr<_1e2587c58_BuiltinErrorCallExprModel>);
inline void _1e3c1ea2b_makeCall(_1e3c1a472_exprDeadCode*, jule::Ptr<_1e2587692_BuiltinMakeCallExprModel>);
inline void _1e3c1eca1_appendCall(_1e3c1a472_exprDeadCode*, jule::Ptr<_1e258787e_BuiltinAppendCallExprModel>);
inline void _1e3c20026_cloneCall(_1e3c1a472_exprDeadCode*, jule::Ptr<_1e2586dde_BuiltinCloneCallExprModel>);
inline void _1e3c2029b_sizeof(_1e3c1a472_exprDeadCode*, jule::Ptr<_1e2585b57_SizeofExprModel>);
inline void _1e3c20521_alignof(_1e3c1a472_exprDeadCode*, jule::Ptr<_1e25883b8_AlignofExprModel>);
inline void _1e3c20796_integratedToStr(_1e3c1a472_exprDeadCode*, jule::Ptr<_1e2588792_IntegratedToStrExprModel>);
inline void _1e3c20a1b_free(_1e3c1a472_exprDeadCode*, jule::Ptr<_1e2588b6b_FreeExprModel>);
inline void _1e3c20c91_backendEmit(_1e3c1a472_exprDeadCode*, jule::Ptr<_1e258897e_BackendEmitExprModel>);
inline void _1e3c21016_optimize(_1e3c1a472_exprDeadCode*, jule::Any&);
struct _1e3c1a472_exprDeadCode {
	jule::Ptr<_1e3c16517_scopeDeadCode> _field_s = jule::Ptr<_1e3c16517_scopeDeadCode>();
	

	_1e3c1a472_exprDeadCode(void) = default;

	inline bool operator==(_1e3c1a472_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1e3c1a472_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _1d42d3d8b_UnsafeBinopExprModel {
	jule::Ptr<_1e2583e74_BinopExprModel> _field_Node = jule::Ptr<_1e2583e74_BinopExprModel>();
	

	_1d42d3d8b_UnsafeBinopExprModel(void) = default;

	inline bool operator==(_1d42d3d8b_UnsafeBinopExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1d42d3d8b_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _1d42d4d15_UnsafeIndexingExprModel {
	jule::Ptr<_1e2584eca_IndexingExprModel> _field_Node = jule::Ptr<_1e2584eca_IndexingExprModel>();
	

	_1d42d4d15_UnsafeIndexingExprModel(void) = default;

	inline bool operator==(_1d42d4d15_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1d42d4d15_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1e10cb072_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any();
	jule::Ptr<_1e2584cdd_SliceExprModel> _field_Elems = jule::Ptr<_1e2584cdd_SliceExprModel>();
	

	_1e10cb072_PushToSliceExprModel(void) = default;

	inline bool operator==(_1e10cb072_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1e10cb072_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1e12489e7_MutSlicingExprModel {
	jule::Ptr<_1d42b43cc_Token> _field_Token = jule::Ptr<_1d42b43cc_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Any _field_Left = jule::Any();
	jule::Any _field_Right = jule::Any();
	

	_1e12489e7_MutSlicingExprModel(void) = default;

	inline bool operator==(_1e12489e7_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1e12489e7_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1e17484d0_StrInsertBeginExprModel {
	jule::Any _field_Dest = jule::Any();
	jule::Any _field_Expr = jule::Any();
	

	_1e17484d0_StrInsertBeginExprModel(void) = default;

	inline bool operator==(_1e17484d0_StrInsertBeginExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1e17484d0_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e1600552_scopeOptimizer> static__1d42d1a8c_new(jule::Ptr<_1e31d6c3b_Scope>);
inline void _1d42d59e7_setCurrentStmt(_1e1600552_scopeOptimizer*, jule::Any);
inline void _1d42d6520_optimizeData(_1e1600552_scopeOptimizer*, jule::Ptr<_1e310908c_Data>);
inline void _1d42d8c92_optimizeVar(_1e1600552_scopeOptimizer*, jule::Ptr<_1e322a147_Var>);
inline void _1d42da238_optimizeConditional(_1e1600552_scopeOptimizer*, jule::Ptr<_1e31d7797_Conditional>);
inline void _1d42da6de_buildDefaultConstatTrueCase(_1e1600552_scopeOptimizer*, jule::Ptr<_1e31db4d2_Case>, jule::I64&, jule::Ptr<_1e31da987_Match>&);
inline void _1e1021b00_optimizeMatch(_1e1600552_scopeOptimizer*, jule::Ptr<_1e31da987_Match>);
inline void _1e1029cd4_optimizeRangeIter(_1e1600552_scopeOptimizer*, jule::Ptr<_1e31d88db_RangeIter>);
inline void _1e102ce08_optimizeWhileIter(_1e1600552_scopeOptimizer*, jule::Ptr<_1e31d8006_WhileIter>);
inline jule::Bool _1e102e723_substr(_1e1600552_scopeOptimizer*, jule::Ptr<_1e31da091_Assign>);
inline jule::Bool _1e103401e_strInsert(_1e1600552_scopeOptimizer*, jule::Ptr<_1e31da091_Assign>);
inline jule::Bool _1e1029a3c_strAssign(_1e1600552_scopeOptimizer*, jule::Ptr<_1e31da091_Assign>);
inline void _1e10390bd_optimizeAssign(_1e1600552_scopeOptimizer*, jule::Ptr<_1e31da091_Assign>);
inline void _1e103bb2b_optimizeMultiAssign(_1e1600552_scopeOptimizer*, jule::Ptr<_1e31da448_MultiAssign>);
inline void _1e103d237_optimizeRet(_1e1600552_scopeOptimizer*, jule::Ptr<_1e31dc00a_RetSt>);
inline void _1e1040c95_optimizeStmt(_1e1600552_scopeOptimizer*, jule::Any);
inline void _1e1041ee9_optimizeChild(_1e1600552_scopeOptimizer*, jule::Ptr<_1e31d6c3b_Scope>);
inline void _1e1049cd2_optimize(_1e1600552_scopeOptimizer*);
struct _1e1600552_scopeOptimizer {
	jule::I64 _field_i = jule::I64();
	jule::Ptr<_1e31d6c3b_Scope> _field_scope = jule::Ptr<_1e31d6c3b_Scope>();
	

	_1e1600552_scopeOptimizer(void) = default;

	inline bool operator==(_1e1600552_scopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1e1600552_scopeOptimizer _other) { return !this->operator==(_other); }


};
inline void static__1e1088ace_optimize(jule::Any&);
inline jule::Bool _1e109a6e5_strCond(_1e1605678_exprOptimizer*, jule::Ptr<_1e2583e74_BinopExprModel>);
inline void _1e10bee56_binary(_1e1605678_exprOptimizer*, jule::Ptr<_1e2583e74_BinopExprModel>);
inline void _1e10c393d_unary(_1e1605678_exprOptimizer*, jule::Ptr<_1e2584161_UnaryExprModel>);
inline void _1e10cc7c1_structureLit(_1e1605678_exprOptimizer*, jule::Ptr<_1e258453a_StructLitExprModel>);
inline void _1e122142b_allocStructure(_1e1605678_exprOptimizer*, jule::Ptr<_1e2584727_AllocStructLitExprModel>);
inline void _1e1235451_casting(_1e1605678_exprOptimizer*, jule::Ptr<_1e2584914_CastingExprModel>);
inline void _1e123e3e4_args(_1e1605678_exprOptimizer*, jule::Slice<jule::Any>&);
inline void _1e1245373_scope(_1e1605678_exprOptimizer*, jule::Ptr<_1e31d6c3b_Scope>&);
inline void _1e12463eb_funcCall(_1e1605678_exprOptimizer*, jule::Ptr<_1e2584b01_FnCallExprModel>);
inline void _1e1234d8a_slice(_1e1605678_exprOptimizer*, jule::Ptr<_1e2584cdd_SliceExprModel>);
inline void _1e124a29b_array(_1e1605678_exprOptimizer*, jule::Ptr<_1e2586262_ArrayExprModel>);
inline void _1e12576d7_indexing(_1e1605678_exprOptimizer*, jule::Ptr<_1e2584eca_IndexingExprModel>);
inline void _1e125c2e1_anonFunc(_1e1605678_exprOptimizer*, jule::Ptr<_1e25851b7_AnonFnExprModel>);
inline void _1e12629bc_map(_1e1605678_exprOptimizer*, jule::Ptr<_1e2585591_MapExprModel>);
inline void _1e1263dca_slicing(_1e1605678_exprOptimizer*, jule::Ptr<_1e258577d_SlicingExprModel>);
inline void _1e1265184_traitSub(_1e1605678_exprOptimizer*, jule::Ptr<_1e258596a_TraitSubIdentExprModel>);
inline void _1e126b784_structureSub(_1e1605678_exprOptimizer*, jule::Ptr<_1e2585d88_StructSubIdentExprModel>);
inline void _1e12702c1_commonSub(_1e1605678_exprOptimizer*, jule::Ptr<_1e258663b_CommonSubIdentExprModel>);
inline void _1e127c124_tuple(_1e1605678_exprOptimizer*, jule::Ptr<_1e2586828_TupleExprModel>);
inline void _1e1288707_newCall(_1e1605678_exprOptimizer*, jule::Ptr<_1e25870cb_BuiltinNewCallExprModel>);
inline void _1e1293525_outCall(_1e1605678_exprOptimizer*, jule::Ptr<_1e2586a15_BuiltinOutCallExprModel>);
inline void _1e12b44be_outlnCall(_1e1605678_exprOptimizer*, jule::Ptr<_1e2586c02_BuiltinOutlnCallExprModel>);
inline void _1e12b6c63_panicCall(_1e1605678_exprOptimizer*, jule::Ptr<_1e25872b8_BuiltinPanicCallExprModel>);
inline void _1e12bb372_assertCall(_1e1605678_exprOptimizer*, jule::Ptr<_1e25874a5_BuiltinAssertCallExprModel>);
inline void _1e12c912c_errorCall(_1e1605678_exprOptimizer*, jule::Ptr<_1e2587c58_BuiltinErrorCallExprModel>);
inline void _1e12dc2e9_makeCall(_1e1605678_exprOptimizer*, jule::Ptr<_1e2587692_BuiltinMakeCallExprModel>);
inline void _1e132d14d_appendCall(_1e1605678_exprOptimizer*, jule::Ptr<_1e258787e_BuiltinAppendCallExprModel>);
inline void _1e1376bad_cloneCall(_1e1605678_exprOptimizer*, jule::Ptr<_1e2586dde_BuiltinCloneCallExprModel>);
inline void _1e15913b1_sizeof(_1e1605678_exprOptimizer*, jule::Ptr<_1e2585b57_SizeofExprModel>);
inline void _1e1595508_alignof(_1e1605678_exprOptimizer*, jule::Ptr<_1e25883b8_AlignofExprModel>);
inline void _1e15b6282_integratedToStr(_1e1605678_exprOptimizer*, jule::Ptr<_1e2588792_IntegratedToStrExprModel>);
inline void _1e15d446a_free(_1e1605678_exprOptimizer*, jule::Ptr<_1e2588b6b_FreeExprModel>);
inline void _1e15d5207_backendEmit(_1e1605678_exprOptimizer*, jule::Ptr<_1e258897e_BackendEmitExprModel>);
inline void _1e15d615e_do(_1e1605678_exprOptimizer*);
struct _1e1605678_exprOptimizer {
	jule::Ptr<jule::Any> _field_model = jule::Ptr<jule::Any>();
	

	_1e1605678_exprOptimizer(void) = default;

	inline bool operator==(_1e1605678_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1e1605678_exprOptimizer _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e3bdecc6_Optimizer> static__1e3b53564_New(jule::Ptr<_1e3381952_IR>&);
inline void _1e3b272a2_optimizeGlobal(_1e3bdecc6_Optimizer*, jule::Ptr<_1e322a147_Var>&);
inline void _1e3b82153_optimizeFunction(_1e3bdecc6_Optimizer*, jule::Ptr<_1e258b344_Fn>&);
inline void _1e3b86498_optimizeStruct(_1e3bdecc6_Optimizer*, jule::Ptr<_1e2505d6e_Struct>&);
inline void _1e3b8a0e5_optimizeGlobals(_1e3bdecc6_Optimizer*, jule::Ptr<_1e3208576_Package>&);
inline void _1e3b9144d_optimizeFunctions(_1e3bdecc6_Optimizer*, jule::Ptr<_1e3208576_Package>&);
inline void _1e3b995aa_optimizeStructs(_1e3bdecc6_Optimizer*, jule::Ptr<_1e3208576_Package>&);
inline void _1e3ba4bae_optimizePackage(_1e3bdecc6_Optimizer*, jule::Ptr<_1e3208576_Package>&);
inline void _1e3ba92e0_Optimize(_1e3bdecc6_Optimizer*);
struct _1e3bdecc6_Optimizer {
	jule::Ptr<_1e3381952_IR> _field_ir = jule::Ptr<_1e3381952_IR>();
	

	_1e3bdecc6_Optimizer(void) = default;

	inline bool operator==(_1e3bdecc6_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1e3bdecc6_Optimizer _other) { return !this->operator==(_other); }


};
inline void static__20a406ae2_Reset(void);
inline void static__20a4081cb_Print(jule::Str, jule::Str);
struct _20a4244a0_AnsiEscape {
	

	_20a4244a0_AnsiEscape(void) = default;

	inline bool operator==(_20a4244a0_AnsiEscape _other) { return true; }

	inline bool operator!=(_20a4244a0_AnsiEscape _other) { return !this->operator==(_other); }


};
inline void static__20a408484_LogFlat(_20a35491e_Log&);
inline void static__20a409540_LogError(_20a35491e_Log&);
inline void static__20a40bde4_Log(_20a35491e_Log&);
inline void static__20a41a199_PrintLogs(jule::Slice<_20a35491e_Log>&);
struct _1e3b45149_Logger {
	

	_1e3b45149_Logger(void) = default;

	inline bool operator==(_1e3b45149_Logger _other) { return true; }

	inline bool operator!=(_1e3b45149_Logger _other) { return !this->operator==(_other); }


};
inline jule::U64 _1e42a4478_Unix(_1e42a40c1_AbsTime*);
struct _1e42a40c1_AbsTime {
	jule::U64 _field_Day = jule::U64();
	jule::U64 _field_WeekDay = jule::U64();
	jule::U64 _field_YearDay = jule::U64();
	jule::U64 _field_Month = jule::U64();
	jule::U64 _field_Year = jule::U64();
	jule::U64 _field_Second = jule::U64();
	jule::U64 _field_Minute = jule::U64();
	jule::U64 _field_Hour = jule::U64();
	

	_1e42a40c1_AbsTime(void) = default;

	inline bool operator==(_1e42a40c1_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_1e42a40c1_AbsTime _other) { return !this->operator==(_other); }


};
inline _1e42a4764_Time static__1e42a4b0a_Unix(jule::U64);
inline _1e42a4764_Time static__1e42a4d08_Now(void);
inline jule::U64 _1e42a5259_Unix(_1e42a4764_Time*);
inline jule::U64 _1e42a54bd_Day(_1e42a4764_Time*);
inline jule::U64 _1e42a5732_Month(_1e42a4764_Time*);
inline jule::U64 _1e42a5996_Year(_1e42a4764_Time*);
inline jule::U64 _1e42a5c0a_Second(_1e42a4764_Time*);
inline jule::U64 _1e42a5e6e_Minute(_1e42a4764_Time*);
inline jule::U64 _1e42a61d3_Hour(_1e42a4764_Time*);
inline _1e42a40c1_AbsTime _1e42a6447_Abs(_1e42a4764_Time*);
struct _1e42a4764_Time {
	jule::U64 _field_sec = jule::U64();
	

	_1e42a4764_Time(void) = default;

	inline bool operator==(_1e42a4764_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1e42a4764_Time _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e422d358_scopeCoder> static__1e422d952_new(jule::Ptr<_1e42a9e62_ObjectCoder>&);
inline void _1e422dbc7_rangeIndexIter(jule::Ptr<_1e422d358_scopeCoder>, jule::Ptr<_1e31d88db_RangeIter>&);
inline void _1e422de4c_rangeHashmapIter(jule::Ptr<_1e422d358_scopeCoder>, jule::Ptr<_1e31d88db_RangeIter>&);
inline void _1e422e1c2_ifCase(jule::Ptr<_1e422d358_scopeCoder>, jule::Ptr<_1e31d7137_If>);
inline void _1e422e447_conditional(jule::Ptr<_1e422d358_scopeCoder>, jule::Ptr<_1e31d7797_Conditional>);
inline void _1e422e6bc_infIter(jule::Ptr<_1e422d358_scopeCoder>, jule::Ptr<_1e31d7a83_InfIter>);
inline void _1e422e942_whileIter(jule::Ptr<_1e422d358_scopeCoder>, jule::Ptr<_1e31d8006_WhileIter>);
inline void _1e422ebb7_rangeIter(jule::Ptr<_1e422d358_scopeCoder>, jule::Ptr<_1e31d88db_RangeIter>);
inline void _1e422ee3c_cont(jule::Ptr<_1e422d358_scopeCoder>, jule::Ptr<_1e31d8cd7_ContSt>);
inline void _1e42301b2_label(jule::Ptr<_1e422d358_scopeCoder>, jule::Ptr<_1e31d947a_Label>);
inline void _1e4230437_gotoSt(jule::Ptr<_1e422d358_scopeCoder>, jule::Ptr<_1e31d9766_GotoSt>);
inline void _1e42306ac_postfix(jule::Ptr<_1e422d358_scopeCoder>, jule::Ptr<_1e31d9b1d_Postfix>);
inline void _1e4230932_assign(jule::Ptr<_1e422d358_scopeCoder>, jule::Ptr<_1e31da091_Assign>);
inline void _1e4230ba7_multiAssign(jule::Ptr<_1e422d358_scopeCoder>, jule::Ptr<_1e31da448_MultiAssign>);
inline jule::Fn<void(void)> _1e4230eb5_matchExpr(jule::Ptr<_1e422d358_scopeCoder>, jule::Ptr<_1e31da987_Match>);
inline void _1e42312d4_case(jule::Ptr<_1e422d358_scopeCoder>, jule::Ptr<_1e31da987_Match>, jule::Ptr<_1e31db4d2_Case>);
inline void _1e4231559_matchSt(jule::Ptr<_1e422d358_scopeCoder>, jule::Ptr<_1e31da987_Match>);
inline void _1e42317ce_fallSt(jule::Ptr<_1e422d358_scopeCoder>, jule::Ptr<_1e31dba87_FallSt>);
inline void _1e4231a54_breakSt(jule::Ptr<_1e422d358_scopeCoder>, jule::Ptr<_1e31d918e_BreakSt>);
inline void _1e4231cc9_retWithVars(jule::Ptr<_1e422d358_scopeCoder>, jule::Ptr<_1e31dc00a_RetSt>);
inline void _1e423204e_retTuple(jule::Ptr<_1e422d358_scopeCoder>, jule::Ptr<_1e31dc00a_RetSt>);
inline void _1e42322c4_retWithExprs(jule::Ptr<_1e422d358_scopeCoder>, jule::Ptr<_1e31dc00a_RetSt>);
inline void _1e4232549_retSt(jule::Ptr<_1e422d358_scopeCoder>, jule::Ptr<_1e31dc00a_RetSt>);
inline void _1e4232a44_var(jule::Ptr<_1e422d358_scopeCoder>, jule::Ptr<_1e322a147_Var>);
inline void _1e4232cb9_st(jule::Ptr<_1e422d358_scopeCoder>, jule::Any);
inline void _1e423303e_scopeStmts(jule::Ptr<_1e422d358_scopeCoder>, jule::Ptr<_1e31d6c3b_Scope>&);
inline void _1e42332b4_scope(jule::Ptr<_1e422d358_scopeCoder>, jule::Ptr<_1e31d6c3b_Scope>);
inline void _1e4233539_funcScope(jule::Ptr<_1e422d358_scopeCoder>, jule::Ptr<_1e258dee5_FnIns>);
struct _1e422d358_scopeCoder {
	jule::Ptr<_1e42a9e62_ObjectCoder> _field_oc = jule::Ptr<_1e42a9e62_ObjectCoder>();
	

	_1e422d358_scopeCoder(void) = default;

	inline bool operator==(_1e422d358_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1e422d358_scopeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e4235d77_exprCoder> static__1e4236273_new(jule::Ptr<_1e42a9e62_ObjectCoder>&);
inline void _1e42364e8_string(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e23b4a96_Const>&);
inline void _1e423676d_boolean(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e23b4a96_Const>&);
inline void _1e4236949_nilLit(jule::Ptr<_1e4235d77_exprCoder>);
inline jule::Bool _1e4236c57_ftoaSpecialCases(jule::Ptr<_1e4235d77_exprCoder>, jule::F64&);
inline void _1e4236ecc_float32(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e23b4a96_Const>&);
inline void _1e4237252_float64(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e23b4a96_Const>&);
inline void _1e4237571_constant(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e23b4a96_Const>, jule::Bool);
inline void _1e4237939_divByZeroBinary(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1d42b43cc_Token>&, jule::Ptr<_1e2583c87_OperandExprModel>&, jule::Ptr<_1e2583c87_OperandExprModel>&);
inline void _1e4237bae_unsafeBinary(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e2583e74_BinopExprModel>);
inline void _1e4237e34_binary(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e2583e74_BinopExprModel>);
inline void _1e42381a9_var(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e322a147_Var>);
inline void _1e423842e_structureIns(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e253220d_StructIns>);
inline void _1e42386a4_unary(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e2584161_UnaryExprModel>);
inline void _1e4238929_structureLit(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e258453a_StructLitExprModel>);
inline void _1e4238b9e_allocStructure(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e2584727_AllocStructLitExprModel>);
inline void _1e4238e24_casting(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e2584914_CastingExprModel>);
inline void _1e4239199_args(jule::Ptr<_1e4235d77_exprCoder>, jule::Slice<jule::Any>);
inline void _1e423941e_modelForCall(jule::Ptr<_1e4235d77_exprCoder>, jule::Any);
inline void _1e4239694_pushCallInf(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e2584b01_FnCallExprModel>&);
inline jule::Bool _1e42399a2_isWrapped(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e2584b01_FnCallExprModel>&);
inline void _1e4239c27_pureFuncCall(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e2584b01_FnCallExprModel>&);
inline void _1e4239e9c_funcCall(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e2584b01_FnCallExprModel>);
inline void _1e423a222_slice(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e2584cdd_SliceExprModel>);
inline void _1e423a497_indexing(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e2584eca_IndexingExprModel>);
inline void _1e423a71c_unsafeIndexing(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1d42d4d15_UnsafeIndexingExprModel>);
inline void _1e423a992_anonFunc(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e25851b7_AnonFnExprModel>);
inline void _1e423ac17_map(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e2585591_MapExprModel>);
inline void _1e423ae8c_slicing(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e258577d_SlicingExprModel>);
inline void _1e423b212_traitSub(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e258596a_TraitSubIdentExprModel>);
inline void _1e423b487_structureSub(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e2585d88_StructSubIdentExprModel>);
inline void _1e423b70c_commonIdent(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e258644e_CommonIdentExprModel>);
inline void _1e423b982_commonSub(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e258663b_CommonSubIdentExprModel>);
inline void _1e423bc07_array(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e2586262_ArrayExprModel>);
inline void _1e423be7c_funcInsCommon(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e258dee5_FnIns>);
inline void _1e423c202_funcIns(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e258dee5_FnIns>);
inline void _1e423c477_tuple(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e2586828_TupleExprModel>);
inline void _1e423c6ec_newCall(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e25870cb_BuiltinNewCallExprModel>);
inline void _1e423c972_outCall(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e2586a15_BuiltinOutCallExprModel>);
inline void _1e423cbe7_outlnCall(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e2586c02_BuiltinOutlnCallExprModel>);
inline void _1e423ce6c_panicCall(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e25872b8_BuiltinPanicCallExprModel>);
inline void _1e423d1e2_assertCall(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e25874a5_BuiltinAssertCallExprModel>);
inline void _1e423d467_errorCall(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e2587c58_BuiltinErrorCallExprModel>);
inline void _1e423d6dc_copyCall(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e2587a6b_BuiltinCopyCallExprModel>);
inline void _1e423d962_makeCallSlice(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e2587692_BuiltinMakeCallExprModel>&);
inline void _1e423dbd7_makeCallStr(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e2587692_BuiltinMakeCallExprModel>&);
inline void _1e423de5c_makeCall(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e2587692_BuiltinMakeCallExprModel>);
inline void _1e423e1d2_pushToSlice(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e10cb072_PushToSliceExprModel>);
inline void _1e423e457_appendCall(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e258787e_BuiltinAppendCallExprModel>);
inline void _1e423e6cc_cloneCall(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e2586dde_BuiltinCloneCallExprModel>);
inline void _1e423e952_sizeof(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e2585b57_SizeofExprModel>);
inline void _1e423ebc7_alignof(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e25883b8_AlignofExprModel>);
inline jule::Str _1e423eed5_runeLit(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e25885a5_RuneExprModel>);
inline void _1e424025a_structureStatic(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e2586075_StructStaticIdentExprModel>);
inline void _1e42404d0_integratedToStr(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e2588792_IntegratedToStrExprModel>);
inline void _1e4240755_backendEmit(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e258897e_BackendEmitExprModel>);
inline void _1e42409ca_free(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e2588b6b_FreeExprModel>);
inline void _1e4240c50_mutSlicing(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e12489e7_MutSlicingExprModel>);
inline void _1e4240ec5_strInsertBegin(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e17484d0_StrInsertBeginExprModel>);
inline void _1e424124a_model(jule::Ptr<_1e4235d77_exprCoder>, jule::Any);
inline void _1e42414c0_expr(jule::Ptr<_1e4235d77_exprCoder>, jule::Any);
inline void _1e4241745_val(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e310a115_Value>);
inline void _1e42419ba_initExpr(jule::Ptr<_1e4235d77_exprCoder>, jule::Ptr<_1e3134da9_TypeKind>);
struct _1e4235d77_exprCoder {
	jule::Ptr<_1e42a9e62_ObjectCoder> _field_oc = jule::Ptr<_1e42a9e62_ObjectCoder>();
	

	_1e4235d77_exprCoder(void) = default;

	inline bool operator==(_1e4235d77_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1e4235d77_exprCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1e424402d_cloneFuncDecl(jule::Ptr<_1e2505d6e_Struct>&);
inline jule::Str static__1e42442c5_cloneFuncDef(jule::Ptr<_1e2505d6e_Struct>&);
struct _1e4243c75_deriveCoder {
	

	_1e4243c75_deriveCoder(void) = default;

	inline bool operator==(_1e4243c75_deriveCoder _other) { return true; }

	inline bool operator!=(_1e4243c75_deriveCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e42451a5_TestCoder> static__1e4245628_New(jule::Ptr<_1e42a9e62_ObjectCoder>&);
inline jule::Ptr<_1e320561c_ImportInfo> _1e424588c_findTestingPackage(jule::Ptr<_1e42451a5_TestCoder>);
inline void _1e4245b12_appendTest(jule::Ptr<_1e42451a5_TestCoder>, jule::Ptr<_1e258dee5_FnIns>);
inline void _1e4245d87_appendPackageTests(jule::Ptr<_1e42451a5_TestCoder>, jule::Ptr<_1e3208576_Package>&);
inline jule::Bool _1e42460eb_readyTestingPackage(jule::Ptr<_1e42451a5_TestCoder>);
inline void _1e42462c7_callTmReset(jule::Ptr<_1e42451a5_TestCoder>);
inline void _1e42464a3_callTmFailed(jule::Ptr<_1e42451a5_TestCoder>);
inline void _1e424667e_callTmSkipped(jule::Ptr<_1e42451a5_TestCoder>);
inline void _1e424685a_Serialize(jule::Ptr<_1e42451a5_TestCoder>);
struct _1e42451a5_TestCoder {
	jule::Ptr<_1e253220d_StructIns> _field_t = jule::Ptr<_1e253220d_StructIns>();
	jule::Ptr<_1e258b344_Fn> _field_tmReset = jule::Ptr<_1e258b344_Fn>();
	jule::Ptr<_1e258b344_Fn> _field_tmFailed = jule::Ptr<_1e258b344_Fn>();
	jule::Ptr<_1e258b344_Fn> _field_tmSkipped = jule::Ptr<_1e258b344_Fn>();
	jule::Ptr<_1e42a9e62_ObjectCoder> _field_oc = jule::Ptr<_1e42a9e62_ObjectCoder>();
	

	_1e42451a5_TestCoder(void) = default;

	inline bool operator==(_1e42451a5_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1e42451a5_TestCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1e4247d12_toOut(jule::Str&, jule::Uintptr);
inline jule::Str static__1e42481ec_toLocal(jule::I64, jule::I64, jule::Str&);
inline jule::Str static__1e4248494_func(jule::Ptr<_1e258b344_Fn>&);
inline jule::Str static__1e424873b_funcIns(jule::Ptr<_1e258dee5_FnIns>&);
inline jule::Str static__1e42489d3_traitDecl(jule::Ptr<_1e259d246_Trait>);
inline jule::Str static__1e4248c7a_param(jule::Ptr<_1e2589a07_Param>&);
inline jule::Str static__1e4249022_structure(jule::Ptr<_1e2505d6e_Struct>&);
inline jule::Str static__1e42492b9_structureIns(jule::Ptr<_1e253220d_StructIns>&);
inline jule::Str static__1e4249561_field(jule::Ptr<_1e24e8339_Field>&);
inline jule::Str static__1e4249808_var(jule::Ptr<_1e322a147_Var>);
inline jule::Str static__1e4249aa0_iterBegin(jule::Uintptr);
inline jule::Str static__1e4249d47_iterEnd(jule::Uintptr);
inline jule::Str static__1e424a0de_iterNext(jule::Uintptr);
inline jule::Str static__1e424a386_label(jule::Str&);
inline jule::Str static__1e424a62d_matchEnd(jule::Uintptr);
inline jule::Str static__1e424a8c5_caseBegin(jule::Uintptr);
struct _1e4247806_identCoder {
	

	_1e4247806_identCoder(void) = default;

	inline bool operator==(_1e4247806_identCoder _other) { return true; }

	inline bool operator!=(_1e4247806_identCoder _other) { return !this->operator==(_other); }


};
struct _1e42a9a88_SerializationInfo {
	jule::Str _field_Compiler = jule::Str();
	jule::Str _field_CompilerCommand = jule::Str();
	

	_1e42a9a88_SerializationInfo(void) = default;

	inline bool operator==(_1e42a9a88_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_1e42a9a88_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1e42a9c75_traitHash {
	jule::Ptr<_1e259d246_Trait> _field_t = jule::Ptr<_1e259d246_Trait>();
	jule::Ptr<_1e253220d_StructIns> _field_s = jule::Ptr<_1e253220d_StructIns>();
	jule::I64 _field_i = jule::I64();
	

	_1e42a9c75_traitHash(void) = default;

	inline bool operator==(_1e42a9c75_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1e42a9c75_traitHash _other) { return !this->operator==(_other); }


};
inline jule::Str _1e42b0c6a_Str(_1e42b09a1_customType*);
inline jule::Bool _1e42b1078_Equals(jule::Ptr<_1e42b09a1_customType>, jule::Ptr<_1e3134da9_TypeKind>);
struct _1e42b09a1_customType {
	jule::Str _field_kind = jule::Str();
	

	_1e42b09a1_customType(void) = default;

	inline bool operator==(_1e42b09a1_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1e42b09a1_customType _other) { return !this->operator==(_other); }


};
inline jule::Str static__1e42b17c6_toType(jule::Str);
inline jule::Str static__1e42b1a6d_prim(jule::Ptr<_1e3139881_Prim>);
inline jule::Str static__1e42b1d15_tuple(jule::Ptr<_1e313e600_Tuple>);
inline jule::Str static__1e42b20ac_asSptr(jule::Str);
inline jule::Str static__1e42b2354_asPtr(jule::Str);
inline jule::Str static__1e42b25eb_sptr(jule::Ptr<_1e313d115_Sptr>);
inline jule::Str static__1e42b2893_ptr(jule::Ptr<_1e3141679_Ptr>);
inline jule::Str static__1e42b2b3a_enumDecl(jule::Ptr<_1e25a038b_Enum>);
inline jule::Str static__1e42b2dd2_typeEnumDecl(jule::Ptr<_1e25a1986_TypeEnum>);
inline jule::Str static__1e42b3179_asSlice(jule::Ptr<_1e3134da9_TypeKind>);
inline jule::Str static__1e42b3421_slice(jule::Ptr<_1e313da72_Slc>);
inline jule::Str static__1e42b36b8_map(jule::Ptr<_1e3140128_Map>);
inline jule::Str static__1e42b3960_traitIdent(jule::Str);
inline jule::Str static__1e42b3c07_traitDecl(jule::Ptr<_1e259d246_Trait>);
inline jule::Str static__1e42b3e9e_structure(jule::Ptr<_1e2505d6e_Struct>);
inline jule::Str static__1e42b4246_structureIns(jule::Ptr<_1e253220d_StructIns>);
inline jule::Str static__1e42b44dd_array(jule::Ptr<_1e3140c1c_Arr>);
inline jule::Str static__1e42b4a2c_paramIns(jule::Ptr<_1e258d126_ParamIns>&);
inline jule::Str static__1e42b506b_funcInsResult(jule::Ptr<_1e258dee5_FnIns>&);
inline jule::Str static__1e42b5313_anonFunc(jule::Ptr<_1e258dee5_FnIns>);
inline jule::Str static__1e42b55aa_func(jule::Ptr<_1e258dee5_FnIns>);
inline jule::Str static__1e42b5852_kind(jule::Ptr<_1e3134da9_TypeKind>);
struct _1e42b1298_typeCoder {
	

	_1e42b1298_typeCoder(void) = default;

	inline bool operator==(_1e42b1298_typeCoder _other) { return true; }

	inline bool operator!=(_1e42b1298_typeCoder _other) { return !this->operator==(_other); }


};
inline jule::Str _1e697035b_name(_1e6b747d5_Flag*);
inline jule::Str _1e697048d_what(_1e6b747d5_Flag*);
inline void _1e6b74bc0_reset(_1e6b747d5_Flag*);
inline jule::I32 _1e6b74d02_short(_1e6b747d5_Flag*);
struct _1e6b747d5_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::I64 _field__default = jule::I64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::I64> _field__data = jule::Ptr<jule::I64>();
	

	_1e6b747d5_Flag(void) = default;

	inline bool operator==(_1e6b747d5_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1e6b747d5_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1e6b77ee2_name(_1e6b78498_Flag*);
inline jule::Str _1e6b78762_what(_1e6b78498_Flag*);
inline void _1e6b78894_reset(_1e6b78498_Flag*);
inline jule::I32 _1e6b789c6_short(_1e6b78498_Flag*);
struct _1e6b78498_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::U64 _field__default = jule::U64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::U64> _field__data = jule::Ptr<jule::U64>();
	

	_1e6b78498_Flag(void) = default;

	inline bool operator==(_1e6b78498_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1e6b78498_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1e6b7b9c9_name(_1e6b7be80_Flag*);
inline jule::Str _1e6b7c249_what(_1e6b7be80_Flag*);
inline void _1e6b7c37b_reset(_1e6b7be80_Flag*);
inline jule::I32 _1e6b7c4ad_short(_1e6b7be80_Flag*);
struct _1e6b7be80_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::F64 _field__default = jule::F64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::F64> _field__data = jule::Ptr<jule::F64>();
	

	_1e6b7be80_Flag(void) = default;

	inline bool operator==(_1e6b7be80_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1e6b7be80_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1e6b80505_name(_1e6b809ab_Flag*);
inline jule::Str _1e6b80c75_what(_1e6b809ab_Flag*);
inline void _1e6b80da7_reset(_1e6b809ab_Flag*);
inline jule::I32 _1e6b80ed9_short(_1e6b809ab_Flag*);
struct _1e6b809ab_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Bool _field__default = jule::Bool();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Bool> _field__data = jule::Ptr<jule::Bool>();
	

	_1e6b809ab_Flag(void) = default;

	inline bool operator==(_1e6b809ab_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1e6b809ab_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1e6b83edc_name(_1e6b84493_Flag*);
inline jule::Str _1e6b8475c_what(_1e6b84493_Flag*);
inline void _1e6b8488e_reset(_1e6b84493_Flag*);
inline jule::I32 _1e6b849c1_short(_1e6b84493_Flag*);
struct _1e6b84493_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Str _field__default = jule::Str();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Str> _field__data = jule::Ptr<jule::Str>();
	

	_1e6b84493_Flag(void) = default;

	inline bool operator==(_1e6b84493_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1e6b84493_Flag _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e42e927b_FlagSet> static__1e42e9567_new(void);
inline jule::Trait<_1e4060344_CommonFlag> _1e42e99eb_find_flag(_1e42e927b_FlagSet*, jule::Str);
inline jule::Trait<_1e4060344_CommonFlag> _1e42e9d09_find_flag_short(_1e42e927b_FlagSet*, jule::I32);
inline jule::Slice<jule::Trait<_1e4060344_CommonFlag>> _1e42ea06d_flags(_1e42e927b_FlagSet*);
inline jule::Exceptional<jule::Slice<jule::Str>> _1e42ea37b_parse(_1e42e927b_FlagSet*, jule::Slice<jule::Str>);
inline void _1e42ea557_reset(_1e42e927b_FlagSet*);
inline jule::Ptr<_1e6b84493_Flag> _1e6c10c5b_add_flag_common(_1e42e927b_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1e6b809ab_Flag> _1e6c1987a_add_flag_common(_1e42e927b_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1e6c0dc26_add_var(_1e42e927b_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1e6c17856_add_var(_1e42e927b_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
struct _1e42e927b_FlagSet {
	jule::Slice<jule::Trait<_1e4060344_CommonFlag>> _field__flags = jule::Slice<jule::Trait<_1e4060344_CommonFlag>>();
	

	_1e42e927b_FlagSet(void) = default;

	inline bool operator==(_1e42e927b_FlagSet _other) {
		return 
			this->_field__flags == _other._field__flags;
	}

	inline bool operator!=(_1e42e927b_FlagSet _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::Ptr<_1e3381952_IR>,jule::Slice<_20a35491e_Log>> static__1e1d4c8c5_Build(jule::Str, jule::I64);
inline void _1e20dd4b2_appendStructs(_1e3381952_IR*, jule::Ptr<_1e3208576_Package>&, jule::Slice<jule::Ptr<_1e2505d6e_Struct>>&);
inline jule::Slice<jule::Ptr<_1e2505d6e_Struct>> _1e32edec9_GetAllStructures(_1e3381952_IR*);
inline void _1e227cd6b_appendGlobals(_1e3381952_IR*, jule::Ptr<_1e3208576_Package>&, jule::Slice<jule::Ptr<_1e322a147_Var>>&);
inline jule::Slice<jule::Ptr<_1e322a147_Var>> _1e18058cd_GetAllGlobals(_1e3381952_IR*);
inline void _1e18062b3_Order(_1e3381952_IR*);
struct _1e3381952_IR {
	jule::Str _field_Root = jule::Str();
	jule::Slice<jule::Str> _field_Passes = jule::Slice<jule::Str>();
	jule::Ptr<_1e3208576_Package> _field_Main = jule::Ptr<_1e3208576_Package>();
	jule::Slice<jule::Ptr<_1e320561c_ImportInfo>> _field_Used = jule::Slice<jule::Ptr<_1e320561c_ImportInfo>>();
	_1e32ee34d_OrderedDefines _field_Ordered = _1e32ee34d_OrderedDefines();
	

	_1e3381952_IR(void) = default;

	inline bool operator==(_1e3381952_IR _other) {
		return 
			this->_field_Root == _other._field_Root &&
			this->_field_Passes == _other._field_Passes &&
			this->_field_Main == _other._field_Main &&
			this->_field_Used == _other._field_Used &&
			this->_field_Ordered == _other._field_Ordered;
	}

	inline bool operator!=(_1e3381952_IR _other) { return !this->operator==(_other); }


};
inline jule::Str _1e2507a52_Str(_1e253220d_StructIns*);
inline jule::Bool _1e2508bb8_Equals(jule::Ptr<_1e253220d_StructIns>, jule::Ptr<_1e3134da9_TypeKind>);
inline jule::Bool _1e250b01c_Same(_1e253220d_StructIns*, jule::Ptr<_1e253220d_StructIns>);
inline jule::Ptr<_1e258b344_Fn> _1e250c33c_FindMethod(_1e253220d_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_1e250d4d6_FieldIns> _1e250ed56_FindField(_1e253220d_StructIns*, jule::Str);
struct _1e253220d_StructIns {
	jule::Bool _field_Checked = jule::Bool();
	jule::Ptr<_1e2505d6e_Struct> _field_Decl = jule::Ptr<_1e2505d6e_Struct>();
	jule::Slice<jule::Ptr<_1e313367c_InsGeneric>> _field_Generics = jule::Slice<jule::Ptr<_1e313367c_InsGeneric>>();
	jule::Slice<jule::Ptr<_1e250d4d6_FieldIns>> _field_Fields = jule::Slice<jule::Ptr<_1e250d4d6_FieldIns>>();
	jule::Slice<jule::Ptr<_1e258b344_Fn>> _field_Methods = jule::Slice<jule::Ptr<_1e258b344_Fn>>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Ptr<_1e2591e60_ReferenceStack> _field_Refers = jule::Ptr<_1e2591e60_ReferenceStack>();
	_1e2507799_Operators _field_Operators = _1e2507799_Operators();
	

	_1e253220d_StructIns(void) = default;

	inline bool operator==(_1e253220d_StructIns _other) {
		return 
			this->_field_Checked == _other._field_Checked &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Fields == _other._field_Fields &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Refers == _other._field_Refers &&
			this->_field_Operators == _other._field_Operators;
	}

	inline bool operator!=(_1e253220d_StructIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e3bd4c11_ObjectDeadCode> static__1e3bd5162_new(jule::Ptr<_1e3381952_IR>&);
inline jule::Bool _1e6666c56_isLive(jule::Ptr<_1e3bd4c11_ObjectDeadCode>, jule::Ptr<_1e259d246_Trait>&);
inline jule::Bool _1e666ca2b_isLive(jule::Ptr<_1e3bd4c11_ObjectDeadCode>, jule::Ptr<_1e258dee5_FnIns>&);
inline jule::Bool _1e6673ba8_isLive(jule::Ptr<_1e3bd4c11_ObjectDeadCode>, jule::Ptr<_1e253220d_StructIns>&);
inline jule::Bool _1e667aac2_isLive(jule::Ptr<_1e3bd4c11_ObjectDeadCode>, jule::Ptr<_1e322a147_Var>&);
inline void _1e66672ea_pushLive(jule::Ptr<_1e3bd4c11_ObjectDeadCode>, jule::Ptr<_1e259d246_Trait>);
inline void _1e667115b_pushLive(jule::Ptr<_1e3bd4c11_ObjectDeadCode>, jule::Ptr<_1e258dee5_FnIns>);
inline void _1e667423b_pushLive(jule::Ptr<_1e3bd4c11_ObjectDeadCode>, jule::Ptr<_1e253220d_StructIns>);
inline void _1e667e4aa_pushLive(jule::Ptr<_1e3bd4c11_ObjectDeadCode>, jule::Ptr<_1e322a147_Var>);
inline void _1e3c132b1_setReferencesAsLive(jule::Ptr<_1e3bd4c11_ObjectDeadCode>, jule::Ptr<_1e2591e60_ReferenceStack>&);
inline void _1e3c13536_inits(jule::Ptr<_1e3bd4c11_ObjectDeadCode>, jule::Ptr<_1e3208576_Package>&);
inline void _1e3c137ab_collectLivePackage(jule::Ptr<_1e3bd4c11_ObjectDeadCode>, jule::Ptr<_1e3208576_Package>&);
inline void _1e3c13987_collectLive(jule::Ptr<_1e3bd4c11_ObjectDeadCode>);
inline void _1e3c13c0c_removeDeadGlobals(jule::Ptr<_1e3bd4c11_ObjectDeadCode>, jule::Slice<jule::Ptr<_1e322a147_Var>>&);
inline void _1e3c13e82_removeDeadFns(jule::Ptr<_1e3bd4c11_ObjectDeadCode>, jule::Slice<jule::Ptr<_1e258b344_Fn>>&);
inline void _1e3c14207_removeDeadStructs(jule::Ptr<_1e3bd4c11_ObjectDeadCode>, jule::Slice<jule::Ptr<_1e2505d6e_Struct>>&);
inline void _1e3c1447c_removeDeadTraits(jule::Ptr<_1e3bd4c11_ObjectDeadCode>, jule::Slice<jule::Ptr<_1e259d246_Trait>>&);
inline void _1e3c14702_removeDeadsFile(jule::Ptr<_1e3bd4c11_ObjectDeadCode>, jule::Ptr<_1e310432e_SymbolTable>&);
inline void _1e3c14977_removeDeadsPackage(jule::Ptr<_1e3bd4c11_ObjectDeadCode>, jule::Ptr<_1e3208576_Package>&);
inline void _1e3c14b53_removeDeads(jule::Ptr<_1e3bd4c11_ObjectDeadCode>);
inline void _1e3c14d2e_elimanate(jule::Ptr<_1e3bd4c11_ObjectDeadCode>);
struct _1e3bd4c11_ObjectDeadCode {
	_1e3bd4947_liveTable _field_live = _1e3bd4947_liveTable();
	jule::Ptr<_1e3381952_IR> _field_ir = jule::Ptr<_1e3381952_IR>();
	

	_1e3bd4c11_ObjectDeadCode(void) = default;

	inline bool operator==(_1e3bd4c11_ObjectDeadCode _other) {
		return 
			this->_field_live == _other._field_live &&
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1e3bd4c11_ObjectDeadCode _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e42a9e62_ObjectCoder> static__1e428ce89_New(jule::Ptr<_1e3381952_IR>&, _1e42a9a88_SerializationInfo);
inline void _1e428d2b9_write(jule::Ptr<_1e42a9e62_ObjectCoder>, jule::Str);
inline void _1e428da5b_addIndent(jule::Ptr<_1e42a9e62_ObjectCoder>);
inline void _1e428ea4b_doneIndent(jule::Ptr<_1e42a9e62_ObjectCoder>);
inline void _1e4290299_indent(jule::Ptr<_1e42a9e62_ObjectCoder>);
inline jule::I64 _1e427e61d_findTypeOffset(_1e42a9e62_ObjectCoder*, jule::Ptr<_1e259d246_Trait>, jule::Ptr<_1e3134da9_TypeKind>);
inline void _1e4291685_locInfo(jule::Ptr<_1e42a9e62_ObjectCoder>, jule::Ptr<_1d42b43cc_Token>&);
inline void _1e4270cb3_head(jule::Ptr<_1e42a9e62_ObjectCoder>);
inline void _1e428e2a9_links(jule::Ptr<_1e42a9e62_ObjectCoder>);
inline void _1e42745e1_prepareStructures(jule::Ptr<_1e42a9e62_ObjectCoder>);
inline void _1e427b42d_iterPackages(jule::Ptr<_1e42a9e62_ObjectCoder>, jule::Fn<void(jule::Ptr<_1e3208576_Package>&)>);
inline void _1e427b9b1_buildTraitMap(jule::Ptr<_1e42a9e62_ObjectCoder>);
inline void _1e427c880_traitDecls(jule::Ptr<_1e42a9e62_ObjectCoder>);
inline void _1e427d045_structurePlainDecl(jule::Ptr<_1e42a9e62_ObjectCoder>, jule::Ptr<_1e2505d6e_Struct>&);
inline void _1e427d70a_structurePlainDecls(jule::Ptr<_1e42a9e62_ObjectCoder>);
inline void _1e427ddc0_fieldDecl(jule::Ptr<_1e42a9e62_ObjectCoder>, jule::Ptr<_1e250d4d6_FieldIns>&);
inline void _1e42759aa_structureDestructor(jule::Ptr<_1e42a9e62_ObjectCoder>, jule::Ptr<_1e253220d_StructIns>&);
inline void _1e42aa506_structureDeriveDefsDecls(jule::Ptr<_1e42a9e62_ObjectCoder>, jule::Ptr<_1e253220d_StructIns>&);
inline void _1e42aa638_structureOperatorEq(jule::Ptr<_1e42a9e62_ObjectCoder>, jule::Str&, jule::Ptr<_1e253220d_StructIns>&);
inline void _1e42aa76a_structureOperatorNotEq(jule::Ptr<_1e42a9e62_ObjectCoder>, jule::Str&, jule::Ptr<_1e253220d_StructIns>&);
inline void _1e42aa89c_structureOperator(jule::Ptr<_1e42a9e62_ObjectCoder>, jule::Str&, jule::Ptr<_1e258dee5_FnIns>&, jule::Str);
inline void _1e42aa9ce_structureOperators(jule::Ptr<_1e42a9e62_ObjectCoder>, jule::Ptr<_1e253220d_StructIns>&);
inline void _1e42aab11_structureInsDecl(jule::Ptr<_1e42a9e62_ObjectCoder>, jule::Ptr<_1e253220d_StructIns>&);
inline void _1e42aac43_structureDecl(jule::Ptr<_1e42a9e62_ObjectCoder>, jule::Ptr<_1e2505d6e_Struct>&);
inline void _1e42aad75_structureDecls(jule::Ptr<_1e42a9e62_ObjectCoder>);
inline void _1e42aaea7_paramsDecls(jule::Ptr<_1e42a9e62_ObjectCoder>, jule::Slice<jule::Ptr<_1e258d126_ParamIns>>&);
inline void _1e42ab0d9_funcHead(jule::Ptr<_1e42a9e62_ObjectCoder>, jule::Ptr<_1e258dee5_FnIns>&, jule::Bool);
inline void _1e42ab21b_funcDecl(jule::Ptr<_1e42a9e62_ObjectCoder>, jule::Ptr<_1e258b344_Fn>&, jule::Bool);
inline void _1e42ab34d_funcDecls(jule::Ptr<_1e42a9e62_ObjectCoder>);
inline void _1e42ab480_traitDataTypes(jule::Ptr<_1e42a9e62_ObjectCoder>);
inline void _1e42ab5b2_paramIns(jule::Ptr<_1e42a9e62_ObjectCoder>, jule::Ptr<_1e258d126_ParamIns>&);
inline void _1e42ab79e_paramsIns(jule::Ptr<_1e42a9e62_ObjectCoder>, jule::Slice<jule::Ptr<_1e258d126_ParamIns>>&);
inline void _1e42ababd_varInitExpr(jule::Ptr<_1e42a9e62_ObjectCoder>, jule::Ptr<_1e322a147_Var>&, jule::Fn<void(void)>);
inline void _1e42abd43_var(jule::Ptr<_1e42a9e62_ObjectCoder>, jule::Ptr<_1e322a147_Var>);
inline void _1e42ac0b8_func(jule::Ptr<_1e42a9e62_ObjectCoder>, jule::Ptr<_1e258b344_Fn>&);
inline void _1e42ac294_traitWrappers(jule::Ptr<_1e42a9e62_ObjectCoder>);
inline void _1e42ac470_traitDatas(jule::Ptr<_1e42a9e62_ObjectCoder>);
inline void _1e42ac64b_globals(jule::Ptr<_1e42a9e62_ObjectCoder>);
inline void _1e42ac827_decls(jule::Ptr<_1e42a9e62_ObjectCoder>);
inline void _1e42aca9c_structureMethods(jule::Ptr<_1e42a9e62_ObjectCoder>, jule::Ptr<_1e253220d_StructIns>&);
inline void _1e42acd22_structureDeriveDefs(jule::Ptr<_1e42a9e62_ObjectCoder>, jule::Ptr<_1e253220d_StructIns>&);
inline void _1e42ad097_structureOstream(jule::Ptr<_1e42a9e62_ObjectCoder>, jule::Ptr<_1e253220d_StructIns>&);
inline void _1e42ad31c_structureIns(jule::Ptr<_1e42a9e62_ObjectCoder>, jule::Ptr<_1e253220d_StructIns>&);
inline void _1e42ad592_structure(jule::Ptr<_1e42a9e62_ObjectCoder>, jule::Ptr<_1e2505d6e_Struct>&);
inline void _1e42ad76d_structures(jule::Ptr<_1e42a9e62_ObjectCoder>);
inline void _1e42ad949_funcs(jule::Ptr<_1e42a9e62_ObjectCoder>);
inline void _1e42adbbe_pushInit(jule::Ptr<_1e42a9e62_ObjectCoder>, jule::Ptr<_1e3208576_Package>&);
inline void _1e42add9a_initCaller(jule::Ptr<_1e42a9e62_ObjectCoder>);
inline void _1e42ae076_end(jule::Ptr<_1e42a9e62_ObjectCoder>);
inline void _1e42ae252_serializeHead(jule::Ptr<_1e42a9e62_ObjectCoder>);
inline void _1e42ae42d_Serialize(jule::Ptr<_1e42a9e62_ObjectCoder>);
struct _1e42a9e62_ObjectCoder {
	jule::Str _field_Obj = jule::Str();
	jule::Ptr<_1e3381952_IR> _field_ir = jule::Ptr<_1e3381952_IR>();
	_1e42a9a88_SerializationInfo _field_info = _1e42a9a88_SerializationInfo();
	jule::Slice<jule::Ptr<_1e42a9c75_traitHash>> _field_tmap = jule::Slice<jule::Ptr<_1e42a9c75_traitHash>>();
	jule::Str _field_indentBuffer = jule::Str();
	jule::Ptr<_1e4235d77_exprCoder> _field_ec = jule::Ptr<_1e4235d77_exprCoder>();
	jule::Ptr<_1e422d358_scopeCoder> _field_sc = jule::Ptr<_1e422d358_scopeCoder>();
	

	_1e42a9e62_ObjectCoder(void) = default;

	inline bool operator==(_1e42a9e62_ObjectCoder _other) {
		return 
			this->_field_Obj == _other._field_Obj &&
			this->_field_ir == _other._field_ir &&
			this->_field_info == _other._field_info &&
			this->_field_tmap == _other._field_tmap &&
			this->_field_indentBuffer == _other._field_indentBuffer &&
			this->_field_ec == _other._field_ec &&
			this->_field_sc == _other._field_sc;
	}

	inline bool operator!=(_1e42a9e62_ObjectCoder _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::I64,jule::Bool> _1e6b9860b_parse_integer(_1e42eb954_ArgParser*, jule::Str&, jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>);
inline std::tuple<jule::U64,jule::Bool> _1e6ba630b_parse_integer(_1e42eb954_ArgParser*, jule::Str&, jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>);
inline jule::Str _1e42ec24b_get_data(_1e42eb954_ArgParser*);
inline jule::VoidExceptional _1e42ec48d_process_flag(_1e42eb954_ArgParser*, jule::Trait<_1e4060344_CommonFlag>&);
inline jule::VoidExceptional _1e42ec713_single_dash(_1e42eb954_ArgParser*, jule::Str&);
inline jule::VoidExceptional _1e42ec988_double_dash(_1e42eb954_ArgParser*, jule::Str&);
inline jule::VoidExceptional _1e42ecb64_try_arg(_1e42eb954_ArgParser*);
inline jule::VoidExceptional _1e42ecd40_parse(_1e42eb954_ArgParser*);
struct _1e42eb954_ArgParser {
	_1e42e927b_FlagSet _field_set = _1e42e927b_FlagSet();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_content = jule::Slice<jule::Str>();
	jule::I64 _field_i = jule::I64();
	

	_1e42eb954_ArgParser(void) = default;

	inline bool operator==(_1e42eb954_ArgParser _other) {
		return 
			this->_field_set == _other._field_set &&
			this->_field_args == _other._field_args &&
			this->_field_content == _other._field_content &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1e42eb954_ArgParser _other) { return !this->operator==(_other); }


};
inline jule::I32 _2163ac6a2_DecodeRune(jule::I32, jule::I32);
inline std::tuple<jule::I32,jule::I32> _2163ac949_EncodeRune(jule::I32);
inline jule::Slice<jule::I32> _2163ad010_Decode(jule::Slice<jule::U16>);
inline jule::Slice<jule::U16> _2163ad31d_AppendRune(jule::Slice<jule::U16>, jule::I32);
inline jule::Slice<jule::U16> _216397e2e_Utf16FromStr(jule::Str);
inline jule::Str _216398a67_Utf16ToStr(jule::Slice<jule::U16>);
inline jule::Str _216398b99_U16PtrToStr(jule::U16*);
inline jule::I64 _22ebe4d7d_GetLastErrno(void);
inline jule::Uintptr _2163ae93a_GetStdHandle(jule::Uintptr);
inline jule::I64 _2163aed8b_Wstat(jule::U16*, struct stat*);
inline jule::I64 _2163b0276_Wopen(jule::U16*, jule::I64, jule::I64);
inline jule::U32 _2163b0474_GetLastError(void);
inline jule::U32 _2163b07b5_GetCurrentDirectory(jule::U32, jule::U16*);
inline jule::Bool _2163b0d04_DeleteFile(jule::U16*);
inline jule::Bool _2163b109b_CreateDirectory(jule::U16*);
inline jule::Bool _2163b1343_RemoveDirectory(jule::U16*);
inline _WDIR* _2163b15da_Wopendir(jule::U16*);
inline struct _wdirent* _2163b1882_Wreaddir(_WDIR*);
inline jule::I64 _2163b1b29_Wclosedir(_WDIR*);
inline jule::U32 _2163b2300_GetFullPathName(jule::U16*, jule::U32, jule::U16*, jule::U16**);
inline jule::Bool _2163b2641_GetConsoleMode(jule::Uintptr, jule::I64&);
inline jule::Bool _2163b2982_SetConsoleMode(jule::Uintptr, jule::I64);
inline jule::Bool _2163b2eb0_WriteConsole(jule::Uintptr, jule::U16*, jule::I64, jule::I64&, void*);
inline jule::Bool _2163b34dd_ReadConsole(jule::Uintptr, jule::U16*, jule::I64, jule::I64&, void*);
inline jule::I64 _2163b5875_Seek(jule::I64, jule::I64, jule::I64);
inline jule::I64 _2163b5c60_Read(jule::I64, void*, jule::U64);
inline jule::I64 _2163b60d4_Close(jule::I64);
inline jule::I64 _2163b64be_Write(jule::I64, void*, jule::U64);
inline void _2163b66cd_Exit(jule::I64);
inline std::tuple<jule::I32,jule::I64> _2164948dd_DecodeRune(jule::Slice<jule::U8>);
inline std::tuple<jule::I32,jule::I64> _216494ea4_DecodeLastRune(jule::Slice<jule::U8>);
inline jule::I64 _2164954e3_RuneLen(jule::I32);
inline jule::I64 _216495911_EncodeRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _216495c52_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _216496093_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _2164965d2_RuneCountStr(jule::Str);
inline jule::Bool _216496879_RuneStart(jule::U8);
inline jule::I64 _223203d7c_getLastOsErrorWindows(void);
inline jule::Slice<jule::Str> _2232079c9_Args(void);
inline jule::Exceptional<jule::Str> _223207e4c_WorkingDir(void);
inline jule::Exceptional<jule::Str> _223208d4e_getwd(void);
inline jule::Slice<jule::U8> _22329237c_Stobs(jule::Str&);
inline jule::Bool _20a134930_IsLetter(jule::I32);
inline jule::Bool _20a1abb50_is16(jule::Slice<_20a1aa08d_Range16>, jule::U16);
inline jule::Bool _20a1abe91_is32(jule::Slice<_20a1aa511_Range32>, jule::U32);
inline jule::Bool _20a1ac733_isExcludingLatin(jule::Ptr<_20a1aa984_RangeTable>, jule::I32);
inline jule::Str _20a110026_Repeat(jule::Str, jule::I64);
inline jule::Bool _20a1183c5_hasPrefix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _20a119ae1_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _20a12b251_hasSuffix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _20a12e9c4_HasSuffix(jule::Str, jule::Str);
inline jule::I64 _209ed9719_FindAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _20a110543_FindLastAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _20a110a60_FindLast(jule::Str, jule::Str);
inline jule::I64 _20a1ad37c_findRune(jule::Slice<jule::U8>&, jule::I32);
inline jule::I64 _20a1ad822_FindLastByte(jule::Str, jule::U8);
inline jule::I64 _20a1adcea_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _20a1ae05e_Split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _20a1ae191_Contains(jule::Str, jule::Str);
inline jule::Bool _20a1ae537_ContainsAny(jule::Str, jule::Str);
inline jule::I64 _20a1ae669_Count(jule::Str, jule::Str);
inline jule::Str _20a1ae79b_Replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline void _20a1ad5e1_trimLeft(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _20a1b01e7_TrimLeft(jule::Str, jule::Str);
inline void _20a1b0329_trimRight(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _20a1b058d_Trim(jule::Str, jule::Str);
inline jule::Bool _2231d0d15_IsPathSep(jule::U8);
inline jule::Bool _2231d0e47_isSlash(jule::U8);
inline jule::U8 _2231d1112_toUpper(jule::U8);
inline jule::I64 _2231d16c8_volumeNameLen(jule::Str);
inline std::tuple<jule::Str,jule::Str,jule::Bool> _2231d1970_cutPath(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _2231d1c17_fullPath(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _2231d208b_abs(jule::Str);
inline jule::Str _2231d2333_join(jule::Slice<jule::Str>);
inline jule::Str _20a1b0d85_Clean(jule::Str);
inline jule::Str _20a1b10e9_FromSlash(jule::Str);
inline jule::Str _20a1b122b_Join(jule::Slice<jule::Str>);
inline jule::Str _20a1b135d_Ext(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _20a1b1490_Abs(jule::Str);
inline jule::Str _20a1b15c2_Base(jule::Str);
inline jule::Str _20a1b1704_Dir(jule::Str);
inline jule::Str _20a1b1836_VolumeName(jule::Str);
inline jule::I64 _2162c84ad_getLastFsError(void);
inline jule::Bool _21646763b_isConsoleHandle(jule::Uintptr);
inline jule::I64 _20a393265_getLastProcessError(void);
inline jule::Slice<wchar_t*> _20a3a2d24_ustrSliceToWcstrSlice(jule::Slice<jule::Slice<jule::U16>>);
inline jule::Slice<jule::Slice<jule::U16>> _20a3a30bb_strSliceToUstrSlice(jule::Slice<jule::Str>);
inline jule::I64 _20a3a33c9_execvp(jule::Str, jule::Slice<jule::Str>);
inline jule::I64 _20a3a37b4_execve(jule::Str, jule::Slice<jule::Str>, jule::Slice<jule::Str>);
inline void _20a3a44da_Exit(jule::I64);
inline jule::Str _20a3a46d8_Executable(void);
inline jule::Bool _20a347c42_IsStdHeaderPath(jule::Str);
inline jule::Bool _20a347ea6_IsValidHeaderExt(jule::Str);
inline jule::Bool _20a34824d_IsValidCppExt(jule::Str);
inline jule::Str _20a354d5e_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _20a35514a_argToStr(jule::Any);
inline jule::I64 _20a3553e2_findNextFmt(jule::Str);
inline jule::Str _20a355777_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _20a356844_IsTopDirective(jule::Str);
inline jule::Bool _20a357c74_IsWindows(jule::Str);
inline jule::Bool _20a35802c_IsDarwin(jule::Str);
inline jule::Bool _20a3582c4_IsLinux(jule::Str);
inline jule::Bool _20a3585e3_IsI386(jule::Str);
inline jule::Bool _20a35888a_IsAmd64(jule::Str);
inline jule::Bool _20a358b32_IsArm64(jule::Str);
inline jule::Bool _20a358dc9_IsUnix(jule::Str);
inline jule::Bool _20a35924d_Is32Bit(jule::Str);
inline jule::Bool _20a3594e5_Is64Bit(jule::Str);
inline void _20a3668a9_init(void);
inline jule::Bool _1d42b4ad6_IsUnaryOp(jule::Str);
inline jule::Bool _1d42b4dc2_IsBinOp(jule::Str);
inline jule::Bool _1d42b5488_IsStr(jule::Str);
inline jule::Bool _1d42b5730_IsRawStr(jule::Str);
inline jule::Bool _1d42b59c7_IsRune(jule::Str);
inline jule::Bool _1d42b60e3_IsBool(jule::Str);
inline jule::Bool _1d42b638a_IsFloat(jule::Str);
inline jule::Bool _1d42b6632_IsNum(jule::Str);
inline jule::Bool _1d42b6b71_IsIgnoreIdent(jule::Str);
inline jule::Bool _1d42b6e18_IsAnonIdent(jule::Str);
inline jule::Bool _1d42b7457_IsSpace(jule::I32);
inline jule::Bool _1d42b78a8_IsLetter(jule::I32);
inline jule::Bool _1d42b7de7_IsDecimal(jule::U8);
inline jule::Bool _1d42b818e_IsBinary(jule::U8);
inline jule::Bool _1d42b8436_IsOctal(jule::U8);
inline jule::Bool _1d42b86cd_IsHex(jule::U8);
inline jule::Bool _1d42b8975_IsAssign(jule::U64);
inline jule::Bool _1d42b8c1c_IsPostfixOp(jule::Str);
inline jule::Bool _1d42b8eb4_IsAssignOp(jule::Str);
inline jule::Ptr<_1d42b9767_File> _1d42bac96_NewFileSet(jule::Str);
inline _20a35491e_Log _1d42bc5c2_makeErr(jule::I64, jule::I64, jule::Ptr<_1d42b9767_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1d42bc957_bytesHasPrefix(jule::Slice<jule::U8>&, jule::Str);
inline jule::Str _1d42bcc98_floatFmtE(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1d42bd12d_floatFmtP(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1d42bd46e_floatFmtDotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1d42bd7b0_floatFmtDotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1d42bdb01_floatFmtDotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1d42be052_floatNum(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1d42be2e9_commonNum(jule::Slice<jule::U8>&);
inline jule::Str _1d42be591_binaryNum(jule::Slice<jule::U8>&);
inline jule::Bool _1d42be8d2_isFloatFmtE(jule::U8, jule::I64);
inline jule::Bool _1d42bec23_isFloatFmtP(jule::U8, jule::I64);
inline jule::Bool _1d42c0064_isFloatFmtDotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _1d42c03a5_isFloatFmtDotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _1d42c06e6_isFloatFmtDotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1d42c0b47_octalNum(jule::Slice<jule::U8>&);
inline jule::Str _1d42c0dde_hexNum(jule::Slice<jule::U8>&);
inline jule::Str _1d42c1230_hexEscape(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1d42c14c7_bigUnicodePointEscape(jule::Slice<jule::U8>&);
inline jule::Str _1d42c1791_littleUnicodePointEscape(jule::Slice<jule::U8>&);
inline jule::Str _1d42c194a_hexByteEscape(jule::Slice<jule::U8>&);
inline jule::Str _1d42c1bd1_byteEscape(jule::Slice<jule::U8>&);
inline jule::Slice<_20a35491e_Log> _1d42c66ca_Lex(jule::Ptr<_1d42b9767_File>, jule::I64);
inline void _1e2583825_lshiftUnsig(_1e23b4a96_Const&, _1e23b4a96_Const&);
inline void _1e2583b22_rshiftUnsig(_1e23b4a96_Const&, _1e23b4a96_Const&);
inline jule::I64 _1e31804a9_LeadingZeros64(jule::U64);
inline jule::I64 _1e3181510_TrailingZeros(jule::U64);
inline jule::I64 _1e3181e06_TrailingZeros32(jule::U32);
inline jule::I64 _1e318219d_TrailingZeros64(jule::U64);
inline jule::I64 _1e3187923_Len32(jule::U32);
inline jule::I64 _1e3187bba_Len64(jule::U64);
inline std::tuple<jule::U64,jule::U64> _1e318887a_Add64(jule::U64, jule::U64, jule::U64);
inline std::tuple<jule::U64,jule::U64> _1e318a00d_Mul64(jule::U64, jule::U64);
inline jule::U32 _1e2e4a53d_F32Bits(jule::F32);
inline jule::F32 _1e2e4a829_F32FromBits(jule::U32);
inline jule::U64 _1e2e4aac1_F64Bits(jule::F64);
inline jule::F64 _1e2e4ade0_F64FromBits(jule::U64);
inline std::tuple<jule::F64,jule::I64> _1e2e4d4ec_Frexp(jule::F64);
inline jule::F64 _1e2eac0e9_NaN(void);
inline jule::Bool _1e2ead02e_IsNaN(jule::F64);
inline jule::F64 _1e2eae9c0_Inf(jule::I64);
inline jule::Bool _1e2eb5333_IsInf(jule::F64, jule::I64);
inline std::tuple<jule::F64,jule::I64> _1e2eb693e_normalize(jule::F64);
inline jule::F64 _1e2ec6b08_Log(jule::F64);
inline jule::F64 _1e2ecd57c_Abs(jule::F64);
inline std::tuple<jule::F64,jule::F64> _1e3193b60_Modf(jule::F64);
inline jule::F64 _1e3194424_Log2(jule::F64);
inline jule::Str _1e2aeb233_FmtFloat(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1e2b10995_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1e2b68844_bigFtoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1e2b90cab_floatInfo&);
inline jule::Slice<jule::U8> _1e2b9045e_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _1e2ba0628_decimalSlice, jule::I64, jule::U8);
inline void _1e2b9262b_roundShortest(_1e31c24a7_decimal&, jule::U64, jule::I64, _1e2b90cab_floatInfo&);
inline jule::Slice<jule::U8> _1e2ba188d_fmtE(jule::Slice<jule::U8>, jule::Bool, _1e2ba0628_decimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _1e2ba2042_fmtF(jule::Slice<jule::U8>, jule::Bool, _1e2ba0628_decimalSlice, jule::I64);
inline jule::Slice<jule::U8> _1e2ba2ecc_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _1e2b90cab_floatInfo&);
inline jule::Slice<jule::U8> _1e2c6a02d_fmtX(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1e2b90cab_floatInfo&);
inline jule::I64 _1e2ca9c93_min(jule::I64, jule::I64);
inline jule::I64 _1e2cc9bd6_max(jule::I64, jule::I64);
inline jule::U8 _1e2d2de49_lower(jule::U8);
inline std::tuple<jule::U64,jule::I64> _1e2d6d8d4_parseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _1e2dd78c6_ParseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _1e2ba1173_ParseInt(jule::Str, jule::I64, jule::I64);
inline std::tuple<jule::F64,jule::Bool> _1e2b32c3c_eiselLemire64(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1e2b769ea_eiselLemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _1e2bc6a39_commonPrefixLenIgnoreCase(jule::Str, jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::Bool> _1e2ce8331_special(jule::Str);
inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _1e2d6e000_readFloat(jule::Str);
inline std::tuple<jule::F64,jule::Bool> _1e2e3a693_atof64exact(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1e2b56876_atof32exact(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F64,jule::I64> _1e2c3866c_atofHex(jule::Str, _1e2b90cab_floatInfo&, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline std::tuple<jule::F32,jule::I64,jule::I64> _1e2c758a7_atof32(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _1e31c03b7_atof64(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _1e31c04e9_parseFloatPrefix(jule::Str, jule::I64);
inline jule::Exceptional<jule::F64> _1e31c062b_ParseFloat(jule::Str, jule::I64);
inline void _1e31c0939_ryuFtoaFixed32(_1e2ba0628_decimalSlice&, jule::U32, jule::I64, jule::I64);
inline void _1e31c0a6b_ryuFtoaFixed64(_1e2ba0628_decimalSlice&, jule::U64, jule::I64, jule::I64);
inline void _1e31c0d24_formatDecimal(_1e2ba0628_decimalSlice&, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _1e31c0e56_ryuFtoaShortest(_1e2ba0628_decimalSlice&, jule::U64, jule::I64, _1e2b90cab_floatInfo&);
inline jule::I64 _1e31c1088_mulByLog2Log10(jule::I64);
inline jule::I64 _1e31c11ba_mulByLog10Log2(jule::I64);
inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _1e31c12ec_computeBounds(jule::U64, jule::I64, _1e2b90cab_floatInfo&);
inline void _1e31c142e_ryuDigits(_1e2ba0628_decimalSlice&, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _1e31c1561_ryuDigits32(_1e2ba0628_decimalSlice&, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline std::tuple<jule::U32,jule::I64,jule::Bool> _1e31c1693_mult64bitPow10(jule::U32, jule::I64, jule::I64);
inline std::tuple<jule::U64,jule::I64,jule::Bool> _1e31c17c5_mult128bitPow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _1e31c1907_divisibleByPow5(jule::U64, jule::I64);
inline std::tuple<jule::U32,jule::U32> _1e31c1a39_divmod1e9(jule::U64);
inline void _1e31c3013_trim(_1e31c24a7_decimal&);
inline void _1e31c3145_rightShift(_1e31c24a7_decimal&, jule::U64);
inline jule::Bool _1e31c3277_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I64, jule::Str);
inline void _1e31c33a9_leftShift(_1e31c24a7_decimal&, jule::U64);
inline jule::Bool _1e31c3640_shouldRoundUp(_1e31c24a7_decimal&, jule::I64);
inline jule::Str _1e31c4dc2_FmtUint(jule::U64, jule::I64);
inline jule::Str _1e31c5257_FmtInt(jule::I64, jule::I64);
inline jule::Str _1e31c54ee_Itoa(jule::I64);
inline jule::Str _1e31c581d_small(jule::I64);
inline jule::Bool _1e31c5ab5_isPowerOfTwo(jule::I64);
inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1e31c60e3_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline jule::Str _1e27020d1_RealKindOf(jule::Str);
inline jule::I64 _1e2708813_BitsizeOf(jule::Str);
inline jule::Str _1e272ca9b_IntFromBits(jule::I64);
inline jule::Str _1e273e9ae_UintFromBits(jule::I64);
inline jule::Str _1e27955c5_FloatFromBits(jule::I64);
inline jule::Bool _1e27d5505_CheckBitFloat(jule::Str, jule::I64);
inline jule::I64 _1e27d6638_BitsizeOfFloat(jule::F64);
inline jule::I64 _1e27db792_BitsizeOfInt(jule::I64);
inline jule::I64 _1e27e18eb_BitsizeOfUint(jule::U64);
inline void _1e26d1412_UpdateTarget(void);
inline void _1e2794e54_init(void);
inline jule::F64 _1e31c8a74_Min(jule::Str);
inline jule::F64 _1e31c8ba6_Max(jule::Str);
inline jule::Bool _1e31c8eb4_IsI8Compatible(jule::Str);
inline jule::Bool _1e31c90e6_IsI16Compatible(jule::Str);
inline jule::Bool _1e31c9228_IsI32Compatible(jule::Str);
inline jule::Bool _1e31c935a_IsI64Compatible(jule::Str);
inline jule::Bool _1e31c948c_IsU8Compatible(jule::Str);
inline jule::Bool _1e31c95be_IsU16Compatible(jule::Str);
inline jule::Bool _1e31c9701_IsU32Compatible(jule::Str);
inline jule::Bool _1e31c9833_IsU64Compatible(jule::Str);
inline jule::Bool _1e31c9965_IsF32Compatible(jule::Str);
inline jule::Bool _1e31c9b74_IsF64Compatible(jule::Str);
inline jule::Bool _1e31c9eb5_TypesAreCompatible(jule::Str, jule::Str);
inline jule::Bool _1e31ca25c_IsI16Greater(jule::Str);
inline jule::Bool _1e31ca504_IsI32Greater(jule::Str);
inline jule::Bool _1e31ca79b_IsI64Greater(jule::Str);
inline jule::Bool _1e31caa43_IsU16Greater(jule::Str);
inline jule::Bool _1e31cae94_IsU32Greater(jule::Str);
inline jule::Bool _1e31cb23b_IsU64Greater(jule::Str);
inline jule::Bool _1e31cb4d3_IsF32Greater(jule::Str);
inline jule::Bool _1e31cb77a_IsF64Greater(jule::Str);
inline jule::Bool _1e31cbabb_IsGreater(jule::Str, jule::Str);
inline jule::Bool _1e31ccb00_IsSigInt(jule::Str);
inline jule::Bool _1e31ccddb_IsUnsigInt(jule::Str);
inline jule::Bool _1e31cd183_IsInt(jule::Str);
inline jule::Bool _1e31cd4a2_IsFloat(jule::Str);
inline jule::Bool _1e31cd749_IsNum(jule::Str);
inline jule::Bool _1e31cd9e1_IsSigNum(jule::Str);
inline jule::Bool _1e30e18e3_IsAscii(jule::I32);
inline jule::I32 _1e30e1a25_ToRune(jule::Slice<jule::U8>);
inline jule::Str _1e30e1b9b_ToRawStr(jule::Slice<jule::U8>);
inline jule::Str _1e30e1e65_ToStr(jule::Slice<jule::U8>);
inline std::tuple<jule::U8,jule::Bool> _1e30e220c_tryBtoaCommonEsq(jule::Slice<jule::U8>);
inline jule::I32 _1e30e251a_runeFromEsqSeq(jule::Slice<jule::U8>, jule::I64&);
inline jule::Slice<jule::U8> _1e30e285b_strEsqSeq(jule::Slice<jule::U8>, jule::I64&);
inline jule::I64 _1e328910c_findFormatPrefix(jule::Slice<jule::U8>&, jule::I64&);
inline jule::Slice<jule::U8> _1e32881a5_getFormatRange(jule::I64&, jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _1e326c596_fmtByDefault(jule::Any&);
inline jule::Slice<jule::U8> _1e3288abd_applyFmtByDefault(jule::I64&, jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _1e328559d_applyFmt(jule::Slice<jule::U8>&, jule::I64&, jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _1e3287e96_formatBytes(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1e3284c51_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e2591107_parameterUsesGenerics(jule::Ptr<_1e2589a07_Param>&, jule::Slice<jule::Ptr<_1e2522c6a_GenericDecl>>&);
inline jule::Ptr<_1e3139012_TypeSymbol> _1e2593626_buildType(jule::Ptr<_1e2515686_TypeDecl>);
inline jule::Ptr<_1e310a115_Value> _1e2593912_buildExpr(jule::Ptr<_1e2519ba7_Expr>);
inline jule::Ptr<_1e31341b6_TypeAlias> _1e2593ba9_buildTypeAlias(jule::Ptr<_1e252bcda_TypeAliasDecl>);
inline jule::Ptr<_1e24e8339_Field> _1e2593ec8_buildField(jule::Ptr<_1e25303c6_FieldDecl>);
inline jule::Slice<jule::Ptr<_1e24e8339_Field>> _1e2594270_buildFields(jule::Slice<jule::Ptr<_1e25303c6_FieldDecl>>&);
inline jule::Ptr<_1e2505d6e_Struct> _1e2594517_buildStruct(jule::Ptr<_1e2530c34_StructDecl>);
inline jule::Ptr<_1e2589a07_Param> _1e25947ae_buildParam(jule::Ptr<_1e252617a_ParamDecl>);
inline jule::Slice<jule::Ptr<_1e2589a07_Param>> _1e2594b33_buildParams(jule::Slice<jule::Ptr<_1e252617a_ParamDecl>>&);
inline jule::Ptr<_1e2589331_RetType> _1e2594dca_buildRetType(jule::Ptr<_1e2518799_RetTypeDecl>);
inline jule::Ptr<_1e258b344_Fn> _1e2595172_buildFn(jule::Ptr<_1e252749a_FnDecl>);
inline jule::Slice<jule::Ptr<_1e258b344_Fn>> _1e2595419_buildMethods(jule::Slice<jule::Ptr<_1e252749a_FnDecl>>&);
inline jule::Ptr<_1e259d246_Trait> _1e25956b1_buildTrait(jule::Ptr<_1e253133e_TraitDecl>);
inline jule::Ptr<_1e259e896_EnumItem> _1e2595958_buildEnumItem(jule::Ptr<_1e252d649_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1e259e896_EnumItem>> _1e2595c00_buildEnumItems(jule::Slice<jule::Ptr<_1e252d649_EnumItemDecl>>&);
inline jule::Ptr<_1e25a038b_Enum> _1e2595e97_buildEnum(jule::Ptr<_1e252e172_EnumDecl>);
inline jule::Ptr<_1e25a13c0_TypeEnumItem> _1e25963e8_buildTypeEnumItem(jule::Ptr<_1e252eb78_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_1e25a13c0_TypeEnumItem>> _1e2596690_buildTypeEnumItems(jule::Slice<jule::Ptr<_1e252eb78_TypeEnumItemDecl>>&);
inline jule::Ptr<_1e25a1986_TypeEnum> _1e2596937_buildTypeEnum(jule::Ptr<_1e252ed76_TypeEnumDecl>);
inline jule::Ptr<_1e322a147_Var> _1e2596bce_buildVar(jule::Ptr<_1e2528479_VarDecl>);
inline jule::Slice<jule::Ptr<_1e322a147_Var>> _1e2596e76_buildVars(jule::Slice<jule::Ptr<_1e2528479_VarDecl>>);
inline jule::Ptr<_1e31d1bd1_Impl> _1e259721d_buildImpl(jule::Ptr<_1e2531949_Impl>);
inline jule::Bool _1e31d0e44_matchConstraint(jule::Str&, jule::Ptr<_1e3134da9_TypeKind>&);
inline jule::Bool _1e31d1230_isBuiltinConstraint(jule::Str&);
inline jule::Ptr<_1e31dd89c_scopeChecker> _1e31d3c6b_newScopeCheckerBase(jule::Ptr<_1e320d768_Sema>&, jule::Ptr<_1e258dee5_FnIns>);
inline jule::Ptr<_1e31dd89c_scopeChecker> _1e31d4101_newScopeChecker(jule::Ptr<_1e320d768_Sema>&, jule::Ptr<_1e258dee5_FnIns>);
inline jule::Ptr<_1e31dc615_scopeLabel> _1e31d4442_findLabelParent(jule::Str, jule::Ptr<_1e31dd89c_scopeChecker>);
inline jule::Bool _1e31d47c7_modelIsGotoScope(jule::Any, jule::Ptr<_1e31d6c3b_Scope>&);
inline jule::Bool _1e31d4b18_stmtIsGotoScope(jule::Any&, jule::Ptr<_1e31d6c3b_Scope>&);
inline jule::I64 _1e31d4e59_countMatchType(jule::Ptr<_1e31da987_Match>&, jule::Ptr<_1e3134da9_TypeKind>&);
inline jule::Slice<jule::Ptr<_1e310908c_Data>> _1e31d5201_getDatasFromTupleData(jule::Ptr<_1e310908c_Data>&);
inline jule::Slice<jule::Any> _1e31d55a8_getExprModels(jule::Any&);
inline jule::Bool _1e31d5a3c_checkMut(jule::Ptr<_1e320d768_Sema>&, jule::Ptr<_1e310908c_Data>&, jule::Ptr<_1e310908c_Data>, jule::Ptr<_1d42b43cc_Token>);
inline jule::Bool _1e31d5ec1_checkAssign(jule::Ptr<_1e320d768_Sema>&, jule::Ptr<_1e310908c_Data>&, jule::Ptr<_1e310908c_Data>, jule::Ptr<_1d42b43cc_Token>);
inline jule::Bool _1e31d6268_isValidAstStForNextSt(jule::Any&);
inline jule::Bool _1e31d6510_isValidStForNextSt(jule::Any&);
inline jule::Bool _1e31d67a7_stmtIsDef(jule::Any&);
inline jule::Ptr<_1e322a147_Var> _1e320321e_findVarInPackage(jule::Slice<jule::Ptr<_1e310432e_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1e31341b6_TypeAlias> _1e320364d_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1e310432e_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1e2505d6e_Struct> _1e3203a38_findStructInPackage(jule::Slice<jule::Ptr<_1e310432e_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1e258b344_Fn> _1e3203e9a_findFnInPackage(jule::Slice<jule::Ptr<_1e310432e_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1e259d246_Trait> _1e32042a8_findTraitInPackage(jule::Slice<jule::Ptr<_1e310432e_SymbolTable>>&, jule::Str);
inline jule::Ptr<_1e25a038b_Enum> _1e32045e9_findEnumInPackage(jule::Slice<jule::Ptr<_1e310432e_SymbolTable>>&, jule::Str);
inline jule::Ptr<_1e25a1986_TypeEnum> _1e320493a_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1e310432e_SymbolTable>>&, jule::Str);
inline jule::Bool _1e320ab50_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _1e320b8a9_isValidModelForRef(jule::Any&);
inline _20a35491e_Log _1e320bd4e_compilerErr(jule::Ptr<_1d42b43cc_Token>&, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e320c190_impIsLookupable(jule::Ptr<_1e320561c_ImportInfo>&, jule::Str);
inline void _1e320c48c_appendRetVars(jule::Slice<jule::Ptr<_1e322a147_Var>>&, jule::Ptr<_1e258dee5_FnIns>&);
inline void _1e320c745_appendParamVars(jule::Slice<jule::Ptr<_1e322a147_Var>>&, jule::Ptr<_1e258dee5_FnIns>&);
inline void _1e320ca20_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1e31341b6_TypeAlias>>&, jule::Ptr<_1e258dee5_FnIns>&);
inline jule::Ptr<_1e310432e_SymbolTable> _1e320cd72_findFile(jule::Slice<jule::Ptr<_1e310432e_SymbolTable>>&, jule::Ptr<_1d42b9767_File>&);
inline void _1e320d2d4_pushSugggestion(_20a35491e_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e30e15d5_traitHasReferenceReceiver(jule::Ptr<_1e259d246_Trait>&);
inline jule::Bool _1e30e1717_floatAssignable(jule::Str, jule::Ptr<_1e310908c_Data>&);
inline jule::Bool _1e30e2aae_sigAssignable(jule::Str, jule::Ptr<_1e310908c_Data>&);
inline jule::Bool _1e30e2be1_unsigAssignable(jule::Str, jule::Ptr<_1e310908c_Data>&);
inline jule::Bool _1e30e2d23_intAssignable(jule::Str, jule::Ptr<_1e310908c_Data>&);
inline jule::Ptr<_1e24d1e8d_Directive> _1e312e601_findDirective(jule::Slice<jule::Ptr<_1e24d1e8d_Directive>>&, jule::Str);
inline jule::Any _1e312e986_findBuiltinsImport(jule::Str, jule::Ptr<_1e320561c_ImportInfo>);
inline void _1e312eb95_fitBitsize(jule::Ptr<_1e310908c_Data>&);
inline void _1e312ee92_makeStructLitAlloc(jule::Ptr<_1e310908c_Data>&, jule::Ptr<_1e258453a_StructLitExprModel>&);
inline jule::Ptr<_1e322a147_Var> _1e31302d3_buildErrorVar(jule::Ptr<_1e31d6c3b_Scope>&, jule::Ptr<_1e251de75_FnCallExpr>&);
inline jule::Any _1e3130624_findBuiltinsSema(jule::Str, jule::Ptr<_1e320d768_Sema>);
inline jule::Bool _1e31308bb_isOkForShifting(jule::Ptr<_1e310908c_Data>&);
inline jule::Bool _1e3130c73_isInstancedStruct(jule::Ptr<_1e253220d_StructIns>);
inline jule::Bool _1e313103c_isPtrArithmeticCompatibleInt(jule::Ptr<_1e310908c_Data>&);
inline void _1e313127e_applyCastKindModel(jule::Ptr<_1e310908c_Data>&, jule::Ptr<_1e3134da9_TypeKind>&);
inline void _1e3131537_applyCastKind(jule::Ptr<_1e310908c_Data>&, jule::Ptr<_1e3134da9_TypeKind>&);
inline jule::Ptr<_1e310908c_Data> _1e3131735_buildVoidData(void);
inline jule::Str _1e31319ee_checkDataForIntegerIndexing(jule::Ptr<_1e310908c_Data>&);
inline void _1e3131cb8_applyCastModelByEnum(jule::Ptr<_1e310908c_Data>&, jule::Ptr<_1e25a038b_Enum>);
inline void _1e3132071_castConstByType(jule::Str&, jule::Ptr<_1e310908c_Data>&);
inline void _1e313257c_updateModelToGenericIns(jule::Any&, jule::Ptr<_1e258dee5_FnIns>&);
inline jule::Bool _1e31327be_pushSubIdentFromExpr(jule::Any, jule::Ptr<_1e251639b_SubIdentTypeDecl>&);
inline jule::Bool _1e314b6a6_kindUsesGenerics(jule::Any&, jule::Slice<jule::Ptr<_1e2522c6a_GenericDecl>>&);
inline jule::Bool _1e314ba3b_hasDirective(jule::Slice<jule::Ptr<_1e24d1e8d_Directive>>&, jule::Str);
inline jule::Bool _1e314bcd3_canGetPtr(jule::Ptr<_1e310908c_Data>&);
inline jule::Bool _1e314c102_isValidForSptrType(jule::Ptr<_1e3134da9_TypeKind>&);
inline jule::Bool _1e314c399_isValidForRef(jule::Ptr<_1e3134da9_TypeKind>&);
inline jule::Bool _1e314c663_isBuiltinStrConvertable(jule::Ptr<_1e3134da9_TypeKind>&);
inline jule::Str _1e314c8d8_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Ptr<_1e3139881_Prim> _1e314cc90_buildPrimType(jule::Str);
inline jule::Ptr<_1e2505d6e_Struct> _1e314d037_getStructFromKind(jule::Ptr<_1e3134da9_TypeKind>);
inline jule::Bool _1e314d2ce_isPrim(jule::Str);
inline void _1e314d587_applyImplicitCast(jule::Ptr<_1e3134da9_TypeKind>&, jule::Ptr<_1e310908c_Data>&);
inline std::tuple<jule::Ptr<_1e310432e_SymbolTable>,jule::Slice<_20a35491e_Log>> _1e315147a_buildSymbols(jule::Ptr<_1e24d0d9e_Ast>&, jule::Trait<_1e3202d89_Importer>&, jule::Ptr<_1e259776d_symbolBuilder>);
inline std::tuple<jule::Ptr<_1e3208576_Package>,jule::Slice<_20a35491e_Log>> _1e31518a9_analyzePackage(jule::Slice<jule::Ptr<_1e24d0d9e_Ast>>&, jule::Trait<_1e3202d89_Importer>&, jule::I64&);
inline std::tuple<jule::Ptr<_1e3208576_Package>,jule::Slice<_20a35491e_Log>> _1e3151c94_AnalyzePackage(jule::Slice<jule::Ptr<_1e24d0d9e_Ast>>, jule::Trait<_1e3202d89_Importer>, jule::I64);
inline jule::Ptr<_1e258dee5_FnIns> _1e3277cbb_findBuiltinFn(jule::Str);
inline jule::Ptr<_1e31341b6_TypeAlias> _1e3259d8b_findBuiltinTypeAlias(jule::Str);
inline jule::Any _1e3247dbd_findBuiltinDef(jule::Str);
inline jule::Any _1e3247692_findBuiltinDefStdDebug(jule::Str);
inline jule::Any _1e32477c4_findBuiltinDefStdMem(jule::Str);
inline jule::Any _1e3263977_findBuiltinDefStdJuleIntegrated(jule::Str);
inline jule::Any _1e3263aa9_findPackageBuiltinDef(jule::Str, jule::Str);
inline jule::Ptr<_1e310908c_Data> _1e3297868_builtinCallerCommonPlain(jule::Ptr<_1e310ab0a_Eval>&, jule::Ptr<_1e251de75_FnCallExpr>&, jule::Ptr<_1e310908c_Data>&);
inline jule::Ptr<_1e310908c_Data> _1e3297ba9_builtinCallerCommon(jule::Ptr<_1e310ab0a_Eval>&, jule::Ptr<_1e251de75_FnCallExpr>&, jule::Ptr<_1e310908c_Data>&);
inline jule::Ptr<_1e310908c_Data> _1e3298094_builtinCallerCommonMut(jule::Ptr<_1e310ab0a_Eval>&, jule::Ptr<_1e251de75_FnCallExpr>&, jule::Ptr<_1e310908c_Data>&);
inline jule::Ptr<_1e310908c_Data> _1e32983d5_builtinCallerError(jule::Ptr<_1e310ab0a_Eval>&, jule::Ptr<_1e251de75_FnCallExpr>&);
inline jule::Ptr<_1e310908c_Data> _1e32987c0_builtinCallerOut(jule::Ptr<_1e310ab0a_Eval>&, jule::Ptr<_1e251de75_FnCallExpr>&, jule::Ptr<_1e310908c_Data>&);
inline jule::Ptr<_1e310908c_Data> _1e3298baa_builtinCallerOutln(jule::Ptr<_1e310ab0a_Eval>&, jule::Ptr<_1e251de75_FnCallExpr>&, jule::Ptr<_1e310908c_Data>&);
inline jule::Ptr<_1e310908c_Data> _1e3299095_builtinCallerNew(jule::Ptr<_1e310ab0a_Eval>&, jule::Ptr<_1e251de75_FnCallExpr>&, jule::Ptr<_1e310908c_Data>&);
inline jule::Ptr<_1e310908c_Data> _1e3299480_builtinCallerPanic(jule::Ptr<_1e310ab0a_Eval>&, jule::Ptr<_1e251de75_FnCallExpr>&, jule::Ptr<_1e310908c_Data>&);
inline jule::Ptr<_1e310908c_Data> _1e3299a9b_builtinCallerMake(jule::Ptr<_1e310ab0a_Eval>&, jule::Ptr<_1e251de75_FnCallExpr>&, jule::Ptr<_1e310908c_Data>&);
inline jule::Ptr<_1e310908c_Data> _1e3299e86_builtinCallerAppend(jule::Ptr<_1e310ab0a_Eval>&, jule::Ptr<_1e251de75_FnCallExpr>&, jule::Ptr<_1e310908c_Data>&);
inline jule::Ptr<_1e310908c_Data> _1e329a41a_callerCopySlice(jule::Ptr<_1e310908c_Data>&, jule::Ptr<_1e310ab0a_Eval>&, jule::Ptr<_1e251de75_FnCallExpr>&, jule::Ptr<_1e310908c_Data>&);
inline jule::Ptr<_1e310908c_Data> _1e329a89e_callerCopyStr(jule::Ptr<_1e310908c_Data>&, jule::Ptr<_1e310ab0a_Eval>&, jule::Ptr<_1e251de75_FnCallExpr>&, jule::Ptr<_1e310908c_Data>&);
inline jule::Ptr<_1e310908c_Data> _1e329ac89_builtinCallerCopy(jule::Ptr<_1e310ab0a_Eval>&, jule::Ptr<_1e251de75_FnCallExpr>&, jule::Ptr<_1e310908c_Data>&);
inline jule::Ptr<_1e310908c_Data> _1e329b174_builtinCallerClone(jule::Ptr<_1e310ab0a_Eval>&, jule::Ptr<_1e251de75_FnCallExpr>&, jule::Ptr<_1e310908c_Data>&);
inline jule::Ptr<_1e310908c_Data> _1e329b55e_builtinCallerAssert(jule::Ptr<_1e310ab0a_Eval>&, jule::Ptr<_1e251de75_FnCallExpr>&, jule::Ptr<_1e310908c_Data>&);
inline jule::Ptr<_1e310908c_Data> _1e329b96b_builtinCallerStdMemSizeOf(jule::Ptr<_1e310ab0a_Eval>&, jule::Ptr<_1e251de75_FnCallExpr>&, jule::Ptr<_1e310908c_Data>&);
inline jule::Ptr<_1e310908c_Data> _1e329bc79_builtinCallerStdMemAlignOf(jule::Ptr<_1e310ab0a_Eval>&, jule::Ptr<_1e251de75_FnCallExpr>&, jule::Ptr<_1e310908c_Data>&);
inline jule::Ptr<_1e310908c_Data> _1e329c197_builtinCallerStdMemFree(jule::Ptr<_1e310ab0a_Eval>&, jule::Ptr<_1e251de75_FnCallExpr>&, jule::Ptr<_1e310908c_Data>&);
inline jule::Ptr<_1e310908c_Data> _1e329c5c6_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1e310ab0a_Eval>&, jule::Ptr<_1e251de75_FnCallExpr>&, jule::Ptr<_1e310908c_Data>&);
inline jule::Ptr<_1e310908c_Data> _1e329c9e4_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1e310ab0a_Eval>&, jule::Ptr<_1e251de75_FnCallExpr>&, jule::Ptr<_1e310908c_Data>&);
inline jule::Ptr<_1e310908c_Data> _1e329ce34_builtinCallerStdDebugOut(jule::Ptr<_1e310ab0a_Eval>&, jule::Ptr<_1e251de75_FnCallExpr>&, jule::Ptr<_1e310908c_Data>&);
inline jule::Ptr<_1e310908c_Data> _1e329d31e_builtinCallerStdDebugOutln(jule::Ptr<_1e310ab0a_Eval>&, jule::Ptr<_1e251de75_FnCallExpr>&, jule::Ptr<_1e310908c_Data>&);
inline jule::Bool _1e3328a92_FindModuleFile(jule::Slice<jule::Ptr<_2162e43ca_DirEntry>>&);
inline jule::Str _1e3328c90_FindModuleFileDeep(jule::Str);
inline jule::Slice<_20a35491e_Log> _1e3329037_CheckModuleFile(jule::Str);
inline jule::Ptr<_1e337e39a_FileInfo> _1e3386050_ParseFile(jule::Ptr<_1d42b9767_File>);
inline std::tuple<jule::Ptr<_1e24d0d9e_Ast>,jule::Slice<_20a35491e_Log>> _1e33cc5b3_parseFileset(jule::Ptr<_1d42b9767_File>);
inline jule::Ptr<_1e25259a4_ScopeTree> _1e33cceba_newScope(void);
inline std::tuple<jule::Bool,jule::Bool> _1e33cd2c8_isSt(jule::Ptr<_1d42b43cc_Token>, jule::Ptr<_1d42b43cc_Token>);
inline jule::Bool _1e33cd619_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1d42b43cc_Token>>&, jule::I64&);
inline std::tuple<jule::I64,jule::Bool> _1e33cd99e_nextStPos(jule::Slice<jule::Ptr<_1d42b43cc_Token>>&, jule::I64);
inline std::tuple<jule::Slice<jule::Ptr<_1d42b43cc_Token>>,jule::Bool> _1e33cdce0_skipSt(jule::I64&, jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline jule::Slice<jule::Ptr<_1e33ce0dc_stmt>> _1e33ce483_splitStmts(jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Slice<jule::Ptr<_1d42b43cc_Token>> _1e33dad85_getBlockExpr(jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_1d42b43cc_Token>>,jule::Slice<jule::Ptr<_1d42b43cc_Token>>> _1e33db1d7_splitDelim(jule::Slice<jule::Ptr<_1d42b43cc_Token>>&, jule::U64);
inline jule::I64 _1e33db47e_findLowestPrecOp(jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Ptr<_1e251bc20_IdentExpr> _1e33db79d_buildIdentExpr(jule::Ptr<_1d42b43cc_Token>&);
inline std::tuple<jule::Slice<jule::Ptr<_1d42b43cc_Token>>,jule::I64> _1e33dba45_getRangeExprTokens(jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Bool _1e33e7457_checkAssignTokens(jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline _20a35491e_Log _1e33e8348_makeErr(jule::I64, jule::I64, jule::Ptr<_1d42b9767_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1d42b43cc_Token>> _1e33e87dd_range(jule::I64&, jule::Str, jule::Str, jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_1d42b43cc_Token>>,jule::Slice<jule::Ptr<_1d42b43cc_Token>>> _1e33e8a85_rangeLast(jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>>,jule::Slice<_20a35491e_Log>> _1e33e8ee7_partsKind(jule::Slice<jule::Ptr<_1d42b43cc_Token>>&, jule::Str, jule::Bool);
inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>>,jule::Slice<_20a35491e_Log>> _1e33e93d2_parts(jule::Slice<jule::Ptr<_1d42b43cc_Token>>&, jule::U64, jule::Bool);
inline jule::Str _1e33e9679_getCloseKindOfBrace(jule::Str);
inline _20a35491e_Log _1e33e9a64_compilerErr(jule::Ptr<_1d42b43cc_Token>&, jule::Str&, jule::Slice<jule::Any>);
inline void _1e33e9e93_pushSuggestion(_20a35491e_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1e33ea23a_tokstoa(jule::Slice<jule::Ptr<_1d42b43cc_Token>>&);
inline jule::Ptr<_1e2515686_TypeDecl> _1e340ad0b_buildVoidType(void);
inline jule::Ptr<_1e2515686_TypeDecl> _1e340b070_buildPrimType(jule::Ptr<_1d42b43cc_Token>);
inline jule::I64 _1e340b3b1_mapColon(jule::Slice<jule::Ptr<_1d42b43cc_Token>>&, jule::I64&);
inline std::tuple<jule::Bool,jule::Bool> _1e32ed5c2_checkOs(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _1e32ed704_checkArch(jule::Str);
inline jule::Bool _1e32ed836_isPassFileAnnotation(jule::Str);
inline void _1e3317d39_setOsVars(jule::Slice<jule::Str>&);
inline void _1e331808c_setArchVars(jule::Slice<jule::Str>&);
inline void _1e3318345_initVars(jule::Slice<jule::Str>&, _1e3317a2b_CompileInfo&);
inline jule::Slice<jule::U8> _1e338070e_readBuff(jule::Str);
inline _20a35491e_Log _1e3386dca_flatCompilerErr(jule::Str);
inline void _1e3301592_pushPasses(jule::Ptr<_1e3208576_Package>&, jule::Slice<jule::Str>&);
inline jule::Slice<jule::Str> _1e3302087_getAllUniquePasses(jule::Ptr<_1e3208576_Package>&, jule::Slice<jule::Ptr<_1e320561c_ImportInfo>>);
inline _1e3317a2b_CompileInfo _1e3304d37_buildCompileInfo(void);
inline void _1e3c150e8_EliminateDefines(jule::Ptr<_1e3381952_IR>&);
inline jule::Ptr<_1e24d1e8d_Directive> _1e3c1547d_findDirective(jule::Slice<jule::Ptr<_1e24d1e8d_Directive>>&, jule::Str);
inline jule::Bool _1e3c157be_hasDirective(jule::Slice<jule::Ptr<_1e24d1e8d_Directive>>&, jule::Str);
inline void _1e3c1941b_eliminateDeadCodeOfScope(jule::Ptr<_1e31d6c3b_Scope>);
inline void _1e3c196a2_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1e258b344_Fn>>&);
inline void _1e3c198e4_eliminateFunctionsScopePackage(jule::Ptr<_1e3208576_Package>&);
inline void _1e3c19b8b_eliminateScopePackage(jule::Ptr<_1e3208576_Package>&);
inline void _1e3c19d9a_EliminateScopes(jule::Ptr<_1e3381952_IR>&);
inline jule::Bool _1e1066309_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _1e1069a5a_isConstantValidConditionalCase(jule::Ptr<_1e31d7137_If>&);
inline jule::Bool _1e106a41d_isUnreachableExpr(jule::Any&);
inline jule::Bool _1e107205c_isConstantValidMatchCase(jule::Ptr<_1e31db4d2_Case>&);
inline jule::Bool _1e1079938_isUnreachableConditionalCase(jule::Ptr<_1e31d7137_If>&);
inline jule::Bool _1e107b132_isUnreachableMatchCase(jule::Ptr<_1e31db4d2_Case>&);
inline std::tuple<jule::Bool,jule::U64> _1e15d9b57_checkForBitShiftOpt(jule::Ptr<_1e2583c87_OperandExprModel>&, jule::Ptr<_1e2583c87_OperandExprModel>&);
inline void _1e15db153_PushOptLevel(jule::I64);
inline void _1e3baaa1c_detectEnabled(void);
inline void _20a41ad7b_Throw(jule::Str);
inline jule::U64 _1e42a924c_unix(void);
inline jule::U64 _1e42a958d_unixYearToSeconds(jule::U64, jule::Bool&);
inline jule::U64 _1e42a9923_unixMonthToSeconds(jule::U64, jule::Bool);
inline jule::Bool _1e423388b_isCopyOptimizable(jule::Ptr<_1e310908c_Data>&);
inline jule::Bool _1e4233c21_isIterCopyOptimizable(jule::Ptr<_1e310908c_Data>&, jule::Ptr<_1e322a147_Var>&);
inline jule::Str _1e4241d1c_decomposeCommonEsq(jule::U8);
inline jule::Str _1e4242108_sbtoa(jule::U8);
inline jule::Str _1e42423a0_cstrBytes(jule::Slice<jule::U8>);
inline jule::Str _1e42426be_cstrLit(jule::Slice<jule::U8>);
inline jule::Str _1e42429cc_ftoa(jule::F64, jule::I64);
inline jule::Str _1e4242c74_itoa(jule::I64);
inline jule::Str _1e424301b_utoa(jule::U64);
inline jule::Bool _1e42433c3_isForwarded(jule::Ptr<_1e31d6c3b_Scope>&);
inline jule::Bool _1e424368c_isBuiltinCallHasDebuginf(jule::Ptr<_1e2584b01_FnCallExprModel>&);
inline void _1e42ae791_iterFiles(jule::Ptr<_1e3208576_Package>&, jule::Fn<void(jule::Ptr<_1e310432e_SymbolTable>&)>);
inline void _1e42ae9e4_prepareStructure(jule::Ptr<_1e2505d6e_Struct>&);
inline jule::Str _1e42aec8b_concatAllParts(jule::Slice<jule::Ptr<_1d42b43cc_Token>>);
inline jule::Ptr<_1e24d1e8d_Directive> _1e42b81b2_findDirective(jule::Slice<jule::Ptr<_1e24d1e8d_Directive>>&, jule::Str);
inline jule::Bool _1e42b8547_hasDirective(jule::Slice<jule::Ptr<_1e24d1e8d_Directive>>&, jule::Str);
inline void _20a323190_printErrorMessage(jule::Str);
inline void _20a336d74_help(jule::Slice<jule::Str>&);
inline void _20a3375c2_version(jule::Slice<jule::Str>&);
inline void _20a338e75_toolDistos(void);
inline void _20a3396c3_toolDistarch(void);
inline void _20a339e21_tool(jule::Slice<jule::Str>&);
inline void _20a324092_julenv(jule::Slice<jule::Str>&);
inline void _20a346c85_mod(jule::Slice<jule::Str>&);
inline jule::Bool _20a33a95a_processCommand(jule::Slice<jule::Str>&);
inline void _20a322cc7_showInfo(void);
void entry_point(void);
inline void _20a32d0ce_enableVtp(void);
inline void _20a32a175_init(void);
inline void _1e42be86c_init(void);
inline jule::Ptr<_2163c2bb2_File> _1e42c141d_openOutput(jule::Str&);
inline void _1e42cc605_clearObjects(void);
inline void _1e416dd6a_compileIr(jule::Str, jule::Str);
inline jule::Bool _1e42b8a53_isCppSourceFile(jule::Str);
inline void _1e416e156_pushCompCmdClang(jule::Str&);
inline void _1e42bcbcd_pushCompCmdGcc(jule::Str&);
inline std::tuple<jule::Str,jule::Str> _1e42bada7_genCompileCmd(jule::Str, jule::Ptr<_1e3381952_IR>&);
inline jule::Str _1e42e12d9_getCompilePath(void);
inline void _1e42ba33a_applyTargetIndependentOptimizations(jule::Ptr<_1e3381952_IR>&);
inline void _1e42ba8bd_checkCompilerFlag(void);
inline void _1e42c83ae_checkTargetArch(jule::Str);
inline void _1e42bbe30_checkTargetOs(jule::Str);
inline void _1e42bc062_checkTargetFlag(jule::Str&);
inline void _1e4302edd_checkOptFlag(jule::Str&);
inline void _1e4303351_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1e4303483_checkFlags(jule::Slice<jule::Str>&);
inline void _1e43035b5_setupSemaFlags(jule::I64&);
inline jule::Ptr<_1e3381952_IR> _1e43036e7_buildIr(jule::Slice<jule::Str>&);
inline void _1e4303829_compileCommand(jule::Slice<jule::Str>&);


struct _1e3202d89_ImporterMptrData {
	void(*_1e3201cab_SetModPath)(jule::Trait<_1e3202d89_Importer>, jule::Str);
	jule::Str(*_1e3201eed_GetModPath)(jule::Trait<_1e3202d89_Importer>);
	jule::Str(*_1e320230b_ModById)(jule::Trait<_1e3202d89_Importer>, jule::I64);
	jule::Ptr<_1e320561c_ImportInfo>(*_1e3202619_GetImport)(jule::Trait<_1e3202d89_Importer>, jule::Str);
	std::tuple<jule::Slice<jule::Ptr<_1e24d0d9e_Ast>>,jule::Slice<_20a35491e_Log>>(*_1e32029c1_ImportPackage)(jule::Trait<_1e3202d89_Importer>, jule::Str, jule::Bool);
	void(*_1e3202c46_Imported)(jule::Trait<_1e3202d89_Importer>, jule::Ptr<_1e320561c_ImportInfo>);
};

struct _1e313497a_KindMptrData {
	jule::Str(*_1e3134529_Str)(jule::Trait<_1e313497a_Kind>);
	jule::Bool(*_1e3134837_Equals)(jule::Trait<_1e313497a_Kind>, jule::Ptr<_1e3134da9_TypeKind>);
};

struct _1e315091e_LookupMptrData {
	jule::Ptr<_1e320561c_ImportInfo>(*_1e314dac6_FindPackage)(jule::Trait<_1e315091e_Lookup>, jule::Str);
	jule::Ptr<_1e320561c_ImportInfo>(*_1e314ddd4_SelectPackage)(jule::Trait<_1e315091e_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_1e320561c_ImportInfo>)>);
	jule::Ptr<_1e322a147_Var>(*_1e314e28b_FindVar)(jule::Trait<_1e315091e_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1e31341b6_TypeAlias>(*_1e314e643_FindTypeAlias)(jule::Trait<_1e315091e_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1e2505d6e_Struct>(*_1e314e9ea_FindStruct)(jule::Trait<_1e315091e_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1e258b344_Fn>(*_1e314eda2_FindFn)(jule::Trait<_1e315091e_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1e259d246_Trait>(*_1e31501b0_FindTrait)(jule::Trait<_1e315091e_Lookup>, jule::Str);
	jule::Ptr<_1e25a038b_Enum>(*_1e31504bd_FindEnum)(jule::Trait<_1e315091e_Lookup>, jule::Str);
	jule::Ptr<_1e25a1986_TypeEnum>(*_1e31507cb_FindTypeEnum)(jule::Trait<_1e315091e_Lookup>, jule::Str);
};

struct _1e4060344_CommonFlagMptrData {
	jule::Str(*_1e4060212_name)(jule::Trait<_1e4060344_CommonFlag>);
	jule::I32(*_1e4015382_short)(jule::Trait<_1e4060344_CommonFlag>);
	jule::Str(*_1e40154b4_what)(jule::Trait<_1e4060344_CommonFlag>);
	void(*_1e42e77eb_reset)(jule::Trait<_1e4060344_CommonFlag>);
};



inline void _1e3201cab_SetModPath_0(jule::Trait<_1e3202d89_Importer> _self_, jule::Str _1733_path) {
	_1e339a4d7_SetModPath(_self_.safe_ptr<_1e333ae7d_JuleImporter>(), _1733_path);
}
inline jule::Str _1e3201eed_GetModPath_0(jule::Trait<_1e3202d89_Importer> _self_) {
	return _1e33a7291_GetModPath(_self_.safe_ptr<_1e333ae7d_JuleImporter>());
}
inline jule::Str _1e320230b_ModById_0(jule::Trait<_1e3202d89_Importer> _self_, jule::I64 _2526_id) {
	return _1e33ada7d_ModById(_self_.safe_ptr<_1e333ae7d_JuleImporter>(), _2526_id);
}
inline jule::Ptr<_1e320561c_ImportInfo> _1e3202619_GetImport_0(jule::Trait<_1e3202d89_Importer> _self_, jule::Str _3132_path) {
	return _1e33b5aeb_GetImport(_self_.safe_ptr<_1e333ae7d_JuleImporter>(), _3132_path);
}
inline std::tuple<jule::Slice<jule::Ptr<_1e24d0d9e_Ast>>,jule::Slice<_20a35491e_Log>> _1e32029c1_ImportPackage_0(jule::Trait<_1e3202d89_Importer> _self_, jule::Str _3736_path, jule::Bool _3747_update_mod) {
	return _1e33bb1b7_ImportPackage(_self_.safe_ptr<_1e333ae7d_JuleImporter>(), _3736_path, _3747_update_mod);
}
inline void _1e3202c46_Imported_0(jule::Trait<_1e3202d89_Importer> _self_, jule::Ptr<_1e320561c_ImportInfo> _4135__0) {
	_1e3330901_Imported(_self_.safe_ptr<_1e333ae7d_JuleImporter>(), _4135__0);
}
inline jule::Str _1e3134529_Str_0(jule::Trait<_1e313497a_Kind> _self_) {
	return _1e2507a52_Str(_self_.safe_ptr<_1e253220d_StructIns>());
}
inline jule::Bool _1e3134837_Equals_0(jule::Trait<_1e313497a_Kind> _self_, jule::Ptr<_1e3134da9_TypeKind> _5626_other) {
	return _1e2508bb8_Equals(_self_.data.as<_1e253220d_StructIns>(), _5626_other);
}
inline jule::Str _1e3134529_Str_1(jule::Trait<_1e313497a_Kind> _self_) {
	return _1e258e325_Str(_self_.safe_ptr<_1e258dee5_FnIns>());
}
inline jule::Bool _1e3134837_Equals_1(jule::Trait<_1e313497a_Kind> _self_, jule::Ptr<_1e3134da9_TypeKind> _5626_other) {
	return _1e258e633_Equals(_self_.data.as<_1e258dee5_FnIns>(), _5626_other);
}
inline jule::Str _1e3134529_Str_2(jule::Trait<_1e313497a_Kind> _self_) {
	return _1e259d642_Str(_self_.safe_ptr<_1e259d246_Trait>());
}
inline jule::Bool _1e3134837_Equals_2(jule::Trait<_1e313497a_Kind> _self_, jule::Ptr<_1e3134da9_TypeKind> _5626_other) {
	return _1e259d950_Equals(_self_.data.as<_1e259d246_Trait>(), _5626_other);
}
inline jule::Str _1e3134529_Str_3(jule::Trait<_1e313497a_Kind> _self_) {
	return _1e25a06ee_Str(_self_.safe_ptr<_1e25a038b_Enum>());
}
inline jule::Bool _1e3134837_Equals_3(jule::Trait<_1e313497a_Kind> _self_, jule::Ptr<_1e3134da9_TypeKind> _5626_other) {
	return _1e25a0a0c_Equals(_self_.data.as<_1e25a038b_Enum>(), _5626_other);
}
inline jule::Str _1e3134529_Str_4(jule::Trait<_1e313497a_Kind> _self_) {
	return _1e25a1cb6_Str(_self_.safe_ptr<_1e25a1986_TypeEnum>());
}
inline jule::Bool _1e3134837_Equals_4(jule::Trait<_1e313497a_Kind> _self_, jule::Ptr<_1e3134da9_TypeKind> _5626_other) {
	return _1e25a20c4_Equals(_self_.data.as<_1e25a1986_TypeEnum>(), _5626_other);
}
inline jule::Str _1e3134529_Str_5(jule::Trait<_1e313497a_Kind> _self_) {
	return _1e31352a5_Str(_self_.safe_ptr<_1e3134da9_TypeKind>());
}
inline jule::Bool _1e3134837_Equals_5(jule::Trait<_1e313497a_Kind> _self_, jule::Ptr<_1e3134da9_TypeKind> _5626_other) {
	return _1e31355b3_Equals(_self_.data.as<_1e3134da9_TypeKind>(), _5626_other);
}
inline jule::Str _1e3134529_Str_6(jule::Trait<_1e313497a_Kind> _self_) {
	return _1e3139be4_Str(_self_.safe_ptr<_1e3139881_Prim>());
}
inline jule::Bool _1e3134837_Equals_6(jule::Trait<_1e313497a_Kind> _self_, jule::Ptr<_1e3134da9_TypeKind> _5626_other) {
	return _1e313a002_Equals(_self_.data.as<_1e3139881_Prim>(), _5626_other);
}
inline jule::Str _1e3134529_Str_7(jule::Trait<_1e313497a_Kind> _self_) {
	return _1e313d478_Str(_self_.safe_ptr<_1e313d115_Sptr>());
}
inline jule::Bool _1e3134837_Equals_7(jule::Trait<_1e313497a_Kind> _self_, jule::Ptr<_1e3134da9_TypeKind> _5626_other) {
	return _1e313d786_Equals(_self_.data.as<_1e313d115_Sptr>(), _5626_other);
}
inline jule::Str _1e3134529_Str_8(jule::Trait<_1e313497a_Kind> _self_) {
	return _1e313e07d_Str(_self_.safe_ptr<_1e313da72_Slc>());
}
inline jule::Bool _1e3134837_Equals_8(jule::Trait<_1e313497a_Kind> _self_, jule::Ptr<_1e3134da9_TypeKind> _5626_other) {
	return _1e313e38b_Equals(_self_.data.as<_1e313da72_Slc>(), _5626_other);
}
inline jule::Str _1e3134529_Str_9(jule::Trait<_1e313497a_Kind> _self_) {
	return _1e313e963_Str(_self_.safe_ptr<_1e313e600_Tuple>());
}
inline jule::Bool _1e3134837_Equals_9(jule::Trait<_1e313497a_Kind> _self_, jule::Ptr<_1e3134da9_TypeKind> _5626_other) {
	return _1e313ec71_Equals(_self_.data.as<_1e313e600_Tuple>(), _5626_other);
}
inline jule::Str _1e3134529_Str_10(jule::Trait<_1e313497a_Kind> _self_) {
	return _1e314048b_Str(_self_.safe_ptr<_1e3140128_Map>());
}
inline jule::Bool _1e3134837_Equals_10(jule::Trait<_1e313497a_Kind> _self_, jule::Ptr<_1e3134da9_TypeKind> _5626_other) {
	return _1e3140799_Equals(_self_.data.as<_1e3140128_Map>(), _5626_other);
}
inline jule::Str _1e3134529_Str_11(jule::Trait<_1e313497a_Kind> _self_) {
	return _1e3141080_Str(_self_.safe_ptr<_1e3140c1c_Arr>());
}
inline jule::Bool _1e3134837_Equals_11(jule::Trait<_1e313497a_Kind> _self_, jule::Ptr<_1e3134da9_TypeKind> _5626_other) {
	return _1e314138d_Equals(_self_.data.as<_1e3140c1c_Arr>(), _5626_other);
}
inline jule::Str _1e3134529_Str_12(jule::Trait<_1e313497a_Kind> _self_) {
	return _1e31419dc_Str(_self_.safe_ptr<_1e3141679_Ptr>());
}
inline jule::Bool _1e3134837_Equals_12(jule::Trait<_1e313497a_Kind> _self_, jule::Ptr<_1e3134da9_TypeKind> _5626_other) {
	return _1e3141cea_Equals(_self_.data.as<_1e3141679_Ptr>(), _5626_other);
}
inline jule::Str _1e3134529_Str_13(jule::Trait<_1e313497a_Kind> _self_) {
	return _1e42b0c6a_Str(_self_.safe_ptr<_1e42b09a1_customType>());
}
inline jule::Bool _1e3134837_Equals_13(jule::Trait<_1e313497a_Kind> _self_, jule::Ptr<_1e3134da9_TypeKind> _5626_other) {
	return _1e42b1078_Equals(_self_.data.as<_1e42b09a1_customType>(), _5626_other);
}
inline jule::Ptr<_1e320561c_ImportInfo> _1e314dac6_FindPackage_0(jule::Trait<_1e315091e_Lookup> _self_, jule::Str _934_ident) {
	return _1e31ddced_FindPackage(_self_.safe_ptr<_1e31dd89c_scopeChecker>(), _934_ident);
}
inline jule::Ptr<_1e320561c_ImportInfo> _1e314ddd4_SelectPackage_0(jule::Trait<_1e315091e_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1e320561c_ImportInfo>)> _1336_selector) {
	return _1e31de10b_SelectPackage(_self_.safe_ptr<_1e31dd89c_scopeChecker>(), _1336_selector);
}
inline jule::Ptr<_1e322a147_Var> _1e314e28b_FindVar_0(jule::Trait<_1e315091e_Lookup> _self_, jule::Str _1730_ident, jule::Bool _1742_cpp_linked) {
	return _1e31de4b3_FindVar(_self_.safe_ptr<_1e31dd89c_scopeChecker>(), _1730_ident, _1742_cpp_linked);
}
inline jule::Ptr<_1e31341b6_TypeAlias> _1e314e643_FindTypeAlias_0(jule::Trait<_1e315091e_Lookup> _self_, jule::Str _2136_ident, jule::Bool _2148_cpp_linked) {
	return _1e31de86a_FindTypeAlias(_self_.safe_ptr<_1e31dd89c_scopeChecker>(), _2136_ident, _2148_cpp_linked);
}
inline jule::Ptr<_1e2505d6e_Struct> _1e314e9ea_FindStruct_0(jule::Trait<_1e315091e_Lookup> _self_, jule::Str _2533_ident, jule::Bool _2545_cpp_linked) {
	return _1e31dec22_FindStruct(_self_.safe_ptr<_1e31dd89c_scopeChecker>(), _2533_ident, _2545_cpp_linked);
}
inline jule::Ptr<_1e258b344_Fn> _1e314eda2_FindFn_0(jule::Trait<_1e315091e_Lookup> _self_, jule::Str _2929_ident, jule::Bool _2941_cpp_linked) {
	return _1e31e00c9_FindFn(_self_.safe_ptr<_1e31dd89c_scopeChecker>(), _2929_ident, _2941_cpp_linked);
}
inline jule::Ptr<_1e259d246_Trait> _1e31501b0_FindTrait_0(jule::Trait<_1e315091e_Lookup> _self_, jule::Str _3332_ident) {
	return _1e31e03d7_FindTrait(_self_.safe_ptr<_1e31dd89c_scopeChecker>(), _3332_ident);
}
inline jule::Ptr<_1e25a038b_Enum> _1e31504bd_FindEnum_0(jule::Trait<_1e315091e_Lookup> _self_, jule::Str _3731_ident) {
	return _1e31e06e5_FindEnum(_self_.safe_ptr<_1e31dd89c_scopeChecker>(), _3731_ident);
}
inline jule::Ptr<_1e25a1986_TypeEnum> _1e31507cb_FindTypeEnum_0(jule::Trait<_1e315091e_Lookup> _self_, jule::Str _4135_ident) {
	return _1e31e0a03_FindTypeEnum(_self_.safe_ptr<_1e31dd89c_scopeChecker>(), _4135_ident);
}
inline jule::Ptr<_1e320561c_ImportInfo> _1e314dac6_FindPackage_1(jule::Trait<_1e315091e_Lookup> _self_, jule::Str _934_ident) {
	return _1e3205b39_FindPackage(_self_.safe_ptr<_1e320561c_ImportInfo>(), _934_ident);
}
inline jule::Ptr<_1e320561c_ImportInfo> _1e314ddd4_SelectPackage_1(jule::Trait<_1e315091e_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1e320561c_ImportInfo>)> _1336_selector) {
	return _1e3205e47_SelectPackage(_self_.safe_ptr<_1e320561c_ImportInfo>(), _1336_selector);
}
inline jule::Ptr<_1e322a147_Var> _1e314e28b_FindVar_1(jule::Trait<_1e315091e_Lookup> _self_, jule::Str _1730_ident, jule::Bool _1742_cpp_linked) {
	return _1e32062ee_FindVar(_self_.safe_ptr<_1e320561c_ImportInfo>(), _1730_ident, _1742_cpp_linked);
}
inline jule::Ptr<_1e31341b6_TypeAlias> _1e314e643_FindTypeAlias_1(jule::Trait<_1e315091e_Lookup> _self_, jule::Str _2136_ident, jule::Bool _2148_cpp_linked) {
	return _1e32066a6_FindTypeAlias(_self_.safe_ptr<_1e320561c_ImportInfo>(), _2136_ident, _2148_cpp_linked);
}
inline jule::Ptr<_1e2505d6e_Struct> _1e314e9ea_FindStruct_1(jule::Trait<_1e315091e_Lookup> _self_, jule::Str _2533_ident, jule::Bool _2545_cpp_linked) {
	return _1e3206a5d_FindStruct(_self_.safe_ptr<_1e320561c_ImportInfo>(), _2533_ident, _2545_cpp_linked);
}
inline jule::Ptr<_1e258b344_Fn> _1e314eda2_FindFn_1(jule::Trait<_1e315091e_Lookup> _self_, jule::Str _2929_ident, jule::Bool _2941_cpp_linked) {
	return _1e3206e15_FindFn(_self_.safe_ptr<_1e320561c_ImportInfo>(), _2929_ident, _2941_cpp_linked);
}
inline jule::Ptr<_1e259d246_Trait> _1e31501b0_FindTrait_1(jule::Trait<_1e315091e_Lookup> _self_, jule::Str _3332_ident) {
	return _1e3207223_FindTrait(_self_.safe_ptr<_1e320561c_ImportInfo>(), _3332_ident);
}
inline jule::Ptr<_1e25a038b_Enum> _1e31504bd_FindEnum_1(jule::Trait<_1e315091e_Lookup> _self_, jule::Str _3731_ident) {
	return _1e3207531_FindEnum(_self_.safe_ptr<_1e320561c_ImportInfo>(), _3731_ident);
}
inline jule::Ptr<_1e25a1986_TypeEnum> _1e31507cb_FindTypeEnum_1(jule::Trait<_1e315091e_Lookup> _self_, jule::Str _4135_ident) {
	return _1e320783e_FindTypeEnum(_self_.safe_ptr<_1e320561c_ImportInfo>(), _4135_ident);
}
inline jule::Ptr<_1e320561c_ImportInfo> _1e314dac6_FindPackage_2(jule::Trait<_1e315091e_Lookup> _self_, jule::Str _934_ident) {
	return _1e3208a4e_FindPackage(_self_.safe_ptr<_1e3208576_Package>(), _934_ident);
}
inline jule::Ptr<_1e320561c_ImportInfo> _1e314ddd4_SelectPackage_2(jule::Trait<_1e315091e_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1e320561c_ImportInfo>)> _1336_selector) {
	return _1e3208d5c_SelectPackage(_self_.safe_ptr<_1e3208576_Package>(), _1336_selector);
}
inline jule::Ptr<_1e322a147_Var> _1e314e28b_FindVar_2(jule::Trait<_1e315091e_Lookup> _self_, jule::Str _1730_ident, jule::Bool _1742_cpp_linked) {
	return _1e3209214_FindVar(_self_.safe_ptr<_1e3208576_Package>(), _1730_ident, _1742_cpp_linked);
}
inline jule::Ptr<_1e31341b6_TypeAlias> _1e314e643_FindTypeAlias_2(jule::Trait<_1e315091e_Lookup> _self_, jule::Str _2136_ident, jule::Bool _2148_cpp_linked) {
	return _1e32095bb_FindTypeAlias(_self_.safe_ptr<_1e3208576_Package>(), _2136_ident, _2148_cpp_linked);
}
inline jule::Ptr<_1e2505d6e_Struct> _1e314e9ea_FindStruct_2(jule::Trait<_1e315091e_Lookup> _self_, jule::Str _2533_ident, jule::Bool _2545_cpp_linked) {
	return _1e3209973_FindStruct(_self_.safe_ptr<_1e3208576_Package>(), _2533_ident, _2545_cpp_linked);
}
inline jule::Ptr<_1e258b344_Fn> _1e314eda2_FindFn_2(jule::Trait<_1e315091e_Lookup> _self_, jule::Str _2929_ident, jule::Bool _2941_cpp_linked) {
	return _1e3209d2a_FindFn(_self_.safe_ptr<_1e3208576_Package>(), _2929_ident, _2941_cpp_linked);
}
inline jule::Ptr<_1e259d246_Trait> _1e31501b0_FindTrait_2(jule::Trait<_1e315091e_Lookup> _self_, jule::Str _3332_ident) {
	return _1e320a138_FindTrait(_self_.safe_ptr<_1e3208576_Package>(), _3332_ident);
}
inline jule::Ptr<_1e25a038b_Enum> _1e31504bd_FindEnum_2(jule::Trait<_1e315091e_Lookup> _self_, jule::Str _3731_ident) {
	return _1e320a446_FindEnum(_self_.safe_ptr<_1e3208576_Package>(), _3731_ident);
}
inline jule::Ptr<_1e25a1986_TypeEnum> _1e31507cb_FindTypeEnum_2(jule::Trait<_1e315091e_Lookup> _self_, jule::Str _4135_ident) {
	return _1e320a754_FindTypeEnum(_self_.safe_ptr<_1e3208576_Package>(), _4135_ident);
}
inline jule::Ptr<_1e320561c_ImportInfo> _1e314dac6_FindPackage_3(jule::Trait<_1e315091e_Lookup> _self_, jule::Str _934_ident) {
	return _1e320dc85_FindPackage(_self_.safe_ptr<_1e320d768_Sema>(), _934_ident);
}
inline jule::Ptr<_1e320561c_ImportInfo> _1e314ddd4_SelectPackage_3(jule::Trait<_1e315091e_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1e320561c_ImportInfo>)> _1336_selector) {
	return _1e320e093_SelectPackage(_self_.safe_ptr<_1e320d768_Sema>(), _1336_selector);
}
inline jule::Ptr<_1e322a147_Var> _1e314e28b_FindVar_3(jule::Trait<_1e315091e_Lookup> _self_, jule::Str _1730_ident, jule::Bool _1742_cpp_linked) {
	return _1e320e44a_FindVar(_self_.safe_ptr<_1e320d768_Sema>(), _1730_ident, _1742_cpp_linked);
}
inline jule::Ptr<_1e31341b6_TypeAlias> _1e314e643_FindTypeAlias_3(jule::Trait<_1e315091e_Lookup> _self_, jule::Str _2136_ident, jule::Bool _2148_cpp_linked) {
	return _1e320e802_FindTypeAlias(_self_.safe_ptr<_1e320d768_Sema>(), _2136_ident, _2148_cpp_linked);
}
inline jule::Ptr<_1e2505d6e_Struct> _1e314e9ea_FindStruct_3(jule::Trait<_1e315091e_Lookup> _self_, jule::Str _2533_ident, jule::Bool _2545_cpp_linked) {
	return _1e320eba9_FindStruct(_self_.safe_ptr<_1e320d768_Sema>(), _2533_ident, _2545_cpp_linked);
}
inline jule::Ptr<_1e258b344_Fn> _1e314eda2_FindFn_3(jule::Trait<_1e315091e_Lookup> _self_, jule::Str _2929_ident, jule::Bool _2941_cpp_linked) {
	return _1e3210061_FindFn(_self_.safe_ptr<_1e320d768_Sema>(), _2929_ident, _2941_cpp_linked);
}
inline jule::Ptr<_1e259d246_Trait> _1e31501b0_FindTrait_3(jule::Trait<_1e315091e_Lookup> _self_, jule::Str _3332_ident) {
	return _1e321036e_FindTrait(_self_.safe_ptr<_1e320d768_Sema>(), _3332_ident);
}
inline jule::Ptr<_1e25a038b_Enum> _1e31504bd_FindEnum_3(jule::Trait<_1e315091e_Lookup> _self_, jule::Str _3731_ident) {
	return _1e321067c_FindEnum(_self_.safe_ptr<_1e320d768_Sema>(), _3731_ident);
}
inline jule::Ptr<_1e25a1986_TypeEnum> _1e31507cb_FindTypeEnum_3(jule::Trait<_1e315091e_Lookup> _self_, jule::Str _4135_ident) {
	return _1e321098a_FindTypeEnum(_self_.safe_ptr<_1e320d768_Sema>(), _4135_ident);
}
inline jule::Ptr<_1e320561c_ImportInfo> _1e314dac6_FindPackage_4(jule::Trait<_1e315091e_Lookup> _self_, jule::Str _934_ident) {
	return _1e310484b_FindPackage(_self_.safe_ptr<_1e310432e_SymbolTable>(), _934_ident);
}
inline jule::Ptr<_1e320561c_ImportInfo> _1e314ddd4_SelectPackage_4(jule::Trait<_1e315091e_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1e320561c_ImportInfo>)> _1336_selector) {
	return _1e3104b59_SelectPackage(_self_.safe_ptr<_1e310432e_SymbolTable>(), _1336_selector);
}
inline jule::Ptr<_1e322a147_Var> _1e314e28b_FindVar_4(jule::Trait<_1e315091e_Lookup> _self_, jule::Str _1730_ident, jule::Bool _1742_cpp_linked) {
	return _1e3105011_FindVar(_self_.safe_ptr<_1e310432e_SymbolTable>(), _1730_ident, _1742_cpp_linked);
}
inline jule::Ptr<_1e31341b6_TypeAlias> _1e314e643_FindTypeAlias_4(jule::Trait<_1e315091e_Lookup> _self_, jule::Str _2136_ident, jule::Bool _2148_cpp_linked) {
	return _1e31053b8_FindTypeAlias(_self_.safe_ptr<_1e310432e_SymbolTable>(), _2136_ident, _2148_cpp_linked);
}
inline jule::Ptr<_1e2505d6e_Struct> _1e314e9ea_FindStruct_4(jule::Trait<_1e315091e_Lookup> _self_, jule::Str _2533_ident, jule::Bool _2545_cpp_linked) {
	return _1e3105770_FindStruct(_self_.safe_ptr<_1e310432e_SymbolTable>(), _2533_ident, _2545_cpp_linked);
}
inline jule::Ptr<_1e258b344_Fn> _1e314eda2_FindFn_4(jule::Trait<_1e315091e_Lookup> _self_, jule::Str _2929_ident, jule::Bool _2941_cpp_linked) {
	return _1e3105b27_FindFn(_self_.safe_ptr<_1e310432e_SymbolTable>(), _2929_ident, _2941_cpp_linked);
}
inline jule::Ptr<_1e259d246_Trait> _1e31501b0_FindTrait_4(jule::Trait<_1e315091e_Lookup> _self_, jule::Str _3332_ident) {
	return _1e3105e35_FindTrait(_self_.safe_ptr<_1e310432e_SymbolTable>(), _3332_ident);
}
inline jule::Ptr<_1e25a038b_Enum> _1e31504bd_FindEnum_4(jule::Trait<_1e315091e_Lookup> _self_, jule::Str _3731_ident) {
	return _1e3106243_FindEnum(_self_.safe_ptr<_1e310432e_SymbolTable>(), _3731_ident);
}
inline jule::Ptr<_1e25a1986_TypeEnum> _1e31507cb_FindTypeEnum_4(jule::Trait<_1e315091e_Lookup> _self_, jule::Str _4135_ident) {
	return _1e3106551_FindTypeEnum(_self_.safe_ptr<_1e310432e_SymbolTable>(), _4135_ident);
}
inline jule::Str _1e4060212_name_0(jule::Trait<_1e4060344_CommonFlag> _self_) {
	return _1e697035b_name(_self_.safe_ptr<_1e6b747d5_Flag>());
}
inline jule::I32 _1e4015382_short_0(jule::Trait<_1e4060344_CommonFlag> _self_) {
	return _1e6b74d02_short(_self_.safe_ptr<_1e6b747d5_Flag>());
}
inline jule::Str _1e40154b4_what_0(jule::Trait<_1e4060344_CommonFlag> _self_) {
	return _1e697048d_what(_self_.safe_ptr<_1e6b747d5_Flag>());
}
inline void _1e42e77eb_reset_0(jule::Trait<_1e4060344_CommonFlag> _self_) {
	_1e6b74bc0_reset(_self_.safe_ptr<_1e6b747d5_Flag>());
}
inline jule::Str _1e4060212_name_1(jule::Trait<_1e4060344_CommonFlag> _self_) {
	return _1e6b77ee2_name(_self_.safe_ptr<_1e6b78498_Flag>());
}
inline jule::I32 _1e4015382_short_1(jule::Trait<_1e4060344_CommonFlag> _self_) {
	return _1e6b789c6_short(_self_.safe_ptr<_1e6b78498_Flag>());
}
inline jule::Str _1e40154b4_what_1(jule::Trait<_1e4060344_CommonFlag> _self_) {
	return _1e6b78762_what(_self_.safe_ptr<_1e6b78498_Flag>());
}
inline void _1e42e77eb_reset_1(jule::Trait<_1e4060344_CommonFlag> _self_) {
	_1e6b78894_reset(_self_.safe_ptr<_1e6b78498_Flag>());
}
inline jule::Str _1e4060212_name_2(jule::Trait<_1e4060344_CommonFlag> _self_) {
	return _1e6b7b9c9_name(_self_.safe_ptr<_1e6b7be80_Flag>());
}
inline jule::I32 _1e4015382_short_2(jule::Trait<_1e4060344_CommonFlag> _self_) {
	return _1e6b7c4ad_short(_self_.safe_ptr<_1e6b7be80_Flag>());
}
inline jule::Str _1e40154b4_what_2(jule::Trait<_1e4060344_CommonFlag> _self_) {
	return _1e6b7c249_what(_self_.safe_ptr<_1e6b7be80_Flag>());
}
inline void _1e42e77eb_reset_2(jule::Trait<_1e4060344_CommonFlag> _self_) {
	_1e6b7c37b_reset(_self_.safe_ptr<_1e6b7be80_Flag>());
}
inline jule::Str _1e4060212_name_3(jule::Trait<_1e4060344_CommonFlag> _self_) {
	return _1e6b80505_name(_self_.safe_ptr<_1e6b809ab_Flag>());
}
inline jule::I32 _1e4015382_short_3(jule::Trait<_1e4060344_CommonFlag> _self_) {
	return _1e6b80ed9_short(_self_.safe_ptr<_1e6b809ab_Flag>());
}
inline jule::Str _1e40154b4_what_3(jule::Trait<_1e4060344_CommonFlag> _self_) {
	return _1e6b80c75_what(_self_.safe_ptr<_1e6b809ab_Flag>());
}
inline void _1e42e77eb_reset_3(jule::Trait<_1e4060344_CommonFlag> _self_) {
	_1e6b80da7_reset(_self_.safe_ptr<_1e6b809ab_Flag>());
}
inline jule::Str _1e4060212_name_4(jule::Trait<_1e4060344_CommonFlag> _self_) {
	return _1e6b83edc_name(_self_.safe_ptr<_1e6b84493_Flag>());
}
inline jule::I32 _1e4015382_short_4(jule::Trait<_1e4060344_CommonFlag> _self_) {
	return _1e6b849c1_short(_self_.safe_ptr<_1e6b84493_Flag>());
}
inline jule::Str _1e40154b4_what_4(jule::Trait<_1e4060344_CommonFlag> _self_) {
	return _1e6b8475c_what(_self_.safe_ptr<_1e6b84493_Flag>());
}
inline void _1e42e77eb_reset_4(jule::Trait<_1e4060344_CommonFlag> _self_) {
	_1e6b8488e_reset(_self_.safe_ptr<_1e6b84493_Flag>());
}


static _1e3202d89_ImporterMptrData _1e3202d89_Importer_mptr_data[] = {
	{
		._1e3201cab_SetModPath=_1e3201cab_SetModPath_0,
		._1e3201eed_GetModPath=_1e3201eed_GetModPath_0,
		._1e320230b_ModById=_1e320230b_ModById_0,
		._1e3202619_GetImport=_1e3202619_GetImport_0,
		._1e32029c1_ImportPackage=_1e32029c1_ImportPackage_0,
		._1e3202c46_Imported=_1e3202c46_Imported_0,
	},
};
static _1e313497a_KindMptrData _1e313497a_Kind_mptr_data[] = {
	{
		._1e3134529_Str=_1e3134529_Str_0,
		._1e3134837_Equals=_1e3134837_Equals_0,
	},
	{
		._1e3134529_Str=_1e3134529_Str_1,
		._1e3134837_Equals=_1e3134837_Equals_1,
	},
	{
		._1e3134529_Str=_1e3134529_Str_2,
		._1e3134837_Equals=_1e3134837_Equals_2,
	},
	{
		._1e3134529_Str=_1e3134529_Str_3,
		._1e3134837_Equals=_1e3134837_Equals_3,
	},
	{
		._1e3134529_Str=_1e3134529_Str_4,
		._1e3134837_Equals=_1e3134837_Equals_4,
	},
	{
		._1e3134529_Str=_1e3134529_Str_5,
		._1e3134837_Equals=_1e3134837_Equals_5,
	},
	{
		._1e3134529_Str=_1e3134529_Str_6,
		._1e3134837_Equals=_1e3134837_Equals_6,
	},
	{
		._1e3134529_Str=_1e3134529_Str_7,
		._1e3134837_Equals=_1e3134837_Equals_7,
	},
	{
		._1e3134529_Str=_1e3134529_Str_8,
		._1e3134837_Equals=_1e3134837_Equals_8,
	},
	{
		._1e3134529_Str=_1e3134529_Str_9,
		._1e3134837_Equals=_1e3134837_Equals_9,
	},
	{
		._1e3134529_Str=_1e3134529_Str_10,
		._1e3134837_Equals=_1e3134837_Equals_10,
	},
	{
		._1e3134529_Str=_1e3134529_Str_11,
		._1e3134837_Equals=_1e3134837_Equals_11,
	},
	{
		._1e3134529_Str=_1e3134529_Str_12,
		._1e3134837_Equals=_1e3134837_Equals_12,
	},
	{
		._1e3134529_Str=_1e3134529_Str_13,
		._1e3134837_Equals=_1e3134837_Equals_13,
	},
};
static _1e315091e_LookupMptrData _1e315091e_Lookup_mptr_data[] = {
	{
		._1e314dac6_FindPackage=_1e314dac6_FindPackage_0,
		._1e314ddd4_SelectPackage=_1e314ddd4_SelectPackage_0,
		._1e314e28b_FindVar=_1e314e28b_FindVar_0,
		._1e314e643_FindTypeAlias=_1e314e643_FindTypeAlias_0,
		._1e314e9ea_FindStruct=_1e314e9ea_FindStruct_0,
		._1e314eda2_FindFn=_1e314eda2_FindFn_0,
		._1e31501b0_FindTrait=_1e31501b0_FindTrait_0,
		._1e31504bd_FindEnum=_1e31504bd_FindEnum_0,
		._1e31507cb_FindTypeEnum=_1e31507cb_FindTypeEnum_0,
	},
	{
		._1e314dac6_FindPackage=_1e314dac6_FindPackage_1,
		._1e314ddd4_SelectPackage=_1e314ddd4_SelectPackage_1,
		._1e314e28b_FindVar=_1e314e28b_FindVar_1,
		._1e314e643_FindTypeAlias=_1e314e643_FindTypeAlias_1,
		._1e314e9ea_FindStruct=_1e314e9ea_FindStruct_1,
		._1e314eda2_FindFn=_1e314eda2_FindFn_1,
		._1e31501b0_FindTrait=_1e31501b0_FindTrait_1,
		._1e31504bd_FindEnum=_1e31504bd_FindEnum_1,
		._1e31507cb_FindTypeEnum=_1e31507cb_FindTypeEnum_1,
	},
	{
		._1e314dac6_FindPackage=_1e314dac6_FindPackage_2,
		._1e314ddd4_SelectPackage=_1e314ddd4_SelectPackage_2,
		._1e314e28b_FindVar=_1e314e28b_FindVar_2,
		._1e314e643_FindTypeAlias=_1e314e643_FindTypeAlias_2,
		._1e314e9ea_FindStruct=_1e314e9ea_FindStruct_2,
		._1e314eda2_FindFn=_1e314eda2_FindFn_2,
		._1e31501b0_FindTrait=_1e31501b0_FindTrait_2,
		._1e31504bd_FindEnum=_1e31504bd_FindEnum_2,
		._1e31507cb_FindTypeEnum=_1e31507cb_FindTypeEnum_2,
	},
	{
		._1e314dac6_FindPackage=_1e314dac6_FindPackage_3,
		._1e314ddd4_SelectPackage=_1e314ddd4_SelectPackage_3,
		._1e314e28b_FindVar=_1e314e28b_FindVar_3,
		._1e314e643_FindTypeAlias=_1e314e643_FindTypeAlias_3,
		._1e314e9ea_FindStruct=_1e314e9ea_FindStruct_3,
		._1e314eda2_FindFn=_1e314eda2_FindFn_3,
		._1e31501b0_FindTrait=_1e31501b0_FindTrait_3,
		._1e31504bd_FindEnum=_1e31504bd_FindEnum_3,
		._1e31507cb_FindTypeEnum=_1e31507cb_FindTypeEnum_3,
	},
	{
		._1e314dac6_FindPackage=_1e314dac6_FindPackage_4,
		._1e314ddd4_SelectPackage=_1e314ddd4_SelectPackage_4,
		._1e314e28b_FindVar=_1e314e28b_FindVar_4,
		._1e314e643_FindTypeAlias=_1e314e643_FindTypeAlias_4,
		._1e314e9ea_FindStruct=_1e314e9ea_FindStruct_4,
		._1e314eda2_FindFn=_1e314eda2_FindFn_4,
		._1e31501b0_FindTrait=_1e31501b0_FindTrait_4,
		._1e31504bd_FindEnum=_1e31504bd_FindEnum_4,
		._1e31507cb_FindTypeEnum=_1e31507cb_FindTypeEnum_4,
	},
};
static _1e4060344_CommonFlagMptrData _1e4060344_CommonFlag_mptr_data[] = {
	{
		._1e4060212_name=_1e4060212_name_0,
		._1e4015382_short=_1e4015382_short_0,
		._1e40154b4_what=_1e40154b4_what_0,
		._1e42e77eb_reset=_1e42e77eb_reset_0,
	},
	{
		._1e4060212_name=_1e4060212_name_1,
		._1e4015382_short=_1e4015382_short_1,
		._1e40154b4_what=_1e40154b4_what_1,
		._1e42e77eb_reset=_1e42e77eb_reset_1,
	},
	{
		._1e4060212_name=_1e4060212_name_2,
		._1e4015382_short=_1e4015382_short_2,
		._1e40154b4_what=_1e40154b4_what_2,
		._1e42e77eb_reset=_1e42e77eb_reset_2,
	},
	{
		._1e4060212_name=_1e4060212_name_3,
		._1e4015382_short=_1e4015382_short_3,
		._1e40154b4_what=_1e40154b4_what_3,
		._1e42e77eb_reset=_1e42e77eb_reset_3,
	},
	{
		._1e4060212_name=_1e4060212_name_4,
		._1e4015382_short=_1e4015382_short_4,
		._1e40154b4_what=_1e40154b4_what_4,
		._1e42e77eb_reset=_1e42e77eb_reset_4,
	},
};


jule::Str _1e42c1ad3_OutDir = jule::Str("dist", 4);
jule::Str _1e42c35c9_OutName = jule::Str("ir.cpp", 6);
jule::Str _1e42c4234_Out = jule::Str();
jule::Str _22eaa1c18_Compiler = jule::Str();
jule::Str _22eb5ede7_CompilerPath = jule::Str();
jule::Str _22eb6015b_CppStd = jule::Str("cpp17", 5);
jule::Bool _22eb603c0_Shadowing = false;
jule::Bool _22eb6069a_Transpilation = false;
jule::Bool _22eb609a8_Test = false;
jule::Bool _22eb60cb6_RC = true;
jule::Bool _22eb611d4_Safety = true;
jule::Bool _22eb614e2_Production = false;
jule::Ptr<_20a1aa984_RangeTable> _20a136b85__L = jule::new_ptr<_20a1aa984_RangeTable>(_20a1aa984_RangeTable{._field_R16=jule::Slice<_20a1aa08d_Range16>::make({_20a1aa08d_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_20a1aa08d_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_20a1aa08d_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_20a1aa08d_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_20a1aa08d_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_20a1aa08d_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_20a1aa08d_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_20a1aa08d_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_20a1aa08d_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_20a1aa08d_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_20a1aa08d_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_20a1aa08d_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_20a1aa08d_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_20a1aa08d_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_20a1aa08d_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_20a1aa08d_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_20a1aa08d_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_20a1aa08d_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_20a1aa08d_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_20a1aa08d_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_20a1aa08d_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_20a1aa08d_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_20a1aa08d_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_20a1aa08d_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_20a1aa08d_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_20a1aa08d_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_20a1aa08d_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_20a1aa08d_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_20a1aa08d_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_20a1aa08d_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_20a1aa08d_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_20a1aa08d_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_20a1aa08d_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_20a1aa08d_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_20a1aa08d_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_20a1aa08d_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_20a1aa08d_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_20a1aa08d_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_20a1aa08d_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_20a1aa08d_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_20a1aa08d_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_20a1aa08d_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_20a1aa08d_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_20a1aa08d_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_20a1aa08d_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_20a1aa08d_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_20a1aa08d_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_20a1aa08d_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_20a1aa08d_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_20a1aa08d_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_20a1aa08d_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_20a1aa08d_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_20a1aa08d_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_20a1aa08d_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_20a1aa08d_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_20a1aa08d_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_20a1aa08d_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_20a1aa08d_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_20a1aa08d_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_20a1aa08d_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_20a1aa08d_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_20a1aa08d_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_20a1aa08d_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_20a1aa08d_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_20a1aa08d_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_20a1aa08d_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_20a1aa08d_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_20a1aa08d_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_20a1aa08d_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_20a1aa08d_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_20a1aa08d_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_20a1aa08d_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_20a1aa08d_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_20a1aa08d_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_20a1aa08d_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_20a1aa08d_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_20a1aa08d_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_20a1aa08d_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_20a1aa08d_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_20a1aa511_Range32>::make({_20a1aa511_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_20a1aa511_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_20a1aa511_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_20a1aa511_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_20a1aa511_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_20a1aa511_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_20a1aa511_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_20a1aa511_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_20a1aa511_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_20a1aa511_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_20a1aa511_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_20a1aa511_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_20a1aa511_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_20a1aa511_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_20a1aa511_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_20a1aa511_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_20a1aa511_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_20a1aa511_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_20a1aa511_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_20a1aa511_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_20a1aa511_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_20a1aa511_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_20a1aa511_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_20a1aa511_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_20a1aa511_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_20a1aa511_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_20a1aa511_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_20a1aa511_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_20a1aa511_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_20a1aa511_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_20a1aa511_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_20a1aa511_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_20a1aa511_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_20a1aa511_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_20a1aa511_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_20a1aa511_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_20a1aa511_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_20a1aa511_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_20a1aa511_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_20a1aa511_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_20a1aa511_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_20a1aa511_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_20a1aa511_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_20a1aa511_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Array<jule::Str,4> _20a2cb3ce_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
jule::Array<jule::Str,3> _20a34679b_CppExts = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
jule::Array<jule::Str,1> _20a347b54_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
jule::Str _20a3768ec_PathStdlib = jule::Str();
jule::Str _20a377557_PathExec = jule::Str();
jule::Str _20a378459_PathWd = jule::Str();
jule::Str _20a391d46_PathApi = jule::Str();
jule::Array<jule::I32,5> _1d4219b18_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::Str,6> _1d4219e15_UnaryOps = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
jule::Array<jule::Str,12> _1d421a29a_BinOps = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
jule::Array<jule::Str,2> _1d42ad89e_PostfixOps = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
jule::Array<jule::Str,11> _1d42adbe0_AssignOps = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
jule::Array<_1d42bb7be_kindPair,47> _1d42bbc53_keywords = jule::Array<_1d42bb7be_kindPair,47>({_1d42bb7be_kindPair{._field_kind=jule::Str("i8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("i16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("i32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("i64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("u8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("u16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("u32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("u64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("f32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("f64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("uint", 4), ._field_id=static_cast<jule::U64>(1LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("int", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("uintptr", 7), ._field_id=static_cast<jule::U64>(1LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("bool", 4), ._field_id=static_cast<jule::U64>(1LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("str", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("any", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("true", 4), ._field_id=static_cast<jule::U64>(6LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("false", 5), ._field_id=static_cast<jule::U64>(6LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("nil", 3), ._field_id=static_cast<jule::U64>(6LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("const", 5), ._field_id=static_cast<jule::U64>(9LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("ret", 3), ._field_id=static_cast<jule::U64>(4LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("type", 4), ._field_id=static_cast<jule::U64>(10LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("for", 3), ._field_id=static_cast<jule::U64>(12LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("break", 5), ._field_id=static_cast<jule::U64>(13LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("continue", 8), ._field_id=static_cast<jule::U64>(14LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("in", 2), ._field_id=static_cast<jule::U64>(15LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("if", 2), ._field_id=static_cast<jule::U64>(16LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("else", 4), ._field_id=static_cast<jule::U64>(17LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("use", 3), ._field_id=static_cast<jule::U64>(19LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("pub", 3), ._field_id=static_cast<jule::U64>(21LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("goto", 4), ._field_id=static_cast<jule::U64>(22LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("enum", 4), ._field_id=static_cast<jule::U64>(24LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("struct", 6), ._field_id=static_cast<jule::U64>(25LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("co", 2), ._field_id=static_cast<jule::U64>(26LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("match", 5), ._field_id=static_cast<jule::U64>(27LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("self", 4), ._field_id=static_cast<jule::U64>(28LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("trait", 5), ._field_id=static_cast<jule::U64>(29LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("impl", 4), ._field_id=static_cast<jule::U64>(30LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("cpp", 3), ._field_id=static_cast<jule::U64>(31LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("fall", 4), ._field_id=static_cast<jule::U64>(32LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("fn", 2), ._field_id=static_cast<jule::U64>(33LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("let", 3), ._field_id=static_cast<jule::U64>(34LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("unsafe", 6), ._field_id=static_cast<jule::U64>(35LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("mut", 3), ._field_id=static_cast<jule::U64>(36LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("defer", 5), ._field_id=static_cast<jule::U64>(37LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("static", 6), ._field_id=static_cast<jule::U64>(38LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("error", 5), ._field_id=static_cast<jule::U64>(40LLU)}});
jule::Array<_1d42bb7be_kindPair,39> _1d42bc0d8_basicOps = jule::Array<_1d42bb7be_kindPair,39>({_1d42bb7be_kindPair{._field_kind=jule::Str("::", 2), ._field_id=static_cast<jule::U64>(23LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str(":", 1), ._field_id=static_cast<jule::U64>(11LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str(";", 1), ._field_id=static_cast<jule::U64>(5LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str(",", 1), ._field_id=static_cast<jule::U64>(8LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("...", 3), ._field_id=static_cast<jule::U64>(7LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str(".", 1), ._field_id=static_cast<jule::U64>(20LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("+=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("-=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("*=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("/=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("%=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("<<=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str(">>=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("^=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("&=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("|=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("==", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("!=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str(">=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("<=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("&&", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("||", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("<<", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str(">>", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("++", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("--", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("+", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("-", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("*", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("/", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("%", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("&", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("|", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("^", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("!", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("<", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str(">", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("=", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1d42bb7be_kindPair{._field_kind=jule::Str("#", 1), ._field_id=static_cast<jule::U64>(39LLU)}});
jule::Array<jule::U8,32> _1e3180b5d__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _1e31812ac__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_1e2b90cab_floatInfo _1e281ea8e_f32info = _1e2b90cab_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_1e2b90cab_floatInfo _1e2ae14d1_f64info = _1e2b90cab_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _1e2b8c758_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _1e2bd012a_powtab = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _1e2be6e00_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _1e2c5b86b_f32pow10 = jule::Slice<jule::F32>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL});
jule::Array<jule::U64,20> _1e2cd7562_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_1e31c2144_leftCheat> _1e2d79ec8_leftCheats = jule::Slice<_1e31c2144_leftCheat>::make({_1e31c2144_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_1e31c2144_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("5", 1)},_1e31c2144_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("25", 2)},_1e31c2144_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("125", 3)},_1e31c2144_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("625", 3)},_1e31c2144_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("3125", 4)},_1e31c2144_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("15625", 5)},_1e31c2144_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("78125", 5)},_1e31c2144_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("390625", 6)},_1e31c2144_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("1953125", 7)},_1e31c2144_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("9765625", 7)},_1e31c2144_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("48828125", 8)},_1e31c2144_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("244140625", 9)},_1e31c2144_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("1220703125", 10)},_1e31c2144_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("6103515625", 10)},_1e31c2144_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("30517578125", 11)},_1e31c2144_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("152587890625", 12)},_1e31c2144_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("762939453125", 12)},_1e31c2144_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("3814697265625", 13)},_1e31c2144_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("19073486328125", 14)},_1e31c2144_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("95367431640625", 14)},_1e31c2144_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("476837158203125", 15)},_1e31c2144_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("2384185791015625", 16)},_1e31c2144_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("11920928955078125", 17)},_1e31c2144_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("59604644775390625", 17)},_1e31c2144_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("298023223876953125", 18)},_1e31c2144_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("1490116119384765625", 19)},_1e31c2144_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("7450580596923828125", 19)},_1e31c2144_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("37252902984619140625", 20)},_1e31c2144_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("186264514923095703125", 21)},_1e31c2144_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("931322574615478515625", 21)},_1e31c2144_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("4656612873077392578125", 22)},_1e31c2144_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("23283064365386962890625", 23)},_1e31c2144_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("116415321826934814453125", 24)},_1e31c2144_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("582076609134674072265625", 24)},_1e31c2144_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("2910383045673370361328125", 25)},_1e31c2144_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("14551915228366851806640625", 26)},_1e31c2144_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("72759576141834259033203125", 26)},_1e31c2144_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("363797880709171295166015625", 27)},_1e31c2144_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("1818989403545856475830078125", 28)},_1e31c2144_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("9094947017729282379150390625", 28)},_1e31c2144_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("45474735088646411895751953125", 29)},_1e31c2144_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("227373675443232059478759765625", 30)},_1e31c2144_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("1136868377216160297393798828125", 31)},_1e31c2144_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("5684341886080801486968994140625", 31)},_1e31c2144_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("28421709430404007434844970703125", 32)},_1e31c2144_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("142108547152020037174224853515625", 33)},_1e31c2144_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("710542735760100185871124267578125", 33)},_1e31c2144_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("3552713678800500929355621337890625", 34)},_1e31c2144_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("17763568394002504646778106689453125", 35)},_1e31c2144_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("88817841970012523233890533447265625", 35)},_1e31c2144_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("444089209850062616169452667236328125", 36)},_1e31c2144_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("2220446049250313080847263336181640625", 37)},_1e31c2144_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("11102230246251565404236316680908203125", 38)},_1e31c2144_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("55511151231257827021181583404541015625", 38)},_1e31c2144_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("277555756156289135105907917022705078125", 39)},_1e31c2144_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("1387778780781445675529539585113525390625", 40)},_1e31c2144_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("6938893903907228377647697925567626953125", 40)},_1e31c2144_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("34694469519536141888238489627838134765625", 41)},_1e31c2144_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("173472347597680709441192448139190673828125", 42)},_1e31c2144_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str("867361737988403547205962240695953369140625", 42)}});
jule::I64 _1e26d018b_BitSize = 0LL;
jule::Str _1e26d06b9_SysInt = jule::Str();
jule::Str _1e2724c91_SysUint = jule::Str();
jule::Slice<jule::Str> _1e31ce3b5_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str("signed", 6),jule::Str("unsigned", 8),jule::Str("float", 5),jule::Str("numeric", 7),jule::Str("mutable", 7),jule::Str("immutable", 9),jule::Str("ordered", 7),jule::Str("comparable", 10)});
jule::Bool _1d42c9c1c_Copy = false;
jule::Bool _1d42d241c_Deadcode = false;
jule::Bool _1d42d53dc_Append = false;
jule::Bool _1d42d580a_Math = false;
jule::Bool _1d42d618a_Access = false;
jule::Bool _1d42d78c8_Inline = false;
jule::Bool _1e1023629_Ptr = false;
jule::Bool _1e102377d_Cond = false;
jule::Bool _1e3b26aa9_exprEnabled = false;
jule::Bool _1e3b27c0e_scopeEnabled = false;
jule::Array<jule::U64,12> _1e42a3664_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Uintptr _21639c9e4_STDOUT = _2163ae93a_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551605LLU));
jule::Uintptr _216397417_STDERR = _2163ae93a_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551604LLU));
jule::Array<_216493d0a_acceptRange,16> _21649416d_acceptRanges = jule::Array<_216493d0a_acceptRange,16>({_216493d0a_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_216493d0a_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_216493d0a_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_216493d0a_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_216493d0a_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Array<jule::Str,2>,5> _20a336208_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
jule::Ptr<_20a1aa984_RangeTable> _20a13e8a2_Letter = _20a136b85__L;
jule::Str _20a39262c_Os = jule::Str("windows", 7);
jule::Str _20a375d08_Arch = jule::Str("amd64", 5);
jule::Uintptr _216398ea7_STDIN = _2163ae93a_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551606LLU));
jule::Array<jule::U8,256> _216493788_first = jule::Array<jule::U8,256>({240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,19LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,35LLU,3LLU,3LLU,52LLU,4LLU,4LLU,4LLU,68LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU});
jule::Array<jule::U8,256> _20a1a3c79__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});





std::ostream &operator<<(std::ostream &_Stream, _216493d0a_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20a1aa08d_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20a1aa511_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20a1aa984_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _20a1b09de_index(_20a1b0802_lazyBuff* _self_, jule::I64 _5424_i) {
	if (((*_self_)._field_buff != nullptr)) {
		return (*_self_)._field_buff[_5424_i];
	};
	return (*_self_)._field_path[_5424_i];
}



inline void _20a1b0b21_append(_20a1b0802_lazyBuff* _self_, jule::U8 _6125_c) {
	if (((*_self_)._field_buff == nullptr)) {
		if ((((*_self_)._field_w < (*_self_)._field_path.len()) && ((*_self_)._field_path[(*_self_)._field_w] == _6125_c))) {
			((*_self_)._field_w)++;
			return;;
		};
		(*_self_)._field_buff=jule::Slice<jule::U8>::alloc((*_self_)._field_path.len());
		jule::copy(((*_self_)._field_buff), (static_cast<jule::Slice<jule::U8>>((*_self_)._field_path.slice(0LL,(*_self_)._field_w))));
	};
	(*_self_)._field_buff[(*_self_)._field_w]=_6125_c;
	((*_self_)._field_w)++;
}



inline jule::Str _20a1b0c53_string(_20a1b0802_lazyBuff* _self_) {
	if (((*_self_)._field_buff == nullptr)) {
		return (*_self_)._field_volAndPath.slice(0LL,((*_self_)._field_volLen + (*_self_)._field_w));
	};
	return ((*_self_)._field_volAndPath.slice(0LL,(*_self_)._field_volLen) + static_cast<jule::Str>((*_self_)._field_buff.slice(0LL,(*_self_)._field_w)));
}







std::ostream &operator<<(std::ostream &_Stream, _20a1b0802_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2162e43ca_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_2162e43ca_DirEntry>>> static__20a1b1968_Read(jule::Str _1524_path) {
	jule::Slice<jule::Ptr<_2162e43ca_DirEntry>> _1538_dirents = jule::Slice<jule::Ptr<_2162e43ca_DirEntry>>();
	jule::Slice<jule::U16> _1613_utf16Path = _216397e2e_Utf16FromStr(_1524_path);;
	_WDIR* _1717_dir = _2163b15da_Wopendir((&(_1613_utf16Path[0LL])));;
	if ((_1717_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_2162e43ca_DirEntry>>>(_2162c84ad_getLastFsError());
	};
	for (;;) {
		{
			struct _wdirent* _2217_dirent = _2163b1882_Wreaddir(_1717_dir);;
			if ((_2217_dirent == nullptr)) {
				goto _iter_end_1e4aab2e0;
			};
			jule::Str _2617_name = _216398b99_U16PtrToStr(((jule::U16*)(_2217_dirent->d_name)));;
			jule::Ptr<_2163c2d9e_Status> _2721_stat = ({
				auto except = static__20a1b1eda_Of(_20a1b122b_Join(jule::Slice<jule::Str>::make({_1524_path,_2617_name})));
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Slice<jule::Ptr<_2162e43ca_DirEntry>>>(except.error);
				} jule::Ptr<_2163c2d9e_Status>();});
			});;
			_1538_dirents = jule::alloc_for_append(_1538_dirents,1);_1538_dirents.__push(jule::new_ptr<_2162e43ca_DirEntry>(_2162e43ca_DirEntry{._field_Name=_2617_name, ._field_Stat=_2721_stat}));;
		}
	_iter_next_1e4aab2e0:;
	}
	_iter_end_1e4aab2e0:;;
	_2163b1b29_Wclosedir(_1717_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_2162e43ca_DirEntry>>>(jule::Any(), _1538_dirents);
}



inline jule::VoidExceptional static__20a1b1a9a_Create(jule::Str _4026_path) {
	jule::Slice<jule::U16> _4513_utf16Path = _216397e2e_Utf16FromStr(_4026_path);;
	if ((!(_2163b109b_CreateDirectory((&(_4513_utf16Path[0LL])))))) {
		return jule::VoidExceptional(_2162c84ad_getLastFsError());
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional static__20a1b1bcc_Remove(jule::Str _5426_path) {
	jule::Slice<jule::U16> _5513_utf16Path = _216397e2e_Utf16FromStr(_5426_path);;
	if ((!(_2163b1343_RemoveDirectory((&(_5513_utf16Path[0LL])))))) {
		return jule::VoidExceptional(_2162c84ad_getLastFsError());
	};
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _2162e6113_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2163c2bb2_File> static__2162caaa9_New(jule::Uintptr _4523_handle) {
	return jule::new_ptr<_2163c2bb2_File>(_2163c2bb2_File{._field_handle=_4523_handle});
}



inline jule::Exceptional<jule::Ptr<_2163c2bb2_File>> static__2162cb35c_Create(jule::Str _5526_path) {
	return jule::Exceptional<jule::Ptr<_2163c2bb2_File>>(jule::Any(),({
		auto except = static__21642b15a_Open(_5526_path,((static_cast<jule::I64>(770LL) | 770LL) | 770LL),438LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Ptr<_2163c2bb2_File>>(except.error);
		} jule::Ptr<_2163c2bb2_File>();});
	}));
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__2162cbdda_Read(jule::Str _6724_path) {
	jule::Ptr<_2163c2d9e_Status> _6813_s = ({
		auto except = static__20a1b1eda_Of(_6724_path);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_2163c2d9e_Status>();});
	});;
	if ((!(_2162d2cc0_IsReg(_6813_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(static_cast<jule::I64>(14LL));
	};
	if ((_6813_s.get()._field_Size == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),jule::Slice<jule::U8>::alloc(0LL));
	};
	jule::Ptr<_2163c2bb2_File> _7817_f = ({
		auto except = static__21642b15a_Open(_6724_path,static_cast<jule::I64>(0LL),0LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_2163c2bb2_File>();});
	});;
	__JULE_DEFER({
		({
			auto except = _2162ce97b_Close(_7817_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:79:17"));
		});
	});;
	jule::Slice<jule::U8> _8117_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_6813_s.get()._field_Size));;
	jule::I64 _8213_n = ({
		auto except = _21645ed81_Read(_7817_f.ptr(), _8117_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::I64();});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),_8117_buff.slice(0LL,_8213_n));
}



inline jule::VoidExceptional static__2162cc8be_Write(jule::Str _9125_path, jule::Slice<jule::U8> _9136_data, jule::I64 _9150_perm) {
	jule::Ptr<_2163c2bb2_File> _9217_f = ({
		auto except = static__21642b15a_Open(_9125_path,((static_cast<jule::I64>(769LL) | 769LL) | 769LL),_9150_perm);
		(except.ok()) ? (except.result) : ({{
			return jule::VoidExceptional(except.error);
		} jule::Ptr<_2163c2bb2_File>();});
	});;
	({
		auto except = _216456b69_Write(_9217_f.ptr(), _9136_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _2162ce97b_Close(_9217_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _2162cde31_Seek(_2163c2bb2_File* _self_, jule::I64 _10527_offset, jule::I64 _10540_origin) {
	jule::I64 _10613_pos = _2163b5875_Seek(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),_10527_offset,static_cast<jule::I64>(_10540_origin));;
	if ((_10613_pos == -1LL)) {
		return jule::Exceptional<jule::I64>(_2162c84ad_getLastFsError());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_10613_pos);
}



inline jule::VoidExceptional _2162ce97b_Close(_2163c2bb2_File* _self_) {
	if ((_2163b60d4_Close(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle))) == -1LL)) {
		return jule::VoidExceptional(_2162c84ad_getLastFsError());
	};
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::Ptr<_2163c2bb2_File>> static__21642b15a_Open(jule::Str _2124_path, jule::I64 _2135_flag, jule::I64 _2148_mode) {
	jule::Slice<jule::U16> _2213_utf16Path = _216397e2e_Utf16FromStr(_2124_path);;
	jule::I64 _2313_handle = _2163b0276_Wopen((&(_2213_utf16Path[0LL])),static_cast<jule::I64>(_2135_flag),_2148_mode);;
	if ((_2313_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_2163c2bb2_File>>(_2162c84ad_getLastFsError());
	};
	return jule::Exceptional<jule::Ptr<_2163c2bb2_File>>(jule::Any(),static__2162caaa9_New(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_2313_handle))));
}



inline jule::VoidExceptional static__21642c403_Remove(jule::Str _3426_path) {
	jule::Slice<jule::U16> _3513_utf16Path = _216397e2e_Utf16FromStr(_3426_path);;
	if ((!(_2163b0d04_DeleteFile((&(_3513_utf16Path[0LL])))))) {
		return jule::VoidExceptional(_2162c84ad_getLastFsError());
	};
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _216456b69_Write(_2163c2bb2_File* _self_, jule::Slice<jule::U8> _4928_buff) {
	jule::I64 _4945_n = jule::I64();
	if ((_4928_buff.len() == 0LL)) {
		_4945_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_4945_n);
	};
	if (_21646763b_isConsoleHandle((*_self_)._field_handle)) {
		jule::Slice<jule::U16> _5517_utf16Buff = _216397e2e_Utf16FromStr(static_cast<jule::Str>(_4928_buff));;
		jule::Bool _5617_ok = _2163b2eb0_WriteConsole((*_self_)._field_handle,(&(_5517_utf16Buff[0LL])),static_cast<jule::I64>(_5517_utf16Buff.len()),_4945_n,nullptr);;
		if ((!(_5617_ok))) {
			return jule::Exceptional<jule::I64>(_2162c84ad_getLastFsError());
		};
		return jule::Exceptional<jule::I64>(jule::Any(),_4945_n);
	};
	_4945_n=static_cast<jule::I64>(_2163b64be_Write(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_4928_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_4928_buff.len()))));
	if ((_4945_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_2162c84ad_getLastFsError());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_4945_n);
}



inline jule::Exceptional<jule::I64> _21645ed81_Read(_2163c2bb2_File* _self_, jule::Slice<jule::U8> _8131_buff) {
	jule::I64 _8148_n = jule::I64();
	if ((_8131_buff.len() == 0LL)) {
		_8148_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_8148_n);
	};
	if (_21646763b_isConsoleHandle((*_self_)._field_handle)) {
		jule::Slice<jule::U16> _8721_codepage = jule::Slice<jule::U16>::alloc(_8131_buff.len());;
		jule::Bool _8817_ok = _2163b34dd_ReadConsole((*_self_)._field_handle,(&(_8721_codepage[0LL])),static_cast<jule::I64>(_8131_buff.len()),_8148_n,nullptr);;
		if ((!(_8817_ok))) {
			return jule::Exceptional<jule::I64>(_2162c84ad_getLastFsError());
		};
		jule::Slice<jule::I32> _9317_runes = _2163ad010_Decode(_8721_codepage.slice(0LL,_8148_n));;
		_8148_n=0LL;
		{
			auto &expr = _9317_runes;
			auto it = expr.begin();
			_iter_begin_1e4ac5507:;
			if (it != expr.end()) {
				jule::I32 &_9520_r = *it;
				{
					jule::I64 _9621_size = _2164954e3_RuneLen(_9520_r);;
					if (((_8148_n + _9621_size) > _8131_buff.len())) {
						goto _iter_end_1e4ac5507;
					};
					_216495911_EncodeRune(_8131_buff.slice(_8148_n),_9520_r);
					_8148_n+=_9621_size;
				}
				_iter_next_1e4ac5507:;
				++it;
				goto _iter_begin_1e4ac5507;
			}
			_iter_end_1e4ac5507:;
		};
		return jule::Exceptional<jule::I64>(jule::Any(),_8148_n);
	};
	_8148_n=static_cast<jule::I64>(_2163b5c60_Read(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_8131_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_8131_buff.len()))));
	if ((_8148_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_2162c84ad_getLastFsError());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_8148_n);
}







std::ostream &operator<<(std::ostream &_Stream, _2163c2bb2_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2162d1a05_IsDir(_2163c2d9e_Status* _self_) {
	return (((*_self_)._field_Mode & 16384LLU) == 16384LLU);
}



inline jule::Bool _2162d2cc0_IsReg(_2163c2d9e_Status* _self_) {
	return (((*_self_)._field_Mode & 32768LLU) == 32768LLU);
}



inline jule::Exceptional<jule::Ptr<_2163c2d9e_Status>> static__20a1b1eda_Of(jule::Str _1222_path) {
	if (_1222_path.empty()) {
		return jule::Exceptional<jule::Ptr<_2163c2d9e_Status>>(static_cast<jule::I64>(4LL));
	};
	jule::Slice<jule::U16> _1613_utf16Path = _216397e2e_Utf16FromStr(_1222_path);;
	struct stat _1717_handle = (struct stat){};;
	jule::I64 _1813_code = _2163aed8b_Wstat((&(_1613_utf16Path[0LL])),(&(_1717_handle)));;
	if ((_1813_code != -1LL)) {
		return jule::Exceptional<jule::Ptr<_2163c2d9e_Status>>(jule::Any(),jule::new_ptr<_2163c2d9e_Status>(_2163c2d9e_Status{._field_Mode=static_cast<jule::U64>(static_cast<jule::U64>(_1717_handle.st_mode)), ._field_Size=static_cast<jule::U64>(static_cast<jule::U64>(_1717_handle.st_size))}));
	};
	return jule::Exceptional<jule::Ptr<_2163c2d9e_Status>>(_2162c84ad_getLastFsError());
}







std::ostream &operator<<(std::ostream &_Stream, _2163c2d9e_Status _Src) {
	_Stream << "Status{";
	_Stream << "Mode:" << _Src._field_Mode << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20a3939e6_Cmd> static__20a393e25_New(jule::Str _2023_path) {
	return jule::new_ptr<_20a3939e6_Cmd>(_20a3939e6_Cmd{._field_path=_2023_path, });
}



inline jule::Exceptional<jule::I64> _20a394189_Spawn(_20a3939e6_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(),static_cast<jule::I64>(({
		auto except = _20a3a3bb0_spawn(&(*_self_));
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::I64>(except.error);
		} jule::I64();});
	})));
}



inline jule::Exceptional<jule::I64> _20a3a3bb0_spawn(_20a3939e6_Cmd* _self_) {
	jule::I64 _5217_pid = 0LL;;
	if (((*_self_)._field_Env == nullptr)) {
		_5217_pid=static_cast<jule::I64>(_20a3a33c9_execvp((*_self_)._field_path,(*_self_)._field_Args));
	} else {
		_5217_pid=static_cast<jule::I64>(_20a3a37b4_execve((*_self_)._field_path,(*_self_)._field_Args,(*_self_)._field_Env));
	};
	if ((_5217_pid == -1LL)) {
		return jule::Exceptional<jule::I64>(_20a393265_getLastProcessError());
	};
	jule::I64 _6113_status = 0LL;;
	if ((_cwait(((signed*)((&(_6113_status)))),_5217_pid,0LL) == -1LL)) {
		return jule::Exceptional<jule::I64>(_20a393265_getLastProcessError());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_6113_status);
}







std::ostream &operator<<(std::ostream &_Stream, _20a3939e6_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20a35491e_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1d42b4784_Prec(_1d42b43cc_Token* _self_) {
	if (((*_self_)._field_Id != static_cast<jule::U64>(7LLU))) {
		return 0LLU;
	};
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1e4b8e8bd:;
			{
				return 5LLU;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1e4b8e934:;
			{
				return 4LLU;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1e4b8e2c4:;
			{
				return 3LLU;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1e4b8e33a:;
			{
				return 2LLU;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1e4b8e3a1:;
			{
				return 1LLU;
			}
		}
		else {
			_case_begin_1e4b8e082:;
			{
				return 0LLU;
			}
		}
		_match_end_1e4b8e02c:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d42b43cc_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d42b9b74_IsOk(_1d42b9767_File* _self_) {
	({
		auto except = static__20a1b1eda_Of((*_self_)._field_Path);
		(except.ok()) ? (except.result) : ({{
			return false;
		} jule::Ptr<_2163c2d9e_Status>();});
	});
	return true;
}



inline void _1d42b9de9_Fill(_1d42b9767_File* _self_, jule::Slice<jule::U8> _2331_data) {
	(*_self_)._field_Data=_2331_data;
}



inline jule::Str _1d42ba15d_Dir(_1d42b9767_File* _self_) {
	return _20a1b1704_Dir((*_self_)._field_Path);
}



inline jule::Str _1d42ba3c2_Name(_1d42b9767_File* _self_) {
	return _20a1b15c2_Base((*_self_)._field_Path);
}



inline jule::Uintptr _1d42ba636_Addr(_1d42b9767_File* _self_) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)((&((*_self_))))));
}



inline jule::Str _1d42ba944_GetRow(_1d42b9767_File* _self_, jule::I64 _4425_row) {
	jule::I64 _4517_n = 0LL;;
	jule::I64 _4617_lineStart = 0LL;;
	jule::I64 _4717_i = 0LL;;
	for (; (_4717_i < (*_self_)._field_Data.len()); (_4717_i)++) {
		{
			if (((*_self_)._field_Data[_4717_i] != '\n')) {
				goto _iter_next_1e4b9454e;
			};
			(_4517_n)++;
			if ((_4517_n == _4425_row)) {
				return static_cast<jule::Str>((*_self_)._field_Data.slice(_4617_lineStart,_4717_i));
			};
			_4617_lineStart=static_cast<jule::I64>((_4717_i + 1LL));
		}
	_iter_next_1e4b9454e:;
	}
	_iter_end_1e4b9454e:;;
	return jule::Str();
}







std::ostream &operator<<(std::ostream &_Stream, _1d42b9767_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d42bb7be_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1d42c295c_pushErr(_1d42c23b8_lex* _self_, jule::Str _45826_fmt, jule::Slice<jule::Any> _45839_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1d42bc5c2_makeErr((*_self_)._field_row,(*_self_)._field_column,(*_self_)._field_file,_45826_fmt,jule::Any(_45839_args)));;
}



inline void _1d42c2c7b_pushErrTok(_1d42c23b8_lex* _self_, jule::Ptr<_1d42b43cc_Token>& _46330_token, jule::Str _46345_fmt) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1d42bc5c2_makeErr(_46330_token.get()._field_Row,_46330_token.get()._field_Column,(*_self_)._field_file,_46345_fmt,jule::Slice<jule::Any>()));;
}



inline void _1d42c2e57_lex(_1d42c23b8_lex* _self_) {
	(*_self_)._field_errors=nullptr;
	_1d42c4e59_newLine(&(*_self_));
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len())) {
		{
			jule::Ptr<_1d42b43cc_Token> _47321_token = _1d42c62ce_token(&(*_self_));;
			if ((_47321_token.get()._field_Id != static_cast<jule::U64>(0LLU))) {
				(*_self_)._field_tokens = jule::alloc_for_append((*_self_)._field_tokens,1);(*_self_)._field_tokens.__push(_47321_token);;
			};
		}
	_iter_next_1e4bcb29a:;
	}
	_iter_end_1e4bcb29a:;;
}



inline jule::Str _1d42c3265_id(_1d42c23b8_lex* _self_, jule::Slice<jule::U8>& _48222_ln) {
	if ((_48222_ln.len() == 0LL)) {
		return jule::Str();
	};
	jule::I32 _48614_r;;
	jule::I64 _48621_i;;
	std::tie(_48614_r,_48621_i) = _2164948dd_DecodeRune(_48222_ln);
	if (((_48614_r != '_') && (!(_1d42b78a8_IsLetter(_48614_r))))) {
		return jule::Str();
	};
	while ((_48621_i < _48222_ln.len())) {
		{
			jule::I32 _49218_pr;;
			jule::I64 _49222_n;;
			std::tie(_49218_pr,_49222_n) = _2164948dd_DecodeRune(_48222_ln.slice(_48621_i));
			if ((((_49218_pr != '_') && (!(_1d42b7de7_IsDecimal(static_cast<jule::U8>(static_cast<jule::U8>(_49218_pr)))))) && (!(_1d42b78a8_IsLetter(_49218_pr))))) {
				(*_self_)._field_pos+=_48621_i;
				return static_cast<jule::Str>(_48222_ln.slice(0LL,_48621_i));
			};
			_48621_i+=_49222_n;
		}
	_iter_next_1e4bce4bd:;
	}
	_iter_end_1e4bce4bd:;;
	(*_self_)._field_pos+=_48222_ln.len();
	return static_cast<jule::Str>(_48222_ln);
}



inline jule::Slice<jule::U8> _1d42c34c9_resume(_1d42c23b8_lex* _self_) {
	jule::I64 _50717_i = (*_self_)._field_pos;;
	for (; (_50717_i < (*_self_)._field_file.get()._field_Data.len()); (_50717_i)++) {
		{
			jule::I32 _50917_r = static_cast<jule::I32>((*_self_)._field_file.get()._field_Data[_50717_i]);;
			if (_1d42b7457_IsSpace(_50917_r)) {
				;
				((*_self_)._field_pos)++;
				{
					auto &_match_expr{ _50917_r };
					
					if (_match_expr == '\n') {
						_case_begin_1e4bd4182:;
						{
							_1d42c4e59_newLine(&(*_self_));
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1e4bd41e8:;
						{
							(*_self_)._field_column+=8LL;
						}
					}
					else {
						_case_begin_1e4bd20a3:;
						{
							((*_self_)._field_column)++;
						}
					}
					_match_end_1e4bd3bdc:;
				};
				goto _iter_next_1e4bd235b;
			};
			jule::I64 _52421_j = _50717_i;;
			for (; (_52421_j < (*_self_)._field_file.get()._field_Data.len()); (_52421_j)++) {
				{
					if (((*_self_)._field_file.get()._field_Data[_52421_j] == '\n')) {
						goto _iter_end_1e4bd30a4;
					};
				}
			_iter_next_1e4bd30a4:;
			}
			_iter_end_1e4bd30a4:;;
			return (*_self_)._field_file.get()._field_Data.slice(_50717_i,_52421_j);
		}
	_iter_next_1e4bd235b:;
	}
	_iter_end_1e4bd235b:;;
	return nullptr;
}



inline void _1d42c374e_lexLineComment(_1d42c23b8_lex* _self_, jule::Ptr<_1d42b43cc_Token>& _53538_token) {
	jule::I64 _53613_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _53917_r = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if (((_53917_r == '\n') || (_53917_r == '\r'))) {
				goto _iter_end_1e4bd6ad0;
			};
		}
	_iter_next_1e4bd6ad0:;
	}
	_iter_end_1e4bd6ad0:;;
	if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		_53538_token.get()._field_Id=static_cast<jule::U64>(18LLU);
		_53538_token.get()._field_Kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_Data.slice(_53613_start,(*_self_)._field_pos));
	};
}



inline void _1d42c39c4_lexRangeComment(_1d42c23b8_lex* _self_, jule::Ptr<_1d42b43cc_Token>& _55039_token) {
	jule::I64 _55113_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _55417_r = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if ((_55417_r == '\r')) {
				goto _iter_next_1e4bd9e8a;
			};
			if ((_55417_r == '\n')) {
				_1d42c4e59_newLine(&(*_self_));
				goto _iter_next_1e4bd9e8a;
			};
			(*_self_)._field_column+=1LL;
			if ((((((*_self_)._field_pos + 1LL) < (*_self_)._field_file.get()._field_Data.len()) && (_55417_r == '*')) && ((*_self_)._field_file.get()._field_Data[((*_self_)._field_pos + 1LL)] == '/'))) {
				(*_self_)._field_column+=2LL;
				(*_self_)._field_pos+=2LL;
				if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					_55039_token.get()._field_Id=static_cast<jule::U64>(18LLU);
					_55039_token.get()._field_Kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_Data.slice(_55113_start,(*_self_)._field_pos));
				};
				return;;
			};
		}
	_iter_next_1e4bd9e8a:;
	}
	_iter_end_1e4bd9e8a:;;
	_1d42c295c_pushErr(&(*_self_), jule::Str("missing block comment close", 27),jule::Slice<jule::Any>());
}



inline jule::Str _1d42c3cd2_num(_1d42c23b8_lex* _self_, jule::Slice<jule::U8>& _57823_txt) {
	jule::Str _57838_lit = jule::Str();
	if ((_57823_txt[0LL] == '_')) {
		_57838_lit = jule::Str();
		return _57838_lit;
	};
	_57838_lit=_1d42c0dde_hexNum(_57823_txt);
	if ((!(_57838_lit.empty()))) {
		goto _julec_label_end;
	};
	_57838_lit=_1d42c0b47_octalNum(_57823_txt);
	if ((!(_57838_lit.empty()))) {
		goto _julec_label_end;
	};
	_57838_lit=_1d42be591_binaryNum(_57823_txt);
	if ((!(_57838_lit.empty()))) {
		goto _julec_label_end;
	};
	_57838_lit=_1d42be2e9_commonNum(_57823_txt);
	_julec_label_end:;
	(*_self_)._field_pos+=_57838_lit.len();
	return _57838_lit;
}



inline jule::Str _1d42c40e0_escapeSeq(_1d42c23b8_lex* _self_, jule::Slice<jule::U8>& _60029_txt) {
	jule::Str _60117_seq = jule::Str();;
	if ((_60029_txt.len() < 2LL)) {
		goto _julec_label_end;
	};
	{
		auto &_match_expr{ _60029_txt[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1e4be5061:;
			{
				(*_self_)._field_pos+=2LL;
				return static_cast<jule::Str>(_60029_txt.slice(0LL,2LL));
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1e4be4c64:;
			{
				_60117_seq=_1d42c14c7_bigUnicodePointEscape(_60029_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1e4be4cca:;
			{
				_60117_seq=_1d42c1791_littleUnicodePointEscape(_60029_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1e4be4d41:;
			{
				_60117_seq=_1d42c194a_hexByteEscape(_60029_txt);
			}
		}
		else {
			_case_begin_1e4be44e4:;
			{
				_60117_seq=_1d42c1bd1_byteEscape(_60029_txt);
			}
		}
		_match_end_1e4be4b21:;
	};
	_julec_label_end:;
	if (_60117_seq.empty()) {
		((*_self_)._field_pos)++;
		_1d42c295c_pushErr(&(*_self_), jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>());
		return jule::Str();
	};
	(*_self_)._field_pos+=_60117_seq.len();
	return _60117_seq;
}



inline jule::Str _1d42c4497_getRune(_1d42c23b8_lex* _self_, jule::Slice<jule::U8>& _63027_txt, jule::Bool _63040_raw) {
	if (((!(_63040_raw)) && (_63027_txt[0LL] == '\\'))) {
		return _1d42c40e0_escapeSeq(&(*_self_), _63027_txt);
	};
	jule::I32 _63414_r;;
	jule::I64 _63417_n;;
	std::tie(_63414_r,_63417_n) = _2164948dd_DecodeRune(_63027_txt);
	(*_self_)._field_pos+=_63417_n;
	return static_cast<jule::Str>(_63414_r);
}



inline jule::Str _1d42c47a5_lexRune(_1d42c23b8_lex* _self_, jule::Slice<jule::U8>& _63927_txt) {
	jule::Str _64017_run = jule::Str("'", 1);;
	((*_self_)._field_column)++;
	jule::I64 _64217_n = 0LL;;
	jule::I64 _64317_i = 1LL;;
	for (; (_64317_i < _63927_txt.len()); (_64317_i)++) {
		{
			if ((_63927_txt[_64317_i] == '\r')) {
				goto _iter_next_1e4bebe8b;
			};
			if ((_63927_txt[_64317_i] == '\n')) {
				_1d42c295c_pushErr(&(*_self_), jule::Str("rune is not finished", 20),jule::Slice<jule::Any>());
				((*_self_)._field_pos)++;
				_1d42c4e59_newLine(&(*_self_));
				return jule::Str();
			};
			jule::Slice<jule::U8> _65517_part = _63927_txt.slice(_64317_i);;
			jule::Str _65617_r = _1d42c4497_getRune(&(*_self_), _65517_part,false);;
			_64017_run+=_65617_r;
			(*_self_)._field_column+=_2164965d2_RuneCountStr(_65617_r);
			if ((_65617_r == jule::Str("'", 1))) {
				((*_self_)._field_pos)++;
				goto _iter_end_1e4bebe8b;
			};
			if ((_65617_r.len() > 1LL)) {
				_64317_i+=(_65617_r.len() - 1LL);
			};
			(_64217_n)++;
		}
	_iter_next_1e4bebe8b:;
	}
	_iter_end_1e4bebe8b:;;
	if ((_64217_n == 0LL)) {
		_1d42c295c_pushErr(&(*_self_), jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>());
	} else if ((_64217_n > 1LL)) {
		_1d42c295c_pushErr(&(*_self_), jule::Str("rune is should be single", 24),jule::Slice<jule::Any>());
	};
	return _64017_run;
}



inline jule::Str _1d42c4a19_lexStr(_1d42c23b8_lex* _self_) {
	jule::Str _67917_s = jule::Str();;
	jule::U8 _68013_mark = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
	((*_self_)._field_pos)++;
	jule::Bool _68213_raw = (_68013_mark == '`');;
	_67917_s+=static_cast<jule::Str>(_68013_mark);
	((*_self_)._field_column)++;
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len())) {
		{
			jule::U8 _68717_ch = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if ((_68717_ch == '\r')) {
				goto _iter_next_1e4c02ec5;
			};
			if ((_68717_ch == '\n')) {
				_1d42c4e59_newLine(&(*_self_));
				if ((!(_68213_raw))) {
					_1d42c295c_pushErr(&(*_self_), jule::Str("string is not finished", 22),jule::Slice<jule::Any>());
					((*_self_)._field_pos)++;
					return jule::Str();
				};
			};
			jule::Slice<jule::U8> _69921_part = (*_self_)._field_file.get()._field_Data.slice((*_self_)._field_pos);;
			jule::Str _70017_r = _1d42c4497_getRune(&(*_self_), _69921_part,_68213_raw);;
			_67917_s+=_70017_r;
			(*_self_)._field_column+=_2164965d2_RuneCountStr(_70017_r);
			if ((_68717_ch == _68013_mark)) {
				goto _iter_end_1e4c02ec5;
			};
		}
	_iter_next_1e4c02ec5:;
	}
	_iter_end_1e4c02ec5:;;
	return _67917_s;
}



inline jule::Bool _1d42c4c7d_isFirstTokenOfLine(_1d42c23b8_lex* _self_) {
	return ((*_self_)._field_column == 1LL);
}



inline void _1d42c4e59_newLine(_1d42c23b8_lex* _self_) {
	((*_self_)._field_row)++;
	(*_self_)._field_column=1LL;
}



inline jule::Bool _1d42c5454_isOp(_1d42c23b8_lex* _self_, jule::Slice<jule::U8>& _72024_txt, jule::Str _72037_kind, jule::U64 _72048_id, jule::Ptr<_1d42b43cc_Token>& _72066_t) {
	if ((!(_1d42bc957_bytesHasPrefix(_72024_txt,_72037_kind)))) {
		return false;
	};
	_72066_t.get()._field_Kind=_72037_kind;
	_72066_t.get()._field_Id=_72048_id;
	(*_self_)._field_pos+=_72037_kind.len();
	return true;
}



inline jule::Bool _1d42c580b_lexBasicOps(_1d42c23b8_lex* _self_, jule::Slice<jule::U8> _73030_txt, jule::Ptr<_1d42b43cc_Token>& _73048_tok) {
	{
		auto &expr = _1d42bc0d8_basicOps;
		auto it = expr.begin();
		_iter_begin_1e4c095b4:;
		if (it != expr.end()) {
			_1d42bb7be_kindPair &_73116_pair = *it;
			{
				if (_1d42c5454_isOp(&(*_self_), _73030_txt,_73116_pair._field_kind,_73116_pair._field_id,_73048_tok)) {
					return true;
				};
			}
			_iter_next_1e4c095b4:;
			++it;
			goto _iter_begin_1e4c095b4;
		}
		_iter_end_1e4c095b4:;
	};
	return false;
}



inline jule::Bool _1d42c5bb3_lexId(_1d42c23b8_lex* _self_, jule::Slice<jule::U8>& _74025_txt, jule::Ptr<_1d42b43cc_Token>& _74043_t) {
	jule::Str _74113_lex = _1d42c3265_id(&(*_self_), _74025_txt);;
	if (_74113_lex.empty()) {
		return false;
	};
	_74043_t.get()._field_Kind=_74113_lex;
	_74043_t.get()._field_Id=static_cast<jule::U64>(2LLU);
	return true;
}



inline jule::Bool _1d42c606a_lexNum(_1d42c23b8_lex* _self_, jule::Slice<jule::U8>& _75026_txt, jule::Ptr<_1d42b43cc_Token>& _75044_t) {
	jule::Str _75113_lex = _1d42c3cd2_num(&(*_self_), _75026_txt);;
	if (_75113_lex.empty()) {
		return false;
	};
	_75044_t.get()._field_Kind=_75113_lex;
	_75044_t.get()._field_Id=static_cast<jule::U64>(6LLU);
	return true;
}



inline jule::Ptr<_1d42b43cc_Token> _1d42c62ce_token(_1d42c23b8_lex* _self_) {
	jule::Ptr<_1d42b43cc_Token> _76217_t = jule::new_ptr<_1d42b43cc_Token>(_1d42b43cc_Token{._field_File=(*_self_)._field_file, ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _76713_txt = _1d42c34c9_resume(&(*_self_));;
	if ((_76713_txt == nullptr)) {
		return _76217_t;
	};
	_76217_t.get()._field_Column=(*_self_)._field_column;
	_76217_t.get()._field_Row=(*_self_)._field_row;
	{
		
		if (_1d42c606a_lexNum(&(*_self_), _76713_txt,_76217_t)) {
			_case_begin_1e4c1091c:;
			{
				goto _match_end_1e4c0e476;
			}
		}
		else if ((_76713_txt[0LL] == '\'')) {
			_case_begin_1e4c10983:;
			{
				_76217_t.get()._field_Kind=_1d42c47a5_lexRune(&(*_self_), _76713_txt);
				_76217_t.get()._field_Id=static_cast<jule::U64>(6LLU);
				return _76217_t;
			}
		}
		else if (((_76713_txt[0LL] == '\"') || (_76713_txt[0LL] == '`'))) {
			_case_begin_1e4c11588:;
			{
				_76217_t.get()._field_Kind=_1d42c4a19_lexStr(&(*_self_));
				_76217_t.get()._field_Id=static_cast<jule::U64>(6LLU);
				return _76217_t;
			}
		}
		else if (_1d42bc957_bytesHasPrefix(_76713_txt,jule::Str("//", 2))) {
			_case_begin_1e4c115ee:;
			{
				_1d42c374e_lexLineComment(&(*_self_), _76217_t);
				return _76217_t;
			}
		}
		else if (_1d42bc957_bytesHasPrefix(_76713_txt,jule::Str("/*", 2))) {
			_case_begin_1e4c11665:;
			{
				_1d42c39c4_lexRangeComment(&(*_self_), _76217_t);
				return _76217_t;
			}
		}
		else if (_1d42c5454_isOp(&(*_self_), _76713_txt,jule::Str("(", 1),static_cast<jule::U64>(3LLU),_76217_t) || _1d42c5454_isOp(&(*_self_), _76713_txt,jule::Str(")", 1),static_cast<jule::U64>(3LLU),_76217_t) || _1d42c5454_isOp(&(*_self_), _76713_txt,jule::Str("{", 1),static_cast<jule::U64>(3LLU),_76217_t) || _1d42c5454_isOp(&(*_self_), _76713_txt,jule::Str("}", 1),static_cast<jule::U64>(3LLU),_76217_t) || _1d42c5454_isOp(&(*_self_), _76713_txt,jule::Str("[", 1),static_cast<jule::U64>(3LLU),_76217_t) || _1d42c5454_isOp(&(*_self_), _76713_txt,jule::Str("]", 1),static_cast<jule::U64>(3LLU),_76217_t) || _1d42c580b_lexBasicOps(&(*_self_), _76713_txt,_76217_t)) {
			_case_begin_1e4c0ed8e:;
			{
				goto _match_end_1e4c0e476;
			}
		}
		else if (_1d42c5bb3_lexId(&(*_self_), _76713_txt,_76217_t)) {
			_case_begin_1e4c0ee05:;
			{
				{
					auto &expr = _1d42bbc53_keywords;
					auto it = expr.begin();
					_iter_begin_1e4c17083:;
					if (it != expr.end()) {
						_1d42bb7be_kindPair &_80520_pair = *it;
						{
							if ((_80520_pair._field_kind == _76217_t.get()._field_Kind)) {
								_76217_t.get()._field_Id=_80520_pair._field_id;
								goto _iter_end_1e4c17083;
							};
						}
						_iter_next_1e4c17083:;
						++it;
						goto _iter_begin_1e4c17083;
					}
					_iter_end_1e4c17083:;
				};
			}
		}
		else {
			_case_begin_1e4c0ed28:;
			{
				jule::I32 _81218_r;;
				jule::I64 _81221_sz;;
				std::tie(_81218_r,_81221_sz) = _2164948dd_DecodeRune(_76713_txt);
				_1d42c295c_pushErr(&(*_self_), jule::Str("undefined token: @", 18),jule::Slice<jule::Any>::make({jule::Any(_81218_r)}));
				((*_self_)._field_column)++;
				(*_self_)._field_pos+=_81221_sz;
				return _76217_t;
			}
		}
		_match_end_1e4c0e476:;
	};
	(*_self_)._field_column+=_2164965d2_RuneCountStr(_76217_t.get()._field_Kind);
	return _76217_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1d42c23b8_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e24d0d9e_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e24d1a92_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e24d1e8d_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2515686_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e25160b0_IsPrim(_1e2515c4c_IdentTypeDecl* _self_) {
	return ((*_self_)._field_Token.get()._field_Id == static_cast<jule::U64>(1LLU));
}







std::ostream &operator<<(std::ostream &_Stream, _1e2515c4c_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e251639b_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2516753_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2516a3e_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2516e3a_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2517226_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e2517864_IsUnsafe(_1e2517512_PtrTypeDecl* _self_) {
	return ((*_self_)._field_Elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e2517512_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e251806d_AutoSized(_1e2517b94_ArrTypeDecl* _self_) {
	return ((*_self_)._field_Size == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e2517b94_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e25183e2_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2518799_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2519ba7_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2519e93_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e251a548_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e251a834_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e251b03d_IsNil(_1e251abdb_LitExpr* _self_) {
	return ((*_self_)._field_Value == jule::Str("nil", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _1e251abdb_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e251b3e5_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e251b79c_CoExpr _Src) {
	_Stream << "CoExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e251c072_IsSelf(_1e251bc20_IdentExpr* _self_) {
	return ((*_self_)._field_Ident == jule::Str("self", 4));
}







std::ostream &operator<<(std::ostream &_Stream, _1e251bc20_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e251c429_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e251c7d1_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e251cb88_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e251d040_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e251d4b3_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "IsSelf:" << _Src._field_IsSelf << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e251d936_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e251e2d8_Unhandled(_1e251de75_FnCallExpr* _self_) {
	return ((*_self_)._field_Exception == nullptr);
}



inline jule::Bool _1e251e54c_Ignored(_1e251de75_FnCallExpr* _self_) {
	return (((*_self_)._field_Exception != nullptr) && (*_self_)._field_Exception.get()._field_Deferred);
}







std::ostream &operator<<(std::ostream &_Stream, _1e251de75_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e251ec56_IsTargeted(_1e251e904_FieldExprPair* _self_) {
	return ((*_self_)._field_Field != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e251e904_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2520152_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e2520c46_IsEmpty(_1e25205c5_BraceLit* _self_) {
	return ((*_self_)._field_Exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _1e25205c5_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e25210dc_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e25218b2_IsEmpty(_1e2521560_SliceExpr* _self_) {
	return ((*_self_)._field_Exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _1e2521560_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2521e01_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e252250b_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e25227e7_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2522c6a_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2523122_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e25234c9_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e25237b5_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2523dc0_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e252440e_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2525399_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e25259a4_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e25264dd_IsSelf(_1e252617a_ParamDecl* _self_) {
	return (((*_self_)._field_Ident == jule::Str("&self", 5)) || ((*_self_)._field_Ident == jule::Str("self", 4)));
}



inline jule::Bool _1e2526752_IsRef(_1e252617a_ParamDecl* _self_) {
	return ((!((*_self_)._field_Ident.empty())) && ((*_self_)._field_Ident[0LL] == '&'));
}







std::ostream &operator<<(std::ostream &_Stream, _1e252617a_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e25277ec_IsAnon(_1e252749a_FnDecl* _self_) {
	return ((*_self_)._field_Ident == jule::Str("<anonymous>", 11));
}







std::ostream &operator<<(std::ostream &_Stream, _1e252749a_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2528479_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2528831_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e25292e3_IsInf(_1e2528e91_Iter* _self_) {
	return ((*_self_)._field_Kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e2528e91_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e2529ab8_IsWhileNext(_1e2529766_WhileKind* _self_) {
	return ((*_self_)._field_Next != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e2529766_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e252a107_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e252a4ae_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e252a866_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e252acd9_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e252b191_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e252b614_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e252bcda_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e252c25d_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e252c934_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e252d1c6_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e252d99b_AutoExpr(_1e252d649_EnumItemDecl* _self_) {
	return ((*_self_)._field_Expr == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e252d649_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e252e705_DefaultTyped(_1e252e172_EnumDecl* _self_) {
	return ((*_self_)._field_Kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e252e172_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e252eb78_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e252ed76_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e25303c6_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2530c34_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e253133e_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e2531cac_IsTraitImpl(_1e2531949_Impl* _self_) {
	return ((*_self_)._field_Base != nullptr);
}



inline jule::Bool _1e2532021_IsStructImpl(_1e2531949_Impl* _self_) {
	return ((*_self_)._field_Base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e2531949_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e23b4a96_Const> static__1e257a575_NewI64(jule::I64 _1326_x) {
	return jule::new_ptr<_1e23b4a96_Const>(_1e23b4a96_Const{._field_data=jule::Any(_1326_x)});
}



inline jule::Ptr<_1e23b4a96_Const> static__1e257a81c_NewU64(jule::U64 _1626_x) {
	return jule::new_ptr<_1e23b4a96_Const>(_1e23b4a96_Const{._field_data=jule::Any(_1626_x)});
}



inline jule::Ptr<_1e23b4a96_Const> static__1e257aab4_NewBool(jule::Bool _1927_x) {
	return jule::new_ptr<_1e23b4a96_Const>(_1e23b4a96_Const{._field_data=jule::Any(_1927_x)});
}



inline jule::Ptr<_1e23b4a96_Const> static__1e257ad5b_NewStr(jule::Str _2226_x) {
	return jule::new_ptr<_1e23b4a96_Const>(_1e23b4a96_Const{._field_data=jule::Any(_2226_x)});
}



inline jule::Ptr<_1e23b4a96_Const> static__1e257b103_NewF64(jule::F64 _2526_x) {
	return jule::new_ptr<_1e23b4a96_Const>(_1e23b4a96_Const{._field_data=jule::Any(_2526_x)});
}



inline jule::Ptr<_1e23b4a96_Const> static__1e257b301_NewNil(void) {
	return jule::new_ptr<_1e23b4a96_Const>(_1e23b4a96_Const{._field_data=nullptr});
}



inline jule::I64 _1e257b8ea_ReadI64(_1e23b4a96_Const* _self_) {
	if ((!(_1e257dc93_IsI64(&(*_self_))))) {
		return 0LL;
	};
	return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
}



inline jule::U64 _1e257bb5e_ReadU64(_1e23b4a96_Const* _self_) {
	if ((!(_1e257e007_IsU64(&(*_self_))))) {
		return 0LLU;
	};
	return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
}



inline jule::Bool _1e257bdc3_ReadBool(_1e23b4a96_Const* _self_) {
	if ((!(_1e257e26b_IsBool(&(*_self_))))) {
		return false;
	};
	return (*_self_)._field_data.operator jule::Bool();
}



inline jule::Str _1e257c137_ReadStr(_1e23b4a96_Const* _self_) {
	if ((!(_1e257e4d0_IsStr(&(*_self_))))) {
		return jule::Str();
	};
	return (*_self_)._field_data.operator jule::Str();
}



inline jule::F64 _1e257c39b_ReadF64(_1e23b4a96_Const* _self_) {
	if ((!(_1e257e744_IsF64(&(*_self_))))) {
		return 0LL;
	};
	return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
}



inline jule::I64 _1e257c610_AsI64(_1e23b4a96_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1e4c78589:;
			{
				return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1e4c78600:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1e4c77e5c:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_1e4c77d80:;
			{
				return 0LL;
			}
		}
		_match_end_1e4c77676:;
	};
}



inline jule::U64 _1e257c874_AsU64(_1e23b4a96_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1e4c79535:;
			{
				return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1e4c7a0c4:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1e4c7a13a:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_1e4c786cc:;
			{
				return 0LLU;
			}
		}
		_match_end_1e4c78677:;
	};
}



inline jule::F64 _1e257cad8_AsF64(_1e23b4a96_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1e4c7b070:;
			{
				return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1e4c7bb0e:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1e4c7bb75:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else {
			_case_begin_1e4c79b73:;
			{
				return 0LL;
			}
		}
		_match_end_1e4c79b1d:;
	};
}



inline void _1e257cd5d_SetI64(_1e23b4a96_Const* _self_, jule::I64 _13529_x) {
	(*_self_)._field_data=jule::Any(_13529_x);
}



inline void _1e257d0d3_SetU64(_1e23b4a96_Const* _self_, jule::U64 _13829_x) {
	(*_self_)._field_data=jule::Any(_13829_x);
}



inline void _1e257d358_SetBool(_1e23b4a96_Const* _self_, jule::Bool _14130_x) {
	(*_self_)._field_data=jule::Any(_14130_x);
}



inline void _1e257d5cd_SetStr(_1e23b4a96_Const* _self_, jule::Str _14429_x) {
	(*_self_)._field_data=jule::Any(_14429_x);
}



inline void _1e257d853_SetF64(_1e23b4a96_Const* _self_, jule::F64 _14729_x) {
	(*_self_)._field_data=jule::Any(_14729_x);
}



inline void _1e257da2e_SetNil(_1e23b4a96_Const* _self_) {
	(*_self_)._field_data=nullptr;
}



inline jule::Bool _1e257dc93_IsI64(_1e23b4a96_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1e4c808b0:;
			{
				return true;
			}
		}
		else {
			_case_begin_1e4c807d3:;
			{
				return false;
			}
		}
		_match_end_1e4c8077d:;
	};
}



inline jule::Bool _1e257e007_IsU64(_1e23b4a96_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1e4c81482:;
			{
				return true;
			}
		}
		else {
			_case_begin_1e4c81163:;
			{
				return false;
			}
		}
		_match_end_1e4c80d77:;
	};
}



inline jule::Bool _1e257e26b_IsBool(_1e23b4a96_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1e4c81eaa:;
			{
				return true;
			}
		}
		else {
			_case_begin_1e4c81b8b:;
			{
				return false;
			}
		}
		_match_end_1e4c8187d:;
	};
}



inline jule::Bool _1e257e4d0_IsStr(_1e23b4a96_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1e4c829d3:;
			{
				return true;
			}
		}
		else {
			_case_begin_1e4c826b4:;
			{
				return false;
			}
		}
		_match_end_1e4c823a6:;
	};
}



inline jule::Bool _1e257e744_IsF64(_1e23b4a96_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1e4c8350b:;
			{
				return true;
			}
		}
		else {
			_case_begin_1e4c831dc:;
			{
				return false;
			}
		}
		_match_end_1e4c82dce:;
	};
}



inline jule::Bool _1e257e9a8_IsNil(_1e23b4a96_Const* _self_) {
	return ((*_self_)._field_data == nullptr);
}



inline jule::Bool _1e257ecb6_AreSameTypes(_1e23b4a96_Const* _self_, _1e23b4a96_Const _21031_x) {
	{
		
		if ((_1e257dc93_IsI64(&(*_self_)) == _1e257dc93_IsI64(&_21031_x))) {
			_case_begin_1e4c84d9d:;
			{
				return true;
			}
		}
		else if ((_1e257e007_IsU64(&(*_self_)) == _1e257e007_IsU64(&_21031_x))) {
			_case_begin_1e4c8463e:;
			{
				return true;
			}
		}
		else if ((_1e257e744_IsF64(&(*_self_)) == _1e257e744_IsF64(&_21031_x))) {
			_case_begin_1e4c846b6:;
			{
				return true;
			}
		}
		else if ((_1e257e26b_IsBool(&(*_self_)) == _1e257e26b_IsBool(&_21031_x))) {
			_case_begin_1e4c8473d:;
			{
				return true;
			}
		}
		else if ((_1e257e4d0_IsStr(&(*_self_)) == _1e257e4d0_IsStr(&_21031_x))) {
			_case_begin_1e4c847b5:;
			{
				return true;
			}
		}
		else if ((_1e257e9a8_IsNil(&(*_self_)) == _1e257e9a8_IsNil(&_21031_x))) {
			_case_begin_1e4c84a5c:;
			{
				return true;
			}
		}
		else {
			_case_begin_1e4c845b7:;
			{
				return false;
			}
		}
		_match_end_1e4c844da:;
	};
}



inline jule::Bool _1e25800c4_And(_1e23b4a96_Const* _self_, _1e23b4a96_Const _23522_x) {
	{
		
		if ((_1e257e26b_IsBool(&(*_self_)) && _1e257e26b_IsBool(&_23522_x))) {
			_case_begin_1e4c882e1:;
			{
				return (_1e257bdc3_ReadBool(&(*_self_)) && _1e257bdc3_ReadBool(&_23522_x));
			}
		}
		else {
			_case_begin_1e4c878ea:;
			{
				return false;
			}
		}
		_match_end_1e4c8781d:;
	};
}



inline jule::Bool _1e25803d2_Or(_1e23b4a96_Const* _self_, _1e23b4a96_Const _24621_x) {
	{
		
		if ((_1e257e26b_IsBool(&(*_self_)) && _1e257e26b_IsBool(&_24621_x))) {
			_case_begin_1e4c896dd:;
			{
				return (_1e257bdc3_ReadBool(&(*_self_)) || _1e257bdc3_ReadBool(&_24621_x));
			}
		}
		else {
			_case_begin_1e4c88654:;
			{
				return false;
			}
		}
		_match_end_1e4c88577:;
	};
}



inline jule::Bool _1e25806e0_Eq(_1e23b4a96_Const* _self_, _1e23b4a96_Const _25721_x) {
	{
		
		if (_1e257e9a8_IsNil(&(*_self_))) {
			_case_begin_1e4c8ab62:;
			{
				return _1e257e9a8_IsNil(&_25721_x);
			}
		}
		else if (_1e257e26b_IsBool(&(*_self_))) {
			_case_begin_1e4c8a436:;
			{
				return (_1e257e26b_IsBool(&_25721_x) && (_1e257bdc3_ReadBool(&(*_self_)) == _1e257bdc3_ReadBool(&_25721_x)));
			}
		}
		else if (_1e257e4d0_IsStr(&(*_self_))) {
			_case_begin_1e4c8a49c:;
			{
				return (_1e257e4d0_IsStr(&_25721_x) && (_1e257c137_ReadStr(&(*_self_)) == _1e257c137_ReadStr(&_25721_x)));
			}
		}
		else if (_1e257dc93_IsI64(&(*_self_))) {
			_case_begin_1e4c8a524:;
			{
				return (_1e257b8ea_ReadI64(&(*_self_)) == _1e257c610_AsI64(&_25721_x));
			}
		}
		else if (_1e257e007_IsU64(&(*_self_))) {
			_case_begin_1e4c8a59b:;
			{
				return (_1e257bb5e_ReadU64(&(*_self_)) == _1e257c874_AsU64(&_25721_x));
			}
		}
		else if (_1e257e744_IsF64(&(*_self_))) {
			_case_begin_1e4c8a843:;
			{
				return (_1e257c39b_ReadF64(&(*_self_)) == _1e257cad8_AsF64(&_25721_x));
			}
		}
		else {
			_case_begin_1e4c89a73:;
			{
				return false;
			}
		}
		_match_end_1e4c89996:;
	};
}



inline jule::Bool _1e25809ed_Lt(_1e23b4a96_Const* _self_, _1e23b4a96_Const _28421_x) {
	{
		
		if (_1e257e4d0_IsStr(&(*_self_))) {
			_case_begin_1e4c8ecdc:;
			{
				return (_1e257e4d0_IsStr(&_28421_x) && (_1e257c137_ReadStr(&(*_self_)) < _1e257c137_ReadStr(&_28421_x)));
			}
		}
		else if (_1e257dc93_IsI64(&(*_self_))) {
			_case_begin_1e4c8e68d:;
			{
				return (_1e257b8ea_ReadI64(&(*_self_)) < _1e257c610_AsI64(&_28421_x));
			}
		}
		else if (_1e257e007_IsU64(&(*_self_))) {
			_case_begin_1e4c8e704:;
			{
				return (_1e257bb5e_ReadU64(&(*_self_)) < _1e257c874_AsU64(&_28421_x));
			}
		}
		else if (_1e257e744_IsF64(&(*_self_))) {
			_case_begin_1e4c8e76a:;
			{
				return (_1e257c39b_ReadF64(&(*_self_)) < _1e257cad8_AsF64(&_28421_x));
			}
		}
		else {
			_case_begin_1e4c8ae92:;
			{
				return false;
			}
		}
		_match_end_1e4c8e13d:;
	};
}



inline jule::Bool _1e2580d0b_LtEq(_1e23b4a96_Const* _self_, _1e23b4a96_Const _30723_x) {
	{
		
		if (_1e257e4d0_IsStr(&(*_self_))) {
			_case_begin_1e4c92d78:;
			{
				return (_1e257e4d0_IsStr(&_30723_x) && (_1e257c137_ReadStr(&(*_self_)) <= _1e257c137_ReadStr(&_30723_x)));
			}
		}
		else if (_1e257dc93_IsI64(&(*_self_))) {
			_case_begin_1e4c92729:;
			{
				return (_1e257b8ea_ReadI64(&(*_self_)) <= _1e257c610_AsI64(&_30723_x));
			}
		}
		else if (_1e257e007_IsU64(&(*_self_))) {
			_case_begin_1e4c92790:;
			{
				return (_1e257bb5e_ReadU64(&(*_self_)) <= _1e257c874_AsU64(&_30723_x));
			}
		}
		else if (_1e257e744_IsF64(&(*_self_))) {
			_case_begin_1e4c92806:;
			{
				return (_1e257c39b_ReadF64(&(*_self_)) <= _1e257cad8_AsF64(&_30723_x));
			}
		}
		else {
			_case_begin_1e4c8eeeb:;
			{
				return false;
			}
		}
		_match_end_1e4c91e43:;
	};
}



inline jule::Bool _1e2581119_Gt(_1e23b4a96_Const* _self_, _1e23b4a96_Const _33021_x) {
	{
		
		if (_1e257e4d0_IsStr(&(*_self_))) {
			_case_begin_1e4c95e14:;
			{
				return (_1e257e4d0_IsStr(&_33021_x) && (_1e257c137_ReadStr(&(*_self_)) > _1e257c137_ReadStr(&_33021_x)));
			}
		}
		else if (_1e257dc93_IsI64(&(*_self_))) {
			_case_begin_1e4c957b5:;
			{
				return (_1e257b8ea_ReadI64(&(*_self_)) > _1e257c610_AsI64(&_33021_x));
			}
		}
		else if (_1e257e007_IsU64(&(*_self_))) {
			_case_begin_1e4c9582b:;
			{
				return (_1e257bb5e_ReadU64(&(*_self_)) > _1e257c874_AsU64(&_33021_x));
			}
		}
		else if (_1e257e744_IsF64(&(*_self_))) {
			_case_begin_1e4c95892:;
			{
				return (_1e257c39b_ReadF64(&(*_self_)) > _1e257cad8_AsF64(&_33021_x));
			}
		}
		else {
			_case_begin_1e4c93087:;
			{
				return false;
			}
		}
		_match_end_1e4c94ece:;
	};
}



inline jule::Bool _1e2581427_GtEq(_1e23b4a96_Const* _self_, _1e23b4a96_Const _35323_x) {
	{
		
		if (_1e257e4d0_IsStr(&(*_self_))) {
			_case_begin_1e4c98ea0:;
			{
				return (_1e257e4d0_IsStr(&_35323_x) && (_1e257c137_ReadStr(&(*_self_)) >= _1e257c137_ReadStr(&_35323_x)));
			}
		}
		else if (_1e257dc93_IsI64(&(*_self_))) {
			_case_begin_1e4c98851:;
			{
				return (_1e257b8ea_ReadI64(&(*_self_)) >= _1e257c610_AsI64(&_35323_x));
			}
		}
		else if (_1e257e007_IsU64(&(*_self_))) {
			_case_begin_1e4c988b7:;
			{
				return (_1e257bb5e_ReadU64(&(*_self_)) >= _1e257c874_AsU64(&_35323_x));
			}
		}
		else if (_1e257e744_IsF64(&(*_self_))) {
			_case_begin_1e4c9892d:;
			{
				return (_1e257c39b_ReadF64(&(*_self_)) >= _1e257cad8_AsF64(&_35323_x));
			}
		}
		else {
			_case_begin_1e4c96123:;
			{
				return false;
			}
		}
		_match_end_1e4c9806a:;
	};
}



inline jule::Bool _1e2581735_Add(_1e23b4a96_Const* _self_, _1e23b4a96_Const _37426_x) {
	{
		
		if (_1e257e4d0_IsStr(&(*_self_))) {
			_case_begin_1e4c9c03b:;
			{
				if ((!(_1e257e4d0_IsStr(&_37426_x)))) {
					return false;
				};
				_1e257d5cd_SetStr(&(*_self_), (_1e257c137_ReadStr(&(*_self_)) + _1e257c137_ReadStr(&_37426_x)));
			}
		}
		else if (_1e257e744_IsF64(&(*_self_))) {
			_case_begin_1e4c9b8dc:;
			{
				_1e257d853_SetF64(&(*_self_), static_cast<jule::F64>((_1e257c39b_ReadF64(&(*_self_)) + _1e257cad8_AsF64(&_37426_x))));
			}
		}
		else if (_1e257dc93_IsI64(&(*_self_))) {
			_case_begin_1e4c9b953:;
			{
				if (_1e257e744_IsF64(&_37426_x)) {
					_1e257d853_SetF64(&(*_self_), static_cast<jule::F64>((_1e257cad8_AsF64(&(*_self_)) + _1e257c39b_ReadF64(&_37426_x))));
				} else {
					_1e257cd5d_SetI64(&(*_self_), static_cast<jule::I64>((_1e257b8ea_ReadI64(&(*_self_)) + _1e257c610_AsI64(&_37426_x))));
				};
			}
		}
		else if (_1e257e007_IsU64(&(*_self_))) {
			_case_begin_1e4c9b9b9:;
			{
				if (_1e257e744_IsF64(&_37426_x)) {
					_1e257d853_SetF64(&(*_self_), static_cast<jule::F64>((_1e257cad8_AsF64(&(*_self_)) + _1e257c39b_ReadF64(&_37426_x))));
				} else {
					_1e257d0d3_SetU64(&(*_self_), static_cast<jule::U64>((_1e257bb5e_ReadU64(&(*_self_)) + _1e257c874_AsU64(&_37426_x))));
				};
			}
		}
		else {
			_case_begin_1e4c991ae:;
			{
				return false;
			}
		}
		_match_end_1e4c9b106:;
	};
	return true;
}



inline jule::Bool _1e2581a43_Sub(_1e23b4a96_Const* _self_, _1e23b4a96_Const _40326_x) {
	{
		
		if (_1e257e744_IsF64(&(*_self_))) {
			_case_begin_1e4ca7673:;
			{
				_1e257d853_SetF64(&(*_self_), static_cast<jule::F64>((_1e257c39b_ReadF64(&(*_self_)) - _1e257cad8_AsF64(&_40326_x))));
			}
		}
		else if (_1e257dc93_IsI64(&(*_self_))) {
			_case_begin_1e4ca6e36:;
			{
				if (_1e257e744_IsF64(&_40326_x)) {
					_1e257d853_SetF64(&(*_self_), static_cast<jule::F64>((_1e257cad8_AsF64(&(*_self_)) - _1e257c39b_ReadF64(&_40326_x))));
				} else {
					_1e257cd5d_SetI64(&(*_self_), static_cast<jule::I64>((_1e257b8ea_ReadI64(&(*_self_)) - _1e257c610_AsI64(&_40326_x))));
				};
			}
		}
		else if (_1e257e007_IsU64(&(*_self_))) {
			_case_begin_1e4ca6e9c:;
			{
				if (_1e257e744_IsF64(&_40326_x)) {
					_1e257d853_SetF64(&(*_self_), static_cast<jule::F64>((_1e257cad8_AsF64(&(*_self_)) - _1e257c39b_ReadF64(&_40326_x))));
				} else {
					_1e257d0d3_SetU64(&(*_self_), static_cast<jule::U64>((_1e257bb5e_ReadU64(&(*_self_)) - _1e257c874_AsU64(&_40326_x))));
				};
			}
		}
		else {
			_case_begin_1e4ca6dc0:;
			{
				return false;
			}
		}
		_match_end_1e4ca6584:;
	};
	return true;
}



inline jule::Bool _1e2581d51_Mul(_1e23b4a96_Const* _self_, _1e23b4a96_Const _42726_x) {
	{
		
		if (_1e257e744_IsF64(&(*_self_))) {
			_case_begin_1e4cabde7:;
			{
				_1e257d853_SetF64(&(*_self_), static_cast<jule::F64>((_1e257c39b_ReadF64(&(*_self_)) * _1e257cad8_AsF64(&_42726_x))));
			}
		}
		else if (_1e257dc93_IsI64(&(*_self_))) {
			_case_begin_1e4cab6aa:;
			{
				if (_1e257e744_IsF64(&_42726_x)) {
					_1e257d853_SetF64(&(*_self_), static_cast<jule::F64>((_1e257cad8_AsF64(&(*_self_)) * _1e257c39b_ReadF64(&_42726_x))));
				} else {
					_1e257cd5d_SetI64(&(*_self_), static_cast<jule::I64>((_1e257b8ea_ReadI64(&(*_self_)) * _1e257c610_AsI64(&_42726_x))));
				};
			}
		}
		else if (_1e257e007_IsU64(&(*_self_))) {
			_case_begin_1e4cab721:;
			{
				if (_1e257e744_IsF64(&_42726_x)) {
					_1e257d853_SetF64(&(*_self_), static_cast<jule::F64>((_1e257cad8_AsF64(&(*_self_)) * _1e257c39b_ReadF64(&_42726_x))));
				} else {
					_1e257d0d3_SetU64(&(*_self_), static_cast<jule::U64>((_1e257bb5e_ReadU64(&(*_self_)) * _1e257c874_AsU64(&_42726_x))));
				};
			}
		}
		else {
			_case_begin_1e4cab644:;
			{
				return false;
			}
		}
		_match_end_1e4caab71:;
	};
	return true;
}



inline jule::Bool _1e258215e_Div(_1e23b4a96_Const* _self_, _1e23b4a96_Const _45526_x) {
	{
		
		if (_1e257e744_IsF64(&(*_self_))) {
			_case_begin_1e4cb166b:;
			{
				jule::F64 _45817_l = _1e257cad8_AsF64(&_45526_x);;
				if ((_45817_l == 0LL)) {
					return false;
				};
				_1e257d853_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_1e257c39b_ReadF64(&(*_self_)),_45817_l)));
			}
		}
		else if (_1e257dc93_IsI64(&(*_self_))) {
			_case_begin_1e4cb0e2e:;
			{
				jule::F64 _46417_l = _1e257cad8_AsF64(&_45526_x);;
				if ((_46417_l == 0LL)) {
					return false;
				};
				_1e257d853_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_1e257cad8_AsF64(&(*_self_)),_46417_l)));
			}
		}
		else if (_1e257e007_IsU64(&(*_self_))) {
			_case_begin_1e4cb0e95:;
			{
				jule::F64 _47017_l = _1e257cad8_AsF64(&_45526_x);;
				if ((_47017_l == 0LL)) {
					return false;
				};
				_1e257d853_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_1e257cad8_AsF64(&(*_self_)),_47017_l)));
			}
		}
		else {
			_case_begin_1e4cb0db8:;
			{
				return false;
			}
		}
		_match_end_1e4cb03e5:;
	};
	return true;
}



inline jule::Bool _1e258246c_Mod(_1e23b4a96_Const* _self_, _1e23b4a96_Const _48426_x) {
	{
		
		if (_1e257dc93_IsI64(&(*_self_))) {
			_case_begin_1e4cb5e23:;
			{
				jule::I64 _48717_l = _1e257c610_AsI64(&_48426_x);;
				if ((_48717_l == 0LL)) {
					return false;
				};
				_1e257cd5d_SetI64(&(*_self_), static_cast<jule::I64>(jule::mod(_1e257b8ea_ReadI64(&(*_self_)),_48717_l)));
			}
		}
		else if (_1e257e007_IsU64(&(*_self_))) {
			_case_begin_1e4cb56e7:;
			{
				jule::U64 _49317_l = _1e257c874_AsU64(&_48426_x);;
				if ((_49317_l == 0LLU)) {
					return false;
				};
				_1e257d0d3_SetU64(&(*_self_), static_cast<jule::U64>(jule::mod(_1e257bb5e_ReadU64(&(*_self_)),_49317_l)));
			}
		}
		else {
			_case_begin_1e4cb5681:;
			{
				return false;
			}
		}
		_match_end_1e4cb55a4:;
	};
	return true;
}



inline jule::Bool _1e258277a_BitwiseAnd(_1e23b4a96_Const* _self_, _1e23b4a96_Const _50633_x) {
	{
		
		if (_1e257dc93_IsI64(&(*_self_))) {
			_case_begin_1e4cb9278:;
			{
				_1e257cd5d_SetI64(&(*_self_), static_cast<jule::I64>((_1e257b8ea_ReadI64(&(*_self_)) & _1e257c610_AsI64(&_50633_x))));
			}
		}
		else if (_1e257e007_IsU64(&(*_self_))) {
			_case_begin_1e4cb8a4c:;
			{
				_1e257d0d3_SetU64(&(*_self_), static_cast<jule::U64>((_1e257bb5e_ReadU64(&(*_self_)) & _1e257c874_AsU64(&_50633_x))));
			}
		}
		else {
			_case_begin_1e4cb89d6:;
			{
				return false;
			}
		}
		_match_end_1e4cb8909:;
	};
	return true;
}



inline jule::Bool _1e2582a88_BitwiseOr(_1e23b4a96_Const* _self_, _1e23b4a96_Const _52032_x) {
	{
		
		if (_1e257dc93_IsI64(&(*_self_))) {
			_case_begin_1e4cbb412:;
			{
				_1e257cd5d_SetI64(&(*_self_), static_cast<jule::I64>((_1e257b8ea_ReadI64(&(*_self_)) | _1e257c610_AsI64(&_52032_x))));
			}
		}
		else if (_1e257e007_IsU64(&(*_self_))) {
			_case_begin_1e4cbabd6:;
			{
				_1e257d0d3_SetU64(&(*_self_), static_cast<jule::U64>((_1e257bb5e_ReadU64(&(*_self_)) | _1e257c874_AsU64(&_52032_x))));
			}
		}
		else {
			_case_begin_1e4cbab70:;
			{
				return false;
			}
		}
		_match_end_1e4cbaa93:;
	};
	return true;
}



inline jule::Bool _1e2582d96_Xor(_1e23b4a96_Const* _self_, _1e23b4a96_Const _53426_x) {
	{
		
		if (_1e257dc93_IsI64(&(*_self_))) {
			_case_begin_1e4cbd59b:;
			{
				_1e257cd5d_SetI64(&(*_self_), static_cast<jule::I64>((_1e257b8ea_ReadI64(&(*_self_)) ^ _1e257c610_AsI64(&_53426_x))));
			}
		}
		else if (_1e257e007_IsU64(&(*_self_))) {
			_case_begin_1e4cbcd70:;
			{
				_1e257d0d3_SetU64(&(*_self_), static_cast<jule::U64>((_1e257bb5e_ReadU64(&(*_self_)) ^ _1e257c874_AsU64(&_53426_x))));
			}
		}
		else {
			_case_begin_1e4cbcd09:;
			{
				return false;
			}
		}
		_match_end_1e4cbcc2c:;
	};
	return true;
}



inline jule::Bool _1e25831a4_Lshift(_1e23b4a96_Const* _self_, _1e23b4a96_Const _54829_x) {
	{
		
		if (_1e257dc93_IsI64(&(*_self_))) {
			_case_begin_1e4cc0735:;
			{
				jule::I64 _55117_l = _1e257c610_AsI64(&(*_self_));;
				if ((_55117_l < 0LL)) {
					jule::U64 _55321_r = _1e257c874_AsU64(&_54829_x);;
					_1e257cd5d_SetI64(&(*_self_), static_cast<jule::I64>((_55117_l << _55321_r)));
				} else {
					_1e2583825_lshiftUnsig((*_self_),_54829_x);
				};
			}
		}
		else if (_1e257e007_IsU64(&(*_self_))) {
			_case_begin_1e4cc0009:;
			{
				_1e2583825_lshiftUnsig((*_self_),_54829_x);
			}
		}
		else {
			_case_begin_1e4cbee93:;
			{
				return false;
			}
		}
		_match_end_1e4cbedb6:;
	};
	return true;
}



inline jule::Bool _1e25834b2_Rshift(_1e23b4a96_Const* _self_, _1e23b4a96_Const _56829_x) {
	{
		
		if (_1e257dc93_IsI64(&(*_self_))) {
			_case_begin_1e4cc324e:;
			{
				jule::I64 _57117_l = _1e257c610_AsI64(&(*_self_));;
				if ((_57117_l < 0LL)) {
					jule::U64 _57321_r = _1e257c874_AsU64(&_56829_x);;
					_1e257cd5d_SetI64(&(*_self_), static_cast<jule::I64>((_57117_l >> _57321_r)));
				} else {
					_1e2583b22_rshiftUnsig((*_self_),_56829_x);
				};
			}
		}
		else if (_1e257e007_IsU64(&(*_self_))) {
			_case_begin_1e4cc2a23:;
			{
				_1e2583b22_rshiftUnsig((*_self_),_56829_x);
			}
		}
		else {
			_case_begin_1e4cc29ac:;
			{
				return false;
			}
		}
		_match_end_1e4cc28d0:;
	};
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1e23b4a96_Const _Src) {
	_Stream << "Const{";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2b90cab_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2ba0628_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e31c2144_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e2dbe8e1_set(_1e31c24a7_decimal* _self_, jule::Str _23322_s) {
	jule::Bool _23332_ok = jule::Bool();
	jule::I64 _23417_i = 0LL;;
	(*_self_)._field_neg=false;
	(*_self_)._field_trunc=false;
	if ((_23417_i >= _23322_s.len())) {
		return _23332_ok;
	};
	{
		
		if ((_23322_s[_23417_i] == '+')) {
			_case_begin_1e5313519:;
			{
				(_23417_i)++;
			}
		}
		else if ((_23322_s[_23417_i] == '-')) {
			_case_begin_1e5313580:;
			{
				(*_self_)._field_neg=true;
				(_23417_i)++;
			}
		}
		_match_end_1e5313371:;
	};
	jule::Bool _25117_sawdot = false;;
	jule::Bool _25217_sawdigits = false;;
	for (; (_23417_i < _23322_s.len()); (_23417_i)++) {
		{
			{
				
				if ((_23322_s[_23417_i] == '_')) {
					_case_begin_1e5315818:;
					{
						goto _iter_next_1e5315054;
					}
				}
				else if ((_23322_s[_23417_i] == '.')) {
					_case_begin_1e5315890:;
					{
						if (_25117_sawdot) {
							return _23332_ok;
						};
						_25117_sawdot=true;
						(*_self_)._field_dp=(*_self_)._field_nd;
						goto _iter_next_1e5315054;
					}
				}
				else if ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9'))) {
					_case_begin_1e5315917:;
					{
						_25217_sawdigits=true;
						if (((_23322_s[_23417_i] == '0') && ((*_self_)._field_nd == 0LL))) {
							((*_self_)._field_dp)--;
							goto _iter_next_1e5315054;
						};
						if (((*_self_)._field_nd < 800LL)) {
							(*_self_)._field_d[(*_self_)._field_nd]=_23322_s[_23417_i];
							((*_self_)._field_nd)++;
						} else if ((_23322_s[_23417_i] != '0')) {
							(*_self_)._field_trunc=true;
						};
						goto _iter_next_1e5315054;
					}
				}
				_match_end_1e53156d6:;
			};
			goto _iter_end_1e5315054;
		}
	_iter_next_1e5315054:;
	}
	_iter_end_1e5315054:;;
	if ((!(_25217_sawdigits))) {
		return _23332_ok;
	};
	if ((!(_25117_sawdot))) {
		(*_self_)._field_dp=(*_self_)._field_nd;
	};
	if (((_23417_i < _23322_s.len()) && (_1e2d2de49_lower(_23322_s[_23417_i]) == 'e'))) {
		(_23417_i)++;
		if ((_23417_i >= _23322_s.len())) {
			return _23332_ok;
		};
		jule::I64 _29721_esign = 1LL;;
		if ((_23322_s[_23417_i] == '+')) {
			(_23417_i)++;
		} else if ((_23322_s[_23417_i] == '-')) {
			(_23417_i)++;
			_29721_esign=-1LL;
		};
		if ((((_23417_i >= _23322_s.len()) || (_23322_s[_23417_i] < '0')) || (_23322_s[_23417_i] > '9'))) {
			return _23332_ok;
		};
		jule::I64 _30721_e = 0LL;;
		for (; ((_23417_i < _23322_s.len()) && ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9')) || (_23322_s[_23417_i] == '_'))); (_23417_i)++) {
			{
				if ((_23322_s[_23417_i] == '_')) {
					goto _iter_next_1e531d359;
				};
				if ((_30721_e < 10000LL)) {
					_30721_e=static_cast<jule::I64>((((_30721_e * 10LL) + static_cast<jule::I64>(_23322_s[_23417_i])) - '0'));
				};
			}
		_iter_next_1e531d359:;
		}
		_iter_end_1e531d359:;;
		(*_self_)._field_dp+=(_30721_e * _29721_esign);
	};
	if ((_23417_i != _23322_s.len())) {
		return _23332_ok;
	};
	_23332_ok=true;
	return _23332_ok;
}



inline std::tuple<jule::U64,jule::Bool> _1e2dd9565_floatBits(_1e31c24a7_decimal* _self_, _1e2b90cab_floatInfo& _32729_flt) {
	jule::U64 _32747_b = jule::U64();
	jule::Bool _32755_overflow = jule::Bool();
	jule::I64 _32817_exp = 0LL;;
	jule::U64 _32917_mant = 0LLU;;
	if (((*_self_)._field_nd == 0LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32729_flt._field_bias;
		goto _julec_label_out;
	};
	if (((*_self_)._field_dp > 310LL)) {
		goto _julec_label_overflow;
	};
	if (((*_self_)._field_dp < -330LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32729_flt._field_bias;
		goto _julec_label_out;
	};
	_32817_exp=0LL;
	while (((*_self_)._field_dp > 0LL)) {
		{
			jule::I64 _35421_n = 0LL;;
			if (((*_self_)._field_dp >= _1e2bd012a_powtab.len())) {
				_35421_n=27LL;
			} else {
				_35421_n=_1e2bd012a_powtab[(*_self_)._field_dp];
			};
			_1e31c27c6_shift(&(*_self_), static_cast<jule::I64>((-(_35421_n))));
			_32817_exp+=_35421_n;
		}
	_iter_next_1e5324d66:;
	}
	_iter_end_1e5324d66:;;
	while ((((*_self_)._field_dp < 0LL) || (((*_self_)._field_dp == 0LL) && ((*_self_)._field_d[0LL] < '5')))) {
		{
			jule::I64 _36421_n = 0LL;;
			if (((-((*_self_)._field_dp)) >= _1e2bd012a_powtab.len())) {
				_36421_n=27LL;
			} else {
				_36421_n=_1e2bd012a_powtab[(-((*_self_)._field_dp))];
			};
			_1e31c27c6_shift(&(*_self_), _36421_n);
			_32817_exp-=_36421_n;
		}
	_iter_next_1e5325570:;
	}
	_iter_end_1e5325570:;;
	(_32817_exp)--;
	if ((_32817_exp < (_32729_flt._field_bias + 1LL))) {
		jule::I64 _38117_n = ((_32729_flt._field_bias + 1LL) - _32817_exp);;
		_1e31c27c6_shift(&(*_self_), static_cast<jule::I64>((-(_38117_n))));
		_32817_exp+=_38117_n;
	};
	if (((_32817_exp - _32729_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) {
		goto _julec_label_overflow;
	};
	_1e31c27c6_shift(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>((1LL + _32729_flt._field_mantbits))));
	_32917_mant=static_cast<jule::U64>(_1e31c2c9e_roundedInteger(&(*_self_)));
	if ((_32917_mant == (2LLU << _32729_flt._field_mantbits))) {
		_32917_mant>>=1LLU;
		(_32817_exp)++;
		if (((_32817_exp - _32729_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) {
			goto _julec_label_overflow;
		};
	};
	if (((_32917_mant & (1LLU << _32729_flt._field_mantbits)) == 0LLU)) {
		_32817_exp=_32729_flt._field_bias;
	};
	goto _julec_label_out;
	_julec_label_overflow:;
	_32917_mant=0LLU;
	_32817_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << _32729_flt._field_expbits) - 1LLU) + static_cast<jule::U64>(_32729_flt._field_bias))));
	_32755_overflow=true;
	_julec_label_out:;
	jule::U64 _41717_bits = (_32917_mant & ((1LLU << _32729_flt._field_mantbits) - 1LLU));;
	_41717_bits|=(static_cast<jule::U64>(((_32817_exp - _32729_flt._field_bias) & static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) << _32729_flt._field_mantbits);
	if ((*_self_)._field_neg) {
		_41717_bits|=((1LLU << _32729_flt._field_mantbits) << _32729_flt._field_expbits);
	};
	_32747_b = _41717_bits;
	return std::make_tuple(_32747_b,_32755_overflow);
}



inline void _1e31c2694_assign(_1e31c24a7_decimal* _self_, jule::U64 _33029_v) {
	jule::Array<jule::U8,24> _33117_buf = jule::Array<jule::U8,24>();;
	jule::I64 _33417_n = 0LL;;
	while ((_33029_v > 0LLU)) {
		{
			jule::U64 _33617_v1 = (_33029_v / 10LLU);;
			_33029_v-=(10LLU * _33617_v1);
			_33117_buf[_33417_n]=static_cast<jule::U8>(static_cast<jule::U8>((_33029_v + '0')));
			(_33417_n)++;
			_33029_v=_33617_v1;
		}
	_iter_next_1e533851c:;
	}
	_iter_end_1e533851c:;;
	(*_self_)._field_nd=0LL;
	(_33417_n)--;
	for (; (_33417_n >= 0LL); (_33417_n)--) {
		{
			(*_self_)._field_d[(*_self_)._field_nd]=_33117_buf[_33417_n];
			((*_self_)._field_nd)++;
		}
	_iter_next_1e5339a07:;
	}
	_iter_end_1e5339a07:;;
	(*_self_)._field_dp=(*_self_)._field_nd;
	_1e31c3013_trim((*_self_));
}



inline void _1e31c27c6_shift(_1e31c24a7_decimal* _self_, jule::I64 _35528_k) {
	{
		
		if (((*_self_)._field_nd == 0LL)) {
			_case_begin_1e533b179:;
		}
		else if ((_35528_k > 0LL)) {
			_case_begin_1e533b201:;
			{
				while ((_35528_k > 60LL)) {
					{
						_1e31c33a9_leftShift((*_self_),60LLU);
						_35528_k-=60LL;
					}
				_iter_next_1e533b82d:;
				}
				_iter_end_1e533b82d:;;
				_1e31c33a9_leftShift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>(_35528_k)));
			}
		}
		else if ((_35528_k < 0LL)) {
			_case_begin_1e533b278:;
			{
				while ((_35528_k < -60LL)) {
					{
						_1e31c3145_rightShift((*_self_),60LLU);
						_35528_k+=60LL;
					}
				_iter_next_1e533c90b:;
				}
				_iter_end_1e533c90b:;;
				_1e31c3145_rightShift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>((-(_35528_k)))));
			}
		}
		_match_end_1e533b047:;
	};
}



inline void _1e31c2908_roundDown(_1e31c24a7_decimal* _self_, jule::I64 _37528_nd) {
	if (((_37528_nd < 0LL) || (_37528_nd >= (*_self_)._field_nd))) {
		return;;
	};
	(*_self_)._field_nd=_37528_nd;
	_1e31c3013_trim((*_self_));
}



inline void _1e31c2a3a_roundUp(_1e31c24a7_decimal* _self_, jule::I64 _38426_nd) {
	if (((_38426_nd < 0LL) || (_38426_nd >= (*_self_)._field_nd))) {
		return;;
	};
	jule::I64 _39017_i = (_38426_nd - 1LL);;
	for (; (_39017_i >= 0LL); (_39017_i)--) {
		{
			jule::U8 _39217_c = (*_self_)._field_d[_39017_i];;
			if ((_39217_c < '9')) {
				((*_self_)._field_d[_39017_i])++;
				(*_self_)._field_nd=static_cast<jule::I64>((_39017_i + 1LL));
				return;;
			};
		}
	_iter_next_1e5340ba6:;
	}
	_iter_end_1e5340ba6:;;
	(*_self_)._field_d[0LL]='1';
	(*_self_)._field_nd=1LL;
	((*_self_)._field_dp)++;
}



inline void _1e31c2b6c_round(_1e31c24a7_decimal* _self_, jule::I64 _41124_nd) {
	if (((_41124_nd < 0LL) || (_41124_nd >= (*_self_)._field_nd))) {
		return;;
	};
	if (_1e31c3640_shouldRoundUp((*_self_),_41124_nd)) {
		_1e31c2a3a_roundUp(&(*_self_), _41124_nd);
	} else {
		_1e31c2908_roundDown(&(*_self_), _41124_nd);
	};
}



inline jule::U64 _1e31c2c9e_roundedInteger(_1e31c24a7_decimal* _self_) {
	if (((*_self_)._field_dp > 20LL)) {
		return jule::MAX_U64;
	};
	jule::I64 _42817_i = 0LL;;
	jule::U64 _42917_n = 0LLU;;
	for (; ((_42817_i < (*_self_)._field_dp) && (_42817_i < (*_self_)._field_nd)); (_42817_i)++) {
		{
			_42917_n=static_cast<jule::U64>(((_42917_n * 10LLU) + static_cast<jule::U64>(((*_self_)._field_d[_42817_i] - '0'))));
		}
	_iter_next_1e53439de:;
	}
	_iter_end_1e53439de:;;
	for (; (_42817_i < (*_self_)._field_dp); (_42817_i)++) {
		{
			_42917_n*=10LLU;
		}
	_iter_next_1e5346580:;
	}
	_iter_end_1e5346580:;;
	if (_1e31c3640_shouldRoundUp((*_self_),(*_self_)._field_dp)) {
		(_42917_n)++;
	};
	return _42917_n;
}







std::ostream &operator<<(std::ostream &_Stream, _1e31c24a7_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e250d4d6_FieldIns> _1e24d7180_instance(jule::Ptr<_1e24e8339_Field> _self_) {
	return jule::new_ptr<_1e250d4d6_FieldIns>(_1e250d4d6_FieldIns{._field_Decl=_self_, });
}







std::ostream &operator<<(std::ostream &_Stream, _1e24e8339_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2507799_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e253220d_StructIns> _1e24dd274_instance(jule::Ptr<_1e2505d6e_Struct> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];
	};
	jule::Ptr<_1e253220d_StructIns> _9917_ins = jule::new_ptr<_1e253220d_StructIns>(_1e253220d_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_1e250d4d6_FieldIns>>::alloc(0LL,_self_.get()._field_Fields.len()), ._field_Refers=static__1e25921e6_new(), });;
	{
		auto &expr = _self_.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1e56258a3:;
		if (it != expr.end()) {
			jule::Ptr<_1e24e8339_Field> _10521_f = *it;
			{
				_9917_ins.get()._field_Fields = jule::alloc_for_append(_9917_ins.get()._field_Fields,1);_9917_ins.get()._field_Fields.__push(_1e24d7180_instance(_10521_f));;
				if ((((!(_10521_f.get()._field_Mutable)) && (_10521_f.get()._field_Kind.get()._field_Kind != nullptr)) && _1e31362a6_Mutable(_10521_f.get()._field_Kind.get()._field_Kind.ptr()))) {
					_9917_ins.get()._field_Mutable=true;
				};
			}
			_iter_next_1e56258a3:;
			++it;
			goto _iter_begin_1e56258a3;
		}
		_iter_end_1e56258a3:;
	};
	if ((_self_.get()._field_Generics.len() == 0LL)) {
		_9917_ins.get()._field_Methods=_self_.get()._field_Methods;
	} else {
		_9917_ins.get()._field_Methods=jule::Slice<jule::Ptr<_1e258b344_Fn>>::alloc(0LL,_self_.get()._field_Methods.len());
		{
			auto &expr = _self_.get()._field_Methods;
			auto it = expr.begin();
			_iter_begin_1e5628b09:;
			if (it != expr.end()) {
				jule::Ptr<_1e258b344_Fn> _11625_f = *it;
				{
					jule::Ptr<_1e258b344_Fn> _11725_fins = jule::new_ptr<_1e258b344_Fn>((*(_11625_f)));;
					_11725_fins.get()._field_Instances=nullptr;
					_9917_ins.get()._field_Methods = jule::alloc_for_append(_9917_ins.get()._field_Methods,1);_9917_ins.get()._field_Methods.__push(_11725_fins);;
				}
				_iter_next_1e5628b09:;
				++it;
				goto _iter_begin_1e5628b09;
			}
			_iter_end_1e5628b09:;
		};
	};
	return _9917_ins;
}



inline jule::Ptr<_1e253220d_StructIns> _1e24e24dc_appendInstance(_1e2505d6e_Struct* _self_, jule::Ptr<_1e253220d_StructIns>& _12838_ins) {
	if ((((*_self_)._field_Generics.len() == 0LL) && ((*_self_)._field_Instances.len() == 1LL))) {
		return (*_self_)._field_Instances[0LL];
	};
	{
		auto &expr = (*_self_)._field_Instances;
		auto it = expr.begin();
		_iter_begin_1e562b0a1:;
		if (it != expr.end()) {
			jule::Ptr<_1e253220d_StructIns> _13421_ains = *it;
			{
				if (_1e250b01c_Same(_13421_ains.ptr(), _12838_ins)) {
					return _13421_ains;
				};
			}
			_iter_next_1e562b0a1:;
			++it;
			goto _iter_begin_1e562b0a1;
		}
		_iter_end_1e562b0a1:;
	};
	(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
	return nullptr;
}



inline jule::Ptr<_1e258b344_Fn> _1e24e528c_FindMethod(_1e2505d6e_Struct* _self_, jule::Str _14633_ident, jule::Bool _14645_statically) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1e562c602:;
		if (it != expr.end()) {
			jule::Ptr<_1e258b344_Fn> _14721_f = *it;
			{
				if (((_14721_f.get()._field_Statically == _14645_statically) && (_14721_f.get()._field_Ident == _14633_ident))) {
					return _14721_f;
				};
			}
			_iter_next_1e562c602:;
			++it;
			goto _iter_begin_1e562c602;
		}
		_iter_end_1e562c602:;
	};
	return nullptr;
}



inline jule::Ptr<_1e322a147_Var> _1e24e629e_FindStatic(_1e2505d6e_Struct* _self_, jule::Str _15733_ident) {
	{
		auto &expr = (*_self_)._field_Statics;
		auto it = expr.begin();
		_iter_begin_1e562d834:;
		if (it != expr.end()) {
			jule::Ptr<_1e322a147_Var> _15821_v = *it;
			{
				if ((_15821_v.get()._field_Ident == _15733_ident)) {
					return _15821_v;
				};
			}
			_iter_next_1e562d834:;
			++it;
			goto _iter_begin_1e562d834;
		}
		_iter_end_1e562d834:;
	};
	return nullptr;
}



inline jule::Ptr<_1e24e8339_Field> _1e24e56dd_FindField(_1e2505d6e_Struct* _self_, jule::Str _16832_ident) {
	{
		auto &expr = (*_self_)._field_Fields;
		auto it = expr.begin();
		_iter_begin_1e562e7be:;
		if (it != expr.end()) {
			jule::Ptr<_1e24e8339_Field> _16921_f = *it;
			{
				if ((_16921_f.get()._field_Ident == _16832_ident)) {
					return _16921_f;
				};
			}
			_iter_next_1e562e7be:;
			++it;
			goto _iter_begin_1e562e7be;
		}
		_iter_end_1e562e7be:;
	};
	return nullptr;
}



inline jule::Bool _1e24e79ba_IsImplements(_1e2505d6e_Struct* _self_, jule::Ptr<_1e259d246_Trait> _17831_t) {
	{
		auto &expr = (*_self_)._field_Implements;
		auto it = expr.begin();
		_iter_begin_1e562ec97:;
		if (it != expr.end()) {
			jule::Ptr<_1e259d246_Trait> &_17916_it = *it;
			{
				if ((_17831_t == _17916_it)) {
					return true;
				};
			}
			_iter_next_1e562ec97:;
			++it;
			goto _iter_begin_1e562ec97;
		}
		_iter_end_1e562ec97:;
	};
	return false;
}



inline jule::Bool _1e24e6dc6_IsDerives(_1e2505d6e_Struct* _self_, jule::Str _18828_ident) {
	{
		auto &expr = (*_self_)._field_Directives;
		auto it = expr.begin();
		_iter_begin_1e5630ca9:;
		if (it != expr.end()) {
			jule::Ptr<_1e24d1e8d_Directive> &_18916_d = *it;
			{
				if ((_18916_d.get()._field_Tag.get()._field_Kind == jule::Str("derive", 6))) {
					if (((_18916_d.get()._field_Args.len() == 1LL) && (_18916_d.get()._field_Args[0LL].get()._field_Kind == _18828_ident))) {
						return true;
					};
				};
			}
			_iter_next_1e5630ca9:;
			++it;
			goto _iter_begin_1e5630ca9;
		}
		_iter_end_1e5630ca9:;
	};
	return false;
}



inline jule::Bool _1e24eab77_IsUses(_1e2505d6e_Struct* _self_, jule::Ptr<_1e2505d6e_Struct> _20025_s) {
	{
		auto &expr = (*_self_)._field_Uses;
		auto it = expr.begin();
		_iter_begin_1e563355e:;
		if (it != expr.end()) {
			jule::Ptr<_1e2505d6e_Struct> &_20116_u = *it;
			{
				while ((_20025_s == _20116_u)) {
					{
						return true;
					}
				_iter_next_1e5633d12:;
				}
				_iter_end_1e5633d12:;;
			}
			_iter_next_1e563355e:;
			++it;
			goto _iter_begin_1e563355e;
		}
		_iter_end_1e563355e:;
	};
	return false;
}



inline jule::Bool _1e24eb33c_HasRefAccessible(_1e2505d6e_Struct* _self_) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1e5634010:;
		if (it != expr.end()) {
			jule::Ptr<_1e258b344_Fn> &_21116_m = *it;
			{
				if (((_21116_m.get()._field_Params.len() > 0LL) && _1e258a398_IsRef(_21116_m.get()._field_Params[0LL].ptr()))) {
					return true;
				};
			}
			_iter_next_1e5634010:;
			++it;
			goto _iter_begin_1e5634010;
		}
		_iter_end_1e5634010:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2505d6e_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e250d4d6_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2583c87_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2583e74_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2584161_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e258434d_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e258453a_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2584727_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2584914_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2584b01_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2584cdd_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2584eca_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e25851b7_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e25853a4_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2585591_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e258577d_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e258596a_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2585d88_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2586075_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2586262_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e258644e_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e258663b_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2586828_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2586a15_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2586c02_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2586dde_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e25870cb_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e25872b8_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e25874a5_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2587692_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e258787e_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2587a6b_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2587c58_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2585b57_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e25883b8_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e25885a5_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2588792_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e258897e_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2588b6b_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2589331_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e258d126_ParamIns> _1e2589dc0_instance(jule::Ptr<_1e2589a07_Param> _self_) {
	return jule::new_ptr<_1e258d126_ParamIns>(_1e258d126_ParamIns{._field_Decl=_self_, });
}



inline jule::Bool _1e258a134_IsSelf(_1e2589a07_Param* _self_) {
	return (((*_self_)._field_Ident == jule::Str("&self", 5)) || ((*_self_)._field_Ident == jule::Str("self", 4)));
}



inline jule::Bool _1e258a398_IsRef(_1e2589a07_Param* _self_) {
	return ((!((*_self_)._field_Ident.empty())) && ((*_self_)._field_Ident[0LL] == '&'));
}







std::ostream &operator<<(std::ostream &_Stream, _1e2589a07_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e258b7a6_IsVoid(_1e258b344_Fn* _self_) {
	return ((*_self_)._field_Result == nullptr);
}



inline jule::Bool _1e258ba1a_IsMethod(_1e258b344_Fn* _self_) {
	return ((*_self_)._field_Owner != nullptr);
}



inline jule::Bool _1e258bc7e_IsEntryPoint(_1e258b344_Fn* _self_) {
	return ((*_self_)._field_Ident == jule::Str("main", 4));
}



inline jule::Bool _1e258bee3_IsInit(_1e258b344_Fn* _self_) {
	return ((*_self_)._field_Ident == jule::Str("init", 4));
}



inline jule::Bool _1e258c257_IsAnon(_1e258b344_Fn* _self_) {
	return _1d42b6e18_IsAnonIdent((*_self_)._field_Ident);
}



inline jule::Bool _1e258c4bb_AnyVar(_1e258b344_Fn* _self_) {
	return (((*_self_)._field_Result != nullptr) && ((*_self_)._field_Result.get()._field_Idents.len() > 0LL));
}



inline jule::Ptr<_1e258dee5_FnIns> _1e258c730_instanceForce(jule::Ptr<_1e258b344_Fn> _self_) {
	jule::Ptr<_1e258dee5_FnIns> _10017_ins = jule::new_ptr<_1e258dee5_FnIns>(_1e258dee5_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_1e31d6c3b_Scope>(), ._field_Refers=static__1e25921e6_new(), });;
	_10017_ins.get()._field_Params=jule::Slice<jule::Ptr<_1e258d126_ParamIns>>::alloc(0LL,_self_.get()._field_Params.len());
	{
		auto &expr = _self_.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1e5647892:;
		if (it != expr.end()) {
			jule::Ptr<_1e2589a07_Param> _10721_p = *it;
			{
				_10017_ins.get()._field_Params = jule::alloc_for_append(_10017_ins.get()._field_Params,1);_10017_ins.get()._field_Params.__push(_1e2589dc0_instance(_10721_p));;
			}
			_iter_next_1e5647892:;
			++it;
			goto _iter_begin_1e5647892;
		}
		_iter_end_1e5647892:;
	};
	if ((_10017_ins.get()._field_Decl.get()._field_Result != nullptr)) {
		_10017_ins.get()._field_Result=_10017_ins.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Kind;
	};
	return _10017_ins;
}



inline jule::Ptr<_1e258dee5_FnIns> _1e258c994_instance(jule::Ptr<_1e258b344_Fn> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];
	};
	return _1e258c730_instanceForce(_self_);
}



inline jule::Ptr<_1e258dee5_FnIns> _1e258cc6e_appendInstance(_1e258b344_Fn* _self_, jule::Ptr<_1e258dee5_FnIns>& _12838_ins) {
	if (((*_self_)._field_Generics.len() == 0LL)) {
		if (((*_self_)._field_Instances.len() == 1LL)) {
			return (*_self_)._field_Instances[0LL];
		};
		(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
		return nullptr;
	};
	if (((*_self_)._field_Instances.len() == 0LL)) {
		(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_Instances;
		auto it = expr.begin();
		_iter_begin_1e564b940:;
		if (it != expr.end()) {
			jule::Ptr<_1e258dee5_FnIns> _14421_ains = *it;
			{
				if (_1e25908ed_Same(_14421_ains.ptr(), _12838_ins)) {
					return _14421_ains;
				};
			}
			_iter_next_1e564b940:;
			++it;
			goto _iter_begin_1e564b940;
		}
		_iter_end_1e564b940:;
	};
	(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1e258b344_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e258d500_Str(_1e258d126_ParamIns* _self_) {
	jule::Str _16617_s = jule::Str();;
	if ((*_self_)._field_Decl.get()._field_Mutable) {
		_16617_s+=jule::Str("mut ", 4);
	};
	if ((*_self_)._field_Decl.get()._field_Reference) {
		_16617_s+=jule::Str("&_:", 3);
	};
	if (_1e258a134_IsSelf((*_self_)._field_Decl.ptr())) {
		if (_1e258a398_IsRef((*_self_)._field_Decl.ptr())) {
			_16617_s+=jule::Str("&", 1);
		};
		_16617_s+=jule::Str("self", 4);
		return _16617_s;
	};
	if ((*_self_)._field_Decl.get()._field_Variadic) {
		_16617_s+=jule::Str("...", 3);
	};
	if (((*_self_)._field_Kind != nullptr)) {
		_16617_s+=_1e31352a5_Str((*_self_)._field_Kind.ptr());
	};
	return _16617_s;
}







std::ostream &operator<<(std::ostream &_Stream, _1e258d126_ParamIns _Src) {
	_Stream << "ParamIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e258e325_Str(_1e258dee5_FnIns* _self_) {
	;
	return _1e2590c0b_GetKindStr(&(*_self_), false);
}



inline jule::Bool _1e258e633_Equals(jule::Ptr<_1e258dee5_FnIns> _self_, jule::Ptr<_1e3134da9_TypeKind> _21726_other) {
	jule::Ptr<_1e258dee5_FnIns> _21813_f = _1e31381a9_Fn(_21726_other.ptr());;
	if ((_21813_f == nullptr)) {
		return false;
	};
	return _1e258ea95_EqualsFn(_self_, _21813_f);
}



inline jule::Bool _1e258ea95_EqualsFn(jule::Ptr<_1e258dee5_FnIns> _self_, jule::Ptr<_1e258dee5_FnIns>& _22829_f) {
	if ((_self_.get()._field_Decl.get()._field_Exceptional != _22829_f.get()._field_Decl.get()._field_Exceptional)) {
		return false;
	};
	if ((_self_.get()._field_Decl.get()._field_Unsafety != _22829_f.get()._field_Decl.get()._field_Unsafety)) {
		return false;
	};
	if ((_1e258b7a6_IsVoid(_self_.get()._field_Decl.ptr()) != _1e258b7a6_IsVoid(_22829_f.get()._field_Decl.ptr()))) {
		return false;
	};
	jule::Fn<jule::Bool(jule::Ptr<_1e258d126_ParamIns>,jule::Ptr<_1e258d126_ParamIns>)> _23813_checkParams = jule::Fn<jule::Bool(jule::Ptr<_1e258d126_ParamIns>,jule::Ptr<_1e258d126_ParamIns>)>([=](jule::Ptr<_1e258d126_ParamIns> _23830_p1, jule::Ptr<_1e258d126_ParamIns> _23845_p2) mutable -> jule::Bool {
		if ((_23830_p1.get()._field_Decl.get()._field_Mutable != _23845_p2.get()._field_Decl.get()._field_Mutable)) {
			return false;
		};
		if (_1e258a134_IsSelf(_23830_p1.get()._field_Decl.ptr())) {
			if ((!(_1e258a134_IsSelf(_23845_p2.get()._field_Decl.ptr())))) {
				return false;
			};
			if ((_1e258a398_IsRef(_23830_p1.get()._field_Decl.ptr()) != _1e258a398_IsRef(_23845_p2.get()._field_Decl.ptr()))) {
				return false;
			};
			return true;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Reference != _23845_p2.get()._field_Decl.get()._field_Reference)) {
			return false;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Variadic != _23845_p2.get()._field_Decl.get()._field_Variadic)) {
			return false;
		};
		return _1e31355b3_Equals(_23830_p1.get()._field_Kind, _23845_p2.get()._field_Kind);
	});;
	if ((_22829_f.get()._field_Params.len() != _self_.get()._field_Params.len())) {
		return false;
	};
	jule::I64 _27017_i = 0LL;;
	for (; (_27017_i < _self_.get()._field_Params.len()); (_27017_i)++) {
		{
			if ((!(_23813_checkParams(_self_.get()._field_Params[_27017_i],_22829_f.get()._field_Params[_27017_i])))) {
				return false;
			};
		}
	_iter_next_1e565a2de:;
	}
	_iter_end_1e565a2de:;;
	if ((!(_1e258b7a6_IsVoid(_self_.get()._field_Decl.ptr())))) {
		if ((!(_1e31355b3_Equals(_self_.get()._field_Result, _22829_f.get()._field_Result)))) {
			return false;
		};
	};
	return true;
}



inline jule::Bool _1e258eda3_equalsTrait(jule::Ptr<_1e258dee5_FnIns> _self_, jule::Ptr<_1e258dee5_FnIns>& _28728_other) {
	if ((!(_1e258ea95_EqualsFn(_self_, _28728_other)))) {
		return false;
	};
	if ((_self_.get()._field_Decl.get()._field_Generics.len() != _28728_other.get()._field_Decl.get()._field_Generics.len())) {
		return false;
	};
	return true;
}



inline jule::Slice<jule::Ptr<_1e3134da9_TypeKind>> _1e2590117_Types(_1e258dee5_FnIns* _self_) {
	{
		
		if (((*_self_)._field_Result == nullptr)) {
			_case_begin_1e565d930:;
			{
				return nullptr;
			}
		}
		else if ((_1e3138b5a_Tup((*_self_)._field_Result.ptr()) == nullptr)) {
			_case_begin_1e565d996:;
			{
				return jule::Slice<jule::Ptr<_1e3134da9_TypeKind>>::make({(*_self_)._field_Result});
			}
		}
		else {
			_case_begin_1e565d8b9:;
			{
				return _1e3138b5a_Tup((*_self_)._field_Result.ptr()).get()._field_Types;
			}
		}
		_match_end_1e565d7dc:;
	};
}



inline jule::Bool _1e259037b_IsBuiltin(_1e258dee5_FnIns* _self_) {
	return ((*_self_)._field_caller != nullptr);
}



inline jule::Bool _1e25905e0_IsAnon(_1e258dee5_FnIns* _self_) {
	return ((*_self_)._field_Anon || (((*_self_)._field_Decl != nullptr) && _1e258c257_IsAnon((*_self_)._field_Decl.ptr())));
}



inline jule::Bool _1e25908ed_Same(_1e258dee5_FnIns* _self_, jule::Ptr<_1e258dee5_FnIns> _32423_f) {
	if ((((*_self_)._field_Decl != _32423_f.get()._field_Decl) || (_32423_f.get()._field_Generics.len() != (*_self_)._field_Generics.len()))) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_Generics;
		auto it = expr.begin();
		_iter_begin_1e5662307:;
		if (it != expr.end()) {
			jule::I64 _32913_i = it - expr.begin();
			jule::Ptr<_1e313367c_InsGeneric> &_32916_g = *it;
			{
				if ((!(_1e31355b3_Equals(_32916_g.get()._field_Kind, _32423_f.get()._field_Generics[_32913_i].get()._field_Kind)))) {
					return false;
				};
			}
			_iter_next_1e5662307:;
			++it;
			_32913_i++;
			goto _iter_begin_1e5662307;
		}
		_iter_end_1e5662307:;
	};
	return true;
}



inline jule::Str _1e2590c0b_GetKindStr(_1e258dee5_FnIns* _self_, jule::Bool _34029_ident) {
	jule::Str _34117_s = jule::Str();;
	if ((*_self_)._field_Decl.get()._field_Unsafety) {
		_34117_s+=jule::Str("unsafe ", 7);
	};
	_34117_s+=jule::Str("fn", 2);
	if ((_34029_ident && ((*_self_)._field_Decl != nullptr))) {
		_34117_s+=(jule::Str(" ", 1) + (*_self_)._field_Decl.get()._field_Ident);
	};
	_34117_s+=jule::Str("(", 1);
	jule::I64 _35413_n = (*_self_)._field_Params.len();;
	if ((_35413_n > 0LL)) {
		{
			auto &expr = (*_self_)._field_Params;
			auto it = expr.begin();
			_iter_begin_1e5666295:;
			if (it != expr.end()) {
				jule::Ptr<_1e258d126_ParamIns> &_35620_p = *it;
				{
					_34117_s+=_1e258d500_Str(_35620_p.ptr());
					_34117_s+=jule::Str(",", 1);
				}
				_iter_next_1e5666295:;
				++it;
				goto _iter_begin_1e5666295;
			}
			_iter_end_1e5666295:;
		};
		(_34117_s).mut_slice(0LL,(_34117_s.len() - 1LL));;
	};
	_34117_s+=jule::Str(")", 1);
	if ((*_self_)._field_Decl.get()._field_Exceptional) {
		_34117_s+=jule::Str("!", 1);
	};
	if ((!(_1e258b7a6_IsVoid((*_self_)._field_Decl.ptr())))) {
		_34117_s+=jule::Str(":", 1);
		_34117_s+=_1e31352a5_Str((*_self_)._field_Result.ptr());
	};
	return _34117_s;
}







std::ostream &operator<<(std::ostream &_Stream, _1e258dee5_FnIns _Src) {
	_Stream << "FnIns{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Anon:" << _Src._field_Anon << ", ";
	_Stream << "caller:" << _Src._field_caller << ", ";
	_Stream << "reloaded:" << _Src._field_reloaded;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e2591e60_ReferenceStack> static__1e25921e6_new(void) {
	return jule::new_ptr<_1e2591e60_ReferenceStack>(_1e2591e60_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL,10LL)});
}



inline jule::I64 _1e259257b_Len(_1e2591e60_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*_self_)._field_buffer.len());
}



inline jule::Any _1e2592889_At(_1e2591e60_ReferenceStack* _self_, jule::I64 _6825_i) {
	return jule::Any((*_self_)._field_buffer[_6825_i]);
}



inline void _1e2592b0e_Push(_1e2591e60_ReferenceStack* _self_, jule::Any _7331_ref) {
	(*_self_)._field_buffer = jule::alloc_for_append((*_self_)._field_buffer,1);(*_self_)._field_buffer.__push(jule::Any(_7331_ref));;
}



inline jule::Bool _1e5c52c7c_Exist(_1e2591e60_ReferenceStack* _self_, jule::Ptr<_1e258dee5_FnIns> _7827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1e5c54069:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7827_t)) {
					return true;
				};
			}
			_iter_next_1e5c54069:;
			++it;
			goto _iter_begin_1e5c54069;
		}
		_iter_end_1e5c54069:;
	};
	return false;
}

inline jule::Bool _1e5c67577_Exist(_1e2591e60_ReferenceStack* _self_, jule::Ptr<_1e322a147_Var> _7827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1e5c68820:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7827_t)) {
					return true;
				};
			}
			_iter_next_1e5c68820:;
			++it;
			goto _iter_begin_1e5c68820;
		}
		_iter_end_1e5c68820:;
	};
	return false;
}

inline jule::Bool _1e5d0c034_Exist(_1e2591e60_ReferenceStack* _self_, jule::Ptr<_1e253220d_StructIns> _7827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1e5d0d321:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7827_t)) {
					return true;
				};
			}
			_iter_next_1e5d0d321:;
			++it;
			goto _iter_begin_1e5d0d321;
		}
		_iter_end_1e5d0d321:;
	};
	return false;
}

inline jule::Bool _1e60836a6_Exist(_1e2591e60_ReferenceStack* _self_, jule::Ptr<_1e259d246_Trait> _7827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1e608494e:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7827_t)) {
					return true;
				};
			}
			_iter_next_1e608494e:;
			++it;
			goto _iter_begin_1e608494e;
		}
		_iter_end_1e608494e:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1e2591e60_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e25932c4_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e259776d_symbolBuilder> _1e2597c24_getRoot(jule::Ptr<_1e259776d_symbolBuilder> _self_) {
	jule::Ptr<_1e259776d_symbolBuilder> _31617_root = _self_;;
	while ((_31617_root.get()._field_owner != nullptr)) {
		{
			_31617_root=_31617_root.get()._field_owner;
		}
	_iter_next_1e567e753:;
	}
	_iter_end_1e567e753:;;
	return _31617_root;
}



inline void _1e25980dc_pushErr(_1e259776d_symbolBuilder* _self_, jule::Ptr<_1d42b43cc_Token>& _32327_token, jule::Str _32342_fmt, jule::Slice<jule::Any> _32355_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1e320bd4e_compilerErr(_32327_token,true,_32342_fmt,jule::Any(_32355_args)));;
}



inline void _1e25984a5_pushErrText(_1e259776d_symbolBuilder* _self_, jule::Ptr<_1d42b43cc_Token>& _32731_token, jule::Str _32746_fmt, jule::Slice<jule::Any> _32759_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1e320bd4e_compilerErr(_32731_token,false,_32746_fmt,jule::Any(_32759_args)));;
}



inline void _1e25987c4_pushSuggestion(_1e259776d_symbolBuilder* _self_, jule::Str _33233_fmt, jule::Slice<jule::Any> _33246_args) {
	{
		_1e320d2d4_pushSugggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_33233_fmt,jule::Any(_33246_args));
	};
}



inline jule::Bool _1e2598b7b_checkCppUseDeclPath(_1e259776d_symbolBuilder* _self_, jule::Ptr<_1e252d1c6_UseDecl>& _33639_decl, jule::Str _33655_path) {
	jule::Bool _33668_ok = jule::Bool();
	jule::Str _33713_ext = _20a1b135d_Ext(_33655_path);;
	if (((!(_20a347ea6_IsValidHeaderExt(_33713_ext))) && (!(_20a34824d_IsValidCppExt(_33713_ext))))) {
		_1e25980dc_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>::make({jule::Any(_33713_ext)}));
		_33668_ok = false;
		return _33668_ok;
	};
	jule::Ptr<_2163c2d9e_Status> _34413_info = ({
		auto except = static__20a1b1eda_Of(_33655_path);
		(except.ok()) ? (except.result) : ({{
			_1e25980dc_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_33639_decl.get()._field_LinkPath)}));
			_33668_ok = false;
			return _33668_ok;
		} jule::Ptr<_2163c2d9e_Status>();});
	});;
	if (_2162d1a05_IsDir(_34413_info.ptr())) {
		_1e25980dc_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_33639_decl.get()._field_LinkPath)}));
		_33668_ok = false;
		return _33668_ok;
	};
	_33668_ok = true;
	return _33668_ok;
}



inline jule::Ptr<_1e320561c_ImportInfo> _1e2598e56_buildCppHeaderImport(_1e259776d_symbolBuilder* _self_, jule::Ptr<_1e252d1c6_UseDecl>& _35644_decl) {
	jule::Str _35717_path = _35644_decl.get()._field_LinkPath;;
	if ((!(_20a347c42_IsStdHeaderPath(_35644_decl.get()._field_LinkPath)))) {
		_35717_path=_20a1b122b_Join(jule::Slice<jule::Str>::make({_1d42ba15d_Dir(_35644_decl.get()._field_Token.get()._field_File.ptr()),_35644_decl.get()._field_LinkPath}));
		jule::Bool _36121_ok = _1e2598b7b_checkCppUseDeclPath(&(*_self_), _35644_decl,_35717_path);;
		if ((!(_36121_ok))) {
			return nullptr;
		};
		std::tie(_35717_path,_36121_ok) = _20a1b1490_Abs(_35717_path);
		if ((!(_36121_ok))) {
			_1e25980dc_pushErr(&(*_self_), _35644_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_35644_decl.get()._field_LinkPath)}));
		};
	};
	return jule::new_ptr<_1e320561c_ImportInfo>(_1e320561c_ImportInfo{._field_Token=_35644_decl.get()._field_Token, ._field_Path=_35717_path, ._field_LinkPath=_35644_decl.get()._field_LinkPath, ._field_Ident=jule::Str(), ._field_CppLinked=true, ._field_Std=false, ._field_Package=nullptr, });
}



inline jule::Ptr<_1e320561c_ImportInfo> _1e2599264_buildStdImport(_1e259776d_symbolBuilder* _self_, jule::Ptr<_1e252d1c6_UseDecl>& _38438_decl) {
	jule::Str _38517_path = _38438_decl.get()._field_LinkPath.slice(5LL);;
	_38517_path=_20a1ae79b_Replace(_38517_path,jule::Str("::", 2),static_cast<jule::Str>(92LL),-1LL);
	_38517_path=_20a1b122b_Join(jule::Slice<jule::Str>::make({_20a3768ec_PathStdlib,_38517_path}));
	jule::Bool _38820_ok;;
	std::tie(_38517_path,_38820_ok) = _20a1b1490_Abs(_38517_path);
	if ((!(_38820_ok))) {
		_1e25980dc_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath)}));
		return nullptr;
	};
	jule::Ptr<_2163c2d9e_Status> _39513_info = ({
		auto except = static__20a1b1eda_Of(_38517_path);
		(except.ok()) ? (except.result) : ({{
			_1e25980dc_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath)}));
			return nullptr;
		} jule::Ptr<_2163c2d9e_Status>();});
	});;
	if ((!(_2162d1a05_IsDir(_39513_info.ptr())))) {
		_1e25980dc_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath)}));
		return nullptr;
	};
	jule::I64 _40513_i = (_20a110a60_FindLast(_38438_decl.get()._field_LinkPath,jule::Str("::", 2)) + 1LL);;
	jule::Str _40613_ident = _38438_decl.get()._field_LinkPath.slice(_40513_i);;
	return jule::new_ptr<_1e320561c_ImportInfo>(_1e320561c_ImportInfo{._field_Token=_38438_decl.get()._field_Token, ._field_Path=_38517_path, ._field_LinkPath=_38438_decl.get()._field_LinkPath, ._field_Ident=_40613_ident, ._field_Alias=_38438_decl.get()._field_Alias, ._field_CppLinked=false, ._field_Std=true, ._field_ImportAll=_38438_decl.get()._field_Full, ._field_Package=jule::new_ptr<_1e3208576_Package>(_1e3208576_Package{._field_Files=nullptr}), });
}



inline jule::Ptr<_1e320561c_ImportInfo> _1e2599572_buildIdentImport(jule::Ptr<_1e259776d_symbolBuilder> _self_, jule::Ptr<_1e252d1c6_UseDecl>& _42341_decl) {
	jule::Str _42413_modPath = _1e3202d89_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e3201eed_GetModPath(_self_.get()._field_importer);;
	if ((_42413_modPath.len() == 0LL)) {
		_1e25980dc_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("no module file found in current directory or any parent directory", 65),jule::Slice<jule::Any>());
		_1e25987c4_pushSuggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Str _43117_path = _42341_decl.get()._field_LinkPath;;
	_43117_path=_20a1ae79b_Replace(_43117_path,jule::Str("::", 2),static_cast<jule::Str>(92LL),-1LL);
	_43117_path=_20a1b122b_Join(jule::Slice<jule::Str>::make({_42413_modPath,_43117_path}));
	jule::Bool _43520_ok;;
	std::tie(_43117_path,_43520_ok) = _20a1b1490_Abs(_43117_path);
	if ((!(_43520_ok))) {
		_1e25980dc_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath)}));
		return nullptr;
	};
	jule::Ptr<_2163c2d9e_Status> _44213_info = ({
		auto except = static__20a1b1eda_Of(_43117_path);
		(except.ok()) ? (except.result) : ({{
			_1e25980dc_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath)}));
			return nullptr;
		} jule::Ptr<_2163c2d9e_Status>();});
	});;
	if ((!(_2162d1a05_IsDir(_44213_info.ptr())))) {
		_1e25980dc_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath)}));
		return nullptr;
	};
	jule::I64 _45213_i = (_20a110a60_FindLast(_42341_decl.get()._field_LinkPath,jule::Str("::", 2)) + 1LL);;
	jule::Str _45313_ident = _42341_decl.get()._field_LinkPath.slice(_45213_i);;
	return jule::new_ptr<_1e320561c_ImportInfo>(_1e320561c_ImportInfo{._field_Token=_42341_decl.get()._field_Token, ._field_Path=_43117_path, ._field_LinkPath=_42341_decl.get()._field_LinkPath, ._field_Ident=_45313_ident, ._field_Alias=_42341_decl.get()._field_Alias, ._field_CppLinked=false, ._field_Std=false, ._field_ImportAll=_42341_decl.get()._field_Full, ._field_Package=jule::new_ptr<_1e3208576_Package>(_1e3208576_Package{._field_Files=nullptr}), });
}



inline jule::Ptr<_1e320561c_ImportInfo> _1e2599880_buildImport(jule::Ptr<_1e259776d_symbolBuilder> _self_, jule::Ptr<_1e252d1c6_UseDecl>& _47036_decl) {
	{
		
		if (_47036_decl.get()._field_CppLinked) {
			_case_begin_1e5698184:;
			{
				return _1e2598e56_buildCppHeaderImport(_self_.ptr(), _47036_decl);
			}
		}
		else if (_47036_decl.get()._field_Std) {
			_case_begin_1e56983e8:;
			{
				return _1e2599264_buildStdImport(_self_.ptr(), _47036_decl);
			}
		}
		else {
			_case_begin_1e5697914:;
			{
				return _1e2599572_buildIdentImport(_self_, _47036_decl);
			}
		}
		_match_end_1e5697837:;
	};
}



inline jule::Bool _1e2599b8d_checkDuplicateUseDecl(_1e259776d_symbolBuilder* _self_, jule::Ptr<_1e320561c_ImportInfo>& _48141_pkg) {
	jule::Bool _48161_ok = jule::Bool();
	jule::Ptr<_1e320561c_ImportInfo> _48313_lpkg = _1e3104b59_SelectPackage((*_self_)._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1e320561c_ImportInfo>)>([=](jule::Ptr<_1e320561c_ImportInfo> _48348_spkg) mutable -> jule::Bool {
		return (_48141_pkg.get()._field_Path == _48348_spkg.get()._field_Path);
	}));;
	if ((_48313_lpkg == nullptr)) {
		_48161_ok = true;
		return _48161_ok;
	};
	_1e25980dc_pushErr(&(*_self_), _48141_pkg.get()._field_Token,jule::Str("use declaration duplication: @ is already used above", 52),jule::Slice<jule::Any>::make({jule::Any(_48141_pkg.get()._field_LinkPath)}));
	_1e25987c4_pushSuggestion(&(*_self_), jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>());
	_48161_ok = false;
	return _48161_ok;
}



inline void _1e2599eac_implImportSelections(_1e259776d_symbolBuilder* _self_, jule::Ptr<_1e320561c_ImportInfo>& _49544_imp, jule::Ptr<_1e252d1c6_UseDecl>& _49567_decl) {
	_49544_imp.get()._field_Selected=_49567_decl.get()._field_Selected;
	{
		auto &expr = _49544_imp.get()._field_Selected;
		auto it = expr.begin();
		_iter_begin_1e569be02:;
		if (it != expr.end()) {
			jule::Ptr<_1d42b43cc_Token> _49716_item = *it;
			{
				{
					auto &expr = _49544_imp.get()._field_Selected;
					auto it = expr.begin();
					_iter_begin_1e569c980:;
					if (it != expr.end()) {
						jule::Ptr<_1d42b43cc_Token> _49820_citem = *it;
						{
							if ((_49716_item == _49820_citem)) {
								goto _iter_end_1e569c980;
							} else if ((_49716_item.get()._field_Kind == _49820_citem.get()._field_Kind)) {
								_1e25980dc_pushErr(&(*_self_), _49716_item,jule::Str("duplicated selection: @ is already selected", 43),jule::Slice<jule::Any>::make({jule::Any(_49716_item.get()._field_Kind)}));
								_1e25987c4_pushSuggestion(&(*_self_), jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>());
								goto _iter_end_1e569c980;
							};
						}
						_iter_next_1e569c980:;
						++it;
						goto _iter_begin_1e569c980;
					}
					_iter_end_1e569c980:;
				};
			}
			_iter_next_1e569be02:;
			++it;
			goto _iter_begin_1e569be02;
		}
		_iter_end_1e569be02:;
	};
}



inline jule::Str _1e259a2ba_getAsLinkPath(jule::Ptr<_1e259776d_symbolBuilder> _self_, jule::Str _51037_path) {
	if (_20a119ae1_HasPrefix(_51037_path,_20a3768ec_PathStdlib)) {
		(_51037_path).mut_slice(_20a3768ec_PathStdlib.len());;
		return (jule::Str("std", 3) + _20a1ae79b_Replace(_51037_path,static_cast<jule::Str>(92LL),jule::Str("::", 2),-1LL));
	};
	jule::Str _51614_root;;
	std::tie(_51614_root,std::ignore) = _20a1b1490_Abs(_1e3202d89_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e3201eed_GetModPath(_self_.get()._field_importer));
	(_51037_path).mut_slice(_51614_root.len());;
	if ((_51037_path[0LL] == 92LLU)) {
		(_51037_path).mut_slice(1LL);;
	};
	return _20a1ae79b_Replace(_51037_path,static_cast<jule::Str>(92LL),jule::Str("::", 2),-1LL);
}



inline void _1e259a683_pushCycleError(jule::Ptr<_1e259776d_symbolBuilder> _self_, jule::Ptr<_1e259776d_symbolBuilder>& _52435_sb, jule::Str _52455_path, jule::Str& _52471_message) {
	;
	jule::Str _52613_refersTo = _20a354d5e_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_1e259a2ba_getAsLinkPath(_self_, _1d42ba15d_Dir(_52435_sb.get()._field_table.get()._field_File.ptr()))),jule::Any(_1e259a2ba_getAsLinkPath(_self_, _52455_path))}));;
	(_52471_message).buffer.insert(0, (((_20a110026_Repeat(jule::Str(" ", 1),4LL) + _52613_refersTo) + jule::Str("\n", 1))));;
}



inline void _1e259aa4b_pushCrossCycleError(jule::Ptr<_1e259776d_symbolBuilder> _self_, jule::Ptr<_1e259776d_symbolBuilder>& _53340_target, jule::Ptr<_1e320561c_ImportInfo>& _53365_imp, jule::Ptr<_1d42b43cc_Token>& _53384_errorToken) {
	jule::Str _53417_message = jule::Str();;
	_1e259a683_pushCycleError(_self_, _self_,_53365_imp.get()._field_Path,_53417_message);
	jule::Ptr<_1e259776d_symbolBuilder> _53817_owner = _self_.get()._field_owner;;
	jule::Ptr<_1e259776d_symbolBuilder> _53917_old = _self_;;
	while ((_53817_owner.get()._field_owner != nullptr)) {
		{
			_1e259a683_pushCycleError(_self_, _53917_old.get()._field_owner,_1d42ba15d_Dir(_53917_old.get()._field_table.get()._field_File.ptr()),_53417_message);
			if ((_53817_owner.get()._field_owner == _53340_target)) {
				_1e259a683_pushCycleError(_self_, _53340_target,_1d42ba15d_Dir(_53817_owner.get()._field_table.get()._field_File.ptr()),_53417_message);
				goto _iter_end_1e56a44d1;
			};
			_53917_old=_53817_owner;
			_53817_owner=_53817_owner.get()._field_owner;
		}
	_iter_next_1e56a44d1:;
	}
	_iter_end_1e56a44d1:;;
	_1e25980dc_pushErr(_self_.ptr(), _53384_errorToken,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>::make({jule::Any(_53417_message)}));
}



inline jule::Bool _1e259ae03_checkImportCycles(jule::Ptr<_1e259776d_symbolBuilder> _self_, jule::Ptr<_1e320561c_ImportInfo> _55637_imp, jule::Ptr<_1e252d1c6_UseDecl>& _55656_decl) {
	if ((_55637_imp.get()._field_Path == _1d42ba15d_Dir(_self_.get()._field_table.get()._field_File.ptr()))) {
		_1e25980dc_pushErr(_self_.ptr(), _55656_decl.get()._field_Token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>::make({jule::Any(_1e259a2ba_getAsLinkPath(_self_, _55637_imp.get()._field_Path))}));
		return false;
	};
	if ((_self_.get()._field_owner == nullptr)) {
		return true;
	};
	if ((_1d42ba15d_Dir(_self_.get()._field_owner.get()._field_table.get()._field_File.ptr()) == _55637_imp.get()._field_Path)) {
		_1e259aa4b_pushCrossCycleError(_self_, _self_.get()._field_owner,_55637_imp,_55656_decl.get()._field_Token);
		return false;
	};
	jule::Ptr<_1e259776d_symbolBuilder> _57117_owner = _self_.get()._field_owner;;
	_julec_label_iter:;
	if ((_1d42ba15d_Dir(_57117_owner.get()._field_table.get()._field_File.ptr()) == _55637_imp.get()._field_Path)) {
		_1e259aa4b_pushCrossCycleError(_self_, _57117_owner,_55637_imp,_55656_decl.get()._field_Token);
		return false;
	};
	if ((_57117_owner.get()._field_owner != nullptr)) {
		_57117_owner=_57117_owner.get()._field_owner;
		goto _julec_label_iter;
	};
	return true;
}



inline void _1e259b2dd_checkPackageAccessibility(_1e259776d_symbolBuilder* _self_, jule::Ptr<_1e252d1c6_UseDecl>& _59245_decl, jule::Str& _59262_mod, jule::Str& _59273_path) {
	if (((_1e3202d89_Importer_mptr_data[((*_self_)._field_importer).type_offset]._1e3201eed_GetModPath((*_self_)._field_importer) != _59262_mod) && _20a1ae191_Contains(_59273_path,jule::Str("internal", 8)))) {
		_1e25980dc_pushErr(&(*_self_), _59245_decl.get()._field_Token,jule::Str("you cannot access to internal packages", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1e259b6a6_importPackage(jule::Ptr<_1e259776d_symbolBuilder> _self_, jule::Ptr<_1e320561c_ImportInfo>& _59838_imp, jule::Ptr<_1e252d1c6_UseDecl>& _59861_decl) {
	jule::Bool _59879_ok = jule::Bool();
	if (_59838_imp.get()._field_CppLinked) {
		_59879_ok = true;
		return _59879_ok;
	};
	jule::Ptr<_1e320561c_ImportInfo> _60317_port = _1e3202d89_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e3202619_GetImport(_self_.get()._field_importer, _59838_imp.get()._field_Path);;
	if ((_60317_port != nullptr)) {
		_59838_imp.get()._field_Package=_60317_port.get()._field_Package;
		_59838_imp.get()._field_Duplicate=true;
		jule::Str _60817_oldMod = _1e3202d89_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e3201eed_GetModPath(_self_.get()._field_importer);;
		_1e3202d89_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e3201cab_SetModPath(_self_.get()._field_importer, _1e3202d89_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e320230b_ModById(_self_.get()._field_importer, _59838_imp.get()._field_ModId));
		_1e259b2dd_checkPackageAccessibility(_self_.ptr(), _59861_decl,_60817_oldMod,_60317_port.get()._field_Path);
		_1e3202d89_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e3201cab_SetModPath(_self_.get()._field_importer, _60817_oldMod);
	} else {
		if ((!(_1e259ae03_checkImportCycles(_self_, _59838_imp,_59861_decl)))) {
			_59879_ok = false;
			return _59879_ok;
		};
		jule::Str _61717_oldMod = _1e3202d89_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e3201eed_GetModPath(_self_.get()._field_importer);;
		__JULE_DEFER({
			_1e3202d89_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e3201cab_SetModPath(_self_.get()._field_importer, _61717_oldMod);
		});;
		if (_59838_imp.get()._field_Std) {
			_1e3202d89_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e3201cab_SetModPath(_self_.get()._field_importer, _20a3768ec_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1e24d0d9e_Ast>> _62222_asts;;
		jule::Slice<_20a35491e_Log> _62232_errors;;
		std::tie(_62222_asts,_62232_errors) = _1e3202d89_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e32029c1_ImportPackage(_self_.get()._field_importer, _59838_imp.get()._field_Path,(!(_59838_imp.get()._field_Std)));
		if ((_62232_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62232_errors);
			_59879_ok = false;
			return _59879_ok;
		};
		_1e259b2dd_checkPackageAccessibility(_self_.ptr(), _59861_decl,_61717_oldMod,_59838_imp.get()._field_Path);
		{
			auto &expr = _62222_asts;
			auto it = expr.begin();
			_iter_begin_1e56b4d93:;
			if (it != expr.end()) {
				jule::Ptr<_1e24d0d9e_Ast> _63025_ast = *it;
				{
					jule::Ptr<_1e310432e_SymbolTable> _63125_table = nullptr;;
					std::tie(_63125_table,_62232_errors) = _1e315147a_buildSymbols(_63025_ast,_self_.get()._field_importer,_self_);
					if ((_62232_errors.len() > 0LL)) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62232_errors);
						_1e25984a5_pushErrText(_self_.ptr(), _59838_imp.get()._field_Token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>::make({jule::Any(_59838_imp.get()._field_LinkPath)}));
						_59879_ok = false;
						return _59879_ok;
					};
					_59838_imp.get()._field_Package.get()._field_Files = jule::alloc_for_append(_59838_imp.get()._field_Package.get()._field_Files,1);_59838_imp.get()._field_Package.get()._field_Files.__push(_63125_table);;
				}
				_iter_next_1e56b4d93:;
				++it;
				goto _iter_begin_1e56b4d93;
			}
			_iter_end_1e56b4d93:;
		};
	};
	_1e2599eac_implImportSelections(_self_.ptr(), _59838_imp,_59861_decl);
	_59879_ok = true;
	return _59879_ok;
}



inline jule::Ptr<_1e320561c_ImportInfo> _1e259b9b4_importUseDecl(jule::Ptr<_1e259776d_symbolBuilder> _self_, jule::Ptr<_1e252d1c6_UseDecl>& _65038_decl) {
	jule::Ptr<_1e320561c_ImportInfo> _65117_imp = _1e2599880_buildImport(_self_, _65038_decl);;
	if ((_65117_imp == nullptr)) {
		return nullptr;
	};
	jule::Bool _65717_ok = _1e2599b8d_checkDuplicateUseDecl(_self_.ptr(), _65117_imp);;
	if ((!(_65717_ok))) {
		return nullptr;
	};
	_65717_ok=_1e259b6a6_importPackage(_self_, _65117_imp,_65038_decl);
	_self_.get()._field_table.get()._field_Imports = jule::alloc_for_append(_self_.get()._field_table.get()._field_Imports,1);_self_.get()._field_table.get()._field_Imports.__push(_65117_imp);;
	if (_65717_ok) {
		_1e3202d89_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e3202c46_Imported(_self_.get()._field_importer, _65117_imp);
		return _65117_imp;
	};
	return nullptr;
}



inline void _1e259bb90_importUseDecls(jule::Ptr<_1e259776d_symbolBuilder> _self_) {
	{
		auto &expr = _self_.get()._field_ast.get()._field_UseDecls;
		auto it = expr.begin();
		_iter_begin_1e56ba85a:;
		if (it != expr.end()) {
			jule::Ptr<_1e252d1c6_UseDecl> _67221_decl = *it;
			{
				_1e259b9b4_importUseDecl(_self_, _67221_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_1e56ba85a;
				};
			}
			_iter_next_1e56ba85a:;
			++it;
			goto _iter_begin_1e56ba85a;
		}
		_iter_end_1e56ba85a:;
	};
}



inline void _1e259be15_appendNode(_1e259776d_symbolBuilder* _self_, _1e24d1a92_Node& _68134_node) {
	{
		auto &_match_expr{ _68134_node._field_Data };
		
		if (_match_expr.type_is<jule::Ptr<_1e2531949_Impl>>()) {
			_case_begin_1e56bc3d9:;
			{
				(*_self_)._field_table.get()._field_Impls = jule::alloc_for_append((*_self_)._field_table.get()._field_Impls,1);(*_self_)._field_table.get()._field_Impls.__push(_1e259721d_buildImpl(_68134_node._field_Data.operator jule::Ptr<_1e2531949_Impl>()));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e252bcda_TypeAliasDecl>>()) {
			_case_begin_1e56bb11e:;
			{
				jule::Ptr<_1e31341b6_TypeAlias> _68621_ta = _1e2593ba9_buildTypeAlias(_68134_node._field_Data.operator jule::Ptr<_1e252bcda_TypeAliasDecl>());;
				(*_self_)._field_table.get()._field_TypeAliases = jule::alloc_for_append((*_self_)._field_table.get()._field_TypeAliases,1);(*_self_)._field_table.get()._field_TypeAliases.__push(_68621_ta);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2530c34_StructDecl>>()) {
			_case_begin_1e56bbedd:;
			{
				jule::Ptr<_1e2505d6e_Struct> _68921_srct = _1e2594517_buildStruct(_68134_node._field_Data.operator jule::Ptr<_1e2530c34_StructDecl>());;
				(*_self_)._field_table.get()._field_Structs = jule::alloc_for_append((*_self_)._field_table.get()._field_Structs,1);(*_self_)._field_table.get()._field_Structs.__push(_68921_srct);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e252749a_FnDecl>>()) {
			_case_begin_1e56bc054:;
			{
				jule::Ptr<_1e258b344_Fn> _69221_f = _1e2595172_buildFn(_68134_node._field_Data.operator jule::Ptr<_1e252749a_FnDecl>());;
				(*_self_)._field_table.get()._field_Funcs = jule::alloc_for_append((*_self_)._field_table.get()._field_Funcs,1);(*_self_)._field_table.get()._field_Funcs.__push(_69221_f);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e253133e_TraitDecl>>()) {
			_case_begin_1e56bc84b:;
			{
				jule::Ptr<_1e259d246_Trait> _69521_t = _1e25956b1_buildTrait(_68134_node._field_Data.operator jule::Ptr<_1e253133e_TraitDecl>());;
				(*_self_)._field_table.get()._field_Traits = jule::alloc_for_append((*_self_)._field_table.get()._field_Traits,1);(*_self_)._field_table.get()._field_Traits.__push(_69521_t);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2528479_VarDecl>>()) {
			_case_begin_1e56bc8b2:;
			{
				jule::Ptr<_1e322a147_Var> _69821_v = _1e2596bce_buildVar(_68134_node._field_Data.operator jule::Ptr<_1e2528479_VarDecl>());;
				(*_self_)._field_table.get()._field_Vars = jule::alloc_for_append((*_self_)._field_table.get()._field_Vars,1);(*_self_)._field_table.get()._field_Vars.__push(_69821_v);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e252e172_EnumDecl>>()) {
			_case_begin_1e56bc928:;
			{
				jule::Ptr<_1e25a038b_Enum> _70121_e = _1e2595e97_buildEnum(_68134_node._field_Data.operator jule::Ptr<_1e252e172_EnumDecl>());;
				(*_self_)._field_table.get()._field_Enums = jule::alloc_for_append((*_self_)._field_table.get()._field_Enums,1);(*_self_)._field_table.get()._field_Enums.__push(_70121_e);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e252ed76_TypeEnumDecl>>()) {
			_case_begin_1e56bc98e:;
			{
				jule::Ptr<_1e25a1986_TypeEnum> _70421_e = _1e2596937_buildTypeEnum(_68134_node._field_Data.operator jule::Ptr<_1e252ed76_TypeEnumDecl>());;
				(*_self_)._field_table.get()._field_TypeEnums = jule::alloc_for_append((*_self_)._field_table.get()._field_TypeEnums,1);(*_self_)._field_table.get()._field_TypeEnums.__push(_70421_e);;
			}
		}
		else {
			_case_begin_1e56bbd56:;
			{
				_1e25980dc_pushErr(&(*_self_), _68134_node._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1e56bb251:;
	};
}



inline void _1e259c0e1_appendNodes(_1e259776d_symbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_Nodes;
		auto it = expr.begin();
		_iter_begin_1e56c627d:;
		if (it != expr.end()) {
			_1e24d1a92_Node _71221_node = *it;
			{
				_1e259be15_appendNode(&(*_self_), _71221_node);
			}
			_iter_next_1e56c627d:;
			++it;
			goto _iter_begin_1e56c627d;
		}
		_iter_end_1e56c627d:;
	};
}



inline void _1e259c366_pushDirectivePass(_1e259776d_symbolBuilder* _self_, jule::Ptr<_1e24d1e8d_Directive>& _71741_d) {
	if ((_71741_d.get()._field_Args.len() == 0LL)) {
		_1e25980dc_pushErr(&(*_self_), _71741_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_71741_d.get()._field_Args.len() > 1LL)) {
		jule::Ptr<_1d42b43cc_Token> _72217_arg = _71741_d.get()._field_Args[1LL];;
		_1e25980dc_pushErr(&(*_self_), _72217_arg,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d42b43cc_Token> _72613_arg = _71741_d.get()._field_Args[0LL];;
	if ((_72613_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_1e25980dc_pushErr(&(*_self_), _72613_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_72613_arg.get()._field_Kind[0LL] != '\"')) {
		_1e25980dc_pushErr(&(*_self_), _72613_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	(*_self_)._field_table.get()._field_Passes = jule::alloc_for_append((*_self_)._field_table.get()._field_Passes,1);(*_self_)._field_table.get()._field_Passes.__push(_1e25932c4_Pass{._field_Token=_71741_d.get()._field_Tag, ._field_Text=_72613_arg.get()._field_Kind.slice(1LL,(_72613_arg.get()._field_Kind.len() - 1LL))});;
}



inline void _1e259c542_appendTopDirectives(_1e259776d_symbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_TopDirectives;
		auto it = expr.begin();
		_iter_begin_1e56c91c6:;
		if (it != expr.end()) {
			jule::Ptr<_1e24d1e8d_Directive> _74421_d = *it;
			{
				{
					auto &_match_expr{ _74421_d.get()._field_Tag.get()._field_Kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_1e56cc185:;
						{
							_1e259c366_pushDirectivePass(&(*_self_), _74421_d);
						}
					}
					_match_end_1e56cc0ca:;
				};
			}
			_iter_next_1e56c91c6:;
			++it;
			goto _iter_begin_1e56c91c6;
		}
		_iter_end_1e56c91c6:;
	};
}



inline void _1e259c71d_build(jule::Ptr<_1e259776d_symbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_1e310432e_SymbolTable>(_1e310432e_SymbolTable{._field_File=_self_.get()._field_ast.get()._field_File, });
	_1e259c542_appendTopDirectives(_self_.ptr());
	_1e259bb90_importUseDecls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	_1e259c0e1_appendNodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e259776d_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e259d642_Str(_1e259d246_Trait* _self_) {
	return (*_self_)._field_Ident;
}



inline jule::Bool _1e259d950_Equals(jule::Ptr<_1e259d246_Trait> _self_, jule::Ptr<_1e3134da9_TypeKind> _2526_other) {
	jule::Ptr<_1e259d246_Trait> _2613_trt = _1e3138682_Trait(_2526_other.ptr());;
	return (_self_ == _2613_trt);
}



inline jule::Bool _1e259dcb3_IsBuiltin(_1e259d246_Trait* _self_) {
	return ((*_self_)._field_Token == nullptr);
}



inline jule::Ptr<_1e258b344_Fn> _1e259e0c1_FindMethod(_1e259d246_Trait* _self_, jule::Str _3933_ident) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1e56d1046:;
		if (it != expr.end()) {
			jule::Ptr<_1e258b344_Fn> _4021_f = *it;
			{
				if ((_4021_f.get()._field_Ident == _3933_ident)) {
					return _4021_f;
				};
			}
			_iter_next_1e56d1046:;
			++it;
			goto _iter_begin_1e56d1046;
		}
		_iter_end_1e56d1046:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1e259d246_Trait _Src) {
	_Stream << "Trait{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Implemented:" << _Src._field_Implemented;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e259ec81_AutoExpr(_1e259e896_EnumItem* _self_) {
	return ((*_self_)._field_Value == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e259e896_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e25a06ee_Str(_1e25a038b_Enum* _self_) {
	return (*_self_)._field_Ident;
}



inline jule::Bool _1e25a0a0c_Equals(jule::Ptr<_1e25a038b_Enum> _self_, jule::Ptr<_1e3134da9_TypeKind> _3826_other) {
	jule::Ptr<_1e25a038b_Enum> _3913_enm = _1e3137708_Enum(_3826_other.ptr());;
	return (_self_ == _3913_enm);
}



inline jule::Ptr<_1e259e896_EnumItem> _1e25a0e4c_FindItem(_1e25a038b_Enum* _self_, jule::Str _4731_ident) {
	{
		auto &expr = (*_self_)._field_Items;
		auto it = expr.begin();
		_iter_begin_1e56d37da:;
		if (it != expr.end()) {
			jule::Ptr<_1e259e896_EnumItem> _4821_item = *it;
			{
				if ((_4821_item.get()._field_Ident == _4731_ident)) {
					return _4821_item;
				};
			}
			_iter_next_1e56d37da:;
			++it;
			goto _iter_begin_1e56d37da;
		}
		_iter_end_1e56d37da:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1e25a038b_Enum _Src) {
	_Stream << "Enum{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e25a13c0_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e25a1cb6_Str(_1e25a1986_TypeEnum* _self_) {
	return (*_self_)._field_Ident;
}



inline jule::Bool _1e25a20c4_Equals(jule::Ptr<_1e25a1986_TypeEnum> _self_, jule::Ptr<_1e3134da9_TypeKind> _8026_other) {
	jule::Ptr<_1e25a1986_TypeEnum> _8113_tenm = _1e313796c_TypeEnum(_8026_other.ptr());;
	return (_self_ == _8113_tenm);
}



inline jule::Ptr<_1e25a13c0_TypeEnumItem> _1e25a24c0_FindItem(_1e25a1986_TypeEnum* _self_, jule::Str _8931_ident) {
	{
		auto &expr = (*_self_)._field_Items;
		auto it = expr.begin();
		_iter_begin_1e56d5a1d:;
		if (it != expr.end()) {
			jule::Ptr<_1e25a13c0_TypeEnumItem> _9021_item = *it;
			{
				if ((_9021_item.get()._field_Ident == _8931_ident)) {
					return _9021_item;
				};
			}
			_iter_next_1e56d5a1d:;
			++it;
			goto _iter_begin_1e56d5a1d;
		}
		_iter_end_1e56d5a1d:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1e25a1986_TypeEnum _Src) {
	_Stream << "TypeEnum{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items;
	_Stream << "}";
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_1e320d768_Sema>&,jule::Slice<jule::Ptr<_1e31341b6_TypeAlias>>&)> _1e31d0097_readyFn(jule::Ptr<_1e31ceb68_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_1e320d768_Sema>&,jule::Slice<jule::Ptr<_1e31341b6_TypeAlias>>&)>([=](jule::Ptr<_1e320d768_Sema>& _6321_sema, jule::Slice<jule::Ptr<_1e31341b6_TypeAlias>>& _6339_generics) mutable -> jule::Bool {
		{
			auto &expr = _self_.get()._field_genericsD;
			auto it = expr.begin();
			_iter_begin_1e56e37a6:;
			if (it != expr.end()) {
				jule::I64 _6418_i = it - expr.begin();
				jule::Ptr<_1e2522c6a_GenericDecl> _6425_g = *it;
				{
					jule::Ptr<_1e313367c_InsGeneric> _6525_generic = _self_.get()._field_generics[_6418_i];;
					if (((_6425_g.get()._field_Constraint == nullptr) || (_6425_g.get()._field_Constraint.get()._field_Mask.len() == 0LL))) {
						goto _iter_next_1e56e37a6;
					};
					_6525_generic.get()._field_Constraint=jule::Slice<jule::Ptr<_1e3134da9_TypeKind>>::alloc(0LL,_6425_g.get()._field_Constraint.get()._field_Mask.len());
					{
						auto &expr = _6425_g.get()._field_Constraint.get()._field_Mask;
						auto it = expr.begin();
						_iter_begin_1e56e5d08:;
						if (it != expr.end()) {
							jule::Ptr<_1e2515686_TypeDecl> _7029_mask = *it;
							{
								jule::I64 _7125_n = _6321_sema.get()._field_errors.len();;
								jule::Ptr<_1e3134da9_TypeKind> _7229_kind = _1e32146e7_buildTypeWithRefers(_6321_sema, _7029_mask,jule::Trait<_1e315091e_Lookup>(_6321_sema, 3),_6339_generics,nullptr);;
								if ((_7229_kind == nullptr)) {
									{
										auto &_match_expr{ _7029_mask.get()._field_Kind };
										
										if (_match_expr.type_is<jule::Ptr<_1e2515c4c_IdentTypeDecl>>()) {
											_case_begin_1e56e7b95:;
											{
												jule::Ptr<_1e2515c4c_IdentTypeDecl> _7637_itd = _7029_mask.get()._field_Kind.operator jule::Ptr<_1e2515c4c_IdentTypeDecl>();;
												if (((_7637_itd.get()._field_Generics.len() == 0LL) && _1e31d1230_isBuiltinConstraint(_7637_itd.get()._field_Ident))) {
													_7229_kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(_7637_itd.get()._field_Ident), 6)});
													_6321_sema.get()._field_errors=_6321_sema.get()._field_errors.slice(0LL,_7125_n);
													goto _julec_label_success;
												};
											}
										}
										_match_end_1e56e7b40:;
									};
									return false;
								};
								_julec_label_success:;
								_6525_generic.get()._field_Constraint = jule::alloc_for_append(_6525_generic.get()._field_Constraint,1);_6525_generic.get()._field_Constraint.__push(_7229_kind);;
							}
							_iter_next_1e56e5d08:;
							++it;
							goto _iter_begin_1e56e5d08;
						}
						_iter_end_1e56e5d08:;
					};
				}
				_iter_next_1e56e37a6:;
				++it;
				_6418_i++;
				goto _iter_begin_1e56e37a6;
			}
			_iter_end_1e56e37a6:;
		};
		return true;
	});
}



inline jule::Bool _1e31d030b_readyFi(jule::Ptr<_1e31ceb68_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_fi.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_fi.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _1e3218ae7_fnEnvironment(_self_.get()._field_s, _self_.get()._field_fi,_1e31d0097_readyFn(_self_)));
}



inline jule::Bool _1e31d0570_readySi(jule::Ptr<_1e31ceb68_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_si.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_si.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _1e31d0097_readyFn(_self_)(_self_.get()._field_s,_self_.get()._field_genericsA));
}



inline jule::Bool _1e31d07d4_ready(jule::Ptr<_1e31ceb68_constraintChecker> _self_) {
	if ((_self_.get()._field_fi != nullptr)) {
		return _1e31d030b_readyFi(_self_);
	};
	return _1e31d0570_readySi(_self_);
}



inline jule::Bool _1e31d0a48_check(jule::Ptr<_1e31ceb68_constraintChecker> _self_) {
	if ((!(_1e31d07d4_ready(_self_)))) {
		return false;
	};
	_julec_label_lookup:;
	{
		auto &expr = _self_.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1e56eeb8b:;
		if (it != expr.end()) {
			jule::I64 _11914_i = it - expr.begin();
			jule::Ptr<_1e313367c_InsGeneric> _11921_g = *it;
			{
				if ((_11921_g.get()._field_Constraint == nullptr)) {
					goto _iter_next_1e56eeb8b;
				};
				{
					auto &expr = _11921_g.get()._field_Constraint;
					auto it = expr.begin();
					_iter_begin_1e570085c:;
					if (it != expr.end()) {
						jule::Ptr<_1e3134da9_TypeKind> _12325_c2 = *it;
						{
							jule::Ptr<_1e3139881_Prim> _12425_prim = _1e3136ebb_Prim(_12325_c2.ptr());;
							if (((_12425_prim != nullptr) && _1e313a475_IsConstraint(_12425_prim.ptr()))) {
								if (_1e31d0e44_matchConstraint(_12425_prim.get()._field_Kind,_11921_g.get()._field_Kind)) {
									goto _iter_next_1e56eeb8b;
								};
								goto _iter_next_1e570085c;
							};
							if (_1e31355b3_Equals(_12325_c2, _11921_g.get()._field_Kind)) {
								goto _iter_next_1e56eeb8b;
							};
						}
						_iter_next_1e570085c:;
						++it;
						goto _iter_begin_1e570085c;
					}
					_iter_end_1e570085c:;
				};
				_1e321142a_pushErr(_self_.get()._field_s.ptr(), _self_.get()._field_et,jule::Str("type @ is not matched with @'s constraint", 41),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_11921_g.get()._field_Kind.ptr())),jule::Any(_self_.get()._field_genericsD[_11914_i].get()._field_Ident)}));
				return false;
			}
			_iter_next_1e56eeb8b:;
			++it;
			_11914_i++;
			goto _iter_begin_1e56eeb8b;
		}
		_iter_end_1e56eeb8b:;
	};
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1e31ceb68_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e31d20cc_IsTraitImpl(_1e31d1bd1_Impl* _self_) {
	return ((*_self_)._field_Base != nullptr);
}



inline jule::Bool _1e31d2341_IsStructImpl(_1e31d1bd1_Impl* _self_) {
	return ((*_self_)._field_Base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e31d1bd1_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e31d6c3b_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e31d7137_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e31d7423_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e31d7797_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e31d7a83_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e31d839c_IsWhileNext(_1e31d8006_WhileIter* _self_) {
	return ((*_self_)._field_Next != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e31d8006_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e31d88db_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e31d8cd7_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e31d918e_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e31d947a_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e31d9766_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e31d9b1d_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e31da091_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e31da448_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e31dae93_IsGenericTypeMatch(_1e31da987_Match* _self_) {
	return (((*_self_)._field_TypeMatch && ((*_self_)._field_Expr != nullptr)) && (*_self_)._field_Expr.get()._field_Kind.get()._field_Generic);
}







std::ostream &operator<<(std::ostream &_Stream, _1e31da987_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e31db79b_isDefault(_1e31db4d2_Case* _self_) {
	return ((*_self_)._field_Exprs == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e31db4d2_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e31dba87_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e31dc00a_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e31dc615_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e31dca88_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e320561c_ImportInfo> _1e31ddced_FindPackage(_1e31dd89c_scopeChecker* _self_, jule::Str _45634_ident) {
	return _1e320dc85_FindPackage((*_self_)._field_s.ptr(), _45634_ident);
}



inline jule::Ptr<_1e320561c_ImportInfo> _1e31de10b_SelectPackage(_1e31dd89c_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_1e320561c_ImportInfo>)> _46636_selector) {
	return _1e320e093_SelectPackage((*_self_)._field_s.ptr(), _46636_selector);
}



inline jule::Ptr<_1e322a147_Var> _1e31de4b3_FindVar(_1e31dd89c_scopeChecker* _self_, jule::Str _47730_ident, jule::Bool _47742_cpp_linked) {
	;
	jule::Ptr<_1e322a147_Var> _48017_v = _1e3106ac3_findVar((*_self_)._field_table.ptr(), _47730_ident,_47742_cpp_linked,true);;
	if ((_48017_v != nullptr)) {
		return _48017_v;
	};
	jule::Ptr<_1e31dd89c_scopeChecker> _48517_parent = (*_self_)._field_parent;;
	while ((_48517_parent != nullptr)) {
		{
			_48017_v=_1e3106ac3_findVar(_48517_parent.get()._field_table.ptr(), _47730_ident,_47742_cpp_linked,true);
			if ((_48017_v != nullptr)) {
				return _48017_v;
			};
			_48517_parent=_48517_parent.get()._field_parent;
		}
	_iter_next_1e572ba42:;
	}
	_iter_end_1e572ba42:;;
	return _1e320e44a_FindVar((*_self_)._field_s.ptr(), _47730_ident,_47742_cpp_linked);
}



inline jule::Ptr<_1e31341b6_TypeAlias> _1e31de86a_FindTypeAlias(_1e31dd89c_scopeChecker* _self_, jule::Str _50436_ident, jule::Bool _50448_cppLinked) {
	;
	jule::Ptr<_1e31341b6_TypeAlias> _50717_ta = _1e3107024_findTypeAlias((*_self_)._field_table.ptr(), _50436_ident,_50448_cppLinked,true);;
	if ((_50717_ta != nullptr)) {
		return _50717_ta;
	};
	jule::Ptr<_1e31dd89c_scopeChecker> _51217_parent = (*_self_)._field_parent;;
	while ((_51217_parent != nullptr)) {
		{
			_50717_ta=_1e3107024_findTypeAlias(_51217_parent.get()._field_table.ptr(), _50436_ident,_50448_cppLinked,true);
			if ((_50717_ta != nullptr)) {
				return _50717_ta;
			};
			_51217_parent=_51217_parent.get()._field_parent;
		}
	_iter_next_1e572e8d0:;
	}
	_iter_end_1e572e8d0:;;
	return _1e320e802_FindTypeAlias((*_self_)._field_s.ptr(), _50436_ident,_50448_cppLinked);
}



inline jule::Ptr<_1e2505d6e_Struct> _1e31dec22_FindStruct(_1e31dd89c_scopeChecker* _self_, jule::Str _52933_ident, jule::Bool _52945_cppLinked) {
	return _1e320eba9_FindStruct((*_self_)._field_s.ptr(), _52933_ident,_52945_cppLinked);
}



inline jule::Ptr<_1e258b344_Fn> _1e31e00c9_FindFn(_1e31dd89c_scopeChecker* _self_, jule::Str _53829_ident, jule::Bool _53841_cppLinked) {
	return _1e3210061_FindFn((*_self_)._field_s.ptr(), _53829_ident,_53841_cppLinked);
}



inline jule::Ptr<_1e259d246_Trait> _1e31e03d7_FindTrait(_1e31dd89c_scopeChecker* _self_, jule::Str _54732_ident) {
	return _1e321036e_FindTrait((*_self_)._field_s.ptr(), _54732_ident);
}



inline jule::Ptr<_1e25a038b_Enum> _1e31e06e5_FindEnum(_1e31dd89c_scopeChecker* _self_, jule::Str _55631_ident) {
	return _1e321067c_FindEnum((*_self_)._field_s.ptr(), _55631_ident);
}



inline jule::Ptr<_1e25a1986_TypeEnum> _1e31e0a03_FindTypeEnum(_1e31dd89c_scopeChecker* _self_, jule::Str _56535_ident) {
	return _1e321098a_FindTypeEnum((*_self_)._field_s.ptr(), _56535_ident);
}



inline jule::Bool _1e31e0d33_isUnsafe(jule::Ptr<_1e31dd89c_scopeChecker> _self_) {
	jule::Ptr<_1e31dd89c_scopeChecker> _57317_scope = _self_;;
	_julec_label_iter:;
	if (_57317_scope.get()._field_scope.get()._field_Unsafety) {
		return true;
	};
	if ((_57317_scope.get()._field_parent != nullptr)) {
		_57317_scope=_57317_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Bool _1e31e1097_isRoot(_1e31dd89c_scopeChecker* _self_) {
	return (((*_self_)._field_parent == nullptr) || ((*_self_)._field_owner != nullptr));
}



inline void _1e31e1273_stop(_1e31dd89c_scopeChecker* _self_) {
	(*_self_)._field_i=-1LL;
}



inline jule::Bool _1e31e14d7_stopped(_1e31dd89c_scopeChecker* _self_) {
	return ((*_self_)._field_i == -1LL);
}



inline jule::Bool _1e31e174b_isDeferred(jule::Ptr<_1e31dd89c_scopeChecker> _self_) {
	jule::Ptr<_1e31dd89c_scopeChecker> _60617_scope = _self_;;
	_julec_label_iter:;
	if (_60617_scope.get()._field_scope.get()._field_Deferred) {
		return true;
	};
	if ((_60617_scope.get()._field_parent != nullptr)) {
		_60617_scope=_60617_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Ptr<_1e31dd89c_scopeChecker> _1e31e19b0_getRoot(jule::Ptr<_1e31dd89c_scopeChecker> _self_) {
	jule::Ptr<_1e31dd89c_scopeChecker> _62417_root = _self_;;
	while (((_62417_root.get()._field_parent != nullptr) && (_62417_root.get()._field_owner == nullptr))) {
		{
			_62417_root=_62417_root.get()._field_parent;
		}
	_iter_next_1e5738e5b:;
	}
	_iter_end_1e5738e5b:;;
	return _62417_root;
}



inline jule::Ptr<_1e31dd89c_scopeChecker> _1e31e1c24_getHardRoot(jule::Ptr<_1e31dd89c_scopeChecker> _self_) {
	jule::Ptr<_1e31dd89c_scopeChecker> _63417_root = _self_;;
	while ((_63417_root.get()._field_parent != nullptr)) {
		{
			_63417_root=_63417_root.get()._field_parent;
		}
	_iter_next_1e573a226:;
	}
	_iter_end_1e573a226:;;
	return _63417_root;
}



inline jule::Ptr<_1e31d947a_Label> _1e31e2032_findLabel(_1e31dd89c_scopeChecker* _self_, jule::Str _64428_ident) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1e573aed5:;
		if (it != expr.end()) {
			jule::Any _64521_st = *it;
			{
				{
					auto &_match_expr{ _64521_st };
					
					if (_match_expr.type_is<jule::Ptr<_1e31d947a_Label>>()) {
						_case_begin_1e573b7dd:;
						{
							jule::Ptr<_1e31d947a_Label> _64825_label = _64521_st.operator jule::Ptr<_1e31d947a_Label>();;
							if ((_64825_label.get()._field_Ident == _64428_ident)) {
								return _64825_label;
							};
						}
					}
					_match_end_1e573b6de:;
				};
			}
			_iter_next_1e573aed5:;
			++it;
			goto _iter_begin_1e573aed5;
		}
		_iter_end_1e573aed5:;
	};
	return nullptr;
}



inline jule::Ptr<_1e31dc615_scopeLabel> _1e31e2340_findLabelScope(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Str _66034_ident) {
	jule::Ptr<_1e31dc615_scopeLabel> _66117_label = _1e31e264d_findLabelAll(_self_.ptr(), _66034_ident);;
	if (((_66117_label != nullptr) && (_66117_label.get()._field_scope == _self_))) {
		return _66117_label;
	};
	return nullptr;
}



inline jule::Ptr<_1e31dc615_scopeLabel> _1e31e264d_findLabelAll(_1e31dd89c_scopeChecker* _self_, jule::Str _67231_ident) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1e573dba8:;
		if (it != expr.end()) {
			jule::Ptr<_1e31dc615_scopeLabel> _67321_lbl = *it;
			{
				if ((_67321_lbl.get()._field_label.get()._field_Ident == _67231_ident)) {
					return _67321_lbl;
				};
			}
			_iter_next_1e573dba8:;
			++it;
			goto _iter_begin_1e573dba8;
		}
		_iter_end_1e573dba8:;
	};
	return nullptr;
}



inline jule::Bool _1e31e2a05_isDuplicatedIdent(_1e31dd89c_scopeChecker* _self_, jule::Uintptr _68436_itself, jule::Str _68453_ident) {
	jule::Ptr<_1e322a147_Var> _68513_v = _1e31de4b3_FindVar(&(*_self_), _68453_ident,false);;
	if (((_68513_v != nullptr) && (static_cast<jule::Uintptr>(_68513_v) != _68436_itself))) {
		if ((_68513_v.get()._field_Scope == nullptr)) {
			return false;
		};
		return ((_68513_v.get()._field_Scope == (*_self_)._field_scope) || (!(_1e3210cdc_isFlag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));
	};
	jule::Ptr<_1e31341b6_TypeAlias> _69313_ta = _1e31de86a_FindTypeAlias(&(*_self_), _68453_ident,false);;
	if (((_69313_ta != nullptr) && (static_cast<jule::Uintptr>(_69313_ta) != _68436_itself))) {
		if ((_69313_ta.get()._field_Scope == nullptr)) {
			return false;
		};
		return ((_69313_ta.get()._field_Scope == (*_self_)._field_tree) || (!(_1e3210cdc_isFlag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));
	};
	return false;
}



inline void _1e31e2c7a_checkVarDecl(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Ptr<_1e2528479_VarDecl> _70436_decl) {
	jule::Ptr<_1e322a147_Var> _70517_v = _1e2596bce_buildVar(_70436_decl);;
	_70517_v.get()._field_Scope=_self_.get()._field_scope;
	__JULE_DEFER({
		_self_.get()._field_table.get()._field_Vars = jule::alloc_for_append(_self_.get()._field_table.get()._field_Vars,1);_self_.get()._field_table.get()._field_Vars.__push(_70517_v);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_70517_v));;
	});;
	if (_1e31e2a05_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_70517_v)),_70517_v.get()._field_Ident)) {
		_1e321142a_pushErr(_self_.get()._field_s.ptr(), _70517_v.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_70517_v.get()._field_Ident)}));
		_1e3211749_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1e31e1273_stop(_self_.ptr());
		return;;
	};
	_1e321e56a_checkVarDecl(_self_.get()._field_s, _70517_v,jule::Trait<_1e315091e_Lookup>(_self_, 0));
	if (((!(_1e322a763_IsTypeInferred(_70517_v.ptr()))) && ((_70517_v.get()._field_Kind == nullptr) || (_70517_v.get()._field_Kind.get()._field_Kind == nullptr)))) {
		return;;
	};
	_1e3222bab_checkTypeVar(_self_.get()._field_s, _70517_v,jule::Trait<_1e315091e_Lookup>(_self_, 0));
}



inline void _1e31e3000_checkTypeAliasDecl(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Ptr<_1e252bcda_TypeAliasDecl> _72842_decl) {
	jule::Ptr<_1e31341b6_TypeAlias> _72917_ta = _1e2593ba9_buildTypeAlias(_72842_decl);;
	if (_1e31e2a05_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_72917_ta)),_72917_ta.get()._field_Ident)) {
		_1e321142a_pushErr(_self_.get()._field_s.ptr(), _72917_ta.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_72917_ta.get()._field_Ident)}));
		_1e3211749_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1e31e1273_stop(_self_.ptr());
		return;;
	};
	_1e321a3ac_checkTypeAliasDecl(_self_.get()._field_s, _72917_ta,jule::Trait<_1e315091e_Lookup>(_self_, 0));
	_self_.get()._field_table.get()._field_TypeAliases = jule::alloc_for_append(_self_.get()._field_table.get()._field_TypeAliases,1);_self_.get()._field_table.get()._field_TypeAliases.__push(_72917_ta);;
	if ((_72917_ta.get()._field_Kind.get()._field_Kind == nullptr)) {
		_1e31e1273_stop(_self_.ptr());
	};
}



inline jule::Ptr<_1e31d6c3b_Scope> _1e31e3264_getChild(_1e31dd89c_scopeChecker* _self_) {
	return jule::new_ptr<_1e31d6c3b_Scope>(_1e31d6c3b_Scope{._field_Parent=(*_self_)._field_scope, });
}



inline void _1e31e362c_checkChildSsc(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Ptr<_1e25259a4_ScopeTree>& _75238_tree, jule::Ptr<_1e31d6c3b_Scope>& _75261_s, jule::Ptr<_1e31dd89c_scopeChecker>& _75277_ssc) {
	_75277_ssc.get()._field_parent=_self_;
	_1e31edb65_check(_75277_ssc, _75238_tree,_75261_s);
}



inline jule::Ptr<_1e31d6c3b_Scope> _1e31e39d4_checkChildSc(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Ptr<_1e25259a4_ScopeTree>& _75737_tree, jule::Ptr<_1e31dd89c_scopeChecker>& _75760_ssc) {
	jule::Ptr<_1e31d6c3b_Scope> _75817_s = _1e31e3264_getChild(_self_.ptr());;
	_1e31e362c_checkChildSsc(_self_, _75737_tree,_75817_s,_75760_ssc);
	return _75817_s;
}



inline jule::Ptr<_1e31d6c3b_Scope> _1e31e3ce2_checkChild(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Ptr<_1e25259a4_ScopeTree>& _76335_tree) {
	jule::Ptr<_1e31dd89c_scopeChecker> _76417_ssc = _1e31eddc9_newChildChecker(_self_);;
	return _1e31e39d4_checkChildSc(_self_, _76335_tree,_76417_ssc);
}



inline void _1e31e4067_checkAnonScope(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Ptr<_1e25259a4_ScopeTree> _76838_tree) {
	jule::Ptr<_1e31d6c3b_Scope> _76917_s = _1e31e3ce2_checkChild(_self_, _76838_tree);;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_76917_s));;
}



inline void _1e31e4386_processErrorCall(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Ptr<_1e2587c58_BuiltinErrorCallExprModel>& _77341_m, jule::Ptr<_1d42b43cc_Token> _77372_err) {
	if (_1e31e174b_isDeferred(_self_)) {
		_1e321142a_pushErr(_self_.get()._field_s.ptr(), _77372_err,jule::Str("deferred scopes are not supports error calls", 44),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e31dd89c_scopeChecker> _77817_root = _1e31e19b0_getRoot(_self_);;
	if ((!(_77817_root.get()._field_owner.get()._field_Decl.get()._field_Exceptional))) {
		_1e321142a_pushErr(_self_.get()._field_s.ptr(), _77372_err,jule::Str("error call can only useable for exceptional functions", 53),jule::Slice<jule::Any>());
		_1e3211749_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57),jule::Slice<jule::Any>());
	};
	_77341_m.get()._field_Func=_77817_root.get()._field_owner;
}



inline void _1e31e460b_checkExpr(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Ptr<_1e2519ba7_Expr> _78633_expr) {
	jule::Ptr<_1e310ab0a_Eval> _78717_eval = _1e3216991_eval(_self_.get()._field_s, jule::Trait<_1e315091e_Lookup>(_self_, 0));;
	_78717_eval.get()._field_ignored=true;
	jule::Ptr<_1e310908c_Data> _78917_d = _1e312664d_evalExpr(_78717_eval, _78633_expr);;
	if ((_78917_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _78917_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1e2587c58_BuiltinErrorCallExprModel>>()) {
			_case_begin_1e575a18b:;
			{
				jule::Ptr<_1e2587c58_BuiltinErrorCallExprModel> _79621_m = _78917_d.get()._field_Model.operator jule::Ptr<_1e2587c58_BuiltinErrorCallExprModel>();;
				_1e31e4386_processErrorCall(_self_, _79621_m,_78633_expr.get()._field_Token);
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_78917_d));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e258897e_BackendEmitExprModel>>() || _match_expr.type_is<jule::Ptr<_1e258787e_BuiltinAppendCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e2586dde_BuiltinCloneCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e2586a15_BuiltinOutCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e2586c02_BuiltinOutlnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e25872b8_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e25874a5_BuiltinAssertCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e2587a6b_BuiltinCopyCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e2588b6b_FreeExprModel>>() || _match_expr.type_is<jule::Ptr<_1e2584b01_FnCallExprModel>>()) {
			_case_begin_1e575a389:;
			{
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_78917_d));;
			}
		}
		else {
			_case_begin_1e575a048:;
			{
				_1e321142a_pushErr(_self_.get()._field_s.ptr(), _78633_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1e5759ee3:;
	};
}



inline void _1e31e4881_checkCoExpr(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Ptr<_1e251b79c_CoExpr> _81535_expr) {
	jule::Ptr<_1e310ab0a_Eval> _81617_eval = _1e3216991_eval(_self_.get()._field_s, jule::Trait<_1e315091e_Lookup>(_self_, 0));;
	_81617_eval.get()._field_ignored=true;
	jule::Ptr<_1e310908c_Data> _81817_d = _1e312664d_evalExpr(_81617_eval, _81535_expr.get()._field_Expr);;
	if ((_81817_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _81817_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1e2584b01_FnCallExprModel>>()) {
			_case_begin_1e576046b:;
			{
				jule::Ptr<_1e2584b01_FnCallExprModel> _82521_model = _81817_d.get()._field_Model.operator jule::Ptr<_1e2584b01_FnCallExprModel>();;
				if (_82521_model.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
					_1e321142a_pushErr(_self_.get()._field_s.ptr(), _81535_expr.get()._field_Token,jule::Str("concurrent calls not supports exceptionals", 42),jule::Slice<jule::Any>());
					_1e3211749_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63),jule::Slice<jule::Any>());
				};
				_82521_model.get()._field_IsCo=true;
				_1e311d4e1_checkFnOfConcurrentCall(_81617_eval.ptr(), _82521_model.get()._field_Func,_81535_expr.get()._field_Expr.get()._field_Token);
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_81817_d));;
			}
		}
		else {
			_case_begin_1e5760317:;
			{
				_1e321142a_pushErr(_self_.get()._field_s.ptr(), _81535_expr.get()._field_Token,jule::Str("statement must have function call expression", 44),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1e57602b2:;
	};
}



inline jule::Ptr<_1e31d7137_If> _1e31e4b8e_checkIf(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Ptr<_1e252acd9_If> _83931_i) {
	jule::Ptr<_1e31d6c3b_Scope> _84017_s = _1e31e3ce2_checkChild(_self_, _83931_i.get()._field_Scope);;
	jule::Ptr<_1e310908c_Data> _84217_d = _1e312664d_evalExpr(_1e3216991_eval(_self_.get()._field_s, jule::Trait<_1e315091e_Lookup>(_self_, 0)), _83931_i.get()._field_Expr);;
	if ((_84217_d == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1e3139881_Prim> _84717_prim = _1e3136ebb_Prim(_84217_d.get()._field_Kind.ptr());;
	if (((_84717_prim == nullptr) || (!(_1e313c851_IsBool(_84717_prim.ptr()))))) {
		_1e321142a_pushErr(_self_.get()._field_s.ptr(), _83931_i.get()._field_Expr.get()._field_Token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1e31d7137_If>(_1e31d7137_If{._field_Expr=_84217_d.get()._field_Model, ._field_Scope=_84017_s});
}



inline jule::Ptr<_1e31d7423_Else> _1e31e4e9c_checkElse(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Ptr<_1e252b191_Else> _85933_e) {
	return jule::new_ptr<_1e31d7423_Else>(_1e31d7423_Else{._field_Scope=_1e31e3ce2_checkChild(_self_, _85933_e.get()._field_Scope)});
}



inline void _1e31e5222_checkConditional(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Ptr<_1e252b614_Conditional> _86540_conditional) {
	jule::Ptr<_1e31d7797_Conditional> _86617_c = jule::new_ptr<_1e31d7797_Conditional>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_86617_c));;
	_86617_c.get()._field_Elifs=jule::Slice<jule::Ptr<_1e31d7137_If>>::alloc(0LL,(_86540_conditional.get()._field_Tail.len() + 1LL));
	_86617_c.get()._field_Elifs = jule::alloc_for_append(_86617_c.get()._field_Elifs,1);_86617_c.get()._field_Elifs.__push(_1e31e4b8e_checkIf(_self_, _86540_conditional.get()._field_Head));;
	{
		auto &expr = _86540_conditional.get()._field_Tail;
		auto it = expr.begin();
		_iter_begin_1e5768661:;
		if (it != expr.end()) {
			jule::Ptr<_1e252acd9_If> _87221_elif = *it;
			{
				_86617_c.get()._field_Elifs = jule::alloc_for_append(_86617_c.get()._field_Elifs,1);_86617_c.get()._field_Elifs.__push(_1e31e4b8e_checkIf(_self_, _87221_elif));;
			}
			_iter_next_1e5768661:;
			++it;
			goto _iter_begin_1e5768661;
		}
		_iter_end_1e5768661:;
	};
	if ((_86540_conditional.get()._field_Default != nullptr)) {
		_86617_c.get()._field_Default=_1e31e4e9c_checkElse(_self_, _86540_conditional.get()._field_Default);
	};
}



inline void _1e31e5684_checkIterScopeSsc(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Uintptr _88137_it, jule::Ptr<_1e25259a4_ScopeTree> _88154_tree, jule::Ptr<_1e31d6c3b_Scope>& _88177_s, jule::Ptr<_1e31dd89c_scopeChecker> _88192_ssc) {
	_88192_ssc.get()._field_it=_88137_it;
	_1e31e362c_checkChildSsc(_self_, _88154_tree,_88177_s,_88192_ssc);
}



inline jule::Ptr<_1e31d6c3b_Scope> _1e31e5ad5_checkIterScopeSc(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Uintptr _88636_it, jule::Ptr<_1e25259a4_ScopeTree> _88653_tree, jule::Ptr<_1e31dd89c_scopeChecker> _88675_ssc) {
	jule::Ptr<_1e31d6c3b_Scope> _88717_scope = _1e31e3264_getChild(_self_.ptr());;
	_1e31e5684_checkIterScopeSsc(_self_, _88636_it,_88653_tree,_88717_scope,_88675_ssc);
	return _88717_scope;
}



inline jule::Ptr<_1e31d6c3b_Scope> _1e31e5e8c_checkIterScope(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Uintptr _89234_it, jule::Ptr<_1e25259a4_ScopeTree>& _89252_tree) {
	jule::Ptr<_1e31dd89c_scopeChecker> _89317_ssc = _1e31eddc9_newChildChecker(_self_);;
	return _1e31e5ad5_checkIterScopeSc(_self_, _89234_it,_89252_tree,_89317_ssc);
}



inline void _1e31e6212_checkInfIter(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Ptr<_1e2528e91_Iter>& _89737_it) {
	jule::Ptr<_1e31d7a83_InfIter> _89817_kind = jule::new_ptr<_1e31d7a83_InfIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_89817_kind));;
	_89817_kind.get()._field_Scope=_1e31e5e8c_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_89817_kind)),_89737_it.get()._field_Scope);
}



inline void _1e31e6487_checkWhileIter(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Ptr<_1e2528e91_Iter>& _90339_it) {
	jule::Ptr<_1e2529766_WhileKind> _90417_wh = _90339_it.get()._field_Kind.operator jule::Ptr<_1e2529766_WhileKind>();;
	if (((_90417_wh.get()._field_Expr == nullptr) && (_90417_wh.get()._field_Next == nullptr))) {
		_1e31e6212_checkInfIter(_self_, _90339_it);
		return;;
	};
	jule::Ptr<_1e31d8006_WhileIter> _91017_kind = jule::new_ptr<_1e31d8006_WhileIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_91017_kind));;
	_91017_kind.get()._field_Scope=_1e31e5e8c_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_91017_kind)),_90339_it.get()._field_Scope);
	if ((_90417_wh.get()._field_Expr != nullptr)) {
		jule::Ptr<_1e310908c_Data> _91521_d = _1e312664d_evalExpr(_1e3216991_eval(_self_.get()._field_s, jule::Trait<_1e315091e_Lookup>(_self_, 0)), _90417_wh.get()._field_Expr);;
		if ((_91521_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1e3139881_Prim> _92017_prim = _1e3136ebb_Prim(_91521_d.get()._field_Kind.ptr());;
		if ((_92017_prim == nullptr)) {
			_1e321142a_pushErr(_self_.get()._field_s.ptr(), _90339_it.get()._field_Token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1e313c851_IsBool(_92017_prim.ptr())))) {
			_1e321142a_pushErr(_self_.get()._field_s.ptr(), _90339_it.get()._field_Token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		_91017_kind.get()._field_Expr=_91521_d.get()._field_Model;
	};
	if (_1e2529ab8_IsWhileNext(_90417_wh.ptr())) {
		if ((!(_1e31d6268_isValidAstStForNextSt(_90417_wh.get()._field_Next)))) {
			_1e321142a_pushErr(_self_.get()._field_s.ptr(), _90417_wh.get()._field_NextToken,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _94017_n = _self_.get()._field_scope.get()._field_Stmts.len();;
		_1e31ec911_checkNode(_self_, _90417_wh.get()._field_Next);
		if ((_94017_n < _self_.get()._field_scope.get()._field_Stmts.len())) {
			jule::Any _94325_st = _self_.get()._field_scope.get()._field_Stmts[_94017_n];;
			_self_.get()._field_scope.get()._field_Stmts=_self_.get()._field_scope.get()._field_Stmts.slice(0LL,_94017_n);
			if ((!(_1e31d6510_isValidStForNextSt(_94325_st)))) {
				_1e321142a_pushErr(_self_.get()._field_s.ptr(), _90417_wh.get()._field_NextToken,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			};
			_91017_kind.get()._field_Next=_94325_st;
		};
	};
}



inline void _1e31e670c_checkRangeIter(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Ptr<_1e2528e91_Iter>& _95339_it) {
	jule::Ptr<_1e252a107_RangeKind> _95417_rang = _95339_it.get()._field_Kind.operator jule::Ptr<_1e252a107_RangeKind>();;
	jule::Ptr<_1e310908c_Data> _95617_d = _1e312664d_evalExpr(_1e3216991_eval(_self_.get()._field_s, jule::Trait<_1e315091e_Lookup>(_self_, 0)), _95417_rang.get()._field_Expr);;
	if ((_95617_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1e31d88db_RangeIter> _96117_kind = jule::new_ptr<_1e31d88db_RangeIter>(_1e31d88db_RangeIter{._field_Expr=_95617_d, });;
	_1e3100160_rangeChecker _96517_rc = _1e3100160_rangeChecker{._field_sc=_self_, ._field_rang=_95417_rang, ._field_Kind=_96117_kind, ._field_d=_95617_d};;
	jule::Bool _97113_ok = _1e3101a24_check(&_96517_rc);;
	if ((!(_97113_ok))) {
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_96117_kind));;
	jule::Ptr<_1e31dd89c_scopeChecker> _97817_ssc = _1e31eddc9_newChildChecker(_self_);;
	jule::Ptr<_1e31d6c3b_Scope> _97917_scope = _1e31e3264_getChild(_self_.ptr());;
	if ((_96117_kind.get()._field_KeyA != nullptr)) {
		if (((!(_1e3210cdc_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1e31e2a05_isDuplicatedIdent(_self_.ptr(), 0LLU,_96117_kind.get()._field_KeyA.get()._field_Ident))) {
			_1e321142a_pushErr(_self_.get()._field_s.ptr(), _96117_kind.get()._field_KeyA.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_96117_kind.get()._field_KeyA.get()._field_Ident)}));
			_1e3211749_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_96117_kind.get()._field_KeyA.get()._field_Scope=_97917_scope;
		_97817_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_97817_ssc.get()._field_table.get()._field_Vars,1);_97817_ssc.get()._field_table.get()._field_Vars.__push(_96117_kind.get()._field_KeyA);;
	};
	if ((_96117_kind.get()._field_KeyB != nullptr)) {
		if (((!(_1e3210cdc_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1e31e2a05_isDuplicatedIdent(_self_.ptr(), 0LLU,_96117_kind.get()._field_KeyB.get()._field_Ident))) {
			_1e321142a_pushErr(_self_.get()._field_s.ptr(), _96117_kind.get()._field_KeyB.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_96117_kind.get()._field_KeyB.get()._field_Ident)}));
			_1e3211749_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_96117_kind.get()._field_KeyB.get()._field_Scope=_97917_scope;
		_97817_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_97817_ssc.get()._field_table.get()._field_Vars,1);_97817_ssc.get()._field_table.get()._field_Vars.__push(_96117_kind.get()._field_KeyB);;
	};
	_1e31e5684_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_96117_kind)),_95339_it.get()._field_Scope,_97917_scope,_97817_ssc);
	_96117_kind.get()._field_Scope=_97917_scope;
}



inline void _1e31e6982_checkIter(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Ptr<_1e2528e91_Iter> _100333_it) {
	if (_1e25292e3_IsInf(_100333_it.ptr())) {
		_1e31e6212_checkInfIter(_self_, _100333_it);
		return;;
	};
	{
		auto &_match_expr{ _100333_it.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e2529766_WhileKind>>()) {
			_case_begin_1e57863c6:;
			{
				_1e31e6487_checkWhileIter(_self_, _100333_it);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e252a107_RangeKind>>()) {
			_case_begin_1e5785837:;
			{
				_1e31e670c_checkRangeIter(_self_, _100333_it);
			}
		}
		else {
			_case_begin_1e5785705:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1e5785d65:;
	};
}



inline jule::Bool _1e31e6c90_checkValidContLabel(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Uintptr _101939_it) {
	jule::Ptr<_1e31dd89c_scopeChecker> _102017_scope = _self_;;
	_julec_label_iter:;
	if ((_102017_scope.get()._field_it == _101939_it)) {
		return true;
	};
	if ((_102017_scope.get()._field_parent != nullptr)) {
		_102017_scope=_102017_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Bool _1e31e709d_checkValidBreakLabel(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Uintptr _103540_ptr) {
	jule::Ptr<_1e31dd89c_scopeChecker> _103617_scope = _self_;;
	_julec_label_iter:;
	if ((_103617_scope.get()._field_it == _103540_ptr)) {
		return true;
	};
	if ((_103617_scope.get()._field_cse != 0LLU)) {
		jule::Uintptr _104417_mtch = static_cast<jule::Uintptr>(((_1e31db4d2_Case*)(_103617_scope.get()._field_cse))->_field_Owner);;
		if ((_104417_mtch == _103540_ptr)) {
			return true;
		};
	};
	if ((_103617_scope.get()._field_parent != nullptr)) {
		_103617_scope=_103617_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Ptr<_1e31d8cd7_ContSt> _1e31e73ab_checkContValidScope(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Ptr<_1e252a866_ContSt> _105839_c) {
	if (_1e31e174b_isDeferred(_self_)) {
		_1e321142a_pushErr(_self_.get()._field_s.ptr(), _105839_c.get()._field_Token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_105839_c.get()._field_Label != nullptr)) {
		return jule::new_ptr<_1e31d8cd7_ContSt>();
	};
	jule::Ptr<_1e31dd89c_scopeChecker> _106817_scope = _self_;;
	_julec_label_iter:;
	{
		
		if ((((_106817_scope.get()._field_it == 0LLU) && (_106817_scope.get()._field_parent != nullptr)) && (_106817_scope.get()._field_owner == nullptr))) {
			_case_begin_1e578d9a5:;
			{
				_106817_scope=_106817_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_106817_scope.get()._field_it != 0LLU)) {
			_case_begin_1e578da2c:;
			{
				return jule::new_ptr<_1e31d8cd7_ContSt>(_1e31d8cd7_ContSt{._field_It=_106817_scope.get()._field_it});
			}
		}
		_match_end_1e578d92d:;
	};
	_1e321142a_pushErr(_self_.get()._field_s.ptr(), _105839_c.get()._field_Token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1e31e7631_checkCont(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Ptr<_1e252a866_ContSt> _108229_c) {
	jule::Ptr<_1e31d8cd7_ContSt> _108317_cont = _1e31e73ab_checkContValidScope(_self_, _108229_c);;
	if ((_108317_cont == nullptr)) {
		return;;
	};
	if ((_108229_c.get()._field_Label != nullptr)) {
		jule::Ptr<_1e31dc615_scopeLabel> _108921_label = _1e31d4442_findLabelParent(_108229_c.get()._field_Label.get()._field_Kind,_self_.get()._field_parent);;
		if ((_108921_label == nullptr)) {
			_1e321142a_pushErr(_self_.get()._field_s.ptr(), _108229_c.get()._field_Label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_108229_c.get()._field_Label.get()._field_Kind)}));
			return;;
		};
		_108921_label.get()._field_used=true;
		if (((_108921_label.get()._field_pos + 1LL) >= _108921_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_1e321142a_pushErr(_self_.get()._field_s.ptr(), _108229_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_108229_c.get()._field_Label.get()._field_Kind)}));
			return;;
		};
		jule::I64 _110217_i = (_108921_label.get()._field_pos + 1LL);;
		if ((_110217_i >= _108921_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_1e321142a_pushErr(_self_.get()._field_s.ptr(), _108229_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>());
		} else {
			jule::Any _110625_st = _108921_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_110217_i];;
			{
				auto &_match_expr{ _110625_st };
				
				if (_match_expr.type_is<jule::Ptr<_1e31d7a83_InfIter>>()) {
					_case_begin_1e57943a1:;
					{
						_108317_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_110625_st.operator jule::Ptr<_1e31d7a83_InfIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1e31d88db_RangeIter>>()) {
					_case_begin_1e579743c:;
					{
						_108317_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_110625_st.operator jule::Ptr<_1e31d88db_RangeIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1e31d8006_WhileIter>>()) {
					_case_begin_1e57974a3:;
					{
						_108317_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_110625_st.operator jule::Ptr<_1e31d8006_WhileIter>()));
					}
				}
				else {
					_case_begin_1e57972d8:;
					{
						_1e321142a_pushErr(_self_.get()._field_s.ptr(), _108229_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_108229_c.get()._field_Label.get()._field_Kind)}));
					}
				}
				_match_end_1e579720b:;
			};
		};
	};
	if ((_108317_cont.get()._field_It != 0LLU)) {
		if ((!(_1e31e6c90_checkValidContLabel(_self_, _108317_cont.get()._field_It)))) {
			_1e321142a_pushErr(_self_.get()._field_s.ptr(), _108229_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_108229_c.get()._field_Label.get()._field_Kind)}));
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_108317_cont));;
}



inline void _1e31e78a6_checkLabel(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Ptr<_1e2523122_LabelSt> _112934_l) {
	if ((_1e31e2032_findLabel(_self_.ptr(), _112934_l.get()._field_Ident) != nullptr)) {
		_1e321142a_pushErr(_self_.get()._field_s.ptr(), _112934_l.get()._field_Token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>::make({jule::Any(_112934_l.get()._field_Ident)}));
		return;;
	};
	jule::Ptr<_1e31d947a_Label> _113517_label = jule::new_ptr<_1e31d947a_Label>(_1e31d947a_Label{._field_Ident=_112934_l.get()._field_Ident});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_113517_label));;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1e31dc615_scopeLabel>>::make({jule::new_ptr<_1e31dc615_scopeLabel>(_1e31dc615_scopeLabel{._field_token=_112934_l.get()._field_Token, ._field_label=_113517_label, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL)), ._field_scope=_self_, })}));
}



inline void _1e31e7b2b_pushGoto(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Ptr<_1e25234c9_GotoSt> _114832_gt) {
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_1e31d9766_GotoSt>(_1e31d9766_GotoSt{._field_Ident=_114832_gt.get()._field_Label.get()._field_Kind})));;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1e31dca88_scopeGoto>>::make({jule::new_ptr<_1e31dca88_scopeGoto>(_1e31dca88_scopeGoto{._field_gt=_114832_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL))})}));
}



inline void _1e31e7da1_checkPostfix(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Ptr<_1e252440e_AssignSt> _116036_a) {
	if ((_116036_a.get()._field_Left.len() > 1LL)) {
		_1e321142a_pushErr(_self_.get()._field_s.ptr(), _116036_a.get()._field_Setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e2519ba7_Expr> _116617_expr = _116036_a.get()._field_Left[0LL].get()._field_Expr;;
	jule::Ptr<_1e310908c_Data> _116717_d = _1e312664d_evalExpr(_1e3216991_eval(_self_.get()._field_s, jule::Trait<_1e315091e_Lookup>(_self_, 0)), _116617_expr);;
	if ((_116717_d == nullptr)) {
		return;;
	};
	_1e31d5ec1_checkAssign(_self_.get()._field_s,_116717_d,nullptr,_116036_a.get()._field_Setter);
	if ((_1e3137494_Ptr(_116717_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1e3141679_Ptr> _117521_ptr = _1e3137494_Ptr(_116717_d.get()._field_Kind.ptr());;
		if (_1e314214c_IsUnsafe(_117521_ptr.ptr())) {
			_1e321142a_pushErr(_self_.get()._field_s.ptr(), _116036_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_116036_a.get()._field_Setter.get()._field_Kind),jule::Any(_1e31352a5_Str(_116717_d.get()._field_Kind.ptr()))}));
			return;;
		};
	} else {
		if (((_1e3136ebb_Prim(_116717_d.get()._field_Kind.ptr()) == nullptr) || (!(_1e31cd749_IsNum(_1e3136ebb_Prim(_116717_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1e321142a_pushErr(_self_.get()._field_s.ptr(), _116036_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_116036_a.get()._field_Setter.get()._field_Kind),jule::Any(_1e31352a5_Str(_116717_d.get()._field_Kind.ptr()))}));
			return;;
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_1e31d9b1d_Postfix>(_1e31d9b1d_Postfix{._field_Expr=_116717_d.get()._field_Model, ._field_Op=_116036_a.get()._field_Setter.get()._field_Kind})));;
}



inline jule::Bool _1e31e81ae_isNewAssignIdent(_1e31dd89c_scopeChecker* _self_, jule::Str _119335_ident) {
	if ((_1d42b6b71_IsIgnoreIdent(_119335_ident) || _119335_ident.empty())) {
		return false;
	};
	return (_1e31073cb_defByIdent((*_self_)._field_table.ptr(), _119335_ident,false) == nullptr);
}



inline jule::Bool _1e31e8610_checkStructureAssignOp(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Ptr<_1e253220d_StructIns>& _120047_s, jule::Ptr<_1e252440e_AssignSt>& _120067_a, jule::Ptr<_1e310908c_Data>& _120086_r) {
	jule::Ptr<_1e258dee5_FnIns> _120317_overload = nullptr;;
	{
		auto &_match_expr{ _120067_a.get()._field_Setter.get()._field_Kind };
		
		if (_match_expr == jule::Str("+=", 2)) {
			_case_begin_1e57a9d89:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == jule::Str("-=", 2)) {
			_case_begin_1e57a9e00:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == jule::Str("/=", 2)) {
			_case_begin_1e57aad13:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == jule::Str("*=", 2)) {
			_case_begin_1e57aad79:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == jule::Str("%=", 2)) {
			_case_begin_1e57aade0:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == jule::Str("<<=", 3)) {
			_case_begin_1e57aae56:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == jule::Str(">>=", 3)) {
			_case_begin_1e57aaebc:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == jule::Str("|=", 2)) {
			_case_begin_1e57ab088:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == jule::Str("&=", 2)) {
			_case_begin_1e57ab0ee:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == jule::Str("^=", 2)) {
			_case_begin_1e57ab165:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1e57a9c57:;
			{
				_1e321142a_pushErr(_self_.get()._field_s.ptr(), _120067_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_120067_a.get()._field_Setter.get()._field_Kind),jule::Any(_1e2507a52_Str(_120047_s.ptr()))}));
				return false;
			}
		}
		_match_end_1e57a9b9c:;
	};
	if ((_120317_overload == nullptr)) {
		_1e321142a_pushErr(_self_.get()._field_s.ptr(), _120067_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_120067_a.get()._field_Setter.get()._field_Kind),jule::Any(_1e2507a52_Str(_120047_s.ptr()))}));
		return false;
	};
	jule::Ptr<_1e258d126_ParamIns> _123517_p = _120317_overload.get()._field_Params[1LL];;
	return _1e3216e8b_checkAssignType(_self_.get()._field_s, _123517_p.get()._field_Decl.get()._field_Reference,_123517_p.get()._field_Kind,_120086_r,_120067_a.get()._field_Setter);
}



inline void _1e31e8885_checkSingleAssign(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Ptr<_1e252440e_AssignSt>& _123942_a) {
	jule::Ptr<_1e310908c_Data> _124017_l = nullptr;;
	if ((!(_1d42b6b71_IsIgnoreIdent(_123942_a.get()._field_Left[0LL].get()._field_Ident)))) {
		jule::Ptr<_1e2519ba7_Expr> _124321_expr = _123942_a.get()._field_Left[0LL].get()._field_Expr;;
		_124017_l=_1e312664d_evalExpr(_1e3216991_eval(_self_.get()._field_s, jule::Trait<_1e315091e_Lookup>(_self_, 0)), _124321_expr);
		if ((_124017_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1e310ab0a_Eval> _125017_eval = nullptr;;
	if ((_124017_l != nullptr)) {
		_125017_eval=_1e3216683_evalp(_self_.get()._field_s, jule::Trait<_1e315091e_Lookup>(_self_, 0),_124017_l.get()._field_Kind);
	} else {
		_125017_eval=_1e3216991_eval(_self_.get()._field_s, jule::Trait<_1e315091e_Lookup>(_self_, 0));
	};
	_125017_eval.get()._field_unsafety=_1e31e0d33_isUnsafe(_self_);
	jule::Ptr<_1e310908c_Data> _125717_r = _1e312664d_evalExpr(_125017_eval, _123942_a.get()._field_Right);;
	if ((_125717_r == nullptr)) {
		return;;
	};
	if ((_124017_l == nullptr)) {
		if (_1e3136042_Void(_125717_r.get()._field_Kind.ptr())) {
			_1e321142a_pushErr(_self_.get()._field_s.ptr(), _123942_a.get()._field_Right.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_125717_r));;
		return;;
	};
	if ((!(_1e31d5ec1_checkAssign(_self_.get()._field_s,_124017_l,_125717_r,_123942_a.get()._field_Setter)))) {
		return;;
	};
	if ((_1e3138b5a_Tup(_125717_r.get()._field_Kind.ptr()) != nullptr)) {
		_1e321142a_pushErr(_self_.get()._field_s.ptr(), _123942_a.get()._field_Setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e2583c87_OperandExprModel> _127917_lm = jule::new_ptr<_1e2583c87_OperandExprModel>(_1e2583c87_OperandExprModel{._field_Kind=_124017_l.get()._field_Kind, ._field_Model=_124017_l.get()._field_Model});;
	jule::Ptr<_1e2583c87_OperandExprModel> _128317_rm = jule::new_ptr<_1e2583c87_OperandExprModel>(_1e2583c87_OperandExprModel{._field_Kind=_125717_r.get()._field_Kind, ._field_Model=_125717_r.get()._field_Model});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_1e31da091_Assign>(_1e31da091_Assign{._field_L=_127917_lm, ._field_R=_128317_rm, ._field_Op=_123942_a.get()._field_Setter})));;
	if ((_123942_a.get()._field_Setter.get()._field_Kind != jule::Str("=", 1))) {
		jule::Ptr<_1e253220d_StructIns> _129021_strct = _1e313841d_Struct(_124017_l.get()._field_Kind.ptr());;
		if ((_129021_strct != nullptr)) {
			_1e31e8610_checkStructureAssignOp(_self_, _129021_strct,_123942_a,_125717_r);
			return;;
		};
		_123942_a.get()._field_Setter.get()._field_Kind=_123942_a.get()._field_Setter.get()._field_Kind.slice(0LL,(_123942_a.get()._field_Setter.get()._field_Kind.len() - 1LL));
		_1e312885e_binaryEval _129721_solver = static__1e3129266_new(_125017_eval,_123942_a.get()._field_Setter);;
		_125717_r=_1e312dde7_solveExplicit(&_129721_solver, _124017_l,_125717_r);
		if ((_125717_r == nullptr)) {
			return;;
		};
		_123942_a.get()._field_Setter.get()._field_Kind+=jule::Str("=", 1);
		return;;
	};
	_1e30e495c_assignTypeChecker _130617_checker = _1e30e495c_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_124017_l.get()._field_Kind, ._field_d=_125717_r, ._field_errorToken=_123942_a.get()._field_Setter};;
	if (_1e30e5ad4_check(&_130617_checker)) {
		_128317_rm.get()._field_Model=_125717_r.get()._field_Model;
		_127917_lm.get()._field_Model=_124017_l.get()._field_Model;
	};
}



inline void _1e31e8db3_processEndPartOfMultiAssign(_1e31dd89c_scopeChecker* _self_, jule::Ptr<_1e31da448_MultiAssign> _131850_st, jule::Ptr<_1e252440e_AssignSt> _131913_a, jule::Ptr<_1e2523dc0_AssignLeft> _131931_lexpr, jule::Ptr<_1e310908c_Data> _131955_l, jule::Ptr<_1e310908c_Data> _131969_r) {
	if (_1d42b6b71_IsIgnoreIdent(_131931_lexpr.get()._field_Ident)) {
		if (_1e3136042_Void(_131969_r.get()._field_Kind.ptr())) {
			_1e321142a_pushErr((*_self_)._field_s.ptr(), _131913_a.get()._field_Right.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_131850_st.get()._field_L = jule::alloc_for_append(_131850_st.get()._field_L,1);_131850_st.get()._field_L.__push(nullptr);;
		return;;
	};
	if ((_131913_a.get()._field_Declarative && _1e31e81ae_isNewAssignIdent(&(*_self_), _131931_lexpr.get()._field_Ident))) {
		if (_1e31e2a05_isDuplicatedIdent(&(*_self_), 0LLU,_131931_lexpr.get()._field_Ident)) {
			_1e321142a_pushErr((*_self_)._field_s.ptr(), _131931_lexpr.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_131931_lexpr.get()._field_Ident)}));
			_1e3211749_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
			_1e31e1273_stop(&(*_self_));
			return;;
		};
		jule::Ptr<_1e322a147_Var> _133721_v = jule::new_ptr<_1e322a147_Var>(_1e322a147_Var{._field_Scope=(*_self_)._field_scope, ._field_Token=_131931_lexpr.get()._field_Token, ._field_Ident=_131931_lexpr.get()._field_Ident, ._field_Mutable=_131931_lexpr.get()._field_Mutable, ._field_Reference=_131931_lexpr.get()._field_Reference, ._field_Value=jule::new_ptr<_1e310a115_Value>(_1e310a115_Value{._field_Expr=_131913_a.get()._field_Right, ._field_Data=_131969_r}), });;
		_1e322288c_checkVar((*_self_)._field_s, _133721_v);
		_131850_st.get()._field_L = jule::alloc_for_append(_131850_st.get()._field_L,1);_131850_st.get()._field_L.__push(static_cast<jule::Any>(_133721_v));;
		(*_self_)._field_table.get()._field_Vars = jule::alloc_for_append((*_self_)._field_table.get()._field_Vars,1);(*_self_)._field_table.get()._field_Vars.__push(_133721_v);;
		(*_self_)._field_scope.get()._field_Stmts = jule::alloc_for_append((*_self_)._field_scope.get()._field_Stmts,1);(*_self_)._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_133721_v));;
		return;;
	};
	if ((_131931_lexpr.get()._field_Mutable || _131931_lexpr.get()._field_Reference)) {
		_1e321142a_pushErr((*_self_)._field_s.ptr(), _131931_lexpr.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_131931_lexpr.get()._field_Ident)}));
		_1e3211749_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((!(_1e31d5ec1_checkAssign((*_self_)._field_s,_131955_l,_131969_r,_131913_a.get()._field_Setter)))) {
		return;;
	};
	;
	_1e3219bc5_checkValidityForInitExpr((*_self_)._field_s, _131955_l.get()._field_Mutable,false,_131955_l.get()._field_Kind,_131969_r,_131913_a.get()._field_Setter);
	_1e30e495c_assignTypeChecker _137217_checker = _1e30e495c_assignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_131955_l.get()._field_Kind, ._field_d=_131969_r, ._field_errorToken=_131913_a.get()._field_Setter};;
	_1e30e5ad4_check(&_137217_checker);
	_131850_st.get()._field_L = jule::alloc_for_append(_131850_st.get()._field_L,1);_131850_st.get()._field_L.__push(_131955_l.get()._field_Model);;
}



inline void _1e31e9149_checkRetMultiAssign(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Ptr<_1e252440e_AssignSt>& _138344_a) {
	jule::Ptr<_1e310908c_Data> _138417_rd = _1e312664d_evalExpr(_1e3216991_eval(_self_.get()._field_s, jule::Trait<_1e315091e_Lookup>(_self_, 0)), _138344_a.get()._field_Right);;
	if ((_138417_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1e310908c_Data>> _138917_r = _1e31d5201_getDatasFromTupleData(_138417_rd);;
	{
		
		if ((_138344_a.get()._field_Left.len() > _138917_r.len())) {
			_case_begin_1e57cac67:;
			{
				_1e321142a_pushErr(_self_.get()._field_s.ptr(), _138344_a.get()._field_Setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((_138344_a.get()._field_Left.len() < _138917_r.len())) {
			_case_begin_1e57cacde:;
			{
				_1e321142a_pushErr(_self_.get()._field_s.ptr(), _138344_a.get()._field_Setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1e57ca43c:;
	};
	jule::Ptr<_1e31da448_MultiAssign> _140017_st = jule::new_ptr<_1e31da448_MultiAssign>(_1e31da448_MultiAssign{._field_R=_138417_rd.get()._field_Model});;
	if ((_1e3138b5a_Tup(_138417_rd.get()._field_Kind.ptr()) == nullptr)) {
		_140017_st.get()._field_R=static_cast<jule::Any>(jule::new_ptr<_1e2586828_TupleExprModel>(_1e2586828_TupleExprModel{._field_Datas=_138917_r}));
	};
	{
		auto &expr = _138344_a.get()._field_Left;
		auto it = expr.begin();
		_iter_begin_1e57cd9b2:;
		if (it != expr.end()) {
			jule::I64 _140813_i = it - expr.begin();
			{
				jule::Ptr<_1e2523dc0_AssignLeft> _140921_lexpr = _138344_a.get()._field_Left[_140813_i];;
				jule::Ptr<_1e310908c_Data> _141021_l = nullptr;;
				if (((!(_1d42b6b71_IsIgnoreIdent(_140921_lexpr.get()._field_Ident))) && ((!(_138344_a.get()._field_Declarative)) || (!(_1e31e81ae_isNewAssignIdent(_self_.ptr(), _140921_lexpr.get()._field_Ident)))))) {
					_141021_l=_1e312664d_evalExpr(_1e3216991_eval(_self_.get()._field_s, jule::Trait<_1e315091e_Lookup>(_self_, 0)), _140921_lexpr.get()._field_Expr);
					if ((_141021_l == nullptr)) {
						goto _iter_next_1e57cd9b2;
					};
				};
				_1e31e8db3_processEndPartOfMultiAssign(_self_.ptr(), _140017_st,_138344_a,_140921_lexpr,_141021_l,_138917_r[_140813_i]);
			}
			_iter_next_1e57cd9b2:;
			++it;
			_140813_i++;
			goto _iter_begin_1e57cd9b2;
		}
		_iter_end_1e57cd9b2:;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_140017_st));;
}



inline void _1e31e93be_checkMultiAssign(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Ptr<_1e252440e_AssignSt>& _142641_a) {
	{
		auto &_match_expr{ _142641_a.get()._field_Right.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e251de75_FnCallExpr>>()) {
			_case_begin_1e57d29c7:;
			{
				_1e31e9149_checkRetMultiAssign(_self_, _142641_a);
				return;;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e251b3e5_UnsafeExpr>>()) {
			_case_begin_1e57d2a4e:;
			{
				{
					auto &_match_expr{ _142641_a.get()._field_Right.get()._field_Kind.operator jule::Ptr<_1e251b3e5_UnsafeExpr>().get()._field_Expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_1e251de75_FnCallExpr>>()) {
						_case_begin_1e57d3d2a:;
						{
							_1e31e9149_checkRetMultiAssign(_self_, _142641_a);
							return;;
						}
					}
					_match_end_1e57d3ca3:;
				};
			}
		}
		_match_end_1e57d22bd:;
	};
	jule::Slice<jule::Any> _143917_right = _1e31d55a8_getExprModels(_142641_a.get()._field_Right.get()._field_Kind);;
	{
		
		if ((_142641_a.get()._field_Left.len() > _143917_right.len())) {
			_case_begin_1e57d4b50:;
			{
				_1e321142a_pushErr(_self_.get()._field_s.ptr(), _142641_a.get()._field_Setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((_142641_a.get()._field_Left.len() < _143917_right.len())) {
			_case_begin_1e57d4bc7:;
			{
				_1e321142a_pushErr(_self_.get()._field_s.ptr(), _142641_a.get()._field_Setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1e57d4a0c:;
	};
	jule::Ptr<_1e2586828_TupleExprModel> _145017_rightTuple = jule::new_ptr<_1e2586828_TupleExprModel>();;
	jule::Ptr<_1e31da448_MultiAssign> _145217_st = jule::new_ptr<_1e31da448_MultiAssign>(_1e31da448_MultiAssign{._field_R=static_cast<jule::Any>(_145017_rightTuple)});;
	{
		auto &expr = _142641_a.get()._field_Left;
		auto it = expr.begin();
		_iter_begin_1e57d749e:;
		if (it != expr.end()) {
			jule::I64 _145613_i = it - expr.begin();
			{
				jule::Ptr<_1e2523dc0_AssignLeft> _145721_lexpr = _142641_a.get()._field_Left[_145613_i];;
				jule::Ptr<_1e310908c_Data> _145821_l = nullptr;;
				if (((!(_1d42b6b71_IsIgnoreIdent(_145721_lexpr.get()._field_Ident))) && ((!(_142641_a.get()._field_Declarative)) || (!(_1e31e81ae_isNewAssignIdent(_self_.ptr(), _145721_lexpr.get()._field_Ident)))))) {
					_145821_l=_1e312664d_evalExpr(_1e3216991_eval(_self_.get()._field_s, jule::Trait<_1e315091e_Lookup>(_self_, 0)), _145721_lexpr.get()._field_Expr);
					if ((_145821_l == nullptr)) {
						goto _iter_next_1e57d749e;
					};
				};
				jule::Ptr<_1e2519ba7_Expr> _146821_expr = jule::new_ptr<_1e2519ba7_Expr>(_1e2519ba7_Expr{._field_Token=_142641_a.get()._field_Right.get()._field_Token, ._field_Kind=_143917_right[_145613_i]});;
				jule::Ptr<_1e310ab0a_Eval> _147221_eval = nullptr;;
				if ((_145821_l != nullptr)) {
					_147221_eval=_1e3216683_evalp(_self_.get()._field_s, jule::Trait<_1e315091e_Lookup>(_self_, 0),_145821_l.get()._field_Kind);
				} else {
					_147221_eval=_1e3216991_eval(_self_.get()._field_s, jule::Trait<_1e315091e_Lookup>(_self_, 0));
				};
				jule::Ptr<_1e310908c_Data> _147821_r = _1e312664d_evalExpr(_147221_eval, _146821_expr);;
				if ((_147821_r == nullptr)) {
					goto _iter_next_1e57d749e;
				};
				_145017_rightTuple.get()._field_Datas = jule::alloc_for_append(_145017_rightTuple.get()._field_Datas,1);_145017_rightTuple.get()._field_Datas.__push(_147821_r);;
				_1e31e8db3_processEndPartOfMultiAssign(_self_.ptr(), _145217_st,_142641_a,_145721_lexpr,_145821_l,_147821_r);
			}
			_iter_next_1e57d749e:;
			++it;
			_145613_i++;
			goto _iter_begin_1e57d749e;
		}
		_iter_end_1e57d749e:;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_145217_st));;
}



inline void _1e31e9644_checkAssignSt(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Ptr<_1e252440e_AssignSt> _149137_a) {
	{
		
		if (_1d42b8c1c_IsPostfixOp(_149137_a.get()._field_Setter.get()._field_Kind)) {
			_case_begin_1e57de0aa:;
			{
				_1e31e7da1_checkPostfix(_self_, _149137_a);
			}
		}
		else if (((_149137_a.get()._field_Left.len() == 1LL) && (!(_149137_a.get()._field_Declarative)))) {
			_case_begin_1e57ddc7a:;
			{
				_1e31e8885_checkSingleAssign(_self_, _149137_a);
			}
		}
		else {
			_case_begin_1e57ddc14:;
			{
				_1e31e93be_checkMultiAssign(_self_, _149137_a);
			}
		}
		_match_end_1e57dd6a3:;
	};
}



inline jule::Ptr<_1e31d6c3b_Scope> _1e31e99eb_checkCaseScope(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Ptr<_1e31db4d2_Case>& _150235_c, jule::Ptr<_1e25259a4_ScopeTree>& _150250_tree) {
	jule::Ptr<_1e31dd89c_scopeChecker> _150317_ssc = _1e31eddc9_newChildChecker(_self_);;
	_150317_ssc.get()._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_150235_c));
	return _1e31e39d4_checkChildSc(_self_, _150250_tree,_150317_ssc);
}



inline jule::Ptr<_1e31db4d2_Case> _1e31e9ee6_checkCase(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Ptr<_1e31da987_Match> _150833_m, jule::I64 _150844_i, jule::Ptr<_1e252c25d_Case> _150856_c, jule::Ptr<_1e310908c_Data> _150875_expr) {
	jule::Ptr<_1e31db4d2_Case> _150917_case = _150833_m.get()._field_Cases[_150844_i];;
	_150917_case.get()._field_Exprs=jule::Slice<jule::Ptr<_1e310908c_Data>>::alloc(0LL,_150856_c.get()._field_Exprs.len());
	jule::Bool _151117_genericMatched = false;;
	jule::Ptr<_1e310ab0a_Eval> _151217_eval = _1e3216991_eval(_self_.get()._field_s, jule::Trait<_1e315091e_Lookup>(_self_, 0));;
	{
		auto &expr = _150856_c.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1e57e405a:;
		if (it != expr.end()) {
			jule::Ptr<_1e2519ba7_Expr> _151321_e = *it;
			{
				jule::Ptr<_1e310908c_Data> _151421_d = _1e3126032_evalExprKind(_151217_eval, _151321_e.get()._field_Kind);;
				if ((_151421_d == nullptr)) {
					goto _iter_next_1e57e405a;
				};
				if (_150833_m.get()._field_TypeMatch) {
					_150917_case.get()._field_Exprs = jule::alloc_for_append(_150917_case.get()._field_Exprs,1);_150917_case.get()._field_Exprs.__push(_151421_d);;
					if ((_1e31d4e59_countMatchType(_150833_m,_151421_d.get()._field_Kind) > 1LL)) {
						_1e321142a_pushErr(_self_.get()._field_s.ptr(), _151321_e.get()._field_Token,jule::Str("duplicated pattern: type @ is already matched", 45),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_151421_d.get()._field_Kind.ptr()))}));
					};
					if (_150875_expr.get()._field_Kind.get()._field_Generic) {
						_151117_genericMatched=(_151117_genericMatched || _1e31355b3_Equals(_150875_expr.get()._field_Kind, _151421_d.get()._field_Kind));
					} else {
						if ((_1e313796c_TypeEnum(_150875_expr.get()._field_Kind.ptr()) != nullptr)) {
							_1e32173dc_checkTypeCompatibility(_self_.get()._field_s, _150875_expr.get()._field_Kind,_151421_d.get()._field_Kind,_151321_e.get()._field_Token);
						} else {
							jule::Ptr<_1e259d246_Trait> _152929_trt = _1e3138682_Trait(_150875_expr.get()._field_Kind.ptr());;
							if ((_152929_trt != nullptr)) {
								_1e32173dc_checkTypeCompatibility(_self_.get()._field_s, _150875_expr.get()._field_Kind,_151421_d.get()._field_Kind,_151321_e.get()._field_Token);
							};
						};
					};
					goto _iter_next_1e57e405a;
				};
				if (_151421_d.get()._field_Decl) {
					_1e321142a_pushErr(_self_.get()._field_s.ptr(), _151321_e.get()._field_Token,jule::Str("expecting expression, found type declaration", 44),jule::Slice<jule::Any>());
					_1e3211749_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49),jule::Slice<jule::Any>());
					goto _iter_next_1e57e405a;
				};
				_150917_case.get()._field_Exprs = jule::alloc_for_append(_150917_case.get()._field_Exprs,1);_150917_case.get()._field_Exprs.__push(_151421_d);;
				_1e30e495c_assignTypeChecker _154721_checker = _1e30e495c_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_150875_expr.get()._field_Kind, ._field_d=_151421_d, ._field_errorToken=_151321_e.get()._field_Token};;
				_1e30e5ad4_check(&_154721_checker);
			}
			_iter_next_1e57e405a:;
			++it;
			goto _iter_begin_1e57e405a;
		}
		_iter_end_1e57e405a:;
	};
	if ((((!(_150833_m.get()._field_TypeMatch)) || (!(_150875_expr.get()._field_Kind.get()._field_Generic))) || _151117_genericMatched)) {
		_150917_case.get()._field_Scope=_1e31e99eb_checkCaseScope(_self_, _150917_case,_150856_c.get()._field_Scope);
	};
	return _150917_case;
}



inline void _1e31ea3ae_checkCases(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Ptr<_1e252c934_MatchCase>& _156135_m, jule::Ptr<_1e31da987_Match> _156154_rm, jule::Ptr<_1e310908c_Data> _156170_expr) {
	_156154_rm.get()._field_Cases=jule::Slice<jule::Ptr<_1e31db4d2_Case>>::alloc(0LL,_156135_m.get()._field_Cases.len());
	{
		auto &expr = _156135_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1e57ec706:;
		if (it != expr.end()) {
			jule::I64 _156313_i = it - expr.begin();
			{
				jule::Ptr<_1e31db4d2_Case> _156421_case = jule::new_ptr<_1e31db4d2_Case>(_1e31db4d2_Case{._field_Owner=_156154_rm, });;
				if ((_156313_i > 0LL)) {
					_156154_rm.get()._field_Cases[(_156313_i - 1LL)].get()._field_Next=_156421_case;
				};
				_156154_rm.get()._field_Cases = jule::alloc_for_append(_156154_rm.get()._field_Cases,1);_156154_rm.get()._field_Cases.__push(_156421_case);;
			}
			_iter_next_1e57ec706:;
			++it;
			_156313_i++;
			goto _iter_begin_1e57ec706;
		}
		_iter_end_1e57ec706:;
	};
	if (((_156154_rm.get()._field_Default != nullptr) && (_156135_m.get()._field_Cases.len() > 0LL))) {
		_156154_rm.get()._field_Cases[(_156154_rm.get()._field_Cases.len() - 1LL)].get()._field_Next=_156154_rm.get()._field_Default;
	};
	{
		auto &expr = _156135_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1e5800c7b:;
		if (it != expr.end()) {
			jule::I64 _157714_i = it - expr.begin();
			jule::Ptr<_1e252c25d_Case> _157721_c = *it;
			{
				_1e31e9ee6_checkCase(_self_, _156154_rm,_157714_i,_157721_c,_156170_expr);
			}
			_iter_next_1e5800c7b:;
			++it;
			_157714_i++;
			goto _iter_begin_1e5800c7b;
		}
		_iter_end_1e5800c7b:;
	};
}



inline jule::Ptr<_1e31db4d2_Case> _1e31ea766_checkDefault(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Ptr<_1e31da987_Match> _158236_m, jule::Ptr<_1e252b191_Else> _158251_d) {
	jule::Ptr<_1e31db4d2_Case> _158317_def = jule::new_ptr<_1e31db4d2_Case>(_1e31db4d2_Case{._field_Owner=_158236_m, });;
	_158317_def.get()._field_Scope=_1e31e99eb_checkCaseScope(_self_, _158317_def,_158251_d.get()._field_Scope);
	return _158317_def;
}



inline void _1e31ea9db_checkComptimePanic(_1e31dd89c_scopeChecker* _self_, jule::Ptr<_1e31d6c3b_Scope>& _159038_s) {
	if ((_159038_s.get()._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _159513_stmt = _159038_s.get()._field_Stmts[0LL];;
	{
		auto &_match_expr{ _159513_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1e310908c_Data>>()) {
			_case_begin_1e580408c:;
			{
				jule::Ptr<_1e310908c_Data> _159817_d = _159513_stmt.operator jule::Ptr<_1e310908c_Data>();;
				{
					auto &_match_expr{ _159817_d.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_1e25872b8_BuiltinPanicCallExprModel>>()) {
						_case_begin_1e5804dc3:;
						{
							jule::Ptr<_1e25872b8_BuiltinPanicCallExprModel> _160121_m = _159817_d.get()._field_Model.operator jule::Ptr<_1e25872b8_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ _160121_m.get()._field_Expr };
								
								if (_match_expr.type_is<jule::Ptr<_1e23b4a96_Const>>()) {
									_case_begin_1e5805db3:;
									{
										jule::Ptr<_1e23b4a96_Const> _160425_c = _160121_m.get()._field_Expr.operator jule::Ptr<_1e23b4a96_Const>();;
										if (_1e257e4d0_IsStr(_160425_c.ptr())) {
											_1e321142a_pushErr((*_self_)._field_s.ptr(), (*_self_)._field_calledFrom,jule::Str("compile-time panic: @", 21),jule::Slice<jule::Any>::make({jule::Any(_1e257c137_ReadStr(_160425_c.ptr()))}));
										};
									}
								}
								_match_end_1e5805d19:;
							};
						}
					}
					_match_end_1e5804c80:;
				};
			}
		}
		_match_end_1e5804037:;
	};
}



inline void _1e31ead0a_pushTypeMatch(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Ptr<_1e31da987_Match> _161337_tm, jule::Ptr<_1e252c934_MatchCase>& _161354_m) {
	if (_161337_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic) {
		{
			auto &expr = _161337_tm.get()._field_Cases;
			auto it = expr.begin();
			_iter_begin_1e5805379:;
			if (it != expr.end()) {
				jule::Ptr<_1e31db4d2_Case> _161725_c = *it;
				{
					if ((_161725_c.get()._field_Scope != nullptr)) {
						_1e31ea9db_checkComptimePanic(_self_.ptr(), _161725_c.get()._field_Scope);
						_161337_tm.get()._field_Default=_161725_c;
						_161337_tm.get()._field_Cases=nullptr;
						goto _julec_label_push;
					};
				}
				_iter_next_1e5805379:;
				++it;
				goto _iter_begin_1e5805379;
			}
			_iter_end_1e5805379:;
		};
		if ((_161354_m.get()._field_Default != nullptr)) {
			_161337_tm.get()._field_Cases=nullptr;
			_161337_tm.get()._field_Default=_1e31ea766_checkDefault(_self_, _161337_tm,_161354_m.get()._field_Default);
			if ((_161337_tm.get()._field_Default != nullptr)) {
				_1e31ea9db_checkComptimePanic(_self_.ptr(), _161337_tm.get()._field_Default.get()._field_Scope);
			};
		};
	};
	_julec_label_push:;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_161337_tm));;
}



inline void _1e31eb080_checkTypeMatch(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Ptr<_1e252c934_MatchCase>& _163739_m) {
	jule::Ptr<_1e310908c_Data> _163817_d = _1e3126340_eval(_1e3216991_eval(_self_.get()._field_s, jule::Trait<_1e315091e_Lookup>(_self_, 0)), _163739_m.get()._field_Expr);;
	if ((_163817_d == nullptr)) {
		return;;
	};
	if (((!(_163817_d.get()._field_Kind.get()._field_Generic)) && (!(((((_1e3136ebb_Prim(_163817_d.get()._field_Kind.ptr()) != nullptr) && _1e313cd29_IsAny(_1e3136ebb_Prim(_163817_d.get()._field_Kind.ptr()).ptr())) || (_1e3138682_Trait(_163817_d.get()._field_Kind.ptr()) != nullptr)) || (_1e313796c_TypeEnum(_163817_d.get()._field_Kind.ptr()) != nullptr)))))) {
		_1e321142a_pushErr(_self_.get()._field_s.ptr(), _163739_m.get()._field_Expr.get()._field_Token,jule::Str("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e31da987_Match> _164917_tm = jule::new_ptr<_1e31da987_Match>(_1e31da987_Match{._field_Expr=_163817_d, ._field_TypeMatch=true, });;
	if (((!(_164917_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic)) && (_163739_m.get()._field_Default != nullptr))) {
		_164917_tm.get()._field_Default=_1e31ea766_checkDefault(_self_, _164917_tm,_163739_m.get()._field_Default);
	};
	_1e31ea3ae_checkCases(_self_, _163739_m,_164917_tm,_163817_d);
	_1e31ead0a_pushTypeMatch(_self_, _164917_tm,_163739_m);
}



inline void _1e31eb305_checkCommonMatch(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Ptr<_1e252c934_MatchCase>& _166241_m) {
	jule::Ptr<_1e310908c_Data> _166317_d = nullptr;;
	if ((_166241_m.get()._field_Expr == nullptr)) {
		_166317_d=jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_Constant=static__1e257aab4_NewBool(true)});
		_166317_d.get()._field_Model=static_cast<jule::Any>(_166317_d.get()._field_Constant);
	} else {
		_166317_d=_1e312664d_evalExpr(_1e3216991_eval(_self_.get()._field_s, jule::Trait<_1e315091e_Lookup>(_self_, 0)), _166241_m.get()._field_Expr);
		if ((_166317_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1e31da987_Match> _167717_mc = jule::new_ptr<_1e31da987_Match>(_1e31da987_Match{._field_Expr=_166317_d, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_167717_mc));;
	if ((_166241_m.get()._field_Default != nullptr)) {
		_167717_mc.get()._field_Default=_1e31ea766_checkDefault(_self_, _167717_mc,_166241_m.get()._field_Default);
	};
	_1e31ea3ae_checkCases(_self_, _166241_m,_167717_mc,_166317_d);
}



inline void _1e31eb57a_checkMatch(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Ptr<_1e252c934_MatchCase> _168934_m) {
	if (_168934_m.get()._field_TypeMatch) {
		_1e31eb080_checkTypeMatch(_self_, _168934_m);
		return;;
	};
	_1e31eb305_checkCommonMatch(_self_, _168934_m);
}



inline void _1e31eb800_checkFall(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Ptr<_1e25237b5_FallSt> _169729_f) {
	if ((((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_Stmts.len() + 1LL) < _self_.get()._field_scope.get()._field_Stmts.len())) || _1e31e174b_isDeferred(_self_))) {
		_1e321142a_pushErr(_self_.get()._field_s.ptr(), _169729_f.get()._field_Token,jule::Str("fall keyword can only useable at end of the case scopes", 55),jule::Slice<jule::Any>());
		return;;
	};
	_1e31db4d2_Case* _170517_case = ((_1e31db4d2_Case*)(_self_.get()._field_cse));;
	if ((_170517_case->_field_Next == nullptr)) {
		_1e321142a_pushErr(_self_.get()._field_s.ptr(), _169729_f.get()._field_Token,jule::Str("fall cannot useable at final case", 33),jule::Slice<jule::Any>());
		_1e3211749_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>());
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_1e31dba87_FallSt>(_1e31dba87_FallSt{._field_DestCase=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_170517_case->_field_Next))})));;
}



inline jule::Ptr<_1e31d918e_BreakSt> _1e31ebb0d_checkBreakWithLabel(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Ptr<_1e252a4ae_BreakSt> _171739_b) {
	jule::Ptr<_1e31d918e_BreakSt> _171817_brk = _1e31ebe1b_checkPlainBreak(_self_, _171739_b);;
	if ((_171817_brk == nullptr)) {
		return nullptr;
	};
	_171817_brk.get()._field_It=0LLU;
	_171817_brk.get()._field_Mtch=0LLU;
	jule::Ptr<_1e31dc615_scopeLabel> _172817_label = _1e31d4442_findLabelParent(_171739_b.get()._field_Label.get()._field_Kind,_self_.get()._field_parent);;
	if ((_172817_label == nullptr)) {
		_1e321142a_pushErr(_self_.get()._field_s.ptr(), _171739_b.get()._field_Label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_171739_b.get()._field_Label.get()._field_Kind)}));
		return nullptr;
	};
	_172817_label.get()._field_used=true;
	if (((_172817_label.get()._field_pos + 1LL) >= _172817_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_1e321142a_pushErr(_self_.get()._field_s.ptr(), _171739_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171739_b.get()._field_Label.get()._field_Kind)}));
		return nullptr;
	};
	jule::I64 _174113_i = (_172817_label.get()._field_pos + 1LL);;
	if ((_174113_i >= _172817_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_1e321142a_pushErr(_self_.get()._field_s.ptr(), _171739_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171739_b.get()._field_Label.get()._field_Kind)}));
	} else {
		jule::Any _174521_st = _172817_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_174113_i];;
		{
			auto &_match_expr{ _174521_st };
			
			if (_match_expr.type_is<jule::Ptr<_1e31d7a83_InfIter>>()) {
				_case_begin_1e581deca:;
				{
					_171817_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174521_st.operator jule::Ptr<_1e31d7a83_InfIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1e31d88db_RangeIter>>()) {
				_case_begin_1e582252d:;
				{
					_171817_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174521_st.operator jule::Ptr<_1e31d88db_RangeIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1e31d8006_WhileIter>>()) {
				_case_begin_1e5822594:;
				{
					_171817_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174521_st.operator jule::Ptr<_1e31d8006_WhileIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1e31da987_Match>>()) {
				_case_begin_1e582260a:;
				{
					_171817_brk.get()._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174521_st.operator jule::Ptr<_1e31da987_Match>()));
				}
			}
			else {
				_case_begin_1e58223c9:;
				{
					_1e321142a_pushErr(_self_.get()._field_s.ptr(), _171739_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171739_b.get()._field_Label.get()._field_Kind)}));
				}
			}
			_match_end_1e58222ec:;
		};
	};
	if ((_171817_brk.get()._field_It != 0LLU)) {
		if ((!(_1e31e709d_checkValidBreakLabel(_self_, _171817_brk.get()._field_It)))) {
			_1e321142a_pushErr(_self_.get()._field_s.ptr(), _171739_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171739_b.get()._field_Label.get()._field_Kind)}));
		};
	};
	if ((_171817_brk.get()._field_Mtch != 0LLU)) {
		if ((!(_1e31e709d_checkValidBreakLabel(_self_, _171817_brk.get()._field_Mtch)))) {
			_1e321142a_pushErr(_self_.get()._field_s.ptr(), _171739_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171739_b.get()._field_Label.get()._field_Kind)}));
		};
	};
	return _171817_brk;
}



inline jule::Ptr<_1e31d918e_BreakSt> _1e31ebe1b_checkPlainBreak(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Ptr<_1e252a4ae_BreakSt> _177535_b) {
	if (_1e31e174b_isDeferred(_self_)) {
		_1e321142a_pushErr(_self_.get()._field_s.ptr(), _177535_b.get()._field_Token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e31dd89c_scopeChecker> _178117_scope = _self_;;
	_julec_label_iter:;
	{
		
		if (((((_178117_scope.get()._field_it == 0LLU) && (_178117_scope.get()._field_cse == 0LLU)) && (_178117_scope.get()._field_parent != nullptr)) && (_178117_scope.get()._field_owner == nullptr))) {
			_case_begin_1e58288a8:;
			{
				_178117_scope=_178117_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_178117_scope.get()._field_it != 0LLU)) {
			_case_begin_1e5828930:;
			{
				return jule::new_ptr<_1e31d918e_BreakSt>(_1e31d918e_BreakSt{._field_It=_178117_scope.get()._field_it, });
			}
		}
		else if ((_178117_scope.get()._field_cse != 0LLU)) {
			_case_begin_1e58289a7:;
			{
				return jule::new_ptr<_1e31d918e_BreakSt>(_1e31d918e_BreakSt{._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(((_1e31db4d2_Case*)(_178117_scope.get()._field_cse))->_field_Owner))});
			}
		}
		_match_end_1e58287dc:;
	};
	_1e321142a_pushErr(_self_.get()._field_s.ptr(), _177535_b.get()._field_Token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1e31ec191_checkBreak(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Ptr<_1e252a4ae_BreakSt> _179730_b) {
	if ((_179730_b.get()._field_Label != nullptr)) {
		jule::Ptr<_1e31d918e_BreakSt> _179921_brk = _1e31ebb0d_checkBreakWithLabel(_self_, _179730_b);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_179921_brk));;
		return;;
	};
	jule::Ptr<_1e31d918e_BreakSt> _180417_brk = _1e31ebe1b_checkPlainBreak(_self_, _179730_b);;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_180417_brk));;
}



inline void _1e31ec416_checkRet(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Ptr<_1e2528831_RetSt> _180832_r) {
	if (_1e31e174b_isDeferred(_self_)) {
		_1e321142a_pushErr(_self_.get()._field_s.ptr(), _180832_r.get()._field_Token,jule::Str("deferred scopes are not supports return statements", 50),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e31dc00a_RetSt> _181317_rt = jule::new_ptr<_1e31dc00a_RetSt>(_1e31dc00a_RetSt{._field_Func=_1e31e19b0_getRoot(_self_).get()._field_owner, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_181317_rt));;
	jule::Ptr<_1e31022b6_retTypeChecker> _181817_rtc = jule::new_ptr<_1e31022b6_retTypeChecker>(_1e31022b6_retTypeChecker{._field_sc=_self_, ._field_f=_181317_rt.get()._field_Func, ._field_errorToken=_180832_r.get()._field_Token, });;
	jule::Bool _182313_ok = _1e31031a7_check(_181817_rtc.ptr(), _180832_r.get()._field_Expr);;
	if ((!(_182313_ok))) {
		return;;
	};
	if (((_180832_r.get()._field_Expr == nullptr) && (_181817_rtc.get()._field_vars.len() == 0LL))) {
		return;;
	};
	_181317_rt.get()._field_Vars=_181817_rtc.get()._field_vars;
	if ((_180832_r.get()._field_Expr != nullptr)) {
		_181317_rt.get()._field_Expr=_181817_rtc.get()._field_model;
	};
}



inline void _1e31ec68b_checkUseExpr(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Ptr<_1e251a548_UseExpr> _183932_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_1e321142a_pushErr(_self_.get()._field_s.ptr(), _183932_ue.get()._field_Token,jule::Str("use expressions cannot useable out of exceptional handler scopes", 64),jule::Slice<jule::Any>());
		return;;
	};
	if (_1e31e174b_isDeferred(_self_)) {
		_1e321142a_pushErr(_self_.get()._field_s.ptr(), _183932_ue.get()._field_Token,jule::Str("use expressions cannot useable in deferred scopes", 49),jule::Slice<jule::Any>());
	};
	if (((_self_.get()._field_i + 1LL) < _self_.get()._field_tree.get()._field_Stmts.len())) {
		_1e321142a_pushErr(_self_.get()._field_s.ptr(), _183932_ue.get()._field_Token,jule::Str("use expressions must be last statement of scope", 47),jule::Slice<jule::Any>());
	};
}



inline void _1e31ec911_checkNode(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Any& _185534_node) {
	{
		auto &_match_expr{ _185534_node };
		
		if (_match_expr.type_is<jule::Ptr<_1e25259a4_ScopeTree>>()) {
			_case_begin_1e5836e38:;
			{
				_1e31e4067_checkAnonScope(_self_, _185534_node.operator jule::Ptr<_1e25259a4_ScopeTree>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2528479_VarDecl>>()) {
			_case_begin_1e583692c:;
			{
				_1e31e2c7a_checkVarDecl(_self_, _185534_node.operator jule::Ptr<_1e2528479_VarDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e252bcda_TypeAliasDecl>>()) {
			_case_begin_1e5836d39:;
			{
				_1e31e3000_checkTypeAliasDecl(_self_, _185534_node.operator jule::Ptr<_1e252bcda_TypeAliasDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2519ba7_Expr>>()) {
			_case_begin_1e583717a:;
			{
				_1e31e460b_checkExpr(_self_, _185534_node.operator jule::Ptr<_1e2519ba7_Expr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e251b79c_CoExpr>>()) {
			_case_begin_1e5837334:;
			{
				_1e31e4881_checkCoExpr(_self_, _185534_node.operator jule::Ptr<_1e251b79c_CoExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e252b614_Conditional>>()) {
			_case_begin_1e583739a:;
			{
				_1e31e5222_checkConditional(_self_, _185534_node.operator jule::Ptr<_1e252b614_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2528e91_Iter>>()) {
			_case_begin_1e5837411:;
			{
				_1e31e6982_checkIter(_self_, _185534_node.operator jule::Ptr<_1e2528e91_Iter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e252a866_ContSt>>()) {
			_case_begin_1e5837477:;
			{
				_1e31e7631_checkCont(_self_, _185534_node.operator jule::Ptr<_1e252a866_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2523122_LabelSt>>()) {
			_case_begin_1e58374dd:;
			{
				_1e31e78a6_checkLabel(_self_, _185534_node.operator jule::Ptr<_1e2523122_LabelSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e25234c9_GotoSt>>()) {
			_case_begin_1e5837554:;
			{
				_1e31e7b2b_pushGoto(_self_, _185534_node.operator jule::Ptr<_1e25234c9_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e252440e_AssignSt>>()) {
			_case_begin_1e58375ba:;
			{
				_1e31e9644_checkAssignSt(_self_, _185534_node.operator jule::Ptr<_1e252440e_AssignSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e252c934_MatchCase>>()) {
			_case_begin_1e5837631:;
			{
				_1e31eb57a_checkMatch(_self_, _185534_node.operator jule::Ptr<_1e252c934_MatchCase>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e25237b5_FallSt>>()) {
			_case_begin_1e5837697:;
			{
				_1e31eb800_checkFall(_self_, _185534_node.operator jule::Ptr<_1e25237b5_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e252a4ae_BreakSt>>()) {
			_case_begin_1e583770d:;
			{
				_1e31ec191_checkBreak(_self_, _185534_node.operator jule::Ptr<_1e252a4ae_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2528831_RetSt>>()) {
			_case_begin_1e5837774:;
			{
				_1e31ec416_checkRet(_self_, _185534_node.operator jule::Ptr<_1e2528831_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e251a548_UseExpr>>()) {
			_case_begin_1e58377da:;
			{
				_1e31ec68b_checkUseExpr(_self_, _185534_node.operator jule::Ptr<_1e251a548_UseExpr>());
			}
		}
		else {
			_case_begin_1e5836aa3:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1e58369c6:;
	};
}



inline void _1e31ecadc_checkResult(jule::Ptr<_1e31dd89c_scopeChecker> _self_) {
	_1e2525399_Stmt _189517_stmt = _self_.get()._field_tree.get()._field_Stmts[(_self_.get()._field_tree.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _189517_stmt._field_Data };
		
		if (_match_expr.type_is<jule::Ptr<_1e251a548_UseExpr>>()) {
			_case_begin_1e5841717:;
			{
				jule::Ptr<_1e251a548_UseExpr> _189821_ue = _189517_stmt._field_Data.operator jule::Ptr<_1e251a548_UseExpr>();;
				jule::Ptr<_1e310908c_Data> _189921_d = _1e312664d_evalExpr(_1e3216991_eval(_self_.get()._field_s, jule::Trait<_1e315091e_Lookup>(_self_, 0)), _189821_ue.get()._field_Expr);;
				if ((_189921_d == nullptr)) {
					return;;
				};
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_189921_d));;
				jule::Ptr<_1e31022b6_retTypeChecker> _190421_rtc = jule::new_ptr<_1e31022b6_retTypeChecker>(_1e31022b6_retTypeChecker{._field_sc=_self_, ._field_types=_1e2590117_Types(_self_.get()._field_result.ptr()), ._field_errorToken=_189821_ue.get()._field_Expr.get()._field_Token, });;
				_1e31031a7_check(_190421_rtc.ptr(), _189821_ue.get()._field_Expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2519ba7_Expr>>()) {
			_case_begin_1e584177d:;
			{
				jule::Ptr<_1e2519ba7_Expr> _191121_expr = _189517_stmt._field_Data.operator jule::Ptr<_1e2519ba7_Expr>();;
				jule::Ptr<_1e310908c_Data> _191221_d = _1e312664d_evalExpr(_1e3216991_eval(_self_.get()._field_s, jule::Trait<_1e315091e_Lookup>(_self_, 0)), _191121_expr);;
				if ((_191221_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ _191221_d.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_1e2587c58_BuiltinErrorCallExprModel>>()) {
						_case_begin_1e5845e69:;
						{
							jule::Ptr<_1e2587c58_BuiltinErrorCallExprModel> _191825_m = _191221_d.get()._field_Model.operator jule::Ptr<_1e2587c58_BuiltinErrorCallExprModel>();;
							_1e31e4386_processErrorCall(_self_, _191825_m,_191121_expr.get()._field_Token);
							_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_191221_d));;
						}
					}
					else {
						_case_begin_1e5845d26:;
						{
							return;;
						}
					}
					_match_end_1e5845cc1:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e25234c9_GotoSt>>() || _match_expr.type_is<jule::Ptr<_1e252a4ae_BreakSt>>() || _match_expr.type_is<jule::Ptr<_1e252a866_ContSt>>() || _match_expr.type_is<jule::Ptr<_1e2528831_RetSt>>()) {
			_case_begin_1e5840dcb:;
			{
				_1e31ec911_checkNode(_self_, _189517_stmt._field_Data);
			}
		}
		else {
			_case_begin_1e5840d65:;
			{
				_1e31ec911_checkNode(_self_, _189517_stmt._field_Data);
				return;;
			}
		}
		_match_end_1e5840bde:;
	};
	_self_.get()._field_result=nullptr;
}



inline void _1e31eccb8_checkTree(jule::Ptr<_1e31dd89c_scopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	jule::I64 _194017_n = _self_.get()._field_tree.get()._field_Stmts.len();;
	if ((_self_.get()._field_result != nullptr)) {
		(_194017_n)--;
	};
	for (; (_self_.get()._field_i < _194017_n); (_self_.get()._field_i)++) {
		{
			_1e2525399_Stmt _194821_stmt = _self_.get()._field_tree.get()._field_Stmts[_self_.get()._field_i];;
			_1e31ec911_checkNode(_self_, _194821_stmt._field_Data);
			if (_1e31e14d7_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_1e58493ac:;
	}
	_iter_end_1e58493ac:;;
	if (((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_Stmts.len() != 0LL))) {
		_1e31ecadc_checkResult(_self_);
	};
}



inline void _1e31ed0d7_checkGoto(_1e31dd89c_scopeChecker* _self_, jule::Ptr<_1e31dca88_scopeGoto>& _195933_gt, jule::Ptr<_1e31dc615_scopeLabel>& _195954_label) {
	jule::Ptr<_1e31dd89c_scopeChecker> _196017_gtsc = _195933_gt.get()._field_scope;;
	while (((_196017_gtsc.get()._field_childIndex - 1LL) > _195954_label.get()._field_scope.get()._field_childIndex)) {
		{
			_196017_gtsc=_196017_gtsc.get()._field_parent;
		}
	_iter_next_1e584c49d:;
	}
	_iter_end_1e584c49d:;;
	jule::I64 _196517_n = 0LL;;
	if ((_196017_gtsc.get()._field_scope == _195954_label.get()._field_scope.get()._field_scope)) {
		if ((_195933_gt.get()._field_pos > _195954_label.get()._field_pos)) {
			return;;
		};
		_196517_n=_195933_gt.get()._field_pos;
	};
	jule::I64 _197817_i = (_195954_label.get()._field_pos - 1LL);;
	if ((_196517_n == 0LL)) {
		{
			auto &expr = _195954_label.get()._field_scope.get()._field_scope.get()._field_Stmts;
			auto it = expr.begin();
			_iter_begin_1e584ea99:;
			if (it != expr.end()) {
				jule::I64 _198117_j = it - expr.begin();
				jule::Any _198120_stmt = *it;
				{
					if (_1e31d4b18_stmtIsGotoScope(_198120_stmt,_196017_gtsc.get()._field_scope)) {
						_196517_n=_198117_j;
						goto _iter_end_1e584ea99;
					};
				}
				_iter_next_1e584ea99:;
				++it;
				_198117_j++;
				goto _iter_begin_1e584ea99;
			}
			_iter_end_1e584ea99:;
		};
	};
	for (; (_197817_i >= _196517_n); (_197817_i)--) {
		{
			jule::Any _199121_stmt = _195954_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_197817_i];;
			if (_1e31d67a7_stmtIsDef(_199121_stmt)) {
				_1e321142a_pushErr((*_self_)._field_s.ptr(), _195933_gt.get()._field_gt.get()._field_Token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>::make({jule::Any(_195933_gt.get()._field_gt.get()._field_Label.get()._field_Kind)}));
				return;;
			};
		}
	_iter_next_1e584e615:;
	}
	_iter_end_1e584e615:;;
}



inline void _1e31ed2b3_checkGotos(_1e31dd89c_scopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_gotos));
		auto it = expr.begin();
		_iter_begin_1e5851a02:;
		if (it != expr.end()) {
			jule::Ptr<_1e31dca88_scopeGoto> _200021_gt = *it;
			{
				jule::Ptr<_1e31dc615_scopeLabel> _200121_label = _1e31e264d_findLabelAll(&(*_self_), _200021_gt.get()._field_gt.get()._field_Label.get()._field_Kind);;
				if ((_200121_label == nullptr)) {
					_1e321142a_pushErr((*_self_)._field_s.ptr(), _200021_gt.get()._field_gt.get()._field_Token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_200021_gt.get()._field_gt.get()._field_Label.get()._field_Kind)}));
					goto _iter_next_1e5851a02;
				};
				_200121_label.get()._field_used=true;
				_1e31ed0d7_checkGoto(&(*_self_), _200021_gt,_200121_label);
			}
			_iter_next_1e5851a02:;
			++it;
			goto _iter_begin_1e5851a02;
		}
		_iter_end_1e5851a02:;
	};
}



inline void _1e31ed48e_checkLabels(_1e31dd89c_scopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1e5854e9a:;
		if (it != expr.end()) {
			jule::Ptr<_1e31dc615_scopeLabel> _201316_l = *it;
			{
				if ((!(_201316_l.get()._field_used))) {
					_1e321142a_pushErr((*_self_)._field_s.ptr(), _201316_l.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_201316_l.get()._field_label.get()._field_Ident)}));
				};
			}
			_iter_next_1e5854e9a:;
			++it;
			goto _iter_begin_1e5854e9a;
		}
		_iter_end_1e5854e9a:;
	};
}



inline void _1e31ed66a_checkVars(_1e31dd89c_scopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1e5855385:;
		if (it != expr.end()) {
			jule::Ptr<_1e322a147_Var> _202116_v = *it;
			{
				if (((((!(_202116_v.get()._field_Used)) && (!(_1d42b6b71_IsIgnoreIdent(_202116_v.get()._field_Ident)))) && (!(_1d42b6e18_IsAnonIdent(_202116_v.get()._field_Ident)))) && (_202116_v.get()._field_Ident != jule::Str("self", 4)))) {
					_1e321142a_pushErr((*_self_)._field_s.ptr(), _202116_v.get()._field_Token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_202116_v.get()._field_Ident)}));
				};
			}
			_iter_next_1e5855385:;
			++it;
			goto _iter_begin_1e5855385;
		}
		_iter_end_1e5855385:;
	};
}



inline void _1e31ed846_checkAliases(_1e31dd89c_scopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1e5857112:;
		if (it != expr.end()) {
			jule::Ptr<_1e31341b6_TypeAlias> _202916_a = *it;
			{
				if ((((!(_202916_a.get()._field_Used)) && (!(_1d42b6b71_IsIgnoreIdent(_202916_a.get()._field_Ident)))) && (!(_1d42b6e18_IsAnonIdent(_202916_a.get()._field_Ident))))) {
					_1e321142a_pushErr((*_self_)._field_s.ptr(), _202916_a.get()._field_Token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_202916_a.get()._field_Ident)}));
				};
			}
			_iter_next_1e5857112:;
			++it;
			goto _iter_begin_1e5857112;
		}
		_iter_end_1e5857112:;
	};
}



inline void _1e31edb65_check(jule::Ptr<_1e31dd89c_scopeChecker> _self_, jule::Ptr<_1e25259a4_ScopeTree>& _203730_tree, jule::Ptr<_1e31d6c3b_Scope>& _203753_s) {
	_203753_s.get()._field_Deferred=_203730_tree.get()._field_Deferred;
	_203753_s.get()._field_Unsafety=_203730_tree.get()._field_Unsafety;
	jule::I64 _204113_errors = _self_.get()._field_s.get()._field_errors.len();;
	_self_.get()._field_tree=_203730_tree;
	_self_.get()._field_scope=_203753_s;
	_1e31eccb8_checkTree(_self_);
	if ((_204113_errors == _self_.get()._field_s.get()._field_errors.len())) {
		_1e31ed66a_checkVars(_self_.ptr());
		_1e31ed846_checkAliases(_self_.ptr());
		if (_1e31e1097_isRoot(_self_.ptr())) {
			_1e31ed2b3_checkGotos(_self_.ptr());
			_1e31ed48e_checkLabels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_1e31dd89c_scopeChecker> _1e31eddc9_newChildChecker(jule::Ptr<_1e31dd89c_scopeChecker> _self_) {
	jule::Ptr<_1e31dd89c_scopeChecker> _206117_base = _1e31d3c6b_newScopeCheckerBase(_self_.get()._field_s,nullptr);;
	_206117_base.get()._field_parent=_self_;
	_206117_base.get()._field_labels=_self_.get()._field_labels;
	_206117_base.get()._field_gotos=_self_.get()._field_gotos;
	_206117_base.get()._field_childIndex=static_cast<jule::I64>((_self_.get()._field_childIndex + 1LL));
	return _206117_base;
}







std::ostream &operator<<(std::ostream &_Stream, _1e31dd89c_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1e31eedb9_checkCdef(_1e31ee979_directiveChecker* _self_, jule::Ptr<_1e24d1e8d_Directive>& _1629_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1e258b344_Fn>>()) {
			_case_begin_1e585e900:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1e258b344_Fn>().get()._field_CppLinked) {
					goto _match_end_1e585eb42;
				};
				goto _case_begin_1e585eb97;
			}
		}
		else {
			_case_begin_1e585eb97:;
			{
				_1e321142a_pushErr((*_self_)._field_s.ptr(), _1629_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_1629_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1e585eb42:;
	};
	if ((_1629_d.get()._field_Args.len() > 0LL)) {
		_1e321142a_pushErr((*_self_)._field_s.ptr(), _1629_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1e320013e_checkTypedef(_1e31ee979_directiveChecker* _self_, jule::Ptr<_1e24d1e8d_Directive>& _3232_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1e2505d6e_Struct>>()) {
			_case_begin_1e58629d0:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1e2505d6e_Struct>().get()._field_CppLinked) {
					goto _match_end_1e5862392;
				};
				goto _case_begin_1e58623e7;
			}
		}
		else {
			_case_begin_1e58623e7:;
			{
				_1e321142a_pushErr((*_self_)._field_s.ptr(), _3232_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_3232_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1e5862392:;
	};
	if ((_3232_d.get()._field_Args.len() > 0LL)) {
		_1e321142a_pushErr((*_self_)._field_s.ptr(), _3232_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1e32003b4_checkDerive(_1e31ee979_directiveChecker* _self_, jule::Ptr<_1e24d1e8d_Directive>& _4831_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1e2505d6e_Struct>>()) {
			_case_begin_1e58648e4:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1e2505d6e_Struct>().get()._field_CppLinked))) {
					goto _match_end_1e5864b14;
				};
				goto _case_begin_1e5864b69;
			}
		}
		else {
			_case_begin_1e5864b69:;
			{
				_1e321142a_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>());
			}
		}
		_match_end_1e5864b14:;
	};
	if ((_4831_d.get()._field_Args.len() == 0LL)) {
		_1e321142a_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1e3211749_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	} else if ((_4831_d.get()._field_Args.len() > 1LL)) {
		_1e321142a_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	{
		auto &_match_expr{ _4831_d.get()._field_Args[0LL].get()._field_Kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_1e58685eb:;
		}
		else {
			_case_begin_1e5864c9b:;
			{
				_1e321142a_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Args[0LL],jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_4831_d.get()._field_Args[0LL].get()._field_Kind)}));
			}
		}
		_match_end_1e58681ab:;
	};
}



inline void _1e3200639_checkNamespace(_1e31ee979_directiveChecker* _self_, jule::Ptr<_1e24d1e8d_Directive>& _7438_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1e2505d6e_Struct>>()) {
			_case_begin_1e586a0ae:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1e2505d6e_Struct>().get()._field_CppLinked))) {
					_1e321142a_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e258b344_Fn>>()) {
			_case_begin_1e5869663:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1e258b344_Fn>().get()._field_CppLinked))) {
					_1e321142a_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e322a147_Var>>()) {
			_case_begin_1e5869b08:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1e322a147_Var>().get()._field_CppLinked))) {
					_1e321142a_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else {
			_case_begin_1e58699c6:;
			{
				_1e321142a_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1e5869971:;
	};
	if ((_7438_d.get()._field_Args.len() == 0LL)) {
		_1e321142a_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_7438_d.get()._field_Args.len() > 1LL)) {
		_1e321142a_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d42b43cc_Token> _9913_arg = _7438_d.get()._field_Args[0LL];;
	if ((_9913_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_1e321142a_pushErr((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_9913_arg.get()._field_Kind[0LL] != '\"')) {
		_1e321142a_pushErr((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_7438_d.get()._field_Args[0LL].get()._field_Kind=_9913_arg.get()._field_Kind.slice(1LL,(_9913_arg.get()._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1e2505d6e_Struct>>()) {
			_case_begin_1e587320a:;
			{
				if ((_1e312e601_findDirective((*((*_self_)._field_d)),jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_1e24d1e8d_Directive> _11625_typedef = jule::new_ptr<_1e24d1e8d_Directive>(_1e24d1e8d_Directive{._field_Tag=_7438_d.get()._field_Tag, });;
					_11625_typedef.get()._field_Tag.get()._field_Kind=jule::Str("typedef", 7);
					(*((*_self_)._field_d))=jule::append((*((*_self_)._field_d)),jule::Slice<jule::Ptr<_1e24d1e8d_Directive>>::make({_11625_typedef}));
				};
			}
		}
		_match_end_1e58710d7:;
	};
}



inline void _1e32008ae_checkDeprecated(_1e31ee979_directiveChecker* _self_, jule::Ptr<_1e24d1e8d_Directive>& _12539_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1e2505d6e_Struct>>()) {
			_case_begin_1e5873e75:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1e2505d6e_Struct>().get()._field_CppLinked) {
					_1e321142a_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e258b344_Fn>>()) {
			_case_begin_1e5875493:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1e258b344_Fn>().get()._field_CppLinked) {
					_1e321142a_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e322a147_Var>>()) {
			_case_begin_1e5875509:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1e322a147_Var>().get()._field_CppLinked) {
					_1e321142a_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else {
			_case_begin_1e5874d99:;
			{
				_1e321142a_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1e587376b:;
	};
	if ((_12539_d.get()._field_Args.len() == 0LL)) {
		return;;
	};
	if ((_12539_d.get()._field_Args.len() > 1LL)) {
		_1e321142a_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d42b43cc_Token> _15013_arg = _12539_d.get()._field_Args[0LL];;
	if ((_15013_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_1e321142a_pushErr((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_15013_arg.get()._field_Kind[0LL] != '\"')) {
		_1e321142a_pushErr((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_12539_d.get()._field_Args[0LL].get()._field_Kind=_15013_arg.get()._field_Kind.slice(1LL,(_15013_arg.get()._field_Kind.len() - 1LL));
}



inline void _1e3200b34_checkTest(_1e31ee979_directiveChecker* _self_, jule::Ptr<_1e24d1e8d_Directive>& _16429_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1e258b344_Fn>>()) {
			_case_begin_1e587cc70:;
			{
				jule::Ptr<_1e258b344_Fn> _16717_f = (*_self_)._field_o.operator jule::Ptr<_1e258b344_Fn>();;
				if ((((!(_16717_f.get()._field_CppLinked)) && (!(_1e258bee3_IsInit(_16717_f.ptr())))) && (!(_1e258bc7e_IsEntryPoint(_16717_f.ptr()))))) {
					goto _match_end_1e587d787;
				};
				if (_1e258ba1a_IsMethod(_16717_f.ptr())) {
					_1e321142a_pushErr((*_self_)._field_s.ptr(), _16717_f.get()._field_Token,jule::Str("you cannot declare test methods", 31),jule::Slice<jule::Any>());
					goto _match_end_1e587d787;
				};
				goto _case_begin_1e587d7dc;
			}
		}
		else {
			_case_begin_1e587d7dc:;
			{
				_1e321142a_pushErr((*_self_)._field_s.ptr(), _16429_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_16429_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1e587d787:;
	};
	if ((_16429_d.get()._field_Args.len() > 0LL)) {
		_1e321142a_pushErr((*_self_)._field_s.ptr(), _16429_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1e3200da9_checkDirective(_1e31ee979_directiveChecker* _self_, jule::Ptr<_1e24d1e8d_Directive>& _18538_d) {
	{
		auto &_match_expr{ _18538_d.get()._field_Tag.get()._field_Kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_1e5883083:;
			{
				_1e31eedb9_checkCdef(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_1e5882758:;
			{
				_1e320013e_checkTypedef(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_1e58827be:;
			{
				_1e32003b4_checkDerive(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_1e5882835:;
			{
				_1e3200639_checkNamespace(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_1e588289b:;
			{
				_1e32008ae_checkDeprecated(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_1e58834e5:;
			{
				_1e3200b34_checkTest(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_1e588355b:;
			{
				_1e321142a_pushErr((*_self_)._field_s.ptr(), _18538_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_18538_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		else {
			_case_begin_1e58826e2:;
			{
				_1e321142a_pushErr((*_self_)._field_s.ptr(), _18538_d.get()._field_Tag,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_18538_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1e5882637:;
	};
}



inline void _1e3201085_check(_1e31ee979_directiveChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_d));
		auto it = expr.begin();
		_iter_begin_1e5885b24:;
		if (it != expr.end()) {
			jule::Ptr<_1e24d1e8d_Directive> _20821_d = *it;
			{
				_1e3200da9_checkDirective(&(*_self_), _20821_d);
			}
			_iter_next_1e5885b24:;
			++it;
			goto _iter_begin_1e5885b24;
		}
		_iter_end_1e5885b24:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e31ee979_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e320561c_ImportInfo> _1e3205b39_FindPackage(_1e320561c_ImportInfo* _self_, jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1e320561c_ImportInfo> _1e3205e47_SelectPackage(_1e320561c_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_1e320561c_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1e322a147_Var> _1e32062ee_FindVar(_1e320561c_ImportInfo* _self_, jule::Str _18130_ident, jule::Bool ) {
	if ((!(_1e3207bd5_isLookupable(&(*_self_), _18130_ident)))) {
		return nullptr;
	};
	return _1e320321e_findVarInPackage((*_self_)._field_Package.get()._field_Files,_18130_ident,false);
}



inline jule::Ptr<_1e31341b6_TypeAlias> _1e32066a6_FindTypeAlias(_1e320561c_ImportInfo* _self_, jule::Str _19336_ident, jule::Bool ) {
	if ((!(_1e3207bd5_isLookupable(&(*_self_), _19336_ident)))) {
		return nullptr;
	};
	return _1e320364d_findTypeAliasInPackage((*_self_)._field_Package.get()._field_Files,_19336_ident,false);
}



inline jule::Ptr<_1e2505d6e_Struct> _1e3206a5d_FindStruct(_1e320561c_ImportInfo* _self_, jule::Str _20533_ident, jule::Bool ) {
	if ((!(_1e3207bd5_isLookupable(&(*_self_), _20533_ident)))) {
		return nullptr;
	};
	return _1e3203a38_findStructInPackage((*_self_)._field_Package.get()._field_Files,_20533_ident,false);
}



inline jule::Ptr<_1e258b344_Fn> _1e3206e15_FindFn(_1e320561c_ImportInfo* _self_, jule::Str _21729_ident, jule::Bool ) {
	if ((!(_1e3207bd5_isLookupable(&(*_self_), _21729_ident)))) {
		return nullptr;
	};
	return _1e3203e9a_findFnInPackage((*_self_)._field_Package.get()._field_Files,_21729_ident,false);
}



inline jule::Ptr<_1e259d246_Trait> _1e3207223_FindTrait(_1e320561c_ImportInfo* _self_, jule::Str _22832_ident) {
	if ((!(_1e3207bd5_isLookupable(&(*_self_), _22832_ident)))) {
		return nullptr;
	};
	return _1e32042a8_findTraitInPackage((*_self_)._field_Package.get()._field_Files,_22832_ident);
}



inline jule::Ptr<_1e25a038b_Enum> _1e3207531_FindEnum(_1e320561c_ImportInfo* _self_, jule::Str _23931_ident) {
	if ((!(_1e3207bd5_isLookupable(&(*_self_), _23931_ident)))) {
		return nullptr;
	};
	return _1e32045e9_findEnumInPackage((*_self_)._field_Package.get()._field_Files,_23931_ident);
}



inline jule::Ptr<_1e25a1986_TypeEnum> _1e320783e_FindTypeEnum(_1e320561c_ImportInfo* _self_, jule::Str _25035_ident) {
	if ((!(_1e3207bd5_isLookupable(&(*_self_), _25035_ident)))) {
		return nullptr;
	};
	return _1e320493a_findTypeEnumInPackage((*_self_)._field_Package.get()._field_Files,_25035_ident);
}



inline jule::Bool _1e3207bd5_isLookupable(_1e320561c_ImportInfo* _self_, jule::Str _25927_ident) {
	if ((*_self_)._field_CppLinked) {
		return false;
	};
	if ((!((*_self_)._field_ImportAll))) {
		if ((((*_self_)._field_Alias.len() != 0LL) || _1e3207ee3_existIdent(&(*_self_), jule::Str("self", 4)))) {
			return true;
		};
		if (((*_self_)._field_Selected.len() > 0LL)) {
			if ((!(_1e3207ee3_existIdent(&(*_self_), _25927_ident)))) {
				return false;
			};
		};
	};
	return true;
}



inline jule::Bool _1e3207ee3_existIdent(_1e320561c_ImportInfo* _self_, jule::Str _27925_ident) {
	{
		auto &expr = (*_self_)._field_Selected;
		auto it = expr.begin();
		_iter_begin_1e589a93b:;
		if (it != expr.end()) {
			jule::Ptr<_1d42b43cc_Token> &_28016_sident = *it;
			{
				if ((_28016_sident.get()._field_Kind == _27925_ident)) {
					return true;
				};
			}
			_iter_next_1e589a93b:;
			++it;
			goto _iter_begin_1e589a93b;
		}
		_iter_end_1e589a93b:;
	};
	return false;
}



inline jule::Bool _1e3208279_isAccessibleViaSelection(_1e320561c_ImportInfo* _self_) {
	return (((*_self_)._field_ImportAll || ((*_self_)._field_Selected.len() == 0LL)) || _1e3207ee3_existIdent(&(*_self_), jule::Str("self", 4)));
}







std::ostream &operator<<(std::ostream &_Stream, _1e320561c_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e320561c_ImportInfo> _1e3208a4e_FindPackage(_1e3208576_Package* _self_, jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1e320561c_ImportInfo> _1e3208d5c_SelectPackage(_1e3208576_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_1e320561c_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1e322a147_Var> _1e3209214_FindVar(_1e3208576_Package* _self_, jule::Str _30930_ident, jule::Bool _30942_cpp_linked) {
	return _1e320321e_findVarInPackage((*_self_)._field_Files,_30930_ident,_30942_cpp_linked);
}



inline jule::Ptr<_1e31341b6_TypeAlias> _1e32095bb_FindTypeAlias(_1e3208576_Package* _self_, jule::Str _31536_ident, jule::Bool _31548_cpp_linked) {
	return _1e320364d_findTypeAliasInPackage((*_self_)._field_Files,_31536_ident,_31548_cpp_linked);
}



inline jule::Ptr<_1e2505d6e_Struct> _1e3209973_FindStruct(_1e3208576_Package* _self_, jule::Str _32133_ident, jule::Bool _32145_cpp_linked) {
	return _1e3203a38_findStructInPackage((*_self_)._field_Files,_32133_ident,_32145_cpp_linked);
}



inline jule::Ptr<_1e258b344_Fn> _1e3209d2a_FindFn(_1e3208576_Package* _self_, jule::Str _32729_ident, jule::Bool _32741_cpp_linked) {
	return _1e3203e9a_findFnInPackage((*_self_)._field_Files,_32729_ident,_32741_cpp_linked);
}



inline jule::Ptr<_1e259d246_Trait> _1e320a138_FindTrait(_1e3208576_Package* _self_, jule::Str _33332_ident) {
	return _1e32042a8_findTraitInPackage((*_self_)._field_Files,_33332_ident);
}



inline jule::Ptr<_1e25a038b_Enum> _1e320a446_FindEnum(_1e3208576_Package* _self_, jule::Str _33931_ident) {
	return _1e32045e9_findEnumInPackage((*_self_)._field_Files,_33931_ident);
}



inline jule::Ptr<_1e25a1986_TypeEnum> _1e320a754_FindTypeEnum(_1e3208576_Package* _self_, jule::Str _34535_ident) {
	return _1e320493a_findTypeEnumInPackage((*_self_)._field_Files,_34535_ident);
}







std::ostream &operator<<(std::ostream &_Stream, _1e3208576_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e320561c_ImportInfo> _1e320dc85_FindPackage(_1e320d768_Sema* _self_, jule::Str _21934_ident) {
	return _1e310484b_FindPackage((*_self_)._field_file.ptr(), _21934_ident);
}



inline jule::Ptr<_1e320561c_ImportInfo> _1e320e093_SelectPackage(_1e320d768_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_1e320561c_ImportInfo>)> _22936_selector) {
	return _1e3104b59_SelectPackage((*_self_)._field_file.ptr(), _22936_selector);
}



inline jule::Ptr<_1e322a147_Var> _1e320e44a_FindVar(_1e320d768_Sema* _self_, jule::Str _23930_ident, jule::Bool _23942_cpp_linked) {
	jule::Ptr<_1e322a147_Var> _24117_v = _1e320321e_findVarInPackage((*_self_)._field_files,_23930_ident,_23942_cpp_linked);;
	if ((_24117_v != nullptr)) {
		return _24117_v;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1e58c32d2:;
		if (it != expr.end()) {
			jule::Ptr<_1e320561c_ImportInfo> _24721_imp = *it;
			{
				if ((!(_1e320c190_impIsLookupable(_24721_imp,_23930_ident)))) {
					goto _iter_next_1e58c32d2;
				};
				_24117_v=_1e32062ee_FindVar(_24721_imp.ptr(), _23930_ident,_23942_cpp_linked);
				if (((_24117_v != nullptr) && _1e3211b01_isAccessibleDefine(&(*_self_), _24117_v.get()._field_Public,_24117_v.get()._field_Token))) {
					return _24117_v;
				};
			}
			_iter_next_1e58c32d2:;
			++it;
			goto _iter_begin_1e58c32d2;
		}
		_iter_end_1e58c32d2:;
	};
	return nullptr;
}



inline jule::Ptr<_1e31341b6_TypeAlias> _1e320e802_FindTypeAlias(_1e320d768_Sema* _self_, jule::Str _26636_ident, jule::Bool _26648_cpp_linked) {
	jule::Ptr<_1e31341b6_TypeAlias> _26817_ta = _1e320364d_findTypeAliasInPackage((*_self_)._field_files,_26636_ident,_26648_cpp_linked);;
	if ((_26817_ta != nullptr)) {
		return _26817_ta;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1e58c5c85:;
		if (it != expr.end()) {
			jule::Ptr<_1e320561c_ImportInfo> _27421_imp = *it;
			{
				if ((!(_1e320c190_impIsLookupable(_27421_imp,_26636_ident)))) {
					goto _iter_next_1e58c5c85;
				};
				_26817_ta=_1e32066a6_FindTypeAlias(_27421_imp.ptr(), _26636_ident,_26648_cpp_linked);
				if (((_26817_ta != nullptr) && _1e3211b01_isAccessibleDefine(&(*_self_), _26817_ta.get()._field_Public,_26817_ta.get()._field_Token))) {
					return _26817_ta;
				};
			}
			_iter_next_1e58c5c85:;
			++it;
			goto _iter_begin_1e58c5c85;
		}
		_iter_end_1e58c5c85:;
	};
	return nullptr;
}



inline jule::Ptr<_1e2505d6e_Struct> _1e320eba9_FindStruct(_1e320d768_Sema* _self_, jule::Str _29333_ident, jule::Bool _29345_cppLinked) {
	jule::Ptr<_1e2505d6e_Struct> _29517_s = _1e3203a38_findStructInPackage((*_self_)._field_files,_29333_ident,_29345_cppLinked);;
	if ((_29517_s != nullptr)) {
		return _29517_s;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1e58c8738:;
		if (it != expr.end()) {
			jule::Ptr<_1e320561c_ImportInfo> _30021_imp = *it;
			{
				if ((!(_1e320c190_impIsLookupable(_30021_imp,_29333_ident)))) {
					goto _iter_next_1e58c8738;
				};
				_29517_s=_1e3206a5d_FindStruct(_30021_imp.ptr(), _29333_ident,_29345_cppLinked);
				if (((_29517_s != nullptr) && _1e3211b01_isAccessibleDefine(&(*_self_), _29517_s.get()._field_Public,_29517_s.get()._field_Token))) {
					return _29517_s;
				};
			}
			_iter_next_1e58c8738:;
			++it;
			goto _iter_begin_1e58c8738;
		}
		_iter_end_1e58c8738:;
	};
	return nullptr;
}



inline jule::Ptr<_1e258b344_Fn> _1e3210061_FindFn(_1e320d768_Sema* _self_, jule::Str _31829_ident, jule::Bool _31841_cpp_linked) {
	jule::Ptr<_1e258b344_Fn> _32017_f = _1e3203e9a_findFnInPackage((*_self_)._field_files,_31829_ident,_31841_cpp_linked);;
	if ((_32017_f != nullptr)) {
		return _32017_f;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1e58cb1db:;
		if (it != expr.end()) {
			jule::Ptr<_1e320561c_ImportInfo> _32621_imp = *it;
			{
				if ((!(_1e320c190_impIsLookupable(_32621_imp,_31829_ident)))) {
					goto _iter_next_1e58cb1db;
				};
				_32017_f=_1e3206e15_FindFn(_32621_imp.ptr(), _31829_ident,_31841_cpp_linked);
				if (((_32017_f != nullptr) && _1e3211b01_isAccessibleDefine(&(*_self_), _32017_f.get()._field_Public,_32017_f.get()._field_Token))) {
					return _32017_f;
				};
			}
			_iter_next_1e58cb1db:;
			++it;
			goto _iter_begin_1e58cb1db;
		}
		_iter_end_1e58cb1db:;
	};
	return nullptr;
}



inline jule::Ptr<_1e259d246_Trait> _1e321036e_FindTrait(_1e320d768_Sema* _self_, jule::Str _34532_ident) {
	jule::Ptr<_1e259d246_Trait> _34717_t = _1e32042a8_findTraitInPackage((*_self_)._field_files,_34532_ident);;
	if ((_34717_t != nullptr)) {
		return _34717_t;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1e58cd82b:;
		if (it != expr.end()) {
			jule::Ptr<_1e320561c_ImportInfo> _35321_imp = *it;
			{
				if ((!(_1e320c190_impIsLookupable(_35321_imp,_34532_ident)))) {
					goto _iter_next_1e58cd82b;
				};
				_34717_t=_1e3207223_FindTrait(_35321_imp.ptr(), _34532_ident);
				if (((_34717_t != nullptr) && _1e3211b01_isAccessibleDefine(&(*_self_), _34717_t.get()._field_Public,_34717_t.get()._field_Token))) {
					return _34717_t;
				};
			}
			_iter_next_1e58cd82b:;
			++it;
			goto _iter_begin_1e58cd82b;
		}
		_iter_end_1e58cd82b:;
	};
	return nullptr;
}



inline jule::Ptr<_1e25a038b_Enum> _1e321067c_FindEnum(_1e320d768_Sema* _self_, jule::Str _37231_ident) {
	jule::Ptr<_1e25a038b_Enum> _37417_e = _1e32045e9_findEnumInPackage((*_self_)._field_files,_37231_ident);;
	if ((_37417_e != nullptr)) {
		return _37417_e;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1e58d106a:;
		if (it != expr.end()) {
			jule::Ptr<_1e320561c_ImportInfo> _38021_imp = *it;
			{
				if ((!(_1e320c190_impIsLookupable(_38021_imp,_37231_ident)))) {
					goto _iter_next_1e58d106a;
				};
				_37417_e=_1e3207531_FindEnum(_38021_imp.ptr(), _37231_ident);
				if (((_37417_e != nullptr) && _1e3211b01_isAccessibleDefine(&(*_self_), _37417_e.get()._field_Public,_37417_e.get()._field_Token))) {
					return _37417_e;
				};
			}
			_iter_next_1e58d106a:;
			++it;
			goto _iter_begin_1e58d106a;
		}
		_iter_end_1e58d106a:;
	};
	return nullptr;
}



inline jule::Ptr<_1e25a1986_TypeEnum> _1e321098a_FindTypeEnum(_1e320d768_Sema* _self_, jule::Str _39935_ident) {
	jule::Ptr<_1e25a1986_TypeEnum> _40117_e = _1e320493a_findTypeEnumInPackage((*_self_)._field_files,_39935_ident);;
	if ((_40117_e != nullptr)) {
		return _40117_e;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1e58d37a9:;
		if (it != expr.end()) {
			jule::Ptr<_1e320561c_ImportInfo> _40721_imp = *it;
			{
				if ((!(_1e320c190_impIsLookupable(_40721_imp,_39935_ident)))) {
					goto _iter_next_1e58d37a9;
				};
				_40117_e=_1e320783e_FindTypeEnum(_40721_imp.ptr(), _39935_ident);
				if (((_40117_e != nullptr) && _1e3211b01_isAccessibleDefine(&(*_self_), _40117_e.get()._field_Public,_40117_e.get()._field_Token))) {
					return _40117_e;
				};
			}
			_iter_next_1e58d37a9:;
			++it;
			goto _iter_begin_1e58d37a9;
		}
		_iter_end_1e58d37a9:;
	};
	return nullptr;
}



inline jule::Bool _1e3210cdc_isFlag(_1e320d768_Sema* _self_, jule::I64 _42321_flags) {
	return (((*_self_)._field_flags & _42321_flags) == _42321_flags);
}



inline void _1e3211062_setCurrentFile(_1e320d768_Sema* _self_, jule::Ptr<_1e310432e_SymbolTable> _42537_f) {
	(*_self_)._field_file=_42537_f;
}



inline void _1e321142a_pushErr(_1e320d768_Sema* _self_, jule::Ptr<_1d42b43cc_Token> _42726_token, jule::Str _42741_fmt, jule::Slice<jule::Any> _42754_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1e320bd4e_compilerErr(_42726_token,true,_42741_fmt,jule::Any(_42754_args)));;
}



inline void _1e3211749_pushSugggestion(_1e320d768_Sema* _self_, jule::Str _43234_fmt, jule::Slice<jule::Any> _43247_args) {
	{
		_1e320d2d4_pushSugggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_43234_fmt,jule::Any(_43247_args));
	};
}



inline jule::Bool _1e3211b01_isAccessibleDefine(_1e320d768_Sema* _self_, jule::Bool _43733_public, jule::Ptr<_1d42b43cc_Token> _43747_token) {
	return ((_43733_public || (_43747_token.get()._field_File == nullptr)) || (_1d42ba15d_Dir((*_self_)._field_file.get()._field_File.ptr()) == _1d42ba15d_Dir(_43747_token.get()._field_File.ptr())));
}



inline jule::Bool _1e3212052_isDuplicatedIdent(_1e320d768_Sema* _self_, jule::Uintptr _44432_itself, jule::Str _44449_ident, jule::Bool _44461_cpp_linked) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1e58da470:;
		if (it != expr.end()) {
			jule::Ptr<_1e310432e_SymbolTable> &_44516_f = *it;
			{
				if (_1e310782c_isDuplicatedIdent(_44516_f.ptr(), _44432_itself,_44449_ident,_44461_cpp_linked)) {
					return true;
				};
				{
					auto &expr = _44516_f.get()._field_Imports;
					auto it = expr.begin();
					_iter_begin_1e58dad33:;
					if (it != expr.end()) {
						jule::Ptr<_1e320561c_ImportInfo> &_45020_imp = *it;
						{
							{
								auto &expr = _45020_imp.get()._field_Selected;
								auto it = expr.begin();
								_iter_begin_1e58dbbbe:;
								if (it != expr.end()) {
									jule::Ptr<_1d42b43cc_Token> &_45124_selected = *it;
									{
										if ((_45124_selected.get()._field_Kind == _44449_ident)) {
											return true;
										};
									}
									_iter_next_1e58dbbbe:;
									++it;
									goto _iter_begin_1e58dbbbe;
								}
								_iter_end_1e58dbbbe:;
							};
						}
						_iter_next_1e58dad33:;
						++it;
						goto _iter_begin_1e58dad33;
					}
					_iter_end_1e58dad33:;
				};
			}
			_iter_next_1e58da470:;
			++it;
			goto _iter_begin_1e58da470;
		}
		_iter_end_1e58da470:;
	};
	return false;
}



inline void _1e3212371_checkDirectives(jule::Ptr<_1e320d768_Sema> _self_, jule::Slice<jule::Ptr<_1e24d1e8d_Directive>>& _46140_d, jule::Any _46166_o) {
	_1e31ee979_directiveChecker _46217_dc = _1e31ee979_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1e24d1e8d_Directive>>>)((&(_46140_d)))), ._field_o=jule::Any(_46166_o)};;
	_1e3201085_check(&_46217_dc);
}



inline jule::Bool _1e32127c2_checkGenericQuantity(_1e320d768_Sema* _self_, jule::I64 _47039_required, jule::I64 _47054_given, jule::Ptr<_1d42b43cc_Token> _47066_token) {
	jule::Bool _47083_ok = jule::Bool();
	{
		
		if (((_47039_required == 0LL) && (_47054_given > 0LL))) {
			_case_begin_1e58de908:;
			{
				_1e321142a_pushErr(&(*_self_), _47066_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
				_47083_ok = false;
				return _47083_ok;
			}
		}
		else if (((_47039_required > 0LL) && (_47054_given == 0LL))) {
			_case_begin_1e58de9d5:;
			{
				_1e321142a_pushErr(&(*_self_), _47066_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				_47083_ok = false;
				return _47083_ok;
			}
		}
		else if ((_47039_required < _47054_given)) {
			_case_begin_1e58dea4b:;
			{
				_1e321142a_pushErr(&(*_self_), _47066_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>());
				_47083_ok = false;
				return _47083_ok;
			}
		}
		else if ((_47039_required > _47054_given)) {
			_case_begin_1e58de72c:;
			{
				_1e321142a_pushErr(&(*_self_), _47066_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>());
				_47083_ok = false;
				return _47083_ok;
			}
		}
		else {
			_case_begin_1e58de298:;
			{
				_47083_ok = true;
				return _47083_ok;
			}
		}
		_match_end_1e58de1bb:;
	};
}



inline jule::Bool _1e3212b9b_isDuplicatedImportSelection(_1e320d768_Sema* _self_, jule::Uintptr _48942_itself, jule::Str _48959_ident) {
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1e58e2983:;
		if (it != expr.end()) {
			jule::Ptr<_1e320561c_ImportInfo> &_49016_imp = *it;
			{
				if ((static_cast<jule::Uintptr>(_49016_imp) == _48942_itself)) {
					goto _iter_end_1e58e2983;
				};
				if (_1e3207ee3_existIdent(_49016_imp.ptr(), _48959_ident)) {
					return true;
				};
			}
			_iter_next_1e58e2983:;
			++it;
			goto _iter_begin_1e58e2983;
		}
		_iter_end_1e58e2983:;
	};
	return false;
}



inline jule::Any _1e3213064_getImportDef(_1e320d768_Sema* _self_, jule::Str _50227_ident, jule::Ptr<_1e320561c_ImportInfo>& _50244_imp) {
	if ((_1e3263aa9_findPackageBuiltinDef(_50244_imp.get()._field_LinkPath,_50227_ident) != nullptr)) {
		return jule::Any(true);
	};
	{
		auto &expr = _50244_imp.get()._field_Package.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1e58e42d1:;
		if (it != expr.end()) {
			jule::Ptr<_1e310432e_SymbolTable> _50621_f = *it;
			{
				;
				jule::Any _50921_def = _1e31073cb_defByIdent(_50621_f.ptr(), _50227_ident,false);;
				if ((_50921_def != nullptr)) {
					return jule::Any(_50921_def);
				};
			}
			_iter_next_1e58e42d1:;
			++it;
			goto _iter_begin_1e58e42d1;
		}
		_iter_end_1e58e42d1:;
	};
	return nullptr;
}



inline jule::Bool _1e3213372_checkImportSelections(_1e320d768_Sema* _self_, jule::Ptr<_1e320561c_ImportInfo>& _51745_imp) {
	jule::Bool _51765_ok = jule::Bool();
	_51765_ok=true;
	{
		auto &expr = _51745_imp.get()._field_Selected;
		auto it = expr.begin();
		_iter_begin_1e58e6844:;
		if (it != expr.end()) {
			jule::Ptr<_1d42b43cc_Token> _51916_ident = *it;
			{
				if ((_51916_ident.get()._field_Kind == jule::Str("self", 4))) {
					goto _iter_next_1e58e6844;
				};
				if (_1e3212b9b_isDuplicatedImportSelection(&(*_self_), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_51745_imp)),_51916_ident.get()._field_Kind)) {
					_1e321142a_pushErr(&(*_self_), _51916_ident,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_51916_ident.get()._field_Kind)}));
					_1e3211749_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
					_51765_ok=false;
					goto _iter_next_1e58e6844;
				};
				jule::Any _53121_def = _1e3213064_getImportDef(&(*_self_), _51916_ident.get()._field_Kind,_51745_imp);;
				{
					auto &_match_expr{ _53121_def };
					
					if (_match_expr.type_is<jule::Bool>()) {
						_case_begin_1e58e88ce:;
						{
							goto _iter_next_1e58e6844;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e322a147_Var>>()) {
						_case_begin_1e58e934c:;
						{
							jule::Ptr<_1e322a147_Var> _53725_v = _53121_def.operator jule::Ptr<_1e322a147_Var>();;
							if (_1e3211b01_isAccessibleDefine(&(*_self_), _53725_v.get()._field_Public,_53725_v.get()._field_Token)) {
								goto _iter_next_1e58e6844;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e31341b6_TypeAlias>>()) {
						_case_begin_1e58e93b3:;
						{
							jule::Ptr<_1e31341b6_TypeAlias> _54225_ta = _53121_def.operator jule::Ptr<_1e31341b6_TypeAlias>();;
							if (_1e3211b01_isAccessibleDefine(&(*_self_), _54225_ta.get()._field_Public,_54225_ta.get()._field_Token)) {
								goto _iter_next_1e58e6844;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e2505d6e_Struct>>()) {
						_case_begin_1e58e9429:;
						{
							jule::Ptr<_1e2505d6e_Struct> _54725_strct = _53121_def.operator jule::Ptr<_1e2505d6e_Struct>();;
							if (_1e3211b01_isAccessibleDefine(&(*_self_), _54725_strct.get()._field_Public,_54725_strct.get()._field_Token)) {
								goto _iter_next_1e58e6844;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e259d246_Trait>>()) {
						_case_begin_1e58e9ea7:;
						{
							jule::Ptr<_1e259d246_Trait> _55225_t = _53121_def.operator jule::Ptr<_1e259d246_Trait>();;
							if (_1e3211b01_isAccessibleDefine(&(*_self_), _55225_t.get()._field_Public,_55225_t.get()._field_Token)) {
								goto _iter_next_1e58e6844;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e25a038b_Enum>>()) {
						_case_begin_1e58ea01d:;
						{
							jule::Ptr<_1e25a038b_Enum> _55725_e = _53121_def.operator jule::Ptr<_1e25a038b_Enum>();;
							if (_1e3211b01_isAccessibleDefine(&(*_self_), _55725_e.get()._field_Public,_55725_e.get()._field_Token)) {
								goto _iter_next_1e58e6844;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e25a1986_TypeEnum>>()) {
						_case_begin_1e58ea084:;
						{
							jule::Ptr<_1e25a1986_TypeEnum> _56225_e = _53121_def.operator jule::Ptr<_1e25a1986_TypeEnum>();;
							if (_1e3211b01_isAccessibleDefine(&(*_self_), _56225_e.get()._field_Public,_56225_e.get()._field_Token)) {
								goto _iter_next_1e58e6844;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e258b344_Fn>>()) {
						_case_begin_1e58ea0ea:;
						{
							jule::Ptr<_1e258b344_Fn> _56725_f = _53121_def.operator jule::Ptr<_1e258b344_Fn>();;
							if (_1e3211b01_isAccessibleDefine(&(*_self_), _56725_f.get()._field_Public,_56725_f.get()._field_Token)) {
								goto _iter_next_1e58e6844;
							};
						}
					}
					else {
						_case_begin_1e58e90d8:;
						{
							_1e321142a_pushErr(&(*_self_), _51916_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_51916_ident.get()._field_Kind)}));
							_51765_ok=false;
							goto _iter_next_1e58e6844;
						}
					}
					_match_end_1e58e705e:;
				};
				_1e321142a_pushErr(&(*_self_), _51916_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51916_ident.get()._field_Kind)}));
				_1e3211749_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
				_51765_ok=false;
			}
			_iter_next_1e58e6844:;
			++it;
			goto _iter_begin_1e58e6844;
		}
		_iter_end_1e58e6844:;
	};
	return _51765_ok;
}



inline jule::Bool _1e3213680_isUseAliasDuplication(_1e320d768_Sema* _self_, jule::Ptr<_1e320561c_ImportInfo>& _58441_imp) {
	if ((_58441_imp.get()._field_Alias.len() == 0LL)) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1e5902d39:;
		if (it != expr.end()) {
			jule::Ptr<_1e320561c_ImportInfo> _58921_imp2 = *it;
			{
				if ((_58921_imp2 == _58441_imp)) {
					goto _iter_end_1e5902d39;
				};
				if ((_58921_imp2.get()._field_Alias == _58441_imp.get()._field_Alias)) {
					return true;
				};
				if (((_58921_imp2.get()._field_Ident == _58921_imp2.get()._field_LinkPath) && (_58921_imp2.get()._field_Ident == _58441_imp.get()._field_Alias))) {
					return true;
				};
			}
			_iter_next_1e5902d39:;
			++it;
			goto _iter_begin_1e5902d39;
		}
		_iter_end_1e5902d39:;
	};
	return false;
}



inline jule::Bool _1e321398d_checkImport(_1e320d768_Sema* _self_, jule::Ptr<_1e320561c_ImportInfo>& _60435_imp) {
	if ((_60435_imp.get()._field_CppLinked || (_60435_imp.get()._field_Package.get()._field_Files.len() == 0LL))) {
		return true;
	};
	if (_1e3213680_isUseAliasDuplication(&(*_self_), _60435_imp)) {
		_1e321142a_pushErr(&(*_self_), _60435_imp.get()._field_Token,jule::Str("identifier duplication: @ is already used for another use declaration above", 75),jule::Slice<jule::Any>::make({jule::Any(_60435_imp.get()._field_Alias)}));
		_1e3211749_pushSugggestion(&(*_self_), jule::Str("rename alias for this use declaration to avoid duplication", 58),jule::Slice<jule::Any>());
	};
	if ((!(_60435_imp.get()._field_Duplicate))) {
		jule::Ptr<_1e320d768_Sema> _61521_sema = jule::new_ptr<_1e320d768_Sema>(_1e320d768_Sema{._field_flags=(*_self_)._field_flags});;
		_1e3227166_check(_61521_sema, _60435_imp.get()._field_Package.get()._field_Files);
		if ((_61521_sema.get()._field_errors.len() != 0LL)) {
			(*_self_)._field_errors=jule::append((*_self_)._field_errors,_61521_sema.get()._field_errors);
			_61521_sema.get()._field_errors=nullptr;
			return false;
		};
	};
	return _1e3213372_checkImportSelections(&(*_self_), _60435_imp);
}



inline void _1e3213b69_checkImports(_1e320d768_Sema* _self_) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1e59080b4:;
		if (it != expr.end()) {
			jule::Ptr<_1e310432e_SymbolTable> _62921_file = *it;
			{
				_1e3211062_setCurrentFile(&(*_self_), _62921_file);
				{
					auto &expr = _62921_file.get()._field_Imports;
					auto it = expr.begin();
					_iter_begin_1e59095e3:;
					if (it != expr.end()) {
						jule::Ptr<_1e320561c_ImportInfo> _63125_imp = *it;
						{
							jule::Bool _63221_ok = _1e321398d_checkImport(&(*_self_), _63125_imp);;
							if ((!(_63221_ok))) {
								_1e321142a_pushErr(&(*_self_), _63125_imp.get()._field_Token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>::make({jule::Any(_63125_imp.get()._field_LinkPath)}));
								return;;
							};
						}
						_iter_next_1e59095e3:;
						++it;
						goto _iter_begin_1e59095e3;
					}
					_iter_end_1e59095e3:;
				};
			}
			_iter_next_1e59080b4:;
			++it;
			goto _iter_begin_1e59080b4;
		}
		_iter_end_1e59080b4:;
	};
}



inline void _1e3213d45_implFileImpls(jule::Ptr<_1e320d768_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Impls;
		auto it = expr.begin();
		_iter_begin_1e5909d0d:;
		if (it != expr.end()) {
			jule::Ptr<_1e31d1bd1_Impl> _64321_imp = *it;
			{
				_1e321e24b_implImpl(_self_, _64321_imp);
			}
			_iter_next_1e5909d0d:;
			++it;
			goto _iter_begin_1e5909d0d;
		}
		_iter_end_1e5909d0d:;
	};
}



inline void _1e3214021_implImpls(jule::Ptr<_1e320d768_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1e590b4d5:;
		if (it != expr.end()) {
			jule::Ptr<_1e310432e_SymbolTable> _64921_file = *it;
			{
				_1e3211062_setCurrentFile(_self_.ptr(), _64921_file);
				_1e3213d45_implFileImpls(_self_);
			}
			_iter_next_1e590b4d5:;
			++it;
			goto _iter_begin_1e590b4d5;
		}
		_iter_end_1e590b4d5:;
	};
}



inline void _1e32141ec_checkEnums(jule::Ptr<_1e320d768_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1e590ca69:;
		if (it != expr.end()) {
			jule::Ptr<_1e310432e_SymbolTable> _65621_file = *it;
			{
				_1e3211062_setCurrentFile(_self_.ptr(), _65621_file);
				_1e321b875_checkEnumDecls(_self_);
			}
			_iter_next_1e590ca69:;
			++it;
			goto _iter_begin_1e590ca69;
		}
		_iter_end_1e590ca69:;
	};
}



inline jule::Ptr<_1e3134da9_TypeKind> _1e32146e7_buildTypeWithRefers(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e2515686_TypeDecl>& _66344_t, jule::Trait<_1e315091e_Lookup> _66367_l, jule::Slice<jule::Ptr<_1e31341b6_TypeAlias>> _66413_generics, jule::Ptr<_1e31425c0_referencer> _66441_referencer) {
	_1e3143318_typeChecker _66517_tc = _1e3143318_typeChecker{._field_s=_self_, ._field_lookup=_66367_l, ._field_referencer=_66441_referencer, ._field_useGenerics=_66413_generics, };;
	{
		auto &_match_expr{ _66367_l };
		
		if (_match_expr.type_is<jule::Ptr<_1e31dd89c_scopeChecker>>()) {
			_case_begin_1e590e73b:;
			{
				jule::Ptr<_1e31dd89c_scopeChecker> _67321_hard = _1e31e1c24_getHardRoot(_66367_l.operator jule::Ptr<_1e31dd89c_scopeChecker>());;
				_66517_tc._field_refers=_67321_hard.get()._field_owner.get()._field_Refers;
			}
		}
		_match_end_1e590e494:;
	};
	if (((_66441_referencer != nullptr) && (_66441_referencer.get()._field_refs != nullptr))) {
		{
			auto &_match_expr{ _66441_referencer.get()._field_owner };
			
			if (_match_expr.type_is<jule::Ptr<_1e31341b6_TypeAlias>>()) {
				_case_begin_1e590ebe2:;
				{
					_66517_tc._field_ownerAlias=_66441_referencer.get()._field_owner.operator jule::Ptr<_1e31341b6_TypeAlias>();
				}
			}
			_match_end_1e590eb8c:;
		};
	};
	return _1e314a584_checkDecl(&_66517_tc, _66344_t);
}



inline jule::Bool _1e3214be2_checkTypeWithRefers(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e3139012_TypeSymbol>& _69044_t, jule::Trait<_1e315091e_Lookup> _69064_l, jule::Slice<jule::Ptr<_1e31341b6_TypeAlias>> _69113_generics, jule::Ptr<_1e31425c0_referencer> _69141_referencer) {
	jule::Bool _69168_ok = jule::Bool();
	if (_1e31393b9_checked(_69044_t.ptr())) {
		_69168_ok = true;
		return _69168_ok;
	};
	_69044_t.get()._field_Kind=_1e32146e7_buildTypeWithRefers(_self_, _69044_t.get()._field_Decl,_69064_l,_69113_generics,_69141_referencer);
	_69168_ok = _1e31393b9_checked(_69044_t.ptr());
	return _69168_ok;
}



inline jule::Ptr<_1e31ceb68_constraintChecker> _1e3214e56_constraintChecker(jule::Ptr<_1e320d768_Sema> _self_) {
	return jule::new_ptr<_1e31ceb68_constraintChecker>(_1e31ceb68_constraintChecker{._field_s=_self_, });
}



inline jule::Bool _1e321530d_checkType(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e3139012_TypeSymbol>& _70534_t, jule::Trait<_1e315091e_Lookup> _70554_l) {
	return _1e3214be2_checkTypeWithRefers(_self_, _70534_t,_70554_l,nullptr,nullptr);
}



inline jule::Ptr<_1e3134da9_TypeKind> _1e321575e_buildTypeWithGenerics(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e2515686_TypeDecl>& _71146_t, jule::Slice<jule::Ptr<_1e31341b6_TypeAlias>> _71213_generics, jule::Ptr<_1e2591e60_ReferenceStack> _71241_refers) {
	jule::Ptr<_1e3143318_typeChecker> _71317_tc = jule::new_ptr<_1e3143318_typeChecker>(_1e3143318_typeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1e315091e_Lookup>(_self_, 3), ._field_refers=_71241_refers, ._field_useGenerics=_71213_generics, });;
	return _1e314a584_checkDecl(_71317_tc.ptr(), _71146_t);
}



inline jule::Ptr<_1e3134da9_TypeKind> _1e3215a6c_buildType(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e2515686_TypeDecl>& _72334_t) {
	return _1e321575e_buildTypeWithGenerics(_self_, _72334_t,nullptr,nullptr);
}



inline jule::Ptr<_1e3134da9_TypeKind> _1e3215d7a_selectType(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e2515686_TypeDecl>& _72835_t) {
	jule::Ptr<_1e3143318_typeChecker> _72917_tc = jule::new_ptr<_1e3143318_typeChecker>(_1e3143318_typeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1e315091e_Lookup>(_self_, 3), ._field_selection=true, });;
	return _1e314a584_checkDecl(_72917_tc.ptr(), _72835_t);
}



inline jule::Ptr<_1e310ab0a_Eval> _1e32162cb_evalpd(jule::Ptr<_1e320d768_Sema> _self_, jule::Trait<_1e315091e_Lookup> _73930_l, jule::Ptr<_1e3134da9_TypeKind> _73945_p, jule::Ptr<_1e322a147_Var> _73963_owner) {
	jule::Ptr<_1e310ab0a_Eval> _74017_e = jule::new_ptr<_1e310ab0a_Eval>(_1e310ab0a_Eval{._field_s=_self_, ._field_lookup=_73930_l, ._field_owner=_73963_owner, });;
	{
		auto &_match_expr{ _73930_l };
		
		if (_match_expr.type_is<jule::Ptr<_1e31dd89c_scopeChecker>>()) {
			_case_begin_1e5918338:;
			{
				_74017_e.get()._field_unsafety=_1e31e0d33_isUnsafe(_73930_l.operator jule::Ptr<_1e31dd89c_scopeChecker>());
			}
		}
		_match_end_1e59182c2:;
	};
	_74017_e.get()._field_prefix=_73945_p;
	return _74017_e;
}



inline jule::Ptr<_1e310ab0a_Eval> _1e3216683_evalp(jule::Ptr<_1e320d768_Sema> _self_, jule::Trait<_1e315091e_Lookup> _75429_l, jule::Ptr<_1e3134da9_TypeKind> _75444_p) {
	return _1e32162cb_evalpd(_self_, _75429_l,_75444_p,nullptr);
}



inline jule::Ptr<_1e310ab0a_Eval> _1e3216991_eval(jule::Ptr<_1e320d768_Sema> _self_, jule::Trait<_1e315091e_Lookup> _75928_l) {
	return _1e3216683_evalp(_self_, _75928_l,nullptr);
}



inline jule::Bool _1e3216e8b_checkAssignType(jule::Ptr<_1e320d768_Sema> _self_, jule::Bool _76335_destIsRef, jule::Ptr<_1e3134da9_TypeKind>& _76357_dest, jule::Ptr<_1e310908c_Data>& _76414_d, jule::Ptr<_1d42b43cc_Token> _76428_errorToken) {
	if (_76414_d.get()._field_Decl) {
		_1e321142a_pushErr(_self_.ptr(), _76428_errorToken,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return false;
	};
	if (_76335_destIsRef) {
		if ((!(_1e31355b3_Equals(_76357_dest, _76414_d.get()._field_Kind)))) {
			_1e321142a_pushErr(_self_.ptr(), _76428_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_76357_dest.ptr())),jule::Any(_1e31352a5_Str(_76414_d.get()._field_Kind.ptr()))}));
			return false;
		};
	} else {
		jule::Ptr<_1e30e495c_assignTypeChecker> _77521_atc = jule::new_ptr<_1e30e495c_assignTypeChecker>(_1e30e495c_assignTypeChecker{._field_s=_self_, ._field_dest=_76357_dest, ._field_d=_76414_d, ._field_errorToken=_76428_errorToken});;
		jule::Bool _78117_ok = _1e30e5ad4_check(_77521_atc.ptr());;
		if ((!(_78117_ok))) {
			return false;
		};
	};
	if (((!(_1e3109950_IsConst(_76414_d.ptr()))) || (_1e3136ebb_Prim(_76357_dest.ptr()) == nullptr))) {
		return true;
	};
	jule::Str _79117_kind = _1e3136ebb_Prim(_76357_dest.ptr()).get()._field_Kind;;
	{
		
		if (_1e31ccb00_IsSigInt(_79117_kind)) {
			_case_begin_1e591ec24:;
			{
				_1e257cd5d_SetI64(_76414_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1e257c610_AsI64(_76414_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1e31ccddb_IsUnsigInt(_79117_kind)) {
			_case_begin_1e591ec9b:;
			{
				_1e257d0d3_SetU64(_76414_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1e257c874_AsU64(_76414_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1e31cd4a2_IsFloat(_79117_kind)) {
			_case_begin_1e591ed23:;
			{
				_1e257d853_SetF64(_76414_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1e257cad8_AsF64(_76414_d.get()._field_Constant.ptr())));
			}
		}
		_match_end_1e591eb58:;
	};
	return true;
}



inline jule::Bool _1e32173dc_checkTypeCompatibility(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e3134da9_TypeKind>& _80547_dest, jule::Ptr<_1e3134da9_TypeKind>& _80614_src, jule::Ptr<_1d42b43cc_Token>& _80635_errorToken) {
	if ((_80614_src == nullptr)) {
		_1e321142a_pushErr(_self_.ptr(), _80635_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_80547_dest.ptr())),jule::Any(_1e31352a5_Str(_80614_src.ptr()))}));
		return false;
	};
	if ((_1e3138b5a_Tup(_80614_src.ptr()) != nullptr)) {
		_1e321142a_pushErr(_self_.ptr(), _80635_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_80547_dest.ptr())),jule::Any(_1e31352a5_Str(_80614_src.ptr()))}));
		return false;
	};
	_1e30e2e55_typeCompatibilityChecker _82017_tcc = _1e30e2e55_typeCompatibilityChecker{._field_s=_self_, ._field_dest=_80547_dest, ._field_src=_80614_src, ._field_errorToken=_80635_errorToken};;
	if (_1e30e441d_check(&_82017_tcc)) {
		return true;
	};
	_1e321142a_pushErr(_self_.ptr(), _80635_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_80547_dest.ptr())),jule::Any(_1e31352a5_Str(_80614_src.ptr()))}));
	return false;
}



inline jule::Ptr<_1e3134da9_TypeKind> _1e32177b6_buildNonGenericTypeKind(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e2515686_TypeDecl>& _84148_ast, jule::Slice<jule::Ptr<_1e2522c6a_GenericDecl>>& _84214_generics) {
	jule::Ptr<_1e3143318_typeChecker> _84317_tc = jule::new_ptr<_1e3143318_typeChecker>(_1e3143318_typeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1e315091e_Lookup>(_self_, 3), ._field_ignoreGenerics=_84214_generics, });;
	return _1e314a584_checkDecl(_84317_tc.ptr(), _84148_ast);
}



inline void _1e3217a6e_buildFnNonGenericTypeKinds(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e258dee5_FnIns>& _85151_f) {
	jule::Slice<jule::Ptr<_1e2522c6a_GenericDecl>> _85217_generics = nullptr;;
	if (_1e258ba1a_IsMethod(_85151_f.get()._field_Decl.ptr())) {
		_85217_generics=jule::append(_85151_f.get()._field_Decl.get()._field_Generics,_85151_f.get()._field_Decl.get()._field_Owner.get()._field_Generics);
	} else {
		_85217_generics=_85151_f.get()._field_Decl.get()._field_Generics;
	};
	{
		auto &expr = _85151_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1e5928623:;
		if (it != expr.end()) {
			jule::Ptr<_1e258d126_ParamIns> _85921_p = *it;
			{
				if ((!(_1e258a134_IsSelf(_85921_p.get()._field_Decl.ptr())))) {
					_85921_p.get()._field_Kind=_1e32177b6_buildNonGenericTypeKind(_self_, _85921_p.get()._field_Decl.get()._field_Kind.get()._field_Decl,_85217_generics);
				};
			}
			_iter_next_1e5928623:;
			++it;
			goto _iter_begin_1e5928623;
		}
		_iter_end_1e5928623:;
	};
	if ((!(_1e258b7a6_IsVoid(_85151_f.get()._field_Decl.ptr())))) {
		_85151_f.get()._field_Result=_1e32177b6_buildNonGenericTypeKind(_self_, _85151_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl,_85217_generics);
	};
}



inline jule::Ptr<_1e258dee5_FnIns> _1e3217d8d_getTraitCheckFnKind(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e258b344_Fn>& _86944_f) {
	if ((_86944_f.get()._field_Instances.len() == 1LL)) {
		return _86944_f.get()._field_Instances[0LL];
	};
	jule::Ptr<_1e258dee5_FnIns> _87317_ins = _1e258c730_instanceForce(_86944_f);;
	jule::Ptr<_1e3143318_typeChecker> _87517_tc = jule::new_ptr<_1e3143318_typeChecker>(_1e3143318_typeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1e315091e_Lookup>(_self_, 3), });;
	{
		auto &expr = _87317_ins.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1e592c1d7:;
		if (it != expr.end()) {
			jule::Ptr<_1e258d126_ParamIns> _87921_p = *it;
			{
				if ((!(_1e258a134_IsSelf(_87921_p.get()._field_Decl.ptr())))) {
					_87921_p.get()._field_Kind=_1e314a584_checkDecl(_87517_tc.ptr(), _87921_p.get()._field_Decl.get()._field_Kind.get()._field_Decl);
				};
			}
			_iter_next_1e592c1d7:;
			++it;
			goto _iter_begin_1e592c1d7;
		}
		_iter_end_1e592c1d7:;
	};
	if ((!(_1e258b7a6_IsVoid(_86944_f.ptr())))) {
		_87317_ins.get()._field_Result=_1e314a584_checkDecl(_87517_tc.ptr(), _86944_f.get()._field_Result.get()._field_Kind.get()._field_Decl);
	};
	return _87317_ins;
}



inline jule::Bool _1e32182de_checkConstraintsFn(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e258dee5_FnIns>& _89143_f, jule::Ptr<_1d42b43cc_Token>& _89159_et, jule::Ptr<_1e258dee5_FnIns> _89175_exist) {
	jule::Ptr<_1e31ceb68_constraintChecker> _89217_cc = _1e3214e56_constraintChecker(_self_);;
	_89217_cc.get()._field_et=_89159_et;
	_89217_cc.get()._field_fi=_89143_f;
	if ((_89175_exist != nullptr)) {
		{
			auto &expr = _89175_exist.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1e593051a:;
			if (it != expr.end()) {
				jule::I64 _89618_i = it - expr.begin();
				jule::Ptr<_1e313367c_InsGeneric> _89625_g = *it;
				{
					_89143_f.get()._field_Generics[_89618_i].get()._field_Constraint=_89625_g.get()._field_Constraint;
				}
				_iter_next_1e593051a:;
				++it;
				_89618_i++;
				goto _iter_begin_1e593051a;
			}
			_iter_end_1e593051a:;
		};
	} else {
		_89217_cc.get()._field_uniq=true;
	};
	return _1e31d0a48_check(_89217_cc);
}



inline jule::Bool _1e3218740_checkConstraintsStruct(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e253220d_StructIns>& _90547_s, jule::Ptr<_1d42b43cc_Token>& _90567_et, jule::Ptr<_1e253220d_StructIns> _90583_exist) {
	jule::Ptr<_1e31ceb68_constraintChecker> _90617_cc = _1e3214e56_constraintChecker(_self_);;
	_90617_cc.get()._field_et=_90567_et;
	_90617_cc.get()._field_si=_90547_s;
	if ((_90583_exist != nullptr)) {
		{
			auto &expr = _90583_exist.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1e59330ab:;
			if (it != expr.end()) {
				jule::I64 _91018_i = it - expr.begin();
				jule::Ptr<_1e313367c_InsGeneric> _91025_g = *it;
				{
					_90547_s.get()._field_Generics[_91018_i].get()._field_Constraint=_91025_g.get()._field_Constraint;
				}
				_iter_next_1e59330ab:;
				++it;
				_91018_i++;
				goto _iter_begin_1e59330ab;
			}
			_iter_end_1e59330ab:;
		};
	} else {
		_90617_cc.get()._field_uniq=true;
	};
	return _1e31d0a48_check(_90617_cc);
}



inline jule::Bool _1e3218ae7_fnEnvironment(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e258dee5_FnIns>& _92238_f, jule::Fn<jule::Bool(jule::Ptr<_1e320d768_Sema>&,jule::Slice<jule::Ptr<_1e31341b6_TypeAlias>>&)> _92249_algo) {
	jule::Ptr<_1e320d768_Sema> _92317_sema = _92238_f.get()._field_Decl.get()._field_sema;;
	jule::Ptr<_1e310432e_SymbolTable> _92417_old = _92238_f.get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1e3211062_setCurrentFile(_92238_f.get()._field_Decl.get()._field_sema.ptr(), _92417_old);
	});;
	jule::Ptr<_1e310432e_SymbolTable> _92617_file = _1e320cd72_findFile(_92238_f.get()._field_Decl.get()._field_sema.get()._field_files,_92238_f.get()._field_Decl.get()._field_Token.get()._field_File);;
	if ((_92617_file != nullptr)) {
		_1e3211062_setCurrentFile(_92238_f.get()._field_Decl.get()._field_sema.ptr(), _92617_file);
	};
	jule::I64 _93117_size = _92238_f.get()._field_Generics.len();;
	if (((_92238_f.get()._field_Decl != nullptr) && (_92238_f.get()._field_Decl.get()._field_Owner != nullptr))) {
		_93117_size+=_92238_f.get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1e31341b6_TypeAlias>> _93617_generics = jule::Slice<jule::Ptr<_1e31341b6_TypeAlias>>::alloc(0LL,_93117_size);;
	_1e320ca20_appendGenericTypeAliases(_93617_generics,_92238_f);
	jule::Bool _93913_ok = _92249_algo(_92317_sema,_93617_generics);;
	if ((_92317_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_92317_sema.get()._field_errors);
		_92317_sema.get()._field_errors=nullptr;
	};
	return _93913_ok;
}



inline void _1e3218d6c_checkFnParamKind(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e258d126_ParamIns>& _94941_p) {
	_94941_p.get()._field_Kind.get()._field_Variadic=_94941_p.get()._field_Decl.get()._field_Variadic;
	if ((_94941_p.get()._field_Decl.get()._field_Reference && (!(_1e314c399_isValidForRef(_94941_p.get()._field_Kind))))) {
		_1e321142a_pushErr(_self_.ptr(), _94941_p.get()._field_Decl.get()._field_Token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_94941_p.get()._field_Kind.ptr()))}));
	};
}



inline jule::Bool _1e321917a_reloadFnInsTypes(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e258dee5_FnIns> _95640_f) {
	if ((_1e259037b_IsBuiltin(_95640_f.ptr()) || _1e25905e0_IsAnon(_95640_f.ptr()))) {
		return true;
	};
	return _1e3218ae7_fnEnvironment(_self_, _95640_f,jule::Fn<jule::Bool(jule::Ptr<_1e320d768_Sema>&,jule::Slice<jule::Ptr<_1e31341b6_TypeAlias>>&)>([=](jule::Ptr<_1e320d768_Sema>& _96043_sema, jule::Slice<jule::Ptr<_1e31341b6_TypeAlias>>& _96061_generics) mutable -> jule::Bool {
		jule::Bool _96121_ok = true;;
		{
			auto &expr = _95640_f.get()._field_Params;
			auto it = expr.begin();
			_iter_begin_1e593e53a:;
			if (it != expr.end()) {
				jule::Ptr<_1e258d126_ParamIns> _96225_p = *it;
				{
					if (_1e258a134_IsSelf(_96225_p.get()._field_Decl.ptr())) {
						if (_1e258a398_IsRef(_96225_p.get()._field_Decl.ptr())) {
							_96225_p.get()._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(jule::new_ptr<_1e313d115_Sptr>(_1e313d115_Sptr{._field_Elem=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_95640_f.get()._field_Owner, 0)})}), 7)});
						} else {
							_96225_p.get()._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_95640_f.get()._field_Owner, 0)});
						};
					} else {
						_96225_p.get()._field_Kind=_1e321575e_buildTypeWithGenerics(_96043_sema, _96225_p.get()._field_Decl.get()._field_Kind.get()._field_Decl,_96061_generics,_95640_f.get()._field_Refers);
						if ((_96225_p.get()._field_Kind != nullptr)) {
							_1e3218d6c_checkFnParamKind(_self_, _96225_p);
						} else {
							_96121_ok=false;
						};
					};
				}
				_iter_next_1e593e53a:;
				++it;
				goto _iter_begin_1e593e53a;
			}
			_iter_end_1e593e53a:;
		};
		if ((!(_1e258b7a6_IsVoid(_95640_f.get()._field_Decl.ptr())))) {
			_95640_f.get()._field_Result=_1e321575e_buildTypeWithGenerics(_96043_sema, _95640_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl,_96061_generics,_95640_f.get()._field_Refers);
			_96121_ok=((_95640_f.get()._field_Result != nullptr) && _96121_ok);
		};
		return _96121_ok;
	}));
}



inline jule::Bool _1e32195ed_checkRefValidityForInitExpr(jule::Ptr<_1e320d768_Sema> _self_, jule::Bool _99247_leftMut, jule::Ptr<_1e310908c_Data>& _99267_d, jule::Ptr<_1d42b43cc_Token>& _99282_errorToken) {
	{
		auto &_match_expr{ _99267_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1e322a147_Var>>()) {
			_case_begin_1e5944a7e:;
			{
				goto _match_end_1e59440cd;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e258596a_TraitSubIdentExprModel>>()) {
			_case_begin_1e5944ae5:;
			{
				jule::Ptr<_1e258596a_TraitSubIdentExprModel> _99721_model = _99267_d.get()._field_Model.operator jule::Ptr<_1e258596a_TraitSubIdentExprModel>();;
				if ((!(_1e320b8a9_isValidModelForRef(_99721_model.get()._field_Expr)))) {
					_1e321142a_pushErr(_self_.ptr(), _99282_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_99721_model.get()._field_Method.get()._field_Ident)}));
					return false;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2585d88_StructSubIdentExprModel>>()) {
			_case_begin_1e5944bc2:;
			{
				jule::Ptr<_1e2585d88_StructSubIdentExprModel> _100321_model = _99267_d.get()._field_Model.operator jule::Ptr<_1e2585d88_StructSubIdentExprModel>();;
				if ((!(_1e320b8a9_isValidModelForRef(_100321_model.get()._field_Expr.get()._field_Model)))) {
					_1e321142a_pushErr(_self_.ptr(), _99282_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_100321_model.get()._field_Field.get()._field_Decl.get()._field_Ident)}));
					return false;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e258644e_CommonIdentExprModel>>() || _match_expr.type_is<jule::Ptr<_1e258663b_CommonSubIdentExprModel>>()) {
			_case_begin_1e5944c38:;
			{
				_1e321142a_pushErr(_self_.ptr(), _99282_errorToken,jule::Str("built-in defines cannot pass to references", 42),jule::Slice<jule::Any>());
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2584161_UnaryExprModel>>()) {
			_case_begin_1e5944221:;
			{
				jule::Ptr<_1e2584161_UnaryExprModel> _101321_unary = _99267_d.get()._field_Model.operator jule::Ptr<_1e2584161_UnaryExprModel>();;
				if ((_101321_unary.get()._field_Op.get()._field_Kind == jule::Str("*", 1))) {
					if ((!(_1e320b8a9_isValidModelForRef(_99267_d.get()._field_Model)))) {
						_1e321142a_pushErr(_self_.ptr(), _99282_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(jule::Str("address from * &T", 17))}));
						return false;
					};
					goto _match_end_1e59440cd;
				};
				goto _case_begin_1e5944133;
			}
		}
		else {
			_case_begin_1e5944133:;
			{
				_1e321142a_pushErr(_self_.ptr(), _99282_errorToken,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_1e59440cd:;
	};
	if ((_99247_leftMut && (!(_99267_d.get()._field_Mutable)))) {
		_1e321142a_pushErr(_self_.ptr(), _99282_errorToken,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>());
		return false;
	};
	return true;
}



inline jule::Bool _1e3219bc5_checkValidityForInitExpr(jule::Ptr<_1e320d768_Sema> _self_, jule::Bool _103344_leftMut, jule::Bool _103359_leftRef, jule::Ptr<_1e3134da9_TypeKind>& _103410_leftKind, jule::Ptr<_1e310908c_Data>& _103436_d, jule::Ptr<_1d42b43cc_Token>& _103451_errorToken) {
	if (((_103344_leftMut && (!(_103436_d.get()._field_Mutable))) && _1e31362a6_Mutable(_103436_d.get()._field_Kind.ptr()))) {
		_1e321142a_pushErr(_self_.ptr(), _103451_errorToken,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_103436_d.get()._field_Kind.ptr()))}));
		return false;
	};
	if (_103359_leftRef) {
		if ((!(_1e32195ed_checkRefValidityForInitExpr(_self_, _103344_leftMut,_103436_d,_103451_errorToken)))) {
			return false;
		};
	};
	jule::Ptr<_1e30e495c_assignTypeChecker> _104417_atc = jule::new_ptr<_1e30e495c_assignTypeChecker>(_1e30e495c_assignTypeChecker{._field_s=_self_, ._field_d=_103436_d, ._field_errorToken=_103451_errorToken});;
	return _1e30e5133_checkValidity(_104417_atc.ptr());
}



inline jule::Bool _1e321a08d_checkTypeAliasDeclKind(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e31341b6_TypeAlias>& _105247_ta, jule::Trait<_1e315091e_Lookup> _105267_l) {
	jule::Bool _105280_ok = jule::Bool();
	jule::Ptr<_1e310432e_SymbolTable> _105317_old = _self_.get()._field_file;;
	__JULE_DEFER({
		_1e3211062_setCurrentFile(_self_.ptr(), _105317_old);
	});;
	if ((_105247_ta.get()._field_Token != nullptr)) {
		jule::Ptr<_1e310432e_SymbolTable> _105821_file = _1e320cd72_findFile(_self_.get()._field_files,_105247_ta.get()._field_Token.get()._field_File);;
		if ((_105821_file != nullptr)) {
			_1e3211062_setCurrentFile(_self_.ptr(), _105821_file);
		};
	};
	_105280_ok=_1e3214be2_checkTypeWithRefers(_self_, _105247_ta.get()._field_Kind,_105267_l,nullptr,jule::new_ptr<_1e31425c0_referencer>(_1e31425c0_referencer{._field_ident=_105247_ta.get()._field_Ident, ._field_owner=jule::Any(_105247_ta), ._field_refs=(&(_105247_ta.get()._field_Refers))}));
	if (((_105280_ok && (_1e3137bd1_Arr(_105247_ta.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) && _1e3137bd1_Arr(_105247_ta.get()._field_Kind.get()._field_Kind.ptr()).get()._field_Auto)) {
		_1e321142a_pushErr(_self_.ptr(), _105247_ta.get()._field_Kind.get()._field_Decl.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
		_105280_ok=false;
	};
	return _105280_ok;
}



inline void _1e321a3ac_checkTypeAliasDecl(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e31341b6_TypeAlias>& _107543_ta, jule::Trait<_1e315091e_Lookup> _107563_l) {
	if (_1d42b6b71_IsIgnoreIdent(_107543_ta.get()._field_Ident)) {
		_1e321142a_pushErr(_self_.ptr(), _107543_ta.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_1e321a08d_checkTypeAliasDeclKind(_self_, _107543_ta,_107563_l);
}



inline void _1e321a632_checkTypeAliasDeclDup(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e31341b6_TypeAlias>& _108346_ta) {
	if (_1d42b6b71_IsIgnoreIdent(_108346_ta.get()._field_Ident)) {
		_1e321142a_pushErr(_self_.ptr(), _108346_ta.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_1e3212052_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108346_ta)),_108346_ta.get()._field_Ident,_108346_ta.get()._field_CppLinked)) {
		_1e321142a_pushErr(_self_.ptr(), _108346_ta.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_108346_ta.get()._field_Ident)}));
		_1e3211749_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1e321a08d_checkTypeAliasDeclKind(_self_, _108346_ta,jule::Trait<_1e315091e_Lookup>(_self_, 3));
}



inline jule::Bool _1e321a896_checkTypeAliasDecls(jule::Ptr<_1e320d768_Sema> _self_) {
	jule::Bool _109541_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1e5956d9e:;
		if (it != expr.end()) {
			jule::Ptr<_1e31341b6_TypeAlias> _109621_ta = *it;
			{
				_1e321a632_checkTypeAliasDeclDup(_self_, _109621_ta);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_109541_ok = false;
					return _109541_ok;
				};
			}
			_iter_next_1e5956d9e:;
			++it;
			goto _iter_begin_1e5956d9e;
		}
		_iter_end_1e5956d9e:;
	};
	_109541_ok = true;
	return _109541_ok;
}



inline void _1e5968201_checkEnumItemsDup(_1e320d768_Sema* _self_, jule::Slice<jule::Ptr<_1e259e896_EnumItem>> _110739_items) {
	{
		auto &expr = _110739_items;
		auto it = expr.begin();
		_iter_begin_1e59694cc:;
		if (it != expr.end()) {
			jule::Ptr<_1e259e896_EnumItem> &_110816_item = *it;
			{
				if (_110816_item.get()._field_Ident.empty()) {
					goto _iter_next_1e59694cc;
				} else if (_1d42b6b71_IsIgnoreIdent(_110816_item.get()._field_Ident)) {
					_1e321142a_pushErr(&(*_self_), _110816_item.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _110739_items;
						auto it = expr.begin();
						_iter_begin_1e596a214:;
						if (it != expr.end()) {
							jule::Ptr<_1e259e896_EnumItem> &_111424_citem = *it;
							{
								if ((_110816_item == _111424_citem)) {
									goto _iter_end_1e596a214;
								} else if ((_110816_item.get()._field_Ident == _111424_citem.get()._field_Ident)) {
									_1e321142a_pushErr(&(*_self_), _110816_item.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_110816_item.get()._field_Ident)}));
									_1e3211749_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_1e596a214;
								};
							}
							_iter_next_1e596a214:;
							++it;
							goto _iter_begin_1e596a214;
						}
						_iter_end_1e596a214:;
					};
				};
			}
			_iter_next_1e59694cc:;
			++it;
			goto _iter_begin_1e59694cc;
		}
		_iter_end_1e59694cc:;
	};
}

inline void _1e5973a25_checkEnumItemsDup(_1e320d768_Sema* _self_, jule::Slice<jule::Ptr<_1e25a13c0_TypeEnumItem>> _110739_items) {
	{
		auto &expr = _110739_items;
		auto it = expr.begin();
		_iter_begin_1e5974d01:;
		if (it != expr.end()) {
			jule::Ptr<_1e25a13c0_TypeEnumItem> &_110816_item = *it;
			{
				if (_110816_item.get()._field_Ident.empty()) {
					goto _iter_next_1e5974d01;
				} else if (_1d42b6b71_IsIgnoreIdent(_110816_item.get()._field_Ident)) {
					_1e321142a_pushErr(&(*_self_), _110816_item.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _110739_items;
						auto it = expr.begin();
						_iter_begin_1e5975a38:;
						if (it != expr.end()) {
							jule::Ptr<_1e25a13c0_TypeEnumItem> &_111424_citem = *it;
							{
								if ((_110816_item == _111424_citem)) {
									goto _iter_end_1e5975a38;
								} else if ((_110816_item.get()._field_Ident == _111424_citem.get()._field_Ident)) {
									_1e321142a_pushErr(&(*_self_), _110816_item.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_110816_item.get()._field_Ident)}));
									_1e3211749_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_1e5975a38;
								};
							}
							_iter_next_1e5975a38:;
							++it;
							goto _iter_begin_1e5975a38;
						}
						_iter_end_1e5975a38:;
					};
				};
			}
			_iter_next_1e5974d01:;
			++it;
			goto _iter_begin_1e5974d01;
		}
		_iter_end_1e5974d01:;
	};
}



inline void _1e321ad91_checkEnumItemsStr(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e25a038b_Enum>& _112742_e) {
	jule::Ptr<_1e310ab0a_Eval> _112817_eval = _1e3216991_eval(_self_, jule::Trait<_1e315091e_Lookup>(_self_, 3));;
	{
		auto &expr = _112742_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1e5958ba3:;
		if (it != expr.end()) {
			jule::Ptr<_1e259e896_EnumItem> _112921_item = *it;
			{
				if (_1e259ec81_AutoExpr(_112921_item.ptr())) {
					_112921_item.get()._field_Value=jule::new_ptr<_1e310a115_Value>(_1e310a115_Value{._field_Data=jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Constant=static__1e257ad5b_NewStr(_112921_item.get()._field_Ident)})});
					_112921_item.get()._field_Value.get()._field_Data.get()._field_Model=static_cast<jule::Any>(_112921_item.get()._field_Value.get()._field_Data.get()._field_Constant);
				} else {
					jule::Ptr<_1e310908c_Data> _113825_d = _1e312664d_evalExpr(_112817_eval, _112921_item.get()._field_Value.get()._field_Expr);;
					if ((_113825_d == nullptr)) {
						goto _iter_next_1e5958ba3;
					};
					if ((!(_1e3109950_IsConst(_113825_d.ptr())))) {
						_1e321142a_pushErr(_self_.ptr(), _112921_item.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_1e3216e8b_checkAssignType(_self_, false,_112742_e.get()._field_Kind.get()._field_Kind,_113825_d,_112921_item.get()._field_Token);
					_112921_item.get()._field_Value.get()._field_Data=_113825_d;
				};
			}
			_iter_next_1e5958ba3:;
			++it;
			goto _iter_begin_1e5958ba3;
		}
		_iter_end_1e5958ba3:;
	};
}



inline void _1e321b116_checkEnumItemsInt(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e25a038b_Enum>& _115342_e) {
	jule::Ptr<_1e3139881_Prim> _115413_prim = _1e3136ebb_Prim(_115342_e.get()._field_Kind.get()._field_Kind.ptr());;
	jule::U64 _115517_max = static_cast<jule::U64>(_1e31c8ba6_Max(_1e3139be4_Str(_115413_prim.ptr())));;
	jule::Ptr<_1e310ab0a_Eval> _115617_eval = _1e3216991_eval(_self_, jule::Trait<_1e315091e_Lookup>(_self_, 3));;
	{
		auto &expr = _115342_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1e595e11a:;
		if (it != expr.end()) {
			jule::I64 _115714_i = it - expr.begin();
			jule::Ptr<_1e259e896_EnumItem> _115721_item = *it;
			{
				if ((_115517_max == 0LLU)) {
					_1e321142a_pushErr(_self_.ptr(), _115721_item.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					(_115517_max)--;
				};
				if (_1e259ec81_AutoExpr(_115721_item.ptr())) {
					_115721_item.get()._field_Value=jule::new_ptr<_1e310a115_Value>(_1e310a115_Value{._field_Data=jule::new_ptr<_1e310908c_Data>()});
					{
						
						if (_1e31ccb00_IsSigInt(_1e3139be4_Str(_115413_prim.ptr()))) {
							_case_begin_1e59616a0:;
							{
								_115721_item.get()._field_Value.get()._field_Data.get()._field_Constant=static__1e257a575_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((_115517_max - (_115517_max - static_cast<jule::U64>(_115714_i))))));
							}
						}
						else {
							_case_begin_1e5961309:;
							{
								_115721_item.get()._field_Value.get()._field_Data.get()._field_Constant=static__1e257a81c_NewU64(static_cast<jule::U64>((_115517_max - (_115517_max - static_cast<jule::U64>(_115714_i)))));
							}
						}
						_match_end_1e5961293:;
					};
					_115721_item.get()._field_Value.get()._field_Data.get()._field_Model=static_cast<jule::Any>(_115721_item.get()._field_Value.get()._field_Data.get()._field_Constant);
				} else {
					jule::Ptr<_1e310908c_Data> _117525_d = _1e312664d_evalExpr(_115617_eval, _115721_item.get()._field_Value.get()._field_Expr);;
					if ((_117525_d == nullptr)) {
						goto _iter_next_1e595e11a;
					};
					if ((!(_1e3109950_IsConst(_117525_d.ptr())))) {
						_1e321142a_pushErr(_self_.ptr(), _115721_item.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_1e3216e8b_checkAssignType(_self_, false,_115342_e.get()._field_Kind.get()._field_Kind,_117525_d,_115721_item.get()._field_Token);
					_115721_item.get()._field_Value.get()._field_Data=_117525_d;
				};
			}
			_iter_next_1e595e11a:;
			++it;
			_115714_i++;
			goto _iter_begin_1e595e11a;
		}
		_iter_end_1e595e11a:;
	};
}



inline void _1e321b38b_checkEnumDecl(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e25a038b_Enum>& _118838_e) {
	if (_1d42b6b71_IsIgnoreIdent(_118838_e.get()._field_Ident)) {
		_1e321142a_pushErr(_self_.ptr(), _118838_e.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1e3212052_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_118838_e)),_118838_e.get()._field_Ident,false)) {
		_1e321142a_pushErr(_self_.ptr(), _118838_e.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_118838_e.get()._field_Ident)}));
		_1e3211749_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_118838_e.get()._field_Items.len() == 0LL)) {
		_1e321142a_pushErr(_self_.ptr(), _118838_e.get()._field_Token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_118838_e.get()._field_Ident)}));
	};
	_1e5968201_checkEnumItemsDup(_self_.ptr(), _118838_e.get()._field_Items);
	if ((_118838_e.get()._field_Kind != nullptr)) {
		if ((!(_1e321530d_checkType(_self_, _118838_e.get()._field_Kind,jule::Trait<_1e315091e_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		_118838_e.get()._field_Kind=jule::new_ptr<_1e3139012_TypeSymbol>(_1e3139012_TypeSymbol{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("int", 3)), 6)})});
	};
	jule::Ptr<_1e3139881_Prim> _121517_t = _1e3136ebb_Prim(_118838_e.get()._field_Kind.get()._field_Kind.ptr());;
	if ((_121517_t == nullptr)) {
		_1e321142a_pushErr(_self_.ptr(), _118838_e.get()._field_Token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1e313cab5_IsStr(_121517_t.ptr())) {
			_case_begin_1e596e933:;
			{
				_1e321ad91_checkEnumItemsStr(_self_, _118838_e);
			}
		}
		else if (_1e31cd183_IsInt(_1e3139be4_Str(_121517_t.ptr()))) {
			_case_begin_1e596e67a:;
			{
				_1e321b116_checkEnumItemsInt(_self_, _118838_e);
			}
		}
		else {
			_case_begin_1e596db30:;
			{
				_1e321142a_pushErr(_self_.ptr(), _118838_e.get()._field_Token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
			}
		}
		_match_end_1e596d976:;
	};
}



inline void _1e321b611_checkTypeEnumDecl(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e25a1986_TypeEnum>& _123242_e) {
	if (_1d42b6b71_IsIgnoreIdent(_123242_e.get()._field_Ident)) {
		_1e321142a_pushErr(_self_.ptr(), _123242_e.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1e3212052_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_123242_e)),_123242_e.get()._field_Ident,false)) {
		_1e321142a_pushErr(_self_.ptr(), _123242_e.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_123242_e.get()._field_Ident)}));
		_1e3211749_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_123242_e.get()._field_Items.len() == 0LL)) {
		_1e321142a_pushErr(_self_.ptr(), _123242_e.get()._field_Token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_123242_e.get()._field_Ident)}));
		return;;
	};
	_1e5973a25_checkEnumItemsDup(_self_.ptr(), _123242_e.get()._field_Items);
	{
		auto &expr = _123242_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1e59744b5:;
		if (it != expr.end()) {
			jule::Ptr<_1e25a13c0_TypeEnumItem> _124621_item = *it;
			{
				if ((_124621_item.get()._field_Kind == nullptr)) {
					_1e321142a_pushErr(_self_.ptr(), _124621_item.get()._field_Token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					goto _iter_next_1e59744b5;
				};
				jule::Bool _125117_ok = _1e321530d_checkType(_self_, _124621_item.get()._field_Kind,jule::Trait<_1e315091e_Lookup>(_self_, 3));;
				if ((!(_125117_ok))) {
					goto _iter_next_1e59744b5;
				};
				jule::Ptr<_1e3139881_Prim> _125517_p = _1e3136ebb_Prim(_124621_item.get()._field_Kind.get()._field_Kind.ptr());;
				if (((_125517_p != nullptr) && _1e313cd29_IsAny(_125517_p.ptr()))) {
					_1e321142a_pushErr(_self_.ptr(), _124621_item.get()._field_Token,jule::Str("the <any> type is not allowed for type-enum declarations", 56),jule::Slice<jule::Any>());
				};
			}
			_iter_next_1e59744b5:;
			++it;
			goto _iter_begin_1e59744b5;
		}
		_iter_end_1e59744b5:;
	};
	if ((_123242_e.get()._field_Items.len() == 1LL)) {
		jule::Ptr<_1e25a13c0_TypeEnumItem> _126121_item = _123242_e.get()._field_Items[0LL];;
		_1e3134da9_TypeKind _126217_tk = _1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_123242_e, 4)};;
		if (((_126121_item.get()._field_Kind.get()._field_Kind != nullptr) && _1e31355b3_Equals(_126121_item.get()._field_Kind.get()._field_Kind, ((jule::Ptr<_1e3134da9_TypeKind>)((&(_126217_tk))))))) {
			_1e321142a_pushErr(_self_.ptr(), _126121_item.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_1e25a1cb6_Str(_123242_e.ptr()))}));
		};
	};
}



inline jule::Bool _1e321b875_checkEnumDecls(jule::Ptr<_1e320d768_Sema> _self_) {
	jule::Bool _127236_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Enums;
		auto it = expr.begin();
		_iter_begin_1e597d315:;
		if (it != expr.end()) {
			jule::Ptr<_1e25a038b_Enum> _127321_e = *it;
			{
				_1e321b38b_checkEnumDecl(_self_, _127321_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_127236_ok = false;
					return _127236_ok;
				};
			}
			_iter_next_1e597d315:;
			++it;
			goto _iter_begin_1e597d315;
		}
		_iter_end_1e597d315:;
	};
	_127236_ok = true;
	return _127236_ok;
}



inline jule::Bool _1e321bad9_checkTypeEnumDecls(jule::Ptr<_1e320d768_Sema> _self_) {
	jule::Bool _128440_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1e597e9ed:;
		if (it != expr.end()) {
			jule::Ptr<_1e25a1986_TypeEnum> _128521_e = *it;
			{
				_1e321b611_checkTypeEnumDecl(_self_, _128521_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_128440_ok = false;
					return _128440_ok;
				};
			}
			_iter_next_1e597e9ed:;
			++it;
			goto _iter_begin_1e597e9ed;
		}
		_iter_end_1e597e9ed:;
	};
	_128440_ok = true;
	return _128440_ok;
}



inline jule::Bool _1e321bde7_checkDeclGenerics(_1e320d768_Sema* _self_, jule::Slice<jule::Ptr<_1e2522c6a_GenericDecl>>& _129537_generics) {
	jule::Bool _129570_ok = jule::Bool();
	_129570_ok=true;
	{
		auto &expr = _129537_generics;
		auto it = expr.begin();
		_iter_begin_1e598133a:;
		if (it != expr.end()) {
			jule::I64 _129713_i = it - expr.begin();
			jule::Ptr<_1e2522c6a_GenericDecl> &_129716_g = *it;
			{
				if (_1d42b6b71_IsIgnoreIdent(_129716_g.get()._field_Ident)) {
					_1e321142a_pushErr(&(*_self_), _129716_g.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
					_129570_ok=false;
					goto _iter_next_1e598133a;
				};
				_julec_label_duplicationLookup:;
				{
					auto &expr = _129537_generics;
					auto it = expr.begin();
					_iter_begin_1e59823d5:;
					if (it != expr.end()) {
						jule::I64 _130617_j = it - expr.begin();
						jule::Ptr<_1e2522c6a_GenericDecl> &_130620_ct = *it;
						{
							{
								
								if ((_130617_j >= _129713_i)) {
									_case_begin_1e5983c33:;
									{
										goto _iter_end_1e59823d5;
									}
								}
								else if ((_129716_g.get()._field_Ident == _130620_ct.get()._field_Ident)) {
									_case_begin_1e5983caa:;
									{
										_1e321142a_pushErr(&(*_self_), _129716_g.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_129716_g.get()._field_Ident)}));
										_1e3211749_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										_129570_ok=false;
										goto _iter_end_1e59823d5;
									}
								}
								_match_end_1e5983b12:;
							};
						}
						_iter_next_1e59823d5:;
						++it;
						_130617_j++;
						goto _iter_begin_1e59823d5;
					}
					_iter_end_1e59823d5:;
				};
			}
			_iter_next_1e598133a:;
			++it;
			_129713_i++;
			goto _iter_begin_1e598133a;
		}
		_iter_end_1e598133a:;
	};
	return _129570_ok;
}



inline jule::Bool _1e321c205_checkFnDeclParamsDup(_1e320d768_Sema* _self_, jule::Ptr<_1e258b344_Fn>& _132240_f) {
	jule::Bool _132250_ok = jule::Bool();
	_132250_ok=true;
	_julec_label_check:;
	{
		auto &expr = _132240_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1e5986131:;
		if (it != expr.end()) {
			jule::I64 _132513_i = it - expr.begin();
			jule::Ptr<_1e2589a07_Param> &_132516_p = *it;
			{
				{
					auto &expr = _132240_f.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1e5986d9b:;
					if (it != expr.end()) {
						jule::Ptr<_1e2522c6a_GenericDecl> &_132720_g = *it;
						{
							if ((_132516_p.get()._field_Ident == _132720_g.get()._field_Ident)) {
								_132250_ok=false;
								_1e321142a_pushErr(&(*_self_), _132516_p.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_132516_p.get()._field_Ident)}));
								_1e3211749_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								goto _iter_next_1e5986131;
							};
						}
						_iter_next_1e5986d9b:;
						++it;
						goto _iter_begin_1e5986d9b;
					}
					_iter_end_1e5986d9b:;
				};
				_julec_label_paramsLookup:;
				{
					auto &expr = _132240_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1e5987330:;
					if (it != expr.end()) {
						jule::I64 _133717_j = it - expr.begin();
						jule::Ptr<_1e2589a07_Param> &_133720_jp = *it;
						{
							{
								
								if ((_133717_j >= _132513_i)) {
									_case_begin_1e598962e:;
									{
										goto _iter_end_1e5987330;
									}
								}
								else if ((_1d42b6e18_IsAnonIdent(_132516_p.get()._field_Ident) || _1d42b6e18_IsAnonIdent(_133720_jp.get()._field_Ident))) {
									_case_begin_1e59896a6:;
									{
										goto _iter_end_1e5987330;
									}
								}
								else if ((_132516_p.get()._field_Ident == _133720_jp.get()._field_Ident)) {
									_case_begin_1e598972d:;
									{
										_132250_ok=false;
										_1e321142a_pushErr(&(*_self_), _132516_p.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_132516_p.get()._field_Ident)}));
										_1e3211749_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_next_1e5986131;
									}
								}
								_match_end_1e59894ec:;
							};
						}
						_iter_next_1e5987330:;
						++it;
						_133717_j++;
						goto _iter_begin_1e5987330;
					}
					_iter_end_1e5987330:;
				};
			}
			_iter_next_1e5986131:;
			++it;
			_132513_i++;
			goto _iter_begin_1e5986131;
		}
		_iter_end_1e5986131:;
	};
	return _132250_ok;
}



inline jule::Bool _1e321c513_checkFnDeclResultDup(_1e320d768_Sema* _self_, jule::Ptr<_1e258b344_Fn>& _135640_f) {
	jule::Bool _135650_ok = jule::Bool();
	_135650_ok=true;
	if (_1e258b7a6_IsVoid(_135640_f.ptr())) {
		return _135650_ok;
	};
	{
		auto &expr = _135640_f.get()._field_Result.get()._field_Idents;
		auto it = expr.begin();
		_iter_begin_1e598c302:;
		if (it != expr.end()) {
			jule::I64 _136313_i = it - expr.begin();
			jule::Ptr<_1d42b43cc_Token> &_136316_v = *it;
			{
				if ((_1d42b6b71_IsIgnoreIdent(_136316_v.get()._field_Kind) || _1d42b6e18_IsAnonIdent(_136316_v.get()._field_Kind))) {
					goto _iter_next_1e598c302;
				};
				{
					auto &expr = _135640_f.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1e598da40:;
					if (it != expr.end()) {
						jule::Ptr<_1e2522c6a_GenericDecl> &_136820_g = *it;
						{
							if ((_136316_v.get()._field_Kind == _136820_g.get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1e598da40:;
						++it;
						goto _iter_begin_1e598da40;
					}
					_iter_end_1e598da40:;
				};
				{
					auto &expr = _135640_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1e598ecc7:;
					if (it != expr.end()) {
						jule::Ptr<_1e2589a07_Param> &_137420_p = *it;
						{
							if ((_136316_v.get()._field_Kind == _137420_p.get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1e598ecc7:;
						++it;
						goto _iter_begin_1e598ecc7;
					}
					_iter_end_1e598ecc7:;
				};
				_julec_label_itself_lookup:;
				{
					auto &expr = _135640_f.get()._field_Result.get()._field_Idents;
					auto it = expr.begin();
					_iter_begin_1e5991070:;
					if (it != expr.end()) {
						jule::I64 _138217_j = it - expr.begin();
						jule::Ptr<_1d42b43cc_Token> &_138220_jv = *it;
						{
							{
								
								if ((_138217_j >= _136313_i)) {
									_case_begin_1e5991d0c:;
									{
										goto _iter_end_1e5991070;
									}
								}
								else if ((_138220_jv.get()._field_Kind == _136316_v.get()._field_Kind)) {
									_case_begin_1e5991d84:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_1e5991bdb:;
							};
						}
						_iter_next_1e5991070:;
						++it;
						_138217_j++;
						goto _iter_begin_1e5991070;
					}
					_iter_end_1e5991070:;
				};
				goto _iter_next_1e598c302;
				_julec_label_exist:;
				_1e321142a_pushErr(&(*_self_), _136316_v,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_136316_v.get()._field_Kind)}));
				_1e3211749_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
				_135650_ok=false;
			}
			_iter_next_1e598c302:;
			++it;
			_136313_i++;
			goto _iter_begin_1e598c302;
		}
		_iter_end_1e598c302:;
	};
	return _135650_ok;
}



inline void _1e321c788_checkFnDeclPrototype(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e258b344_Fn>& _140345_f) {
	if ((_140345_f.get()._field_Exceptional && _140345_f.get()._field_CppLinked)) {
		_1e321142a_pushErr(_self_.ptr(), _140345_f.get()._field_Token,jule::Str("cpp-linked defines cannot be exceptional", 40),jule::Slice<jule::Any>());
		return;;
	};
	if (_140345_f.get()._field_Exceptional) {
		if (_1e258bc7e_IsEntryPoint(_140345_f.ptr())) {
			_1e321142a_pushErr(_self_.ptr(), _140345_f.get()._field_Token,jule::Str("entry point cannot be exceptional", 33),jule::Slice<jule::Any>());
		} else if (_1e258bee3_IsInit(_140345_f.ptr())) {
			_1e321142a_pushErr(_self_.ptr(), _140345_f.get()._field_Token,jule::Str("initializer function cannot be exceptional", 42),jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1e321bde7_checkDeclGenerics(_self_.ptr(), _140345_f.get()._field_Generics)))) {
			_case_begin_1e5995173:;
		}
		else if ((!(_1e321c205_checkFnDeclParamsDup(_self_.ptr(), _140345_f)))) {
			_case_begin_1e5996509:;
		}
		else if ((!(_1e321c513_checkFnDeclResultDup(_self_.ptr(), _140345_f)))) {
			_case_begin_1e5996570:;
		}
		_match_end_1e5994eb9:;
	};
}



inline void _1e321ca0d_checkTraitDeclMethod(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e258b344_Fn>& _142445_f) {
	if (_1d42b6b71_IsIgnoreIdent(_142445_f.get()._field_Ident)) {
		_1e321142a_pushErr(_self_.ptr(), _142445_f.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_142445_f.get()._field_sema=_self_;
	_1e321c788_checkFnDeclPrototype(_self_, _142445_f);
	jule::Ptr<_1e258dee5_FnIns> _143117_ins = _1e258c994_instance(_142445_f);;
	_1e321917a_reloadFnInsTypes(_self_, _143117_ins);
	_143117_ins.get()._field_reloaded=true;
	_1e258cc6e_appendInstance(_142445_f.ptr(), _143117_ins);
}



inline void _1e321cc83_checkTraitDeclMethods(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e259d246_Trait>& _143746_t) {
	{
		auto &expr = _143746_t.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1e5999ad4:;
		if (it != expr.end()) {
			jule::I64 _143814_i = it - expr.begin();
			jule::Ptr<_1e258b344_Fn> _143821_f = *it;
			{
				_1e321ca0d_checkTraitDeclMethod(_self_, _143821_f);
				_143746_t.get()._field_Mutable=(_143746_t.get()._field_Mutable || _143821_f.get()._field_Params[0LL].get()._field_Mutable);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;;
				};
				_julec_label_duplicateLookup:;
				{
					auto &expr = _143746_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1e599b82d:;
					if (it != expr.end()) {
						jule::I64 _144917_j = it - expr.begin();
						jule::Ptr<_1e258b344_Fn> _144920_jf = *it;
						{
							{
								
								if ((_144917_j >= _143814_i)) {
									_case_begin_1e599c9b6:;
									{
										goto _iter_end_1e599b82d;
									}
								}
								else if ((_143821_f.get()._field_Ident == _144920_jf.get()._field_Ident)) {
									_case_begin_1e599ca3d:;
									{
										_1e321142a_pushErr(_self_.ptr(), _143821_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_143821_f.get()._field_Ident)}));
										_1e3211749_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_end_1e599b82d;
									}
								}
								_match_end_1e599c895:;
							};
						}
						_iter_next_1e599b82d:;
						++it;
						_144917_j++;
						goto _iter_begin_1e599b82d;
					}
					_iter_end_1e599b82d:;
				};
			}
			_iter_next_1e5999ad4:;
			++it;
			_143814_i++;
			goto _iter_begin_1e5999ad4;
		}
		_iter_end_1e5999ad4:;
	};
}



inline void _1e321d008_checkTraitDecl(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e259d246_Trait>& _146839_t) {
	if (_1d42b6b71_IsIgnoreIdent(_146839_t.get()._field_Ident)) {
		_1e321142a_pushErr(_self_.ptr(), _146839_t.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1e3212052_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_146839_t)),_146839_t.get()._field_Ident,false)) {
		_1e321142a_pushErr(_self_.ptr(), _146839_t.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_146839_t.get()._field_Ident)}));
		_1e3211749_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1e321cc83_checkTraitDeclMethods(_self_, _146839_t);
}



inline jule::Bool _1e321d26c_checkTraitDecls(jule::Ptr<_1e320d768_Sema> _self_) {
	jule::Bool _148037_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Traits;
		auto it = expr.begin();
		_iter_begin_1e59a19dc:;
		if (it != expr.end()) {
			jule::Ptr<_1e259d246_Trait> _148121_t = *it;
			{
				_1e321d008_checkTraitDecl(_self_, _148121_t);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_148037_ok = false;
					return _148037_ok;
				};
			}
			_iter_next_1e59a19dc:;
			++it;
			goto _iter_begin_1e59a19dc;
		}
		_iter_end_1e59a19dc:;
	};
	_148037_ok = true;
	return _148037_ok;
}



inline jule::Bool _1e321d624_checkTraitImplMethods(_1e320d768_Sema* _self_, jule::Ptr<_1e259d246_Trait>& _149145_base, jule::Ptr<_1e31d1bd1_Impl>& _149160_ipl) {
	jule::Bool _149174_ok = jule::Bool();
	_149174_ok=true;
	{
		auto &expr = _149160_ipl.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1e59a3769:;
		if (it != expr.end()) {
			jule::Ptr<_1e258b344_Fn> &_149316_f = *it;
			{
				if ((_1e259e0c1_FindMethod(_149145_base.ptr(), _149316_f.get()._field_Ident) == nullptr)) {
					_1e321142a_pushErr(&(*_self_), _149316_f.get()._field_Token,jule::Str("undefined identifier: trait @ has no define @", 45),jule::Slice<jule::Any>::make({jule::Any(_149145_base.get()._field_Ident),jule::Any(_149316_f.get()._field_Ident)}));
					_149174_ok=false;
				};
			}
			_iter_next_1e59a3769:;
			++it;
			goto _iter_begin_1e59a3769;
		}
		_iter_end_1e59a3769:;
	};
	return _149174_ok;
}



inline jule::Bool _1e321d9cb_implToStruct(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e2505d6e_Struct>& _150237_dest, jule::Ptr<_1e31d1bd1_Impl>& _150257_ipl) {
	jule::Bool _150271_ok = jule::Bool();
	_150271_ok=true;
	{
		auto &expr = _150257_ipl.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1e59a5aac:;
		if (it != expr.end()) {
			jule::Ptr<_1e258b344_Fn> _150621_f = *it;
			{
				if (((_1e24e528c_FindMethod(_150237_dest.ptr(), _150621_f.get()._field_Ident,_150621_f.get()._field_Statically) != nullptr) || (_1e24e56dd_FindField(_150237_dest.ptr(), _150621_f.get()._field_Ident) != nullptr))) {
					_1e321142a_pushErr(_self_.ptr(), _150621_f.get()._field_Token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_150237_dest.get()._field_Ident),jule::Any(_150621_f.get()._field_Ident)}));
					_150271_ok=false;
					goto _iter_next_1e59a5aac;
				};
				if (((_150237_dest.get()._field_Generics.len() > 0LL) && (_150621_f.get()._field_Generics.len() > 0LL))) {
					{
						auto &expr = _150621_f.get()._field_Generics;
						auto it = expr.begin();
						_iter_begin_1e59a81a8:;
						if (it != expr.end()) {
							jule::Ptr<_1e2522c6a_GenericDecl> _151424_fg = *it;
							{
								{
									auto &expr = _150237_dest.get()._field_Generics;
									auto it = expr.begin();
									_iter_begin_1e59a89e4:;
									if (it != expr.end()) {
										jule::Ptr<_1e2522c6a_GenericDecl> _151528_dg = *it;
										{
											if ((_151424_fg.get()._field_Ident == _151528_dg.get()._field_Ident)) {
												_1e321142a_pushErr(_self_.ptr(), _151424_fg.get()._field_Token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>());
												_150271_ok=false;
											};
										}
										_iter_next_1e59a89e4:;
										++it;
										goto _iter_begin_1e59a89e4;
									}
									_iter_end_1e59a89e4:;
								};
							}
							_iter_next_1e59a81a8:;
							++it;
							goto _iter_begin_1e59a81a8;
						}
						_iter_end_1e59a81a8:;
					};
				};
				_1e3212371_checkDirectives(_self_, _150621_f.get()._field_Directives,jule::Any(_150621_f));
				_150621_f.get()._field_sema=_self_;
				_150621_f.get()._field_Owner=_150237_dest;
				_150237_dest.get()._field_Methods = jule::alloc_for_append(_150237_dest.get()._field_Methods,1);_150237_dest.get()._field_Methods.__push(_150621_f);;
			}
			_iter_next_1e59a5aac:;
			++it;
			goto _iter_begin_1e59a5aac;
		}
		_iter_end_1e59a5aac:;
	};
	{
		auto &expr = _150257_ipl.get()._field_Statics;
		auto it = expr.begin();
		_iter_begin_1e59aa8d6:;
		if (it != expr.end()) {
			jule::Ptr<_1e322a147_Var> _153121_v = *it;
			{
				;
				if (((_1e24e528c_FindMethod(_150237_dest.ptr(), _153121_v.get()._field_Ident,true) != nullptr) || (_1e24e629e_FindStatic(_150237_dest.ptr(), _153121_v.get()._field_Ident) != nullptr))) {
					_1e321142a_pushErr(_self_.ptr(), _153121_v.get()._field_Token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_150237_dest.get()._field_Ident),jule::Any(_153121_v.get()._field_Ident)}));
					_150271_ok=false;
					goto _iter_next_1e59aa8d6;
				};
				_1e321e56a_checkVarDecl(_self_, _153121_v,jule::Trait<_1e315091e_Lookup>(_self_, 3));
				_1e3222bab_checkTypeVar(_self_, _153121_v,jule::Trait<_1e315091e_Lookup>(_self_, 3));
				_150237_dest.get()._field_Statics = jule::alloc_for_append(_150237_dest.get()._field_Statics,1);_150237_dest.get()._field_Statics.__push(_153121_v);;
			}
			_iter_next_1e59aa8d6:;
			++it;
			goto _iter_begin_1e59aa8d6;
		}
		_iter_end_1e59aa8d6:;
	};
	return _150271_ok;
}



inline void _1e321dc51_implTrait(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e31d1bd1_Impl>& _154634_decl) {
	jule::Ptr<_1e3134da9_TypeKind> _154717_base_t = _1e3215d7a_selectType(_self_, _154634_decl.get()._field_Base);;
	if ((_154717_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1e259d246_Trait> _155117_base = _1e3138682_Trait(_154717_base_t.ptr());;
	if ((_155117_base == nullptr)) {
		_1e321142a_pushErr(_self_.ptr(), _154634_decl.get()._field_Base.get()._field_Token,jule::Str("invalid base type for impl: @", 29),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_154717_base_t.ptr()))}));
		_1e3211749_pushSugggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e3134da9_TypeKind> _155817_destT = _1e3215d7a_selectType(_self_, _154634_decl.get()._field_Dest);;
	if ((_155817_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1e253220d_StructIns> _156217_destS = _1e313841d_Struct(_155817_destT.ptr());;
	if ((_156217_destS == nullptr)) {
		_1e321142a_pushErr(_self_.ptr(), _154634_decl.get()._field_Dest.get()._field_Token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_155817_destT.ptr()))}));
		_1e3211749_pushSugggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e2505d6e_Struct> _156917_dest = _156217_destS.get()._field_Decl;;
	if ((_1d42ba15d_Dir(_156917_dest.get()._field_Token.get()._field_File.ptr()) != _1d42ba15d_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_1e321142a_pushErr(_self_.ptr(), _154634_decl.get()._field_Dest.get()._field_Token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	_155117_base.get()._field_Implemented = jule::alloc_for_append(_155117_base.get()._field_Implemented,1);_155117_base.get()._field_Implemented.__push(_156917_dest);;
	_156917_dest.get()._field_Implements = jule::alloc_for_append(_156917_dest.get()._field_Implements,1);_156917_dest.get()._field_Implements.__push(_155117_base);;
	if ((_154634_decl.get()._field_Statics.len() > 0LL)) {
		_1e321142a_pushErr(_self_.ptr(), _154634_decl.get()._field_Statics[0LL].get()._field_Token,jule::Str("trait implementations cannot implement static field", 51),jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1e321d624_checkTraitImplMethods(_self_.ptr(), _155117_base,_154634_decl)))) {
			_case_begin_1e59b631a:;
			{
				return;;
			}
		}
		else if ((!(_1e321d9cb_implToStruct(_self_, _156917_dest,_154634_decl)))) {
			_case_begin_1e59b6381:;
			{
				return;;
			}
		}
		_match_end_1e59b54c3:;
	};
}



inline void _1e321dec6_implStruct(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e31d1bd1_Impl>& _159135_decl) {
	jule::Ptr<_1e3134da9_TypeKind> _159217_destT = _1e3215d7a_selectType(_self_, _159135_decl.get()._field_Dest);;
	if ((_159217_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1e253220d_StructIns> _159617_destS = _1e313841d_Struct(_159217_destT.ptr());;
	if ((_159617_destS == nullptr)) {
		_1e321142a_pushErr(_self_.ptr(), _159135_decl.get()._field_Dest.get()._field_Token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_159217_destT.ptr()))}));
		_1e3211749_pushSugggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e2505d6e_Struct> _160317_dest = _159617_destS.get()._field_Decl;;
	if ((_1d42ba15d_Dir(_160317_dest.get()._field_Token.get()._field_File.ptr()) != _1d42ba15d_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_1e321142a_pushErr(_self_.ptr(), _159135_decl.get()._field_Dest.get()._field_Token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1e321d9cb_implToStruct(_self_, _160317_dest,_159135_decl)))) {
			_case_begin_1e59bae13:;
			{
				return;;
			}
		}
		_match_end_1e59b97b3:;
	};
}



inline void _1e321e24b_implImpl(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e31d1bd1_Impl>& _161633_decl) {
	{
		
		if (_1e31d20cc_IsTraitImpl(_161633_decl.ptr())) {
			_case_begin_1e59bba07:;
			{
				_1e321dc51_implTrait(_self_, _161633_decl);
			}
		}
		else if (_1e31d2341_IsStructImpl(_161633_decl.ptr())) {
			_case_begin_1e59bba7e:;
			{
				_1e321dec6_implStruct(_self_, _161633_decl);
			}
		}
		_match_end_1e59bb8d6:;
	};
}



inline void _1e321e56a_checkVarDecl(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e322a147_Var>& _162737_decl, jule::Trait<_1e315091e_Lookup> _162753_l) {
	if (_1d42b6b71_IsIgnoreIdent(_162737_decl.get()._field_Ident)) {
		_1e321142a_pushErr(_self_.ptr(), _162737_decl.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_1e322a763_IsTypeInferred(_162737_decl.ptr())) {
		if ((!(_1e322a4ee_IsInitialized(_162737_decl.ptr())))) {
			_1e321142a_pushErr(_self_.ptr(), _162737_decl.get()._field_Token,jule::Str("type inferred declarations should have a initializer expression", 63),jule::Slice<jule::Any>());
		};
	} else {
		_1e321530d_checkType(_self_, _162737_decl.get()._field_Kind,_162753_l);
	};
	if ((_162737_decl.get()._field_Constant && _162737_decl.get()._field_Reference)) {
		_1e321142a_pushErr(_self_.ptr(), _162737_decl.get()._field_Token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>());
	};
	if ((!(_1e322a4ee_IsInitialized(_162737_decl.ptr())))) {
		if (_162737_decl.get()._field_Constant) {
			_1e321142a_pushErr(_self_.ptr(), _162737_decl.get()._field_Token,jule::Str("missing expression for constant variable initialization", 55),jule::Slice<jule::Any>());
		};
		if (_162737_decl.get()._field_Statically) {
			_1e321142a_pushErr(_self_.ptr(), _162737_decl.get()._field_Token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>());
		};
		if (_162737_decl.get()._field_Reference) {
			_1e321142a_pushErr(_self_.ptr(), _162737_decl.get()._field_Token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>());
		};
	};
}



inline void _1e321e7e0_checkGlobalVarDecl(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e322a147_Var>& _165943_decl) {
	if (_1e3212052_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_165943_decl)),_165943_decl.get()._field_Ident,_165943_decl.get()._field_CppLinked)) {
		_1e321142a_pushErr(_self_.ptr(), _165943_decl.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_165943_decl.get()._field_Ident)}));
		_1e3211749_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_165943_decl.get()._field_CppLinked && _165943_decl.get()._field_Constant)) {
		_1e321142a_pushErr(_self_.ptr(), _165943_decl.get()._field_Token,jule::Str("cpp linked variables cannot be constant", 39),jule::Slice<jule::Any>());
	};
	if ((((!(_165943_decl.get()._field_CppLinked)) && (!(_165943_decl.get()._field_Constant))) && (!(_165943_decl.get()._field_Statically)))) {
		_1e321142a_pushErr(_self_.ptr(), _165943_decl.get()._field_Token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>());
		_1e3211749_pushSugggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>());
	};
	_1e3212371_checkDirectives(_self_, _165943_decl.get()._field_Directives,jule::Any(_165943_decl));
	_1e321e56a_checkVarDecl(_self_, _165943_decl,jule::Trait<_1e315091e_Lookup>(_self_, 3));
}



inline jule::Bool _1e321ea54_checkGlobalDecls(jule::Ptr<_1e320d768_Sema> _self_) {
	jule::Bool _167638_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1e59c6517:;
		if (it != expr.end()) {
			jule::Ptr<_1e322a147_Var> _167721_decl = *it;
			{
				_1e321e7e0_checkGlobalVarDecl(_self_, _167721_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_167638_ok = false;
					return _167638_ok;
				};
			}
			_iter_next_1e59c6517:;
			++it;
			goto _iter_begin_1e59c6517;
		}
		_iter_end_1e59c6517:;
	};
	_167638_ok = true;
	return _167638_ok;
}



inline jule::Bool _1e321ee0b_checkStructTraitImpl(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e2505d6e_Struct>& _168745_strct, jule::Ptr<_1e259d246_Trait>& _168766_trt) {
	jule::Bool _168781_ok = jule::Bool();
	{
		auto &expr = _168766_trt.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1e59c8041:;
		if (it != expr.end()) {
			jule::Ptr<_1e258b344_Fn> _168821_tf = *it;
			{
				jule::Bool _168921_exist = false;;
				jule::Ptr<_1e258b344_Fn> _169021_sf = _1e24e528c_FindMethod(_168745_strct.ptr(), _168821_tf.get()._field_Ident,_168821_tf.get()._field_Statically);;
				jule::Ptr<_1e258dee5_FnIns> _169117_tfK = _1e3217d8d_getTraitCheckFnKind(_self_, _168821_tf);;
				if ((_169021_sf != nullptr)) {
					jule::Ptr<_1e258dee5_FnIns> _169325_sfK = _1e3217d8d_getTraitCheckFnKind(_self_, _169021_sf);;
					_168921_exist=(((_169117_tfK.get()._field_Decl.get()._field_Public == _169325_sfK.get()._field_Decl.get()._field_Public) && (_169117_tfK.get()._field_Decl.get()._field_Ident == _169325_sfK.get()._field_Decl.get()._field_Ident)) && _1e258eda3_equalsTrait(_169117_tfK, _169325_sfK));
				};
				if (_168921_exist) {
					jule::Ptr<_1e24d1e8d_Directive> _169921_d = _1e312e601_findDirective(_169021_sf.get()._field_Directives,jule::Str("deprecated", 10));;
					if ((_169921_d != nullptr)) {
						_1e321142a_pushErr(_self_.ptr(), _169921_d.get()._field_Tag,jule::Str("trait implementations cannot have deprecated code", 49),jule::Slice<jule::Any>());
					};
					_168781_ok=false;
				} else {
					;
					jule::Str _170625_s = _1e2590c0b_GetKindStr(_169117_tfK.ptr(), true);;
					if (_168821_tf.get()._field_Public) {
						(_170625_s).buffer.insert(0, (jule::Str("pub ", 4)));;
					};
					_1e321142a_pushErr(_self_.ptr(), _168745_strct.get()._field_Token,jule::Str("trait @ derived but not implemented define @", 44),jule::Slice<jule::Any>::make({jule::Any(_168766_trt.get()._field_Ident),jule::Any(_170625_s)}));
					_168781_ok=false;
				};
			}
			_iter_next_1e59c8041:;
			++it;
			goto _iter_begin_1e59c8041;
		}
		_iter_end_1e59c8041:;
	};
	return _168781_ok;
}



inline jule::Bool _1e3220219_checkStructImpls(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e2505d6e_Struct>& _171741_s) {
	jule::Bool _171755_ok = jule::Bool();
	_171755_ok=true;
	{
		auto &expr = _171741_s.get()._field_Implements;
		auto it = expr.begin();
		_iter_begin_1e59cebb3:;
		if (it != expr.end()) {
			jule::Ptr<_1e259d246_Trait> _171921_trt = *it;
			{
				_171755_ok=(_1e321ee0b_checkStructTraitImpl(_self_, _171741_s,_171921_trt) && _171755_ok);
			}
			_iter_next_1e59cebb3:;
			++it;
			goto _iter_begin_1e59cebb3;
		}
		_iter_end_1e59cebb3:;
	};
	return _171755_ok;
}



inline jule::Bool _1e3220527_checkStructFields(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e2505d6e_Struct>& _172542_st) {
	jule::Bool _172557_ok = jule::Bool();
	_172557_ok=true;
	{
		auto &expr = _172542_st.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1e59d1104:;
		if (it != expr.end()) {
			jule::Ptr<_1e24e8339_Field> _172721_f = *it;
			{
				_172721_f.get()._field_Owner=_172542_st;
				{
					auto &expr = _172542_st.get()._field_Fields;
					auto it = expr.begin();
					_iter_begin_1e59d1be8:;
					if (it != expr.end()) {
						jule::Ptr<_1e24e8339_Field> _172920_cf = *it;
						{
							if ((_172721_f == _172920_cf)) {
								goto _iter_end_1e59d1be8;
							} else if ((_172721_f.get()._field_Ident == _172920_cf.get()._field_Ident)) {
								_1e321142a_pushErr(_self_.ptr(), _172721_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_172721_f.get()._field_Ident)}));
								_1e3211749_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								_172557_ok=false;
							};
						}
						_iter_next_1e59d1be8:;
						++it;
						goto _iter_begin_1e59d1be8;
					}
					_iter_end_1e59d1be8:;
				};
			}
			_iter_next_1e59d1104:;
			++it;
			goto _iter_begin_1e59d1104;
		}
		_iter_end_1e59d1104:;
	};
	return _172557_ok;
}



inline void _1e322079c_checkStructDecl(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e2505d6e_Struct>& _174240_s) {
	if (_1d42b6b71_IsIgnoreIdent(_174240_s.get()._field_Ident)) {
		_1e321142a_pushErr(_self_.ptr(), _174240_s.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1e3212052_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174240_s)),_174240_s.get()._field_Ident,_174240_s.get()._field_CppLinked)) {
		_1e321142a_pushErr(_self_.ptr(), _174240_s.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_174240_s.get()._field_Ident)}));
		_1e3211749_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1e3212371_checkDirectives(_self_, _174240_s.get()._field_Directives,jule::Any(_174240_s));
	{
		
		if ((!(_1e321bde7_checkDeclGenerics(_self_.ptr(), _174240_s.get()._field_Generics)))) {
			_case_begin_1e59d5b31:;
		}
		else if ((!(_1e3220527_checkStructFields(_self_, _174240_s)))) {
			_case_begin_1e59d5b97:;
		}
		else if ((!(_1e3220219_checkStructImpls(_self_, _174240_s)))) {
			_case_begin_1e59d5c0d:;
		}
		_match_end_1e59d59dd:;
	};
}



inline jule::Bool _1e3220a11_checkStructDecls(jule::Ptr<_1e320d768_Sema> _self_) {
	jule::Bool _176038_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1e59d6eea:;
		if (it != expr.end()) {
			jule::Ptr<_1e2505d6e_Struct> _176121_s = *it;
			{
				_1e322079c_checkStructDecl(_self_, _176121_s);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_176038_ok = false;
					return _176038_ok;
				};
			}
			_iter_next_1e59d6eea:;
			++it;
			goto _iter_begin_1e59d6eea;
		}
		_iter_end_1e59d6eea:;
	};
	_176038_ok = true;
	return _176038_ok;
}



inline void _1e3220c86_checkFnDecl(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e258b344_Fn>& _177136_f) {
	if (_1d42b6b71_IsIgnoreIdent(_177136_f.get()._field_Ident)) {
		_1e321142a_pushErr(_self_.ptr(), _177136_f.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_1e3212371_checkDirectives(_self_, _177136_f.get()._field_Directives,jule::Any(_177136_f));
	_177136_f.get()._field_sema=_self_;
	_1e321c788_checkFnDeclPrototype(_self_, _177136_f);
	if (_1e3212052_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_177136_f)),_177136_f.get()._field_Ident,_177136_f.get()._field_CppLinked)) {
		if ((_177136_f.get()._field_Ident == jule::Str("init", 4))) {
			jule::Ptr<_1e258b344_Fn> _178321_init = _1e3210061_FindFn(_self_.ptr(), jule::Str("init", 4),false);;
			if ((_178321_init != nullptr)) {
				return;;
			};
		};
		_1e321142a_pushErr(_self_.ptr(), _177136_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_177136_f.get()._field_Ident)}));
		_1e3211749_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1e3220eea_checkFnDecls(jule::Ptr<_1e320d768_Sema> _self_) {
	jule::Bool _179434_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1e59dc220:;
		if (it != expr.end()) {
			jule::Ptr<_1e258b344_Fn> _179521_f = *it;
			{
				_1e3220c86_checkFnDecl(_self_, _179521_f);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_179434_ok = false;
					return _179434_ok;
				};
			}
			_iter_next_1e59dc220:;
			++it;
			goto _iter_begin_1e59dc220;
		}
		_iter_end_1e59dc220:;
	};
	_179434_ok = true;
	return _179434_ok;
}



inline void _1e32213b3_pushCycleError(_1e320d768_Sema* _self_, jule::Ptr<_1e2505d6e_Struct>& _180530_st1, jule::Ptr<_1e2505d6e_Struct>& _180545_st2, jule::Str& _180564_message) {
	;
	jule::Str _180713_refers_to = _20a354d5e_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_180530_st1.get()._field_Ident),jule::Any(_180545_st2.get()._field_Ident)}));;
	(_180564_message).buffer.insert(0, (((_20a110026_Repeat(jule::Str(" ", 1),4LL) + _180713_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1e3221814_checkCrossCycle(_1e320d768_Sema* _self_, jule::Ptr<_1e2505d6e_Struct>& _181131_st1, jule::Ptr<_1e2505d6e_Struct>& _181146_st2, jule::Str& _181165_message) {
	{
		auto &expr = _181146_st2.get()._field_Uses;
		auto it = expr.begin();
		_iter_begin_1e59e07b7:;
		if (it != expr.end()) {
			jule::Ptr<_1e2505d6e_Struct> &_181216_u = *it;
			{
				if ((_181216_u == _181131_st1)) {
					_1e32213b3_pushCycleError(&(*_self_), _181146_st2,_181216_u,_181165_message);
					return false;
				};
				if ((!(_1e3221814_checkCrossCycle(&(*_self_), _181131_st1,_181216_u,_181165_message)))) {
					_1e32213b3_pushCycleError(&(*_self_), _181146_st2,_181216_u,_181165_message);
					return false;
				};
			}
			_iter_next_1e59e07b7:;
			++it;
			goto _iter_begin_1e59e07b7;
		}
		_iter_end_1e59e07b7:;
	};
	return true;
}



inline jule::Bool _1e3221c87_checkStructDeriveIllegalCycles(_1e320d768_Sema* _self_, jule::Str _182649_derive, jule::Ptr<_1e2505d6e_Struct>& _182663_st1, jule::Ptr<_1e3134da9_TypeKind>& _182682_k) {
	jule::Bool _182698_ok = jule::Bool();
	jule::Ptr<_1e2505d6e_Struct> _182717_st2 = _1e314d037_getStructFromKind(_182682_k);;
	if ((_182717_st2 == nullptr)) {
		_182698_ok = true;
		return _182698_ok;
	};
	if ((_182663_st1 == _182717_st2)) {
		_1e321142a_pushErr(&(*_self_), _182663_st1.get()._field_Token,jule::Str("illegal cycle for derive @, struct @ refers to itself", 53),jule::Slice<jule::Any>::make({jule::Any(_182649_derive),jule::Any(_182663_st1.get()._field_Ident)}));
		_182698_ok = false;
		return _182698_ok;
	};
	jule::Str _183917_message = jule::Str();;
	if ((!(_1e3221814_checkCrossCycle(&(*_self_), _182663_st1,_182717_st2,_183917_message)))) {
		jule::Str _184121_errMsg = _183917_message;;
		_183917_message=jule::Str();
		_1e32213b3_pushCycleError(&(*_self_), _182663_st1,_182717_st2,_183917_message);
		_184121_errMsg=(_184121_errMsg + _183917_message);
		_1e321142a_pushErr(&(*_self_), _182663_st1.get()._field_Token,jule::Str("illegal cross cycle for derive @;\n@", 35),jule::Slice<jule::Any>::make({jule::Any(_182649_derive),jule::Any(_184121_errMsg)}));
		_182698_ok = false;
		return _182698_ok;
	};
	_182698_ok = true;
	return _182698_ok;
}



inline jule::Bool _1e32220c8_checkStructInsDeriveClone(_1e320d768_Sema* _self_, jule::Ptr<_1e253220d_StructIns> _185148_st) {
	jule::Bool _185166_ok = jule::Bool();
	if ((!(_1e24e6dc6_IsDerives(_185148_st.get()._field_Decl.ptr(), jule::Str("Clone", 5))))) {
		_185166_ok = true;
		return _185166_ok;
	};
	{
		auto &expr = _185148_st.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1e59e700a:;
		if (it != expr.end()) {
			jule::Ptr<_1e250d4d6_FieldIns> _185521_f = *it;
			{
				if ((_185521_f.get()._field_Kind == nullptr)) {
					goto _iter_next_1e59e700a;
				};
				if ((!(_1e31369e3_SupportsCloning(_185521_f.get()._field_Kind.ptr())))) {
					_1e321142a_pushErr(&(*_self_), _185148_st.get()._field_Decl.get()._field_Token,jule::Str("type @ is not compatible to derive @", 36),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_185521_f.get()._field_Kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					_185166_ok = false;
					return _185166_ok;
				};
				if ((!(_1e3221c87_checkStructDeriveIllegalCycles(&(*_self_), jule::Str("Clone", 5),_185148_st.get()._field_Decl,_185521_f.get()._field_Kind)))) {
					_185166_ok = false;
					return _185166_ok;
				};
			}
			_iter_next_1e59e700a:;
			++it;
			goto _iter_begin_1e59e700a;
		}
		_iter_end_1e59e700a:;
	};
	_185166_ok = true;
	return _185166_ok;
}



inline void _1e32222b5_checkPackageDecls(jule::Ptr<_1e320d768_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1e59e7604:;
		if (it != expr.end()) {
			jule::Ptr<_1e310432e_SymbolTable> _187321_f = *it;
			{
				_1e3211062_setCurrentFile(_self_.ptr(), _187321_f);
				if ((!(_1e321bad9_checkTypeEnumDecls(_self_)))) {
					return;;
				};
				if ((!(_1e321a896_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1e59e7604:;
			++it;
			goto _iter_begin_1e59e7604;
		}
		_iter_end_1e59e7604:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1e59e9b89:;
		if (it != expr.end()) {
			jule::Ptr<_1e310432e_SymbolTable> _188321_f = *it;
			{
				_1e3211062_setCurrentFile(_self_.ptr(), _188321_f);
				if ((!(_1e321d26c_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1e59e9b89:;
			++it;
			goto _iter_begin_1e59e9b89;
		}
		_iter_end_1e59e9b89:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1e59eacab:;
		if (it != expr.end()) {
			jule::Ptr<_1e310432e_SymbolTable> _189021_f = *it;
			{
				_1e3211062_setCurrentFile(_self_.ptr(), _189021_f);
				if ((!(_1e321ea54_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1e59eacab:;
			++it;
			goto _iter_begin_1e59eacab;
		}
		_iter_end_1e59eacab:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1e59eb2c8:;
		if (it != expr.end()) {
			jule::Ptr<_1e310432e_SymbolTable> _189721_f = *it;
			{
				_1e3211062_setCurrentFile(_self_.ptr(), _189721_f);
				{
					
					if ((!(_1e3220eea_checkFnDecls(_self_)))) {
						_case_begin_1e59ed50b:;
					}
					else if ((!(_1e3220a11_checkStructDecls(_self_)))) {
						_case_begin_1e59ed572:;
					}
					else {
						_case_begin_1e59ed495:;
						{
							goto _iter_next_1e59eb2c8;
						}
					}
					_match_end_1e59ed42e:;
				};
				return;;
			}
			_iter_next_1e59eb2c8:;
			++it;
			goto _iter_begin_1e59eb2c8;
		}
		_iter_end_1e59eb2c8:;
	};
}



inline void _1e3222606_checkDataForTypeInference(_1e320d768_Sema* _self_, jule::Ptr<_1e310908c_Data>& _190945_d, jule::Ptr<_1d42b43cc_Token>& _190956_err_token) {
	{
		
		if (_1e3109477_IsNil(_190945_d.ptr())) {
			_case_begin_1e59ee52e:;
			{
				_1e321142a_pushErr(&(*_self_), _190956_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>());
			}
		}
		else if (_1e31096db_IsVoid(_190945_d.ptr())) {
			_case_begin_1e59ee5a6:;
			{
				_1e321142a_pushErr(&(*_self_), _190956_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>());
			}
		}
		else if (_190945_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_1e59ee62d:;
			{
				_1e321142a_pushErr(&(*_self_), _190956_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>());
			}
		}
		_match_end_1e59ee3ec:;
	};
}



inline void _1e322288c_checkVar(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e322a147_Var>& _192033_v) {
	if (_192033_v.get()._field_CppLinked) {
		return;;
	};
	if (_1e322a763_IsTypeInferred(_192033_v.ptr())) {
		_192033_v.get()._field_Kind=jule::new_ptr<_1e3139012_TypeSymbol>(_1e3139012_TypeSymbol{._field_Kind=_192033_v.get()._field_Value.get()._field_Data.get()._field_Kind});
		_1e3222606_checkDataForTypeInference(_self_.ptr(), _192033_v.get()._field_Value.get()._field_Data,_192033_v.get()._field_Value.get()._field_Expr.get()._field_Token);
		_1e3219bc5_checkValidityForInitExpr(_self_, _192033_v.get()._field_Mutable,_192033_v.get()._field_Reference,_192033_v.get()._field_Kind.get()._field_Kind,_192033_v.get()._field_Value.get()._field_Data,_192033_v.get()._field_Value.get()._field_Expr.get()._field_Token);
	} else {
		jule::Ptr<_1e3140c1c_Arr> _193721_arr = _1e3137bd1_Arr(_192033_v.get()._field_Kind.get()._field_Kind.ptr());;
		if ((_193721_arr != nullptr)) {
			if (_193721_arr.get()._field_Auto) {
				jule::Ptr<_1e3140c1c_Arr> _194025_dataArr = _1e3137bd1_Arr(_192033_v.get()._field_Value.get()._field_Data.get()._field_Kind.ptr());;
				if ((_194025_dataArr != nullptr)) {
					_193721_arr.get()._field_N=_194025_dataArr.get()._field_N;
				};
			};
		};
		if (_1e3216e8b_checkAssignType(_self_, _192033_v.get()._field_Reference,_192033_v.get()._field_Kind.get()._field_Kind,_192033_v.get()._field_Value.get()._field_Data,_192033_v.get()._field_Value.get()._field_Expr.get()._field_Token)) {
			_1e3219bc5_checkValidityForInitExpr(_self_, _192033_v.get()._field_Mutable,_192033_v.get()._field_Reference,_192033_v.get()._field_Kind.get()._field_Kind,_192033_v.get()._field_Value.get()._field_Data,_192033_v.get()._field_Value.get()._field_Expr.get()._field_Token);
		};
	};
	if ((_192033_v.get()._field_Reference && (!(_1e314c399_isValidForRef(_192033_v.get()._field_Kind.get()._field_Kind))))) {
		_1e321142a_pushErr(_self_.ptr(), _192033_v.get()._field_Token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_192033_v.get()._field_Kind.get()._field_Kind.ptr()))}));
	};
	if (_192033_v.get()._field_Constant) {
		if ((!(_1e3109950_IsConst(_192033_v.get()._field_Value.get()._field_Data.ptr())))) {
			_1e321142a_pushErr(_self_.ptr(), _192033_v.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		};
	} else {
		_192033_v.get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
	};
	if ((_1e3138b5a_Tup(_192033_v.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
		_192033_v.get()._field_Kind.get()._field_Kind=nullptr;
	};
}



inline void _1e3222bab_checkTypeVar(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e322a147_Var>& _197537_decl, jule::Trait<_1e315091e_Lookup> _197553_l) {
	if ((_197537_decl.get()._field_CppLinked || (!(_1e322a4ee_IsInitialized(_197537_decl.ptr()))))) {
		return;;
	};
	jule::Ptr<_1e310ab0a_Eval> _198017_eval = nullptr;;
	if ((_197537_decl.get()._field_Kind != nullptr)) {
		_198017_eval=_1e32162cb_evalpd(_self_, _197553_l,_197537_decl.get()._field_Kind.get()._field_Kind,_197537_decl);
	} else {
		_198017_eval=_1e32162cb_evalpd(_self_, _197553_l,nullptr,_197537_decl);
	};
	_198017_eval.get()._field_immutable=(!(_197537_decl.get()._field_Mutable));
	_197537_decl.get()._field_Value.get()._field_Data=_1e312664d_evalExpr(_198017_eval, _197537_decl.get()._field_Value.get()._field_Expr);
	if ((_197537_decl.get()._field_Value.get()._field_Data == nullptr)) {
		return;;
	};
	_1e322288c_checkVar(_self_, _197537_decl);
}



inline void _1e3222d87_checkGlobalTypes(jule::Ptr<_1e320d768_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1e5a0d609:;
		if (it != expr.end()) {
			jule::Ptr<_1e322a147_Var> _199621_decl = *it;
			{
				if (((_1e322a4ee_IsInitialized(_199621_decl.ptr()) && (_199621_decl.get()._field_Value.get()._field_Data == nullptr)) || (_1e322a763_IsTypeInferred(_199621_decl.ptr()) && (_199621_decl.get()._field_Kind.get()._field_Kind == nullptr)))) {
					_1e3222bab_checkTypeVar(_self_, _199621_decl,jule::Trait<_1e315091e_Lookup>(_self_, 3));
				};
			}
			_iter_next_1e5a0d609:;
			++it;
			goto _iter_begin_1e5a0d609;
		}
		_iter_end_1e5a0d609:;
	};
}



inline jule::Ptr<_1e258dee5_FnIns> _1e322323e_readyToCheckFn(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e253220d_StructIns>& _200739_s, jule::Ptr<_1e258b344_Fn>& _200759_f) {
	jule::Ptr<_1e258dee5_FnIns> _200817_ins = _1e258c994_instance(_200759_f);;
	if ((_200759_f.get()._field_Instances.len() != 0LL)) {
		return _200817_ins;
	};
	_200817_ins.get()._field_Owner=_200739_s;
	_1e258cc6e_appendInstance(_200759_f.ptr(), _200817_ins);
	_200817_ins.get()._field_reloaded=true;
	if (_1e321917a_reloadFnInsTypes(_self_, _200817_ins)) {
		return _200817_ins;
	};
	return nullptr;
}



inline void _1e322355d_checkTypeMethod(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e253220d_StructIns>& _202140_s, jule::Ptr<_1e258b344_Fn>& _202160_f) {
	if ((_202160_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1e258dee5_FnIns> _202617_ins = _202160_f.get()._field_Instances[0LL];;
	if ((_202617_ins.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1e3225c36_checkFnIns(_self_, _202617_ins);
}



inline jule::Ptr<_1e258dee5_FnIns> _1e32239ae_checkStructInsOp(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e253220d_StructIns>& _203441_s, jule::Ptr<_1e258b344_Fn>& _203461_f, jule::Fn<jule::Bool(jule::Ptr<_1e258b344_Fn>)> _203469_p) {
	if ((((_203461_f == nullptr) || (_203461_f.get()._field_Generics.len() > 0LL)) || (!(_203469_p(_203461_f))))) {
		return nullptr;
	};
	return _203461_f.get()._field_Instances[0LL];
}



inline jule::Bool _1e3223d66_checkStructEnv(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e253220d_StructIns>& _204439_s, jule::Ptr<_1d42b43cc_Token> _204458_errorToken) {
	jule::Bool _204480_ok = jule::Bool();
	_1e3143318_typeChecker _204517_tc = _1e3143318_typeChecker{._field_s=_204439_s.get()._field_Decl.get()._field_sema, ._field_lookup=jule::Trait<_1e315091e_Lookup>(_204439_s.get()._field_Decl.get()._field_sema, 3), ._field_referencer=jule::new_ptr<_1e31425c0_referencer>(_1e31425c0_referencer{._field_ident=_204439_s.get()._field_Decl.get()._field_Ident, ._field_owner=jule::Any(_204439_s.get()._field_Decl), }), ._field_refers=_204439_s.get()._field_Refers, };;
	if ((_204439_s.get()._field_Generics.len() > 0LL)) {
		_204517_tc._field_useGenerics=jule::Slice<jule::Ptr<_1e31341b6_TypeAlias>>::alloc(0LL,_204439_s.get()._field_Generics.len());
		{
			auto &expr = _204439_s.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1e5a1c55d:;
			if (it != expr.end()) {
				jule::I64 _205718_i = it - expr.begin();
				jule::Ptr<_1e313367c_InsGeneric> _205725_g = *it;
				{
					_204517_tc._field_useGenerics = jule::alloc_for_append(_204517_tc._field_useGenerics,1);_204517_tc._field_useGenerics.__push(jule::new_ptr<_1e31341b6_TypeAlias>(_1e31341b6_TypeAlias{._field_Ident=_204439_s.get()._field_Decl.get()._field_Generics[_205718_i].get()._field_Ident, ._field_Kind=jule::new_ptr<_1e3139012_TypeSymbol>(_1e3139012_TypeSymbol{._field_Kind=_205725_g.get()._field_Kind}), }));;
				}
				_iter_next_1e5a1c55d:;
				++it;
				_205718_i++;
				goto _iter_begin_1e5a1c55d;
			}
			_iter_end_1e5a1c55d:;
		};
	};
	jule::Ptr<_1e310432e_SymbolTable> _206517_oldFile = _self_.get()._field_file;;
	__JULE_DEFER({
		_1e3211062_setCurrentFile(_self_.ptr(), _206517_oldFile);
	});;
	if ((_self_.get()._field_file.get()._field_File != _204439_s.get()._field_Decl.get()._field_Token.get()._field_File)) {
		jule::Ptr<_1e310432e_SymbolTable> _206921_file = _1e320cd72_findFile(_self_.get()._field_files,_204439_s.get()._field_Decl.get()._field_Token.get()._field_File);;
		if ((_206921_file != nullptr)) {
			_1e3211062_setCurrentFile(_self_.ptr(), _206921_file);
		};
	};
	if ((_204439_s.get()._field_Generics.len() > 0LL)) {
		jule::Ptr<_1e31ceb68_constraintChecker> _207621_cc = _1e3214e56_constraintChecker(_self_);;
		_207621_cc.get()._field_et=_204458_errorToken;
		_207621_cc.get()._field_si=_204439_s;
		_207621_cc.get()._field_genericsA=_204517_tc._field_useGenerics;
		_207621_cc.get()._field_uniq=true;
		if ((!(_1e31d0a48_check(_207621_cc)))) {
			return _204480_ok;
		};
	};
	jule::Ptr<_1e310ab0a_Eval> _208617_eval = _1e3216991_eval(_self_, jule::Trait<_1e315091e_Lookup>(_self_, 3));;
	_204480_ok=true;
	{
		auto &expr = _204439_s.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1e5a23586:;
		if (it != expr.end()) {
			jule::Ptr<_1e250d4d6_FieldIns> _208821_f = *it;
			{
				jule::Ptr<_1e3134da9_TypeKind> _208921_kind = _1e314a584_checkDecl(&_204517_tc, _208821_f.get()._field_Decl.get()._field_Kind.get()._field_Decl);;
				_204480_ok=((_208921_kind != nullptr) && _204480_ok);
				if ((_208921_kind == nullptr)) {
					if (((_self_ != _204439_s.get()._field_Decl.get()._field_sema) && (_204439_s.get()._field_Decl.get()._field_sema.get()._field_errors.len() > 0LL))) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_204439_s.get()._field_Decl.get()._field_sema.get()._field_errors);
						_204439_s.get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
					};
					goto _iter_next_1e5a23586;
				};
				_208821_f.get()._field_Kind=_208921_kind;
				_204439_s.get()._field_Mutable=(_204439_s.get()._field_Mutable || ((!(_208821_f.get()._field_Decl.get()._field_Mutable)) && _1e31362a6_Mutable(_208821_f.get()._field_Kind.ptr())));
				_1e32220c8_checkStructInsDeriveClone(_self_.ptr(), _204439_s);
				if ((_208821_f.get()._field_Decl.get()._field_Default == nullptr)) {
					goto _iter_next_1e5a23586;
				};
				_208617_eval.get()._field_prefix=_208821_f.get()._field_Kind;
				_208617_eval.get()._field_field=_208821_f;
				_208821_f.get()._field_Default=_1e312664d_evalExpr(_208617_eval, _208821_f.get()._field_Decl.get()._field_Default);
				if ((_208821_f.get()._field_Default == nullptr)) {
					goto _iter_next_1e5a23586;
				};
				;
				_1e3216e8b_checkAssignType(_self_, false,_208821_f.get()._field_Kind,_208821_f.get()._field_Default,_208821_f.get()._field_Decl.get()._field_Default.get()._field_Token);
			}
			_iter_next_1e5a23586:;
			++it;
			goto _iter_begin_1e5a23586;
		}
		_iter_end_1e5a23586:;
	};
	return _204480_ok;
}



inline jule::Bool _1e322421d_precheckStructIns(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e253220d_StructIns>& _212242_s, jule::Ptr<_1d42b43cc_Token> _212261_errorToken) {
	jule::Bool _212283_ok = jule::Bool();
	_212283_ok=_1e3223d66_checkStructEnv(_self_, _212242_s,_212261_errorToken);
	if ((!(_212283_ok))) {
		_212283_ok = false;
		return _212283_ok;
	};
	{
		auto &expr = _212242_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1e5a2a00a:;
		if (it != expr.end()) {
			jule::Ptr<_1e258b344_Fn> _212721_f = *it;
			{
				if ((_212721_f.get()._field_Generics.len() == 0LL)) {
					if ((_1e322323e_readyToCheckFn(_self_, _212242_s,_212721_f) == nullptr)) {
						_212283_ok = false;
						return _212283_ok;
					};
				};
			}
			_iter_next_1e5a2a00a:;
			++it;
			goto _iter_begin_1e5a2a00a;
		}
		_iter_end_1e5a2a00a:;
	};
	_212283_ok = true;
	return _212283_ok;
}



inline void _1e3224493_checkStructIns(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e253220d_StructIns>& _213739_s) {
	{
		auto &expr = _213739_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1e5a2baab:;
		if (it != expr.end()) {
			jule::Ptr<_1e258b344_Fn> _213821_f = *it;
			{
				_1e322355d_checkTypeMethod(_self_, _213739_s,_213821_f);
			}
			_iter_next_1e5a2baab:;
			++it;
			goto _iter_begin_1e5a2baab;
		}
		_iter_end_1e5a2baab:;
	};
}



inline void _1e3224718_checkTypeStruct(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e2505d6e_Struct>& _214340_s) {
	if (_214340_s.get()._field_CppLinked) {
		return;;
	};
	if ((_214340_s.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _214340_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1e5a2d0b8:;
		if (it != expr.end()) {
			jule::Ptr<_1e253220d_StructIns> _215621_ins = *it;
			{
				_1e3224493_checkStructIns(_self_, _215621_ins);
			}
			_iter_next_1e5a2d0b8:;
			++it;
			goto _iter_begin_1e5a2d0b8;
		}
		_iter_end_1e5a2d0b8:;
	};
}



inline void _1e32248e4_checkStructTypes(jule::Ptr<_1e320d768_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1e5a2dbce:;
		if (it != expr.end()) {
			jule::Ptr<_1e2505d6e_Struct> _216221_s = *it;
			{
				_1e3224718_checkTypeStruct(_self_, _216221_s);
			}
			_iter_next_1e5a2dbce:;
			++it;
			goto _iter_begin_1e5a2dbce;
		}
		_iter_end_1e5a2dbce:;
	};
}



inline void _1e3224b8b_checkStructInsOperators(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e253220d_StructIns> _216747_s) {
	{
		auto &expr = _216747_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1e5a30032:;
		if (it != expr.end()) {
			jule::Ptr<_1e258b344_Fn> _216821_m = *it;
			{
				{
					auto &_match_expr{ _216821_m.get()._field_Ident };
					
					if (_match_expr == jule::Str("Eq", 2)) {
						_case_begin_1e5a30cad:;
						{
							_216747_s.get()._field_Operators._field_Eq=_1e32239ae_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e258b344_Fn>)>([=](jule::Ptr<_1e258b344_Fn> _217165_f) mutable -> jule::Bool {
								return static__1e322bb71_Eq(_217165_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Gt", 2)) {
						_case_begin_1e5a30d24:;
						{
							_216747_s.get()._field_Operators._field_Gt=_1e32239ae_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e258b344_Fn>)>([=](jule::Ptr<_1e258b344_Fn> _217365_f) mutable -> jule::Bool {
								return static__1e322be18_Gt(_217365_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("GtEq", 4)) {
						_case_begin_1e5a30d9b:;
						{
							_216747_s.get()._field_Operators._field_GtEq=_1e32239ae_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e258b344_Fn>)>([=](jule::Ptr<_1e258b344_Fn> _217567_f) mutable -> jule::Bool {
								return static__1e322c1b0_GtEq(_217567_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Lt", 2)) {
						_case_begin_1e5a30e23:;
						{
							_216747_s.get()._field_Operators._field_Lt=_1e32239ae_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e258b344_Fn>)>([=](jule::Ptr<_1e258b344_Fn> _217765_f) mutable -> jule::Bool {
								return static__1e322c457_Lt(_217765_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("LtEq", 4)) {
						_case_begin_1e5a30e9a:;
						{
							_216747_s.get()._field_Operators._field_LtEq=_1e32239ae_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e258b344_Fn>)>([=](jule::Ptr<_1e258b344_Fn> _217967_f) mutable -> jule::Bool {
								return static__1e322c6ee_LtEq(_217967_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Shl", 3)) {
						_case_begin_1e5a31022:;
						{
							_216747_s.get()._field_Operators._field_Shl=_1e32239ae_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e258b344_Fn>)>([=](jule::Ptr<_1e258b344_Fn> _218166_f) mutable -> jule::Bool {
								return static__1e322ccd7_Shl(_218166_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Shr", 3)) {
						_case_begin_1e5a31099:;
						{
							_216747_s.get()._field_Operators._field_Shr=_1e32239ae_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e258b344_Fn>)>([=](jule::Ptr<_1e258b344_Fn> _218366_f) mutable -> jule::Bool {
								return static__1e322d07e_Shr(_218366_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Add", 3)) {
						_case_begin_1e5a31121:;
						{
							_216747_s.get()._field_Operators._field_Add=_1e32239ae_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e258b344_Fn>)>([=](jule::Ptr<_1e258b344_Fn> _218566_f) mutable -> jule::Bool {
								return static__1e322d326_Add(_218566_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Sub", 3)) {
						_case_begin_1e5a31198:;
						{
							_216747_s.get()._field_Operators._field_Sub=_1e32239ae_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e258b344_Fn>)>([=](jule::Ptr<_1e258b344_Fn> _218766_f) mutable -> jule::Bool {
								return static__1e322d5bd_Sub(_218766_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Div", 3)) {
						_case_begin_1e5a31220:;
						{
							_216747_s.get()._field_Operators._field_Div=_1e32239ae_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e258b344_Fn>)>([=](jule::Ptr<_1e258b344_Fn> _218966_f) mutable -> jule::Bool {
								return static__1e322d865_Div(_218966_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Mul", 3)) {
						_case_begin_1e5a31297:;
						{
							_216747_s.get()._field_Operators._field_Mul=_1e32239ae_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e258b344_Fn>)>([=](jule::Ptr<_1e258b344_Fn> _219166_f) mutable -> jule::Bool {
								return static__1e322db0c_Mul(_219166_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Mod", 3)) {
						_case_begin_1e5a3131e:;
						{
							_216747_s.get()._field_Operators._field_Mod=_1e32239ae_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e258b344_Fn>)>([=](jule::Ptr<_1e258b344_Fn> _219366_f) mutable -> jule::Bool {
								return static__1e322dda4_Mod(_219366_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitAnd", 6)) {
						_case_begin_1e5a31396:;
						{
							_216747_s.get()._field_Operators._field_BitAnd=_1e32239ae_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e258b344_Fn>)>([=](jule::Ptr<_1e258b344_Fn> _219569_f) mutable -> jule::Bool {
								return static__1e322e14b_BitAnd(_219569_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitOr", 5)) {
						_case_begin_1e5a3141d:;
						{
							_216747_s.get()._field_Operators._field_BitOr=_1e32239ae_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e258b344_Fn>)>([=](jule::Ptr<_1e258b344_Fn> _219768_f) mutable -> jule::Bool {
								return static__1e322e3e3_BitOr(_219768_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitXor", 6)) {
						_case_begin_1e5a31495:;
						{
							_216747_s.get()._field_Operators._field_BitXor=_1e32239ae_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e258b344_Fn>)>([=](jule::Ptr<_1e258b344_Fn> _219969_f) mutable -> jule::Bool {
								return static__1e322e68a_BitXor(_219969_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Neg", 3)) {
						_case_begin_1e5a3151c:;
						{
							_216747_s.get()._field_Operators._field_Neg=_1e32239ae_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e258b344_Fn>)>([=](jule::Ptr<_1e258b344_Fn> _220166_f) mutable -> jule::Bool {
								return static__1e322ec73_Neg(_220166_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Pos", 3)) {
						_case_begin_1e5a31594:;
						{
							_216747_s.get()._field_Operators._field_Pos=_1e32239ae_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e258b344_Fn>)>([=](jule::Ptr<_1e258b344_Fn> _220366_f) mutable -> jule::Bool {
								return static__1e323001a_Pos(_220366_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitNot", 6)) {
						_case_begin_1e5a3161b:;
						{
							_216747_s.get()._field_Operators._field_BitNot=_1e32239ae_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e258b344_Fn>)>([=](jule::Ptr<_1e258b344_Fn> _220569_f) mutable -> jule::Bool {
								return static__1e32302b2_BitNot(_220569_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("AddAssign", 9)) {
						_case_begin_1e5a31693:;
						{
							_216747_s.get()._field_Operators._field_AddAssign=_1e32239ae_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e258b344_Fn>)>([=](jule::Ptr<_1e258b344_Fn> _220772_f) mutable -> jule::Bool {
								return static__1e323089a_AddAssign(_220772_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("SubAssign", 9)) {
						_case_begin_1e5a3171a:;
						{
							_216747_s.get()._field_Operators._field_SubAssign=_1e32239ae_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e258b344_Fn>)>([=](jule::Ptr<_1e258b344_Fn> _220972_f) mutable -> jule::Bool {
								return static__1e3230b42_SubAssign(_220972_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("DivAssign", 9)) {
						_case_begin_1e5a31792:;
						{
							_216747_s.get()._field_Operators._field_DivAssign=_1e32239ae_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e258b344_Fn>)>([=](jule::Ptr<_1e258b344_Fn> _221172_f) mutable -> jule::Bool {
								return static__1e3230dd9_DivAssign(_221172_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("MulAssign", 9)) {
						_case_begin_1e5a31819:;
						{
							_216747_s.get()._field_Operators._field_MulAssign=_1e32239ae_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e258b344_Fn>)>([=](jule::Ptr<_1e258b344_Fn> _221372_f) mutable -> jule::Bool {
								return static__1e3231181_MulAssign(_221372_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("ModAssign", 9)) {
						_case_begin_1e5a31891:;
						{
							_216747_s.get()._field_Operators._field_ModAssign=_1e32239ae_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e258b344_Fn>)>([=](jule::Ptr<_1e258b344_Fn> _221572_f) mutable -> jule::Bool {
								return static__1e3231428_ModAssign(_221572_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("ShlAssign", 9)) {
						_case_begin_1e5a31918:;
						{
							_216747_s.get()._field_Operators._field_ShlAssign=_1e32239ae_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e258b344_Fn>)>([=](jule::Ptr<_1e258b344_Fn> _221772_f) mutable -> jule::Bool {
								return static__1e32316c0_ShlAssign(_221772_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("ShrAssign", 9)) {
						_case_begin_1e5a31990:;
						{
							_216747_s.get()._field_Operators._field_ShrAssign=_1e32239ae_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e258b344_Fn>)>([=](jule::Ptr<_1e258b344_Fn> _221972_f) mutable -> jule::Bool {
								return static__1e3231967_ShrAssign(_221972_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitOrAssign", 11)) {
						_case_begin_1e5a31a17:;
						{
							_216747_s.get()._field_Operators._field_BitOrAssign=_1e32239ae_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e258b344_Fn>)>([=](jule::Ptr<_1e258b344_Fn> _222174_f) mutable -> jule::Bool {
								return static__1e3231c0e_BitOrAssign(_222174_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitAndAssign", 12)) {
						_case_begin_1e5a31a8e:;
						{
							_216747_s.get()._field_Operators._field_BitAndAssign=_1e32239ae_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e258b344_Fn>)>([=](jule::Ptr<_1e258b344_Fn> _222375_f) mutable -> jule::Bool {
								return static__1e3231ea6_BitAndAssign(_222375_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitXorAssign", 12)) {
						_case_begin_1e5a31b16:;
						{
							_216747_s.get()._field_Operators._field_BitXorAssign=_1e32239ae_checkStructInsOp(_self_, _216747_s,_216821_m,jule::Fn<jule::Bool(jule::Ptr<_1e258b344_Fn>)>([=](jule::Ptr<_1e258b344_Fn> _222575_f) mutable -> jule::Bool {
								return static__1e323224d_BitXorAssign(_222575_f);
							}));
						}
					}
					_match_end_1e5a30890:;
				};
			}
			_iter_next_1e5a30032:;
			++it;
			goto _iter_begin_1e5a30032;
		}
		_iter_end_1e5a30032:;
	};
}



inline void _1e3224e22_precheckStructType(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e2505d6e_Struct>& _223043_s) {
	if (_223043_s.get()._field_CppLinked) {
		return;;
	};
	if ((_223043_s.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if ((_223043_s.get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_1e253220d_StructIns> _224121_ins = _1e24dd274_instance(_223043_s);;
		_224121_ins.get()._field_Checked=true;
		_1e24e24dc_appendInstance(_223043_s.ptr(), _224121_ins);
		_1e322421d_precheckStructIns(_self_, _224121_ins,nullptr);
	};
	_1e3224b8b_checkStructInsOperators(_self_, _223043_s.get()._field_Instances[0LL]);
}



inline void _1e32250ed_precheckStructTypes(jule::Ptr<_1e320d768_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1e5a5bb85:;
		if (it != expr.end()) {
			jule::Ptr<_1e2505d6e_Struct> _225121_s = *it;
			{
				_1e3224e22_precheckStructType(_self_, _225121_s);
			}
			_iter_next_1e5a5bb85:;
			++it;
			goto _iter_begin_1e5a5bb85;
		}
		_iter_end_1e5a5bb85:;
	};
}



inline void _1e3225373_checkRets(_1e320d768_Sema* _self_, jule::Ptr<_1e258dee5_FnIns>& _225633_f) {
	if (_1e258b7a6_IsVoid(_225633_f.get()._field_Decl.ptr())) {
		return;;
	};
	_1e322751d_missingRetChecker _226013_mrc = static__1e32278d6_new();;
	jule::Bool _226113_ok = _1e32288e8_check(&_226013_mrc, _225633_f.get()._field_Scope);;
	if ((!(_226113_ok))) {
		_1e321142a_pushErr(&(*_self_), _225633_f.get()._field_Decl.get()._field_Token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>());
	};
}



inline void _1e3225692_checkFnInsSc(_1e320d768_Sema* _self_, jule::Ptr<_1e258dee5_FnIns>& _226736_f, jule::Ptr<_1e31dd89c_scopeChecker>& _226752_sc) {
	_1e320c48c_appendRetVars(_226752_sc.get()._field_table.get()._field_Vars,_226736_f);
	_1e320c745_appendParamVars(_226752_sc.get()._field_table.get()._field_Vars,_226736_f);
	_1e320ca20_appendGenericTypeAliases(_226752_sc.get()._field_table.get()._field_TypeAliases,_226736_f);
	_1e31edb65_check(_226752_sc, _226736_f.get()._field_Decl.get()._field_Scope,_226736_f.get()._field_Scope);
	if ((!(_1e31e14d7_stopped(_226752_sc.ptr())))) {
		_1e3225373_checkRets(&(*_self_), _226736_f);
	};
}



inline void _1e32259b1_checkFnInsCaller(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e258dee5_FnIns>& _228041_f, jule::Ptr<_1d42b43cc_Token> _228056_caller) {
	if (_228041_f.get()._field_Decl.get()._field_CppLinked) {
		return;;
	};
	jule::Ptr<_1e310432e_SymbolTable> _228517_old = _228041_f.get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1e3211062_setCurrentFile(_228041_f.get()._field_Decl.get()._field_sema.ptr(), _228517_old);
	});;
	jule::Ptr<_1e310432e_SymbolTable> _228717_file = _1e320cd72_findFile(_228041_f.get()._field_Decl.get()._field_sema.get()._field_files,_228041_f.get()._field_Decl.get()._field_Token.get()._field_File);;
	if ((_228717_file != nullptr)) {
		_1e3211062_setCurrentFile(_228041_f.get()._field_Decl.get()._field_sema.ptr(), _228717_file);
	};
	jule::Ptr<_1e31dd89c_scopeChecker> _229217_sc = _1e31d4101_newScopeChecker(_228041_f.get()._field_Decl.get()._field_sema,_228041_f);;
	_229217_sc.get()._field_calledFrom=_228056_caller;
	_1e3225692_checkFnInsSc(_self_.ptr(), _228041_f,_229217_sc);
	if ((_228041_f.get()._field_Decl.get()._field_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_228041_f.get()._field_Decl.get()._field_sema.get()._field_errors);
		_228041_f.get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
	};
}



inline void _1e3225c36_checkFnIns(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e258dee5_FnIns>& _230235_f) {
	_1e32259b1_checkFnInsCaller(_self_, _230235_f,nullptr);
}



inline void _1e3225eab_checkTypeFn(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e258b344_Fn>& _230636_f) {
	if (_230636_f.get()._field_CppLinked) {
		return;;
	};
	if ((_230636_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _230636_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1e5a672ab:;
		if (it != expr.end()) {
			jule::Ptr<_1e258dee5_FnIns> _231621_ins = *it;
			{
				_1e3225c36_checkFnIns(_self_, _231621_ins);
			}
			_iter_next_1e5a672ab:;
			++it;
			goto _iter_begin_1e5a672ab;
		}
		_iter_end_1e5a672ab:;
	};
}



inline void _1e3226231_checkTestFn(_1e320d768_Sema* _self_, jule::Ptr<_1e258dee5_FnIns>& _232135_f) {
	if (_232135_f.get()._field_Decl.get()._field_Public) {
		_1e321142a_pushErr(&(*_self_), _232135_f.get()._field_Decl.get()._field_Token,jule::Str("test function cannot be public", 30),jule::Slice<jule::Any>());
		_1e3211749_pushSugggestion(&(*_self_), jule::Str("remove \"pub\" modifier", 21),jule::Slice<jule::Any>());
		return;;
	};
	if (((_232135_f.get()._field_Params.len() != 1LL) || (_232135_f.get()._field_Result != nullptr))) {
		_1e321142a_pushErr(&(*_self_), _232135_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1e3211749_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e313d115_Sptr> _233417_sptr = _1e3137230_Sptr(_232135_f.get()._field_Params[0LL].get()._field_Kind.ptr());;
	if ((_233417_sptr == nullptr)) {
		_1e321142a_pushErr(&(*_self_), _232135_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1e3211749_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e253220d_StructIns> _234113_s = _1e313841d_Struct(_233417_sptr.get()._field_Elem.ptr());;
	if (((_234113_s == nullptr) || (!(_1e320ab50_isStdPackage(_234113_s.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path,jule::Str("testing", 7)))))) {
		_1e321142a_pushErr(&(*_self_), _232135_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1e3211749_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1e32264a6_precheckTypeFn(jule::Ptr<_1e320d768_Sema> _self_, jule::Ptr<_1e258b344_Fn>& _234939_f) {
	if (_234939_f.get()._field_CppLinked) {
		return;;
	};
	if ((_234939_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if ((_234939_f.get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_1e258dee5_FnIns> _236021_ins = _1e258c730_instanceForce(_234939_f);;
		_234939_f.get()._field_Instances = jule::alloc_for_append(_234939_f.get()._field_Instances,1);_234939_f.get()._field_Instances.__push(_236021_ins);;
		_1e321917a_reloadFnInsTypes(_self_, _236021_ins);
		_236021_ins.get()._field_reloaded=true;
		if (_1e314ba3b_hasDirective(_234939_f.get()._field_Directives,jule::Str("test", 4))) {
			_1e3226231_checkTestFn(_self_.ptr(), _236021_ins);
		};
	};
}



inline void _1e3226682_precheckFnTypes(jule::Ptr<_1e320d768_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Traits;
		auto it = expr.begin();
		_iter_begin_1e5a71d87:;
		if (it != expr.end()) {
			jule::Ptr<_1e259d246_Trait> _237321_decl = *it;
			{
				{
					auto &expr = _237321_decl.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1e5a7274a:;
					if (it != expr.end()) {
						jule::Ptr<_1e258b344_Fn> _237425_m = *it;
						{
							_1e32264a6_precheckTypeFn(_self_, _237425_m);
						}
						_iter_next_1e5a7274a:;
						++it;
						goto _iter_begin_1e5a7274a;
					}
					_iter_end_1e5a7274a:;
				};
			}
			_iter_next_1e5a71d87:;
			++it;
			goto _iter_begin_1e5a71d87;
		}
		_iter_end_1e5a71d87:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1e5a7245e:;
		if (it != expr.end()) {
			jule::Ptr<_1e258b344_Fn> _237821_decl = *it;
			{
				_1e32264a6_precheckTypeFn(_self_, _237821_decl);
			}
			_iter_next_1e5a7245e:;
			++it;
			goto _iter_begin_1e5a7245e;
		}
		_iter_end_1e5a7245e:;
	};
}



inline void _1e322685d_checkFnTypes(jule::Ptr<_1e320d768_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1e5a73b14:;
		if (it != expr.end()) {
			jule::Ptr<_1e258b344_Fn> _238521_decl = *it;
			{
				_1e3225eab_checkTypeFn(_self_, _238521_decl);
			}
			_iter_next_1e5a73b14:;
			++it;
			goto _iter_begin_1e5a73b14;
		}
		_iter_end_1e5a73b14:;
	};
}



inline void _1e3226a39_checkPackageTypes(jule::Ptr<_1e320d768_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1e5a7442d:;
		if (it != expr.end()) {
			jule::Ptr<_1e310432e_SymbolTable> _239321_f = *it;
			{
				_1e3211062_setCurrentFile(_self_.ptr(), _239321_f);
				_1e3222d87_checkGlobalTypes(_self_);
				_1e3226682_precheckFnTypes(_self_);
				_1e32250ed_precheckStructTypes(_self_);
			}
			_iter_next_1e5a7442d:;
			++it;
			goto _iter_begin_1e5a7442d;
		}
		_iter_end_1e5a7442d:;
	};
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1e5a76298:;
		if (it != expr.end()) {
			jule::Ptr<_1e310432e_SymbolTable> _240421_f = *it;
			{
				_1e3211062_setCurrentFile(_self_.ptr(), _240421_f);
				_1e322685d_checkFnTypes(_self_);
				_1e32248e4_checkStructTypes(_self_);
			}
			_iter_next_1e5a76298:;
			++it;
			goto _iter_begin_1e5a76298;
		}
		_iter_end_1e5a76298:;
	};
}



inline void _1e3226c15_setFileSemaFields(jule::Ptr<_1e320d768_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1e5a76881:;
		if (it != expr.end()) {
			jule::Ptr<_1e258b344_Fn> _241221_f = *it;
			{
				_241221_f.get()._field_sema=_self_;
			}
			_iter_next_1e5a76881:;
			++it;
			goto _iter_begin_1e5a76881;
		}
		_iter_end_1e5a76881:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1e5a77992:;
		if (it != expr.end()) {
			jule::Ptr<_1e2505d6e_Struct> _241521_st = *it;
			{
				_241521_st.get()._field_sema=_self_;
			}
			_iter_next_1e5a77992:;
			++it;
			goto _iter_begin_1e5a77992;
		}
		_iter_end_1e5a77992:;
	};
}



inline void _1e3226de1_setSemaFields(jule::Ptr<_1e320d768_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1e5a78498:;
		if (it != expr.end()) {
			jule::Ptr<_1e310432e_SymbolTable> _242121_file = *it;
			{
				_1e3211062_setCurrentFile(_self_.ptr(), _242121_file);
				_1e3226c15_setFileSemaFields(_self_);
			}
			_iter_next_1e5a78498:;
			++it;
			goto _iter_begin_1e5a78498;
		}
		_iter_end_1e5a78498:;
	};
}



inline void _1e3227166_check(jule::Ptr<_1e320d768_Sema> _self_, jule::Slice<jule::Ptr<_1e310432e_SymbolTable>>& _242730_files) {
	_self_.get()._field_files=_242730_files;
	_1e3213b69_checkImports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1e3226de1_setSemaFields(_self_);
	_1e32141ec_checkEnums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1e3214021_implImpls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1e32222b5_checkPackageDecls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1e3226a39_checkPackageTypes(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1e320d768_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline _1e322751d_missingRetChecker static__1e32278d6_new(void) {
	return _1e322751d_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LL), };
}



inline jule::Bool _1e3227bb1_checkConditional(_1e322751d_missingRetChecker* _self_, jule::Ptr<_1e31d7797_Conditional> _247035_c) {
	{
		auto &expr = _247035_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1e5a7c8ed:;
		if (it != expr.end()) {
			jule::Ptr<_1e31d7137_If> _247121_elif = *it;
			{
				if ((_247121_elif == nullptr)) {
					return false;
				};
				if ((!(_1e32285da_checkScope(&(*_self_), _247121_elif.get()._field_Scope)))) {
					return false;
				};
			}
			_iter_next_1e5a7c8ed:;
			++it;
			goto _iter_begin_1e5a7c8ed;
		}
		_iter_end_1e5a7c8ed:;
	};
	return ((_247035_c.get()._field_Default != nullptr) && _1e32285da_checkScope(&(*_self_), _247035_c.get()._field_Default.get()._field_Scope));
}



inline jule::Bool _1e3227ebe_checkMatch(_1e322751d_missingRetChecker* _self_, jule::Ptr<_1e31da987_Match> _248229_m) {
	{
		auto &expr = _248229_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1e5a7ed51:;
		if (it != expr.end()) {
			jule::Ptr<_1e31db4d2_Case> _248321_c = *it;
			{
				if ((_248321_c == nullptr)) {
					return false;
				};
				jule::I64 _248717_n = (*_self_)._field_breaked.len();;
				jule::Bool _248817_ok = _1e32285da_checkScope(&(*_self_), _248321_c.get()._field_Scope);;
				{
					
					if ((_248717_n != (*_self_)._field_breaked.len())) {
						_case_begin_1e5a81abc:;
						{
							return false;
						}
					}
					else if ((!(_248817_ok))) {
						_case_begin_1e5a81b44:;
						{
							if ((!((*_self_)._field_falled))) {
								return false;
							};
							goto _case_begin_1e5a81bbb;
						}
					}
					else if ((*_self_)._field_falled) {
						_case_begin_1e5a81bbb:;
						{
							(*_self_)._field_falled=false;
							if ((_248321_c.get()._field_Next == nullptr)) {
								return false;
							};
							goto _iter_next_1e5a7ed51;
						}
					}
					_match_end_1e5a81a23:;
				};
			}
			_iter_next_1e5a7ed51:;
			++it;
			goto _iter_begin_1e5a7ed51;
		}
		_iter_end_1e5a7ed51:;
	};
	return ((_248229_m.get()._field_Default != nullptr) && _1e32285da_checkScope(&(*_self_), _248229_m.get()._field_Default.get()._field_Scope));
}



inline jule::Bool _1e32282cc_checkInfIter(_1e322751d_missingRetChecker* _self_, jule::Ptr<_1e31d7a83_InfIter> _250831_it) {
	jule::I64 _250913_n = (*_self_)._field_breaked.len();;
	if (_1e32285da_checkScope(&(*_self_), _250831_it.get()._field_Scope)) {
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_250913_n);
		return true;
	};
	if ((_250913_n != (*_self_)._field_breaked.len())) {
		jule::Uintptr _251517_itaddr = static_cast<jule::Uintptr>(_250831_it);;
		{
			auto expr = (*_self_)._field_breaked.slice(_250913_n);
			auto it = expr.begin();
			_iter_begin_1e5a85939:;
			if (it != expr.end()) {
				jule::Uintptr _251620_addr = *it;
				{
					if ((_251517_itaddr == _251620_addr)) {
						(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_250913_n);
						return false;
					};
				}
				_iter_next_1e5a85939:;
				++it;
				goto _iter_begin_1e5a85939;
			}
			_iter_end_1e5a85939:;
		};
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_250913_n);
	};
	return true;
}



inline jule::Bool _1e32285da_checkScope(_1e322751d_missingRetChecker* _self_, jule::Ptr<_1e31d6c3b_Scope> _252729_s) {
	if ((_252729_s == nullptr)) {
		return false;
	};
	{
		auto &expr = _252729_s.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1e5a8761c:;
		if (it != expr.end()) {
			jule::Any _253121_st = *it;
			{
				{
					auto &_match_expr{ _253121_st };
					
					if (_match_expr.type_is<jule::Ptr<_1e31dba87_FallSt>>()) {
						_case_begin_1e5a88013:;
						{
							(*_self_)._field_falled=true;
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e31d918e_BreakSt>>()) {
						_case_begin_1e5a880ac:;
						{
							jule::Uintptr _253721_addr = _253121_st.operator jule::Ptr<_1e31d918e_BreakSt>().get()._field_It;;
							if ((_253721_addr != 0LLU)) {
								(*_self_)._field_breaked = jule::alloc_for_append((*_self_)._field_breaked,1);(*_self_)._field_breaked.__push(_253721_addr);;
							};
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e31d8cd7_ContSt>>()) {
						_case_begin_1e5a88123:;
						{
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e31d7a83_InfIter>>()) {
						_case_begin_1e5a88189:;
						{
							if (_1e32282cc_checkInfIter(&(*_self_), _253121_st.operator jule::Ptr<_1e31d7a83_InfIter>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e31dc00a_RetSt>>()) {
						_case_begin_1e5a88200:;
						{
							return true;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e31d6c3b_Scope>>()) {
						_case_begin_1e5a88266:;
						{
							if (_1e32285da_checkScope(&(*_self_), _253121_st.operator jule::Ptr<_1e31d6c3b_Scope>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e310908c_Data>>()) {
						_case_begin_1e5a882dd:;
						{
							{
								auto &_match_expr{ _253121_st.operator jule::Ptr<_1e310908c_Data>().get()._field_Model };
								
								if (_match_expr.type_is<jule::Ptr<_1e25872b8_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e2587c58_BuiltinErrorCallExprModel>>()) {
									_case_begin_1e5a8be4b:;
									{
										return true;
									}
								}
								_match_end_1e5a8bba4:;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e31d7797_Conditional>>()) {
						_case_begin_1e5a88365:;
						{
							if (_1e3227bb1_checkConditional(&(*_self_), _253121_st.operator jule::Ptr<_1e31d7797_Conditional>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e31da987_Match>>()) {
						_case_begin_1e5a883dc:;
						{
							if (_1e3227ebe_checkMatch(&(*_self_), _253121_st.operator jule::Ptr<_1e31da987_Match>())) {
								return true;
							};
						}
					}
					_match_end_1e5a87d6a:;
				};
			}
			_iter_next_1e5a8761c:;
			++it;
			goto _iter_begin_1e5a8761c;
		}
		_iter_end_1e5a8761c:;
	};
	return false;
}



inline jule::Bool _1e32288e8_check(_1e322751d_missingRetChecker* _self_, jule::Ptr<_1e31d6c3b_Scope> _257324_s) {
	return _1e32285da_checkScope(&(*_self_), _257324_s);
}







std::ostream &operator<<(std::ostream &_Stream, _1e322751d_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e32291ce_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "Range:" << _Src._field_Range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e322a4ee_IsInitialized(_1e322a147_Var* _self_) {
	return ((*_self_)._field_Value != nullptr);
}



inline jule::Bool _1e322a763_IsTypeInferred(_1e322a147_Var* _self_) {
	return (((*_self_)._field_Kind == nullptr) || ((*_self_)._field_Kind.get()._field_Decl == nullptr));
}







std::ostream &operator<<(std::ostream &_Stream, _1e322a147_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "IterRelation:" << _Src._field_IterRelation << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1e322b2e1_Dispose(jule::Ptr<_1e258b344_Fn> _1027_f) {
	return ((((((((((_1027_f != nullptr) && (_1027_f.get()._field_Owner != nullptr)) && (_1027_f.get()._field_Ident == jule::Str("Dispose", 7))) && (!(_1027_f.get()._field_Statically))) && (!(_1027_f.get()._field_Unsafety))) && _1e258b7a6_IsVoid(_1027_f.ptr())) && (_1027_f.get()._field_Generics.len() == 0LL)) && (_1027_f.get()._field_Params.len() == 1LL)) && _1027_f.get()._field_Params[0LL].get()._field_Mutable) && (!(_1e258a398_IsRef(_1027_f.get()._field_Params[0LL].ptr()))));
}



inline jule::Bool static__1e322b588_Str(jule::Ptr<_1e258b344_Fn> _2423_f) {
	if (((((((((((_2423_f == nullptr) || (_2423_f.get()._field_Owner == nullptr)) || (_2423_f.get()._field_Ident != jule::Str("Str", 3))) || _2423_f.get()._field_Statically) || _2423_f.get()._field_Unsafety) || _1e258b7a6_IsVoid(_2423_f.ptr())) || (_2423_f.get()._field_Generics.len() != 0LL)) || (_2423_f.get()._field_Params.len() != 1LL)) || _2423_f.get()._field_Params[0LL].get()._field_Mutable) || _1e258a398_IsRef(_2423_f.get()._field_Params[0LL].ptr()))) {
		return false;
	};
	jule::Ptr<_1e258dee5_FnIns> _3817_ins = _2423_f.get()._field_Instances[0LL];;
	jule::Ptr<_1e3139881_Prim> _3913_prim = _1e3136ebb_Prim(_3817_ins.get()._field_Result.ptr());;
	if ((_3913_prim == nullptr)) {
		return false;
	};
	return _1e313cab5_IsStr(_3913_prim.ptr());
}



inline jule::Bool static__1e322b8c9_logical(jule::Ptr<_1e258b344_Fn>& _4624_f, jule::Str _4632_ident) {
	if ((((((((((((((_4624_f == nullptr) || (_4624_f.get()._field_Ident != _4632_ident)) || (_4624_f.get()._field_Owner == nullptr)) || (_4624_f.get()._field_Instances.len() == 0LL)) || _4624_f.get()._field_Statically) || _4624_f.get()._field_Unsafety) || _1e258b7a6_IsVoid(_4624_f.ptr())) || (_4624_f.get()._field_Generics.len() != 0LL)) || (_4624_f.get()._field_Params.len() != 2LL)) || _4624_f.get()._field_Params[0LL].get()._field_Mutable) || _1e258a398_IsRef(_4624_f.get()._field_Params[0LL].ptr())) || _4624_f.get()._field_Params[1LL].get()._field_Mutable) || _4624_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;
	};
	jule::Ptr<_1e258dee5_FnIns> _6317_ins = _4624_f.get()._field_Instances[0LL];;
	jule::Ptr<_1e3139881_Prim> _6413_prim = _1e3136ebb_Prim(_6317_ins.get()._field_Result.ptr());;
	if (((_6413_prim == nullptr) || (!(_1e313c851_IsBool(_6413_prim.ptr()))))) {
		return false;
	};
	return (_6317_ins.get()._field_Owner == _1e313841d_Struct(_6317_ins.get()._field_Params[1LL].get()._field_Kind.ptr()));
}



inline jule::Bool static__1e322bb71_Eq(jule::Ptr<_1e258b344_Fn> _7222_f) {
	return static__1e322b8c9_logical(_7222_f,jule::Str("Eq", 2));
}



inline jule::Bool static__1e322be18_Gt(jule::Ptr<_1e258b344_Fn> _7722_f) {
	return static__1e322b8c9_logical(_7722_f,jule::Str("Gt", 2));
}



inline jule::Bool static__1e322c1b0_GtEq(jule::Ptr<_1e258b344_Fn> _8224_f) {
	return static__1e322b8c9_logical(_8224_f,jule::Str("GtEq", 4));
}



inline jule::Bool static__1e322c457_Lt(jule::Ptr<_1e258b344_Fn> _8722_f) {
	return static__1e322b8c9_logical(_8722_f,jule::Str("Lt", 2));
}



inline jule::Bool static__1e322c6ee_LtEq(jule::Ptr<_1e258b344_Fn> _9224_f) {
	return static__1e322b8c9_logical(_9224_f,jule::Str("LtEq", 4));
}



inline jule::Bool static__1e322ca40_result(jule::Ptr<_1e258b344_Fn>& _9623_f, jule::Str _9631_ident) {
	if ((((((((((((((_9623_f == nullptr) || (_9623_f.get()._field_Ident != _9631_ident)) || (_9623_f.get()._field_Owner == nullptr)) || (_9623_f.get()._field_Instances.len() == 0LL)) || _9623_f.get()._field_Statically) || _9623_f.get()._field_Unsafety) || _1e258b7a6_IsVoid(_9623_f.ptr())) || (_9623_f.get()._field_Generics.len() != 0LL)) || (_9623_f.get()._field_Params.len() != 2LL)) || _9623_f.get()._field_Params[0LL].get()._field_Mutable) || _1e258a398_IsRef(_9623_f.get()._field_Params[0LL].ptr())) || _9623_f.get()._field_Params[1LL].get()._field_Mutable) || _9623_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;
	};
	jule::Ptr<_1e258dee5_FnIns> _11317_ins = _9623_f.get()._field_Instances[0LL];;
	return (_1e313841d_Struct(_11317_ins.get()._field_Result.ptr()) == _11317_ins.get()._field_Owner);
}



inline jule::Bool static__1e322ccd7_Shl(jule::Ptr<_1e258b344_Fn> _11823_f) {
	return static__1e322ca40_result(_11823_f,jule::Str("Shl", 3));
}



inline jule::Bool static__1e322d07e_Shr(jule::Ptr<_1e258b344_Fn> _12323_f) {
	return static__1e322ca40_result(_12323_f,jule::Str("Shr", 3));
}



inline jule::Bool static__1e322d326_Add(jule::Ptr<_1e258b344_Fn> _12823_f) {
	return static__1e322ca40_result(_12823_f,jule::Str("Add", 3));
}



inline jule::Bool static__1e322d5bd_Sub(jule::Ptr<_1e258b344_Fn> _13323_f) {
	return static__1e322ca40_result(_13323_f,jule::Str("Sub", 3));
}



inline jule::Bool static__1e322d865_Div(jule::Ptr<_1e258b344_Fn> _13823_f) {
	return static__1e322ca40_result(_13823_f,jule::Str("Div", 3));
}



inline jule::Bool static__1e322db0c_Mul(jule::Ptr<_1e258b344_Fn> _14323_f) {
	return static__1e322ca40_result(_14323_f,jule::Str("Mul", 3));
}



inline jule::Bool static__1e322dda4_Mod(jule::Ptr<_1e258b344_Fn> _14823_f) {
	return static__1e322ca40_result(_14823_f,jule::Str("Mod", 3));
}



inline jule::Bool static__1e322e14b_BitAnd(jule::Ptr<_1e258b344_Fn> _15326_f) {
	return static__1e322ca40_result(_15326_f,jule::Str("BitAnd", 6));
}



inline jule::Bool static__1e322e3e3_BitOr(jule::Ptr<_1e258b344_Fn> _15825_f) {
	return static__1e322ca40_result(_15825_f,jule::Str("BitOr", 5));
}



inline jule::Bool static__1e322e68a_BitXor(jule::Ptr<_1e258b344_Fn> _16326_f) {
	return static__1e322ca40_result(_16326_f,jule::Str("BitXor", 6));
}



inline jule::Bool static__1e322e9cb_unary(jule::Ptr<_1e258b344_Fn>& _16722_f, jule::Str _16730_ident) {
	if ((((((((((((_16722_f == nullptr) || (_16722_f.get()._field_Ident != _16730_ident)) || (_16722_f.get()._field_Owner == nullptr)) || (_16722_f.get()._field_Instances.len() == 0LL)) || _16722_f.get()._field_Statically) || _16722_f.get()._field_Unsafety) || _1e258b7a6_IsVoid(_16722_f.ptr())) || (_16722_f.get()._field_Generics.len() != 0LL)) || (_16722_f.get()._field_Params.len() != 1LL)) || _16722_f.get()._field_Params[0LL].get()._field_Mutable) || _1e258a398_IsRef(_16722_f.get()._field_Params[0LL].ptr()))) {
		return false;
	};
	jule::Ptr<_1e258dee5_FnIns> _18217_ins = _16722_f.get()._field_Instances[0LL];;
	return (_1e313841d_Struct(_18217_ins.get()._field_Result.ptr()) == _18217_ins.get()._field_Owner);
}



inline jule::Bool static__1e322ec73_Neg(jule::Ptr<_1e258b344_Fn> _18723_f) {
	return static__1e322e9cb_unary(_18723_f,jule::Str("Neg", 3));
}



inline jule::Bool static__1e323001a_Pos(jule::Ptr<_1e258b344_Fn> _19223_f) {
	return static__1e322e9cb_unary(_19223_f,jule::Str("Pos", 3));
}



inline jule::Bool static__1e32302b2_BitNot(jule::Ptr<_1e258b344_Fn> _19726_f) {
	return static__1e322e9cb_unary(_19726_f,jule::Str("BitNot", 6));
}



inline jule::Bool static__1e3230603_assign(jule::Ptr<_1e258b344_Fn>& _20123_f, jule::Str _20131_ident) {
	if ((((((((((((((_20123_f == nullptr) || (_20123_f.get()._field_Ident != _20131_ident)) || (_20123_f.get()._field_Owner == nullptr)) || (_20123_f.get()._field_Instances.len() == 0LL)) || _20123_f.get()._field_Statically) || _20123_f.get()._field_Unsafety) || (!(_1e258b7a6_IsVoid(_20123_f.ptr())))) || (_20123_f.get()._field_Generics.len() != 0LL)) || (_20123_f.get()._field_Params.len() != 2LL)) || (!(_20123_f.get()._field_Params[0LL].get()._field_Mutable))) || _1e258a398_IsRef(_20123_f.get()._field_Params[0LL].ptr())) || _20123_f.get()._field_Params[1LL].get()._field_Mutable) || _20123_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;
	};
	return true;
}



inline jule::Bool static__1e323089a_AddAssign(jule::Ptr<_1e258b344_Fn> _22129_f) {
	return static__1e3230603_assign(_22129_f,jule::Str("AddAssign", 9));
}



inline jule::Bool static__1e3230b42_SubAssign(jule::Ptr<_1e258b344_Fn> _22629_f) {
	return static__1e3230603_assign(_22629_f,jule::Str("SubAssign", 9));
}



inline jule::Bool static__1e3230dd9_DivAssign(jule::Ptr<_1e258b344_Fn> _23129_f) {
	return static__1e3230603_assign(_23129_f,jule::Str("DivAssign", 9));
}



inline jule::Bool static__1e3231181_MulAssign(jule::Ptr<_1e258b344_Fn> _23629_f) {
	return static__1e3230603_assign(_23629_f,jule::Str("MulAssign", 9));
}



inline jule::Bool static__1e3231428_ModAssign(jule::Ptr<_1e258b344_Fn> _24129_f) {
	return static__1e3230603_assign(_24129_f,jule::Str("ModAssign", 9));
}



inline jule::Bool static__1e32316c0_ShlAssign(jule::Ptr<_1e258b344_Fn> _24629_f) {
	return static__1e3230603_assign(_24629_f,jule::Str("ShlAssign", 9));
}



inline jule::Bool static__1e3231967_ShrAssign(jule::Ptr<_1e258b344_Fn> _25129_f) {
	return static__1e3230603_assign(_25129_f,jule::Str("ShrAssign", 9));
}



inline jule::Bool static__1e3231c0e_BitOrAssign(jule::Ptr<_1e258b344_Fn> _25631_f) {
	return static__1e3230603_assign(_25631_f,jule::Str("BitOrAssign", 11));
}



inline jule::Bool static__1e3231ea6_BitAndAssign(jule::Ptr<_1e258b344_Fn> _26132_f) {
	return static__1e3230603_assign(_26132_f,jule::Str("BitAndAssign", 12));
}



inline jule::Bool static__1e323224d_BitXorAssign(jule::Ptr<_1e258b344_Fn> _26632_f) {
	return static__1e3230603_assign(_26632_f,jule::Str("BitXorAssign", 12));
}







std::ostream &operator<<(std::ostream &_Stream, _1e322ab70_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1e30e3351_pushErr(_1e30e2e55_typeCompatibilityChecker* _self_, jule::Str _11726_fmt, jule::Slice<jule::Any> _11739_args) {
	_1e321142a_pushErr((*_self_)._field_s.ptr(), (*_self_)._field_errorToken,_11726_fmt,jule::Any(_11739_args));
}



inline jule::Bool _1e30e35b5_checkTrait(_1e30e2e55_typeCompatibilityChecker* _self_) {
	jule::Bool _12131_ok = jule::Bool();
	if (_1e3135ccd_IsNil((*_self_)._field_src.ptr())) {
		_12131_ok = true;
		return _12131_ok;
	};
	jule::Ptr<_1e259d246_Trait> _12513_trt = _1e3138682_Trait((*_self_)._field_dest.ptr());;
	jule::Bool _12617_ref = false;;
	{
		
		if ((_1e3137230_Sptr((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1e5ac5bdd:;
			{
				_12617_ref=true;
				(*_self_)._field_src=_1e3137230_Sptr((*_self_)._field_src.ptr()).get()._field_Elem;
				if ((_1e313841d_Struct((*_self_)._field_src.ptr()) == nullptr)) {
					_12131_ok = false;
					return _12131_ok;
				};
				goto _case_begin_1e5ac5ccb;
			}
		}
		else if ((_1e313841d_Struct((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1e5ac5ccb:;
			{
				jule::Ptr<_1e253220d_StructIns> _13617_s = _1e313841d_Struct((*_self_)._field_src.ptr());;
				if ((!(_1e24e79ba_IsImplements(_13617_s.get()._field_Decl.ptr(), _12513_trt)))) {
					_12131_ok = false;
					return _12131_ok;
				};
				if (((!(_12617_ref)) && _1e30e15d5_traitHasReferenceReceiver(_12513_trt))) {
					_1e30e3351_pushErr(&(*_self_), jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>());
					_12131_ok = false;
					return _12131_ok;
				};
				_12131_ok = true;
				return _12131_ok;
			}
		}
		else if ((_1e3138682_Trait((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1e5ac5d42:;
			{
				_12131_ok = (_12513_trt == _1e3138682_Trait((*_self_)._field_src.ptr()));
				return _12131_ok;
			}
		}
		else {
			_case_begin_1e5ac557d:;
			{
				_12131_ok = false;
				return _12131_ok;
			}
		}
		_match_end_1e5ac5528:;
	};
}



inline jule::Bool _1e30e3829_checkPtr(_1e30e2e55_typeCompatibilityChecker* _self_) {
	jule::Bool _15229_ok = jule::Bool();
	if (_1e3135ccd_IsNil((*_self_)._field_src.ptr())) {
		_15229_ok = true;
		return _15229_ok;
	};
	jule::Ptr<_1e3141679_Ptr> _15617_dest = _1e3137494_Ptr((*_self_)._field_dest.ptr());;
	if (_1e314214c_IsUnsafe(_15617_dest.ptr())) {
		_15229_ok = true;
		return _15229_ok;
	};
	_15229_ok = _1e31355b3_Equals((*_self_)._field_dest, (*_self_)._field_src);
	return _15229_ok;
}



inline jule::Bool _1e30e3a8d_checkPrim(_1e30e2e55_typeCompatibilityChecker* _self_) {
	jule::Bool _16330_ok = jule::Bool();
	if ((!((*_self_)._field_dest.get()._field_Variadic))) {
		jule::Ptr<_1e3139881_Prim> _16517_prim = _1e3136ebb_Prim((*_self_)._field_dest.ptr());;
		if (((_16517_prim != nullptr) && _1e313cd29_IsAny(_16517_prim.ptr()))) {
			_16330_ok = true;
			return _16330_ok;
		};
	};
	_16330_ok = _1e31355b3_Equals((*_self_)._field_dest, (*_self_)._field_src);
	return _16330_ok;
}



inline jule::Bool _1e30e3e45_typeEnum(_1e30e2e55_typeCompatibilityChecker* _self_, jule::Ptr<_1e25a1986_TypeEnum>& _17328_e, jule::Ptr<_1e3134da9_TypeKind>& _17347_t2) {
	jule::Bool _17364_ok = jule::Bool();
	{
		auto &expr = _17328_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1e5acd872:;
		if (it != expr.end()) {
			jule::Ptr<_1e25a13c0_TypeEnumItem> _17421_item = *it;
			{
				if (_1e31355b3_Equals(_17421_item.get()._field_Kind.get()._field_Kind, _17347_t2)) {
					_17364_ok = true;
					return _17364_ok;
				};
				jule::Ptr<_1e25a1986_TypeEnum> _17821_ke = _1e313796c_TypeEnum(_17421_item.get()._field_Kind.get()._field_Kind.ptr());;
				if ((_17821_ke == nullptr)) {
					goto _iter_next_1e5acd872;
				};
				if (_1e30e3e45_typeEnum(&(*_self_), _17821_ke,_17347_t2)) {
					_17364_ok = true;
					return _17364_ok;
				};
			}
			_iter_next_1e5acd872:;
			++it;
			goto _iter_begin_1e5acd872;
		}
		_iter_end_1e5acd872:;
	};
	_17364_ok = false;
	return _17364_ok;
}



inline jule::Bool _1e30e41a9_checkTypeEnum(_1e30e2e55_typeCompatibilityChecker* _self_) {
	jule::Bool _18934_ok = jule::Bool();
	if (_1e31355b3_Equals((*_self_)._field_dest, (*_self_)._field_src)) {
		_18934_ok = true;
		return _18934_ok;
	};
	jule::Ptr<_1e25a1986_TypeEnum> _19317_e = _1e313796c_TypeEnum((*_self_)._field_dest.ptr());;
	_18934_ok = _1e30e3e45_typeEnum(&(*_self_), _19317_e,(*_self_)._field_src);
	return _18934_ok;
}



inline jule::Bool _1e30e441d_check(_1e30e2e55_typeCompatibilityChecker* _self_) {
	jule::Bool _19726_ok = jule::Bool();
	if ((_1e3137494_Ptr((*_self_)._field_dest.ptr()) != nullptr)) {
		_19726_ok = _1e30e3829_checkPtr(&(*_self_));
		return _19726_ok;
	};
	if (_1e313651a_NilCompatible((*_self_)._field_dest.ptr())) {
		if (_1e3135ccd_IsNil((*_self_)._field_src.ptr())) {
			_19726_ok = true;
			return _19726_ok;
		};
	};
	{
		
		if ((_1e3136ebb_Prim((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1e5ad3ca6:;
			{
				_19726_ok = _1e30e3a8d_checkPrim(&(*_self_));
				return _19726_ok;
			}
		}
		else if ((_1e313796c_TypeEnum((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1e5ad3d1c:;
			{
				_19726_ok = _1e30e41a9_checkTypeEnum(&(*_self_));
				return _19726_ok;
			}
		}
		else if ((_1e3138682_Trait((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1e5ad4108:;
			{
				_19726_ok = _1e30e35b5_checkTrait(&(*_self_));
				return _19726_ok;
			}
		}
		else {
			_case_begin_1e5ad2e3c:;
			{
				_19726_ok = _1e31355b3_Equals((*_self_)._field_dest, (*_self_)._field_src);
				return _19726_ok;
			}
		}
		_match_end_1e5ad2ce9:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e30e2e55_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _1e30e4dbe_pushErr(_1e30e495c_assignTypeChecker* _self_, jule::Str _22926_fmt, jule::Slice<jule::Any> _22939_args) {
	_1e321142a_pushErr((*_self_)._field_s.ptr(), (*_self_)._field_errorToken,_22926_fmt,jule::Any(_22939_args));
}



inline jule::Bool _1e30e5133_checkValidity(_1e30e495c_assignTypeChecker* _self_) {
	jule::Bool _23417_valid = true;;
	{
		
		if ((_1e31381a9_Fn((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5ad7419:;
			{
				jule::Ptr<_1e258dee5_FnIns> _23717_f = _1e31381a9_Fn((*_self_)._field_d.get()._field_Kind.ptr());;
				{
					
					if (_1e259037b_IsBuiltin(_23717_f.ptr())) {
						_case_begin_1e5ad89e2:;
						{
							_1e30e4dbe_pushErr(&(*_self_), jule::Str("builtin define cannot use as anonymous function", 47),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (_23717_f.get()._field_Decl.get()._field_CppLinked) {
						_case_begin_1e5ad8a69:;
						{
							_1e30e4dbe_pushErr(&(*_self_), jule::Str("cpp-linked functions cannot use as anonymous function", 53),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (((!(_23717_f.get()._field_Decl.get()._field_Statically)) && _1e258ba1a_IsMethod(_23717_f.get()._field_Decl.ptr()))) {
						_case_begin_1e5ad8ae1:;
						{
							_1e30e4dbe_pushErr(&(*_self_), jule::Str("non-static methods cannot use as anonymous function", 51),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (((_23717_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_23717_f.get()._field_Generics.len() == 0LL))) {
						_case_begin_1e5ad8b68:;
						{
							_1e30e4dbe_pushErr(&(*_self_), jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
							_1e3211749_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("instantiate generic function to use as anonymous function", 57),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					_match_end_1e5ad8915:;
				};
			}
		}
		else if ((_1e3138b5a_Tup((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5ad7491:;
			{
				_1e30e4dbe_pushErr(&(*_self_), jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>());
				_23417_valid=false;
			}
		}
		_match_end_1e5ad735e:;
	};
	return _23417_valid;
}



inline jule::Bool _1e30e5397_checkConst(_1e30e495c_assignTypeChecker* _self_) {
	if (((((!(_1e3109950_IsConst((*_self_)._field_d.ptr()))) || (_1e3136ebb_Prim((*_self_)._field_dest.ptr()) == nullptr)) || (_1e3136ebb_Prim((*_self_)._field_d.get()._field_Kind.ptr()) == nullptr)) || (!(_1e31cd749_IsNum(_1e3136ebb_Prim((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
		return false;
	};
	if (((*_self_)._field_d.get()._field_Model != (*_self_)._field_d.get()._field_Constant)) {
		return false;
	};
	jule::Str _27413_kind = _1e3136ebb_Prim((*_self_)._field_dest.ptr()).get()._field_Kind;;
	{
		
		if (_1e31cd4a2_IsFloat(_27413_kind)) {
			_case_begin_1e5ae1302:;
			{
				if ((!(_1e30e1717_floatAssignable(_27413_kind,(*_self_)._field_d)))) {
					_1e30e4dbe_pushErr(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				};
			}
		}
		else if (_1e31cd183_IsInt(_27413_kind)) {
			_case_begin_1e5ae0b1a:;
			{
				if ((!(_1e30e2d23_intAssignable(_27413_kind,(*_self_)._field_d)))) {
					_1e30e4dbe_pushErr(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				};
			}
		}
		else {
			_case_begin_1e5ae0aa4:;
			{
				return false;
			}
		}
		_match_end_1e5ae0a4e:;
	};
	return true;
}



inline jule::Bool _1e30e560b_isPrim(_1e30e495c_assignTypeChecker* _self_) {
	if (((*_self_)._field_dest.get()._field_Variadic || (*_self_)._field_d.get()._field_Kind.get()._field_Variadic)) {
		return false;
	};
	if ((_1e3135a69_CppLinked((*_self_)._field_dest.ptr()) || _1e3135a69_CppLinked((*_self_)._field_d.get()._field_Kind.ptr()))) {
		return false;
	};
	return ((_1e3136ebb_Prim((*_self_)._field_dest.ptr()) != nullptr) && (_1e3136ebb_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr));
}



inline jule::Bool _1e30e5870_checkCompatibility(_1e30e495c_assignTypeChecker* _self_) {
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1e5ae4da5:;
			{
				return false;
			}
		}
		else if ((!(_1e30e5133_checkValidity(&(*_self_))))) {
			_case_begin_1e5ae4e2c:;
			{
				return false;
			}
		}
		else if (_1e30e5397_checkConst(&(*_self_))) {
			_case_begin_1e5ae4ea4:;
			{
				return true;
			}
		}
		else if ((_1e3137708_Enum((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5ae502b:;
			{
				jule::Ptr<_1e3134da9_TypeKind> _31621_dkind = (*_self_)._field_dest;;
				if ((_1e3137708_Enum((*_self_)._field_dest.ptr()) != nullptr)) {
					_31621_dkind=_1e3137708_Enum((*_self_)._field_dest.ptr()).get()._field_Kind.get()._field_Kind;
				} else if ((_1e3136ebb_Prim((*_self_)._field_dest.ptr()) == nullptr)) {
					goto _match_end_1e5ae4c84;
				};
				if (_1e31c9eb5_TypesAreCompatible(_1e3136ebb_Prim(_1e3137708_Enum((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Kind,_1e3136ebb_Prim(_31621_dkind.ptr()).get()._field_Kind)) {
					return true;
				};
			}
		}
		else if (_1e30e560b_isPrim(&(*_self_))) {
			_case_begin_1e5ae50a3:;
			{
				jule::Ptr<_1e3139881_Prim> _32617_dest = _1e3136ebb_Prim((*_self_)._field_dest.ptr());;
				if (_1e313cd29_IsAny(_32617_dest.ptr())) {
					return true;
				};
				jule::Ptr<_1e3139881_Prim> _33021_src = _1e3136ebb_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
				if (_1e31c9eb5_TypesAreCompatible(_32617_dest.get()._field_Kind,_33021_src.get()._field_Kind)) {
					return true;
				};
			}
		}
		_match_end_1e5ae4c84:;
	};
	return _1e32173dc_checkTypeCompatibility((*_self_)._field_s, (*_self_)._field_dest,(*_self_)._field_d.get()._field_Kind,(*_self_)._field_errorToken);
}



inline jule::Bool _1e30e5ad4_check(_1e30e495c_assignTypeChecker* _self_) {
	jule::Bool _33913_ok = _1e30e5870_checkCompatibility(&(*_self_));;
	if (_33913_ok) {
		_1e314d587_applyImplicitCast((*_self_)._field_dest,(*_self_)._field_d);
	};
	return _33913_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1e30e495c_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e5b0db8d_annotateConstraintElem(_1e30e6376_dynamicTypeAnnotation* _self_, jule::Ptr<_1e3134da9_TypeKind>& _35849_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e2517b94_ArrTypeDecl>>()) {
			_case_begin_1e5b10277:;
			{
				jule::Ptr<_1e3134da9_TypeKind> _36121_elem = nullptr;;
				{
					
{
						_case_begin_1e5b11102:;
						{
							_36121_elem=_1e3137bd1_Arr(_35849_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1e5b11047:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1e2517b94_ArrTypeDecl>().get()._field_Elem;
				return _1e30e79c6_annotateConstraint(&(*_self_), _36121_elem);
			}
		}
		_match_end_1e5b101bc:;
	};
	return false;
}

inline jule::Bool _1e5b0d2ca_annotateConstraintElem(_1e30e6376_dynamicTypeAnnotation* _self_, jule::Ptr<_1e3134da9_TypeKind>& _35849_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e2516e3a_SlcTypeDecl>>()) {
			_case_begin_1e5b138da:;
			{
				jule::Ptr<_1e3134da9_TypeKind> _36121_elem = nullptr;;
				{
					
{
						_case_begin_1e5b1480e:;
						{
							_36121_elem=_1e3137e45_Slc(_35849_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1e5b146aa:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1e2516e3a_SlcTypeDecl>().get()._field_Elem;
				return _1e30e79c6_annotateConstraint(&(*_self_), _36121_elem);
			}
		}
		_match_end_1e5b13830:;
	};
	return false;
}

inline jule::Bool _1e5b10552_annotateConstraintElem(_1e30e6376_dynamicTypeAnnotation* _self_, jule::Ptr<_1e3134da9_TypeKind>& _35849_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e2517512_PtrTypeDecl>>()) {
			_case_begin_1e5b170b4:;
			{
				jule::Ptr<_1e3134da9_TypeKind> _36121_elem = nullptr;;
				{
					
{
						_case_begin_1e5b1804e:;
						{
							_36121_elem=_1e3137494_Ptr(_35849_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1e5b17d84:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1e2517512_PtrTypeDecl>().get()._field_Elem;
				return _1e30e79c6_annotateConstraint(&(*_self_), _36121_elem);
			}
		}
		_match_end_1e5b17009:;
	};
	return false;
}

inline jule::Bool _1e5b16657_annotateConstraintElem(_1e30e6376_dynamicTypeAnnotation* _self_, jule::Ptr<_1e3134da9_TypeKind>& _35849_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e2516a3e_SptrTypeDecl>>()) {
			_case_begin_1e5b1a408:;
			{
				jule::Ptr<_1e3134da9_TypeKind> _36121_elem = nullptr;;
				{
					
{
						_case_begin_1e5b1b409:;
						{
							_36121_elem=_1e3137230_Sptr(_35849_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1e5b1b1c8:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1e2516a3e_SptrTypeDecl>().get()._field_Elem;
				return _1e30e79c6_annotateConstraint(&(*_self_), _36121_elem);
			}
		}
		_match_end_1e5b1a34d:;
	};
	return false;
}



inline jule::Bool _1e30e6c5b_annotateConstraintMap(_1e30e6376_dynamicTypeAnnotation* _self_, jule::Ptr<_1e3134da9_TypeKind>& _37845_k) {
	jule::Bool _37861_ok = jule::Bool();
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e25183e2_MapTypeDecl>>()) {
			_case_begin_1e5aec8a2:;
			{
				jule::Ptr<_1e3140128_Map> _38121_m = _1e31388e6_Map(_37845_k.ptr());;
				jule::Ptr<_1e25183e2_MapTypeDecl> _38221_m2 = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1e25183e2_MapTypeDecl>();;
				(*_self_)._field_c=_38221_m2.get()._field_Key;
				if (_1e30e79c6_annotateConstraint(&(*_self_), _38121_m.get()._field_Key)) {
					_37861_ok = true;
					return _37861_ok;
				};
				(*_self_)._field_c=_38221_m2.get()._field_Val;
				_37861_ok = _1e30e79c6_annotateConstraint(&(*_self_), _38121_m.get()._field_Val);
				return _37861_ok;
			}
		}
		_match_end_1e5aec82a:;
	};
	_37861_ok = false;
	return _37861_ok;
}



inline jule::Bool _1e30e7069_annotateConstraintTup(_1e30e6376_dynamicTypeAnnotation* _self_, jule::Ptr<_1e3134da9_TypeKind>& _39345_k) {
	jule::Bool _39361_ok = jule::Bool();
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e2517226_TupleTypeDecl>>()) {
			_case_begin_1e5b003bb:;
			{
				jule::Ptr<_1e2517226_TupleTypeDecl> _39621_tup = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1e2517226_TupleTypeDecl>();;
				jule::Ptr<_1e313e600_Tuple> _39721_tup2 = _1e3138b5a_Tup(_39345_k.ptr());;
				{
					auto &expr = _39721_tup2.get()._field_Types;
					auto it = expr.begin();
					_iter_begin_1e5b01840:;
					if (it != expr.end()) {
						jule::Ptr<_1e3134da9_TypeKind> _39825_t2 = *it;
						{
							{
								auto &expr = _39621_tup.get()._field_Types;
								auto it = expr.begin();
								_iter_begin_1e5b0217b:;
								if (it != expr.end()) {
									jule::Ptr<_1e2515686_TypeDecl> _39929_t = *it;
									{
										(*_self_)._field_c=_39929_t;
										if (_1e30e79c6_annotateConstraint(&(*_self_), _39825_t2)) {
											_39361_ok = true;
											return _39361_ok;
										};
									}
									_iter_next_1e5b0217b:;
									++it;
									goto _iter_begin_1e5b0217b;
								}
								_iter_end_1e5b0217b:;
							};
						}
						_iter_next_1e5b01840:;
						++it;
						goto _iter_begin_1e5b01840;
					}
					_iter_end_1e5b01840:;
				};
			}
		}
		_match_end_1e5b00344:;
	};
	_39361_ok = false;
	return _39361_ok;
}



inline jule::Bool _1e30e7377_annotateConstraintFn(_1e30e6376_dynamicTypeAnnotation* _self_, jule::Ptr<_1e3134da9_TypeKind>& _41044_k) {
	jule::Bool _41060_ok = jule::Bool();
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e252749a_FnDecl>>()) {
			_case_begin_1e5b025dd:;
			{
				jule::Ptr<_1e252749a_FnDecl> _41321_pf = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1e252749a_FnDecl>();;
				jule::Ptr<_1e258dee5_FnIns> _41421_f = _1e31381a9_Fn(_41044_k.ptr());;
				{
					auto &expr = _41421_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1e5b04667:;
					if (it != expr.end()) {
						jule::I64 _41518_i = it - expr.begin();
						jule::Ptr<_1e258d126_ParamIns> _41525_fp = *it;
						{
							(*_self_)._field_c=_41321_pf.get()._field_Params[_41518_i].get()._field_Kind;
							if (_1e30e79c6_annotateConstraint(&(*_self_), _41525_fp.get()._field_Kind)) {
								_41060_ok = true;
								return _41060_ok;
							};
						}
						_iter_next_1e5b04667:;
						++it;
						_41518_i++;
						goto _iter_begin_1e5b04667;
					}
					_iter_end_1e5b04667:;
				};
				if ((_41321_pf.get()._field_Result != nullptr)) {
					(*_self_)._field_c=_41321_pf.get()._field_Result.get()._field_Kind;
					if (_1e30e79c6_annotateConstraint(&(*_self_), _41421_f.get()._field_Result)) {
						_41060_ok = true;
						return _41060_ok;
					};
				};
			}
		}
		_match_end_1e5b0208d:;
	};
	_41060_ok = false;
	return _41060_ok;
}



inline jule::Bool _1e30e76a7_annotateConstraintIdent(_1e30e6376_dynamicTypeAnnotation* _self_, jule::Ptr<_1e3134da9_TypeKind>& _43147_k) {
	jule::Ptr<_1e2515c4c_IdentTypeDecl> _43217_ident = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1e2515c4c_IdentTypeDecl>();;
	jule::Ptr<_1e253220d_StructIns> _43317_s = _1e313841d_Struct(_43147_k.ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_Decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1e5b0757c:;
		if (it != expr.end()) {
			jule::I64 _43413_i = it - expr.begin();
			jule::Ptr<_1e2522c6a_GenericDecl> _43416_g = *it;
			{
				if ((_43416_g.get()._field_Ident == _43217_ident.get()._field_Ident)) {
					jule::Ptr<_1e313367c_InsGeneric> _43625_fg = (*_self_)._field_f.get()._field_Generics[_43413_i];;
					if ((_43625_fg != nullptr)) {
						return false;
					};
					_1e30e7ce5_pushGeneric(&(*_self_), _43147_k,_43413_i);
					return true;
				};
				if ((_43317_s == nullptr)) {
					goto _iter_next_1e5b0757c;
				};
				jule::Ptr<_1e2515686_TypeDecl> _44621_c = (*_self_)._field_c;;
				{
					auto &expr = _43217_ident.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1e5b0a4d6:;
					if (it != expr.end()) {
						jule::Ptr<_1e2515686_TypeDecl> _44725_ig = *it;
						{
							(*_self_)._field_c=_44725_ig;
							{
								auto &expr = _43317_s.get()._field_Generics;
								auto it = expr.begin();
								_iter_begin_1e5b0b251:;
								if (it != expr.end()) {
									jule::Ptr<_1e313367c_InsGeneric> _44929_sg = *it;
									{
										if (_1e30e79c6_annotateConstraint(&(*_self_), _44929_sg.get()._field_Kind)) {
											return true;
										};
									}
									_iter_next_1e5b0b251:;
									++it;
									goto _iter_begin_1e5b0b251;
								}
								_iter_end_1e5b0b251:;
							};
						}
						_iter_next_1e5b0a4d6:;
						++it;
						goto _iter_begin_1e5b0a4d6;
					}
					_iter_end_1e5b0a4d6:;
				};
				(*_self_)._field_c=_44621_c;
			}
			_iter_next_1e5b0757c:;
			++it;
			_43413_i++;
			goto _iter_begin_1e5b0757c;
		}
		_iter_end_1e5b0757c:;
	};
	return false;
}



inline jule::Bool _1e30e79c6_annotateConstraint(_1e30e6376_dynamicTypeAnnotation* _self_, jule::Ptr<_1e3134da9_TypeKind>& _46042_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e2515c4c_IdentTypeDecl>>()) {
			_case_begin_1e5b0aa03:;
			{
				return _1e30e76a7_annotateConstraintIdent(&(*_self_), _46042_k);
			}
		}
		_match_end_1e5b0b790:;
	};
	{
		
		if ((_1e3137bd1_Arr(_46042_k.ptr()) != nullptr)) {
			_case_begin_1e5b0c296:;
			{
				return _1e5b0db8d_annotateConstraintElem(&(*_self_), _46042_k);
			}
		}
		else if ((_1e3137e45_Slc(_46042_k.ptr()) != nullptr)) {
			_case_begin_1e5b0c30c:;
			{
				return _1e5b0d2ca_annotateConstraintElem(&(*_self_), _46042_k);
			}
		}
		else if ((_1e3137494_Ptr(_46042_k.ptr()) != nullptr)) {
			_case_begin_1e5b0c373:;
			{
				return _1e5b10552_annotateConstraintElem(&(*_self_), _46042_k);
			}
		}
		else if ((_1e3137230_Sptr(_46042_k.ptr()) != nullptr)) {
			_case_begin_1e5b0cb48:;
			{
				return _1e5b16657_annotateConstraintElem(&(*_self_), _46042_k);
			}
		}
		else if ((_1e31388e6_Map(_46042_k.ptr()) != nullptr)) {
			_case_begin_1e5b0cbae:;
			{
				return _1e30e6c5b_annotateConstraintMap(&(*_self_), _46042_k);
			}
		}
		else if ((_1e31381a9_Fn(_46042_k.ptr()) != nullptr)) {
			_case_begin_1e5b0cc25:;
			{
				return _1e30e7377_annotateConstraintFn(&(*_self_), _46042_k);
			}
		}
		else if ((_1e3138b5a_Tup(_46042_k.ptr()) != nullptr)) {
			_case_begin_1e5b0cc8b:;
			{
				return _1e30e7069_annotateConstraintTup(&(*_self_), _46042_k);
			}
		}
		else {
			_case_begin_1e5b0ca9e:;
			{
				return false;
			}
		}
		_match_end_1e5b0ca49:;
	};
}



inline void _1e30e7ce5_pushGeneric(_1e30e6376_dynamicTypeAnnotation* _self_, jule::Ptr<_1e3134da9_TypeKind>& _48535_k, jule::I64 _48549_i) {
	(*_self_)._field_f.get()._field_Generics[_48549_i]=jule::new_ptr<_1e313367c_InsGeneric>(_1e313367c_InsGeneric{._field_Kind=_48535_k, });
	jule::Ptr<_1e2522c6a_GenericDecl> _48717_gd = (*_self_)._field_f.get()._field_Decl.get()._field_Generics[_48549_i];;
	if (((_48717_gd.get()._field_Constraint == nullptr) || (_48717_gd.get()._field_Constraint.get()._field_Mask.len() != 1LL))) {
		return;;
	};
	(*_self_)._field_c=_48717_gd.get()._field_Constraint.get()._field_Mask[0LL];
	_1e30e79c6_annotateConstraint(&(*_self_), _48535_k);
}



inline jule::Bool _1e30e8103_annotatePrim(_1e30e6376_dynamicTypeAnnotation* _self_, jule::Ptr<_1e3134da9_TypeKind>& _49543_k) {
	jule::Bool _49559_ok = jule::Bool();
	_49559_ok = _1e30e9e29_annotateAny(&(*_self_), _49543_k);
	return _49559_ok;
}



inline jule::Bool _1e30e8411_annotateArr(_1e30e6376_dynamicTypeAnnotation* _self_, jule::Ptr<_1e3134da9_TypeKind>& _49942_k) {
	jule::Bool _49958_ok = jule::Bool();
	jule::Ptr<_1e3140c1c_Arr> _50017_parr = _1e3137bd1_Arr((*((*_self_)._field_k)).ptr());;
	if ((_50017_parr == nullptr)) {
		_49958_ok = false;
		return _49958_ok;
	};
	jule::Ptr<_1e3140c1c_Arr> _50417_arr = _1e3137bd1_Arr(_49942_k.ptr());;
	(*_self_)._field_k=(&(_50017_parr.get()._field_Elem));
	_49958_ok = _1e30ea237_annotateKind(&(*_self_), _50417_arr.get()._field_Elem);
	return _49958_ok;
}



inline jule::Bool _1e30e871e_annotateSlc(_1e30e6376_dynamicTypeAnnotation* _self_, jule::Ptr<_1e3134da9_TypeKind>& _50942_k) {
	jule::Bool _50958_ok = jule::Bool();
	jule::Ptr<_1e313da72_Slc> _51017_pslc = _1e3137e45_Slc((*((*_self_)._field_k)).ptr());;
	if ((_51017_pslc == nullptr)) {
		_50958_ok = false;
		return _50958_ok;
	};
	jule::Ptr<_1e313da72_Slc> _51417_slc = _1e3137e45_Slc(_50942_k.ptr());;
	(*_self_)._field_k=(&(_51017_pslc.get()._field_Elem));
	_50958_ok = _1e30ea237_annotateKind(&(*_self_), _51417_slc.get()._field_Elem);
	return _50958_ok;
}



inline jule::Bool _1e30e8ac6_checkMapKey(_1e30e6376_dynamicTypeAnnotation* _self_, jule::Ptr<_1e3134da9_TypeKind>* _51941_k, jule::Ptr<_1e3134da9_TypeKind>& _51961_ck) {
	jule::Bool _51978_ok = jule::Bool();
	jule::Ptr<_1e3134da9_TypeKind>* _52017_old = (*_self_)._field_k;;
	(*_self_)._field_k=_51941_k;
	_51978_ok=_1e30ea237_annotateKind(&(*_self_), _51961_ck);
	(*_self_)._field_k=_52017_old;
	return _51978_ok;
}



inline jule::Bool _1e30e8dd4_annotateMap(_1e30e6376_dynamicTypeAnnotation* _self_, jule::Ptr<_1e3134da9_TypeKind>& _52742_k) {
	jule::Bool _52758_ok = jule::Bool();
	jule::Ptr<_1e3140128_Map> _52817_pmap = _1e31388e6_Map((*((*_self_)._field_k)).ptr());;
	if ((_52817_pmap == nullptr)) {
		_52758_ok = false;
		return _52758_ok;
	};
	jule::Ptr<_1e3140128_Map> _53217_m = _1e31388e6_Map(_52742_k.ptr());;
	_52758_ok = (_1e30e8ac6_checkMapKey(&(*_self_), (&(_52817_pmap.get()._field_Key)),_53217_m.get()._field_Key) && _1e30e8ac6_checkMapKey(&(*_self_), (&(_52817_pmap.get()._field_Val)),_53217_m.get()._field_Val));
	return _52758_ok;
}



inline jule::Bool _1e30e91e2_annotateFn(_1e30e6376_dynamicTypeAnnotation* _self_, jule::Ptr<_1e3134da9_TypeKind>& _53741_k) {
	jule::Bool _53757_ok = jule::Bool();
	jule::Ptr<_1e258dee5_FnIns> _53817_pf = _1e31381a9_Fn((*((*_self_)._field_k)).ptr());;
	if ((_53817_pf == nullptr)) {
		_53757_ok = false;
		return _53757_ok;
	};
	jule::Ptr<_1e258dee5_FnIns> _54217_f = _1e31381a9_Fn(_53741_k.ptr());;
	{
		
		if ((_53817_pf.get()._field_Params.len() != _54217_f.get()._field_Params.len())) {
			_case_begin_1e5b2a33b:;
			{
				_53757_ok = false;
				return _53757_ok;
			}
		}
		else if ((_1e258b7a6_IsVoid(_53817_pf.get()._field_Decl.ptr()) != _1e258b7a6_IsVoid(_54217_f.get()._field_Decl.ptr()))) {
			_case_begin_1e5b2a3b3:;
			{
				_53757_ok = false;
				return _53757_ok;
			}
		}
		_match_end_1e5b2a2b4:;
	};
	_53757_ok=true;
	jule::Ptr<_1e3134da9_TypeKind>* _55117_old = (*_self_)._field_k;;
	{
		auto &expr = _54217_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1e5b2bc99:;
		if (it != expr.end()) {
			jule::I64 _55214_i = it - expr.begin();
			jule::Ptr<_1e258d126_ParamIns> _55221_fp = *it;
			{
				(*_self_)._field_k=(&(_53817_pf.get()._field_Params[_55214_i].get()._field_Kind));
				_53757_ok=(_1e30ea237_annotateKind(&(*_self_), _55221_fp.get()._field_Kind) && _53757_ok);
			}
			_iter_next_1e5b2bc99:;
			++it;
			_55214_i++;
			goto _iter_begin_1e5b2bc99;
		}
		_iter_end_1e5b2bc99:;
	};
	if ((!(_1e258b7a6_IsVoid(_53817_pf.get()._field_Decl.ptr())))) {
		(*_self_)._field_k=(&(_53817_pf.get()._field_Result));
		_53757_ok=(_1e30ea237_annotateKind(&(*_self_), _54217_f.get()._field_Result) && _53757_ok);
	};
	(*_self_)._field_k=_55117_old;
	return _53757_ok;
}



inline jule::Bool _1e30e9500_annotatePtr(_1e30e6376_dynamicTypeAnnotation* _self_, jule::Ptr<_1e3134da9_TypeKind>& _56642_k) {
	jule::Bool _56658_ok = jule::Bool();
	jule::Ptr<_1e3141679_Ptr> _56717_pptr = _1e3137494_Ptr((*((*_self_)._field_k)).ptr());;
	if ((_56717_pptr == nullptr)) {
		_56658_ok = false;
		return _56658_ok;
	};
	jule::Ptr<_1e3141679_Ptr> _57117_ptr = _1e3137494_Ptr(_56642_k.ptr());;
	(*_self_)._field_k=(&(_56717_pptr.get()._field_Elem));
	_56658_ok = _1e30ea237_annotateKind(&(*_self_), _57117_ptr.get()._field_Elem);
	return _56658_ok;
}



inline jule::Bool _1e30e980d_annotateSptr(_1e30e6376_dynamicTypeAnnotation* _self_, jule::Ptr<_1e3134da9_TypeKind>& _57643_k) {
	jule::Bool _57659_ok = jule::Bool();
	jule::Ptr<_1e313d115_Sptr> _57717_ssptr = _1e3137230_Sptr((*((*_self_)._field_k)).ptr());;
	if ((_57717_ssptr == nullptr)) {
		_57659_ok = false;
		return _57659_ok;
	};
	jule::Ptr<_1e313d115_Sptr> _58117_sptr = _1e3137230_Sptr(_57643_k.ptr());;
	(*_self_)._field_k=(&(_57717_ssptr.get()._field_Elem));
	_57659_ok = _1e30ea237_annotateKind(&(*_self_), _58117_sptr.get()._field_Elem);
	return _57659_ok;
}



inline jule::Bool _1e30e9b1b_annotateStruct(_1e30e6376_dynamicTypeAnnotation* _self_, jule::Ptr<_1e3134da9_TypeKind>& _58645_k) {
	jule::Bool _58661_ok = jule::Bool();
	jule::Ptr<_1e253220d_StructIns> _58717_s = _1e313841d_Struct((*((*_self_)._field_k)).ptr());;
	if ((_58717_s == nullptr)) {
		_58661_ok = false;
		return _58661_ok;
	};
	jule::Ptr<_1e253220d_StructIns> _59117_s2 = _1e313841d_Struct(_58645_k.ptr());;
	if ((_58717_s.get()._field_Generics.len() != _59117_s2.get()._field_Generics.len())) {
		_58661_ok = false;
		return _58661_ok;
	};
	{
		auto &expr = _58717_s.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1e5b356ba:;
		if (it != expr.end()) {
			jule::I64 _59514_i = it - expr.begin();
			jule::Ptr<_1e313367c_InsGeneric> _59521_g = *it;
			{
				jule::Ptr<_1e313367c_InsGeneric> _59621_g2 = _59117_s2.get()._field_Generics[_59514_i];;
				if (_1e31355b3_Equals(_59521_g.get()._field_Kind, _59621_g2.get()._field_Kind)) {
					goto _iter_next_1e5b356ba;
				};
				(*_self_)._field_k=(&(_59521_g.get()._field_Kind));
				if ((!(_1e30ea237_annotateKind(&(*_self_), _59621_g2.get()._field_Kind)))) {
					_58661_ok = false;
					return _58661_ok;
				};
			}
			_iter_next_1e5b356ba:;
			++it;
			_59514_i++;
			goto _iter_begin_1e5b356ba;
		}
		_iter_end_1e5b356ba:;
	};
	_58661_ok = true;
	return _58661_ok;
}



inline jule::Bool _1e30e9e29_annotateAny(_1e30e6376_dynamicTypeAnnotation* _self_, jule::Ptr<_1e3134da9_TypeKind>& _60842_k) {
	jule::Bool _60858_ok = jule::Bool();
	jule::Str _60913_kind = _1e31352a5_Str((*((*_self_)._field_k)).ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_Decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1e5b38624:;
		if (it != expr.end()) {
			jule::I64 _61013_i = it - expr.begin();
			jule::Ptr<_1e2522c6a_GenericDecl> _61016_g = *it;
			{
				if ((_60913_kind != _61016_g.get()._field_Ident)) {
					goto _iter_next_1e5b38624;
				};
				jule::Ptr<_1e313367c_InsGeneric> _61417_t = (*_self_)._field_f.get()._field_Generics[_61013_i];;
				{
					
					if ((_61417_t == nullptr) || (_61417_t.get()._field_Kind == nullptr)) {
						_case_begin_1e5b3a208:;
						{
							_1e30e7ce5_pushGeneric(&(*_self_), _60842_k,_61013_i);
						}
					}
					else if ((!(_1e31355b3_Equals(_61417_t.get()._field_Kind, _60842_k)))) {
						_case_begin_1e5b3a280:;
						{
							_60858_ok = false;
							return _60858_ok;
						}
					}
					_match_end_1e5b3a0b5:;
				};
				(*((*_self_)._field_k)).get()._field_Kind=_60842_k.get()._field_Kind;
				_60858_ok = true;
				return _60858_ok;
			}
			_iter_next_1e5b38624:;
			++it;
			_61013_i++;
			goto _iter_begin_1e5b38624;
		}
		_iter_end_1e5b38624:;
	};
	_60858_ok = false;
	return _60858_ok;
}



inline jule::Bool _1e30ea237_annotateKind(_1e30e6376_dynamicTypeAnnotation* _self_, jule::Ptr<_1e3134da9_TypeKind>& _63043_k) {
	jule::Bool _63059_ok = jule::Bool();
	if ((((*_self_)._field_k == nullptr) || ((*((*_self_)._field_k)) == nullptr))) {
		return _63059_ok;
	};
	{
		
		if (_1e30e9e29_annotateAny(&(*_self_), _63043_k)) {
			_case_begin_1e5b3d294:;
			{
				_63059_ok = true;
				return _63059_ok;
			}
		}
		else if ((_1e3136ebb_Prim(_63043_k.ptr()) != nullptr)) {
			_case_begin_1e5b3d30a:;
			{
				_63059_ok = _1e30e8103_annotatePrim(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_1e3137bd1_Arr(_63043_k.ptr()) != nullptr)) {
			_case_begin_1e5b3cea8:;
			{
				_63059_ok = _1e30e8411_annotateArr(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_1e3137e45_Slc(_63043_k.ptr()) != nullptr)) {
			_case_begin_1e5b3d01e:;
			{
				_63059_ok = _1e30e871e_annotateSlc(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_1e31388e6_Map(_63043_k.ptr()) != nullptr)) {
			_case_begin_1e5b3d085:;
			{
				_63059_ok = _1e30e8dd4_annotateMap(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_1e31381a9_Fn(_63043_k.ptr()) != nullptr)) {
			_case_begin_1e5b3caac:;
			{
				_63059_ok = _1e30e91e2_annotateFn(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_1e3137494_Ptr(_63043_k.ptr()) != nullptr)) {
			_case_begin_1e5b3cb23:;
			{
				_63059_ok = _1e30e9500_annotatePtr(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_1e3137230_Sptr(_63043_k.ptr()) != nullptr)) {
			_case_begin_1e5b3cb89:;
			{
				_63059_ok = _1e30e980d_annotateSptr(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_1e313841d_Struct(_63043_k.ptr()) != nullptr)) {
			_case_begin_1e5b3cc00:;
			{
				_63059_ok = _1e30e9b1b_annotateStruct(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else {
			_case_begin_1e5b3ca46:;
			{
				_63059_ok = false;
				return _63059_ok;
			}
		}
		_match_end_1e5b3c9e1:;
	};
}



inline jule::Bool _1e30ea49b_annotate(_1e30e6376_dynamicTypeAnnotation* _self_) {
	jule::Bool _65836_ok = jule::Bool();
	(*_self_)._field_k=(&((*_self_)._field_p.get()._field_Kind));
	_65836_ok = _1e30ea237_annotateKind(&(*_self_), (*_self_)._field_a.get()._field_Kind);
	return _65836_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1e30e6376_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c;
	_Stream << "}";
	return _Stream;
}



inline void _1e30eb1c2_pushErrToken(_1e30eab72_fnCallArgChecker* _self_, jule::Ptr<_1d42b43cc_Token> _67431_token, jule::Str _67446_fmt, jule::Slice<jule::Any> _67459_args) {
	_1e321142a_pushErr((*_self_)._field_e.get()._field_s.ptr(), _67431_token,_67446_fmt,jule::Any(_67459_args));
}



inline void _1e30eb4e1_pushErr(_1e30eab72_fnCallArgChecker* _self_, jule::Str _67826_fmt, jule::Slice<jule::Any> _67839_args) {
	_1e30eb1c2_pushErrToken(&(*_self_), (*_self_)._field_errorToken,_67826_fmt,jule::Any(_67839_args));
}



inline jule::Slice<jule::Ptr<_1e258d126_ParamIns>> _1e30eb755_getParams(_1e30eab72_fnCallArgChecker* _self_) {
	if (((((*_self_)._field_f.get()._field_Params.len() > 0LL) && ((*_self_)._field_f.get()._field_Params[0LL].get()._field_Decl != nullptr)) && _1e258a134_IsSelf((*_self_)._field_f.get()._field_Params[0LL].get()._field_Decl.ptr()))) {
		return (*_self_)._field_f.get()._field_Params.slice(1LL);
	};
	return (*_self_)._field_f.get()._field_Params;
}



inline jule::Bool _1e30eba63_checkCounts(_1e30eab72_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1e258d126_ParamIns>>& _69131_params) {
	jule::Bool _69154_ok = jule::Bool();
	jule::I64 _69217_n = _69131_params.len();;
	if (((_69217_n > 0LL) && _1e258a134_IsSelf(_69131_params[0LL].get()._field_Decl.ptr()))) {
		(_69217_n)--;
	};
	jule::I64 _69717_diff = (_69217_n - (*_self_)._field_args.len());;
	{
		
		if ((_69717_diff == 0LL)) {
			_case_begin_1e5b49844:;
			{
				_69154_ok = true;
				return _69154_ok;
			}
		}
		else if (((_69217_n > 0LL) && _69131_params[(_69217_n - 1LL)].get()._field_Decl.get()._field_Variadic)) {
			_case_begin_1e5b498aa:;
			{
				_69154_ok = true;
				return _69154_ok;
			}
		}
		else if (((_69717_diff < 0LL) || (_69717_diff > _69131_params.len()))) {
			_case_begin_1e5b49921:;
			{
				_1e30eb4e1_pushErr(&(*_self_), jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				_69154_ok = false;
				return _69154_ok;
			}
		}
		_match_end_1e5b4979a:;
	};
	jule::Str _70817_idents = jule::Str();;
	for (; (_69717_diff > 0LL); (_69717_diff)--) {
		{
			_70817_idents+=(jule::Str(", ", 2) + _69131_params[(_69217_n - _69717_diff)].get()._field_Decl.get()._field_Ident);
		}
	_iter_next_1e5b4b9bc:;
	}
	_iter_end_1e5b4b9bc:;;
	(_70817_idents).mut_slice(2LL);;
	_1e30eb4e1_pushErr(&(*_self_), jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_70817_idents)}));
	_69154_ok = false;
	return _69154_ok;
}



inline jule::Bool _1e30ebeb4_checkArg(_1e30eab72_fnCallArgChecker* _self_, jule::Ptr<_1e258d126_ParamIns>& _71832_p, jule::Ptr<_1e310908c_Data>& _71851_arg, jule::Ptr<_1d42b43cc_Token>& _71868_errorToken) {
	jule::Bool _71890_ok = jule::Bool();
	if (((*_self_)._field_dynamicAnnotation && _1e2591107_parameterUsesGenerics(_71832_p.get()._field_Decl,(*_self_)._field_f.get()._field_Decl.get()._field_Generics))) {
		_71890_ok=(!(_71832_p.get()._field_Decl.get()._field_Variadic));
		if (_71890_ok) {
			_1e30e6376_dynamicTypeAnnotation _72225_dta = _1e30e6376_dynamicTypeAnnotation{._field_e=(*_self_)._field_e, ._field_f=(*_self_)._field_f, ._field_p=_71832_p, ._field_a=_71851_arg, ._field_errorToken=_71868_errorToken, };;
			_71890_ok=_1e30ea49b_annotate(&_72225_dta);
		};
		if ((!(_71890_ok))) {
			_1e30eb1c2_pushErrToken(&(*_self_), _71868_errorToken,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
			_71890_ok = false;
			return _71890_ok;
		};
	};
	if (_1e3219bc5_checkValidityForInitExpr((*_self_)._field_e.get()._field_s, _71832_p.get()._field_Decl.get()._field_Mutable,_71832_p.get()._field_Decl.get()._field_Reference,_71832_p.get()._field_Kind,_71851_arg,_71868_errorToken)) {
		_1e3216e8b_checkAssignType((*_self_)._field_e.get()._field_s, _71832_p.get()._field_Decl.get()._field_Reference,_71832_p.get()._field_Kind,_71851_arg,_71868_errorToken);
	};
	_71890_ok = true;
	return _71890_ok;
}



inline jule::Bool _1e30ec36b_push(_1e30eab72_fnCallArgChecker* _self_, jule::Ptr<_1e258d126_ParamIns>& _74528_p, jule::Ptr<_1e2519ba7_Expr> _74546_arg) {
	jule::Bool _74560_ok = jule::Bool();
	jule::Ptr<_1e3134da9_TypeKind> _74617_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _74713_old_immut = (*_self_)._field_e.get()._field_immutable;;
	jule::Ptr<_1e310908c_Data> _74817_d = nullptr;;
	(*_self_)._field_e.get()._field_immutable=(!(_74528_p.get()._field_Decl.get()._field_Mutable));
	if (((!((*_self_)._field_dynamicAnnotation)) && (!(_74528_p.get()._field_Decl.get()._field_Variadic)))) {
		(*_self_)._field_e.get()._field_prefix=_74528_p.get()._field_Kind;
	} else {
		(*_self_)._field_e.get()._field_prefix=nullptr;
	};
	_74817_d=_1e3126032_evalExprKind((*_self_)._field_e, _74546_arg.get()._field_Kind);
	(*_self_)._field_e.get()._field_prefix=_74617_old;
	(*_self_)._field_e.get()._field_immutable=_74713_old_immut;
	if ((_74817_d == nullptr)) {
		_74560_ok = false;
		return _74560_ok;
	};
	_74560_ok=_1e30ebeb4_checkArg(&(*_self_), _74528_p,_74817_d,_74546_arg.get()._field_Token);
	(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(_74817_d.get()._field_Model);;
	return _74560_ok;
}



inline jule::Bool _1e30ec723_pushVariadic(_1e30eab72_fnCallArgChecker* _self_, jule::Ptr<_1e258d126_ParamIns>& _77036_p, jule::I64 _77054_i) {
	jule::Bool _77064_ok = jule::Bool();
	_77064_ok=true;
	jule::Bool _77217_variadiced = false;;
	jule::Bool _77313_more = ((_77054_i + 1LL) < (*_self_)._field_args.len());;
	jule::Ptr<_1e2584cdd_SliceExprModel> _77417_model = jule::new_ptr<_1e2584cdd_SliceExprModel>(_1e2584cdd_SliceExprModel{._field_ElemKind=_77036_p.get()._field_Kind, });;
	jule::Ptr<_1e3134da9_TypeKind> _77817_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _78313_variadic = _77036_p.get()._field_Kind.get()._field_Variadic;;
	_77036_p.get()._field_Kind.get()._field_Variadic=false;
	__JULE_DEFER({
		_77036_p.get()._field_Kind.get()._field_Variadic=_78313_variadic;
	});;
	for (; (_77054_i < (*_self_)._field_args.len()); (_77054_i)++) {
		{
			jule::Ptr<_1e2519ba7_Expr> _79021_arg = (*_self_)._field_args[_77054_i];;
			{
				auto &_match_expr{ _79021_arg.get()._field_Kind };
				
				if (_match_expr.type_is<jule::Ptr<_1e251c7d1_VariadicExpr>>()) {
					_case_begin_1e5b5a14b:;
					{
						(*_self_)._field_e.get()._field_prefix=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(jule::new_ptr<_1e313da72_Slc>(_1e313da72_Slc{._field_Elem=_77036_p.get()._field_Kind}), 8)});
					}
				}
				else {
					_case_begin_1e5b5aa64:;
					{
						(*_self_)._field_e.get()._field_prefix=_77036_p.get()._field_Kind;
					}
				}
				_match_end_1e5b5aa0e:;
			};
			jule::Ptr<_1e310908c_Data> _80321_d = _1e3126340_eval((*_self_)._field_e, _79021_arg);;
			if ((_80321_d == nullptr)) {
				_77064_ok=false;
				goto _iter_next_1e5b59634;
			};
			if (_80321_d.get()._field_Kind.get()._field_Variadic) {
				_77217_variadiced=true;
				_77036_p.get()._field_Kind.get()._field_Variadic=true;
				_77064_ok=(_77064_ok && _1e30ebeb4_checkArg(&(*_self_), _77036_p,_80321_d,_79021_arg.get()._field_Token));
				{
					auto &_match_expr{ _80321_d.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_1e2584cdd_SliceExprModel>>()) {
						_case_begin_1e5b5cc86:;
						{
							_77417_model=_80321_d.get()._field_Model.operator jule::Ptr<_1e2584cdd_SliceExprModel>();
							_77417_model.get()._field_ElemKind=_77036_p.get()._field_Kind;
						}
					}
					else {
						_case_begin_1e5b5dacd:;
						{
							_77417_model=nullptr;
							(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(_80321_d.get()._field_Model);;
						}
					}
					_match_end_1e5b5d869:;
				};
				(_77054_i)++;
				goto _iter_end_1e5b59634;
			};
			_77064_ok=(_77064_ok && _1e30ebeb4_checkArg(&(*_self_), _77036_p,_80321_d,_79021_arg.get()._field_Token));
			_77417_model.get()._field_Elems = jule::alloc_for_append(_77417_model.get()._field_Elems,1);_77417_model.get()._field_Elems.__push(_80321_d.get()._field_Model);;
		}
	_iter_next_1e5b59634:;
	}
	_iter_end_1e5b59634:;;
	(*_self_)._field_e.get()._field_prefix=_77817_old;
	if ((_77217_variadiced && _77313_more)) {
		_1e30eb1c2_pushErrToken(&(*_self_), (*_self_)._field_args[_77054_i].get()._field_Token,jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>());
	};
	if ((_77417_model != nullptr)) {
		(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(static_cast<jule::Any>(_77417_model));;
	};
	return _77064_ok;
}



inline jule::Bool _1e30eca31_checkArgs(_1e30eab72_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1e258d126_ParamIns>>& _84633_params) {
	jule::Bool _84656_ok = jule::Bool();
	jule::Bool _84713_arg = (*_self_)._field_e.get()._field_arg;;
	(*_self_)._field_e.get()._field_arg=true;
	_84656_ok=true;
	jule::I64 _85117_i = 0LL;;
	if (((_84633_params.len() > 0LL) && _1e258a134_IsSelf(_84633_params[0LL].get()._field_Decl.ptr()))) {
		(_85117_i)++;
	};
	_julec_label_iter:;
	while ((_85117_i < _84633_params.len())) {
		{
			jule::Ptr<_1e258d126_ParamIns> _85821_p = _84633_params[_85117_i];;
			{
				
				if (_85821_p.get()._field_Decl.get()._field_Variadic) {
					_case_begin_1e5b65893:;
					{
						_84656_ok=(_1e30ec723_pushVariadic(&(*_self_), _85821_p,_85117_i) && _84656_ok);
						goto _iter_end_1e5b636c6;
					}
				}
				else if (((*_self_)._field_args.len() <= _85117_i)) {
					_case_begin_1e5b651cd:;
					{
						_84656_ok=false;
						goto _iter_end_1e5b636c6;
					}
				}
				else {
					_case_begin_1e5b64d26:;
					{
						_84656_ok=(_1e30ec36b_push(&(*_self_), _85821_p,(*_self_)._field_args[_85117_i]) && _84656_ok);
					}
				}
				_match_end_1e5b64cb0:;
			};
			(_85117_i)++;
		}
	_iter_next_1e5b636c6:;
	}
	_iter_end_1e5b636c6:;;
	(*_self_)._field_e.get()._field_arg=_84713_arg;
	return _84656_ok;
}



inline jule::Bool _1e30eccb7_checkDynamicTypeAnnotation(_1e30eab72_fnCallArgChecker* _self_) {
	jule::Bool _87747_ok = jule::Bool();
	{
		auto &expr = (*_self_)._field_f.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1e5b67213:;
		if (it != expr.end()) {
			jule::Ptr<_1e313367c_InsGeneric> _87816_g = *it;
			{
				if ((_87816_g == nullptr)) {
					_1e30eb4e1_pushErr(&(*_self_), jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
					_87747_ok = false;
					return _87747_ok;
				};
			}
			_iter_next_1e5b67213:;
			++it;
			goto _iter_begin_1e5b67213;
		}
		_iter_end_1e5b67213:;
	};
	_87747_ok = true;
	return _87747_ok;
}



inline jule::Bool _1e30ed03c_check(_1e30eab72_fnCallArgChecker* _self_) {
	jule::Bool _88726_ok = jule::Bool();
	jule::Slice<jule::Ptr<_1e258d126_ParamIns>> _88817_params = _1e30eb755_getParams(&(*_self_));;
	_88726_ok=_1e30eba63_checkCounts(&(*_self_), _88817_params);
	if ((!(_88726_ok))) {
		_88726_ok = false;
		return _88726_ok;
	};
	_88726_ok=_1e30eca31_checkArgs(&(*_self_), _88817_params);
	if ((_88726_ok && (*_self_)._field_dynamicAnnotation)) {
		_88726_ok=_1e30eccb7_checkDynamicTypeAnnotation(&(*_self_));
	};
	return _88726_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1e30eab72_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels;
	_Stream << "}";
	return _Stream;
}



inline void _1e30eda87_pushErr(_1e30ed57b_structLitChecker* _self_, jule::Ptr<_1d42b43cc_Token> _90926_token, jule::Str _90941_fmt, jule::Slice<jule::Any> _90954_args) {
	_1e310b116_pushErr((*_self_)._field_e.ptr(), _90926_token,_90941_fmt,jule::Any(_90954_args));
}



inline void _1e30edda6_pushSugggestion(_1e30ed57b_structLitChecker* _self_, jule::Str _91434_fmt, jule::Slice<jule::Any> _91447_args) {
	_1e310b435_pushSugggestion((*_self_)._field_e.ptr(), _91434_fmt,jule::Any(_91447_args));
}



inline void _1e30ee26e_pushMatch(_1e30ed57b_structLitChecker* _self_, jule::Ptr<_1e250d4d6_FieldIns>& _91833_f, jule::Ptr<_1e310908c_Data>& _91852_d, jule::Ptr<_1d42b43cc_Token>& _91867_errorToken) {
	;
	if (_1e3219bc5_checkValidityForInitExpr((*_self_)._field_e.get()._field_s, (!((*_self_)._field_e.get()._field_immutable)),false,_91833_f.get()._field_Kind,_91852_d,_91867_errorToken)) {
		_1e3216e8b_checkAssignType((*_self_)._field_e.get()._field_s, false,_91833_f.get()._field_Kind,_91852_d,_91867_errorToken);
	};
	(*_self_)._field_args = jule::alloc_for_append((*_self_)._field_args,1);(*_self_)._field_args.__push(jule::new_ptr<_1e258434d_StructArgExprModel>(_1e258434d_StructArgExprModel{._field_Field=_91833_f, ._field_Expr=_91852_d.get()._field_Model}));;
}



inline void _1e30ee58d_checkPair(_1e30ed57b_structLitChecker* _self_, jule::Ptr<_1e251e904_FieldExprPair>& _93133_pair, jule::Slice<jule::Ptr<_1e2519ba7_Expr>>& _93160_exprs) {
	jule::Ptr<_1e250d4d6_FieldIns> _93317_f = _1e250ed56_FindField((*_self_)._field_s.ptr(), _93133_pair.get()._field_Field.get()._field_Kind);;
	if ((_93317_f == nullptr)) {
		_1e30eda87_pushErr(&(*_self_), _93133_pair.get()._field_Field,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_93133_pair.get()._field_Field.get()._field_Kind)}));
		return;;
	};
	if ((!(_1e3211b01_isAccessibleDefine((*_self_)._field_e.get()._field_s.ptr(), _93317_f.get()._field_Decl.get()._field_Public,_93317_f.get()._field_Decl.get()._field_Token)))) {
		_1e30eda87_pushErr(&(*_self_), _93133_pair.get()._field_Field,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_93133_pair.get()._field_Field.get()._field_Kind)}));
		_1e30edda6_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	_julec_label_dup_lookup:;
	{
		auto &expr = _93160_exprs;
		auto it = expr.begin();
		_iter_begin_1e5b77124:;
		if (it != expr.end()) {
			jule::Ptr<_1e2519ba7_Expr> _94521_expr = *it;
			{
				{
					auto &_match_expr{ _94521_expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_1e251e904_FieldExprPair>>()) {
						_case_begin_1e5b779d7:;
						{
							jule::Ptr<_1e251e904_FieldExprPair> _94825_dpair = _94521_expr.get()._field_Kind.operator jule::Ptr<_1e251e904_FieldExprPair>();;
							{
								
								if ((_93133_pair == _94825_dpair)) {
									_case_begin_1e5b789a5:;
									{
										goto _iter_end_1e5b77124;
									}
								}
								else if ((_93133_pair.get()._field_Field.get()._field_Kind == _94825_dpair.get()._field_Field.get()._field_Kind)) {
									_case_begin_1e5b78a2c:;
									{
										_1e30eda87_pushErr(&(*_self_), _93133_pair.get()._field_Field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>::make({jule::Any(_93133_pair.get()._field_Field.get()._field_Kind)}));
										goto _iter_end_1e5b77124;
									}
								}
								_match_end_1e5b788ea:;
							};
						}
					}
					_match_end_1e5b7782d:;
				};
			}
			_iter_next_1e5b77124:;
			++it;
			goto _iter_begin_1e5b77124;
		}
		_iter_end_1e5b77124:;
	};
	jule::Ptr<_1e3134da9_TypeKind> _95917_prefix = (*_self_)._field_e.get()._field_prefix;;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_95917_prefix;
	});;
	(*_self_)._field_e.get()._field_prefix=_93317_f.get()._field_Kind;
	jule::Ptr<_1e310908c_Data> _96317_d = _1e3126032_evalExprKind((*_self_)._field_e, _93133_pair.get()._field_Expr.get()._field_Kind);;
	if ((_96317_d == nullptr)) {
		return;;
	};
	_1e30ee26e_pushMatch(&(*_self_), _93317_f,_96317_d,_93133_pair.get()._field_Field);
}



inline jule::Bool _1e30ee89b_readyExprs(_1e30ed57b_structLitChecker* _self_, jule::Slice<jule::Ptr<_1e2519ba7_Expr>>& _97034_exprs) {
	jule::Bool _97117_ok = true;;
	{
		auto &expr = _97034_exprs;
		auto it = expr.begin();
		_iter_begin_1e5b7c4e2:;
		if (it != expr.end()) {
			jule::I64 _97214_i = it - expr.begin();
			jule::Ptr<_1e2519ba7_Expr> _97221_expr = *it;
			{
				{
					auto &_match_expr{ _97221_expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_1e25210dc_KeyValPair>>()) {
						_case_begin_1e5b7d24b:;
						{
							jule::Ptr<_1e25210dc_KeyValPair> _97525_pair = _97221_expr.get()._field_Kind.operator jule::Ptr<_1e25210dc_KeyValPair>();;
							{
								auto &_match_expr{ _97525_pair.get()._field_Key.get()._field_Kind };
								
								if (_match_expr.type_is<jule::Ptr<_1e251bc20_IdentExpr>>()) {
									_case_begin_1e5b7daba:;
									{
										goto _match_end_1e5b7e04e;
									}
								}
								else {
									_case_begin_1e5b7e2c4:;
									{
										_1e30eda87_pushErr(&(*_self_), _97525_pair.get()._field_Colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
										_97117_ok=false;
										goto _iter_next_1e5b7c4e2;
									}
								}
								_match_end_1e5b7e04e:;
							};
							_97034_exprs[_97214_i].get()._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1e251e904_FieldExprPair>(_1e251e904_FieldExprPair{._field_Field=_97525_pair.get()._field_Key.get()._field_Token, ._field_Expr=_97525_pair.get()._field_Val}));
						}
					}
					_match_end_1e5b7d092:;
				};
			}
			_iter_next_1e5b7c4e2:;
			++it;
			_97214_i++;
			goto _iter_begin_1e5b7c4e2;
		}
		_iter_end_1e5b7c4e2:;
	};
	return _97117_ok;
}



inline void _1e30eeb21_check(_1e30ed57b_structLitChecker* _self_, jule::Slice<jule::Ptr<_1e2519ba7_Expr>>& _99429_exprs) {
	if ((_99429_exprs.len() == 0LL)) {
		return;;
	};
	if ((!(_1e30ee89b_readyExprs(&(*_self_), _99429_exprs)))) {
		return;;
	};
	jule::Bool _100117_paired = false;;
	{
		auto &expr = _99429_exprs;
		auto it = expr.begin();
		_iter_begin_1e5b7c37c:;
		if (it != expr.end()) {
			jule::I64 _100214_i = it - expr.begin();
			jule::Ptr<_1e2519ba7_Expr> _100221_expr = *it;
			{
				{
					auto &_match_expr{ _100221_expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_1e251e904_FieldExprPair>>()) {
						_case_begin_1e5b87673:;
						{
							jule::Ptr<_1e251e904_FieldExprPair> _100525_pair = _100221_expr.get()._field_Kind.operator jule::Ptr<_1e251e904_FieldExprPair>();;
							if (((_100214_i > 0LL) && (!(_100117_paired)))) {
								_1e30eda87_pushErr(&(*_self_), _100525_pair.get()._field_Field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							};
							_100117_paired=true;
							_1e30ee58d_checkPair(&(*_self_), _100525_pair,_99429_exprs);
						}
					}
					else {
						_case_begin_1e5b8255d:;
						{
							if (_100117_paired) {
								_1e30eda87_pushErr(&(*_self_), _100221_expr.get()._field_Token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>());
							};
							if ((_100214_i >= (*_self_)._field_s.get()._field_Fields.len())) {
								_1e30eda87_pushErr(&(*_self_), _100221_expr.get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
								goto _iter_next_1e5b7c37c;
							};
							jule::Ptr<_1e250d4d6_FieldIns> _102025_field = (*_self_)._field_s.get()._field_Fields[_100214_i];;
							if ((!(_1e3211b01_isAccessibleDefine((*_self_)._field_e.get()._field_s.ptr(), _102025_field.get()._field_Decl.get()._field_Public,_102025_field.get()._field_Decl.get()._field_Token)))) {
								_1e30eda87_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("structure cannot instantiating because it has non-public fields", 63),jule::Slice<jule::Any>());
								_1e30edda6_pushSugggestion(&(*_self_), jule::Str("use field:expression pairs to instantiate", 41),jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1e3134da9_TypeKind> _102825_prefix = (*_self_)._field_e.get()._field_prefix;;
							__JULE_DEFER({
								(*_self_)._field_e.get()._field_prefix=_102825_prefix;
							});;
							(*_self_)._field_e.get()._field_prefix=_102025_field.get()._field_Kind;
							jule::Ptr<_1e310908c_Data> _103225_d = _1e3126032_evalExprKind((*_self_)._field_e, _100221_expr.get()._field_Kind);;
							if ((_103225_d == nullptr)) {
								goto _iter_next_1e5b7c37c;
							};
							_1e30ee26e_pushMatch(&(*_self_), _102025_field,_103225_d,_100221_expr.get()._field_Token);
						}
					}
					_match_end_1e5b823d7:;
				};
			}
			_iter_next_1e5b7c37c:;
			++it;
			_100214_i++;
			goto _iter_begin_1e5b7c37c;
		}
		_iter_end_1e5b7c37c:;
	};
	if ((!(_100117_paired))) {
		jule::I64 _104317_n = (*_self_)._field_s.get()._field_Fields.len();;
		jule::I64 _104421_diff = (_104317_n - _99429_exprs.len());;
		{
			
			if ((_104421_diff <= 0LL)) {
				_case_begin_1e5b8a05a:;
				{
					return;;
				}
			}
			_match_end_1e5b89e06:;
		};
		jule::Str _105021_idents = jule::Str();;
		for (; (_104421_diff > 0LL); (_104421_diff)--) {
			{
				_105021_idents+=(jule::Str(", ", 2) + (*_self_)._field_s.get()._field_Fields[(_104317_n - _104421_diff)].get()._field_Decl.get()._field_Ident);
			}
		_iter_next_1e5b8a9a6:;
		}
		_iter_end_1e5b8a9a6:;;
		(_105021_idents).mut_slice(2LL);;
		_1e30eda87_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_105021_idents)}));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e30ed57b_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e322a147_Var> _1e3100605_buildVar(_1e3100160_rangeChecker* _self_, jule::Ptr<_1e2528479_VarDecl>& _106928_decl) {
	jule::Ptr<_1e322a147_Var> _107017_v = _1e2596bce_buildVar(_106928_decl);;
	return _107017_v;
}



inline void _1e31007d1_setSizeKey(_1e3100160_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyA == nullptr) || _1d42b6b71_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	(*_self_)._field_Kind.get()._field_KeyA=_1e3100605_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyA);
	(*_self_)._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_1e3139012_TypeSymbol>(_1e3139012_TypeSymbol{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("int", 3)), 6)})});
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1e322a147_Var>>()) {
			_case_begin_1e5b8e69c:;
			{
				(*_self_)._field_Kind.get()._field_KeyA.get()._field_IterRelation=jule::new_ptr<_1e32291ce_IterRelation>(_1e32291ce_IterRelation{._field_Range=(*_self_)._field_d.get()._field_Model.operator jule::Ptr<_1e322a147_Var>()});
			}
		}
		_match_end_1e5b8e5e2:;
	};
}



inline void _1e3100b99_checkRangeExprValidity(_1e3100160_rangeChecker* _self_, jule::Ptr<_1e310908c_Data>& _110046_d, jule::Ptr<_1e322a147_Var>& _110057_key, jule::Ptr<_1e3134da9_TypeKind>& _110073_k) {
	jule::Bool _110117__mut = _110057_key.get()._field_Mutable;;
	if ((_110117__mut && (!(_1e31362a6_Mutable(_110073_k.ptr()))))) {
		_110117__mut=false;
	};
	_1e3219bc5_checkValidityForInitExpr((*_self_)._field_sc.get()._field_s, _110117__mut,_110057_key.get()._field_Reference,_110057_key.get()._field_Kind.get()._field_Kind,_110046_d,(*_self_)._field_rang.get()._field_InToken);
}



inline void _1e3100d75_checkSlice(_1e3100160_rangeChecker* _self_) {
	_1e31007d1_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _1d42b6b71_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1e313da72_Slc> _111917_slc = _1e3137e45_Slc((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_1e3100605_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1e3139012_TypeSymbol>(_1e3139012_TypeSymbol{._field_Kind=_111917_slc.get()._field_Elem});
	_1e3100b99_checkRangeExprValidity(&(*_self_), (*_self_)._field_d,(*_self_)._field_Kind.get()._field_KeyB,_111917_slc.get()._field_Elem);
}



inline void _1e3101051_checkArray(_1e3100160_rangeChecker* _self_) {
	_1e31007d1_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _1d42b6b71_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1e3140c1c_Arr> _113217_arr = _1e3137bd1_Arr((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_1e3100605_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1e3139012_TypeSymbol>(_1e3139012_TypeSymbol{._field_Kind=_113217_arr.get()._field_Elem});
	_1e3100b99_checkRangeExprValidity(&(*_self_), (*_self_)._field_d,(*_self_)._field_Kind.get()._field_KeyB,_113217_arr.get()._field_Elem);
}



inline void _1e310122c_checkMapKeyA(_1e3100160_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyA == nullptr) || _1d42b6b71_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1e3140128_Map> _114417_m = _1e31388e6_Map((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyA=_1e3100605_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyA);
	(*_self_)._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_1e3139012_TypeSymbol>(_1e3139012_TypeSymbol{._field_Kind=_114417_m.get()._field_Key});
	jule::Ptr<_1e310908c_Data> _114817_d = jule::new_ptr<_1e310908c_Data>((*((*_self_)._field_d)));;
	_114817_d.get()._field_Kind=_114417_m.get()._field_Key;
	_1e3100b99_checkRangeExprValidity(&(*_self_), _114817_d,(*_self_)._field_Kind.get()._field_KeyA,_114417_m.get()._field_Key);
}



inline void _1e3101408_checkMapKeyB(_1e3100160_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _1d42b6b71_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1e3140128_Map> _115917_m = _1e31388e6_Map((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_1e3100605_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1e3139012_TypeSymbol>(_1e3139012_TypeSymbol{._field_Kind=_115917_m.get()._field_Val});
	jule::Ptr<_1e310908c_Data> _116317_d = jule::new_ptr<_1e310908c_Data>((*((*_self_)._field_d)));;
	_116317_d.get()._field_Kind=_115917_m.get()._field_Val;
	_1e3100b99_checkRangeExprValidity(&(*_self_), _116317_d,(*_self_)._field_Kind.get()._field_KeyB,_115917_m.get()._field_Val);
}



inline void _1e31015d4_checkMap(_1e3100160_rangeChecker* _self_) {
	_1e310122c_checkMapKeyA(&(*_self_));
	_1e3101408_checkMapKeyB(&(*_self_));
}



inline void _1e31017b0_checkStr(_1e3100160_rangeChecker* _self_) {
	_1e31007d1_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _1d42b6b71_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	(*_self_)._field_Kind.get()._field_KeyB=_1e3100605_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1e3139012_TypeSymbol>(_1e3139012_TypeSymbol{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("u8", 2)), 6)})});
}



inline jule::Bool _1e3101a24_check(_1e3100160_rangeChecker* _self_) {
	{
		
		if ((*_self_)._field_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_1e5ba3260:;
		}
		else if ((_1e3137e45_Slc((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5ba255b:;
			{
				_1e3100d75_checkSlice(&(*_self_));
				return true;
			}
		}
		else if ((_1e3137bd1_Arr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5ba25c2:;
			{
				_1e3101051_checkArray(&(*_self_));
				return true;
			}
		}
		else if ((_1e31388e6_Map((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5ba2638:;
			{
				_1e31015d4_checkMap(&(*_self_));
				return true;
			}
		}
		else {
			_case_begin_1e5ba24e5:;
			{
				jule::Ptr<_1e3139881_Prim> _120117_prim = _1e3136ebb_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
				if (((_120117_prim != nullptr) && _1e313cab5_IsStr(_120117_prim.ptr()))) {
					_1e31017b0_checkStr(&(*_self_));
					return true;
				};
			}
		}
		_match_end_1e5ba2418:;
	};
	_1e321142a_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_rang.get()._field_InToken,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>());
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3100160_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1e310276c_prepareTypes(_1e31022b6_retTypeChecker* _self_) {
	if (((*_self_)._field_f != nullptr)) {
		(*_self_)._field_types=_1e2590117_Types((*_self_)._field_f.ptr());
	};
}



inline void _1e31029e2_prepareExprs(_1e31022b6_retTypeChecker* _self_, jule::Ptr<_1e2519ba7_Expr>& _123036_e) {
	if ((_123036_e == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _123036_e.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e251a834_TupleExpr>>()) {
			_case_begin_1e5ba8463:;
			{
				(*_self_)._field_exprs=_123036_e.get()._field_Kind.operator jule::Ptr<_1e251a834_TupleExpr>().get()._field_Expr;
			}
		}
		else {
			_case_begin_1e5ba80cd:;
			{
				(*_self_)._field_exprs = jule::alloc_for_append((*_self_)._field_exprs,1);(*_self_)._field_exprs.__push(_123036_e);;
			}
		}
		_match_end_1e5ba7b8d:;
	};
}



inline void _1e3102bbd_retVars(_1e31022b6_retTypeChecker* _self_) {
	if ((((*_self_)._field_f == nullptr) || _1e258b7a6_IsVoid((*_self_)._field_f.get()._field_Decl.ptr()))) {
		return;;
	};
	(*_self_)._field_vars=jule::Slice<jule::Ptr<_1e322a147_Var>>::alloc(0LL,(*_self_)._field_f.get()._field_Decl.get()._field_Result.get()._field_Idents.len());
	jule::Ptr<_1e31dd89c_scopeChecker> _124817_rootScope = _1e31e19b0_getRoot((*_self_)._field_sc);;
	jule::I64 _125017_j = 0LL;;
	{
		auto &expr = (*_self_)._field_f.get()._field_Decl.get()._field_Result.get()._field_Idents;
		auto it = expr.begin();
		_iter_begin_1e5bab06a:;
		if (it != expr.end()) {
			jule::I64 _125113_i = it - expr.begin();
			jule::Ptr<_1d42b43cc_Token> _125116_ident = *it;
			{
				if (((!(_1d42b6b71_IsIgnoreIdent(_125116_ident.get()._field_Kind))) && (!(_1d42b6e18_IsAnonIdent(_125116_ident.get()._field_Kind))))) {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(_124817_rootScope.get()._field_table.get()._field_Vars[_125017_j]);;
					(_125017_j)++;
				} else {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(jule::new_ptr<_1e322a147_Var>(_1e322a147_Var{._field_Ident=jule::Str("_", 1), ._field_Kind=jule::new_ptr<_1e3139012_TypeSymbol>(_1e3139012_TypeSymbol{._field_Kind=(*_self_)._field_types[_125113_i]}), }));;
				};
			}
			_iter_next_1e5bab06a:;
			++it;
			_125113_i++;
			goto _iter_begin_1e5bab06a;
		}
		_iter_end_1e5bab06a:;
	};
	if ((_125017_j == 0LL)) {
		(*_self_)._field_vars=nullptr;
	};
}



inline void _1e3102d99_checkExprs(_1e31022b6_retTypeChecker* _self_) {
	if (((*_self_)._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1e310908c_Data>> _127317_datas = jule::Slice<jule::Ptr<_1e310908c_Data>>::alloc(0LL,(*_self_)._field_exprs.len());;
	{
		auto &expr = (*_self_)._field_exprs;
		auto it = expr.begin();
		_iter_begin_1e5baecd8:;
		if (it != expr.end()) {
			jule::I64 _127414_i = it - expr.begin();
			jule::Ptr<_1e2519ba7_Expr> _127421_expr = *it;
			{
				if ((_127414_i >= (*_self_)._field_types.len())) {
					goto _iter_end_1e5baecd8;
				};
				jule::Ptr<_1e3134da9_TypeKind> _127921_t = (*_self_)._field_types[_127414_i];;
				jule::Ptr<_1e310908c_Data> _128121_d = _1e312664d_evalExpr(_1e3216683_evalp((*_self_)._field_sc.get()._field_s, jule::Trait<_1e315091e_Lookup>((*_self_)._field_sc, 0),_127921_t), _127421_expr);;
				if ((_128121_d == nullptr)) {
					goto _iter_next_1e5baecd8;
				};
				_127317_datas = jule::alloc_for_append(_127317_datas,1);_127317_datas.__push(_128121_d);;
				if (((!(_128121_d.get()._field_Mutable)) && _1e31362a6_Mutable(_128121_d.get()._field_Kind.ptr()))) {
					_1e321142a_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>());
					return;;
				};
				_1e30e495c_assignTypeChecker _129321_ac = _1e30e495c_assignTypeChecker{._field_s=(*_self_)._field_sc.get()._field_s, ._field_dest=_127921_t, ._field_d=_128121_d, ._field_errorToken=(*_self_)._field_errorToken};;
				_1e30e5ad4_check(&_129321_ac);
			}
			_iter_next_1e5baecd8:;
			++it;
			_127414_i++;
			goto _iter_begin_1e5baecd8;
		}
		_iter_end_1e5baecd8:;
	};
	if ((_127317_datas.len() > 1LL)) {
		(*_self_)._field_model=static_cast<jule::Any>(jule::new_ptr<_1e2586828_TupleExprModel>(_1e2586828_TupleExprModel{._field_Datas=_127317_datas}));
	} else if ((_127317_datas.len() == 1LL)) {
		(*_self_)._field_model=_127317_datas[0LL].get()._field_Model;
	};
}



inline jule::Bool _1e31031a7_check(_1e31022b6_retTypeChecker* _self_, jule::Ptr<_1e2519ba7_Expr>& _131229_e) {
	_1e310276c_prepareTypes(&(*_self_));
	_1e31029e2_prepareExprs(&(*_self_), _131229_e);
	_1e3102bbd_retVars(&(*_self_));
	jule::I64 _131713_n = (*_self_)._field_exprs.len();;
	if (((_131713_n == 0LL) && ((*_self_)._field_types.len() > 0LL))) {
		if ((!(_1e258c4bb_AnyVar((*_self_)._field_f.get()._field_Decl.ptr())))) {
			_1e321142a_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>());
			return false;
		};
		return true;
	};
	if ((((_131713_n > 0LL) && ((*_self_)._field_f != nullptr)) && _1e258b7a6_IsVoid((*_self_)._field_f.get()._field_Decl.ptr()))) {
		_1e321142a_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>());
		return false;
	};
	if ((_131713_n > (*_self_)._field_types.len())) {
		_1e321142a_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>());
	} else if ((_131713_n < (*_self_)._field_types.len())) {
		_1e321142a_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("missing return expressions for multi-return", 43),jule::Slice<jule::Any>());
	};
	_1e3102d99_checkExprs(&(*_self_));
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1e31022b6_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e320561c_ImportInfo> _1e310484b_FindPackage(_1e310432e_SymbolTable* _self_, jule::Str _2634_ident) {
	{
		auto &expr = (*_self_)._field_Imports;
		auto it = expr.begin();
		_iter_begin_1e5bbb377:;
		if (it != expr.end()) {
			jule::Ptr<_1e320561c_ImportInfo> _2721_pkg = *it;
			{
				if ((_2721_pkg.get()._field_Ident == _2634_ident)) {
					return _2721_pkg;
				};
			}
			_iter_next_1e5bbb377:;
			++it;
			goto _iter_begin_1e5bbb377;
		}
		_iter_end_1e5bbb377:;
	};
	return nullptr;
}



inline jule::Ptr<_1e320561c_ImportInfo> _1e3104b59_SelectPackage(_1e310432e_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_1e320561c_ImportInfo>)> _3836_selector) {
	if ((_3836_selector == nullptr)) {
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_Imports;
		auto it = expr.begin();
		_iter_begin_1e5bbc323:;
		if (it != expr.end()) {
			jule::Ptr<_1e320561c_ImportInfo> _4221_pkg = *it;
			{
				if (_3836_selector(_4221_pkg)) {
					return _4221_pkg;
				};
			}
			_iter_next_1e5bbc323:;
			++it;
			goto _iter_begin_1e5bbc323;
		}
		_iter_end_1e5bbc323:;
	};
	return nullptr;
}



inline jule::Ptr<_1e322a147_Var> _1e3105011_FindVar(_1e310432e_SymbolTable* _self_, jule::Str _5230_ident, jule::Bool _5242_cppLinked) {
	return _1e3106ac3_findVar(&(*_self_), _5230_ident,_5242_cppLinked,false);
}



inline jule::Ptr<_1e31341b6_TypeAlias> _1e31053b8_FindTypeAlias(_1e310432e_SymbolTable* _self_, jule::Str _5836_ident, jule::Bool _5848_cppLinked) {
	return _1e3107024_findTypeAlias(&(*_self_), _5836_ident,_5848_cppLinked,false);
}



inline jule::Ptr<_1e2505d6e_Struct> _1e3105770_FindStruct(_1e310432e_SymbolTable* _self_, jule::Str _6433_ident, jule::Bool _6445_cppLinked) {
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_1e5bbed4d:;
		if (it != expr.end()) {
			jule::Ptr<_1e2505d6e_Struct> _6521_s = *it;
			{
				if (((_6521_s.get()._field_Ident == _6433_ident) && (_6521_s.get()._field_CppLinked == _6445_cppLinked))) {
					return _6521_s;
				};
			}
			_iter_next_1e5bbed4d:;
			++it;
			goto _iter_begin_1e5bbed4d;
		}
		_iter_end_1e5bbed4d:;
	};
	return nullptr;
}



inline jule::Ptr<_1e258b344_Fn> _1e3105b27_FindFn(_1e310432e_SymbolTable* _self_, jule::Str _7529_ident, jule::Bool _7541_cppLinked) {
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1e5bc12e4:;
		if (it != expr.end()) {
			jule::Ptr<_1e258b344_Fn> _7621_f = *it;
			{
				if (((_7621_f.get()._field_Ident == _7529_ident) && (_7621_f.get()._field_CppLinked == _7541_cppLinked))) {
					return _7621_f;
				};
			}
			_iter_next_1e5bc12e4:;
			++it;
			goto _iter_begin_1e5bc12e4;
		}
		_iter_end_1e5bc12e4:;
	};
	return nullptr;
}



inline jule::Ptr<_1e259d246_Trait> _1e3105e35_FindTrait(_1e310432e_SymbolTable* _self_, jule::Str _8632_ident) {
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_1e5bc256a:;
		if (it != expr.end()) {
			jule::Ptr<_1e259d246_Trait> _8721_t = *it;
			{
				if ((_8721_t.get()._field_Ident == _8632_ident)) {
					return _8721_t;
				};
			}
			_iter_next_1e5bc256a:;
			++it;
			goto _iter_begin_1e5bc256a;
		}
		_iter_end_1e5bc256a:;
	};
	return nullptr;
}



inline jule::Ptr<_1e25a038b_Enum> _1e3106243_FindEnum(_1e310432e_SymbolTable* _self_, jule::Str _9731_ident) {
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_1e5bc3505:;
		if (it != expr.end()) {
			jule::Ptr<_1e25a038b_Enum> _9821_e = *it;
			{
				if ((_9821_e.get()._field_Ident == _9731_ident)) {
					return _9821_e;
				};
			}
			_iter_next_1e5bc3505:;
			++it;
			goto _iter_begin_1e5bc3505;
		}
		_iter_end_1e5bc3505:;
	};
	return nullptr;
}



inline jule::Ptr<_1e25a1986_TypeEnum> _1e3106551_FindTypeEnum(_1e310432e_SymbolTable* _self_, jule::Str _10835_ident) {
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1e5bc39cd:;
		if (it != expr.end()) {
			jule::Ptr<_1e25a1986_TypeEnum> _10921_e = *it;
			{
				if ((_10921_e.get()._field_Ident == _10835_ident)) {
					return _10921_e;
				};
			}
			_iter_next_1e5bc39cd:;
			++it;
			goto _iter_begin_1e5bc39cd;
		}
		_iter_end_1e5bc39cd:;
	};
	return nullptr;
}



inline jule::Ptr<_1e322a147_Var> _1e3106ac3_findVar(_1e310432e_SymbolTable* _self_, jule::Str _11926_ident, jule::Bool _11938_cppLinked, jule::Bool _11955_reverse) {
	if (_11955_reverse) {
		jule::I64 _12121_i = ((*_self_)._field_Vars.len() - 1LL);;
		for (; (_12121_i >= 0LL); (_12121_i)--) {
			{
				jule::Ptr<_1e322a147_Var> _12325_v = (*_self_)._field_Vars[_12121_i];;
				if (((_12325_v.get()._field_Ident == _11926_ident) && (_12325_v.get()._field_CppLinked == _11938_cppLinked))) {
					return _12325_v;
				};
			}
		_iter_next_1e5bc652a:;
		}
		_iter_end_1e5bc652a:;;
	} else {
		{
			auto &expr = (*_self_)._field_Vars;
			auto it = expr.begin();
			_iter_begin_1e5bc5e86:;
			if (it != expr.end()) {
				jule::Ptr<_1e322a147_Var> _12925_v = *it;
				{
					if (((_12925_v.get()._field_Ident == _11926_ident) && (_12925_v.get()._field_CppLinked == _11938_cppLinked))) {
						return _12925_v;
					};
				}
				_iter_next_1e5bc5e86:;
				++it;
				goto _iter_begin_1e5bc5e86;
			}
			_iter_end_1e5bc5e86:;
		};
	};
	return nullptr;
}



inline jule::Ptr<_1e31341b6_TypeAlias> _1e3107024_findTypeAlias(_1e310432e_SymbolTable* _self_, jule::Str _13832_ident, jule::Bool _13844_cppLinked, jule::Bool _13861_reverse) {
	if (_13861_reverse) {
		jule::I64 _14021_i = ((*_self_)._field_TypeAliases.len() - 1LL);;
		for (; (_14021_i >= 0LL); (_14021_i)--) {
			{
				jule::Ptr<_1e31341b6_TypeAlias> _14225_ta = (*_self_)._field_TypeAliases[_14021_i];;
				if (((_14225_ta.get()._field_Ident == _13832_ident) && (_14225_ta.get()._field_CppLinked == _13844_cppLinked))) {
					return _14225_ta;
				};
			}
		_iter_next_1e5bc9808:;
		}
		_iter_end_1e5bc9808:;;
	} else {
		{
			auto &expr = (*_self_)._field_TypeAliases;
			auto it = expr.begin();
			_iter_begin_1e5bc9264:;
			if (it != expr.end()) {
				jule::Ptr<_1e31341b6_TypeAlias> _14825_ta = *it;
				{
					if (((_14825_ta.get()._field_Ident == _13832_ident) && (_14825_ta.get()._field_CppLinked == _13844_cppLinked))) {
						return _14825_ta;
					};
				}
				_iter_next_1e5bc9264:;
				++it;
				goto _iter_begin_1e5bc9264;
			}
			_iter_end_1e5bc9264:;
		};
	};
	return nullptr;
}



inline jule::Any _1e31073cb_defByIdent(_1e310432e_SymbolTable* _self_, jule::Str _15929_ident, jule::Bool _15941_cppLinked) {
	{
		auto &expr = (*_self_)._field_Vars;
		auto it = expr.begin();
		_iter_begin_1e5bcb244:;
		if (it != expr.end()) {
			jule::Ptr<_1e322a147_Var> _16021_v = *it;
			{
				if (((_16021_v.get()._field_Ident == _15929_ident) && (_16021_v.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_16021_v);
				};
			}
			_iter_next_1e5bcb244:;
			++it;
			goto _iter_begin_1e5bcb244;
		}
		_iter_end_1e5bcb244:;
	};
	{
		auto &expr = (*_self_)._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1e5bcca70:;
		if (it != expr.end()) {
			jule::Ptr<_1e31341b6_TypeAlias> _16621_ta = *it;
			{
				if (((_16621_ta.get()._field_Ident == _15929_ident) && (_16621_ta.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_16621_ta);
				};
			}
			_iter_next_1e5bcca70:;
			++it;
			goto _iter_begin_1e5bcca70;
		}
		_iter_end_1e5bcca70:;
	};
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_1e5bcd862:;
		if (it != expr.end()) {
			jule::Ptr<_1e2505d6e_Struct> _17221_s = *it;
			{
				if (((_17221_s.get()._field_Ident == _15929_ident) && (_17221_s.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_17221_s);
				};
			}
			_iter_next_1e5bcd862:;
			++it;
			goto _iter_begin_1e5bcd862;
		}
		_iter_end_1e5bcd862:;
	};
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1e5bce6dc:;
		if (it != expr.end()) {
			jule::Ptr<_1e258b344_Fn> _17821_f = *it;
			{
				if (((_17821_f.get()._field_Ident == _15929_ident) && (_17821_f.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_17821_f);
				};
			}
			_iter_next_1e5bce6dc:;
			++it;
			goto _iter_begin_1e5bce6dc;
		}
		_iter_end_1e5bce6dc:;
	};
	if (_15941_cppLinked) {
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_1e5bd0a84:;
		if (it != expr.end()) {
			jule::Ptr<_1e259d246_Trait> _18821_t = *it;
			{
				if ((_18821_t.get()._field_Ident == _15929_ident)) {
					return jule::Any(_18821_t);
				};
			}
			_iter_next_1e5bd0a84:;
			++it;
			goto _iter_begin_1e5bd0a84;
		}
		_iter_end_1e5bd0a84:;
	};
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_1e5bd14be:;
		if (it != expr.end()) {
			jule::Ptr<_1e25a038b_Enum> _19421_e = *it;
			{
				if ((_19421_e.get()._field_Ident == _15929_ident)) {
					return jule::Any(_19421_e);
				};
			}
			_iter_next_1e5bd14be:;
			++it;
			goto _iter_begin_1e5bd14be;
		}
		_iter_end_1e5bd14be:;
	};
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1e5bd224a:;
		if (it != expr.end()) {
			jule::Ptr<_1e25a1986_TypeEnum> _20021_te = *it;
			{
				if ((_20021_te.get()._field_Ident == _15929_ident)) {
					return jule::Any(_20021_te);
				};
			}
			_iter_next_1e5bd224a:;
			++it;
			goto _iter_begin_1e5bd224a;
		}
		_iter_end_1e5bd224a:;
	};
	return nullptr;
}



inline jule::Bool _1e310782c_isDuplicatedIdent(_1e310432e_SymbolTable* _self_, jule::Uintptr _21232_itself, jule::Str _21249_ident, jule::Bool _21261_cppLinked) {
	{
		auto &expr = (*_self_)._field_Vars;
		auto it = expr.begin();
		_iter_begin_1e5bd2899:;
		if (it != expr.end()) {
			jule::Ptr<_1e322a147_Var> &_21316_v = *it;
			{
				if ((((static_cast<jule::Uintptr>(_21316_v) != _21232_itself) && (_21316_v.get()._field_Ident == _21249_ident)) && (_21316_v.get()._field_CppLinked == _21261_cppLinked))) {
					return true;
				};
			}
			_iter_next_1e5bd2899:;
			++it;
			goto _iter_begin_1e5bd2899;
		}
		_iter_end_1e5bd2899:;
	};
	{
		auto &expr = (*_self_)._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1e5bd4527:;
		if (it != expr.end()) {
			jule::Ptr<_1e31341b6_TypeAlias> &_21916_ta = *it;
			{
				if ((((static_cast<jule::Uintptr>(_21916_ta) != _21232_itself) && (_21916_ta.get()._field_Ident == _21249_ident)) && (_21916_ta.get()._field_CppLinked == _21261_cppLinked))) {
					return true;
				};
			}
			_iter_next_1e5bd4527:;
			++it;
			goto _iter_begin_1e5bd4527;
		}
		_iter_end_1e5bd4527:;
	};
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_1e5bd41c5:;
		if (it != expr.end()) {
			jule::Ptr<_1e2505d6e_Struct> &_22516_s = *it;
			{
				if ((((static_cast<jule::Uintptr>(_22516_s) != _21232_itself) && (_22516_s.get()._field_Ident == _21249_ident)) && (_22516_s.get()._field_CppLinked == _21261_cppLinked))) {
					return true;
				};
			}
			_iter_next_1e5bd41c5:;
			++it;
			goto _iter_begin_1e5bd41c5;
		}
		_iter_end_1e5bd41c5:;
	};
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1e5bd533b:;
		if (it != expr.end()) {
			jule::Ptr<_1e258b344_Fn> &_23116_f = *it;
			{
				if ((((static_cast<jule::Uintptr>(_23116_f) != _21232_itself) && (_23116_f.get()._field_Ident == _21249_ident)) && (_23116_f.get()._field_CppLinked == _21261_cppLinked))) {
					return true;
				};
			}
			_iter_next_1e5bd533b:;
			++it;
			goto _iter_begin_1e5bd533b;
		}
		_iter_end_1e5bd533b:;
	};
	if (_21261_cppLinked) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_1e5bd7e43:;
		if (it != expr.end()) {
			jule::Ptr<_1e259d246_Trait> &_24116_t = *it;
			{
				if (((static_cast<jule::Uintptr>(_24116_t) != _21232_itself) && (_24116_t.get()._field_Ident == _21249_ident))) {
					return true;
				};
			}
			_iter_next_1e5bd7e43:;
			++it;
			goto _iter_begin_1e5bd7e43;
		}
		_iter_end_1e5bd7e43:;
	};
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_1e5bd8ad1:;
		if (it != expr.end()) {
			jule::Ptr<_1e25a038b_Enum> &_24716_e = *it;
			{
				if (((static_cast<jule::Uintptr>(_24716_e) != _21232_itself) && (_24716_e.get()._field_Ident == _21249_ident))) {
					return true;
				};
			}
			_iter_next_1e5bd8ad1:;
			++it;
			goto _iter_begin_1e5bd8ad1;
		}
		_iter_end_1e5bd8ad1:;
	};
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1e5bd9ab0:;
		if (it != expr.end()) {
			jule::Ptr<_1e25a1986_TypeEnum> &_25316_te = *it;
			{
				if (((static_cast<jule::Uintptr>(_25316_te) != _21232_itself) && (_25316_te.get()._field_Ident == _21249_ident))) {
					return true;
				};
			}
			_iter_next_1e5bd9ab0:;
			++it;
			goto _iter_begin_1e5bd9ab0;
		}
		_iter_end_1e5bd9ab0:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1e310432e_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e3109477_IsNil(_1e310908c_Data* _self_) {
	return _1e3135ccd_IsNil((*_self_)._field_Kind.ptr());
}



inline jule::Bool _1e31096db_IsVoid(_1e310908c_Data* _self_) {
	return _1e3136042_Void((*_self_)._field_Kind.ptr());
}



inline jule::Bool _1e3109950_IsConst(_1e310908c_Data* _self_) {
	return ((*_self_)._field_Constant != nullptr);
}



inline jule::Bool _1e3109c5d_GoodOperand(_1e310908c_Data* _self_, jule::Ptr<_1e310908c_Data>& _9635_other) {
	if ((_1e313796c_TypeEnum(_9635_other.get()._field_Kind.ptr()) != nullptr)) {
		return false;
	};
	return ((((_1e3136ebb_Prim(_9635_other.get()._field_Kind.ptr()) == nullptr) || (!(_1e313cd29_IsAny(_1e3136ebb_Prim(_9635_other.get()._field_Kind.ptr()).ptr())))) && (_1e3138682_Trait(_9635_other.get()._field_Kind.ptr()) == nullptr)) && (!(_1e3135ccd_IsNil((*_self_)._field_Kind.ptr()))));
}







std::ostream &operator<<(std::ostream &_Stream, _1e310908c_Data _Src) {
	_Stream << "Data{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e310a115_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _1e310b116_pushErr(_1e310ab0a_Eval* _self_, jule::Ptr<_1d42b43cc_Token> _12726_token, jule::Str _12741_fmt, jule::Slice<jule::Any> _12754_args) {
	_1e321142a_pushErr((*_self_)._field_s.ptr(), _12726_token,_12741_fmt,jule::Any(_12754_args));
}



inline void _1e310b435_pushSugggestion(_1e310ab0a_Eval* _self_, jule::Str _13234_fmt, jule::Slice<jule::Any> _13247_args) {
	_1e3211749_pushSugggestion((*_self_)._field_s.ptr(), _13234_fmt,jule::Any(_13247_args));
}



inline void _1e310b611_allowBuiltin(_1e310ab0a_Eval* _self_) {
	(*_self_)._field_disBuiltin=false;
}



inline void _1e310b7dc_disallowBuiltin(_1e310ab0a_Eval* _self_) {
	(*_self_)._field_disBuiltin=true;
}



inline jule::Bool _1e310ba51_isUnsafe(_1e310ab0a_Eval* _self_) {
	return (*_self_)._field_unsafety;
}



inline jule::Bool _1e310bcb5_isGlobal(_1e310ab0a_Eval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1e320d768_Sema>>()) {
			_case_begin_1e5c196d3:;
			{
				return true;
			}
		}
		else {
			_case_begin_1e5c195c3:;
			{
				return false;
			}
		}
		_match_end_1e5c191d8:;
	};
}



inline jule::Bool _1e310c090_applyNumericPrefix(_1e310ab0a_Eval* _self_, jule::Ptr<_1e310908c_Data>& _15942_d) {
	if (((((_15942_d == nullptr) || (!(_1e3109950_IsConst(_15942_d.ptr())))) || (_1e3136ebb_Prim(_15942_d.get()._field_Kind.ptr()) == nullptr)) || ((*_self_)._field_prefix == nullptr))) {
		return false;
	};
	jule::Ptr<_1e3139881_Prim> _16613_prim = _1e3136ebb_Prim((*_self_)._field_prefix.ptr());;
	if ((_16613_prim == nullptr)) {
		return false;
	};
	{
		
		if (_1e31cd4a2_IsFloat(_1e3139be4_Str(_16613_prim.ptr()))) {
			_case_begin_1e5c1bedd:;
			{
				_15942_d.get()._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>((*((*_self_)._field_prefix)));
				_1e257d853_SetF64(_15942_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1e257cad8_AsF64(_15942_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1e31ccb00_IsSigInt(_1e3139be4_Str(_16613_prim.ptr()))) {
			_case_begin_1e5c1c054:;
			{
				if ((!(_1e30e2aae_sigAssignable(_1e3139be4_Str(_16613_prim.ptr()),_15942_d)))) {
					return false;
				};
				_15942_d.get()._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>((*((*_self_)._field_prefix)));
				_1e257cd5d_SetI64(_15942_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1e257c610_AsI64(_15942_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1e31ccddb_IsUnsigInt(_1e3139be4_Str(_16613_prim.ptr()))) {
			_case_begin_1e5c1c0ba:;
			{
				if ((!(_1e30e2be1_unsigAssignable(_1e3139be4_Str(_16613_prim.ptr()),_15942_d)))) {
					return false;
				};
				_15942_d.get()._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>((*((*_self_)._field_prefix)));
				_1e257d0d3_SetU64(_15942_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1e257c874_AsU64(_15942_d.get()._field_Constant.ptr())));
			}
		}
		_match_end_1e5c1bc9b:;
	};
	return true;
}



inline jule::Ptr<_1e310908c_Data> _1e310c304_litNil(_1e310ab0a_Eval* _self_) {
	jule::Ptr<_1e23b4a96_Const> _19517_constant = static__1e257b301_NewNil();;
	return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=nullptr}), ._field_Model=static_cast<jule::Any>(_19517_constant), ._field_Constant=_19517_constant});
}



inline jule::Ptr<_1e310908c_Data> _1e310c612_litStr(_1e310ab0a_Eval* _self_, jule::Ptr<_1e251abdb_LitExpr>& _20322_l) {
	jule::Str _20417_s = _20322_l.get()._field_Value.slice(1LL,(_20322_l.get()._field_Value.len() - 1LL));;
	if (_1d42b5730_IsRawStr(_20322_l.get()._field_Value)) {
		_20417_s=_1e30e1b9b_ToRawStr(static_cast<jule::Slice<jule::U8>>(_20417_s));
	} else {
		_20417_s=_1e30e1e65_ToStr(static_cast<jule::Slice<jule::U8>>(_20417_s));
	};
	jule::Ptr<_1e23b4a96_Const> _21017_constant = static__1e257ad5b_NewStr(_20417_s);;
	return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("str", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_21017_constant), ._field_Constant=_21017_constant});
}



inline jule::Ptr<_1e310908c_Data> _1e310c920_litBool(_1e310ab0a_Eval* _self_, jule::Ptr<_1e251abdb_LitExpr>& _22123_l) {
	jule::Ptr<_1e23b4a96_Const> _22217_constant = static__1e257aab4_NewBool((_22123_l.get()._field_Value == jule::Str("true", 4)));;
	return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_Model=static_cast<jule::Any>(_22217_constant), ._field_Constant=_22217_constant});
}



inline jule::Ptr<_1e310908c_Data> _1e310cc2d_litRune(_1e310ab0a_Eval* _self_, jule::Ptr<_1e251abdb_LitExpr>& _23223_l) {
	;
	;
	jule::Str _23713_lt = _23223_l.get()._field_Value.slice(1LL,(_23223_l.get()._field_Value.len() - 1LL));;
	jule::I32 _23813_r = _1e30e1a25_ToRune(static_cast<jule::Slice<jule::U8>>(_23713_lt));;
	jule::Ptr<_1e310908c_Data> _23917_data = jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Constant=static__1e257a575_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_23813_r)))});;
	jule::Bool _24313_isAscii = _1e30e18e3_IsAscii(_23813_r);;
	if (_24313_isAscii) {
		_23917_data.get()._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("u8", 2)), 6)});
	} else {
		_23917_data.get()._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("i32", 3)), 6)});
	};
	_23917_data.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e25885a5_RuneExprModel>(_1e25885a5_RuneExprModel{._field_Code=_23813_r}));
	_23917_data.get()._field_IsRune=true;
	return _23917_data;
}



inline jule::Ptr<_1e310908c_Data> _1e310d03b_litFloat(_1e310ab0a_Eval* _self_, jule::Ptr<_1e251abdb_LitExpr>& _25924_l) {
	;
	jule::F64 _26213_f = ({
		auto except = _1e31c062b_ParseFloat(_25924_l.get()._field_Value,64LL);
		(except.ok()) ? (except.result) : ({
			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1e23b4a96_Const> _26317_constant = static__1e257b103_NewF64(_26213_f);;
	return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_26317_constant), ._field_Constant=_26317_constant});
}



inline jule::Ptr<_1e310908c_Data> _1e310d349_litInt(_1e310ab0a_Eval* _self_, jule::Ptr<_1e251abdb_LitExpr>& _27426_l) {
	;
	jule::Str _27717_lit = _27426_l.get()._field_Value;;
	jule::I64 _27817_base = 0LL;;
	{
		
		if (_20a119ae1_HasPrefix(_27717_lit,jule::Str("0x", 2))) {
			_case_begin_1e5c2d186:;
			{
				(_27717_lit).mut_slice(2LL);;
				_27817_base=16LL;
			}
		}
		else if (_20a119ae1_HasPrefix(_27717_lit,jule::Str("0b", 2))) {
			_case_begin_1e5c2cd67:;
			{
				(_27717_lit).mut_slice(2LL);;
				_27817_base=2LL;
			}
		}
		else if (_20a119ae1_HasPrefix(_27717_lit,jule::Str("0o", 2))) {
			_case_begin_1e5c2cdcd:;
			{
				(_27717_lit).mut_slice(2LL);;
				_27817_base=8LL;
			}
		}
		else if (((_27717_lit[0LL] == '0') && (_27717_lit.len() > 1LL))) {
			_case_begin_1e5c2ca59:;
			{
				(_27717_lit).mut_slice(1LL);;
				_27817_base=8LL;
			}
		}
		else {
			_case_begin_1e5c2c9e3:;
			{
				_27817_base=10LL;
			}
		}
		_match_end_1e5c2c98d:;
	};
	jule::Ptr<_1e310908c_Data> _29817_d = jule::new_ptr<_1e310908c_Data>();;
	jule::Bool _30017_ok = true;;
	jule::I64 _30113_sig = ({
		auto except = _1e2ba1173_ParseInt(_27717_lit,_27817_base,64LL);
		(except.ok()) ? (except.result) : ({
			_30017_ok=false;
			0LL;
		});
	});;
	if (_30017_ok) {
		_29817_d.get()._field_Constant=static__1e257a575_NewI64(_30113_sig);
		_29817_d.get()._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("int", 3)), 6)});
	} else {
		jule::U64 _31117_unsig = ({
			auto except = _1e2dd78c6_ParseUint(_27717_lit,_27817_base,64LL);
			(except.ok()) ? (except.result) : ({
				_1e310b116_pushErr(&(*_self_), _27426_l.get()._field_Token,jule::Str("arithmetic value overflow: this value too big", 45),jule::Slice<jule::Any>());
				_1e310b435_pushSugggestion(&(*_self_), jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>());
				jule::MAX_U64;
			});
		});;
		_29817_d.get()._field_Constant=static__1e257a81c_NewU64(_31117_unsig);
		_29817_d.get()._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("uint", 4)), 6)});
	};
	_29817_d.get()._field_Model=static_cast<jule::Any>(_29817_d.get()._field_Constant);
	if ((!(_1e310c090_applyNumericPrefix(&(*_self_), _29817_d)))) {
		_1e312eb95_fitBitsize(_29817_d);
	};
	return _29817_d;
}



inline jule::Ptr<_1e310908c_Data> _1e310d657_litNum(_1e310ab0a_Eval* _self_, jule::Ptr<_1e251abdb_LitExpr>& _33226_l) {
	{
		
		if (_1d42b638a_IsFloat(_33226_l.get()._field_Value)) {
			_case_begin_1e5c35c2c:;
			{
				return _1e310d03b_litFloat(&(*_self_), _33226_l);
			}
		}
		else {
			_case_begin_1e5c354ac:;
			{
				return _1e310d349_litInt(&(*_self_), _33226_l);
			}
		}
		_match_end_1e5c35402:;
	};
}



inline jule::Ptr<_1e310908c_Data> _1e310d965_evalLit(_1e310ab0a_Eval* _self_, jule::Ptr<_1e251abdb_LitExpr> _34126_lit) {
	{
		
		if (_1e251b03d_IsNil(_34126_lit.ptr())) {
			_case_begin_1e5c36e09:;
			{
				return _1e310c304_litNil(&(*_self_));
			}
		}
		else if (_1d42b5488_IsStr(_34126_lit.get()._field_Value)) {
			_case_begin_1e5c367dd:;
			{
				return _1e310c612_litStr(&(*_self_), _34126_lit);
			}
		}
		else if (_1d42b60e3_IsBool(_34126_lit.get()._field_Value)) {
			_case_begin_1e5c36865:;
			{
				return _1e310c920_litBool(&(*_self_), _34126_lit);
			}
		}
		else if (_1d42b59c7_IsRune(_34126_lit.get()._field_Value)) {
			_case_begin_1e5c368dc:;
			{
				return _1e310cc2d_litRune(&(*_self_), _34126_lit);
			}
		}
		else if (_1d42b6632_IsNum(_34126_lit.get()._field_Value)) {
			_case_begin_1e5c36b0c:;
			{
				return _1e310d657_litNum(&(*_self_), _34126_lit);
			}
		}
		else {
			_case_begin_1e5c3628d:;
			{
				return nullptr;
			}
		}
		_match_end_1e5c361d3:;
	};
}



inline jule::Any _1e310dc73_findBuiltins(_1e310ab0a_Eval* _self_, jule::Str _35831_ident) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1e320561c_ImportInfo>>()) {
			_case_begin_1e5c371e5:;
			{
				jule::Any _36121_def = _1e312e986_findBuiltinsImport(_35831_ident,(*_self_)._field_lookup.operator jule::Ptr<_1e320561c_ImportInfo>());;
				if ((_36121_def != nullptr)) {
					return jule::Any(_36121_def);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e320d768_Sema>>()) {
			_case_begin_1e5c3725b:;
			{
				jule::Any _36621_def = _1e3130624_findBuiltinsSema(_35831_ident,(*_self_)._field_lookup.operator jule::Ptr<_1e320d768_Sema>());;
				if ((_36621_def != nullptr)) {
					return jule::Any(_36621_def);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e31dd89c_scopeChecker>>()) {
			_case_begin_1e5c394b1:;
			{
				jule::Any _37121_def = _1e3130624_findBuiltinsSema(_35831_ident,(*_self_)._field_lookup.operator jule::Ptr<_1e31dd89c_scopeChecker>().get()._field_s);;
				if ((_37121_def != nullptr)) {
					return jule::Any(_37121_def);
				};
			}
		}
		_match_end_1e5c3705d:;
	};
	if ((*_self_)._field_disBuiltin) {
		return nullptr;
	};
	return jule::Any(_1e3247dbd_findBuiltinDef(_35831_ident));
}



inline jule::Any _1e310e12a_getDef(_1e310ab0a_Eval* _self_, jule::Str _38225_ident, jule::Bool _38237_cppLinked) {
	if ((!(_38237_cppLinked))) {
		jule::Ptr<_1e25a038b_Enum> _38421_enm = _1e315091e_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1e31504bd_FindEnum((*_self_)._field_lookup, _38225_ident);;
		if ((_38421_enm != nullptr)) {
			return jule::Any(_38421_enm);
		};
		jule::Ptr<_1e25a1986_TypeEnum> _38921_tenm = _1e315091e_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1e31507cb_FindTypeEnum((*_self_)._field_lookup, _38225_ident);;
		if ((_38921_tenm != nullptr)) {
			return jule::Any(_38921_tenm);
		};
	};
	jule::Ptr<_1e322a147_Var> _39517_v = _1e315091e_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1e314e28b_FindVar((*_self_)._field_lookup, _38225_ident,_38237_cppLinked);;
	if ((_39517_v != nullptr)) {
		return jule::Any(_39517_v);
	};
	jule::Ptr<_1e258b344_Fn> _40017_f = _1e315091e_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1e314eda2_FindFn((*_self_)._field_lookup, _38225_ident,_38237_cppLinked);;
	if ((_40017_f != nullptr)) {
		return jule::Any(_40017_f);
	};
	jule::Ptr<_1e2505d6e_Struct> _40517_s = _1e315091e_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1e314e9ea_FindStruct((*_self_)._field_lookup, _38225_ident,_38237_cppLinked);;
	if ((_40517_s != nullptr)) {
		return jule::Any(_40517_s);
	};
	jule::Ptr<_1e31341b6_TypeAlias> _41017_ta = _1e315091e_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1e314e643_FindTypeAlias((*_self_)._field_lookup, _38225_ident,_38237_cppLinked);;
	if ((_41017_ta != nullptr)) {
		return jule::Any(_41017_ta);
	};
	return jule::Any(_1e310dc73_findBuiltins(&(*_self_), _38225_ident));
}



inline void _1e5c50450_pushReference(_1e310ab0a_Eval* _self_, jule::Ptr<_1e258dee5_FnIns>& _41840_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1e31dd89c_scopeChecker>>()) {
			_case_begin_1e5c52111:;
			{
				jule::Ptr<_1e31dd89c_scopeChecker> _42121_sc = _1e31e1c24_getHardRoot((*_self_)._field_lookup.operator jule::Ptr<_1e31dd89c_scopeChecker>());;
				if ((!(_1e5c52c7c_Exist(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), _41840_ref)))) {
					_1e2592b0e_Push(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_41840_ref));
				};
			}
		}
		else {
			_case_begin_1e5c5193a:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1e5c52c7c_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _41840_ref))))) {
					_1e2592b0e_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_41840_ref));
				};
			}
		}
		_match_end_1e5c518d5:;
	};
}

inline void _1e5c64ec0_pushReference(_1e310ab0a_Eval* _self_, jule::Ptr<_1e322a147_Var>& _41840_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1e31dd89c_scopeChecker>>()) {
			_case_begin_1e5c6690b:;
			{
				jule::Ptr<_1e31dd89c_scopeChecker> _42121_sc = _1e31e1c24_getHardRoot((*_self_)._field_lookup.operator jule::Ptr<_1e31dd89c_scopeChecker>());;
				if ((!(_1e5c67577_Exist(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), _41840_ref)))) {
					_1e2592b0e_Push(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_41840_ref));
				};
			}
		}
		else {
			_case_begin_1e5c66235:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1e5c67577_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _41840_ref))))) {
					_1e2592b0e_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_41840_ref));
				};
			}
		}
		_match_end_1e5c661d0:;
	};
}

inline void _1e5d0973a_pushReference(_1e310ab0a_Eval* _self_, jule::Ptr<_1e253220d_StructIns>& _41840_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1e31dd89c_scopeChecker>>()) {
			_case_begin_1e5d0b3b8:;
			{
				jule::Ptr<_1e31dd89c_scopeChecker> _42121_sc = _1e31e1c24_getHardRoot((*_self_)._field_lookup.operator jule::Ptr<_1e31dd89c_scopeChecker>());;
				if ((!(_1e5d0c034_Exist(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), _41840_ref)))) {
					_1e2592b0e_Push(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_41840_ref));
				};
			}
		}
		else {
			_case_begin_1e5d0abe2:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1e5d0c034_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _41840_ref))))) {
					_1e2592b0e_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_41840_ref));
				};
			}
		}
		_match_end_1e5d0ab8c:;
	};
}



inline jule::Ptr<_1e310908c_Data> _1e310e6ad__evalEnum(_1e310ab0a_Eval* _self_, jule::Ptr<_1e25a038b_Enum> _43228_enm) {
	return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_43228_enm, 3)}), ._field_Decl=true, });
}



inline jule::Ptr<_1e310908c_Data> _1e310ea65_evalEnum(_1e310ab0a_Eval* _self_, jule::Ptr<_1e25a038b_Enum> _44131_enm, jule::Ptr<_1d42b43cc_Token> _44143_errorToken) {
	if ((!(_1e3211b01_isAccessibleDefine((*_self_)._field_s.ptr(), _44131_enm.get()._field_Public,_44131_enm.get()._field_Token)))) {
		_1e310b116_pushErr(&(*_self_), _44143_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_44131_enm.get()._field_Ident)}));
		_1e310b435_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _1e310e6ad__evalEnum(&(*_self_), _44131_enm);
}



inline jule::Ptr<_1e310908c_Data> _1e310ed73__evalTypeEnum(_1e310ab0a_Eval* _self_, jule::Ptr<_1e25a1986_TypeEnum> _45032_enm) {
	return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_45032_enm, 4)}), ._field_Decl=true, });
}



inline jule::Ptr<_1e310908c_Data> _1e311022a_evalTypeEnum(_1e310ab0a_Eval* _self_, jule::Ptr<_1e25a1986_TypeEnum> _45935_enm, jule::Ptr<_1d42b43cc_Token> _45951_errorToken) {
	if ((!(_1e3211b01_isAccessibleDefine((*_self_)._field_s.ptr(), _45935_enm.get()._field_Public,_45935_enm.get()._field_Token)))) {
		_1e310b116_pushErr(&(*_self_), _45951_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_45935_enm.get()._field_Ident)}));
		_1e310b435_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _1e310ed73__evalTypeEnum(&(*_self_), _45935_enm);
}



inline jule::Ptr<_1e310908c_Data> _1e3110538__evalStruct(_1e310ab0a_Eval* _self_, jule::Ptr<_1e253220d_StructIns> _46830_s) {
	return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_46830_s, 0)}), ._field_Model=static_cast<jule::Any>(_46830_s), ._field_Decl=true, });
}



inline jule::Ptr<_1e310908c_Data> _1e31108e0_evalStruct(_1e310ab0a_Eval* _self_, jule::Ptr<_1e253220d_StructIns> _47833_s, jule::Ptr<_1d42b43cc_Token> _47848_errorToken) {
	if ((!(_1e3211b01_isAccessibleDefine((*_self_)._field_s.ptr(), _47833_s.get()._field_Decl.get()._field_Public,_47833_s.get()._field_Decl.get()._field_Token)))) {
		_1e310b116_pushErr(&(*_self_), _47848_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_47833_s.get()._field_Decl.get()._field_Ident)}));
		_1e310b435_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1e311101c_checkDeprecated(&(*_self_), _47833_s.get()._field_Decl.get()._field_Directives,_47848_errorToken);
	return _1e3110538__evalStruct(&(*_self_), _47833_s);
}



inline jule::Ptr<_1e310908c_Data> _1e3110bed_evalFnIns(_1e310ab0a_Eval* _self_, jule::Ptr<_1e258dee5_FnIns> _48828_f) {
	return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_48828_f, 1)}), ._field_Model=static_cast<jule::Any>(_48828_f), });
}



inline void _1e311101c_checkDeprecated(_1e310ab0a_Eval* _self_, jule::Slice<jule::Ptr<_1e24d1e8d_Directive>>& _49739_directives, jule::Ptr<_1d42b43cc_Token> _49770_tok) {
	if (_1e310ba51_isUnsafe(&(*_self_))) {
		return;;
	};
	jule::Ptr<_1e24d1e8d_Directive> _50213_d = _1e312e601_findDirective(_49739_directives,jule::Str("deprecated", 10));;
	if ((_50213_d != nullptr)) {
		if ((_50213_d.get()._field_Args.len() == 0LL)) {
			_1e310b116_pushErr(&(*_self_), _49770_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(jule::Str("this code is deprecated", 23))}));
		} else {
			_1e310b116_pushErr(&(*_self_), _49770_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(_50213_d.get()._field_Args[0LL].get()._field_Kind)}));
		};
		_1e310b435_pushSugggestion(&(*_self_), jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1e310908c_Data> _1e31113c4_evalFn(_1e310ab0a_Eval* _self_, jule::Ptr<_1e258b344_Fn> _51329_f, jule::Ptr<_1d42b43cc_Token> _51337_errorToken) {
	if ((!(_1e3211b01_isAccessibleDefine((*_self_)._field_s.ptr(), _51329_f.get()._field_Public,_51329_f.get()._field_Token)))) {
		_1e310b116_pushErr(&(*_self_), _51337_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51329_f.get()._field_Ident)}));
		_1e310b435_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1e311101c_checkDeprecated(&(*_self_), _51329_f.get()._field_Directives,_51337_errorToken);
	jule::Ptr<_1e258dee5_FnIns> _52217_ins = _1e258c994_instance(_51329_f);;
	_1e5c50450_pushReference(&(*_self_), _52217_ins);
	return _1e3110bed_evalFnIns(&(*_self_), _52217_ins);
}



inline void _1e311178c_pushIllegalCycleError(_1e310ab0a_Eval* _self_, jule::Ptr<_1e322a147_Var>& _52741_v1, jule::Ptr<_1e322a147_Var>& _52752_v2, jule::Str& _52767_message) {
	;
	jule::Str _52913_refers_to = _20a354d5e_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_52741_v1.get()._field_Ident),jule::Any(_52752_v2.get()._field_Ident)}));;
	(_52767_message).buffer.insert(0, (((_20a110026_Repeat(jule::Str(" ", 1),4LL) + _52913_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1e3111b44_checkCrossCycle(_1e310ab0a_Eval* _self_, jule::Ptr<_1e322a147_Var>& _53335_v, jule::Str& _53349_message) {
	{
		auto &expr = _53335_v.get()._field_Depends;
		auto it = expr.begin();
		_iter_begin_1e5c57ed5:;
		if (it != expr.end()) {
			jule::Ptr<_1e322a147_Var> &_53416_d = *it;
			{
				if ((_53416_d == (*_self_)._field_owner)) {
					_1e311178c_pushIllegalCycleError(&(*_self_), _53335_v,_53416_d,_53349_message);
					return false;
				};
				if ((!(_1e3111b44_checkCrossCycle(&(*_self_), _53416_d,_53349_message)))) {
					_1e311178c_pushIllegalCycleError(&(*_self_), _53335_v,_53416_d,_53349_message);
					return false;
				};
			}
			_iter_next_1e5c57ed5:;
			++it;
			goto _iter_begin_1e5c57ed5;
		}
		_iter_end_1e5c57ed5:;
	};
	return true;
}



inline jule::Bool _1e3111eeb_checkIllegalCycles(_1e310ab0a_Eval* _self_, jule::Ptr<_1e322a147_Var>& _55242_v, jule::Ptr<_1d42b43cc_Token> _55251_decl_token) {
	jule::Bool _55273_ok = jule::Bool();
	if (((*_self_)._field_owner == nullptr)) {
		_55273_ok = true;
		return _55273_ok;
	};
	if (((*_self_)._field_owner == _55242_v)) {
		_1e310b116_pushErr(&(*_self_), (*_self_)._field_owner.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_owner.get()._field_Ident)}));
		_55273_ok = false;
		return _55273_ok;
	};
	jule::Str _56417_message = jule::Str();;
	if ((!(_1e3111b44_checkCrossCycle(&(*_self_), _55242_v,_56417_message)))) {
		jule::Str _56721_errMsg = _56417_message;;
		_56417_message=jule::Str();
		_1e311178c_pushIllegalCycleError(&(*_self_), (*_self_)._field_owner,_55242_v,_56417_message);
		_56721_errMsg=(_56721_errMsg + _56417_message);
		_1e310b116_pushErr(&(*_self_), _55251_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_56721_errMsg)}));
		_55273_ok = false;
		return _55273_ok;
	};
	(*_self_)._field_owner.get()._field_Depends = jule::alloc_for_append((*_self_)._field_owner.get()._field_Depends,1);(*_self_)._field_owner.get()._field_Depends.__push(_55242_v);;
	_55273_ok = true;
	return _55273_ok;
}



inline jule::Ptr<_1e310908c_Data> _1e31123a3_evalVar(_1e310ab0a_Eval* _self_, jule::Ptr<_1e322a147_Var> _57930_v, jule::Ptr<_1d42b43cc_Token> _57939_errorToken) {
	if ((!(_1e3211b01_isAccessibleDefine((*_self_)._field_s.ptr(), _57930_v.get()._field_Public,_57930_v.get()._field_Token)))) {
		_1e310b116_pushErr(&(*_self_), _57939_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_57930_v.get()._field_Ident)}));
		_1e310b435_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1e311101c_checkDeprecated(&(*_self_), _57930_v.get()._field_Directives,_57939_errorToken);
	_57930_v.get()._field_Used=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1e320d768_Sema>>()) {
			_case_begin_1e5c60bad:;
			{
				jule::Bool _59317_ok = _1e3111eeb_checkIllegalCycles(&(*_self_), _57930_v,_57939_errorToken);;
				if ((!(_59317_ok))) {
					return nullptr;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e31dd89c_scopeChecker>>()) {
			_case_begin_1e5c60c68:;
			{
				if (((!(_57930_v.get()._field_Reference)) || _1e310ba51_isUnsafe(&(*_self_)))) {
					goto _match_end_1e5c60b58;
				};
				jule::Ptr<_1e31dd89c_scopeChecker> _60121_s = (*_self_)._field_lookup.operator jule::Ptr<_1e31dd89c_scopeChecker>();;
				while (((_60121_s.get()._field_owner == nullptr) && (_60121_s.get()._field_parent != nullptr))) {
					{
						_60121_s=_60121_s.get()._field_parent;
					}
				_iter_next_1e5c62cd1:;
				}
				_iter_end_1e5c62cd1:;;
				if ((((_60121_s.get()._field_owner != nullptr) && _60121_s.get()._field_owner.get()._field_Anon) && (_57930_v.get()._field_Scope != _60121_s.get()._field_owner.get()._field_Scope))) {
					_1e310b116_pushErr(&(*_self_), _57939_errorToken,jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75),jule::Slice<jule::Any>::make({jule::Any(_57930_v.get()._field_Ident)}));
				};
			}
		}
		_match_end_1e5c60b58:;
	};
	if ((_57930_v.get()._field_Scope == nullptr)) {
		_1e5c64ec0_pushReference(&(*_self_), _57930_v);
	};
	if (((!(_57930_v.get()._field_CppLinked)) && ((_57930_v.get()._field_Value == nullptr) || (_57930_v.get()._field_Value.get()._field_Data == nullptr)))) {
		if (_57930_v.get()._field_Constant) {
			_1e3222bab_checkTypeVar((*_self_)._field_s, _57930_v,jule::Trait<_1e315091e_Lookup>((*_self_)._field_s, 3));
			if ((_57930_v.get()._field_Value.get()._field_Data == nullptr)) {
				return nullptr;
			};
		};
	};
	if (((_57930_v.get()._field_Kind == nullptr) || (_57930_v.get()._field_Kind.get()._field_Kind == nullptr))) {
		if ((_57930_v.get()._field_Scope != nullptr)) {
			return nullptr;
		};
		_1e3222bab_checkTypeVar((*_self_)._field_s, _57930_v,(*_self_)._field_lookup);
		if (((_57930_v.get()._field_Kind == nullptr) || (_57930_v.get()._field_Kind.get()._field_Kind == nullptr))) {
			return nullptr;
		};
	};
	jule::Ptr<_1e310908c_Data> _64417_d = jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=_57930_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_57930_v.get()._field_Mutable, ._field_Reference=_57930_v.get()._field_Reference, ._field_Lvalue=(!(_57930_v.get()._field_Constant)), ._field_Model=static_cast<jule::Any>(_57930_v), });;
	if ((((!(_57930_v.get()._field_CppLinked)) && _1e322a4ee_IsInitialized(_57930_v.ptr())) && (_57930_v.get()._field_Value.get()._field_Data != nullptr))) {
		_64417_d.get()._field_IsRune=_57930_v.get()._field_Value.get()._field_Data.get()._field_IsRune;
	};
	if ((_57930_v.get()._field_Constant && (_57930_v.get()._field_Value.get()._field_Data.get()._field_Constant != nullptr))) {
		_64417_d.get()._field_Constant=jule::new_ptr<_1e23b4a96_Const>((*(_57930_v.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_64417_d.get()._field_Model=static_cast<jule::Any>(_64417_d.get()._field_Constant);
	};
	if (_1e3109950_IsConst(_64417_d.ptr())) {
		_1e310c090_applyNumericPrefix(&(*_self_), _64417_d);
	};
	return _64417_d;
}



inline jule::Ptr<_1e310908c_Data> _1e311275a_evalTypeAlias(_1e310ab0a_Eval* _self_, jule::Ptr<_1e31341b6_TypeAlias> _66836_ta, jule::Ptr<_1d42b43cc_Token> _66852_errorToken) {
	if ((!(_1e3211b01_isAccessibleDefine((*_self_)._field_s.ptr(), _66836_ta.get()._field_Public,_66836_ta.get()._field_Token)))) {
		_1e310b116_pushErr(&(*_self_), _66852_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_66836_ta.get()._field_Ident)}));
		_1e310b435_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_66836_ta.get()._field_Used=true;
	jule::Trait<_1e313497a_Kind> _67717_kind = _66836_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
	jule::Ptr<_1e310908c_Data> _67817_d = nullptr;;
	{
		auto &_match_expr{ _67717_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e253220d_StructIns>>()) {
			_case_begin_1e5c75d27:;
			{
				_67817_d=_1e3110538__evalStruct(&(*_self_), _67717_kind.operator jule::Ptr<_1e253220d_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e25a038b_Enum>>()) {
			_case_begin_1e5c76377:;
			{
				_67817_d=_1e310e6ad__evalEnum(&(*_self_), _67717_kind.operator jule::Ptr<_1e25a038b_Enum>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e25a1986_TypeEnum>>()) {
			_case_begin_1e5c74e9c:;
			{
				_67817_d=_1e310ed73__evalTypeEnum(&(*_self_), _67717_kind.operator jule::Ptr<_1e25a1986_TypeEnum>());
			}
		}
		else {
			_case_begin_1e5c74d7b:;
			{
				_67817_d=jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=_66836_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind}), ._field_Decl=true, });
				if (_66836_ta.get()._field_CppLinked) {
					_67817_d.get()._field_Kind.get()._field_CppIdent=_66836_ta.get()._field_Ident;
				} else {
					_67817_d.get()._field_Kind.get()._field_CppIdent=_66836_ta.get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
				};
				_67817_d.get()._field_Model=static_cast<jule::Any>(_67817_d.get()._field_Kind);
			}
		}
		_match_end_1e5c74d26:;
	};
	_67817_d.get()._field_Kind.get()._field_Generic=_66836_ta.get()._field_Generic;
	return _67817_d;
}



inline jule::Ptr<_1e310908c_Data> _1e3112b12_evalDef(_1e310ab0a_Eval* _self_, jule::Any _70430_def, jule::Ptr<_1d42b43cc_Token> _70440_ident) {
	{
		auto &_match_expr{ _70430_def };
		
		if (_match_expr.type_is<jule::Ptr<_1e322a147_Var>>()) {
			_case_begin_1e5c78cd6:;
			{
				return _1e31123a3_evalVar(&(*_self_), _70430_def.operator jule::Ptr<_1e322a147_Var>(),_70440_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e25a038b_Enum>>()) {
			_case_begin_1e5c78d4c:;
			{
				return _1e310ea65_evalEnum(&(*_self_), _70430_def.operator jule::Ptr<_1e25a038b_Enum>(),_70440_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e25a1986_TypeEnum>>()) {
			_case_begin_1e5c78db3:;
			{
				return _1e311022a_evalTypeEnum(&(*_self_), _70430_def.operator jule::Ptr<_1e25a1986_TypeEnum>(),_70440_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2505d6e_Struct>>()) {
			_case_begin_1e5c78e3a:;
			{
				return _1e31108e0_evalStruct(&(*_self_), _1e24dd274_instance(_70430_def.operator jule::Ptr<_1e2505d6e_Struct>()),_70440_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e258b344_Fn>>()) {
			_case_begin_1e5c78ea1:;
			{
				jule::Ptr<_1e258b344_Fn> _71521_f = _70430_def.operator jule::Ptr<_1e258b344_Fn>();;
				if ((_71521_f.get()._field_Ident != jule::Str("init", 4))) {
					return _1e31113c4_evalFn(&(*_self_), _71521_f,_70440_ident);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e258dee5_FnIns>>()) {
			_case_begin_1e5c79028:;
			{
				return _1e3110bed_evalFnIns(&(*_self_), _70430_def.operator jule::Ptr<_1e258dee5_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e31341b6_TypeAlias>>()) {
			_case_begin_1e5c790a0:;
			{
				return _1e311275a_evalTypeAlias(&(*_self_), _70430_def.operator jule::Ptr<_1e31341b6_TypeAlias>(),_70440_ident);
			}
		}
		_match_end_1e5c78be8:;
	};
	_1e310b116_pushErr(&(*_self_), _70440_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_70440_ident.get()._field_Kind)}));
	return nullptr;
}



inline jule::Ptr<_1e310908c_Data> _1e3112e20_evalIdent(_1e310ab0a_Eval* _self_, jule::Ptr<_1e251bc20_IdentExpr> _72828_ident) {
	jule::Any _72917_def = _1e310e12a_getDef(&(*_self_), _72828_ident.get()._field_Ident,_72828_ident.get()._field_CppLinked);;
	return _1e3112b12_evalDef(&(*_self_), jule::Any(_72917_def),_72828_ident.get()._field_Token);
}



inline jule::Ptr<_1e310908c_Data> _1e311322d_evalUnary(jule::Ptr<_1e310ab0a_Eval> _self_, jule::Ptr<_1e251c429_UnaryExpr> _73333_u) {
	_1e3126ac1_unaryEval _73417_unary = static__1e3127077_new(_self_);;
	return _1e3128320_eval(&_73417_unary, _73333_u);
}



inline jule::Ptr<_1e310908c_Data> _1e311353b_evalVariadic(jule::Ptr<_1e310ab0a_Eval> _self_, jule::Ptr<_1e251c7d1_VariadicExpr> _73836_v) {
	if ((_73836_v.get()._field_Expr == nullptr)) {
		_1e310b116_pushErr(_self_.ptr(), _73836_v.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e3134da9_TypeKind> _74417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_74417_prefix;
	});;
	jule::Ptr<_1e310908c_Data> _74817_d = _1e3126032_evalExprKind(_self_, _73836_v.get()._field_Expr.get()._field_Kind);;
	if ((_74817_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1e3136c57_Variadicable(_74817_d.get()._field_Kind.ptr())))) {
		_1e310b116_pushErr(_self_.ptr(), _73836_v.get()._field_Token,jule::Str("type @ is not variadicable", 26),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_74817_d.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	jule::Ptr<_1e313da72_Slc> _75813_slc = _1e3137e45_Slc(_74817_d.get()._field_Kind.ptr());;
	_74817_d.get()._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_CppIdent=_75813_slc.get()._field_Elem.get()._field_CppIdent, ._field_Generic=_75813_slc.get()._field_Elem.get()._field_Generic, ._field_Variadic=true, ._field_Kind=_75813_slc.get()._field_Elem.get()._field_Kind});
	return _74817_d;
}



inline jule::Ptr<_1e310908c_Data> _1e3113849_evalUnsafe(jule::Ptr<_1e310ab0a_Eval> _self_, jule::Ptr<_1e251b3e5_UnsafeExpr> _76834_u) {
	jule::Bool _76913_unsafety = _self_.get()._field_unsafety;;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_1e310908c_Data> _77117_d = _1e3126032_evalExprKind(_self_, _76834_u.get()._field_Expr.get()._field_Kind);;
	_self_.get()._field_unsafety=_76913_unsafety;
	return _77117_d;
}



inline jule::Ptr<_1e310908c_Data> _1e3113b57_evalArr(jule::Ptr<_1e310ab0a_Eval> _self_, jule::Ptr<_1e2521560_SliceExpr> _77631_s) {
	jule::Ptr<_1e3140c1c_Arr> _77817_pt = _1e3137bd1_Arr(_self_.get()._field_prefix.ptr());;
	jule::Ptr<_1e3140c1c_Arr> _78017_arr = jule::new_ptr<_1e3140c1c_Arr>(_1e3140c1c_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=_77817_pt.get()._field_Elem});;
	jule::Bool _78617_filled = false;;
	if ((_77631_s.get()._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _77631_s.get()._field_Exprs[1LL].get()._field_Kind };
			
			if (_match_expr.type_is<jule::Ptr<_1e251c7d1_VariadicExpr>>()) {
				_case_begin_1e5c88675:;
				{
					if ((_77631_s.get()._field_Exprs[1LL].get()._field_Kind.operator jule::Ptr<_1e251c7d1_VariadicExpr>().get()._field_Expr != nullptr)) {
						goto _match_end_1e5c88620;
					};
					if (_77817_pt.get()._field_Auto) {
						_1e310b116_pushErr(_self_.ptr(), _77631_s.get()._field_Token,jule::Str("auto-sized arrays cannot filled", 31),jule::Slice<jule::Any>());
						return nullptr;
					};
					_78617_filled=true;
					_77631_s.get()._field_Exprs=_77631_s.get()._field_Exprs.slice(0LL,1LL);
				}
			}
			_match_end_1e5c88620:;
		};
	};
	_78017_arr.get()._field_N=static_cast<jule::I64>(_77631_s.get()._field_Exprs.len());
	if ((!(_77817_pt.get()._field_Auto))) {
		if ((_78017_arr.get()._field_N > _77817_pt.get()._field_N)) {
			_1e310b116_pushErr(_self_.ptr(), _77631_s.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else if ((_78017_arr.get()._field_N < _77817_pt.get()._field_N)) {
			_78017_arr.get()._field_N=_77817_pt.get()._field_N;
		};
	};
	jule::Ptr<_1e2586262_ArrayExprModel> _81517_model = jule::new_ptr<_1e2586262_ArrayExprModel>(_1e2586262_ArrayExprModel{._field_Kind=_78017_arr, });;
	if (_78617_filled) {
		_81517_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL,2LL);
	} else {
		_81517_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL,_77631_s.get()._field_Exprs.len());
	};
	jule::Ptr<_1e3134da9_TypeKind> _82417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_78017_arr.get()._field_Elem;
	{
		auto &expr = _77631_s.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1e5c8d438:;
		if (it != expr.end()) {
			jule::Ptr<_1e2519ba7_Expr> _82621_elem = *it;
			{
				jule::Ptr<_1e310908c_Data> _82721_d = _1e3126032_evalExprKind(_self_, _82621_elem.get()._field_Kind);;
				if ((_82721_d == nullptr)) {
					goto _iter_next_1e5c8d438;
				};
				_1e3216e8b_checkAssignType(_self_.get()._field_s, false,_78017_arr.get()._field_Elem,_82721_d,_77631_s.get()._field_Token);
				_81517_model.get()._field_Elems = jule::alloc_for_append(_81517_model.get()._field_Elems,1);_81517_model.get()._field_Elems.__push(_82721_d.get()._field_Model);;
			}
			_iter_next_1e5c8d438:;
			++it;
			goto _iter_begin_1e5c8d438;
		}
		_iter_end_1e5c8d438:;
	};
	_self_.get()._field_prefix=_82417_prefix;
	if (_78617_filled) {
		_81517_model.get()._field_Elems = jule::alloc_for_append(_81517_model.get()._field_Elems,1);_81517_model.get()._field_Elems.__push(nullptr);;
	};
	return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_78017_arr, 11)}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_81517_model), });
}



inline jule::Ptr<_1e310908c_Data> _1e31140a8_evalExpSlc(jule::Ptr<_1e310ab0a_Eval> _self_, jule::Ptr<_1e2521560_SliceExpr> _85134_s, jule::Ptr<_1e3134da9_TypeKind> _85153_t, jule::Any _85171_first) {
	jule::Ptr<_1e313da72_Slc> _85217_slc = jule::new_ptr<_1e313da72_Slc>(_1e313da72_Slc{._field_Elem=_85153_t});;
	jule::Ptr<_1e2584cdd_SliceExprModel> _85617_model = jule::new_ptr<_1e2584cdd_SliceExprModel>(_1e2584cdd_SliceExprModel{._field_ElemKind=_85153_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL,_85134_s.get()._field_Exprs.len())});;
	if ((_85171_first != nullptr)) {
		_85617_model.get()._field_Elems = jule::alloc_for_append(_85617_model.get()._field_Elems,1);_85617_model.get()._field_Elems.__push(_85171_first);;
		_85134_s.get()._field_Exprs=_85134_s.get()._field_Exprs.slice(1LL);
	};
	jule::Ptr<_1e3134da9_TypeKind> _86517_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_85217_slc.get()._field_Elem;
	{
		auto &expr = _85134_s.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1e5c93bd0:;
		if (it != expr.end()) {
			jule::Ptr<_1e2519ba7_Expr> _86721_elem = *it;
			{
				jule::Ptr<_1e310908c_Data> _86821_d = _1e3126032_evalExprKind(_self_, _86721_elem.get()._field_Kind);;
				if ((_86821_d == nullptr)) {
					goto _iter_next_1e5c93bd0;
				};
				_1e3216e8b_checkAssignType(_self_.get()._field_s, false,_85217_slc.get()._field_Elem,_86821_d,_85134_s.get()._field_Token);
				_85617_model.get()._field_Elems = jule::alloc_for_append(_85617_model.get()._field_Elems,1);_85617_model.get()._field_Elems.__push(_86821_d.get()._field_Model);;
			}
			_iter_next_1e5c93bd0:;
			++it;
			goto _iter_begin_1e5c93bd0;
		}
		_iter_end_1e5c93bd0:;
	};
	_self_.get()._field_prefix=_86517_prefix;
	return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_85217_slc, 8)}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_85617_model), });
}



inline jule::Ptr<_1e310908c_Data> _1e31143b6_evalSliceExpr(jule::Ptr<_1e310ab0a_Eval> _self_, jule::Ptr<_1e2521560_SliceExpr> _88637_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_1e3137bd1_Arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1e5c96c38:;
				{
					return _1e3113b57_evalArr(_self_, _88637_s);
				}
			}
			else if ((_1e3137e45_Slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1e5c96cb0:;
				{
					jule::Ptr<_1e313da72_Slc> _89225_pt = _1e3137e45_Slc(_self_.get()._field_prefix.ptr());;
					return _1e31140a8_evalExpSlc(_self_, _88637_s,_89225_pt.get()._field_Elem,nullptr);
				}
			}
			_match_end_1e5c96b17:;
		};
	};
	jule::Ptr<_1e3134da9_TypeKind> _89717_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	if ((_88637_s.get()._field_Exprs.len() == 0LL)) {
		_1e310b116_pushErr(_self_.ptr(), _88637_s.get()._field_Token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e310908c_Data> _90517_first_elem = _1e3126032_evalExprKind(_self_, _88637_s.get()._field_Exprs[0LL].get()._field_Kind);;
	if ((_90517_first_elem == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1e310908c_Data> _91017_d = _1e31140a8_evalExpSlc(_self_, _88637_s,_90517_first_elem.get()._field_Kind,_90517_first_elem.get()._field_Model);;
	_self_.get()._field_prefix=_89717_prefix;
	return _91017_d;
}



inline void _1e3114707_checkIntegerIndexingByData(_1e310ab0a_Eval* _self_, jule::Ptr<_1e310908c_Data>& _91650_d, jule::Ptr<_1d42b43cc_Token> _91660_token) {
	jule::Str _91713_err_key = _1e31319ee_checkDataForIntegerIndexing(_91650_d);;
	{
		auto &_match_expr{ _91713_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1e5c9c029:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_1e5c9cbc8:;
			{
				_1e310b116_pushErr(&(*_self_), _91660_token,_91713_err_key,jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_91650_d.get()._field_Kind.ptr()))}));
			}
		}
		else {
			_case_begin_1e5c9c3d1:;
			{
				_1e310b116_pushErr(&(*_self_), _91660_token,_91713_err_key,jule::Slice<jule::Any>());
			}
		}
		_match_end_1e5c9c304:;
	};
}



inline void _1e3114ad1_indexingPtr(_1e310ab0a_Eval* _self_, jule::Ptr<_1e310908c_Data>& _92835_d, jule::Ptr<_1e310908c_Data>& _92850_index, jule::Ptr<_1e2521e01_IndexingExpr>& _92865_i) {
	_1e3114707_checkIntegerIndexingByData(&(*_self_), _92850_index,_92865_i.get()._field_Token);
	jule::Ptr<_1e3141679_Ptr> _93117_ptr = _1e3137494_Ptr(_92835_d.get()._field_Kind.ptr());;
	{
		
		if (_1e314214c_IsUnsafe(_93117_ptr.ptr())) {
			_case_begin_1e5c9ed40:;
			{
				_1e310b116_pushErr(&(*_self_), _92865_i.get()._field_Token,jule::Str("unsafe pointers are not supports indexing", 41),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1e310ba51_isUnsafe(&(*_self_))))) {
			_case_begin_1e5c9eda6:;
			{
				_1e310b116_pushErr(&(*_self_), _92865_i.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
			}
		}
		_match_end_1e5c9ebdb:;
	};
	_92835_d.get()._field_Kind=_93117_ptr.get()._field_Elem;
}



inline void _1e3114e99_indexingArr(_1e310ab0a_Eval* _self_, jule::Ptr<_1e310908c_Data>& _94335_d, jule::Ptr<_1e310908c_Data>& _94350_index, jule::Ptr<_1e2521e01_IndexingExpr>& _94365_i) {
	jule::Ptr<_1e3140c1c_Arr> _94417_arr = _1e3137bd1_Arr(_94335_d.get()._field_Kind.ptr());;
	_94335_d.get()._field_Kind=_94417_arr.get()._field_Elem;
	_1e3114707_checkIntegerIndexingByData(&(*_self_), _94350_index,_94365_i.get()._field_Token);
	if ((_1e3109950_IsConst(_94350_index.ptr()) && (_1e257cad8_AsF64(_94350_index.get()._field_Constant.ptr()) >= static_cast<jule::F64>(_94417_arr.get()._field_N)))) {
		_1e310b116_pushErr(&(*_self_), _94365_i.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
	};
}



inline void _1e3115362_indexingSlc(_1e310ab0a_Eval* _self_, jule::Ptr<_1e310908c_Data>& _95235_d, jule::Ptr<_1e310908c_Data>& _95250_index, jule::Ptr<_1e2521e01_IndexingExpr>& _95265_i) {
	jule::Ptr<_1e313da72_Slc> _95317_slc = _1e3137e45_Slc(_95235_d.get()._field_Kind.ptr());;
	_95235_d.get()._field_Kind=_95317_slc.get()._field_Elem;
	_1e3114707_checkIntegerIndexingByData(&(*_self_), _95250_index,_95265_i.get()._field_Token);
	if ((!(_1e3109950_IsConst(_95250_index.ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ _95235_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1e2584cdd_SliceExprModel>>()) {
			_case_begin_1e5ca5582:;
			{
				jule::Ptr<_1e2584cdd_SliceExprModel> _96321_m = _95235_d.get()._field_Model.operator jule::Ptr<_1e2584cdd_SliceExprModel>();;
				jule::F64 _96417_indx = _1e257cad8_AsF64(_95250_index.get()._field_Constant.ptr());;
				if ((_96417_indx >= static_cast<jule::F64>(_96321_m.get()._field_Elems.len()))) {
					_1e310b116_pushErr(&(*_self_), _95265_i.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					_95235_d.get()._field_Model=_96321_m.get()._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_96417_indx))];
					_95235_d.get()._field_Decl=true;
				};
			}
		}
		_match_end_1e5ca57d5:;
	};
}



inline void _1e311572a_indexingMap(_1e310ab0a_Eval* _self_, jule::Ptr<_1e310908c_Data>& _97435_d, jule::Ptr<_1e310908c_Data>& _97450_index, jule::Ptr<_1e2521e01_IndexingExpr>& _97469_i) {
	if ((_97450_index == nullptr)) {
		return;;
	};
	jule::Ptr<_1e3140128_Map> _97817_m = _1e31388e6_Map(_97435_d.get()._field_Kind.ptr());;
	_1e30e495c_assignTypeChecker _97917_atc = _1e30e495c_assignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_97817_m.get()._field_Key, ._field_d=_97450_index, ._field_errorToken=_97469_i.get()._field_Token};;
	_1e30e5ad4_check(&_97917_atc);
	_97435_d.get()._field_Kind=_97817_m.get()._field_Val;
}



inline void _1e3115ae3_indexingStr(_1e310ab0a_Eval* _self_, jule::Ptr<_1e310908c_Data>& _98935_d, jule::Ptr<_1e310908c_Data>& _98950_index, jule::Ptr<_1e2521e01_IndexingExpr>& _98965_i) {
	;
	_98935_d.get()._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("u8", 2)), 6)});
	if ((_98950_index == nullptr)) {
		return;;
	};
	_1e3114707_checkIntegerIndexingByData(&(*_self_), _98950_index,_98965_i.get()._field_Token);
	if ((!(_1e3109950_IsConst(_98950_index.ptr())))) {
		_98935_d.get()._field_Constant=nullptr;
		return;;
	};
	if (_1e3109950_IsConst(_98935_d.ptr())) {
		jule::Ptr<_1d42b43cc_Token> _100517_errorToken = _98965_i.get()._field_Token;;
		jule::I64 _100617_j = _1e257c610_AsI64(_98950_index.get()._field_Constant.ptr());;
		jule::Str _100717_s = _1e257c137_ReadStr(_98935_d.get()._field_Constant.ptr());;
		if ((static_cast<jule::I64>(_100617_j) >= _100717_s.len())) {
			_1e310b116_pushErr(&(*_self_), _100517_errorToken,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else {
			_1e257d0d3_SetU64(_98935_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_100717_s[_100617_j])));
		};
	};
}



inline void _1e3115eab_toIndexing(_1e310ab0a_Eval* _self_, jule::Ptr<_1e310908c_Data>& _101634_d, jule::Ptr<_1e310908c_Data>& _101649_index, jule::Ptr<_1e2521e01_IndexingExpr>& _101668_i) {
	{
		
		if ((_1e3137494_Ptr(_101634_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5cb06be:;
			{
				_1e3114ad1_indexingPtr(&(*_self_), _101634_d,_101649_index,_101668_i);
				return;;
			}
		}
		else if ((_1e3137bd1_Arr(_101634_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5cb0746:;
			{
				_1e3114e99_indexingArr(&(*_self_), _101634_d,_101649_index,_101668_i);
				return;;
			}
		}
		else if ((_1e3137e45_Slc(_101634_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5cb07bd:;
			{
				_1e3115362_indexingSlc(&(*_self_), _101634_d,_101649_index,_101668_i);
				return;;
			}
		}
		else if ((_1e31388e6_Map(_101634_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5cb0845:;
			{
				_1e311572a_indexingMap(&(*_self_), _101634_d,_101649_index,_101668_i);
				return;;
			}
		}
		else if ((_1e3136ebb_Prim(_101634_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5cb08bc:;
			{
				jule::Ptr<_1e3139881_Prim> _103117_prim = _1e3136ebb_Prim(_101634_d.get()._field_Kind.ptr());;
				{
					
					if (_1e313cab5_IsStr(_103117_prim.ptr())) {
						_case_begin_1e5cb499d:;
						{
							_1e3115ae3_indexingStr(&(*_self_), _101634_d,_101649_index,_101668_i);
							return;;
						}
					}
					_match_end_1e5cb4904:;
				};
			}
		}
		_match_end_1e5cb056a:;
	};
	_1e310b116_pushErr(&(*_self_), _101668_i.get()._field_Token,jule::Str("type @ is not support indexing", 30),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_101634_d.get()._field_Kind.ptr()))}));
}



inline jule::Bool _1e311642e_pushGenericsFromExprSubIdent(jule::Ptr<_1e310ab0a_Eval> _self_, jule::Ptr<_1e251d4b3_SubIdentExpr>& _104153_sexpr, jule::Slice<jule::Ptr<_1e2515686_TypeDecl>>& _104214_generics, jule::Ptr<_1e2519ba7_Expr>& _104242_expr) {
	jule::Ptr<_1e251639b_SubIdentTypeDecl> _104317_t = jule::new_ptr<_1e251639b_SubIdentTypeDecl>();;
	if ((!(_1e31327be_pushSubIdentFromExpr(static_cast<jule::Any>(_104153_sexpr),_104317_t)))) {
		_1e310b116_pushErr(_self_.ptr(), _104242_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	};
	_104214_generics = jule::alloc_for_append(_104214_generics,1);_104214_generics.__push(jule::new_ptr<_1e2515686_TypeDecl>(_1e2515686_TypeDecl{._field_Kind=static_cast<jule::Any>(_104317_t)}));;
	return true;
}



inline jule::Bool _1e31167e7_pushGenericsFromData(jule::Ptr<_1e310ab0a_Eval> _self_, jule::Slice<jule::Ptr<_1e2515686_TypeDecl>>& _105245_generics, jule::Ptr<_1e2519ba7_Expr>& _105273_expr) {
	{
		auto &_match_expr{ _105273_expr.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e251c429_UnaryExpr>>()) {
			_case_begin_1e5cb7ebd:;
			{
				jule::Ptr<_1e310908c_Data> _105721_d = _1e311322d_evalUnary(_self_, _105273_expr.get()._field_Kind.operator jule::Ptr<_1e251c429_UnaryExpr>());;
				if ((!(_105721_d.get()._field_Decl))) {
					_1e310b116_pushErr(_self_.ptr(), _105273_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return false;
				};
				_105245_generics = jule::alloc_for_append(_105245_generics,1);_105245_generics.__push(jule::new_ptr<_1e2515686_TypeDecl>(_1e2515686_TypeDecl{._field_Token=_105273_expr.get()._field_Token, ._field_Kind=(*(((jule::Any*)((&(_105721_d.get()._field_Kind.get()._field_Kind))))))}));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2515686_TypeDecl>>()) {
			_case_begin_1e5cb8034:;
			{
				_105245_generics = jule::alloc_for_append(_105245_generics,1);_105245_generics.__push(_105273_expr.get()._field_Kind.operator jule::Ptr<_1e2515686_TypeDecl>());;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e251d4b3_SubIdentExpr>>()) {
			_case_begin_1e5cb809a:;
			{
				jule::Ptr<_1e251d4b3_SubIdentExpr> _106921_sexpr = _105273_expr.get()._field_Kind.operator jule::Ptr<_1e251d4b3_SubIdentExpr>();;
				return _1e311642e_pushGenericsFromExprSubIdent(_self_, _106921_sexpr,_105245_generics,_105273_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e251bc20_IdentExpr>>()) {
			_case_begin_1e5cb88a3:;
			{
				jule::Ptr<_1e251bc20_IdentExpr> _107221_ident = _105273_expr.get()._field_Kind.operator jule::Ptr<_1e251bc20_IdentExpr>();;
				_105245_generics = jule::alloc_for_append(_105245_generics,1);_105245_generics.__push(jule::new_ptr<_1e2515686_TypeDecl>(_1e2515686_TypeDecl{._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1e2515c4c_IdentTypeDecl>(_1e2515c4c_IdentTypeDecl{._field_Token=_107221_ident.get()._field_Token, ._field_Ident=_107221_ident.get()._field_Ident, ._field_CppLinked=_107221_ident.get()._field_CppLinked, }))}));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e251a834_TupleExpr>>()) {
			_case_begin_1e5cb8919:;
			{
				{
					auto &expr = _105273_expr.get()._field_Kind.operator jule::Ptr<_1e251a834_TupleExpr>().get()._field_Expr;
					auto it = expr.begin();
					_iter_begin_1e5cbccb4:;
					if (it != expr.end()) {
						jule::Ptr<_1e2519ba7_Expr> _108125_texpr = *it;
						{
							if ((!(_1e31167e7_pushGenericsFromData(_self_, _105245_generics,_108125_texpr)))) {
								return false;
							};
						}
						_iter_next_1e5cbccb4:;
						++it;
						goto _iter_begin_1e5cbccb4;
					}
					_iter_end_1e5cbccb4:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e251d040_NsSelectionExpr>>()) {
			_case_begin_1e5cb8980:;
			{
				jule::Ptr<_1e251d040_NsSelectionExpr> _108721_ns = _105273_expr.get()._field_Kind.operator jule::Ptr<_1e251d040_NsSelectionExpr>();;
				jule::Ptr<_1e2515c4c_IdentTypeDecl> _108821_decl = jule::new_ptr<_1e2515c4c_IdentTypeDecl>(_1e2515c4c_IdentTypeDecl{._field_Token=_108721_ns.get()._field_Ident, ._field_Ident=_108721_ns.get()._field_Ident.get()._field_Kind, });;
				_105245_generics = jule::alloc_for_append(_105245_generics,1);_105245_generics.__push(jule::new_ptr<_1e2515686_TypeDecl>(_1e2515686_TypeDecl{._field_Token=_108821_decl.get()._field_Token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1e2516753_NamespaceTypeDecl>(_1e2516753_NamespaceTypeDecl{._field_Idents=_108721_ns.get()._field_Ns, ._field_Kind=jule::new_ptr<_1e2515686_TypeDecl>(_1e2515686_TypeDecl{._field_Token=_108821_decl.get()._field_Token, ._field_Kind=static_cast<jule::Any>(_108821_decl)})}))}));;
			}
		}
		else {
			_case_begin_1e5cb7d9c:;
			{
				_1e310b116_pushErr(_self_.ptr(), _105273_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_1e5cb7c04:;
	};
	return true;
}



inline jule::Ptr<_1e310908c_Data> _1e3116b27_evalIdentDeclFromIndexing(jule::Ptr<_1e310ab0a_Eval> _self_, jule::Ptr<_1e2521e01_IndexingExpr>& _110950_i) {
	jule::Ptr<_1e2515686_TypeDecl> _111017_tdecl = jule::new_ptr<_1e2515686_TypeDecl>();;
	jule::Ptr<_1e2515c4c_IdentTypeDecl> _111117_decl = nullptr;;
	{
		auto &_match_expr{ _110950_i.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e251bc20_IdentExpr>>()) {
			_case_begin_1e5cc2417:;
			{
				jule::Ptr<_1e251bc20_IdentExpr> _111421_expr = _110950_i.get()._field_Expr.get()._field_Kind.operator jule::Ptr<_1e251bc20_IdentExpr>();;
				_111117_decl=jule::new_ptr<_1e2515c4c_IdentTypeDecl>(_1e2515c4c_IdentTypeDecl{._field_Token=_111421_expr.get()._field_Token, ._field_Ident=_111421_expr.get()._field_Ident, ._field_CppLinked=_111421_expr.get()._field_CppLinked, });
				_111017_tdecl.get()._field_Kind=static_cast<jule::Any>(_111117_decl);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e251d040_NsSelectionExpr>>()) {
			_case_begin_1e5cc247d:;
			{
				jule::Ptr<_1e251d040_NsSelectionExpr> _112221_expr = _110950_i.get()._field_Expr.get()._field_Kind.operator jule::Ptr<_1e251d040_NsSelectionExpr>();;
				_111117_decl=jule::new_ptr<_1e2515c4c_IdentTypeDecl>(_1e2515c4c_IdentTypeDecl{._field_Token=_112221_expr.get()._field_Ident, ._field_Ident=_112221_expr.get()._field_Ident.get()._field_Kind, });
				_111017_tdecl.get()._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1e2516753_NamespaceTypeDecl>(_1e2516753_NamespaceTypeDecl{._field_Idents=_112221_expr.get()._field_Ns, ._field_Kind=jule::new_ptr<_1e2515686_TypeDecl>(_1e2515686_TypeDecl{._field_Token=_111117_decl.get()._field_Token, ._field_Kind=static_cast<jule::Any>(_111117_decl)})}));
			}
		}
		else {
			_case_begin_1e5cc23a1:;
			{
				_1e310b116_pushErr(_self_.ptr(), _110950_i.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1e5cc234b:;
	};
	if ((!(_1e31167e7_pushGenericsFromData(_self_, _111117_decl.get()._field_Generics,_110950_i.get()._field_Index)))) {
		return nullptr;
	};
	return _1e311ca62_evalType(_self_.ptr(), _111017_tdecl);
}



inline jule::Bool _1e3117089_checkGenericFn(jule::Ptr<_1e310ab0a_Eval> _self_, jule::Ptr<_1e258dee5_FnIns>& _114639_f, jule::Ptr<_1d42b43cc_Token>& _114655_et, jule::Any& _114672_model) {
	jule::Bool _114713_ok = _1e321917a_reloadFnInsTypes(_self_.get()._field_s, _114639_f);;
	_114639_f.get()._field_reloaded=true;
	if ((!(_114713_ok))) {
		return false;
	};
	jule::Ptr<_1e258dee5_FnIns> _115217_existInstance = _1e258cc6e_appendInstance(_114639_f.get()._field_Decl.ptr(), _114639_f);;
	if ((!(_1e32182de_checkConstraintsFn(_self_.get()._field_s, _114639_f,_114655_et,_115217_existInstance)))) {
		return false;
	};
	if ((_115217_existInstance != nullptr)) {
		_114639_f=_115217_existInstance;
		_1e313257c_updateModelToGenericIns(_114672_model,_115217_existInstance);
	} else {
		_1e32259b1_checkFnInsCaller(_self_.get()._field_s, _114639_f,_114655_et);
	};
	return true;
}



inline void _1e31173ca_evalFnGenericFromIndexing(jule::Ptr<_1e310ab0a_Eval> _self_, jule::Ptr<_1e310908c_Data>& _117150_d, jule::Ptr<_1e2521e01_IndexingExpr>& _117165_i) {
	jule::Slice<jule::Ptr<_1e2515686_TypeDecl>> _117217_generics = jule::Slice<jule::Ptr<_1e2515686_TypeDecl>>::alloc(0LL,8LL);;
	if ((!(_1e31167e7_pushGenericsFromData(_self_, _117217_generics,_117165_i.get()._field_Index)))) {
		_117150_d=nullptr;
		return;;
	};
	jule::Ptr<_1e258dee5_FnIns> _117817_f = _1e31381a9_Fn(_117150_d.get()._field_Kind.ptr());;
	jule::I64 _117917_genericsLen = 0LL;;
	if ((_117817_f.get()._field_Decl != nullptr)) {
		_117917_genericsLen=static_cast<jule::I64>(_117817_f.get()._field_Decl.get()._field_Generics.len());
	};
	if ((!(_1e32127c2_checkGenericQuantity(_self_.get()._field_s.ptr(), _117917_genericsLen,static_cast<jule::I64>(_117217_generics.len()),_117165_i.get()._field_Expr.get()._field_Token)))) {
		_117150_d=nullptr;
		return;;
	};
	_117817_f.get()._field_Generics=jule::Slice<jule::Ptr<_1e313367c_InsGeneric>>::alloc(0LL,_117817_f.get()._field_Decl.get()._field_Generics.len());
	{
		auto &expr = _117217_generics;
		auto it = expr.begin();
		_iter_begin_1e5cd31a3:;
		if (it != expr.end()) {
			jule::Ptr<_1e2515686_TypeDecl> _119021_g = *it;
			{
				jule::Ptr<_1e310908c_Data> _119121_k = _1e311ca62_evalType(_self_.ptr(), _119021_g);;
				if ((_119121_k == nullptr)) {
					_117150_d=nullptr;
					return;;
				};
				_117817_f.get()._field_Generics = jule::alloc_for_append(_117817_f.get()._field_Generics,1);_117817_f.get()._field_Generics.__push(jule::new_ptr<_1e313367c_InsGeneric>(_1e313367c_InsGeneric{._field_Kind=_119121_k.get()._field_Kind, }));;
			}
			_iter_next_1e5cd31a3:;
			++it;
			goto _iter_begin_1e5cd31a3;
		}
		_iter_end_1e5cd31a3:;
	};
	if (_1e259037b_IsBuiltin(_117817_f.ptr())) {
		return;;
	};
	if (_1e3117089_checkGenericFn(_self_, _117817_f,_117165_i.get()._field_Expr.get()._field_Token,_117150_d.get()._field_Model)) {
		_117150_d.get()._field_Kind.get()._field_Kind=jule::Trait<_1e313497a_Kind>(_117817_f, 1);
	} else {
		_117150_d=nullptr;
	};
}



inline jule::Ptr<_1e310908c_Data> _1e31176e9_evalIndexing(jule::Ptr<_1e310ab0a_Eval> _self_, jule::Ptr<_1e2521e01_IndexingExpr> _121036_i) {
	jule::Ptr<_1e3134da9_TypeKind> _121117_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_121117_prefix;
	});;
	jule::Ptr<_1e310908c_Data> _121517_d = _1e3126032_evalExprKind(_self_, _121036_i.get()._field_Expr.get()._field_Kind);;
	if ((_121517_d == nullptr)) {
		return nullptr;
	};
	if (_121517_d.get()._field_Decl) {
		return _1e3116b27_evalIdentDeclFromIndexing(_self_, _121036_i);
	};
	if ((_1e31381a9_Fn(_121517_d.get()._field_Kind.ptr()) != nullptr)) {
		_1e31173ca_evalFnGenericFromIndexing(_self_, _121517_d,_121036_i);
		return _121517_d;
	};
	_1e310908c_Data _123017_old_d = (*(_121517_d));;
	jule::Ptr<_1e310908c_Data> _123217_index = _1e3126032_evalExprKind(_self_, _121036_i.get()._field_Index.get()._field_Kind);;
	if ((_123217_index == nullptr)) {
		return nullptr;
	};
	_121517_d.get()._field_Decl=false;
	_1e3115eab_toIndexing(_self_.ptr(), _121517_d,_123217_index,_121036_i);
	if (_1e3109950_IsConst(_121517_d.ptr())) {
		_121517_d.get()._field_Decl=false;
		_121517_d.get()._field_Model=static_cast<jule::Any>(_121517_d.get()._field_Constant);
	} else if (_121517_d.get()._field_Decl) {
		_121517_d.get()._field_Decl=false;
	} else {
		_121517_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e2584eca_IndexingExprModel>(_1e2584eca_IndexingExprModel{._field_Token=_121036_i.get()._field_Token, ._field_Expr=jule::new_ptr<_1e310908c_Data>(_123017_old_d), ._field_Index=_123217_index}));
	};
	return _121517_d;
}



inline std::tuple<jule::Ptr<_1e310908c_Data>,jule::Ptr<_1e310908c_Data>> _1e3117a07_evalSlicingExprs(jule::Ptr<_1e310ab0a_Eval> _self_, jule::Ptr<_1e252250b_SlicingExpr>& _126341_s) {
	jule::Ptr<_1e3134da9_TypeKind> _126417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_126417_prefix;
	});;
	jule::Ptr<_1e310908c_Data> _126817_l = nullptr;;
	jule::Ptr<_1e310908c_Data> _126917_r = nullptr;;
	if ((_126341_s.get()._field_Start != nullptr)) {
		_126817_l=_1e3126032_evalExprKind(_self_, _126341_s.get()._field_Start.get()._field_Kind);
		if ((_126817_l != nullptr)) {
			_1e3114707_checkIntegerIndexingByData(_self_.ptr(), _126817_l,_126341_s.get()._field_Token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		};
	} else {
		_126817_l=jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Constant=static__1e257a575_NewI64(0LL)});
		_126817_l.get()._field_Model=static_cast<jule::Any>(_126817_l.get()._field_Constant);
	};
	if ((_126341_s.get()._field_To != nullptr)) {
		_126917_r=_1e3126032_evalExprKind(_self_, _126341_s.get()._field_To.get()._field_Kind);
		if ((_126917_r != nullptr)) {
			_1e3114707_checkIntegerIndexingByData(_self_.ptr(), _126917_r,_126341_s.get()._field_Token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		};
	};
	return std::make_tuple(_126817_l,_126917_r);
}



inline void _1e3117c7c_slicingArr(_1e310ab0a_Eval* _self_, jule::Ptr<_1e310908c_Data>& _129830_d) {
	jule::Ptr<_1e3134da9_TypeKind> _129917_elemType = _1e3137bd1_Arr(_129830_d.get()._field_Kind.ptr()).get()._field_Elem;;
	_129830_d.get()._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(jule::new_ptr<_1e313da72_Slc>(_1e313da72_Slc{._field_Elem=_129917_elemType}), 8)});
	_129830_d.get()._field_Lvalue=false;
	_129830_d.get()._field_Mutable=(_129830_d.get()._field_Mutable || (!(_1e31362a6_Mutable(_129917_elemType.ptr()))));
}



inline void _1e3118145_slicingStr(_1e310ab0a_Eval* _self_, jule::Ptr<_1e310908c_Data>& _131330_d, jule::Ptr<_1e310908c_Data>& _131341_l, jule::Ptr<_1e310908c_Data>& _131352_r) {
	_131330_d.get()._field_Lvalue=false;
	_131330_d.get()._field_Mutable=true;
	if ((!(_1e3109950_IsConst(_131330_d.ptr())))) {
		return;;
	};
	if (((_131341_l == nullptr) || (_131352_r == nullptr))) {
		_131330_d.get()._field_Constant=nullptr;
		return;;
	};
	if ((_1e3109950_IsConst(_131341_l.ptr()) && _1e3109950_IsConst(_131352_r.ptr()))) {
		jule::I64 _132617_left = _1e257c610_AsI64(_131341_l.get()._field_Constant.ptr());;
		if ((_132617_left < 0LL)) {
			return;;
		};
		jule::Str _133117_s = _1e257c137_ReadStr(_131330_d.get()._field_Constant.ptr());;
		jule::I64 _133221_right = 0LL;;
		if ((_131352_r == nullptr)) {
			_133221_right=static_cast<jule::I64>(static_cast<jule::I64>(_133117_s.len()));
		} else {
			_133221_right=static_cast<jule::I64>(_1e257c610_AsI64(_131352_r.get()._field_Constant.ptr()));
		};
		if ((_132617_left > _133221_right)) {
			return;;
		};
		_1e257d5cd_SetStr(_131330_d.get()._field_Constant.ptr(), _133117_s.slice(_132617_left,_133221_right));
		_131330_d.get()._field_Decl=true;
	} else {
		_131330_d.get()._field_Constant=nullptr;
	};
}



inline void _1e31185a7_checkSlicing(_1e310ab0a_Eval* _self_, jule::Ptr<_1e310908c_Data>& _134936_d, jule::Ptr<_1e310908c_Data>& _134947_l, jule::Ptr<_1e310908c_Data>& _134958_r, jule::Ptr<_1e252250b_SlicingExpr>& _134969_s) {
	{
		
		if ((_1e3137bd1_Arr(_134936_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5ce9571:;
			{
				_1e3117c7c_slicingArr(&(*_self_), _134936_d);
				return;;
			}
		}
		else if ((_1e3137e45_Slc(_134936_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5ce95e8:;
			{
				return;;
			}
		}
		else if ((_1e3136ebb_Prim(_134936_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5ce9670:;
			{
				jule::Ptr<_1e3139881_Prim> _135717_prim = _1e3136ebb_Prim(_134936_d.get()._field_Kind.ptr());;
				{
					
					if (_1e313cab5_IsStr(_135717_prim.ptr())) {
						_case_begin_1e5cebb39:;
						{
							_1e3118145_slicingStr(&(*_self_), _134936_d,_134947_l,_134958_r);
							return;;
						}
					}
					_match_end_1e5ceba90:;
				};
			}
		}
		_match_end_1e5ce943e:;
	};
	_1e310b116_pushErr(&(*_self_), _134969_s.get()._field_Token,jule::Str("type @ is not support slicing", 29),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_134936_d.get()._field_Kind.ptr()))}));
}



inline jule::Ptr<_1e310908c_Data> _1e31188b5_evalSlicing(jule::Ptr<_1e310ab0a_Eval> _self_, jule::Ptr<_1e252250b_SlicingExpr> _136835_s) {
	jule::Ptr<_1e310908c_Data> _136917_d = _1e3126032_evalExprKind(_self_, _136835_s.get()._field_Expr.get()._field_Kind);;
	if ((_136917_d == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1e310908c_Data> _137418_l;;
	jule::Ptr<_1e310908c_Data> _137425_r;;
	std::tie(_137418_l,_137425_r) = _1e3117a07_evalSlicingExprs(_self_, _136835_s);
	if ((_137418_l == nullptr)) {
		return _136917_d;
	};
	_136917_d.get()._field_Decl=false;
	_1e31185a7_checkSlicing(_self_.ptr(), _136917_d,_137418_l,_137425_r,_136835_s);
	if (_1e3109950_IsConst(_136917_d.ptr())) {
		_136917_d.get()._field_Decl=false;
		_136917_d.get()._field_Model=static_cast<jule::Any>(_136917_d.get()._field_Constant);
	} else if (_136917_d.get()._field_Decl) {
		_136917_d.get()._field_Decl=false;
	} else {
		jule::Ptr<_1e258577d_SlicingExprModel> _139221_model = jule::new_ptr<_1e258577d_SlicingExprModel>(_1e258577d_SlicingExprModel{._field_Token=_136835_s.get()._field_Token, ._field_Expr=_136917_d.get()._field_Model, ._field_Left=_137418_l.get()._field_Model, });;
		if ((_137425_r != nullptr)) {
			_139221_model.get()._field_Right=_137425_r.get()._field_Model;
		};
		_136917_d.get()._field_Model=static_cast<jule::Any>(_139221_model);
	};
	return _136917_d;
}



inline void _1e3118c7d_castPtr(_1e310ab0a_Eval* _self_, jule::Ptr<_1e3134da9_TypeKind> _140530_t, jule::Ptr<_1e310908c_Data> _140548_d, jule::Ptr<_1d42b43cc_Token> _140558_errorToken) {
	jule::Ptr<_1e313d115_Sptr> _140613_sptr = _1e3137230_Sptr(_140548_d.get()._field_Kind.ptr());;
	if ((_140613_sptr != nullptr)) {
		if ((!(_1e31355b3_Equals(_1e3137494_Ptr(_140530_t.ptr()).get()._field_Elem, _140613_sptr.get()._field_Elem)))) {
			_1e310b116_pushErr(&(*_self_), _140558_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_140548_d.get()._field_Kind.ptr())),jule::Any(_1e31352a5_Str(_140530_t.ptr()))}));
		};
		return;;
	};
	if ((!(_1e310ba51_isUnsafe(&(*_self_))))) {
		_1e310b116_pushErr(&(*_self_), _140558_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e3139881_Prim> _141913_prim = _1e3136ebb_Prim(_140548_d.get()._field_Kind.ptr());;
	if (((_1e3137494_Ptr(_140548_d.get()._field_Kind.ptr()) == nullptr) && ((_141913_prim == nullptr) || (!(_1e31cd183_IsInt(_1e3139be4_Str(_141913_prim.ptr()))))))) {
		_1e310b116_pushErr(&(*_self_), _140558_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_140548_d.get()._field_Kind.ptr())),jule::Any(_1e31352a5_Str(_140530_t.ptr()))}));
	};
	_140548_d.get()._field_Constant=nullptr;
}



inline void _1e3119146_castStruct(_1e310ab0a_Eval* _self_, jule::Ptr<_1e3134da9_TypeKind> _142733_t, jule::Ptr<_1e310908c_Data> _142751_d, jule::Ptr<_1d42b43cc_Token> _142761_errorToken) {
	jule::Ptr<_1e259d246_Trait> _142817_tr = _1e3138682_Trait(_142751_d.get()._field_Kind.ptr());;
	if ((_142817_tr == nullptr)) {
		_1e310b116_pushErr(&(*_self_), _142761_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_142751_d.get()._field_Kind.ptr())),jule::Any(_1e31352a5_Str(_142733_t.ptr()))}));
		return;;
	};
	jule::Ptr<_1e253220d_StructIns> _143417_s = _1e313841d_Struct(_142733_t.ptr());;
	_1e5d0973a_pushReference(&(*_self_), _143417_s);
	if ((!(_1e24e79ba_IsImplements(_143417_s.get()._field_Decl.ptr(), _142817_tr)))) {
		_1e310b116_pushErr(&(*_self_), _142761_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_142751_d.get()._field_Kind.ptr())),jule::Any(_1e31352a5_Str(_142733_t.ptr()))}));
	};
}



inline void _1e311950e_castRef(_1e310ab0a_Eval* _self_, jule::Ptr<_1e3134da9_TypeKind> _144230_t, jule::Ptr<_1e310908c_Data> _144248_d, jule::Ptr<_1d42b43cc_Token> _144258_errorToken) {
	jule::Ptr<_1e313d115_Sptr> _144317_sptr = _1e3137230_Sptr(_144230_t.ptr());;
	jule::Ptr<_1e3141679_Ptr> _144517_ptr = _1e3137494_Ptr(_144248_d.get()._field_Kind.ptr());;
	if (((_144517_ptr != nullptr) && _1e31355b3_Equals(_144317_sptr.get()._field_Elem, _144517_ptr.get()._field_Elem))) {
		if ((!(_1e310ba51_isUnsafe(&(*_self_))))) {
			_1e310b116_pushErr(&(*_self_), _144258_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1e313841d_Struct(_144317_sptr.get()._field_Elem.ptr()) != nullptr)) {
		_1e3119146_castStruct(&(*_self_), _144317_sptr.get()._field_Elem,_144248_d,_144258_errorToken);
		return;;
	};
	_1e310b116_pushErr(&(*_self_), _144258_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_144248_d.get()._field_Kind.ptr())),jule::Any(_1e31352a5_Str(_144230_t.ptr()))}));
}



inline void _1e31198c7_castSlc(_1e310ab0a_Eval* _self_, jule::Ptr<_1e3134da9_TypeKind> _146330_t, jule::Ptr<_1e310908c_Data> _146348_d, jule::Ptr<_1d42b43cc_Token> _146358_errorToken) {
	if ((_1e3137708_Enum(_146348_d.get()._field_Kind.ptr()) != nullptr)) {
		if (((_1e3136ebb_Prim(_1e3137708_Enum(_146348_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_1e313cab5_IsStr(_1e3136ebb_Prim(_1e3137708_Enum(_146348_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).ptr()))))) {
			_1e310b116_pushErr(&(*_self_), _146358_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_146348_d.get()._field_Kind.ptr())),jule::Any(_1e31352a5_Str(_146330_t.ptr()))}));
			return;;
		};
	} else if (((_1e3136ebb_Prim(_146348_d.get()._field_Kind.ptr()) == nullptr) || (!(_1e313cab5_IsStr(_1e3136ebb_Prim(_146348_d.get()._field_Kind.ptr()).ptr()))))) {
		_1e310b116_pushErr(&(*_self_), _146358_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_146348_d.get()._field_Kind.ptr())),jule::Any(_1e31352a5_Str(_146330_t.ptr()))}));
		return;;
	};
	_146330_t=_1e3137e45_Slc(_146330_t.ptr()).get()._field_Elem;
	jule::Ptr<_1e3139881_Prim> _147513_prim = _1e3136ebb_Prim(_146330_t.ptr());;
	if (((_147513_prim == nullptr) || ((!(_1e313b18a_IsU8(_147513_prim.ptr()))) && (!(_1e313abb2_IsI32(_147513_prim.ptr())))))) {
		_1e310b116_pushErr(&(*_self_), _146358_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_146348_d.get()._field_Kind.ptr())),jule::Any(_1e31352a5_Str(_146330_t.ptr()))}));
	};
}



inline void _1e3119be6_castStr(_1e310ab0a_Eval* _self_, jule::Ptr<_1e310908c_Data> _148130_d, jule::Ptr<_1d42b43cc_Token> _148140_errorToken) {
	if ((_1e3137708_Enum(_148130_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1e25a038b_Enum> _148321_e = _1e3137708_Enum(_148130_d.get()._field_Kind.ptr());;
		if (((_1e3136ebb_Prim(_148321_e.get()._field_Kind.get()._field_Kind.ptr()) != nullptr) && _1e313cab5_IsStr(_1e3136ebb_Prim(_148321_e.get()._field_Kind.get()._field_Kind.ptr()).ptr()))) {
			return;;
		};
	};
	if ((_1e3136ebb_Prim(_148130_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1e3139881_Prim> _149017_prim = _1e3136ebb_Prim(_148130_d.get()._field_Kind.ptr());;
		if (((!(_1e313b18a_IsU8(_149017_prim.ptr()))) && (!(_1e313abb2_IsI32(_149017_prim.ptr()))))) {
			_1e310b116_pushErr(&(*_self_), _148140_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1e31352a5_Str(_148130_d.get()._field_Kind.ptr()))}));
		};
		return;;
	};
	if ((_1e3137e45_Slc(_148130_d.get()._field_Kind.ptr()) == nullptr)) {
		_1e310b116_pushErr(&(*_self_), _148140_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1e31352a5_Str(_148130_d.get()._field_Kind.ptr()))}));
		return;;
	};
	jule::Ptr<_1e3134da9_TypeKind> _150217_t = _1e3137e45_Slc(_148130_d.get()._field_Kind.ptr()).get()._field_Elem;;
	jule::Ptr<_1e3139881_Prim> _150313_prim = _1e3136ebb_Prim(_150217_t.ptr());;
	if (((_150313_prim == nullptr) || ((!(_1e313b18a_IsU8(_150313_prim.ptr()))) && (!(_1e313abb2_IsI32(_150313_prim.ptr())))))) {
		_1e310b116_pushErr(&(*_self_), _148140_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1e31352a5_Str(_148130_d.get()._field_Kind.ptr()))}));
	};
}



inline void _1e311a0ae_castInt(_1e310ab0a_Eval* _self_, jule::Ptr<_1e3134da9_TypeKind> _150930_t, jule::Ptr<_1e310908c_Data> _150948_d, jule::Ptr<_1d42b43cc_Token> _150958_errorToken) {
	if (_1e3109950_IsConst(_150948_d.ptr())) {
		jule::Ptr<_1e3139881_Prim> _151117_prim = _1e3136ebb_Prim(_150930_t.ptr());;
		{
			
			if (_1e31ccb00_IsSigInt(_151117_prim.get()._field_Kind)) {
				_case_begin_1e5d24458:;
				{
					_1e257cd5d_SetI64(_150948_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1e257c610_AsI64(_150948_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1e31ccddb_IsUnsigInt(_151117_prim.get()._field_Kind)) {
				_case_begin_1e5d244d0:;
				{
					_1e257d0d3_SetU64(_150948_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1e257c874_AsU64(_150948_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1e5d2439d:;
		};
	};
	if ((_1e3137708_Enum(_150948_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1e25a038b_Enum> _152117_e = _1e3137708_Enum(_150948_d.get()._field_Kind.ptr());;
		if (_1e31cd749_IsNum(_1e31352a5_Str(_152117_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1e3137230_Sptr(_150948_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1e3139881_Prim> _152817_prim = _1e3136ebb_Prim(_150930_t.ptr());;
		if ((!(_1e313c5dc_IsUintptr(_152817_prim.ptr())))) {
			_1e310b116_pushErr(&(*_self_), _150958_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_150948_d.get()._field_Kind.ptr())),jule::Any(_1e31352a5_Str(_150930_t.ptr()))}));
		};
		return;;
	};
	if ((_1e3137494_Ptr(_150948_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1e3139881_Prim> _153517_prim = _1e3136ebb_Prim(_150930_t.ptr());;
		if (_1e313c5dc_IsUintptr(_153517_prim.ptr())) {
		} else if ((!(_1e310ba51_isUnsafe(&(*_self_))))) {
			_1e310b116_pushErr(&(*_self_), _150958_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		} else if ((((((!(_1e313abb2_IsI32(_153517_prim.ptr()))) && (!(_1e313ae26_IsI64(_153517_prim.ptr())))) && (!(_1e313b3ee_IsU16(_153517_prim.ptr())))) && (!(_1e313b663_IsU32(_153517_prim.ptr())))) && (!(_1e313b8c7_IsU64(_153517_prim.ptr()))))) {
			_1e310b116_pushErr(&(*_self_), _150958_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_150948_d.get()._field_Kind.ptr())),jule::Any(_1e31352a5_Str(_150930_t.ptr()))}));
		};
		return;;
	};
	jule::Ptr<_1e3139881_Prim> _154613_prim = _1e3136ebb_Prim(_150948_d.get()._field_Kind.ptr());;
	if (((_154613_prim != nullptr) && _1e31cd749_IsNum(_1e3139be4_Str(_154613_prim.ptr())))) {
		return;;
	};
	_1e310b116_pushErr(&(*_self_), _150958_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_150948_d.get()._field_Kind.ptr())),jule::Any(_1e31352a5_Str(_150930_t.ptr()))}));
}



inline void _1e311a477_castNum(_1e310ab0a_Eval* _self_, jule::Ptr<_1e3134da9_TypeKind> _155430_t, jule::Ptr<_1e310908c_Data> _155448_d, jule::Ptr<_1d42b43cc_Token> _155458_errorToken) {
	if (_1e3109950_IsConst(_155448_d.ptr())) {
		jule::Ptr<_1e3139881_Prim> _155617_prim = _1e3136ebb_Prim(_155430_t.ptr());;
		{
			
			if (_1e31cd4a2_IsFloat(_155617_prim.get()._field_Kind)) {
				_case_begin_1e5d2e8c5:;
				{
					_1e257d853_SetF64(_155448_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1e257cad8_AsF64(_155448_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1e31ccb00_IsSigInt(_155617_prim.get()._field_Kind)) {
				_case_begin_1e5d2e94c:;
				{
					_1e257cd5d_SetI64(_155448_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1e257c610_AsI64(_155448_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1e31ccddb_IsUnsigInt(_155617_prim.get()._field_Kind)) {
				_case_begin_1e5d2e9c4:;
				{
					_1e257d0d3_SetU64(_155448_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1e257c874_AsU64(_155448_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1e5d2e809:;
		};
	};
	if ((_1e3137708_Enum(_155448_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1e25a038b_Enum> _156817_e = _1e3137708_Enum(_155448_d.get()._field_Kind.ptr());;
		if (_1e31cd749_IsNum(_1e31352a5_Str(_156817_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1e3139881_Prim> _157413_prim = _1e3136ebb_Prim(_155448_d.get()._field_Kind.ptr());;
	if (((_157413_prim != nullptr) && _1e31cd749_IsNum(_1e3139be4_Str(_157413_prim.ptr())))) {
		return;;
	};
	_1e310b116_pushErr(&(*_self_), _155458_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_155448_d.get()._field_Kind.ptr())),jule::Any(_1e31352a5_Str(_155430_t.ptr()))}));
}



inline void _1e311a840_castPrim(_1e310ab0a_Eval* _self_, jule::Ptr<_1e3134da9_TypeKind> _158231_t, jule::Ptr<_1e310908c_Data> _158249_d, jule::Ptr<_1d42b43cc_Token> _158259_errorToken) {
	jule::Ptr<_1e3139881_Prim> _158313_prim = _1e3136ebb_Prim(_158231_t.ptr());;
	{
		
		if (_1e313cd29_IsAny(_158313_prim.ptr())) {
			_case_begin_1e5d353ae:;
		}
		else if (_1e313cab5_IsStr(_158313_prim.ptr())) {
			_case_begin_1e5d35931:;
			{
				_1e3119be6_castStr(&(*_self_), _158249_d,_158259_errorToken);
			}
		}
		else if (_1e31cd183_IsInt(_1e3139be4_Str(_158313_prim.ptr()))) {
			_case_begin_1e5d35997:;
			{
				_1e311a0ae_castInt(&(*_self_), _158231_t,_158249_d,_158259_errorToken);
			}
		}
		else if (_1e31cd749_IsNum(_1e3139be4_Str(_158313_prim.ptr()))) {
			_case_begin_1e5d35a0d:;
			{
				_1e311a477_castNum(&(*_self_), _158231_t,_158249_d,_158259_errorToken);
			}
		}
		else {
			_case_begin_1e5d358ba:;
			{
				_1e310b116_pushErr(&(*_self_), _158259_errorToken,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_158231_t.ptr()))}));
			}
		}
		_match_end_1e5d35854:;
	};
}



inline void _1e311ab5e_castConstant(_1e310ab0a_Eval* _self_, jule::Ptr<_1e3134da9_TypeKind>& _159836_t, jule::Ptr<_1e310908c_Data>& _159855_d) {
	if (((_159855_d == nullptr) || (!(_1e3109950_IsConst(_159855_d.ptr()))))) {
		return;;
	};
	jule::Ptr<_1e3139881_Prim> _160213_prim = _1e3136ebb_Prim(_159836_t.ptr());;
	_1e3132071_castConstByType(_160213_prim.get()._field_Kind,_159855_d);
	_159855_d.get()._field_Model=static_cast<jule::Any>(_159855_d.get()._field_Constant);
}



inline void _1e311b027_castTypeEnum(_1e310ab0a_Eval* _self_, jule::Ptr<_1e3134da9_TypeKind>& _160736_t, jule::Ptr<_1e310908c_Data>& _160755_d, jule::Ptr<_1d42b43cc_Token>& _160770_errorToken) {
	jule::I64 _160813_n = (*_self_)._field_s.get()._field_errors.len();;
	if ((!(_1e32173dc_checkTypeCompatibility((*_self_)._field_s, _160755_d.get()._field_Kind,_160736_t,_160770_errorToken)))) {
		(*_self_)._field_s.get()._field_errors=(*_self_)._field_s.get()._field_errors.slice(0LL,_160813_n);
		_1e310b116_pushErr(&(*_self_), _160770_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_160755_d.get()._field_Kind.ptr())),jule::Any(_1e31352a5_Str(_160736_t.ptr()))}));
	};
}



inline jule::Ptr<_1e310908c_Data> _1e311b478_evalCastByTypeNData(_1e310ab0a_Eval* _self_, jule::Ptr<_1e3134da9_TypeKind> _161542_t, jule::Ptr<_1e310908c_Data> _161560_d, jule::Ptr<_1d42b43cc_Token> _161574_errorToken) {
	if (((_161560_d != nullptr) && _161560_d.get()._field_Decl)) {
		_1e310b116_pushErr(&(*_self_), _161574_errorToken,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	{
		
		if (((_1e3136ebb_Prim(_161560_d.get()._field_Kind.ptr()) != nullptr) && _1e313cd29_IsAny(_1e3136ebb_Prim(_161560_d.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1e5d3e176:;
			{
				if ((_1e3137708_Enum(_161542_t.ptr()) != nullptr)) {
					_1e310b116_pushErr(&(*_self_), _161574_errorToken,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
					_1e310b435_pushSugggestion(&(*_self_), jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>());
				} else if ((_1e313796c_TypeEnum(_161542_t.ptr()) != nullptr)) {
					_1e310b116_pushErr(&(*_self_), _161574_errorToken,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
				};
			}
		}
		else if ((_1e313796c_TypeEnum(_161560_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5d3d4d8:;
			{
				_1e311b027_castTypeEnum(&(*_self_), _161542_t,_161560_d,_161574_errorToken);
			}
		}
		else if ((_1e3137494_Ptr(_161542_t.ptr()) != nullptr)) {
			_case_begin_1e5d3d54e:;
			{
				_1e3118c7d_castPtr(&(*_self_), _161542_t,_161560_d,_161574_errorToken);
			}
		}
		else if ((_1e3137230_Sptr(_161542_t.ptr()) != nullptr)) {
			_case_begin_1e5d3d5b5:;
			{
				_1e311950e_castRef(&(*_self_), _161542_t,_161560_d,_161574_errorToken);
			}
		}
		else if ((_1e3137e45_Slc(_161542_t.ptr()) != nullptr)) {
			_case_begin_1e5d3d62b:;
			{
				_1e31198c7_castSlc(&(*_self_), _161542_t,_161560_d,_161574_errorToken);
			}
		}
		else if ((_1e313841d_Struct(_161542_t.ptr()) != nullptr)) {
			_case_begin_1e5d3e2ca:;
			{
				_1e3119146_castStruct(&(*_self_), _161542_t,_161560_d,_161574_errorToken);
			}
		}
		else if ((_1e3136ebb_Prim(_161542_t.ptr()) != nullptr)) {
			_case_begin_1e5d3e341:;
			{
				_1e311a840_castPrim(&(*_self_), _161542_t,_161560_d,_161574_errorToken);
				_1e311ab5e_castConstant(&(*_self_), _161542_t,_161560_d);
			}
		}
		else {
			_case_begin_1e5d3d472:;
			{
				_1e310b116_pushErr(&(*_self_), _161574_errorToken,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_161542_t.ptr()))}));
				_161560_d=nullptr;
			}
		}
		_match_end_1e5d3d41c:;
	};
	if ((_161560_d == nullptr)) {
		return nullptr;
	};
	_161560_d.get()._field_Mutable=(_161560_d.get()._field_Mutable || ((!(_1e31362a6_Mutable(_161560_d.get()._field_Kind.ptr()))) && _1e31362a6_Mutable(_161542_t.ptr())));
	_161560_d.get()._field_Lvalue=false;
	_161560_d.get()._field_Decl=false;
	if (((_1e3137708_Enum(_161560_d.get()._field_Kind.ptr()) == nullptr) || (!(_1e31355b3_Equals(_1e3137708_Enum(_161560_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind, _161542_t))))) {
		_1e3131537_applyCastKind(_161560_d,_161542_t);
		_161560_d.get()._field_Model.operator jule::Ptr<_1e2584914_CastingExprModel>().get()._field_Token=_161574_errorToken;
	} else {
		_161560_d.get()._field_Kind=_161542_t;
	};
	return _161560_d;
}



inline jule::Ptr<_1e310908c_Data> _1e311b8c9_evalCastT(jule::Ptr<_1e310ab0a_Eval> _self_, jule::Ptr<_1e3134da9_TypeKind>& _166834_t, jule::Ptr<_1e2519ba7_Expr>& _166853_e, jule::Ptr<_1d42b43cc_Token>& _166868_et) {
	jule::Ptr<_1e3134da9_TypeKind> _166917_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_166917_prefix;
	});;
	if ((_1e3137e45_Slc(_166834_t.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _166853_e.get()._field_Kind };
			
			if (_match_expr.type_is<jule::Ptr<_1e2521560_SliceExpr>>()) {
				_case_begin_1e5d4966a:;
				{
					_self_.get()._field_prefix=_166834_t;
				}
			}
			_match_end_1e5d49758:;
		};
	};
	jule::Ptr<_1e310908c_Data> _167817_d = _1e3126032_evalExprKind(_self_, _166853_e.get()._field_Kind);;
	if (((_167817_d == nullptr) || (_self_.get()._field_prefix != nullptr))) {
		return _167817_d;
	};
	return _1e311b478_evalCastByTypeNData(_self_.ptr(), _166834_t,_167817_d,_166868_et);
}



inline jule::Ptr<_1e310908c_Data> _1e311bbd7_evalCast(jule::Ptr<_1e310ab0a_Eval> _self_, jule::Ptr<_1e251cb88_CastExpr> _168532_c) {
	jule::Ptr<_1e3139012_TypeSymbol> _168617_t = _1e2593626_buildType(_168532_c.get()._field_Kind);;
	jule::Bool _168713_ok = _1e321530d_checkType(_self_.get()._field_s, _168617_t,_self_.get()._field_lookup);;
	if ((!(_168713_ok))) {
		return nullptr;
	};
	return _1e311b8c9_evalCastT(_self_, _168617_t.get()._field_Kind,_168532_c.get()._field_Expr,_168532_c.get()._field_Kind.get()._field_Token);
}



inline jule::Ptr<_1e310908c_Data> _1e311bee5_evalNsSelection(_1e310ab0a_Eval* _self_, jule::Ptr<_1e251d040_NsSelectionExpr> _169434_s) {
	jule::Str _169513_path = _1e314c8d8_buildLinkPathByTokens(_169434_s.get()._field_Ns);;
	jule::Ptr<_1e320561c_ImportInfo> _169617_imp = _1e315091e_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1e314ddd4_SelectPackage((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1e320561c_ImportInfo>)>([=](jule::Ptr<_1e320561c_ImportInfo> _169652_imp) mutable -> jule::Bool {
		if (((_169434_s.get()._field_Ns.len() == 1LL) && (_169652_imp.get()._field_Alias == _169513_path))) {
			return true;
		};
		return ((_169652_imp.get()._field_LinkPath == _169513_path) && _1e3208279_isAccessibleViaSelection(_169652_imp.ptr()));
	}));;
	if ((_169617_imp == nullptr)) {
		_1e310b116_pushErr(&(*_self_), _169434_s.get()._field_Ident,jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_169513_path)}));
		return nullptr;
	};
	jule::Trait<_1e315091e_Lookup> _170817_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_1e315091e_Lookup>(_169617_imp, 1);
	;
	_1e310b7dc_disallowBuiltin(&(*_self_));
	jule::Any _171317_def = _1e310e12a_getDef(&(*_self_), _169434_s.get()._field_Ident.get()._field_Kind,false);;
	_1e310b611_allowBuiltin(&(*_self_));
	(*_self_)._field_lookup=_170817_lookup;
	jule::Ptr<_1e310908c_Data> _171617_d = _1e3112b12_evalDef(&(*_self_), jule::Any(_171317_def),_169434_s.get()._field_Ident);;
	return _171617_d;
}



inline jule::Ptr<_1e310908c_Data> _1e311c446_evalStructLitExplicit(jule::Ptr<_1e310ab0a_Eval> _self_, jule::Ptr<_1e253220d_StructIns> _172045_s, jule::Slice<jule::Ptr<_1e2519ba7_Expr>> _172113_exprs, jule::Ptr<_1d42b43cc_Token> _172133_errorToken) {
	jule::Bool _172213_ok = _1e32127c2_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_172045_s.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_172045_s.get()._field_Generics.len()),_172133_errorToken);;
	if ((!(_172213_ok))) {
		return nullptr;
	};
	if (((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_Decl.get()._field_Owner == _172045_s.get()._field_Decl))) {
		_1e310b116_pushErr(_self_.ptr(), _172133_errorToken,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_172045_s.get()._field_Decl.get()._field_Ident)}));
	};
	_1e5d0973a_pushReference(_self_.ptr(), _172045_s);
	_1e311101c_checkDeprecated(_self_.ptr(), _172045_s.get()._field_Decl.get()._field_Directives,_172133_errorToken);
	_1e30ed57b_structLitChecker _173517_slc = _1e30ed57b_structLitChecker{._field_e=_self_, ._field_errorToken=_172133_errorToken, ._field_s=_172045_s, };;
	_1e30eeb21_check(&_173517_slc, _172113_exprs);
	return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_172045_s, 0)}), ._field_Mutable=(!(_self_.get()._field_immutable)), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e258453a_StructLitExprModel>(_1e258453a_StructLitExprModel{._field_Strct=_172045_s, ._field_Args=_173517_slc._field_args})), });
}



inline jule::Ptr<_1e310908c_Data> _1e311c754_evalStructLit(jule::Ptr<_1e310ab0a_Eval> _self_, jule::Ptr<_1e2520152_StructLit> _175437_lit) {
	jule::Ptr<_1e3139012_TypeSymbol> _175517_t = _1e2593626_buildType(_175437_lit.get()._field_Kind);;
	jule::Bool _175613_ok = _1e321530d_checkType(_self_.get()._field_s, _175517_t,_self_.get()._field_lookup);;
	if ((!(_175613_ok))) {
		return nullptr;
	};
	jule::Ptr<_1e253220d_StructIns> _176117_s = _1e313841d_Struct(_175517_t.get()._field_Kind.ptr());;
	if ((_176117_s == nullptr)) {
		if ((_1e3137230_Sptr(_175517_t.get()._field_Kind.ptr()) != nullptr)) {
			_176117_s=_1e313841d_Struct(_1e3137230_Sptr(_175517_t.get()._field_Kind.ptr()).get()._field_Elem.ptr());
			if ((_176117_s != nullptr)) {
				goto _julec_label_eval;
			};
		};
		_1e310b116_pushErr(_self_.ptr(), _175437_lit.get()._field_Kind.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_julec_label_eval:;
	jule::Ptr<_1e310908c_Data> _177417_d = _1e311c446_evalStructLitExplicit(_self_, _176117_s,_175437_lit.get()._field_Exprs,_175437_lit.get()._field_Kind.get()._field_Token);;
	if ((_1e3137230_Sptr(_175517_t.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1e258453a_StructLitExprModel> _177621_model = _177417_d.get()._field_Model.operator jule::Ptr<_1e258453a_StructLitExprModel>();;
		_1e312ee92_makeStructLitAlloc(_177417_d,_177621_model);
	};
	return _177417_d;
}



inline jule::Ptr<_1e310908c_Data> _1e311ca62_evalType(_1e310ab0a_Eval* _self_, jule::Ptr<_1e2515686_TypeDecl> _178231_t) {
	jule::Ptr<_1e3139012_TypeSymbol> _178317_tk = _1e2593626_buildType(_178231_t);;
	jule::Bool _178413_ok = _1e321530d_checkType((*_self_)._field_s, _178317_tk,(*_self_)._field_lookup);;
	if ((!(_178413_ok))) {
		return nullptr;
	};
	return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=_178317_tk.get()._field_Kind, ._field_Model=static_cast<jule::Any>(_178317_tk.get()._field_Kind), ._field_Decl=true, });
}



inline void _1e311cd81_callTypeFn(jule::Ptr<_1e310ab0a_Eval> _self_, jule::Ptr<_1e251de75_FnCallExpr>& _179535_fc, jule::Ptr<_1e310908c_Data>& _179557_d) {
	if ((_179535_fc.get()._field_Args.len() < 1LL)) {
		_1e310b116_pushErr(_self_.ptr(), _179535_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1))}));
	} else if ((_179535_fc.get()._field_Args.len() > 1LL)) {
		_1e310b116_pushErr(_self_.ptr(), _179535_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	if ((_179535_fc.get()._field_Args.len() > 0LL)) {
		jule::Ptr<_1e2519ba7_Expr> _180321_arg = _179535_fc.get()._field_Args[0LL];;
		_179557_d=_1e311b8c9_evalCastT(_self_, _179557_d.get()._field_Kind,_180321_arg,_180321_arg.get()._field_Token);
		return;;
	};
	if ((_179557_d != nullptr)) {
		_179557_d.get()._field_Decl=false;
	};
}



inline void _1e311d1a0_callBuiltinFn(jule::Ptr<_1e310ab0a_Eval> _self_, jule::Ptr<_1e251de75_FnCallExpr>& _181338_fc, jule::Ptr<_1e310908c_Data>& _181360_d) {
	_181360_d=_1e31381a9_Fn(_181360_d.get()._field_Kind.ptr()).get()._field_caller(_self_,_181338_fc,_181360_d);
	if ((_181360_d == nullptr)) {
		return;;
	};
	_181360_d.get()._field_Mutable=true;
}



inline void _1e311d4e1_checkFnOfConcurrentCall(_1e310ab0a_Eval* _self_, jule::Ptr<_1e258dee5_FnIns>& _182143_f, jule::Ptr<_1d42b43cc_Token> _182154_errorToken) {
	if (_1e310ba51_isUnsafe(&(*_self_))) {
		return;;
	};
	{
		auto &expr = _182143_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1e5d675ab:;
		if (it != expr.end()) {
			jule::Ptr<_1e258d126_ParamIns> &_182516_p = *it;
			{
				if (_182516_p.get()._field_Decl.get()._field_Reference) {
					_1e310b116_pushErr(&(*_self_), _182154_errorToken,jule::Str("concurrent calls does not support functions which is has reference parameter(s)", 79),jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1e5d675ab:;
			++it;
			goto _iter_begin_1e5d675ab;
		}
		_iter_end_1e5d675ab:;
	};
}



inline void _1e311d8dc_processExceptionalHandler(_1e310ab0a_Eval* _self_, jule::Ptr<_1e258dee5_FnIns>& _183349_f, jule::Ptr<_1e251de75_FnCallExpr>& _183365_fc, jule::Ptr<_1e310908c_Data>& _183387_d) {
	jule::Bool _183413_resultNeeded = ((!(_1e258b7a6_IsVoid(_183349_f.get()._field_Decl.ptr()))) && ((*_self_)._field_arg || (!((*_self_)._field_ignored))));;
	jule::Ptr<_1e31dd89c_scopeChecker> _183517_csc = nullptr;;
	jule::Ptr<_1e31d6c3b_Scope> _183617_ch = nullptr;;
	jule::Ptr<_1e2584b01_FnCallExprModel> _183817_model = _183387_d.get()._field_Model.operator jule::Ptr<_1e2584b01_FnCallExprModel>();;
	jule::Ptr<_1e31dd89c_scopeChecker> _184217_sc = (*_self_)._field_lookup.operator jule::Ptr<_1e31dd89c_scopeChecker>();;
	_183517_csc=_1e31eddc9_newChildChecker(_184217_sc);
	if (_183413_resultNeeded) {
		_183517_csc.get()._field_result=_183349_f;
	};
	_183617_ch=_1e31e3264_getChild(_184217_sc.ptr());
	_183365_fc.get()._field_Exception.get()._field_Parent=_184217_sc.get()._field_tree;
	_183517_csc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_183517_csc.get()._field_table.get()._field_Vars,1);_183517_csc.get()._field_table.get()._field_Vars.__push(_1e31302d3_buildErrorVar(_183617_ch,_183365_fc));;
	_1e31e362c_checkChildSsc(_184217_sc, _183365_fc.get()._field_Exception,_183617_ch,_183517_csc);
	_183817_model.get()._field_Assigned=_183413_resultNeeded;
	_183817_model.get()._field_Except=_183617_ch;
	if ((_183413_resultNeeded && (_183517_csc.get()._field_result != nullptr))) {
		_1e310b116_pushErr(&(*_self_), _183365_fc.get()._field_Token,jule::Str("assignments requires expression", 31),jule::Slice<jule::Any>());
	};
}



inline void _1e311dc1c_callFn(jule::Ptr<_1e310ab0a_Eval> _self_, jule::Ptr<_1e251de75_FnCallExpr>& _186031_fc, jule::Ptr<_1e310908c_Data>& _186053_d) {
	jule::Ptr<_1e258dee5_FnIns> _186117_f = _1e31381a9_Fn(_186053_d.get()._field_Kind.ptr());;
	if ((_1e310bcb5_isGlobal(_self_.ptr()) && _186117_f.get()._field_Decl.get()._field_Exceptional)) {
		_1e310b116_pushErr(_self_.ptr(), _186031_fc.get()._field_Token,jule::Str("exceptionals are not allowed in global scope", 44),jule::Slice<jule::Any>());
		_1e310b435_pushSugggestion(_self_.ptr(), jule::Str("wrap exceptional with a non-exceptional function", 48),jule::Slice<jule::Any>());
		_186053_d=nullptr;
		return;;
	};
	if (_1e259037b_IsBuiltin(_186117_f.ptr())) {
		_1e311d1a0_callBuiltinFn(_self_, _186031_fc,_186053_d);
		return;;
	};
	if (((!(_1e258ba1a_IsMethod(_186117_f.get()._field_Decl.ptr()))) && _1e314ba3b_hasDirective(_186117_f.get()._field_Decl.get()._field_Directives,jule::Str("test", 4)))) {
		_1e310b116_pushErr(_self_.ptr(), _186031_fc.get()._field_Token,jule::Str("you cannot call test functions", 30),jule::Slice<jule::Any>());
		_186053_d=nullptr;
		return;;
	};
	if (((((!(_186053_d.get()._field_Mutable)) && _1e258ba1a_IsMethod(_186117_f.get()._field_Decl.ptr())) && (!(_186117_f.get()._field_Decl.get()._field_Statically))) && _186117_f.get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable)) {
		_1e310b116_pushErr(_self_.ptr(), _186031_fc.get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	} else if (((!(_1e310ba51_isUnsafe(_self_.ptr()))) && _186117_f.get()._field_Decl.get()._field_Unsafety)) {
		_1e310b116_pushErr(_self_.ptr(), _186031_fc.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	jule::Bool _188517_dynamicAnnotation = (((_186117_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_186117_f.get()._field_Generics.len() == 0LL)) && (_186117_f.get()._field_Params.len() > 0LL));;
	if (_188517_dynamicAnnotation) {
		_186117_f.get()._field_Generics=jule::Slice<jule::Ptr<_1e313367c_InsGeneric>>::alloc(_186117_f.get()._field_Decl.get()._field_Generics.len());
	} else if ((_186117_f.get()._field_Generics.len() != _186117_f.get()._field_Decl.get()._field_Generics.len())) {
		_1e32127c2_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_186117_f.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_186117_f.get()._field_Generics.len()),_186031_fc.get()._field_Token);
		_186053_d=nullptr;
		return;;
	};
	jule::Ptr<_1e320d768_Sema> _189417_old = _self_.get()._field_s;;
	if ((_186117_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_self_.get()._field_s=_186117_f.get()._field_Decl.get()._field_Owner.get()._field_sema;
	};
	__JULE_DEFER({
		if ((_189417_old != _self_.get()._field_s)) {
			_189417_old.get()._field_errors=jule::append(_189417_old.get()._field_errors,_self_.get()._field_s.get()._field_errors);
			_self_.get()._field_s.get()._field_errors=nullptr;
		};
		_self_.get()._field_s=_189417_old;
	});;
	if ((!(_188517_dynamicAnnotation))) {
		if ((!(_186117_f.get()._field_reloaded))) {
			jule::Bool _190921_ok = _1e321917a_reloadFnInsTypes(_self_.get()._field_s, _186117_f);;
			_186117_f.get()._field_reloaded=true;
			if ((!(_190921_ok))) {
				_186053_d=nullptr;
				return;;
			};
		};
		jule::Ptr<_1e258dee5_FnIns> _191621_existInstance = _1e258cc6e_appendInstance(_186117_f.get()._field_Decl.ptr(), _186117_f);;
		if ((_191621_existInstance != nullptr)) {
			_186117_f=_191621_existInstance;
		};
	} else {
		_1e3217a6e_buildFnNonGenericTypeKinds(_self_.get()._field_s, _186117_f);
	};
	_1e30eab72_fnCallArgChecker _192417_fcac = _1e30eab72_fnCallArgChecker{._field_e=_self_, ._field_args=_186031_fc.get()._field_Args, ._field_errorToken=_186031_fc.get()._field_Token, ._field_f=_186117_f, ._field_dynamicAnnotation=_188517_dynamicAnnotation, };;
	jule::Bool _193117_ok = false;;
	if ((_186117_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		std::tie(_189417_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_189417_old);
		_193117_ok=_1e30ed03c_check(&_192417_fcac);
		std::tie(_189417_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_189417_old);
	} else {
		_193117_ok=_1e30ed03c_check(&_192417_fcac);
	};
	if (_188517_dynamicAnnotation) {
		if ((!(_193117_ok))) {
			_186053_d=nullptr;
			return;;
		};
		if ((!(_1e3117089_checkGenericFn(_self_, _186117_f,_186031_fc.get()._field_Token,_186053_d.get()._field_Model)))) {
			_186053_d=nullptr;
			return;;
		};
	};
	jule::Any _195117_callModel = _186053_d.get()._field_Model;;
	if (_1e258b7a6_IsVoid(_186117_f.get()._field_Decl.ptr())) {
		_186053_d=_1e3131735_buildVoidData();
	} else {
		_186053_d.get()._field_Kind=_186117_f.get()._field_Result;
		_186053_d.get()._field_Lvalue=false;
	};
	jule::Ptr<_1e2584b01_FnCallExprModel> _196017_model = jule::new_ptr<_1e2584b01_FnCallExprModel>(_1e2584b01_FnCallExprModel{._field_Token=_186031_fc.get()._field_Token, ._field_Func=_186117_f, ._field_Expr=_195117_callModel, ._field_Args=_192417_fcac._field_argModels, });;
	_186053_d.get()._field_Model=static_cast<jule::Any>(_196017_model);
	_186053_d.get()._field_Mutable=true;
	if (_186117_f.get()._field_Decl.get()._field_Exceptional) {
		{
			
			if (_1e251e2d8_Unhandled(_186031_fc.ptr())) {
				_case_begin_1e5d82c36:;
				{
					_1e310b116_pushErr(_self_.ptr(), _186031_fc.get()._field_Token,jule::Str("exceptionals must be handled", 28),jule::Slice<jule::Any>());
					_1e310b435_pushSugggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47),jule::Slice<jule::Any>());
				}
			}
			else if (_1e251e54c_Ignored(_186031_fc.ptr())) {
				_case_begin_1e5d746c8:;
				{
					goto _match_end_1e5d827b3;
				}
			}
			else {
				_case_begin_1e5d82890:;
				{
					_1e311d8dc_processExceptionalHandler(_self_.ptr(), _186117_f,_186031_fc,_186053_d);
				}
			}
			_match_end_1e5d827b3:;
		};
	} else if ((!(_1e251e2d8_Unhandled(_186031_fc.ptr())))) {
		_1e310b116_pushErr(_self_.ptr(), _186031_fc.get()._field_Token,jule::Str("non-exceptionals cannot handled like exceptionals", 49),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1e310908c_Data> _1e311e02a_evalFnCall(jule::Ptr<_1e310ab0a_Eval> _self_, jule::Ptr<_1e251de75_FnCallExpr> _198634_fc) {
	jule::Ptr<_1e3134da9_TypeKind> _198717_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_198717_prefix;
	});;
	{
		auto &_match_expr{ _198634_fc.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e251bc20_IdentExpr>>()) {
			_case_begin_1e5d85365:;
			{
				if ((_198634_fc.get()._field_Expr.get()._field_Token.get()._field_Kind == jule::Str("error", 5))) {
					return _1e32983d5_builtinCallerError(_self_,_198634_fc);
				};
			}
		}
		_match_end_1e5d85310:;
	};
	jule::Ptr<_1e310908c_Data> _200017_d = _1e3126032_evalExprKind(_self_, _198634_fc.get()._field_Expr.get()._field_Kind);;
	if ((_200017_d == nullptr)) {
		return nullptr;
	};
	if (_200017_d.get()._field_Decl) {
		_1e311cd81_callTypeFn(_self_, _198634_fc,_200017_d);
		return _200017_d;
	};
	if ((_1e31381a9_Fn(_200017_d.get()._field_Kind.ptr()) == nullptr)) {
		_1e310b116_pushErr(_self_.ptr(), _198634_fc.get()._field_Token,jule::Str("attempting to call a non-function", 33),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1e311dc1c_callFn(_self_, _198634_fc,_200017_d);
	return _200017_d;
}



inline jule::Ptr<_1e310908c_Data> _1e311e3d2_evalEnumStatic(_1e310ab0a_Eval* _self_, jule::Ptr<_1e25a038b_Enum> _201937_enm, jule::Ptr<_1d42b43cc_Token> _201949_ident) {
	jule::Ptr<_1e310908c_Data> _202017_d = jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_201937_enm, 3)}), });;
	jule::Ptr<_1e259e896_EnumItem> _202617_item = _1e25a0e4c_FindItem(_201937_enm.ptr(), _201949_ident.get()._field_Kind);;
	if ((_202617_item == nullptr)) {
		_1e310b116_pushErr(&(*_self_), _201949_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_201937_enm.get()._field_Ident),jule::Any(_201949_ident.get()._field_Kind)}));
	} else {
		_202017_d.get()._field_Constant=jule::new_ptr<_1e23b4a96_Const>((*(_202617_item.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_202017_d.get()._field_Model=static_cast<jule::Any>(_202017_d.get()._field_Constant);
		_1e3131cb8_applyCastModelByEnum(_202017_d,_201937_enm);
	};
	return _202017_d;
}



inline jule::Ptr<_1e310908c_Data> _1e311e789_evalTypeEnumStatic(_1e310ab0a_Eval* _self_, jule::Ptr<_1e25a1986_TypeEnum> _203841_enm, jule::Ptr<_1d42b43cc_Token> _203857_ident) {
	jule::Ptr<_1e25a13c0_TypeEnumItem> _203917_item = _1e25a24c0_FindItem(_203841_enm.ptr(), _203857_ident.get()._field_Kind);;
	if ((_203917_item == nullptr)) {
		_1e310b116_pushErr(&(*_self_), _203857_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_203841_enm.get()._field_Ident),jule::Any(_203857_ident.get()._field_Kind)}));
		return nullptr;
	};
	{
		
		if ((_1e3137708_Enum(_203917_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5d8dd30:;
			{
				return _1e310e6ad__evalEnum(&(*_self_), _1e3137708_Enum(_203917_item.get()._field_Kind.get()._field_Kind.ptr()));
			}
		}
		else if ((_1e313796c_TypeEnum(_203917_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5d8e02d:;
			{
				return _1e310ed73__evalTypeEnum(&(*_self_), _1e313796c_TypeEnum(_203917_item.get()._field_Kind.get()._field_Kind.ptr()));
			}
		}
		else if ((_1e313841d_Struct(_203917_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5d8d24c:;
			{
				return _1e3110538__evalStruct(&(*_self_), _1e313841d_Struct(_203917_item.get()._field_Kind.get()._field_Kind.ptr()));
			}
		}
		else {
			_case_begin_1e5d8c49e:;
			{
				jule::Ptr<_1e310908c_Data> _205221_d = jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=_203917_item.get()._field_Kind.get()._field_Kind, ._field_Decl=true, });;
				_205221_d.get()._field_Model=static_cast<jule::Any>(_205221_d.get()._field_Kind);
				return _205221_d;
			}
		}
		_match_end_1e5d8c449:;
	};
}



inline jule::Ptr<_1e310908c_Data> _1e311eb41_evalStructStatic(_1e310ab0a_Eval* _self_, jule::Ptr<_1e253220d_StructIns> _206139_s, jule::Ptr<_1d42b43cc_Token> _206154_ident) {
	jule::Ptr<_1e310908c_Data> _206217_d = jule::new_ptr<_1e310908c_Data>();;
	;
	jule::Ptr<_1e258b344_Fn> _206617_method = _1e250c33c_FindMethod(_206139_s.ptr(), _206154_ident.get()._field_Kind,true);;
	if ((_206617_method != nullptr)) {
		if ((!(_1e3211b01_isAccessibleDefine((*_self_)._field_s.ptr(), _206617_method.get()._field_Public,_206617_method.get()._field_Token)))) {
			_1e310b116_pushErr(&(*_self_), _206154_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_206154_ident.get()._field_Kind)}));
			_1e310b435_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_1e258dee5_FnIns> _207321_ins = _1e258c994_instance(_206617_method);;
		_207321_ins.get()._field_Owner=_206139_s;
		_1e5c50450_pushReference(&(*_self_), _207321_ins);
		_206217_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e2586075_StructStaticIdentExprModel>(_1e2586075_StructStaticIdentExprModel{._field_Structure=_206139_s, ._field_Expr=_206217_d.get()._field_Model, ._field_Method=_207321_ins}));
		_206217_d.get()._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_207321_ins, 1)});
		return _206217_d;
	};
	jule::Ptr<_1e322a147_Var> _208717_sttc = _1e24e629e_FindStatic(_206139_s.get()._field_Decl.ptr(), _206154_ident.get()._field_Kind);;
	if ((_208717_sttc != nullptr)) {
		return _1e31123a3_evalVar(&(*_self_), _208717_sttc,_206154_ident);
	};
	_1e310b116_pushErr(&(*_self_), _206154_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_206139_s.get()._field_Decl.get()._field_Ident),jule::Any(_206154_ident.get()._field_Kind)}));
	return nullptr;
}



inline jule::Ptr<_1e310908c_Data> _1e3120092_evalTraitSubIdent(_1e310ab0a_Eval* _self_, jule::Ptr<_1e310908c_Data> _209640_d, jule::Ptr<_1e259d246_Trait> _209654_trt, jule::Ptr<_1d42b43cc_Token> _209671_ident) {
	jule::Ptr<_1e258b344_Fn> _209717_f = _1e259e0c1_FindMethod(_209654_trt.ptr(), _209671_ident.get()._field_Kind);;
	if ((_209717_f == nullptr)) {
		_1e310b116_pushErr(&(*_self_), _209671_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_209654_trt.get()._field_Ident),jule::Any(_209671_ident.get()._field_Kind)}));
		return nullptr;
	};
	return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e258c994_instance(_209717_f), 1)}), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e258596a_TraitSubIdentExprModel>(_1e258596a_TraitSubIdentExprModel{._field_Token=_209671_ident, ._field_Expr=_209640_d.get()._field_Model, ._field_Method=_209717_f, ._field_Trt=_209654_trt})), });
}



inline jule::Ptr<_1e310908c_Data> _1e312058c_evalStructSubIdent(_1e310ab0a_Eval* _self_, jule::Ptr<_1e310908c_Data> _211541_d, jule::Ptr<_1e253220d_StructIns> _211555_s, jule::Ptr<_1e251d4b3_SubIdentExpr> _211574_si, jule::Bool _211593_ref) {
	jule::Ptr<_1e250d4d6_FieldIns> _211617_f = _1e250ed56_FindField(_211555_s.ptr(), _211574_si.get()._field_Ident.get()._field_Kind);;
	if ((_211617_f != nullptr)) {
		if ((!(_1e3211b01_isAccessibleDefine((*_self_)._field_s.ptr(), _211617_f.get()._field_Decl.get()._field_Public,_211617_f.get()._field_Decl.get()._field_Token)))) {
			_1e310b116_pushErr(&(*_self_), _211574_si.get()._field_Ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_211617_f.get()._field_Decl.get()._field_Ident)}));
			_1e310b435_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_1e2585d88_StructSubIdentExprModel> _212321_model = jule::new_ptr<_1e2585d88_StructSubIdentExprModel>(_1e2585d88_StructSubIdentExprModel{._field_Token=_211574_si.get()._field_Ident, ._field_Expr=jule::new_ptr<_1e310908c_Data>((*(_211541_d))), ._field_ExprKind=_211541_d.get()._field_Kind, ._field_Field=_211617_f});;
		_211541_d.get()._field_Model=static_cast<jule::Any>(_212321_model);
		_211541_d.get()._field_Kind=_211617_f.get()._field_Kind;
		_211541_d.get()._field_Lvalue=true;
		if ((_211617_f.get()._field_Decl.get()._field_Mutable && (!(_211541_d.get()._field_Mutable)))) {
			{
				auto &_match_expr{ (*_self_)._field_lookup };
				
				if (_match_expr.type_is<jule::Ptr<_1e31dd89c_scopeChecker>>()) {
					_case_begin_1e5d9ed1e:;
					{
						jule::Ptr<_1e31dd89c_scopeChecker> _213725_scope = _1e31e19b0_getRoot((*_self_)._field_lookup.operator jule::Ptr<_1e31dd89c_scopeChecker>());;
						_211541_d.get()._field_Mutable=((_213725_scope.get()._field_owner != nullptr) && (_213725_scope.get()._field_owner.get()._field_Owner == _211555_s));
					}
				}
				_match_end_1e5d9ecb9:;
			};
		};
		return _211541_d;
	};
	;
	jule::Ptr<_1e258b344_Fn> _214617_m = _1e250c33c_FindMethod(_211555_s.ptr(), _211574_si.get()._field_Ident.get()._field_Kind,false);;
	if ((_214617_m == nullptr)) {
		_1e310b116_pushErr(&(*_self_), _211574_si.get()._field_Ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_211555_s.get()._field_Decl.get()._field_Ident),jule::Any(_211574_si.get()._field_Ident.get()._field_Kind)}));
		return nullptr;
	};
	if ((!(_1e3211b01_isAccessibleDefine((*_self_)._field_s.ptr(), _214617_m.get()._field_Public,_214617_m.get()._field_Token)))) {
		_1e310b116_pushErr(&(*_self_), _211574_si.get()._field_Ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_214617_m.get()._field_Ident)}));
		_1e310b435_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	if ((_1e258a398_IsRef(_214617_m.get()._field_Params[0LL].ptr()) && (!(_211593_ref)))) {
		_1e310b116_pushErr(&(*_self_), _211574_si.get()._field_Ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>());
	};
	_1e311101c_checkDeprecated(&(*_self_), _214617_m.get()._field_Directives,_211574_si.get()._field_Ident);
	jule::Ptr<_1e258dee5_FnIns> _216217_ins = _1e258c994_instance(_214617_m);;
	_216217_ins.get()._field_Owner=_211555_s;
	_1e5c50450_pushReference(&(*_self_), _216217_ins);
	jule::Ptr<_1e310908c_Data> _216517_model = jule::new_ptr<_1e310908c_Data>((*(_211541_d)));;
	_211541_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e2585d88_StructSubIdentExprModel>(_1e2585d88_StructSubIdentExprModel{._field_Token=_211574_si.get()._field_Ident, ._field_Expr=_216517_model, ._field_ExprKind=_211541_d.get()._field_Kind, ._field_Method=_216217_ins, }));
	_211541_d.get()._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_216217_ins, 1)});
	return _211541_d;
}



inline jule::Ptr<_1e310908c_Data> _1e3120944_evalSliceSubIdent(_1e310ab0a_Eval* _self_, jule::Ptr<_1e310908c_Data> _217640_d, jule::Ptr<_1d42b43cc_Token> _217654_ident) {
	{
		auto &_match_expr{ _217654_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1e5da8883:;
			{
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Mutable=false, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e258663b_CommonSubIdentExprModel>(_1e258663b_CommonSubIdentExprModel{._field_ExprKind=_217640_d.get()._field_Kind, ._field_Expr=_217640_d.get()._field_Model, ._field_Token=_217654_ident, ._field_Ident=jule::Str("len()", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1e5da88e9:;
			{
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Mutable=false, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e258663b_CommonSubIdentExprModel>(_1e258663b_CommonSubIdentExprModel{._field_ExprKind=_217640_d.get()._field_Kind, ._field_Expr=_217640_d.get()._field_Model, ._field_Token=_217654_ident, ._field_Ident=jule::Str("cap()", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1e5da8960:;
			{
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(jule::new_ptr<_1e258dee5_FnIns>(_1e258dee5_FnIns{._field_Params=jule::Slice<jule::Ptr<_1e258d126_ParamIns>>::make({jule::new_ptr<_1e258d126_ParamIns>(_1e258d126_ParamIns{._field_Decl=jule::new_ptr<_1e2589a07_Param>(_1e2589a07_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("int", 3)), 6)})}),jule::new_ptr<_1e258d126_ParamIns>(_1e258d126_ParamIns{._field_Decl=jule::new_ptr<_1e2589a07_Param>(_1e2589a07_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_1e310908c_Data>(jule::Ptr<_1e310ab0a_Eval>&,jule::Ptr<_1e251de75_FnCallExpr>&,jule::Ptr<_1e310908c_Data>&)>(_1e3298094_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_217640_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e258663b_CommonSubIdentExprModel>(_1e258663b_CommonSubIdentExprModel{._field_ExprKind=_217640_d.get()._field_Kind, ._field_Expr=_217640_d.get()._field_Model, ._field_Token=_217654_ident, ._field_Ident=jule::Str("swap", 4)})), });
			}
		}
		else {
			_case_begin_1e5da881c:;
			{
				_1e310b116_pushErr(&(*_self_), _217654_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_217640_d.get()._field_Kind.ptr())),jule::Any(_217654_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1e5da85ca:;
	};
}



inline jule::Ptr<_1e310908c_Data> _1e3120ceb_evalArraySubIdent(_1e310ab0a_Eval* _self_, jule::Ptr<_1e310908c_Data> _223540_d, jule::Ptr<_1d42b43cc_Token> _223554_ident) {
	{
		auto &_match_expr{ _223554_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1e5da9b92:;
			{
				jule::Ptr<_1e23b4a96_Const> _223821_c = static__1e257a575_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1e3137bd1_Arr(_223540_d.get()._field_Kind.ptr()).get()._field_N)));;
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_223821_c), ._field_Constant=_223821_c});
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1e5daea98:;
			{
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(jule::new_ptr<_1e258dee5_FnIns>(_1e258dee5_FnIns{._field_Params=jule::Slice<jule::Ptr<_1e258d126_ParamIns>>::make({jule::new_ptr<_1e258d126_ParamIns>(_1e258d126_ParamIns{._field_Decl=jule::new_ptr<_1e2589a07_Param>(_1e2589a07_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("int", 3)), 6)})}),jule::new_ptr<_1e258d126_ParamIns>(_1e258d126_ParamIns{._field_Decl=jule::new_ptr<_1e2589a07_Param>(_1e2589a07_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_1e310908c_Data>(jule::Ptr<_1e310ab0a_Eval>&,jule::Ptr<_1e251de75_FnCallExpr>&,jule::Ptr<_1e310908c_Data>&)>(_1e3298094_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_223540_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e258663b_CommonSubIdentExprModel>(_1e258663b_CommonSubIdentExprModel{._field_ExprKind=_223540_d.get()._field_Kind, ._field_Expr=_223540_d.get()._field_Model, ._field_Token=_223554_ident, ._field_Ident=jule::Str("swap", 4)})), });
			}
		}
		else {
			_case_begin_1e5dada75:;
			{
				_1e310b116_pushErr(&(*_self_), _223554_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_223540_d.get()._field_Kind.ptr())),jule::Any(_223554_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1e5dad9ba:;
	};
}



inline jule::Ptr<_1e310908c_Data> _1e31211a3_evalMapSubIdent(_1e310ab0a_Eval* _self_, jule::Ptr<_1e310908c_Data> _227938_d, jule::Ptr<_1d42b43cc_Token> _227952_ident) {
	jule::Ptr<_1e3140128_Map> _228017_mapKind = _1e31388e6_Map(_227938_d.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ _227952_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1e5db485b:;
			{
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e258663b_CommonSubIdentExprModel>(_1e258663b_CommonSubIdentExprModel{._field_ExprKind=_227938_d.get()._field_Kind, ._field_Expr=_227938_d.get()._field_Model, ._field_Token=_227952_ident, ._field_Ident=jule::Str("len()", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("clear", 5)) {
			_case_begin_1e5db48c2:;
			{
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(jule::new_ptr<_1e258dee5_FnIns>(_1e258dee5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e310908c_Data>(jule::Ptr<_1e310ab0a_Eval>&,jule::Ptr<_1e251de75_FnCallExpr>&,jule::Ptr<_1e310908c_Data>&)>(_1e3298094_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_227938_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e258663b_CommonSubIdentExprModel>(_1e258663b_CommonSubIdentExprModel{._field_ExprKind=_227938_d.get()._field_Kind, ._field_Expr=_227938_d.get()._field_Model, ._field_Token=_227952_ident, ._field_Ident=jule::Str("clear", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("keys", 4)) {
			_case_begin_1e5db473a:;
			{
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(jule::new_ptr<_1e258dee5_FnIns>(_1e258dee5_FnIns{._field_Result=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(jule::new_ptr<_1e313da72_Slc>(_1e313da72_Slc{._field_Elem=_228017_mapKind.get()._field_Key}), 8)}), ._field_caller=jule::Fn<jule::Ptr<_1e310908c_Data>(jule::Ptr<_1e310ab0a_Eval>&,jule::Ptr<_1e251de75_FnCallExpr>&,jule::Ptr<_1e310908c_Data>&)>(_1e3298094_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_227938_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e258663b_CommonSubIdentExprModel>(_1e258663b_CommonSubIdentExprModel{._field_ExprKind=_227938_d.get()._field_Kind, ._field_Expr=_227938_d.get()._field_Model, ._field_Token=_227952_ident, ._field_Ident=jule::Str("keys", 4)})), });
			}
		}
		else if (_match_expr == jule::Str("values", 6)) {
			_case_begin_1e5db47a1:;
			{
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(jule::new_ptr<_1e258dee5_FnIns>(_1e258dee5_FnIns{._field_Result=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(jule::new_ptr<_1e313da72_Slc>(_1e313da72_Slc{._field_Elem=_228017_mapKind.get()._field_Val}), 8)}), ._field_caller=jule::Fn<jule::Ptr<_1e310908c_Data>(jule::Ptr<_1e310ab0a_Eval>&,jule::Ptr<_1e251de75_FnCallExpr>&,jule::Ptr<_1e310908c_Data>&)>(_1e3298094_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_227938_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e258663b_CommonSubIdentExprModel>(_1e258663b_CommonSubIdentExprModel{._field_ExprKind=_227938_d.get()._field_Kind, ._field_Expr=_227938_d.get()._field_Model, ._field_Token=_227952_ident, ._field_Ident=jule::Str("values", 6)})), });
			}
		}
		else if (_match_expr == jule::Str("has", 3)) {
			_case_begin_1e5db3a03:;
			{
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(jule::new_ptr<_1e258dee5_FnIns>(_1e258dee5_FnIns{._field_Params=jule::Slice<jule::Ptr<_1e258d126_ParamIns>>::make({jule::new_ptr<_1e258d126_ParamIns>(_1e258d126_ParamIns{._field_Decl=jule::new_ptr<_1e2589a07_Param>(_1e2589a07_Param{._field_Ident=jule::Str("key", 3)}), ._field_Kind=_228017_mapKind.get()._field_Key})}), ._field_Result=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_caller=jule::Fn<jule::Ptr<_1e310908c_Data>(jule::Ptr<_1e310ab0a_Eval>&,jule::Ptr<_1e251de75_FnCallExpr>&,jule::Ptr<_1e310908c_Data>&)>(_1e3297ba9_builtinCallerCommon), }), 1)}), ._field_Mutable=_227938_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e258663b_CommonSubIdentExprModel>(_1e258663b_CommonSubIdentExprModel{._field_ExprKind=_227938_d.get()._field_Kind, ._field_Expr=_227938_d.get()._field_Model, ._field_Token=_227952_ident, ._field_Ident=jule::Str("has", 3)})), });
			}
		}
		else if (_match_expr == jule::Str("del", 3)) {
			_case_begin_1e5db3a69:;
			{
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(jule::new_ptr<_1e258dee5_FnIns>(_1e258dee5_FnIns{._field_Params=jule::Slice<jule::Ptr<_1e258d126_ParamIns>>::make({jule::new_ptr<_1e258d126_ParamIns>(_1e258d126_ParamIns{._field_Decl=jule::new_ptr<_1e2589a07_Param>(_1e2589a07_Param{._field_Ident=jule::Str("key", 3)}), ._field_Kind=_228017_mapKind.get()._field_Key})}), ._field_caller=jule::Fn<jule::Ptr<_1e310908c_Data>(jule::Ptr<_1e310ab0a_Eval>&,jule::Ptr<_1e251de75_FnCallExpr>&,jule::Ptr<_1e310908c_Data>&)>(_1e3298094_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_227938_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e258663b_CommonSubIdentExprModel>(_1e258663b_CommonSubIdentExprModel{._field_ExprKind=_227938_d.get()._field_Kind, ._field_Expr=_227938_d.get()._field_Model, ._field_Token=_227952_ident, ._field_Ident=jule::Str("del", 3)})), });
			}
		}
		else {
			_case_begin_1e5db398c:;
			{
				_1e310b116_pushErr(&(*_self_), _227952_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1e314048b_Str(_228017_mapKind.ptr())),jule::Any(_227952_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1e5db38e3:;
	};
}



inline jule::Ptr<_1e310908c_Data> _1e312155a_evalStrSubIdent(_1e310ab0a_Eval* _self_, jule::Ptr<_1e310908c_Data> _240138_d, jule::Ptr<_1d42b43cc_Token> _240152_ident) {
	jule::Ptr<_1e3134da9_TypeKind> _240217_strKind = jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("str", 3)), 6)});;
	{
		auto &_match_expr{ _240152_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1e5dbd117:;
			{
				jule::Ptr<_1e310908c_Data> _240521_sd = jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("int", 3)), 6)}), });;
				if (_1e3109950_IsConst(_240138_d.ptr())) {
					_240521_sd.get()._field_Constant=static__1e257a575_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1e257c137_ReadStr(_240138_d.get()._field_Constant.ptr()).len())));
					_240521_sd.get()._field_Model=static_cast<jule::Any>(_240521_sd.get()._field_Constant);
				} else {
					_240521_sd.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e258663b_CommonSubIdentExprModel>(_1e258663b_CommonSubIdentExprModel{._field_ExprKind=_240138_d.get()._field_Kind, ._field_Expr=_240138_d.get()._field_Model, ._field_Token=_240152_ident, ._field_Ident=jule::Str("len()", 5)}));
				};
				return _240521_sd;
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1e5dbd17d:;
			{
				jule::Ptr<_1e310908c_Data> _242121_sd = jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("int", 3)), 6)}), });;
				if (_1e3109950_IsConst(_240138_d.ptr())) {
					_242121_sd.get()._field_Constant=static__1e257a575_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1e257c137_ReadStr(_240138_d.get()._field_Constant.ptr()).cap())));
					_242121_sd.get()._field_Model=static_cast<jule::Any>(_242121_sd.get()._field_Constant);
				} else {
					_242121_sd.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e258663b_CommonSubIdentExprModel>(_1e258663b_CommonSubIdentExprModel{._field_ExprKind=_240138_d.get()._field_Kind, ._field_Expr=_240138_d.get()._field_Model, ._field_Token=_240152_ident, ._field_Ident=jule::Str("cap()", 5)}));
				};
				return _242121_sd;
			}
		}
		else {
			_case_begin_1e5dbd0a1:;
			{
				_1e310b116_pushErr(&(*_self_), _240152_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_240217_strKind.ptr())),jule::Any(_240152_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1e5dbd007:;
	};
}



inline jule::Ptr<_1e310908c_Data> _1e3121868_evalIntTypeStatic(_1e310ab0a_Eval* _self_, jule::Ptr<_1d42b43cc_Token> _244236_ident) {
	;
	{
		auto &_match_expr{ _244236_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1e5dbed1c:;
			{
				jule::Ptr<_1e23b4a96_Const> _244721_c = static__1e257a575_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1e31c8ba6_Max(jule::Str("int", 3)))));;
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_244721_c), ._field_Constant=_244721_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1e5dc5086:;
			{
				jule::Ptr<_1e23b4a96_Const> _245421_c = static__1e257a575_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1e31c8a74_Min(jule::Str("int", 3)))));;
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_245421_c), ._field_Constant=_245421_c});
			}
		}
		else {
			_case_begin_1e5dc42d8:;
			{
				_1e310b116_pushErr(&(*_self_), _244236_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("int", 3)),jule::Any(_244236_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1e5dc4140:;
	};
}



inline jule::Ptr<_1e310908c_Data> _1e3121b76_evalUintTypeStatic(_1e310ab0a_Eval* _self_, jule::Ptr<_1d42b43cc_Token> _246637_ident) {
	;
	{
		auto &_match_expr{ _246637_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1e5dc79d4:;
			{
				jule::Ptr<_1e23b4a96_Const> _247121_c = static__1e257a81c_NewU64(static_cast<jule::U64>(static_cast<jule::U64>(_1e31c8ba6_Max(jule::Str("uint", 4)))));;
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("uint", 4)), 6)}), ._field_Model=static_cast<jule::Any>(_247121_c), ._field_Constant=_247121_c});
			}
		}
		else {
			_case_begin_1e5dc7c6a:;
			{
				_1e310b116_pushErr(&(*_self_), _246637_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("uint", 4)),jule::Any(_246637_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1e5dc7bc1:;
	};
}



inline jule::Ptr<_1e310908c_Data> _1e3121e84_evalI8TypeStatic(_1e310ab0a_Eval* _self_, jule::Ptr<_1d42b43cc_Token> _248335_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _248335_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1e5dcabe6:;
			{
				jule::Ptr<_1e23b4a96_Const> _249021_c = static__1e257a575_NewI64(127LL);;
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("i8", 2)), 6)}), ._field_Model=static_cast<jule::Any>(_249021_c), ._field_Constant=_249021_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1e5dcac5c:;
			{
				jule::Ptr<_1e23b4a96_Const> _249721_c = static__1e257a575_NewI64(-128LL);;
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("i8", 2)), 6)}), ._field_Model=static_cast<jule::Any>(_249721_c), ._field_Constant=_249721_c});
			}
		}
		else {
			_case_begin_1e5dcab3b:;
			{
				_1e310b116_pushErr(&(*_self_), _248335_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i8", 2)),jule::Any(_248335_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1e5dcaad6:;
	};
}



inline jule::Ptr<_1e310908c_Data> _1e3122292_evalI16TypeStatic(_1e310ab0a_Eval* _self_, jule::Ptr<_1d42b43cc_Token> _250936_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _250936_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1e5dce8cb:;
			{
				jule::Ptr<_1e23b4a96_Const> _251621_c = static__1e257a575_NewI64(32767LL);;
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("i16", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_251621_c), ._field_Constant=_251621_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1e5dce942:;
			{
				jule::Ptr<_1e23b4a96_Const> _252321_c = static__1e257a575_NewI64(-32768LL);;
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("i16", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_252321_c), ._field_Constant=_252321_c});
			}
		}
		else {
			_case_begin_1e5dce821:;
			{
				_1e310b116_pushErr(&(*_self_), _250936_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i16", 3)),jule::Any(_250936_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1e5dce7bb:;
	};
}



inline jule::Ptr<_1e310908c_Data> _1e31225a0_evalI32TypeStatic(_1e310ab0a_Eval* _self_, jule::Ptr<_1d42b43cc_Token> _253536_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _253536_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1e5dd35b1:;
			{
				jule::Ptr<_1e23b4a96_Const> _254221_c = static__1e257a575_NewI64(2147483647LL);;
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("i32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_254221_c), ._field_Constant=_254221_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1e5dd3627:;
			{
				jule::Ptr<_1e23b4a96_Const> _254921_c = static__1e257a575_NewI64(-2147483648LL);;
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("i32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_254921_c), ._field_Constant=_254921_c});
			}
		}
		else {
			_case_begin_1e5dd3506:;
			{
				_1e310b116_pushErr(&(*_self_), _253536_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i32", 3)),jule::Any(_253536_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1e5dd34a1:;
	};
}



inline jule::Ptr<_1e310908c_Data> _1e31228ad_evalI64TypeStatic(_1e310ab0a_Eval* _self_, jule::Ptr<_1d42b43cc_Token> _256136_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _256136_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1e5dd7296:;
			{
				jule::Ptr<_1e23b4a96_Const> _256821_c = static__1e257a575_NewI64(jule::MAX_I64);;
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("i64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_256821_c), ._field_Constant=_256821_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1e5dd730c:;
			{
				jule::Ptr<_1e23b4a96_Const> _257521_c = static__1e257a575_NewI64(jule::MIN_I64);;
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("i64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_257521_c), ._field_Constant=_257521_c});
			}
		}
		else {
			_case_begin_1e5dd71db:;
			{
				_1e310b116_pushErr(&(*_self_), _256136_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i64", 3)),jule::Any(_256136_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1e5dd7186:;
	};
}



inline jule::Ptr<_1e310908c_Data> _1e3122bbb_evalU8TypeStatic(_1e310ab0a_Eval* _self_, jule::Ptr<_1d42b43cc_Token> _258735_ident) {
	;
	;
	{
		auto &_match_expr{ _258735_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1e5ddaa08:;
			{
				jule::Ptr<_1e23b4a96_Const> _259321_c = static__1e257a81c_NewU64(255LLU);;
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("u8", 2)), 6)}), ._field_Model=static_cast<jule::Any>(_259321_c), ._field_Constant=_259321_c});
			}
		}
		else {
			_case_begin_1e5dda002:;
			{
				_1e310b116_pushErr(&(*_self_), _258735_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u8", 2)),jule::Any(_258735_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1e5dda8a4:;
	};
}



inline jule::Ptr<_1e310908c_Data> _1e3122ec9_evalU16TypeStatic(_1e310ab0a_Eval* _self_, jule::Ptr<_1d42b43cc_Token> _260536_ident) {
	;
	;
	{
		auto &_match_expr{ _260536_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1e5ddd3ac:;
			{
				jule::Ptr<_1e23b4a96_Const> _261121_c = static__1e257a81c_NewU64(65535LLU);;
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("u16", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_261121_c), ._field_Constant=_261121_c});
			}
		}
		else {
			_case_begin_1e5ddc8a6:;
			{
				_1e310b116_pushErr(&(*_self_), _260536_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u16", 3)),jule::Any(_260536_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1e5ddd258:;
	};
}



inline jule::Ptr<_1e310908c_Data> _1e31232d7_evalU32TypeStatic(_1e310ab0a_Eval* _self_, jule::Ptr<_1d42b43cc_Token> _262336_ident) {
	;
	;
	{
		auto &_match_expr{ _262336_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1e5de0c61:;
			{
				jule::Ptr<_1e23b4a96_Const> _262921_c = static__1e257a81c_NewU64(4294967295LLU);;
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("u32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_262921_c), ._field_Constant=_262921_c});
			}
		}
		else {
			_case_begin_1e5de025a:;
			{
				_1e310b116_pushErr(&(*_self_), _262336_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u32", 3)),jule::Any(_262336_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1e5de0b0c:;
	};
}



inline jule::Ptr<_1e310908c_Data> _1e31235e5_evalU64TypeStatic(_1e310ab0a_Eval* _self_, jule::Ptr<_1d42b43cc_Token> _264136_ident) {
	;
	;
	{
		auto &_match_expr{ _264136_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1e5de3615:;
			{
				jule::Ptr<_1e23b4a96_Const> _264721_c = static__1e257a81c_NewU64(jule::MAX_U64);;
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("u64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_264721_c), ._field_Constant=_264721_c});
			}
		}
		else {
			_case_begin_1e5de2b0e:;
			{
				_1e310b116_pushErr(&(*_self_), _264136_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u64", 3)),jule::Any(_264136_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1e5de34b1:;
	};
}



inline jule::Ptr<_1e310908c_Data> _1e3123903_evalF32TypeStatic(_1e310ab0a_Eval* _self_, jule::Ptr<_1d42b43cc_Token> _265936_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _265936_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1e5de678e:;
			{
				jule::Ptr<_1e23b4a96_Const> _266721_c = static__1e257b103_NewF64(340282346638528860000000000000000000000.0);;
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_266721_c), ._field_Constant=_266721_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1e5de6805:;
			{
				jule::Ptr<_1e23b4a96_Const> _267421_c = static__1e257b103_NewF64(-340282346638528860000000000000000000000.0);;
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_267421_c), ._field_Constant=_267421_c});
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1e5de686b:;
			{
				jule::Ptr<_1e23b4a96_Const> _268121_c = static__1e257b103_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_268121_c), ._field_Constant=_268121_c});
			}
		}
		else {
			_case_begin_1e5de6690:;
			{
				_1e310b116_pushErr(&(*_self_), _265936_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f32", 3)),jule::Any(_265936_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1e5de6629:;
	};
}



inline jule::Ptr<_1e310908c_Data> _1e3123c11_evalF64TypeStatic(_1e310ab0a_Eval* _self_, jule::Ptr<_1d42b43cc_Token> _269336_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _269336_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1e5deb70b:;
			{
				jule::Ptr<_1e23b4a96_Const> _270121_c = static__1e257b103_NewF64(jule::MAX_F64);;
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_270121_c), ._field_Constant=_270121_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1e5deb772:;
			{
				jule::Ptr<_1e23b4a96_Const> _270821_c = static__1e257b103_NewF64(jule::MIN_F64);;
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_270821_c), ._field_Constant=_270821_c});
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1e5deb7d8:;
			{
				jule::Ptr<_1e23b4a96_Const> _271521_c = static__1e257b103_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_271521_c), ._field_Constant=_271521_c});
			}
		}
		else {
			_case_begin_1e5deb60c:;
			{
				_1e310b116_pushErr(&(*_self_), _269336_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f64", 3)),jule::Any(_269336_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1e5deb596:;
	};
}



inline jule::Ptr<_1e310908c_Data> _1e31240b8_evalPrimStatic(_1e310ab0a_Eval* _self_, jule::Str _272733_kind, jule::Ptr<_1d42b43cc_Token> _272744_ident) {
	{
		auto &_match_expr{ _272733_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1e5e00732:;
			{
				return _1e3121868_evalIntTypeStatic(&(*_self_), _272744_ident);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1e5e00798:;
			{
				return _1e3121b76_evalUintTypeStatic(&(*_self_), _272744_ident);
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1e5e01139:;
			{
				return _1e3121e84_evalI8TypeStatic(&(*_self_), _272744_ident);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1e5e011a0:;
			{
				return _1e3122292_evalI16TypeStatic(&(*_self_), _272744_ident);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1e5e01216:;
			{
				return _1e31225a0_evalI32TypeStatic(&(*_self_), _272744_ident);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1e5e0127c:;
			{
				return _1e31228ad_evalI64TypeStatic(&(*_self_), _272744_ident);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1e5e012e3:;
			{
				return _1e3122bbb_evalU8TypeStatic(&(*_self_), _272744_ident);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1e5e0139d:;
			{
				return _1e3122ec9_evalU16TypeStatic(&(*_self_), _272744_ident);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1e5e01414:;
			{
				return _1e31232d7_evalU32TypeStatic(&(*_self_), _272744_ident);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1e5e0147a:;
			{
				return _1e31235e5_evalU64TypeStatic(&(*_self_), _272744_ident);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1e5e014e1:;
			{
				return _1e3123903_evalF32TypeStatic(&(*_self_), _272744_ident);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1e5e01557:;
			{
				return _1e3123c11_evalF64TypeStatic(&(*_self_), _272744_ident);
			}
		}
		else {
			_case_begin_1e5deec5e:;
			{
				_1e310b116_pushErr(&(*_self_), _272744_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_272733_kind),jule::Any(_272744_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1e5e005bc:;
	};
}



inline jule::Ptr<_1e310908c_Data> _1e3124470_evalTypeStatic(_1e310ab0a_Eval* _self_, jule::Ptr<_1e310908c_Data> _275937_d, jule::Ptr<_1e251d4b3_SubIdentExpr> _275951_si) {
	{
		
		if ((_1e3136ebb_Prim(_275937_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5e059ce:;
			{
				return _1e31240b8_evalPrimStatic(&(*_self_), _1e3139be4_Str(_1e3136ebb_Prim(_275937_d.get()._field_Kind.ptr()).ptr()),_275951_si.get()._field_Ident);
			}
		}
		else if ((_1e3137708_Enum(_275937_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5e05a45:;
			{
				return _1e311e3d2_evalEnumStatic(&(*_self_), _1e3137708_Enum(_275937_d.get()._field_Kind.ptr()),_275951_si.get()._field_Ident);
			}
		}
		else if ((_1e313796c_TypeEnum(_275937_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5e05aab:;
			{
				return _1e311e789_evalTypeEnumStatic(&(*_self_), _1e313796c_TypeEnum(_275937_d.get()._field_Kind.ptr()),_275951_si.get()._field_Ident);
			}
		}
		else if ((_1e313841d_Struct(_275937_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5e05b22:;
			{
				return _1e311eb41_evalStructStatic(&(*_self_), _1e313841d_Struct(_275937_d.get()._field_Kind.ptr()),_275951_si.get()._field_Ident);
			}
		}
		else {
			_case_begin_1e5e05968:;
			{
				_1e310b116_pushErr(&(*_self_), _275951_si.get()._field_Ident,jule::Str("type @ is not supports sub-defines", 34),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_275937_d.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1e5e058ad:;
	};
}



inline jule::Ptr<_1e310908c_Data> _1e3124827_evalObjSubIdent(_1e310ab0a_Eval* _self_, jule::Ptr<_1e310908c_Data> _277538_d, jule::Ptr<_1e251d4b3_SubIdentExpr> _277552_si) {
	if (_1d42b6b71_IsIgnoreIdent(_277552_si.get()._field_Ident.get()._field_Kind)) {
		_1e310b116_pushErr(&(*_self_), _277552_si.get()._field_Ident,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e3134da9_TypeKind> _278117_kind = _277538_d.get()._field_Kind;;
	{
		
		if ((_1e3137494_Ptr(_277538_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5e0b694:;
			{
				jule::Ptr<_1e3141679_Ptr> _278417_ptr = _1e3137494_Ptr(_277538_d.get()._field_Kind.ptr());;
				if (_1e314214c_IsUnsafe(_278417_ptr.ptr())) {
					goto _match_end_1e5e0b540;
				};
				if (((!(_277552_si.get()._field_IsSelf)) && (!(_1e310ba51_isUnsafe(&(*_self_)))))) {
					_1e310b116_pushErr(&(*_self_), _277552_si.get()._field_Ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				_278117_kind=_1e3137494_Ptr(_277538_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else if ((_1e3137230_Sptr(_277538_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5e0b70a:;
			{
				_278117_kind=_1e3137230_Sptr(_277538_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		_match_end_1e5e0b540:;
	};
	{
		
		if ((_1e3138682_Trait(_277538_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5e0e17a:;
			{
				return _1e3120092_evalTraitSubIdent(&(*_self_), _277538_d,_1e3138682_Trait(_277538_d.get()._field_Kind.ptr()),_277552_si.get()._field_Ident);
			}
		}
		else if ((_1e313841d_Struct(_278117_kind.ptr()) != nullptr)) {
			_case_begin_1e5e0e202:;
			{
				jule::Ptr<_1e253220d_StructIns> _280017_s = _1e313841d_Struct(_278117_kind.ptr());;
				if (_1e3130c73_isInstancedStruct(_280017_s)) {
					jule::Bool _280225_usedReferenceElem = (_1e3137230_Sptr(_277538_d.get()._field_Kind.ptr()) != nullptr);;
					return _1e312058c_evalStructSubIdent(&(*_self_), _277538_d,_1e313841d_Struct(_278117_kind.ptr()),_277552_si,_280225_usedReferenceElem);
				};
			}
		}
		else if ((_1e3137e45_Slc(_278117_kind.ptr()) != nullptr)) {
			_case_begin_1e5e0e279:;
			{
				return _1e3120944_evalSliceSubIdent(&(*_self_), _277538_d,_277552_si.get()._field_Ident);
			}
		}
		else if ((_1e3137bd1_Arr(_278117_kind.ptr()) != nullptr)) {
			_case_begin_1e5e0e301:;
			{
				return _1e3120ceb_evalArraySubIdent(&(*_self_), _277538_d,_277552_si.get()._field_Ident);
			}
		}
		else if ((_1e31388e6_Map(_278117_kind.ptr()) != nullptr)) {
			_case_begin_1e5e0e862:;
			{
				return _1e31211a3_evalMapSubIdent(&(*_self_), _277538_d,_277552_si.get()._field_Ident);
			}
		}
		else if ((_1e3136ebb_Prim(_278117_kind.ptr()) != nullptr)) {
			_case_begin_1e5e0e8d9:;
			{
				jule::Ptr<_1e3139881_Prim> _281217_p = _1e3136ebb_Prim(_278117_kind.ptr());;
				{
					auto &_match_expr{ _281217_p.get()._field_Kind };
					
					if (_match_expr == jule::Str("str", 3)) {
						_case_begin_1e5e150d7:;
						{
							return _1e312155a_evalStrSubIdent(&(*_self_), _277538_d,_277552_si.get()._field_Ident);
						}
					}
					_match_end_1e5e14e2d:;
				};
			}
		}
		_match_end_1e5e0e07b:;
	};
	_1e310b116_pushErr(&(*_self_), _277552_si.get()._field_Ident,jule::Str("object @ is not supports sub-defines", 36),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_277538_d.get()._field_Kind.ptr()))}));
	return nullptr;
}



inline jule::Ptr<_1e310908c_Data> _1e3124b35_evalSubIdent(jule::Ptr<_1e310ab0a_Eval> _self_, jule::Ptr<_1e251d4b3_SubIdentExpr> _282236_si) {
	jule::Ptr<_1e3134da9_TypeKind> _282317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_282317_prefix;
	});;
	jule::Ptr<_1e310908c_Data> _282717_d = _1e3126032_evalExprKind(_self_, _282236_si.get()._field_Expr.get()._field_Kind);;
	if ((_282717_d == nullptr)) {
		return nullptr;
	};
	if (_282717_d.get()._field_Decl) {
		return _1e3124470_evalTypeStatic(_self_.ptr(), _282717_d,_282236_si);
	};
	return _1e3124827_evalObjSubIdent(_self_.ptr(), _282717_d,_282236_si);
}



inline jule::Ptr<_1e310908c_Data> _1e3124e43_evalTuple(jule::Ptr<_1e310ab0a_Eval> _self_, jule::Ptr<_1e251a834_TupleExpr> _283933_tup) {
	jule::Ptr<_1e313e600_Tuple> _284017_tupT = jule::new_ptr<_1e313e600_Tuple>();;
	_284017_tupT.get()._field_Types=jule::Slice<jule::Ptr<_1e3134da9_TypeKind>>::alloc(0LL,_283933_tup.get()._field_Expr.len());
	jule::Ptr<_1e2586828_TupleExprModel> _284317_model = jule::new_ptr<_1e2586828_TupleExprModel>(_1e2586828_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_1e310908c_Data>>::alloc(0LL,_283933_tup.get()._field_Expr.len())});;
	jule::Bool _284717_ok = true;;
	{
		auto &expr = _283933_tup.get()._field_Expr;
		auto it = expr.begin();
		_iter_begin_1e5e1a285:;
		if (it != expr.end()) {
			jule::Ptr<_1e2519ba7_Expr> _284821_expr = *it;
			{
				jule::Ptr<_1e310908c_Data> _284921_d = _1e3126032_evalExprKind(_self_, _284821_expr.get()._field_Kind);;
				if ((_284921_d == nullptr)) {
					_284717_ok=false;
					goto _iter_next_1e5e1a285;
				};
				_284017_tupT.get()._field_Types = jule::alloc_for_append(_284017_tupT.get()._field_Types,1);_284017_tupT.get()._field_Types.__push(_284921_d.get()._field_Kind);;
				_284317_model.get()._field_Datas = jule::alloc_for_append(_284317_model.get()._field_Datas,1);_284317_model.get()._field_Datas.__push(_284921_d);;
			}
			_iter_next_1e5e1a285:;
			++it;
			goto _iter_begin_1e5e1a285;
		}
		_iter_end_1e5e1a285:;
	};
	if ((!(_284717_ok))) {
		return nullptr;
	};
	return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_284017_tupT, 9)}), ._field_Model=static_cast<jule::Any>(_284317_model), });
}



inline jule::Ptr<_1e310908c_Data> _1e31252ea_evalMap(jule::Ptr<_1e310ab0a_Eval> _self_, jule::Ptr<_1e3140128_Map> _286831_m, jule::Ptr<_1e25205c5_BraceLit> _286844_lit) {
	jule::Ptr<_1e2585591_MapExprModel> _286917_model = jule::new_ptr<_1e2585591_MapExprModel>(_1e2585591_MapExprModel{._field_KeyKind=_286831_m.get()._field_Key, ._field_ValKind=_286831_m.get()._field_Val, });;
	{
		auto &expr = _286844_lit.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1e5e1d60c:;
		if (it != expr.end()) {
			jule::Ptr<_1e2519ba7_Expr> _287421_expr = *it;
			{
				{
					auto &_match_expr{ _287421_expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_1e25210dc_KeyValPair>>()) {
						_case_begin_1e5e1e146:;
						{
							goto _match_end_1e5e1de26;
						}
					}
					else {
						_case_begin_1e5e1e09c:;
						{
							_1e310b116_pushErr(_self_.ptr(), _286844_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							return nullptr;
						}
					}
					_match_end_1e5e1de26:;
				};
				jule::Ptr<_1e25210dc_KeyValPair> _288421_pair = _287421_expr.get()._field_Kind.operator jule::Ptr<_1e25210dc_KeyValPair>();;
				jule::Ptr<_1e310908c_Data> _288621_key = _1e3126032_evalExprKind(_self_, _288421_pair.get()._field_Key.get()._field_Kind);;
				if ((_288621_key == nullptr)) {
					return nullptr;
				};
				jule::Ptr<_1e310908c_Data> _289121_val = _1e3126032_evalExprKind(_self_, _288421_pair.get()._field_Val.get()._field_Kind);;
				if ((_289121_val == nullptr)) {
					return nullptr;
				};
				_1e3216e8b_checkAssignType(_self_.get()._field_s, false,_286831_m.get()._field_Key,_288621_key,_288421_pair.get()._field_Colon);
				_1e3216e8b_checkAssignType(_self_.get()._field_s, false,_286831_m.get()._field_Val,_289121_val,_288421_pair.get()._field_Colon);
				_286917_model.get()._field_Entries = jule::alloc_for_append(_286917_model.get()._field_Entries,1);_286917_model.get()._field_Entries.__push(jule::new_ptr<_1e25853a4_KeyValPairExprModel>(_1e25853a4_KeyValPairExprModel{._field_Key=_288621_key.get()._field_Model, ._field_Val=_289121_val.get()._field_Model}));;
			}
			_iter_next_1e5e1d60c:;
			++it;
			goto _iter_begin_1e5e1d60c;
		}
		_iter_end_1e5e1d60c:;
	};
	return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_286831_m, 10)}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_286917_model), });
}



inline jule::Ptr<_1e310908c_Data> _1e3125608_evalBraceLit(jule::Ptr<_1e310ab0a_Eval> _self_, jule::Ptr<_1e25205c5_BraceLit> _291236_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_1e5e2390e:;
			{
				_1e310b116_pushErr(_self_.ptr(), _291236_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else if ((_1e31388e6_Map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1e5e23975:;
			{
				return _1e31252ea_evalMap(_self_, _1e31388e6_Map(_self_.get()._field_prefix.ptr()),_291236_lit);
			}
		}
		else if ((_1e313841d_Struct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1e5e239db:;
			{
				return _1e311c446_evalStructLitExplicit(_self_, _1e313841d_Struct(_self_.get()._field_prefix.ptr()),_291236_lit.get()._field_Exprs,_291236_lit.get()._field_Token);
			}
		}
		else {
			_case_begin_1e5e23854:;
			{
				_1e310b116_pushErr(_self_.ptr(), _291236_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1e5e23777:;
	};
}



inline jule::Ptr<_1e310908c_Data> _1e3125916_evalAnonFn(jule::Ptr<_1e310ab0a_Eval> _self_, jule::Ptr<_1e252749a_FnDecl> _292734_decl) {
	_1e3143318_typeChecker _292817_tc = _1e3143318_typeChecker{._field_s=_self_.get()._field_s, ._field_lookup=_self_.get()._field_lookup, };;
	jule::Ptr<_1e258dee5_FnIns> _293217_ins = _1e3149b5a_buildFn(&_292817_tc, _292734_decl);;
	{
		auto &_match_expr{ _self_.get()._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1e31dd89c_scopeChecker>>()) {
			_case_begin_1e5e25526:;
			{
				jule::Ptr<_1e31dd89c_scopeChecker> _293521_sc = _self_.get()._field_lookup.operator jule::Ptr<_1e31dd89c_scopeChecker>();;
				jule::Ptr<_1e31dd89c_scopeChecker> _293621_scc = _1e31eddc9_newChildChecker(_293521_sc);;
				_293621_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1e31dc615_scopeLabel>>>(nullptr);
				_293621_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1e31dca88_scopeGoto>>>(nullptr);
				_293621_scc.get()._field_owner=nullptr;
				_293621_scc.get()._field_childIndex=0LL;
				_293621_scc.get()._field_it=0LLU;
				_293621_scc.get()._field_cse=0LLU;
				_293621_scc.get()._field_owner=_293217_ins;
				_1e3225692_checkFnInsSc(_self_.get()._field_s.ptr(), _293217_ins,_293621_scc);
			}
		}
		else {
			_case_begin_1e5e27bcc:;
			{
				_1e3225c36_checkFnIns(_self_.get()._field_s, _293217_ins);
			}
		}
		_match_end_1e5e27aab:;
	};
	return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_293217_ins, 1)}), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e25851b7_AnonFnExprModel>(_1e25851b7_AnonFnExprModel{._field_Func=_293217_ins, ._field_Global=_1e310bcb5_isGlobal(_self_.ptr())})), });
}



inline jule::Ptr<_1e310908c_Data> _1e3125c24_evalBinop(jule::Ptr<_1e310ab0a_Eval> _self_, jule::Ptr<_1e251d936_BinopExpr> _295833_op) {
	_1e312885e_binaryEval _295917_bs = static__1e3128e25_newPlain(_self_);;
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_1e3139881_Prim> _296217_prim = _1e3136ebb_Prim(_self_.get()._field_prefix.ptr());;
		if (((_296217_prim == nullptr) || (!(_1e31cd749_IsNum(_1e3139be4_Str(_296217_prim.ptr())))))) {
			jule::Ptr<_1e3134da9_TypeKind> _296425_prefix = _self_.get()._field_prefix;;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_296425_prefix;
			});;
			return _1e312e205_eval(&_295917_bs, _295833_op);
		};
	};
	return _1e312e205_eval(&_295917_bs, _295833_op);
}



inline jule::Ptr<_1e310908c_Data> _1e3126032_evalExprKind(jule::Ptr<_1e310ab0a_Eval> _self_, jule::Any _297336_kind) {
	{
		auto &_match_expr{ _297336_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e2519e93_RangeExpr>>()) {
			_case_begin_1e5e2ee59:;
			{
				jule::Ptr<_1e2519e93_RangeExpr> _297621_e = _297336_kind.operator jule::Ptr<_1e2519e93_RangeExpr>();;
				return _1e3126032_evalExprKind(_self_, _297621_e.get()._field_Expr.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e251abdb_LitExpr>>()) {
			_case_begin_1e5e300d0:;
			{
				return _1e310d965_evalLit(_self_.ptr(), _297336_kind.operator jule::Ptr<_1e251abdb_LitExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e251bc20_IdentExpr>>()) {
			_case_begin_1e5e30146:;
			{
				return _1e3112e20_evalIdent(_self_.ptr(), _297336_kind.operator jule::Ptr<_1e251bc20_IdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e251c429_UnaryExpr>>()) {
			_case_begin_1e5e301ac:;
			{
				return _1e311322d_evalUnary(_self_, _297336_kind.operator jule::Ptr<_1e251c429_UnaryExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e251c7d1_VariadicExpr>>()) {
			_case_begin_1e5e30223:;
			{
				return _1e311353b_evalVariadic(_self_, _297336_kind.operator jule::Ptr<_1e251c7d1_VariadicExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e251b3e5_UnsafeExpr>>()) {
			_case_begin_1e5e30289:;
			{
				return _1e3113849_evalUnsafe(_self_, _297336_kind.operator jule::Ptr<_1e251b3e5_UnsafeExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2521560_SliceExpr>>()) {
			_case_begin_1e5e30311:;
			{
				return _1e31143b6_evalSliceExpr(_self_, _297336_kind.operator jule::Ptr<_1e2521560_SliceExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2521e01_IndexingExpr>>()) {
			_case_begin_1e5e303bb:;
			{
				return _1e31176e9_evalIndexing(_self_, _297336_kind.operator jule::Ptr<_1e2521e01_IndexingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e252250b_SlicingExpr>>()) {
			_case_begin_1e5e30432:;
			{
				return _1e31188b5_evalSlicing(_self_, _297336_kind.operator jule::Ptr<_1e252250b_SlicingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e251cb88_CastExpr>>()) {
			_case_begin_1e5e30498:;
			{
				return _1e311bbd7_evalCast(_self_, _297336_kind.operator jule::Ptr<_1e251cb88_CastExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e251d040_NsSelectionExpr>>()) {
			_case_begin_1e5e3050e:;
			{
				return _1e311bee5_evalNsSelection(_self_.ptr(), _297336_kind.operator jule::Ptr<_1e251d040_NsSelectionExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2520152_StructLit>>()) {
			_case_begin_1e5e30586:;
			{
				return _1e311c754_evalStructLit(_self_, _297336_kind.operator jule::Ptr<_1e2520152_StructLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2515686_TypeDecl>>()) {
			_case_begin_1e5e3060d:;
			{
				return _1e311ca62_evalType(_self_.ptr(), _297336_kind.operator jule::Ptr<_1e2515686_TypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e251de75_FnCallExpr>>()) {
			_case_begin_1e5e30685:;
			{
				return _1e311e02a_evalFnCall(_self_, _297336_kind.operator jule::Ptr<_1e251de75_FnCallExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e251d4b3_SubIdentExpr>>()) {
			_case_begin_1e5e3070c:;
			{
				return _1e3124b35_evalSubIdent(_self_, _297336_kind.operator jule::Ptr<_1e251d4b3_SubIdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e251a834_TupleExpr>>()) {
			_case_begin_1e5e30784:;
			{
				return _1e3124e43_evalTuple(_self_, _297336_kind.operator jule::Ptr<_1e251a834_TupleExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e25205c5_BraceLit>>()) {
			_case_begin_1e5e3080b:;
			{
				return _1e3125608_evalBraceLit(_self_, _297336_kind.operator jule::Ptr<_1e25205c5_BraceLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e252749a_FnDecl>>()) {
			_case_begin_1e5e30883:;
			{
				return _1e3125916_evalAnonFn(_self_, _297336_kind.operator jule::Ptr<_1e252749a_FnDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e251d936_BinopExpr>>()) {
			_case_begin_1e5e3090a:;
			{
				return _1e3125c24_evalBinop(_self_, _297336_kind.operator jule::Ptr<_1e251d936_BinopExpr>());
			}
		}
		else {
			_case_begin_1e5e2eb90:;
			{
				return nullptr;
			}
		}
		_match_end_1e5e2eaa2:;
	};
}



inline jule::Ptr<_1e310908c_Data> _1e3126340_eval(jule::Ptr<_1e310ab0a_Eval> _self_, jule::Ptr<_1e2519ba7_Expr> _302128_expr) {
	jule::Ptr<_1e310908c_Data> _302217_d = _1e3126032_evalExprKind(_self_, _302128_expr.get()._field_Kind);;
	if (((_302217_d == nullptr) || (_302217_d.get()._field_Kind == nullptr))) {
		return nullptr;
	};
	{
		
		if ((_1e31381a9_Fn(_302217_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5e404db:;
			{
				jule::Ptr<_1e258dee5_FnIns> _302921_f = _1e31381a9_Fn(_302217_d.get()._field_Kind.ptr());;
				if (_1e259037b_IsBuiltin(_302921_f.ptr())) {
					goto _match_end_1e5e40387;
				};
				if ((_302921_f.get()._field_Generics.len() != _302921_f.get()._field_Decl.get()._field_Generics.len())) {
					_1e321142a_pushErr(_self_.get()._field_s.ptr(), _302128_expr.get()._field_Token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				};
				if (((!(_302921_f.get()._field_Decl.get()._field_Statically)) && _1e258ba1a_IsMethod(_302921_f.get()._field_Decl.ptr()))) {
					_1e321142a_pushErr(_self_.get()._field_s.ptr(), _302128_expr.get()._field_Token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1e5e40387:;
	};
	return _302217_d;
}



inline jule::Ptr<_1e310908c_Data> _1e312664d_evalExpr(jule::Ptr<_1e310ab0a_Eval> _self_, jule::Ptr<_1e2519ba7_Expr> _304732_expr) {
	jule::Ptr<_1e310908c_Data> _304817_d = _1e3126340_eval(_self_, _304732_expr);;
	{
		
		if ((_304817_d == nullptr)) {
			_case_begin_1e5e4415a:;
			{
				return nullptr;
			}
		}
		else if (_304817_d.get()._field_Decl) {
			_case_begin_1e5e441d2:;
			{
				_1e310b116_pushErr(_self_.ptr(), _304732_expr.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else {
			_case_begin_1e5e440c2:;
			{
				return _304817_d;
			}
		}
		_match_end_1e5e4405b:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e310ab0a_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1e3126ac1_unaryEval static__1e3127077_new(jule::Ptr<_1e310ab0a_Eval> _306823_e) {
	return _1e3126ac1_unaryEval{._field_e=_306823_e, };
}



inline void _1e3127253_minus(_1e3126ac1_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1e5e45c94:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1e3136ebb_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5e461d4:;
			{
				if ((!(_1e31cd749_IsNum(_1e31352a5_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1e313841d_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5e4624a:;
			{
				if ((_1e313841d_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Neg == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1e5e458dc:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1e5e45535:;
	};
	if (_1e3109950_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_1e257e744_IsF64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1e5e49418:;
				{
					_1e257d853_SetF64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((-(_1e257c39b_ReadF64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1e257dc93_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1e5e49490:;
				{
					_1e257cd5d_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_1e257b8ea_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1e257e007_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1e5e49517:;
				{
					_1e257cd5d_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_1e257c610_AsI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1e5e492d6:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e2584161_UnaryExprModel>(_1e2584161_UnaryExprModel{._field_Expr=jule::new_ptr<_1e310908c_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _1e312742e_plus(_1e3126ac1_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1e5e4d98e:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1e3136ebb_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5e4ddce:;
			{
				if ((!(_1e31cd749_IsNum(_1e31352a5_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1e313841d_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5e4de45:;
			{
				if ((_1e313841d_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Pos == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1e5e4d5d7:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1e5e4d50a:;
	};
	if (_1e3109950_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_1e257e744_IsF64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1e5e52113:;
				{
					_1e257d853_SetF64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((+(_1e257c39b_ReadF64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1e257dc93_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1e5e5218a:;
				{
					_1e257cd5d_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_1e257b8ea_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1e257e007_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1e5e52212:;
				{
					_1e257cd5d_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_1e257c610_AsI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1e5e51ed1:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e2584161_UnaryExprModel>(_1e2584161_UnaryExprModel{._field_Expr=jule::new_ptr<_1e310908c_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _1e312760a_caret(_1e3126ac1_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1e5e56689:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1e3136ebb_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5e56ac9:;
			{
				if ((!(_1e31cd183_IsInt(_1e31352a5_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1e313841d_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5e56b40:;
			{
				if ((_1e313841d_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_BitNot == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1e5e562d2:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1e5e56205:;
	};
	if (_1e3109950_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_1e257dc93_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1e5e59cec:;
				{
					_1e257cd5d_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((~(_1e257b8ea_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1e257e007_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1e5e59d74:;
				{
					_1e257d0d3_SetU64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::U64>((~(_1e257bb5e_ReadU64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1e5e59bcb:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e2584161_UnaryExprModel>(_1e2584161_UnaryExprModel{._field_Expr=jule::new_ptr<_1e310908c_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _1e31277d6_excl(_1e3126ac1_unaryEval* _self_) {
	jule::Ptr<_1e3139881_Prim> _318713_t = _1e3136ebb_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
	if (((_318713_t == nullptr) || (!(_1e313c851_IsBool(_318713_t.ptr()))))) {
		(*_self_)._field_d=nullptr;
		return;;
	};
	if (_1e3109950_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_1e257e26b_IsBool((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1e5e5e719:;
				{
					_1e257d358_SetBool((*_self_)._field_d.get()._field_Constant.ptr(), (!(_1e257bdc3_ReadBool((*_self_)._field_d.get()._field_Constant.ptr()))));
				}
			}
			_match_end_1e5e5e609:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e2584161_UnaryExprModel>(_1e2584161_UnaryExprModel{._field_Expr=jule::new_ptr<_1e310908c_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _1e31279b2_star(_1e3126ac1_unaryEval* _self_) {
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e2584161_UnaryExprModel>(_1e2584161_UnaryExprModel{._field_Expr=jule::new_ptr<_1e310908c_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
	{
		
		if ((_1e3137494_Ptr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5e6260c:;
			{
				if ((!(_1e310ba51_isUnsafe((*_self_)._field_e.ptr())))) {
					_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				jule::Ptr<_1e3141679_Ptr> _321921_t = _1e3137494_Ptr((*_self_)._field_d.get()._field_Kind.ptr());;
				if (_1e314214c_IsUnsafe(_321921_t.ptr())) {
					(*_self_)._field_d=nullptr;
					return;;
				};
				(*_self_)._field_d.get()._field_Kind=_321921_t.get()._field_Elem;
			}
		}
		else if ((_1e3137230_Sptr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5e62a5d:;
			{
				(*_self_)._field_d.get()._field_Kind=_1e3137230_Sptr((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else {
			_case_begin_1e5e62266:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1e5e62200:;
	};
	(*_self_)._field_d.get()._field_Constant=nullptr;
	(*_self_)._field_d.get()._field_Lvalue=true;
}



inline void _1e3127b8d_amper(_1e3126ac1_unaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1e258453a_StructLitExprModel>>()) {
			_case_begin_1e5e66644:;
			{
				jule::Ptr<_1e258453a_StructLitExprModel> _323921_lit = (*_self_)._field_d.get()._field_Model.operator jule::Ptr<_1e258453a_StructLitExprModel>();;
				_1e312ee92_makeStructLitAlloc((*_self_)._field_d,_323921_lit);
			}
		}
		else {
			_case_begin_1e5e669a7:;
			{
				{
					
					if (_1e314bcd3_canGetPtr((*_self_)._field_d)) {
						_case_begin_1e5e675e0:;
						{
							(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(jule::new_ptr<_1e3141679_Ptr>(_1e3141679_Ptr{._field_Elem=(*_self_)._field_d.get()._field_Kind}), 12)});
							(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e2584161_UnaryExprModel>(_1e2584161_UnaryExprModel{._field_Expr=jule::new_ptr<_1e310908c_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
						}
					}
					else {
						_case_begin_1e5e6704b:;
						{
							(*_self_)._field_d=nullptr;
						}
					}
					_match_end_1e5e66e6e:;
				};
			}
		}
		_match_end_1e5e66930:;
	};
	if (((*_self_)._field_d != nullptr)) {
		(*_self_)._field_d.get()._field_Constant=nullptr;
		(*_self_)._field_d.get()._field_Lvalue=false;
	};
}



inline void _1e3127d69_typeDecl(_1e3126ac1_unaryEval* _self_) {
	_1e3143318_typeChecker _326317_tc = _1e3143318_typeChecker{._field_s=(*_self_)._field_e.get()._field_s, ._field_lookup=(*_self_)._field_e.get()._field_lookup, ._field_errorToken=(*_self_)._field_u.get()._field_Op, };;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1e5e6a736:;
			{
				(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e31484e9_buildPtrFromType(&_326317_tc, (*_self_)._field_d.get()._field_Kind), 12)});
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1e5e6cbab:;
			{
				(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e3147dcd_buildSptrFromType(&_326317_tc, (*_self_)._field_d.get()._field_Kind), 7)});
			}
		}
		else {
			_case_begin_1e5e6b4d4:;
			{
				_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_Op.get()._field_Kind),jule::Any(_1e31352a5_Str((*_self_)._field_d.get()._field_Kind.ptr()))}));
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1e5e6b47e:;
	};
	(*_self_)._field_d.get()._field_Decl=true;
}



inline void _1e3128045_evalData(_1e3126ac1_unaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1e5e6b54a:;
			{
				jule::Ptr<_1e3134da9_TypeKind> _328521_prefix = (*_self_)._field_e.get()._field_prefix;;
				(*_self_)._field_e.get()._field_prefix=nullptr;
				(*_self_)._field_d=_1e3126032_evalExprKind((*_self_)._field_e, (*_self_)._field_u.get()._field_Expr.get()._field_Kind);
				(*_self_)._field_e.get()._field_prefix=_328521_prefix;
			}
		}
		else {
			_case_begin_1e5e6eb9c:;
			{
				(*_self_)._field_d=_1e3126032_evalExprKind((*_self_)._field_e, (*_self_)._field_u.get()._field_Expr.get()._field_Kind);
			}
		}
		_match_end_1e5e6eae2:;
	};
}



inline jule::Ptr<_1e310908c_Data> _1e3128320_eval(_1e3126ac1_unaryEval* _self_, jule::Ptr<_1e251c429_UnaryExpr> _329427_u) {
	(*_self_)._field_u=_329427_u;
	_1e3128045_evalData(&(*_self_));
	if (((*_self_)._field_d == nullptr)) {
		return nullptr;
	};
	if ((*_self_)._field_d.get()._field_Decl) {
		_1e3127d69_typeDecl(&(*_self_));
		return (*_self_)._field_d;
	};
	jule::Ptr<_1e3134da9_TypeKind> _330513_kind = (*_self_)._field_d.get()._field_Kind;;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1e5e74399:;
			{
				_1e3127253_minus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1e5e73de3:;
			{
				_1e312742e_plus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1e5e73e59:;
			{
				_1e312760a_caret(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1e5e73ec0:;
			{
				_1e31277d6_excl(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1e5e74036:;
			{
				_1e31279b2_star(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1e5e74564:;
			{
				_1e3127b8d_amper(&(*_self_));
			}
		}
		else {
			_case_begin_1e5e73d7c:;
			{
				(*_self_)._field_d=nullptr;
			}
		}
		_match_end_1e5e73d27:;
	};
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1e5e763bd:;
			{
				_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_Op.get()._field_Kind),jule::Any(_1e31352a5_Str(_330513_kind.ptr()))}));
				return nullptr;
			}
		}
		else if (_1e3109950_IsConst((*_self_)._field_d.ptr())) {
			_case_begin_1e5e74883:;
			{
				(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>((*_self_)._field_d.get()._field_Constant);
			}
		}
		_match_end_1e5e76357:;
	};
	(*_self_)._field_d.get()._field_Mutable=true;
	return (*_self_)._field_d;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3126ac1_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1e312885e_binaryEval static__1e3128e25_newPlain(jule::Ptr<_1e310ab0a_Eval> _334328_e) {
	return _1e312885e_binaryEval{._field_e=_334328_e, };
}



inline _1e312885e_binaryEval static__1e3129266_new(jule::Ptr<_1e310ab0a_Eval> _334923_e, jule::Ptr<_1d42b43cc_Token> _334937_op) {
	return _1e312885e_binaryEval{._field_e=_334923_e, ._field_op=_334937_op};
}



inline jule::Bool _1e31294ca_checkTypeCompatibility(_1e312885e_binaryEval* _self_) {
	return _1e32173dc_checkTypeCompatibility((*_self_)._field_e.get()._field_s, (*_self_)._field_l.get()._field_Kind,(*_self_)._field_r.get()._field_Kind,(*_self_)._field_op);
}



inline jule::Bool _1e3129772_checkStructCommonOperatorCompatibility(_1e312885e_binaryEval* _self_) {
	jule::Ptr<_1e258dee5_FnIns> _336317_overload = nullptr;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1e5e7ad51:;
			{
				_336317_overload=_1e313841d_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1e5e7adb7:;
			{
				_336317_overload=_1e313841d_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1e5e7bdda:;
			{
				_336317_overload=_1e313841d_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Add;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1e5e7be51:;
			{
				_336317_overload=_1e313841d_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1e5e7beb7:;
			{
				_336317_overload=_1e313841d_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Div;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1e5e7c02d:;
			{
				_336317_overload=_1e313841d_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1e5e7c094:;
			{
				_336317_overload=_1e313841d_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1e5e7c10a:;
			{
				_336317_overload=_1e313841d_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1e5e7c182:;
			{
				_336317_overload=_1e313841d_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1e5e7c1e8:;
			{
				_336317_overload=_1e313841d_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1e5e7ac1e:;
			{
				_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1e31352a5_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return false;
			}
		}
		_match_end_1e5e7aa98:;
	};
	if ((_336317_overload == nullptr)) {
		_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1e31352a5_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
		return false;
	};
	jule::Ptr<_1e258d126_ParamIns> _339517_p = _336317_overload.get()._field_Params[1LL];;
	return _1e3216e8b_checkAssignType((*_self_)._field_e.get()._field_s, _339517_p.get()._field_Decl.get()._field_Reference,_339517_p.get()._field_Kind,(*_self_)._field_r,(*_self_)._field_op);
}



inline jule::Ptr<_1e310908c_Data> _1e3129a19_evalNil(_1e312885e_binaryEval* _self_) {
	if ((!(_1e313651a_NilCompatible((*_self_)._field_r.get()._field_Kind.ptr())))) {
		_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("nil", 3)),jule::Any(_1e31352a5_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1e5e8618b:;
			{
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1e5e86125:;
			{
				_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("nil", 3))}));
				return nullptr;
			}
		}
		_match_end_1e5e8608c:;
	};
}



inline jule::Ptr<_1e310908c_Data> _1e3129c7d_evalEnum(_1e312885e_binaryEval* _self_) {
	jule::Ptr<_1e25a038b_Enum> _342017_enm = _1e3137708_Enum((*_self_)._field_l.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1e5e88336:;
			{
				jule::Ptr<_1e3134da9_TypeKind> _342421_rkind = (*_self_)._field_r.get()._field_Kind;;
				if ((_1e3137708_Enum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
					_342421_rkind=_1e3137708_Enum((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind;
				};
				if ((!(_1e32173dc_checkTypeCompatibility((*_self_)._field_e.get()._field_s, _342017_enm.get()._field_Kind.get()._field_Kind,_342421_rkind,(*_self_)._field_op)))) {
					return nullptr;
				};
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1e5e882ae:;
	};
	if (((_1e3137708_Enum((*_self_)._field_r.get()._field_Kind.ptr()) == nullptr) || (_342017_enm != _1e3137708_Enum((*_self_)._field_r.get()._field_Kind.ptr())))) {
		_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_342017_enm.get()._field_Ident),jule::Any(_1e31352a5_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1e5e8c7be:;
			{
				if ((!(_1e31cd749_IsNum(_1e31352a5_Str(_342017_enm.get()._field_Kind.get()._field_Kind.ptr()))))) {
					_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_342017_enm.get()._field_Ident)}));
					return nullptr;
				};
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1e5e8c835:;
			{
				if (((_1e3136ebb_Prim(_342017_enm.get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_1e31cd183_IsInt(_1e3139be4_Str(_1e3136ebb_Prim(_342017_enm.get()._field_Kind.get()._field_Kind.ptr()).ptr())))))) {
					_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_342017_enm.get()._field_Ident)}));
				};
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1e5e8c758:;
			{
				_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_342017_enm.get()._field_Ident)}));
				return nullptr;
			}
		}
		_match_end_1e5e8c66a:;
	};
}



inline jule::Ptr<_1e310908c_Data> _1e3129ee2_evalTypeEnum(_1e312885e_binaryEval* _self_) {
	jule::Ptr<_1e25a1986_TypeEnum> _347117_enm = _1e313796c_TypeEnum((*_self_)._field_l.get()._field_Kind.ptr());;
	if ((!(_1e31294ca_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1e5e936b5:;
			{
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1e5e92dbd:;
			{
				_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1e25a1cb6_Str(_347117_enm.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1e5e9353e:;
	};
}



inline jule::Ptr<_1e310908c_Data> _1e312a256_evalSptr(_1e312885e_binaryEval* _self_) {
	if ((!(_1e31294ca_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1e5e95750:;
			{
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1e5e956d9:;
			{
				_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1e31352a5_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1e5e94b06:;
	};
}



inline jule::Ptr<_1e310908c_Data> _1e312a4ba_evalPtr(_1e312885e_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1e5e97697:;
			{
				if ((!(_1e31294ca_checkTypeCompatibility(&(*_self_))))) {
					return nullptr;
				};
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_1e5e9770d:;
			{
				if ((_1e3137494_Ptr((*_self_)._field_l.get()._field_Kind.ptr()) == nullptr)) {
					std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				};
				if (_1e314214c_IsUnsafe(_1e3137494_Ptr((*_self_)._field_l.get()._field_Kind.ptr()).ptr())) {
					_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1e31352a5_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				};
				if ((!(_1e313103c_isPtrArithmeticCompatibleInt((*_self_)._field_r)))) {
					_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("type @ is incompatible to use for pointer arithmetic", 52),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1e5e96d4a:;
			{
				_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1e31352a5_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1e5e96c90:;
	};
}



inline jule::Ptr<_1e310908c_Data> _1e312a72e_evalArr(_1e312885e_binaryEval* _self_) {
	if ((!(_1e31294ca_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1e5e9d7d0:;
			{
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1e5e9d769:;
			{
				_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1e31352a5_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1e5e98eb2:;
	};
}



inline jule::Ptr<_1e310908c_Data> _1e312a993_evalSlc(_1e312885e_binaryEval* _self_) {
	if ((!(_1e31294ca_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1e5ea0a24:;
			{
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1e5ea09ad:;
			{
				_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1e31352a5_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1e5e9edca:;
	};
}



inline jule::Ptr<_1e310908c_Data> _1e312ac07_evalFn(_1e312885e_binaryEval* _self_) {
	if ((!(_1e31294ca_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1e5ea2c68:;
			{
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1e5ea2c02:;
			{
				_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1e31352a5_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1e5ea211e:;
	};
}



inline jule::Ptr<_1e310908c_Data> _1e312ae6b_evalStruct(_1e312885e_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1e5ea43c9:;
			{
				if ((_1e313841d_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Gt == nullptr)) {
					_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1e31352a5_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1e5ea4440:;
			{
				if ((_1e313841d_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_GtEq == nullptr)) {
					_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1e31352a5_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1e5ea44b7:;
			{
				if ((_1e313841d_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Lt == nullptr)) {
					_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1e31352a5_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1e5ea4bb0:;
			{
				if ((_1e313841d_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_LtEq == nullptr)) {
					_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1e31352a5_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1e5ea4c26:;
			{
				if ((!(_1e31294ca_checkTypeCompatibility(&(*_self_))))) {
					return nullptr;
				};
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1e5ea42a8:;
	};
	if ((!(_1e3129772_checkStructCommonOperatorCompatibility(&(*_self_))))) {
		return nullptr;
	};
	return (*_self_)._field_l;
}



inline jule::Ptr<_1e310908c_Data> _1e312b1d0_evalTrait(_1e312885e_binaryEval* _self_) {
	if ((!(_1e31294ca_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1e5eae15e:;
			{
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1e5eae0e8:;
			{
				_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1e31352a5_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1e5eade61:;
	};
}



inline jule::Ptr<_1e310908c_Data> _1e312b444_evalAny(_1e312885e_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1e5eb10a6:;
			{
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1e5eb0759:;
			{
				_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("any", 3))}));
				return nullptr;
			}
		}
		_match_end_1e5eb069e:;
	};
}



inline jule::Ptr<_1e310908c_Data> _1e312b6a8_evalBool(_1e312885e_binaryEval* _self_) {
	if ((!(_1e31294ca_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_1e5eb2dbb:;
			{
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1e5eb2d55:;
			{
				_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1e31352a5_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1e5eb2272:;
	};
}



inline jule::Ptr<_1e310908c_Data> _1e312b91c_evalStr(_1e312885e_binaryEval* _self_) {
	jule::Str _371317_rk = _1e31352a5_Str((*_self_)._field_r.get()._field_Kind.ptr());;
	if ((_371317_rk != jule::Str("str", 3))) {
		_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_371317_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1e5eb609a:;
			{
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1e5eb6111:;
			{
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1e5eb4ecd:;
			{
				_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("str", 3))}));
				return nullptr;
			}
		}
		_match_end_1e5eb520e:;
	};
}



inline void _1e312bae8_setTypeToGreater(_1e312885e_binaryEval* _self_) {
	if (_1e3109950_IsConst((*_self_)._field_l.ptr())) {
		if ((!(_1e3109950_IsConst((*_self_)._field_r.ptr())))) {
			(*_self_)._field_l.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
			return;;
		};
		goto _julec_label_set;
	};
	if (_1e3109950_IsConst((*_self_)._field_r.ptr())) {
		return;;
	};
	_julec_label_set:;
	if (_1e31cbabb_IsGreater(_1e3136ebb_Prim((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind,_1e3136ebb_Prim((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Kind)) {
		(*_self_)._field_l.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
	};
}



inline void _1e312bd3a_checkModData(_1e312885e_binaryEval* _self_, jule::Ptr<_1e310908c_Data>& _375636_d) {
	if ((!(_1e3109950_IsConst(_375636_d.ptr())))) {
		if (((_1e3136ebb_Prim(_375636_d.get()._field_Kind.ptr()) == nullptr) || (!(_1e31cd183_IsInt(_1e3136ebb_Prim(_375636_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1e30e2aae_sigAssignable(jule::Str("i64", 3),_375636_d)) {
			_case_begin_1e5ebce1a:;
			{
				_1e257cd5d_SetI64(_375636_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1e257c610_AsI64(_375636_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1e30e2be1_unsigAssignable(jule::Str("u64", 3),_375636_d)) {
			_case_begin_1e5ebcaeb:;
			{
				_1e257d0d3_SetU64(_375636_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1e257c874_AsU64(_375636_d.get()._field_Constant.ptr())));
			}
		}
		else {
			_case_begin_1e5ebca85:;
			{
				_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
			}
		}
		_match_end_1e5ebb424:;
	};
}



inline void _1e312c016_mod(_1e312885e_binaryEval* _self_) {
	_1e312bd3a_checkModData(&(*_self_), (*_self_)._field_l);
	_1e312bd3a_checkModData(&(*_self_), (*_self_)._field_r);
}



inline jule::Bool _1e312c3bd_numbersAreCompatibile(_1e312885e_binaryEval* _self_, jule::Str& _377837_lk, jule::Str& _377847_rk) {
	if ((!(_1e31cd749_IsNum(_377847_rk)))) {
		return false;
	};
	if (_1e3109950_IsConst((*_self_)._field_l.ptr())) {
		return true;
	};
	if ((_377837_lk == jule::Str("f32", 3))) {
		if (_1e3109950_IsConst((*_self_)._field_r.ptr())) {
			return true;
		};
		return (_377847_rk == jule::Str("f32", 3));
	};
	if ((_377837_lk == jule::Str("f64", 3))) {
		if (_1e3109950_IsConst((*_self_)._field_r.ptr())) {
			return true;
		};
		return (_377847_rk == jule::Str("f64", 3));
	};
	if (_1e3109950_IsConst((*_self_)._field_r.ptr())) {
		return true;
	};
	return (_377837_lk == _377847_rk);
}



inline jule::Ptr<_1e310908c_Data> _1e312c632_evalFloat(_1e312885e_binaryEval* _self_) {
	jule::Str _380813_lk = _1e3136ebb_Prim((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _380913_rk = _1e3136ebb_Prim((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	if ((!(_1e312c3bd_numbersAreCompatibile(&(*_self_), _380813_lk,_380913_rk)))) {
		_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_380813_lk),jule::Any(_380913_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1e5ec576e:;
			{
				if (((!(_1e3109950_IsConst((*_self_)._field_l.ptr()))) || (!(_1e30e2d23_intAssignable(jule::Str("i64", 3),(*_self_)._field_l))))) {
					_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_380813_lk),jule::Any(_380913_rk)}));
					return nullptr;
				};
				if (((!(_1e3109950_IsConst((*_self_)._field_r.ptr()))) || (!(_1e30e2d23_intAssignable(jule::Str("u64", 3),(*_self_)._field_r))))) {
					_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_380813_lk),jule::Any(_380913_rk)}));
					return nullptr;
				};
				_1e257cd5d_SetI64((*_self_)._field_l.get()._field_Constant.ptr(), static_cast<jule::I64>(_1e257c610_AsI64((*_self_)._field_l.get()._field_Constant.ptr())));
				_1e257d0d3_SetU64((*_self_)._field_r.get()._field_Constant.ptr(), static_cast<jule::U64>(_1e257c874_AsU64((*_self_)._field_r.get()._field_Constant.ptr())));
				if ((!(_1e31308bb_isOkForShifting((*_self_)._field_r)))) {
					_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		_match_end_1e5ec5692:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1e5eca18b:;
			{
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1e5eca136:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_1e5ecab2b:;
			{
				_1e312bae8_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1e5ecab92:;
			{
				if ((!(_1e31cd183_IsInt(_380913_rk)))) {
					_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_380813_lk),jule::Any(_380913_rk)}));
					return nullptr;
				};
				_1e312c016_mod(&(*_self_));
				return (*_self_)._field_r;
			}
		}
		else {
			_case_begin_1e5ecb027:;
			{
				_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1e5ecaec2:;
	};
}



inline jule::Ptr<_1e310908c_Data> _1e312c896_evalInt(_1e312885e_binaryEval* _self_) {
	jule::Str _387213_lk = _1e3136ebb_Prim((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _387313_rk = _1e3136ebb_Prim((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1e5ecac08:;
			{
				if (((!(_1e31cd183_IsInt(_387213_lk))) || (!(_1e31cd183_IsInt(_387313_rk))))) {
					_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_387213_lk),jule::Any(_387313_rk)}));
					return nullptr;
				};
				if ((!(_1e31308bb_isOkForShifting((*_self_)._field_r)))) {
					_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		_match_end_1e5ed0328:;
	};
	if ((!(_1e312c3bd_numbersAreCompatibile(&(*_self_), _387213_lk,_387313_rk)))) {
		_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_387213_lk),jule::Any(_387313_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1e5ed34a2:;
			{
				return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1e5ed344c:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1e5ed3c88:;
			{
				_1e312bae8_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1e5ed3cee:;
			{
				_1e312c016_mod(&(*_self_));
				_1e312bae8_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1e5ed4184:;
			{
				_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for integer type(s)", 45),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1e5ed412e:;
	};
}



inline jule::Ptr<_1e310908c_Data> _1e312cb0a_evalPrim(_1e312885e_binaryEval* _self_) {
	jule::Ptr<_1e3139881_Prim> _393113_prim = _1e3136ebb_Prim((*_self_)._field_l.get()._field_Kind.ptr());;
	{
		
		if (_1e313c851_IsBool(_393113_prim.ptr())) {
			_case_begin_1e5ed74c8:;
			{
				return _1e312b6a8_evalBool(&(*_self_));
			}
		}
		else if (_1e313cab5_IsStr(_393113_prim.ptr())) {
			_case_begin_1e5ed7550:;
			{
				return _1e312b91c_evalStr(&(*_self_));
			}
		}
		_match_end_1e5ed741d:;
	};
	if ((_1e3136ebb_Prim((*_self_)._field_r.get()._field_Kind.ptr()) == nullptr)) {
		_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1e3139be4_Str(_393113_prim.ptr())),jule::Any(_1e31352a5_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	{
		
		if (_1e31cd4a2_IsFloat(_393113_prim.get()._field_Kind)) {
			_case_begin_1e5ed9e37:;
			{
				return _1e312c632_evalFloat(&(*_self_));
			}
		}
		else if (_1e31cd183_IsInt(_393113_prim.get()._field_Kind)) {
			_case_begin_1e5ed97a5:;
			{
				return _1e312c896_evalInt(&(*_self_));
			}
		}
		else {
			_case_begin_1e5ed973e:;
			{
				return nullptr;
			}
		}
		_match_end_1e5ed9563:;
	};
}



inline jule::Ptr<_1e310908c_Data> _1e312cd6e_evalOp(_1e312885e_binaryEval* _self_) {
	{
		
		if (_1e3136042_Void((*_self_)._field_l.get()._field_Kind.ptr())) {
			_case_begin_1e5eda784:;
			{
				_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("void", 4))}));
				return nullptr;
			}
		}
		else if (((_1e3136ebb_Prim((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr) && _1e313cd29_IsAny(_1e3136ebb_Prim((*_self_)._field_r.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1e5edb488:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1e5edb1e1;
			}
		}
		else if (((_1e3136ebb_Prim((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr) && _1e313cd29_IsAny(_1e3136ebb_Prim((*_self_)._field_l.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1e5edb1e1:;
			{
				return _1e312b444_evalAny(&(*_self_));
			}
		}
		else if ((_1e313796c_TypeEnum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5edb257:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1e5edb2bd;
			}
		}
		else if ((_1e313796c_TypeEnum((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5edb2bd:;
			{
				return _1e3129ee2_evalTypeEnum(&(*_self_));
			}
		}
		else if (_1e3135ccd_IsNil((*_self_)._field_l.get()._field_Kind.ptr())) {
			_case_begin_1e5edb334:;
			{
				return _1e3129a19_evalNil(&(*_self_));
			}
		}
		else if ((_1e3137708_Enum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5edb39a:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1e5edb554;
			}
		}
		else if ((_1e3137708_Enum((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5edb554:;
			{
				return _1e3129c7d_evalEnum(&(*_self_));
			}
		}
		else if ((_1e3137230_Sptr((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5edb5ba:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1e5edb631;
			}
		}
		else if ((_1e3137230_Sptr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5edb631:;
			{
				return _1e312a256_evalSptr(&(*_self_));
			}
		}
		else if ((_1e3137494_Ptr((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5edb6a8:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1e5edb730;
			}
		}
		else if ((_1e3137494_Ptr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5edb730:;
			{
				return _1e312a4ba_evalPtr(&(*_self_));
			}
		}
		else if ((_1e3137bd1_Arr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5edb7a7:;
			{
				return _1e312a72e_evalArr(&(*_self_));
			}
		}
		else if ((_1e3137e45_Slc((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5edb82e:;
			{
				return _1e312a993_evalSlc(&(*_self_));
			}
		}
		else if ((_1e31381a9_Fn((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5edb8a6:;
			{
				return _1e312ac07_evalFn(&(*_self_));
			}
		}
		else if ((_1e3138682_Trait((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5edb92d:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1e5edb9a5;
			}
		}
		else if ((_1e3138682_Trait((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5edb9a5:;
			{
				return _1e312b1d0_evalTrait(&(*_self_));
			}
		}
		else if ((_1e313841d_Struct((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5edba2c:;
			{
				return _1e312ae6b_evalStruct(&(*_self_));
			}
		}
		else if ((_1e3136ebb_Prim((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e5edbaa4:;
			{
				return _1e312cb0a_evalPrim(&(*_self_));
			}
		}
		else {
			_case_begin_1e5eda19b:;
			{
				return nullptr;
			}
		}
		_match_end_1e5eda058:;
	};
}



inline void _1e312d0e4_evalConst(_1e312885e_binaryEval* _self_, jule::Ptr<_1e310908c_Data>& _400633_d) {
	{
		
		if ((_400633_d == nullptr)) {
			_case_begin_1e5eea6b7:;
			{
				return;;
			}
		}
		else if ((!(_1e3109950_IsConst((*_self_)._field_l.ptr()))) || (!(_1e3109950_IsConst((*_self_)._field_r.ptr())))) {
			_case_begin_1e5eead5a:;
			{
				_400633_d.get()._field_Constant=nullptr;
				return;;
			}
		}
		_match_end_1e5eea596:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1e5eec400:;
			{
				_400633_d.get()._field_Constant=static__1e257aab4_NewBool(_1e25806e0_Eq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1e5eec466:;
			{
				_400633_d.get()._field_Constant=static__1e257aab4_NewBool((!(_1e25806e0_Eq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))))));
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1e5eec4cc:;
			{
				_400633_d.get()._field_Constant=static__1e257aab4_NewBool(_1e25803d2_Or((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1e5eec543:;
			{
				_400633_d.get()._field_Constant=static__1e257aab4_NewBool(_1e25800c4_And((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1e5eec5a9:;
			{
				_400633_d.get()._field_Constant=static__1e257aab4_NewBool(_1e2581119_Gt((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1e5eec620:;
			{
				_400633_d.get()._field_Constant=static__1e257aab4_NewBool(_1e25809ed_Lt((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1e5eec686:;
			{
				_400633_d.get()._field_Constant=static__1e257aab4_NewBool(_1e2581427_GtEq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1e5eec6ec:;
			{
				_400633_d.get()._field_Constant=static__1e257aab4_NewBool(_1e2580d0b_LtEq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1e5eec763:;
			{
				_1e2581735_Add((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_400633_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1e5eec7c9:;
			{
				_1e2581a43_Sub((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_400633_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1e5eec840:;
			{
				_1e2581d51_Mul((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_400633_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1e5eec8a6:;
			{
				jule::Bool _404317_ok = _1e258215e_Div((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));;
				if (((!(_404317_ok)) && (_1e257cad8_AsF64((*_self_)._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_400633_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
				jule::Ptr<_1e3139881_Prim> _404821_prim = _1e3136ebb_Prim(_400633_d.get()._field_Kind.ptr());;
				{
					
					if (_1e31ccb00_IsSigInt(_404821_prim.get()._field_Kind)) {
						_case_begin_1e6009330:;
						{
							_1e257cd5d_SetI64(_400633_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1e257c610_AsI64(_400633_d.get()._field_Constant.ptr())));
						}
					}
					else if (_1e31ccddb_IsUnsigInt(_404821_prim.get()._field_Kind)) {
						_case_begin_1e60093a7:;
						{
							_1e257d0d3_SetU64(_400633_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1e257c874_AsU64(_400633_d.get()._field_Constant.ptr())));
						}
					}
					_match_end_1e6009275:;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1e5eec92d:;
			{
				jule::Bool _405617_ok = _1e258246c_Mod((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));;
				if (((!(_405617_ok)) && (_1e257cad8_AsF64((*_self_)._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_400633_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1e5eec9a5:;
			{
				_1e2582a88_BitwiseOr((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_400633_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1e5eeca2c:;
			{
				_1e258277a_BitwiseAnd((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_400633_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1e5eecaa4:;
			{
				_1e2582d96_Xor((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_400633_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1e5eecb2b:;
			{
				_1e25831a4_Lshift((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_400633_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1e5eecba3:;
			{
				_1e25834b2_Rshift((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_400633_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		_match_end_1e5eebb6e:;
	};
	_1e3131cb8_applyCastModelByEnum(_400633_d,_1e3137708_Enum(_400633_d.get()._field_Kind.ptr()));
	jule::Ptr<_1e3139881_Prim> _408017_prim = _1e3136ebb_Prim(_400633_d.get()._field_Kind.ptr());;
	if (((_408017_prim == nullptr) || (!(_1e31cd749_IsNum(_1e3139be4_Str(_408017_prim.ptr())))))) {
		_400633_d.get()._field_Model=static_cast<jule::Any>(_400633_d.get()._field_Constant);
		return;;
	};
	if ((((*_self_)._field_op.get()._field_Kind != jule::Str("<<", 2)) && ((*_self_)._field_op.get()._field_Kind != jule::Str(">>", 2)))) {
		if ((((*_self_)._field_l.get()._field_Model == (*_self_)._field_l.get()._field_Constant) && ((*_self_)._field_r.get()._field_Model != (*_self_)._field_r.get()._field_Constant))) {
			_400633_d.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
			_408017_prim=_1e3136ebb_Prim(_400633_d.get()._field_Kind.ptr());
		};
	};
	_1e312eb95_fitBitsize(_400633_d);
	_1e3132071_castConstByType(_408017_prim.get()._field_Kind,_400633_d);
}



inline void _1e312d369_checkData(_1e312885e_binaryEval* _self_, jule::Ptr<_1e310908c_Data>& _409633_d) {
	jule::Ptr<_1e258dee5_FnIns> _409713_f = _1e31381a9_Fn(_409633_d.get()._field_Kind.ptr());;
	if ((((_409713_f != nullptr) && (_409713_f.get()._field_Decl != nullptr)) && _1e258ba1a_IsMethod(_409713_f.get()._field_Decl.ptr()))) {
		_1e310b116_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>());
	};
}



inline void _1e312d545_checkDatas(_1e312885e_binaryEval* _self_) {
	_1e312d369_checkData(&(*_self_), (*_self_)._field_l);
	_1e312d369_checkData(&(*_self_), (*_self_)._field_r);
}



inline void _1e312d7ba_setModel(_1e312885e_binaryEval* _self_, jule::Ptr<_1e310908c_Data>& _410832_d) {
	if (_1e3109950_IsConst(_410832_d.ptr())) {
		if ((((*_self_)._field_l.get()._field_Model == (*_self_)._field_l.get()._field_Constant) && ((*_self_)._field_r.get()._field_Model == (*_self_)._field_r.get()._field_Constant))) {
			return;;
		};
	};
	jule::Ptr<_1e310908c_Data> _411618_l = (*_self_)._field_l;;
	jule::Ptr<_1e310908c_Data> _411625_r = (*_self_)._field_r;;
	std::tie(_411618_l,_411625_r) = std::make_tuple((*_self_)._field_l,(*_self_)._field_r);
	if ((!(_1e3109c5d_GoodOperand(_411618_l.ptr(), _411625_r)))) {
		std::tie(_411618_l,_411625_r) = std::make_tuple(_411625_r,_411618_l);
	};
	_410832_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e2583e74_BinopExprModel>(_1e2583e74_BinopExprModel{._field_Left=jule::new_ptr<_1e2583c87_OperandExprModel>(_1e2583c87_OperandExprModel{._field_Kind=_411618_l.get()._field_Kind, ._field_Model=_411618_l.get()._field_Model}), ._field_Right=jule::new_ptr<_1e2583c87_OperandExprModel>(_1e2583c87_OperandExprModel{._field_Kind=_411625_r.get()._field_Kind, ._field_Model=_411625_r.get()._field_Model}), ._field_Op=(*_self_)._field_op}));
}



inline void _1e312da40_postEval(_1e312885e_binaryEval* _self_, jule::Ptr<_1e310908c_Data>& _413432_d) {
	_413432_d.get()._field_Lvalue=false;
	_1e312d7ba_setModel(&(*_self_), _413432_d);
}



inline jule::Ptr<_1e310908c_Data> _1e312dde7_solveExplicit(_1e312885e_binaryEval* _self_, jule::Ptr<_1e310908c_Data>& _413937_l, jule::Ptr<_1e310908c_Data>& _413952_r) {
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_413937_l,_413952_r);
	_1e312d545_checkDatas(&(*_self_));
	jule::Ptr<_1e310908c_Data> _414417_d = _1e312cd6e_evalOp(&(*_self_));;
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_413937_l,_413952_r);
	_1e312d0e4_evalConst(&(*_self_), _414417_d);
	if ((_414417_d != nullptr)) {
		_414417_d.get()._field_Mutable=true;
		_1e312da40_postEval(&(*_self_), _414417_d);
	};
	return _414417_d;
}



inline jule::Ptr<_1e310908c_Data> _1e312e205_eval(_1e312885e_binaryEval* _self_, jule::Ptr<_1e251d936_BinopExpr>& _415928_op) {
	if ((_415928_op.get()._field_Op.get()._field_Kind == jule::Str("=", 1))) {
		_1e310b116_pushErr((*_self_)._field_e.ptr(), _415928_op.get()._field_Op,jule::Str("assignments not available for expressions", 41),jule::Slice<jule::Any>());
		_1e310b435_pushSugggestion((*_self_)._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e310908c_Data> _416617_l = _1e3126032_evalExprKind((*_self_)._field_e, _415928_op.get()._field_Left.get()._field_Kind);;
	if (((_416617_l == nullptr) || (_416617_l.get()._field_Kind == nullptr))) {
		return nullptr;
	};
	jule::Ptr<_1e3134da9_TypeKind> _417117_prefix = (*_self_)._field_e.get()._field_prefix;;
	(*_self_)._field_e.get()._field_prefix=_416617_l.get()._field_Kind;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_417117_prefix;
	});;
	jule::Ptr<_1e310908c_Data> _417417_r = _1e3126032_evalExprKind((*_self_)._field_e, _415928_op.get()._field_Right.get()._field_Kind);;
	if (((_417417_r == nullptr) || (_417417_r.get()._field_Kind == nullptr))) {
		return nullptr;
	};
	(*_self_)._field_op=_415928_op.get()._field_Op;
	jule::Ptr<_1e310908c_Data> _418117_d = _1e312dde7_solveExplicit(&(*_self_), _416617_l,_417417_r);;
	if ((((_418117_d != nullptr) && _416617_l.get()._field_IsRune) && _417417_r.get()._field_IsRune)) {
		_418117_d.get()._field_IsRune=true;
	};
	return _418117_d;
}







std::ostream &operator<<(std::ostream &_Stream, _1e312885e_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e313367c_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e31341b6_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e31352a5_Str(_1e3134da9_TypeKind* _self_) {
	if (_1e3135ccd_IsNil(&(*_self_))) {
		return jule::Str("nil", 3);
	};
	jule::Str _7417_kind = jule::Str();;
	if ((*_self_)._field_Variadic) {
		_7417_kind+=jule::Str("...", 3);
	};
	if (_1e3135a69_CppLinked(&(*_self_))) {
		_7417_kind+=jule::Str("cpp.", 4);
		_7417_kind+=(*_self_)._field_CppIdent;
	} else {
		_7417_kind+=_1e313497a_Kind_mptr_data[((*_self_)._field_Kind).type_offset]._1e3134529_Str((*_self_)._field_Kind);
	};
	return _7417_kind;
}



inline jule::Bool _1e31355b3_Equals(jule::Ptr<_1e3134da9_TypeKind> _self_, jule::Ptr<_1e3134da9_TypeKind> _9026_other) {
	if (_1e3135ccd_IsNil(_self_.ptr())) {
		return _1e3135ccd_IsNil(_9026_other.ptr());
	};
	if (_1e3135a69_CppLinked(_self_.ptr())) {
		return (_1e3135a69_CppLinked(_9026_other.ptr()) && (_self_.get()._field_CppIdent == _9026_other.get()._field_CppIdent));
	};
	return _1e313497a_Kind_mptr_data[(_self_.get()._field_Kind).type_offset]._1e3134837_Equals(_self_.get()._field_Kind, _9026_other);
}



inline jule::Bool _1e3135a69_CppLinked(_1e3134da9_TypeKind* _self_) {
	return ((*_self_)._field_CppIdent.len() != 0LL);
}



inline jule::Bool _1e3135ccd_IsNil(_1e3134da9_TypeKind* _self_) {
	return ((*_self_)._field_Kind == nullptr);
}



inline jule::Bool _1e3136042_Void(_1e3134da9_TypeKind* _self_) {
	jule::Ptr<_1e3139881_Prim> _11113_prim = _1e3136ebb_Prim(&(*_self_));;
	return ((_11113_prim != nullptr) && (_11113_prim.get()._field_Kind == jule::Str("void", 4)));
}



inline jule::Bool _1e31362a6_Mutable(_1e3134da9_TypeKind* _self_) {
	{
		_1e3134da9_TypeKind* _11821__self = (&((*_self_)));;
		if ((_1e313841d_Struct(_11821__self) != nullptr)) {
			return _1e313841d_Struct(_11821__self).get()._field_Mutable;
		};
		if ((_1e3138682_Trait(_11821__self) != nullptr)) {
			return _1e3138682_Trait(_11821__self).get()._field_Mutable;
		};
		if ((_1e3136ebb_Prim(_11821__self) != nullptr)) {
			jule::Ptr<_1e3139881_Prim> _12721_p = _1e3136ebb_Prim(_11821__self);;
			return _1e313cd29_IsAny(_12721_p.ptr());
		};
		if ((_1e3137bd1_Arr(_11821__self) != nullptr)) {
			return _1e31362a6_Mutable(_1e3137bd1_Arr(_11821__self).get()._field_Elem.ptr());
		};
		return (((_1e3137e45_Slc(_11821__self) != nullptr) || (_1e3137494_Ptr(_11821__self) != nullptr)) || (_1e3137230_Sptr(_11821__self) != nullptr));
	};
}



inline jule::Bool _1e313651a_NilCompatible(_1e3134da9_TypeKind* _self_) {
	{
		_1e3134da9_TypeKind* _14221__self = (&((*_self_)));;
		jule::Ptr<_1e3139881_Prim> _14417_prim = _1e3136ebb_Prim(_14221__self);;
		if (((_14417_prim != nullptr) && _1e313cd29_IsAny(_14417_prim.ptr()))) {
			return true;
		};
		return (((((((_1e3135ccd_IsNil(_14221__self) || (_1e31381a9_Fn(_14221__self) != nullptr)) || (_1e3137230_Sptr(_14221__self) != nullptr)) || (_1e3137494_Ptr(_14221__self) != nullptr)) || (_1e3138682_Trait(_14221__self) != nullptr)) || (_1e3137e45_Slc(_14221__self) != nullptr)) || (_1e31388e6_Map(_14221__self) != nullptr)) || (_1e313796c_TypeEnum(_14221__self) != nullptr));
	};
}



inline jule::Bool _1e313677e_PerformsRC(_1e3134da9_TypeKind* _self_) {
	{
		_1e3134da9_TypeKind* _16321__self = (&((*_self_)));;
		return (((_1e3137230_Sptr(_16321__self) != nullptr) || (_1e3137e45_Slc(_16321__self) != nullptr)) || (_1e3138682_Trait(_16321__self) != nullptr));
	};
}



inline jule::Bool _1e31369e3_SupportsCloning(_1e3134da9_TypeKind* _self_) {
	{
		_1e3134da9_TypeKind* _17121__self = (&((*_self_)));;
		{
			
			if ((_1e3136ebb_Prim(_17121__self) != nullptr)) {
				_case_begin_1e604a1a6:;
				{
					return (!(_1e313cd29_IsAny(_1e3136ebb_Prim(_17121__self).ptr())));
				}
			}
			else if ((_1e3137708_Enum(_17121__self) != nullptr)) {
				_case_begin_1e604a21c:;
				{
					return true;
				}
			}
			else if ((_1e31381a9_Fn(_17121__self) != nullptr)) {
				_case_begin_1e604a519:;
				{
					return true;
				}
			}
			else if ((_1e3137494_Ptr(_17121__self) != nullptr)) {
				_case_begin_1e604a580:;
				{
					return true;
				}
			}
			else if ((_1e3137e45_Slc(_17121__self) != nullptr)) {
				_case_begin_1e604a5e6:;
				{
					return _1e31369e3_SupportsCloning(_1e3137e45_Slc(_17121__self).get()._field_Elem.ptr());
				}
			}
			else if ((_1e31388e6_Map(_17121__self) != nullptr)) {
				_case_begin_1e604a65c:;
				{
					jule::Ptr<_1e3140128_Map> _18421_m = _1e31388e6_Map(_17121__self);;
					return (_1e31369e3_SupportsCloning(_18421_m.get()._field_Key.ptr()) && _1e31369e3_SupportsCloning(_18421_m.get()._field_Val.ptr()));
				}
			}
			else if ((_1e3137bd1_Arr(_17121__self) != nullptr)) {
				_case_begin_1e604a6c3:;
				{
					return _1e31369e3_SupportsCloning(_1e3137bd1_Arr(_17121__self).get()._field_Elem.ptr());
				}
			}
			else if ((_1e3137230_Sptr(_17121__self) != nullptr)) {
				_case_begin_1e604a739:;
				{
					return _1e31369e3_SupportsCloning(_1e3137230_Sptr(_17121__self).get()._field_Elem.ptr());
				}
			}
			else if ((_1e313841d_Struct(_17121__self) != nullptr)) {
				_case_begin_1e604a7b1:;
				{
					jule::Ptr<_1e253220d_StructIns> _19125_s = _1e313841d_Struct(_17121__self);;
					return (((_19125_s.get()._field_Decl != nullptr) && (!(_19125_s.get()._field_Decl.get()._field_CppLinked))) && _1e24e6dc6_IsDerives(_19125_s.get()._field_Decl.ptr(), jule::Str("Clone", 5)));
				}
			}
			else {
				_case_begin_1e604a085:;
				{
					return false;
				}
			}
			_match_end_1e604a01e:;
		};
	};
}



inline jule::Bool _1e3136c57_Variadicable(_1e3134da9_TypeKind* _self_) {
	{
		_1e3134da9_TypeKind* _20421__self = (&((*_self_)));;
		return (_1e3137e45_Slc(_20421__self) != nullptr);
	};
}



inline jule::Ptr<_1e3139881_Prim> _1e3136ebb_Prim(_1e3134da9_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e3139881_Prim>>()) {
			_case_begin_1e6052dd4:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1e3139881_Prim>();
			}
		}
		else {
			_case_begin_1e6052796:;
			{
				return nullptr;
			}
		}
		_match_end_1e6052741:;
	};
}



inline jule::Ptr<_1e313d115_Sptr> _1e3137230_Sptr(_1e3134da9_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e313d115_Sptr>>()) {
			_case_begin_1e6053ac7:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1e313d115_Sptr>();
			}
		}
		else {
			_case_begin_1e60535cc:;
			{
				return nullptr;
			}
		}
		_match_end_1e6053577:;
	};
}



inline jule::Ptr<_1e3141679_Ptr> _1e3137494_Ptr(_1e3134da9_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e3141679_Ptr>>()) {
			_case_begin_1e6054820:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1e3141679_Ptr>();
			}
		}
		else {
			_case_begin_1e6054325:;
			{
				return nullptr;
			}
		}
		_match_end_1e60542c0:;
	};
}



inline jule::Ptr<_1e25a038b_Enum> _1e3137708_Enum(_1e3134da9_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e25a038b_Enum>>()) {
			_case_begin_1e6055568:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1e25a038b_Enum>();
			}
		}
		else {
			_case_begin_1e605506d:;
			{
				return nullptr;
			}
		}
		_match_end_1e6055018:;
	};
}



inline jule::Ptr<_1e25a1986_TypeEnum> _1e313796c_TypeEnum(_1e3134da9_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e25a1986_TypeEnum>>()) {
			_case_begin_1e60562b1:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1e25a1986_TypeEnum>();
			}
		}
		else {
			_case_begin_1e6055cb6:;
			{
				return nullptr;
			}
		}
		_match_end_1e6055c61:;
	};
}



inline jule::Ptr<_1e3140c1c_Arr> _1e3137bd1_Arr(_1e3134da9_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e3140c1c_Arr>>()) {
			_case_begin_1e6057009:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1e3140c1c_Arr>();
			}
		}
		else {
			_case_begin_1e6056a0e:;
			{
				return nullptr;
			}
		}
		_match_end_1e60569a9:;
	};
}



inline jule::Ptr<_1e313da72_Slc> _1e3137e45_Slc(_1e3134da9_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e313da72_Slc>>()) {
			_case_begin_1e6057c52:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1e313da72_Slc>();
			}
		}
		else {
			_case_begin_1e6057757:;
			{
				return nullptr;
			}
		}
		_match_end_1e6057702:;
	};
}



inline jule::Ptr<_1e258dee5_FnIns> _1e31381a9_Fn(_1e3134da9_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e258dee5_FnIns>>()) {
			_case_begin_1e605899a:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1e258dee5_FnIns>();
			}
		}
		else {
			_case_begin_1e60584a0:;
			{
				return nullptr;
			}
		}
		_match_end_1e605844a:;
	};
}



inline jule::Ptr<_1e253220d_StructIns> _1e313841d_Struct(_1e3134da9_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e253220d_StructIns>>()) {
			_case_begin_1e60596e3:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1e253220d_StructIns>();
			}
		}
		else {
			_case_begin_1e60591e8:;
			{
				return nullptr;
			}
		}
		_match_end_1e6059193:;
	};
}



inline jule::Ptr<_1e259d246_Trait> _1e3138682_Trait(_1e3134da9_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e259d246_Trait>>()) {
			_case_begin_1e605a43b:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1e259d246_Trait>();
			}
		}
		else {
			_case_begin_1e6059e41:;
			{
				return nullptr;
			}
		}
		_match_end_1e6059ddb:;
	};
}



inline jule::Ptr<_1e3140128_Map> _1e31388e6_Map(_1e3134da9_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e3140128_Map>>()) {
			_case_begin_1e605b184:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1e3140128_Map>();
			}
		}
		else {
			_case_begin_1e605ab89:;
			{
				return nullptr;
			}
		}
		_match_end_1e605ab34:;
	};
}



inline jule::Ptr<_1e313e600_Tuple> _1e3138b5a_Tup(_1e3134da9_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e313e600_Tuple>>()) {
			_case_begin_1e605bdcc:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1e313e600_Tuple>();
			}
		}
		else {
			_case_begin_1e605b8d2:;
			{
				return nullptr;
			}
		}
		_match_end_1e605b87c:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e3134da9_TypeKind _Src) {
	_Stream << "TypeKind{";
	_Stream << "CppIdent:" << _Src._field_CppIdent << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e31393b9_checked(_1e3139012_TypeSymbol* _self_) {
	return ((*_self_)._field_Kind != nullptr);
}



inline void _1e3139595_removeKind(_1e3139012_TypeSymbol* _self_) {
	(*_self_)._field_Kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3139012_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e3139be4_Str(_1e3139881_Prim* _self_) {
	return (*_self_)._field_Kind;
}



inline jule::Bool _1e313a002_Equals(jule::Ptr<_1e3139881_Prim> _self_, jule::Ptr<_1e3134da9_TypeKind> _35726_other) {
	jule::Ptr<_1e3139881_Prim> _35813_prim = _1e3136ebb_Prim(_35726_other.ptr());;
	if ((_35813_prim == nullptr)) {
		return false;
	};
	return (_self_.get()._field_Kind == _35813_prim.get()._field_Kind);
}



inline jule::Bool _1e313a475_IsConstraint(_1e3139881_Prim* _self_) {
	return ((((!(_1e313cab5_IsStr(&(*_self_)))) && (!(_1e313cd29_IsAny(&(*_self_))))) && (!(_1e313c851_IsBool(&(*_self_))))) && (!(_1e31cd749_IsNum((*_self_)._field_Kind))));
}



inline jule::Bool _1e313a6d9_IsI8(_1e3139881_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i8", 2));
}



inline jule::Bool _1e313a94d_IsI16(_1e3139881_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i16", 3));
}



inline jule::Bool _1e313abb2_IsI32(_1e3139881_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i32", 3));
}



inline jule::Bool _1e313ae26_IsI64(_1e3139881_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i64", 3));
}



inline jule::Bool _1e313b18a_IsU8(_1e3139881_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u8", 2));
}



inline jule::Bool _1e313b3ee_IsU16(_1e3139881_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u16", 3));
}



inline jule::Bool _1e313b663_IsU32(_1e3139881_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u32", 3));
}



inline jule::Bool _1e313b8c7_IsU64(_1e3139881_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u64", 3));
}



inline jule::Bool _1e313bb3b_IsF32(_1e3139881_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("f32", 3));
}



inline jule::Bool _1e313bda0_IsF64(_1e3139881_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("f64", 3));
}



inline jule::Bool _1e313c114_IsInt(_1e3139881_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("int", 3));
}



inline jule::Bool _1e313c378_IsUint(_1e3139881_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("uint", 4));
}



inline jule::Bool _1e313c5dc_IsUintptr(_1e3139881_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("uintptr", 7));
}



inline jule::Bool _1e313c851_IsBool(_1e3139881_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("bool", 4));
}



inline jule::Bool _1e313cab5_IsStr(_1e3139881_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("str", 3));
}



inline jule::Bool _1e313cd29_IsAny(_1e3139881_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("any", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _1e3139881_Prim _Src) {
	_Stream << "Prim{";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e313d478_Str(_1e313d115_Sptr* _self_) {
	return (jule::Str("&", 1) + _1e31352a5_Str((*_self_)._field_Elem.ptr()));
}



inline jule::Bool _1e313d786_Equals(jule::Ptr<_1e313d115_Sptr> _self_, jule::Ptr<_1e3134da9_TypeKind> _43426_other) {
	jule::Ptr<_1e313d115_Sptr> _43513_sptr = _1e3137230_Sptr(_43426_other.ptr());;
	if ((_43513_sptr == nullptr)) {
		return false;
	};
	return _1e31355b3_Equals(_self_.get()._field_Elem, _43513_sptr.get()._field_Elem);
}







std::ostream &operator<<(std::ostream &_Stream, _1e313d115_Sptr _Src) {
	_Stream << "Sptr{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e313e07d_Str(_1e313da72_Slc* _self_) {
	return (jule::Str("[]", 2) + _1e31352a5_Str((*_self_)._field_Elem.ptr()));
}



inline jule::Bool _1e313e38b_Equals(jule::Ptr<_1e313da72_Slc> _self_, jule::Ptr<_1e3134da9_TypeKind> _45326_other) {
	jule::Ptr<_1e313da72_Slc> _45413_slc = _1e3137e45_Slc(_45326_other.ptr());;
	if ((_45413_slc == nullptr)) {
		return false;
	};
	return _1e31355b3_Equals(_self_.get()._field_Elem, _45413_slc.get()._field_Elem);
}







std::ostream &operator<<(std::ostream &_Stream, _1e313da72_Slc _Src) {
	_Stream << "Slc{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e313e963_Str(_1e313e600_Tuple* _self_) {
	jule::Str _47017_s = jule::Str("(", 1);;
	_47017_s+=_1e31352a5_Str((*_self_)._field_Types[0LL].ptr());
	{
		auto expr = (*_self_)._field_Types.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1e606aa34:;
		if (it != expr.end()) {
			jule::Ptr<_1e3134da9_TypeKind> &_47216_t = *it;
			{
				_47017_s+=jule::Str(",", 1);
				_47017_s+=_1e31352a5_Str(_47216_t.ptr());
			}
			_iter_next_1e606aa34:;
			++it;
			goto _iter_begin_1e606aa34;
		}
		_iter_end_1e606aa34:;
	};
	_47017_s+=jule::Str(")", 1);
	return _47017_s;
}



inline jule::Bool _1e313ec71_Equals(jule::Ptr<_1e313e600_Tuple> _self_, jule::Ptr<_1e3134da9_TypeKind> _48126_other) {
	jule::Ptr<_1e313e600_Tuple> _48213_tup = _1e3138b5a_Tup(_48126_other.ptr());;
	if ((_48213_tup == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_Types.len() != _48213_tup.get()._field_Types.len())) {
		return false;
	};
	jule::I64 _48917_i = 0LL;;
	for (; (_48917_i < _self_.get()._field_Types.len()); (_48917_i)++) {
		{
			if ((!(_1e31355b3_Equals(_self_.get()._field_Types[_48917_i], _48213_tup.get()._field_Types[_48917_i])))) {
				return false;
			};
		}
	_iter_next_1e606e120:;
	}
	_iter_end_1e606e120:;;
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1e313e600_Tuple _Src) {
	_Stream << "Tuple{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e314048b_Str(_1e3140128_Map* _self_) {
	jule::Str _50917_s = jule::Str("[", 1);;
	_50917_s+=_1e31352a5_Str((*_self_)._field_Key.ptr());
	_50917_s+=jule::Str(":", 1);
	_50917_s+=_1e31352a5_Str((*_self_)._field_Val.ptr());
	_50917_s+=jule::Str("]", 1);
	return _50917_s;
}



inline jule::Bool _1e3140799_Equals(jule::Ptr<_1e3140128_Map> _self_, jule::Ptr<_1e3134da9_TypeKind> _51826_other) {
	jule::Ptr<_1e3140128_Map> _51913_map = _1e31388e6_Map(_51826_other.ptr());;
	if ((_51913_map == nullptr)) {
		return false;
	};
	return (_1e31355b3_Equals(_self_.get()._field_Key, _51913_map.get()._field_Key) && _1e31355b3_Equals(_self_.get()._field_Val, _51913_map.get()._field_Val));
}







std::ostream &operator<<(std::ostream &_Stream, _1e3140128_Map _Src) {
	_Stream << "Map{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e3141080_Str(_1e3140c1c_Arr* _self_) {
	jule::Str _53717_s = jule::Str("[", 1);;
	_53717_s+=_1e31c54ee_Itoa((*_self_)._field_N);
	_53717_s+=jule::Str("]", 1);
	_53717_s+=_1e31352a5_Str((*_self_)._field_Elem.ptr());
	return _53717_s;
}



inline jule::Bool _1e314138d_Equals(jule::Ptr<_1e3140c1c_Arr> _self_, jule::Ptr<_1e3134da9_TypeKind> _54526_other) {
	jule::Ptr<_1e3140c1c_Arr> _54613_arr = _1e3137bd1_Arr(_54526_other.ptr());;
	if ((_54613_arr == nullptr)) {
		return false;
	};
	return ((_self_.get()._field_N == _54613_arr.get()._field_N) && _1e31355b3_Equals(_self_.get()._field_Elem, _54613_arr.get()._field_Elem));
}







std::ostream &operator<<(std::ostream &_Stream, _1e3140c1c_Arr _Src) {
	_Stream << "Arr{";
	_Stream << "Auto:" << _Src._field_Auto << ", ";
	_Stream << "N:" << _Src._field_N << ", ";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e31419dc_Str(_1e3141679_Ptr* _self_) {
	if (_1e314214c_IsUnsafe(&(*_self_))) {
		return jule::Str("*unsafe", 7);
	};
	return (jule::Str("*", 1) + _1e31352a5_Str((*_self_)._field_Elem.ptr()));
}



inline jule::Bool _1e3141cea_Equals(jule::Ptr<_1e3141679_Ptr> _self_, jule::Ptr<_1e3134da9_TypeKind> _56926_other) {
	jule::Ptr<_1e3141679_Ptr> _57013_ptr = _1e3137494_Ptr(_56926_other.ptr());;
	if ((_57013_ptr == nullptr)) {
		return false;
	};
	return _1e31355b3_Equals(_self_.get()._field_Elem, _57013_ptr.get()._field_Elem);
}



inline jule::Bool _1e314214c_IsUnsafe(_1e3141679_Ptr* _self_) {
	return ((*_self_)._field_Elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e3141679_Ptr _Src) {
	_Stream << "Ptr{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e31425c0_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1e3143a22_pushErr(_1e3143318_typeChecker* _self_, jule::Ptr<_1d42b43cc_Token> _64726_token, jule::Str _64741_fmt, jule::Slice<jule::Any> _64754_args) {
	_1e321142a_pushErr((*_self_)._field_s.ptr(), _64726_token,_64741_fmt,jule::Any(_64754_args));
}



inline void _1e3143bed_allowBuiltin(_1e3143318_typeChecker* _self_) {
	(*_self_)._field_disBuiltin=false;
}



inline void _1e3143dc9_disallowBuiltin(_1e3143318_typeChecker* _self_) {
	(*_self_)._field_disBuiltin=true;
}



inline jule::Ptr<_1e3139881_Prim> _1e31441d7_buildPrim(_1e3143318_typeChecker* _self_, jule::Ptr<_1e2515c4c_IdentTypeDecl>& _65929_decl) {
	if ((!(_1e314d2ce_isPrim(_65929_decl.get()._field_Ident)))) {
		_1e3143a22_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_65929_decl.get()._field_Generics.len() > 0LL)) {
		_1e3143a22_pushErr(&(*_self_), _65929_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_65929_decl.get()._field_Ident)}));
		return nullptr;
	};
	return _1e314cc90_buildPrimType(_65929_decl.get()._field_Ident);
}



inline void _1e607d9e2_pushReference(_1e3143318_typeChecker* _self_, jule::Ptr<_1e253220d_StructIns>& _67340_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_1e5d0c034_Exist((*_self_)._field_refers.ptr(), _67340_t)) {
		return;;
	};
	_1e2592b0e_Push((*_self_)._field_refers.ptr(), jule::Any(_67340_t));
}

inline void _1e6081a8e_pushReference(_1e3143318_typeChecker* _self_, jule::Ptr<_1e259d246_Trait>& _67340_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_1e60836a6_Exist((*_self_)._field_refers.ptr(), _67340_t)) {
		return;;
	};
	_1e2592b0e_Push((*_self_)._field_refers.ptr(), jule::Any(_67340_t));
}



inline void _1e31446d2_pushReferenceByKind(_1e3143318_typeChecker* _self_, jule::Ptr<_1e3134da9_TypeKind>& _68343_k) {
	{
		
		if ((_1e313841d_Struct(_68343_k.ptr()) != nullptr)) {
			_case_begin_1e607c64a:;
			{
				jule::Ptr<_1e253220d_StructIns> _68621_t = _1e313841d_Struct(_68343_k.ptr());;
				_1e607d9e2_pushReference(&(*_self_), _68621_t);
			}
		}
		else if ((_1e3138682_Trait(_68343_k.ptr()) != nullptr)) {
			_case_begin_1e607c6c2:;
			{
				jule::Ptr<_1e259d246_Trait> _68921_t = _1e3138682_Trait(_68343_k.ptr());;
				_1e6081a8e_pushReference(&(*_self_), _68921_t);
			}
		}
		_match_end_1e607c529:;
	};
}



inline void _1e3144a9a_pushCycleError(_1e3143318_typeChecker* _self_, jule::Any _69429_def1, jule::Any _69440_def2, jule::Str& _69456_message) {
	;
	jule::Fn<jule::Str(jule::Any&)> _69613_getIdent = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _69628_def) mutable -> jule::Str {
		{
			auto &_match_expr{ _69628_def };
			
			if (_match_expr.type_is<jule::Ptr<_1e31341b6_TypeAlias>>()) {
				_case_begin_1e6086a61:;
				{
					return _69628_def.operator jule::Ptr<_1e31341b6_TypeAlias>().get()._field_Ident;
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1e2505d6e_Struct>>()) {
				_case_begin_1e6086ac7:;
				{
					return _69628_def.operator jule::Ptr<_1e2505d6e_Struct>().get()._field_Ident;
				}
			}
			else {
				_case_begin_1e60868c9:;
				{
					return jule::Str();
				}
			}
			_match_end_1e60867ec:;
		};
	});;
	jule::Str _70613_def1Ident = _69613_getIdent(_69429_def1);;
	jule::Str _70713_def2Ident = _69613_getIdent(_69440_def2);;
	jule::Str _70813_refersTo = _20a354d5e_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_70613_def1Ident),jule::Any(_70713_def2Ident)}));;
	(_69456_message).buffer.insert(0, (((_20a110026_Repeat(jule::Str(" ", 1),4LL) + _70813_refersTo) + jule::Str("\n", 1))));;
}



inline jule::Bool _1e3144e52_checkCrossCycle(_1e3143318_typeChecker* _self_, jule::Any _71230_decl, jule::Str& _71246_message) {
	{
		auto &_match_expr{ _71230_decl };
		
		if (_match_expr.type_is<jule::Ptr<_1e31341b6_TypeAlias>>()) {
			_case_begin_1e608939e:;
			{
				jule::Ptr<_1e31341b6_TypeAlias> _71517_ta = _71230_decl.operator jule::Ptr<_1e31341b6_TypeAlias>();;
				{
					auto &expr = _71517_ta.get()._field_Refers;
					auto it = expr.begin();
					_iter_begin_1e608a15d:;
					if (it != expr.end()) {
						jule::Any &_71620_d = *it;
						{
							{
								
								if ((_71620_d == (*_self_)._field_referencer.get()._field_owner)) {
									_case_begin_1e608aadc:;
									{
										_1e3144a9a_pushCycleError(&(*_self_), jule::Any(_71517_ta),jule::Any(_71620_d),_71246_message);
										return false;
									}
								}
								else if ((!(_1e3144e52_checkCrossCycle(&(*_self_), jule::Any(_71620_d),_71246_message)))) {
									_case_begin_1e608ab64:;
									{
										_1e3144a9a_pushCycleError(&(*_self_), jule::Any(_71517_ta),jule::Any(_71620_d),_71246_message);
										return false;
									}
								}
								_match_end_1e608a9bb:;
							};
						}
						_iter_next_1e608a15d:;
						++it;
						goto _iter_begin_1e608a15d;
					}
					_iter_end_1e608a15d:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2505d6e_Struct>>()) {
			_case_begin_1e6089415:;
			{
				jule::Ptr<_1e2505d6e_Struct> _72717_s = _71230_decl.operator jule::Ptr<_1e2505d6e_Struct>();;
				{
					auto &expr = _72717_s.get()._field_Depends;
					auto it = expr.begin();
					_iter_begin_1e608bd52:;
					if (it != expr.end()) {
						jule::Ptr<_1e2505d6e_Struct> &_72820_d = *it;
						{
							{
								
								if (((*_self_)._field_referencer.get()._field_owner == _72820_d)) {
									_case_begin_1e608d1c7:;
									{
										_1e3144a9a_pushCycleError(&(*_self_), jule::Any(_72717_s),jule::Any(_72820_d),_71246_message);
										return false;
									}
								}
								else if ((!(_1e3144e52_checkCrossCycle(&(*_self_), jule::Any(_72820_d),_71246_message)))) {
									_case_begin_1e608d24e:;
									{
										_1e3144a9a_pushCycleError(&(*_self_), jule::Any(_72717_s),jule::Any(_72820_d),_71246_message);
										return false;
									}
								}
								_match_end_1e608d0a6:;
							};
						}
						_iter_next_1e608bd52:;
						++it;
						goto _iter_begin_1e608bd52;
					}
					_iter_end_1e608bd52:;
				};
			}
		}
		_match_end_1e60892b1:;
	};
	return true;
}



inline jule::Bool _1e3145309_checkIllegalCycles(_1e3143318_typeChecker* _self_, jule::Ptr<_1e2515c4c_IdentTypeDecl>& _74638_ident, jule::Any _74665_decl) {
	jule::Bool _74678_ok = jule::Bool();
	if (((*_self_)._field_referencer == nullptr)) {
		_74678_ok = true;
		return _74678_ok;
	};
	{
		auto &_match_expr{ _74665_decl };
		
		if (_match_expr.type_is<jule::Ptr<_1e2505d6e_Struct>>()) {
			_case_begin_1e608e30a:;
			{
				if (((*_self_)._field_notPlain || _74665_decl.operator jule::Ptr<_1e2505d6e_Struct>().get()._field_CppLinked)) {
					_74678_ok = true;
					return _74678_ok;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e31341b6_TypeAlias>>()) {
			_case_begin_1e608e44d:;
			{
				if (_74665_decl.operator jule::Ptr<_1e31341b6_TypeAlias>().get()._field_CppLinked) {
					_74678_ok = true;
					return _74678_ok;
				};
			}
		}
		_match_end_1e608e2a5:;
	};
	if ((_74665_decl == (*_self_)._field_referencer.get()._field_owner)) {
		_1e3143a22_pushErr(&(*_self_), _74638_ident.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_referencer.get()._field_ident)}));
		_74678_ok = false;
		return _74678_ok;
	};
	jule::Str _76917_message = jule::Str();;
	if ((!(_1e3144e52_checkCrossCycle(&(*_self_), jule::Any(_74665_decl),_76917_message)))) {
		jule::Str _77221_errMsg = _76917_message;;
		_76917_message=jule::Str();
		_1e3144a9a_pushCycleError(&(*_self_), jule::Any((*_self_)._field_referencer.get()._field_owner),jule::Any(_74665_decl),_76917_message);
		_77221_errMsg=(_77221_errMsg + _76917_message);
		_1e3143a22_pushErr(&(*_self_), _74638_ident.get()._field_Token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_77221_errMsg)}));
		_74678_ok = false;
		return _74678_ok;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_1e31341b6_TypeAlias>>()) {
			_case_begin_1e60994ad:;
			{
				{
					(*((*_self_)._field_referencer.get()._field_refs))=jule::append((*((*_self_)._field_referencer.get()._field_refs)),jule::Slice<jule::Any>::make({jule::Any(_74665_decl)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2505d6e_Struct>>()) {
			_case_begin_1e6099579:;
			{
				{
					auto &_match_expr{ _74665_decl };
					
					if (_match_expr.type_is<jule::Ptr<_1e2505d6e_Struct>>()) {
						_case_begin_1e6099cc7:;
						{
							jule::Ptr<_1e2505d6e_Struct> _78825_s = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_1e2505d6e_Struct>();;
							_78825_s.get()._field_Depends = jule::alloc_for_append(_78825_s.get()._field_Depends,1);_78825_s.get()._field_Depends.__push(_74665_decl.operator jule::Ptr<_1e2505d6e_Struct>());;
						}
					}
					_match_end_1e6099bd9:;
				};
			}
		}
		_match_end_1e6099458:;
	};
	_74678_ok = true;
	return _74678_ok;
}



inline jule::Trait<_1e313497a_Kind> _1e31456b1_fromTypeAlias(_1e3143318_typeChecker* _self_, jule::Ptr<_1e2515c4c_IdentTypeDecl>& _79633_decl, jule::Ptr<_1e31341b6_TypeAlias>& _79660_ta) {
	if ((!(_1e3211b01_isAccessibleDefine((*_self_)._field_s.ptr(), _79660_ta.get()._field_Public,_79660_ta.get()._field_Token)))) {
		_1e3143a22_pushErr(&(*_self_), _79633_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_79633_decl.get()._field_Ident)}));
		return nullptr;
	};
	_79660_ta.get()._field_Used=true;
	if ((_79633_decl.get()._field_Generics.len() > 0LL)) {
		_1e3143a22_pushErr(&(*_self_), _79633_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_79633_decl.get()._field_Ident)}));
		return nullptr;
	};
	if (((!((*_self_)._field_inscatch)) && ((*_self_)._field_bannedGenerics != nullptr))) {
		(*_self_)._field_inscatch=true;
		{
			auto &expr = (*_self_)._field_bannedGenerics;
			auto it = expr.begin();
			_iter_begin_1e609e64a:;
			if (it != expr.end()) {
				jule::Ptr<_1e31341b6_TypeAlias> _81320_bg = *it;
				{
					if (((_81320_bg == _79660_ta) || ((_79660_ta.get()._field_Kind.get()._field_Kind != nullptr) && _1e31355b3_Equals(_79660_ta.get()._field_Kind.get()._field_Kind, _81320_bg.get()._field_Kind.get()._field_Kind)))) {
						(*_self_)._field_inscatch=false;
						goto _iter_end_1e609e64a;
					};
				}
				_iter_next_1e609e64a:;
				++it;
				goto _iter_begin_1e609e64a;
			}
			_iter_end_1e609e64a:;
		};
	};
	if ((*_self_)._field_inscatch) {
		{
			auto &expr = (*_self_)._field_bannedGenerics;
			auto it = expr.begin();
			_iter_begin_1e60a1471:;
			if (it != expr.end()) {
				jule::Ptr<_1e31341b6_TypeAlias> _82420_bg = *it;
				{
					if ((_82420_bg == _79660_ta)) {
						_1e3143a22_pushErr(&(*_self_), _79633_decl.get()._field_Token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_79633_decl.get()._field_Ident)}));
						return nullptr;
					};
					{
						auto &expr = _79660_ta.get()._field_Generics;
						auto it = expr.begin();
						_iter_begin_1e60a1e11:;
						if (it != expr.end()) {
							jule::Ptr<_1e31341b6_TypeAlias> _82924_dg = *it;
							{
								if ((_82420_bg == _82924_dg)) {
									_1e3143a22_pushErr(&(*_self_), _79633_decl.get()._field_Token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_79633_decl.get()._field_Ident)}));
									return nullptr;
								};
							}
							_iter_next_1e60a1e11:;
							++it;
							goto _iter_begin_1e60a1e11;
						}
						_iter_end_1e60a1e11:;
					};
				}
				_iter_next_1e60a1471:;
				++it;
				goto _iter_begin_1e60a1471;
			}
			_iter_end_1e60a1471:;
		};
	};
	jule::Bool _83817_ok = _1e3145309_checkIllegalCycles(&(*_self_), _79633_decl,jule::Any(_79660_ta));;
	if ((!(_83817_ok))) {
		return nullptr;
	};
	_83817_ok=_1e321a08d_checkTypeAliasDeclKind((*_self_)._field_s, _79660_ta,(*_self_)._field_lookup);
	if ((!(_83817_ok))) {
		return nullptr;
	};
	if ((_79660_ta.get()._field_Generic && ((*_self_)._field_ownerAlias != nullptr))) {
		(*_self_)._field_ownerAlias.get()._field_Generics = jule::alloc_for_append((*_self_)._field_ownerAlias.get()._field_Generics,1);(*_self_)._field_ownerAlias.get()._field_Generics.__push(_79660_ta);;
	};
	jule::Ptr<_1e3134da9_TypeKind> _85517_tk = jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Generic=_79660_ta.get()._field_Generic, ._field_Kind=_79660_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind});;
	_1e31446d2_pushReferenceByKind(&(*_self_), _85517_tk);
	if (_79660_ta.get()._field_CppLinked) {
		_85517_tk.get()._field_CppIdent=_79660_ta.get()._field_Ident;
	} else {
		_85517_tk.get()._field_CppIdent=_79660_ta.get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
	};
	return jule::Trait<_1e313497a_Kind>(_85517_tk, 5);
}



inline jule::Ptr<_1e25a038b_Enum> _1e3145a68_fromEnum(_1e3143318_typeChecker* _self_, jule::Ptr<_1e2515c4c_IdentTypeDecl>& _86828_decl, jule::Ptr<_1e25a038b_Enum>& _86855_e) {
	if ((!(_1e3211b01_isAccessibleDefine((*_self_)._field_s.ptr(), _86855_e.get()._field_Public,_86855_e.get()._field_Token)))) {
		_1e3143a22_pushErr(&(*_self_), _86828_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_86828_decl.get()._field_Ident)}));
		return nullptr;
	};
	if ((_86828_decl.get()._field_Generics.len() > 0LL)) {
		_1e3143a22_pushErr(&(*_self_), _86828_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_86828_decl.get()._field_Ident)}));
		return nullptr;
	};
	return _86855_e;
}



inline jule::Ptr<_1e25a1986_TypeEnum> _1e3145e20_fromTypeEnum(_1e3143318_typeChecker* _self_, jule::Ptr<_1e2515c4c_IdentTypeDecl>& _88032_decl, jule::Ptr<_1e25a1986_TypeEnum>& _88059_e) {
	if ((!(_1e3211b01_isAccessibleDefine((*_self_)._field_s.ptr(), _88059_e.get()._field_Public,_88059_e.get()._field_Token)))) {
		_1e3143a22_pushErr(&(*_self_), _88032_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_88032_decl.get()._field_Ident)}));
		return nullptr;
	};
	if ((_88032_decl.get()._field_Generics.len() > 0LL)) {
		_1e3143a22_pushErr(&(*_self_), _88032_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_88032_decl.get()._field_Ident)}));
		return nullptr;
	};
	return _88059_e;
}



inline jule::Ptr<_1e259d246_Trait> _1e31462c7_fromTrait(_1e3143318_typeChecker* _self_, jule::Ptr<_1e2515c4c_IdentTypeDecl>& _89229_decl, jule::Ptr<_1e259d246_Trait>& _89256_t) {
	if ((!(_1e3211b01_isAccessibleDefine((*_self_)._field_s.ptr(), _89256_t.get()._field_Public,_89256_t.get()._field_Token)))) {
		_1e3143a22_pushErr(&(*_self_), _89229_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_89229_decl.get()._field_Ident)}));
		return nullptr;
	};
	if ((_89229_decl.get()._field_Generics.len() > 0LL)) {
		_1e3143a22_pushErr(&(*_self_), _89229_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_89229_decl.get()._field_Ident)}));
		return nullptr;
	};
	_1e6081a8e_pushReference(&(*_self_), _89256_t);
	return _89256_t;
}



inline jule::Bool _1e314667e_checkStructIns(_1e3143318_typeChecker* _self_, jule::Ptr<_1e253220d_StructIns>& _90538_ins, jule::Ptr<_1d42b43cc_Token>& _90560_errorToken) {
	jule::Bool _90582_ok = jule::Bool();
	if (_90538_ins.get()._field_Checked) {
		_90582_ok = true;
		return _90582_ok;
	};
	_90538_ins.get()._field_Checked=true;
	if ((((*_self_)._field_referencer != nullptr) && ((*_self_)._field_referencer.get()._field_owner == _90538_ins.get()._field_Decl))) {
		_90582_ok = true;
		return _90582_ok;
	};
	if ((!(_1e322421d_precheckStructIns((*_self_)._field_s, _90538_ins,_90560_errorToken)))) {
		_90582_ok = false;
		return _90582_ok;
	};
	if ((_90538_ins.get()._field_Generics.len() > 0LL)) {
		_1e3224b8b_checkStructInsOperators((*_self_)._field_s, _90538_ins);
		_1e3224493_checkStructIns((*_self_)._field_s, _90538_ins);
	};
	_90582_ok = true;
	return _90582_ok;
}



inline void _1e3146926_appendUsedStructReference(_1e3143318_typeChecker* _self_, jule::Ptr<_1e2505d6e_Struct>& _92649_s) {
	if (((*_self_)._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_1e2505d6e_Struct>>()) {
			_case_begin_1e60b3274:;
			{
				jule::Ptr<_1e2505d6e_Struct> _93221_refS = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_1e2505d6e_Struct>();;
				if ((!(_1e24eab77_IsUses(_93221_refS.ptr(), _92649_s)))) {
					_93221_refS.get()._field_Uses = jule::alloc_for_append(_93221_refS.get()._field_Uses,1);_93221_refS.get()._field_Uses.__push(_92649_s);;
				};
			}
		}
		_match_end_1e60b2e88:;
	};
}



inline jule::Ptr<_1e253220d_StructIns> _1e3146cde_buildStructInstance(_1e3143318_typeChecker* _self_, jule::Ptr<_1e2515c4c_IdentTypeDecl>& _93943_decl, jule::Ptr<_1e2505d6e_Struct>& _93970_s) {
	jule::Ptr<_1e31425c0_referencer> _94117_referencer = (*_self_)._field_referencer;;
	(*_self_)._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1e31341b6_TypeAlias>> _94317_bannedGenerics = (*_self_)._field_bannedGenerics;;
	if (((*_self_)._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*_self_)._field_lookup };
			
			if (_match_expr.type_is<jule::Ptr<_1e31dd89c_scopeChecker>>()) {
				_case_begin_1e60b5e58:;
				{
					jule::Ptr<_1e31dd89c_scopeChecker> _95025_sc = (*_self_)._field_lookup.operator jule::Ptr<_1e31dd89c_scopeChecker>();;
					jule::Ptr<_1e31dd89c_scopeChecker> _95125_hard = _1e31e1c24_getHardRoot(_95025_sc);;
					if (((_95125_hard.get()._field_owner.get()._field_Owner == nullptr) || (_95125_hard.get()._field_owner.get()._field_Owner.get()._field_Decl != _93970_s))) {
						goto _match_end_1e60b5e03;
					};
					jule::I64 _95521_n = (_95125_hard.get()._field_owner.get()._field_Generics.len() + _95125_hard.get()._field_owner.get()._field_Owner.get()._field_Generics.len());;
					(*_self_)._field_bannedGenerics=_95125_hard.get()._field_table.get()._field_TypeAliases.slice(0LL,_95521_n);
				}
			}
			_match_end_1e60b5e03:;
		};
	} else {
		(*_self_)._field_inscatch=true;
	};
	jule::Ptr<_1e253220d_StructIns> _96517_ins = _1e24dd274_instance(_93970_s);;
	_96517_ins.get()._field_Generics=jule::Slice<jule::Ptr<_1e313367c_InsGeneric>>::alloc(0LL,_93943_decl.get()._field_Generics.len());
	{
		auto &expr = _93943_decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1e60b9b4e:;
		if (it != expr.end()) {
			jule::Ptr<_1e2515686_TypeDecl> _96721_g = *it;
			{
				jule::Ptr<_1e3134da9_TypeKind> _96821_kind = _1e314a276_build(&(*_self_), _96721_g.get()._field_Kind);;
				if ((_96821_kind == nullptr)) {
					return nullptr;
				};
				_96517_ins.get()._field_Generics = jule::alloc_for_append(_96517_ins.get()._field_Generics,1);_96517_ins.get()._field_Generics.__push(jule::new_ptr<_1e313367c_InsGeneric>(_1e313367c_InsGeneric{._field_Kind=_96821_kind, }));;
			}
			_iter_next_1e60b9b4e:;
			++it;
			goto _iter_begin_1e60b9b4e;
		}
		_iter_end_1e60b9b4e:;
	};
	(*_self_)._field_bannedGenerics=_94317_bannedGenerics;
	(*_self_)._field_referencer=_94117_referencer;
	return _96517_ins;
}



inline jule::Ptr<_1e253220d_StructIns> _1e3147196_fromStruct(_1e3143318_typeChecker* _self_, jule::Ptr<_1e2515c4c_IdentTypeDecl>& _98234_decl, jule::Ptr<_1e2505d6e_Struct>& _98261_s) {
	if ((!(_1e3211b01_isAccessibleDefine((*_self_)._field_s.ptr(), _98261_s.get()._field_Public,_98261_s.get()._field_Token)))) {
		_1e3143a22_pushErr(&(*_self_), _98234_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_98234_decl.get()._field_Ident)}));
		return nullptr;
	};
	if ((*_self_)._field_selection) {
		if ((_98234_decl.get()._field_Generics.len() > 0LL)) {
			_1e3143a22_pushErr(&(*_self_), _98234_decl.get()._field_Token,jule::Str("generics are not allowed in this scope", 38),jule::Slice<jule::Any>());
			return nullptr;
		};
		return jule::new_ptr<_1e253220d_StructIns>(_1e253220d_StructIns{._field_Decl=_98261_s, });
	};
	jule::Bool _100017_ok = ((*_self_)._field_notPlain || _1e3145309_checkIllegalCycles(&(*_self_), _98234_decl,jule::Any(_98261_s)));;
	if ((!(_100017_ok))) {
		return nullptr;
	};
	_1e3146926_appendUsedStructReference(&(*_self_), _98261_s);
	jule::Ptr<_1e253220d_StructIns> _100617_ins = _1e3146cde_buildStructInstance(&(*_self_), _98234_decl,_98261_s);;
	if ((_100617_ins == nullptr)) {
		return nullptr;
	};
	_100017_ok=_1e32127c2_checkGenericQuantity((*_self_)._field_s.ptr(), static_cast<jule::I64>(_100617_ins.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_100617_ins.get()._field_Generics.len()),_98234_decl.get()._field_Token);
	if ((!(_100017_ok))) {
		return nullptr;
	};
	jule::Ptr<_1e253220d_StructIns> _101617_existInstance = _1e24e24dc_appendInstance(_98261_s.ptr(), _100617_ins);;
	if ((_101617_existInstance != nullptr)) {
		if ((!(_1e3218740_checkConstraintsStruct((*_self_)._field_s, _100617_ins,_98234_decl.get()._field_Token,_101617_existInstance)))) {
			return nullptr;
		};
		_1e607d9e2_pushReference(&(*_self_), _101617_existInstance);
		return _101617_existInstance;
	};
	if ((!(_1e314667e_checkStructIns(&(*_self_), _100617_ins,_98234_decl.get()._field_Token)))) {
		return nullptr;
	};
	_1e607d9e2_pushReference(&(*_self_), _100617_ins);
	return _100617_ins;
}



inline jule::Trait<_1e313497a_Kind> _1e31474a4_getDef(_1e3143318_typeChecker* _self_, jule::Ptr<_1e2515c4c_IdentTypeDecl>& _104030_decl) {
	{
		auto &expr = (*_self_)._field_ignoreGenerics;
		auto it = expr.begin();
		_iter_begin_1e60c48d4:;
		if (it != expr.end()) {
			jule::Ptr<_1e2522c6a_GenericDecl> _104116_g = *it;
			{
				if ((_104116_g.get()._field_Ident == _104030_decl.get()._field_Ident)) {
					return jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(_104116_g.get()._field_Ident), 6);
				};
			}
			_iter_next_1e60c48d4:;
			++it;
			goto _iter_begin_1e60c48d4;
		}
		_iter_end_1e60c48d4:;
	};
	{
		auto &expr = (*_self_)._field_useGenerics;
		auto it = expr.begin();
		_iter_begin_1e60c520e:;
		if (it != expr.end()) {
			jule::Ptr<_1e31341b6_TypeAlias> _104721_g = *it;
			{
				if ((_104721_g.get()._field_Ident == _104030_decl.get()._field_Ident)) {
					if ((_104030_decl.get()._field_Generics.len() > 0LL)) {
						_1e3143a22_pushErr(&(*_self_), _104030_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_104030_decl.get()._field_Ident)}));
						return nullptr;
					};
					jule::Ptr<_1e253220d_StructIns> _105325_st = _1e313841d_Struct(_104721_g.get()._field_Kind.get()._field_Kind.ptr());;
					if ((_105325_st != nullptr)) {
						jule::Bool _105525_ok = _1e3145309_checkIllegalCycles(&(*_self_), _104030_decl,jule::Any(_105325_st.get()._field_Decl));;
						if ((!(_105525_ok))) {
							return nullptr;
						};
					};
					return _104721_g.get()._field_Kind.get()._field_Kind.get()._field_Kind;
				};
			}
			_iter_next_1e60c520e:;
			++it;
			goto _iter_begin_1e60c520e;
		}
		_iter_end_1e60c520e:;
	};
	if ((!(_104030_decl.get()._field_CppLinked))) {
		jule::Ptr<_1e25a038b_Enum> _106521_e = _1e315091e_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1e31504bd_FindEnum((*_self_)._field_lookup, _104030_decl.get()._field_Ident);;
		if ((_106521_e != nullptr)) {
			return jule::Trait<_1e313497a_Kind>(_1e3145a68_fromEnum(&(*_self_), _104030_decl,_106521_e), 3);
		};
		jule::Ptr<_1e25a1986_TypeEnum> _107021_te = _1e315091e_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1e31507cb_FindTypeEnum((*_self_)._field_lookup, _104030_decl.get()._field_Ident);;
		if ((_107021_te != nullptr)) {
			return jule::Trait<_1e313497a_Kind>(_1e3145e20_fromTypeEnum(&(*_self_), _104030_decl,_107021_te), 4);
		};
		jule::Ptr<_1e259d246_Trait> _107521_t = _1e315091e_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1e31501b0_FindTrait((*_self_)._field_lookup, _104030_decl.get()._field_Ident);;
		if ((_107521_t != nullptr)) {
			return jule::Trait<_1e313497a_Kind>(_1e31462c7_fromTrait(&(*_self_), _104030_decl,_107521_t), 2);
		};
	} else if ((*_self_)._field_selection) {
		_1e3143a22_pushErr(&(*_self_), _104030_decl.get()._field_Token,jule::Str("cpp-linked definitions are not allowed in this scope", 52),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e2505d6e_Struct> _108417_s = _1e315091e_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1e314e9ea_FindStruct((*_self_)._field_lookup, _104030_decl.get()._field_Ident,_104030_decl.get()._field_CppLinked);;
	if ((_108417_s != nullptr)) {
		return jule::Trait<_1e313497a_Kind>(_1e3147196_fromStruct(&(*_self_), _104030_decl,_108417_s), 0);
	};
	jule::Ptr<_1e31341b6_TypeAlias> _108917_ta = _1e315091e_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1e314e643_FindTypeAlias((*_self_)._field_lookup, _104030_decl.get()._field_Ident,_104030_decl.get()._field_CppLinked);;
	if (((_108917_ta == nullptr) && (!((*_self_)._field_disBuiltin)))) {
		_108917_ta=_1e3259d8b_findBuiltinTypeAlias(_104030_decl.get()._field_Ident);
	};
	if ((_108917_ta != nullptr)) {
		return _1e31456b1_fromTypeAlias(&(*_self_), _104030_decl,_108917_ta);
	};
	_1e3143a22_pushErr(&(*_self_), _104030_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_104030_decl.get()._field_Ident)}));
	return nullptr;
}



inline jule::Trait<_1e313497a_Kind> _1e31477b2_buildIdent(_1e3143318_typeChecker* _self_, jule::Ptr<_1e2515c4c_IdentTypeDecl> _110133_decl) {
	{
		
		if (_1e314d2ce_isPrim(_110133_decl.get()._field_Ident)) {
			_case_begin_1e60d0cb9:;
			{
				return jule::Trait<_1e313497a_Kind>(_1e31441d7_buildPrim(&(*_self_), _110133_decl), 6);
			}
		}
		else {
			_case_begin_1e60d0549:;
			{
				return _1e31474a4_getDef(&(*_self_), _110133_decl);
			}
		}
		_match_end_1e60d046c:;
	};
}



inline jule::Trait<_1e313497a_Kind> _1e3147ac0_buildSubIdent(_1e3143318_typeChecker* _self_, jule::Ptr<_1e251639b_SubIdentTypeDecl> _111036_decl) {
	jule::Trait<_1e313497a_Kind> _111117_ident = _1e31477b2_buildIdent(&(*_self_), _111036_decl.get()._field_Idents[0LL]);;
	if ((_111117_ident == nullptr)) {
		return nullptr;
	};
	{
		auto &_match_expr{ _111117_ident };
		
		if (_match_expr.type_is<jule::Ptr<_1e25a1986_TypeEnum>>()) {
			_case_begin_1e60d279e:;
			{
				goto _match_end_1e60d26c2;
			}
		}
		else {
			_case_begin_1e60d2491:;
			{
				_1e3143a22_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1e60d26c2:;
	};
	jule::Ptr<_1e25a1986_TypeEnum> _112317_t = _111117_ident.operator jule::Ptr<_1e25a1986_TypeEnum>();;
	jule::Slice<jule::Ptr<_1e2515c4c_IdentTypeDecl>> _112417_idents = _111036_decl.get()._field_Idents.slice(1LL);;
	{
		auto &expr = _112417_idents;
		auto it = expr.begin();
		_iter_begin_1e60d3ad0:;
		if (it != expr.end()) {
			jule::I64 _112513_i = it - expr.begin();
			jule::Ptr<_1e2515c4c_IdentTypeDecl> _112516_id = *it;
			{
				jule::Ptr<_1e25a13c0_TypeEnumItem> _112621_item = _1e25a24c0_FindItem(_112317_t.ptr(), _112516_id.get()._field_Ident);;
				if ((_112621_item == nullptr)) {
					_1e3143a22_pushErr(&(*_self_), _112516_id.get()._field_Token,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_112317_t.get()._field_Ident),jule::Any(_112516_id.get()._field_Ident)}));
					return nullptr;
				};
				if (((_112417_idents.len() - _112513_i) == 1LL)) {
					_1e31446d2_pushReferenceByKind(&(*_self_), _112621_item.get()._field_Kind.get()._field_Kind);
					return jule::Trait<_1e313497a_Kind>(_112621_item.get()._field_Kind.get()._field_Kind, 5);
				};
				_112317_t=_1e313796c_TypeEnum(_112621_item.get()._field_Kind.get()._field_Kind.ptr());
				if ((_112317_t == nullptr)) {
					_1e3143a22_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;
				};
			}
			_iter_next_1e60d3ad0:;
			++it;
			_112513_i++;
			goto _iter_begin_1e60d3ad0;
		}
		_iter_end_1e60d3ad0:;
	};
	return nullptr;
}



inline jule::Ptr<_1e313d115_Sptr> _1e3147dcd_buildSptrFromType(_1e3143318_typeChecker* _self_, jule::Ptr<_1e3134da9_TypeKind>& _114541_elem) {
	{
		
		if ((_114541_elem == nullptr)) {
			_case_begin_1e60d4592:;
			{
				return nullptr;
			}
		}
		else if ((_1e313841d_Struct(_114541_elem.ptr()) != nullptr)) {
			_case_begin_1e60d4619:;
			{
				jule::Ptr<_1e253220d_StructIns> _115117_s = _1e313841d_Struct(_114541_elem.ptr());;
				if (((_115117_s.get()._field_Decl != nullptr) && _115117_s.get()._field_Decl.get()._field_CppLinked)) {
					_1e3143a22_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
					return nullptr;
				};
			}
		}
		else if (((_1e3137bd1_Arr(_114541_elem.ptr()) != nullptr) && _1e3137bd1_Arr(_114541_elem.ptr()).get()._field_Auto)) {
			_case_begin_1e60d4691:;
			{
				_1e3143a22_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1e60d4460:;
	};
	return jule::new_ptr<_1e313d115_Sptr>(_1e313d115_Sptr{._field_Elem=_114541_elem});
}



inline jule::Ptr<_1e313d115_Sptr> _1e31481db_buildSptr(_1e3143318_typeChecker* _self_, jule::Ptr<_1e2516a3e_SptrTypeDecl> _116532_decl) {
	jule::Bool _116613_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_116613_notPlain;
	});;
	jule::Ptr<_1e3134da9_TypeKind> _117017_elem = _1e314a584_checkDecl(&(*_self_), _116532_decl.get()._field_Elem);;
	return _1e3147dcd_buildSptrFromType(&(*_self_), _117017_elem);
}



inline jule::Ptr<_1e3141679_Ptr> _1e31484e9_buildPtrFromType(_1e3143318_typeChecker* _self_, jule::Ptr<_1e3134da9_TypeKind>& _117440_elem) {
	{
		
		if ((_117440_elem == nullptr)) {
			_case_begin_1e60dcbe9:;
			{
				return nullptr;
			}
		}
		else if (((_1e3137bd1_Arr(_117440_elem.ptr()) != nullptr) && _1e3137bd1_Arr(_117440_elem.ptr()).get()._field_Auto)) {
			_case_begin_1e60dcc71:;
			{
				_1e3143a22_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return jule::new_ptr<_1e3141679_Ptr>();
			}
		}
		_match_end_1e60dcac8:;
	};
	return jule::new_ptr<_1e3141679_Ptr>(_1e3141679_Ptr{._field_Elem=_117440_elem});
}



inline jule::Ptr<_1e3141679_Ptr> _1e3148807_buildPtr(_1e3143318_typeChecker* _self_, jule::Ptr<_1e2517512_PtrTypeDecl> _118931_decl) {
	jule::Bool _119013_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_119013_notPlain;
	});;
	jule::Ptr<_1e3134da9_TypeKind> _119417_elem = nullptr;;
	if ((!(_1e2517864_IsUnsafe(_118931_decl.ptr())))) {
		_119417_elem=_1e314a584_checkDecl(&(*_self_), _118931_decl.get()._field_Elem);
		return _1e31484e9_buildPtrFromType(&(*_self_), _119417_elem);
	};
	return jule::new_ptr<_1e3141679_Ptr>(_1e3141679_Ptr{._field_Elem=_119417_elem});
}



inline jule::Ptr<_1e313da72_Slc> _1e3148b15_buildSlc(_1e3143318_typeChecker* _self_, jule::Ptr<_1e2516e3a_SlcTypeDecl> _120631_decl) {
	jule::Bool _120713_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_120713_notPlain;
	});;
	jule::Ptr<_1e3134da9_TypeKind> _121117_elem = _1e314a584_checkDecl(&(*_self_), _120631_decl.get()._field_Elem);;
	{
		
		if ((_121117_elem == nullptr)) {
			_case_begin_1e60e2e96:;
			{
				return nullptr;
			}
		}
		else if (((_1e3137bd1_Arr(_121117_elem.ptr()) != nullptr) && _1e3137bd1_Arr(_121117_elem.ptr()).get()._field_Auto)) {
			_case_begin_1e60e301d:;
			{
				_1e3143a22_pushErr(&(*_self_), _120631_decl.get()._field_Elem.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1e60e2ddb:;
	};
	return jule::new_ptr<_1e313da72_Slc>(_1e313da72_Slc{._field_Elem=_121117_elem});
}



inline jule::Ptr<_1e3140c1c_Arr> _1e3148e23_buildArr(_1e3143318_typeChecker* _self_, jule::Ptr<_1e2517b94_ArrTypeDecl> _122731_decl) {
	jule::Bool _122813_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_122813_notPlain;
	});;
	jule::I64 _123217_n = 0LL;;
	if ((!(_1e251806d_AutoSized(_122731_decl.ptr())))) {
		jule::Ptr<_1e310908c_Data> _123521_size = _1e312664d_evalExpr(_1e3216991_eval((*_self_)._field_s, (*_self_)._field_lookup), _122731_decl.get()._field_Size);;
		if ((_123521_size == nullptr)) {
			return nullptr;
		};
		if ((!(_1e3109950_IsConst(_123521_size.ptr())))) {
			_1e3143a22_pushErr(&(*_self_), _122731_decl.get()._field_Size.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
			return nullptr;
		} else if (((_1e3136ebb_Prim(_123521_size.get()._field_Kind.ptr()) == nullptr) || (!(_1e31cd183_IsInt(_1e3136ebb_Prim(_123521_size.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1e3143a22_pushErr(&(*_self_), _122731_decl.get()._field_Size.get()._field_Token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>());
			return nullptr;
		};
		_123217_n=static_cast<jule::I64>(static_cast<jule::I64>(_1e257c610_AsI64(_123521_size.get()._field_Constant.ptr())));
		if ((_123217_n < 0LL)) {
			_1e3143a22_pushErr(&(*_self_), _122731_decl.get()._field_Elem.get()._field_Token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>());
			return nullptr;
		} else if (((_1e26d018b_BitSize != 64LL) && (static_cast<jule::F64>(_123217_n) > _1e31c8ba6_Max(jule::Str("int", 3))))) {
			_1e3143a22_pushErr(&(*_self_), _122731_decl.get()._field_Size.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	jule::Ptr<_1e3134da9_TypeKind> _125817_elem = _1e314a584_checkDecl(&(*_self_), _122731_decl.get()._field_Elem);;
	{
		
		if ((_125817_elem == nullptr)) {
			_case_begin_1e60eb9b6:;
			{
				return nullptr;
			}
		}
		else if (((_1e3137bd1_Arr(_125817_elem.ptr()) != nullptr) && _1e3137bd1_Arr(_125817_elem.ptr()).get()._field_Auto)) {
			_case_begin_1e60eba2c:;
			{
				_1e3143a22_pushErr(&(*_self_), _122731_decl.get()._field_Elem.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1e60eb741:;
	};
	return jule::new_ptr<_1e3140c1c_Arr>(_1e3140c1c_Arr{._field_Auto=_1e251806d_AutoSized(_122731_decl.ptr()), ._field_N=_123217_n, ._field_Elem=_125817_elem});
}



inline jule::Ptr<_1e3140128_Map> _1e3149231_buildMap(_1e3143318_typeChecker* _self_, jule::Ptr<_1e25183e2_MapTypeDecl> _127631_decl) {
	jule::Bool _127713_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_127713_notPlain;
	});;
	jule::Ptr<_1e3134da9_TypeKind> _128117_key = _1e314a584_checkDecl(&(*_self_), _127631_decl.get()._field_Key);;
	if ((_128117_key == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1e3134da9_TypeKind> _128617_val = _1e314a584_checkDecl(&(*_self_), _127631_decl.get()._field_Val);;
	if ((_128617_val == nullptr)) {
		return nullptr;
	};
	if ((_1e3137708_Enum(_128617_val.ptr()) != nullptr)) {
		_1e3143a22_pushErr(&(*_self_), _127631_decl.get()._field_Val.get()._field_Token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1e3140128_Map>(_1e3140128_Map{._field_Key=_128117_key, ._field_Val=_128617_val});
}



inline jule::Ptr<_1e313e600_Tuple> _1e314953e_buildTuple(_1e3143318_typeChecker* _self_, jule::Ptr<_1e2517226_TupleTypeDecl> _130033_decl) {
	jule::Slice<jule::Ptr<_1e3134da9_TypeKind>> _130117_types = jule::Slice<jule::Ptr<_1e3134da9_TypeKind>>::alloc(0LL,_130033_decl.get()._field_Types.len());;
	{
		auto &expr = _130033_decl.get()._field_Types;
		auto it = expr.begin();
		_iter_begin_1e6102170:;
		if (it != expr.end()) {
			jule::Ptr<_1e2515686_TypeDecl> _130221_t = *it;
			{
				jule::Ptr<_1e3134da9_TypeKind> _130321_kind = _1e314a584_checkDecl(&(*_self_), _130221_t);;
				if ((_130321_kind == nullptr)) {
					return nullptr;
				};
				_130117_types = jule::alloc_for_append(_130117_types,1);_130117_types.__push(_130321_kind);;
			}
			_iter_next_1e6102170:;
			++it;
			goto _iter_begin_1e6102170;
		}
		_iter_end_1e6102170:;
	};
	return jule::new_ptr<_1e313e600_Tuple>(_1e313e600_Tuple{._field_Types=_130117_types});
}



inline jule::Bool _1e314984c_checkFnTypes(_1e3143318_typeChecker* _self_, jule::Ptr<_1e258dee5_FnIns>& _131336_f) {
	jule::Bool _131349_ok = jule::Bool();
	{
		auto &expr = _131336_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1e6104073:;
		if (it != expr.end()) {
			jule::Ptr<_1e258d126_ParamIns> _131421_p = *it;
			{
				_131421_p.get()._field_Kind=_1e314a276_build(&(*_self_), _131421_p.get()._field_Decl.get()._field_Kind.get()._field_Decl.get()._field_Kind);
				_131349_ok=(_131421_p.get()._field_Kind != nullptr);
				if ((!(_131349_ok))) {
					_131349_ok = false;
					return _131349_ok;
				};
				_1e3218d6c_checkFnParamKind((*_self_)._field_s, _131421_p);
			}
			_iter_next_1e6104073:;
			++it;
			goto _iter_begin_1e6104073;
		}
		_iter_end_1e6104073:;
	};
	if ((!(_1e258b7a6_IsVoid(_131336_f.get()._field_Decl.ptr())))) {
		_131336_f.get()._field_Result=_1e314a276_build(&(*_self_), _131336_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl.get()._field_Kind);
		_131349_ok = (_131336_f.get()._field_Result != nullptr);
		return _131349_ok;
	};
	_131349_ok = true;
	return _131349_ok;
}



inline jule::Ptr<_1e258dee5_FnIns> _1e3149b5a_buildFn(_1e3143318_typeChecker* _self_, jule::Ptr<_1e252749a_FnDecl> _133130_decl) {
	if ((_133130_decl.get()._field_Generics.len() > 0LL)) {
		_1e3143a22_pushErr(&(*_self_), _133130_decl.get()._field_Token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e258b344_Fn> _133717_f = _1e2595172_buildFn(_133130_decl);;
	jule::I64 _133913_n = (*_self_)._field_s.get()._field_errors.len();;
	_1e3220c86_checkFnDecl((*_self_)._field_s, _133717_f);
	if ((_133913_n != (*_self_)._field_s.get()._field_errors.len())) {
		return nullptr;
	};
	jule::Ptr<_1e258dee5_FnIns> _134517_ins = _1e258c730_instanceForce(_133717_f);;
	_134517_ins.get()._field_Anon=true;
	jule::Bool _134813_ok = _1e314984c_checkFnTypes(&(*_self_), _134517_ins);;
	if ((!(_134813_ok))) {
		return nullptr;
	};
	return _134517_ins;
}



inline jule::Trait<_1e313497a_Kind> _1e3149e68_buildByNamespace(_1e3143318_typeChecker* _self_, jule::Ptr<_1e2516753_NamespaceTypeDecl> _135639_decl) {
	jule::Str _135713_path = _1e314c8d8_buildLinkPathByTokens(_135639_decl.get()._field_Idents);;
	jule::Ptr<_1e320561c_ImportInfo> _135817_imp = _1e315091e_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1e314ddd4_SelectPackage((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1e320561c_ImportInfo>)>([=](jule::Ptr<_1e320561c_ImportInfo> _135852_imp) mutable -> jule::Bool {
		if (((_135639_decl.get()._field_Idents.len() == 1LL) && (_135852_imp.get()._field_Alias == _135713_path))) {
			return true;
		};
		return ((_135852_imp.get()._field_LinkPath == _135713_path) && _1e3208279_isAccessibleViaSelection(_135852_imp.ptr()));
	}));;
	if (((_135817_imp == nullptr) || (!(_1e3207bd5_isLookupable(_135817_imp.ptr(), jule::Str("self", 4)))))) {
		_1e3143a22_pushErr(&(*_self_), _135639_decl.get()._field_Idents[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_135713_path)}));
		return nullptr;
	};
	_1e3143dc9_disallowBuiltin(&(*_self_));
	jule::Trait<_1e315091e_Lookup> _137117_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_1e315091e_Lookup>(_135817_imp, 1);
	jule::Ptr<_1e3134da9_TypeKind> _137317_kind = _1e314a584_checkDecl(&(*_self_), _135639_decl.get()._field_Kind);;
	(*_self_)._field_lookup=_137117_lookup;
	_1e3143bed_allowBuiltin(&(*_self_));
	return jule::Trait<_1e313497a_Kind>(_137317_kind, 5);
}



inline jule::Ptr<_1e3134da9_TypeKind> _1e314a276_build(_1e3143318_typeChecker* _self_, jule::Any& _138029_declKind) {
	jule::Trait<_1e313497a_Kind> _138117_kind = nullptr;;
	{
		auto &_match_expr{ _138029_declKind };
		
		if (_match_expr.type_is<jule::Ptr<_1e2515c4c_IdentTypeDecl>>()) {
			_case_begin_1e6112922:;
			{
				jule::Trait<_1e313497a_Kind> _138421_t = _1e31477b2_buildIdent(&(*_self_), _138029_declKind.operator jule::Ptr<_1e2515c4c_IdentTypeDecl>());;
				if ((_138421_t != nullptr)) {
					_138117_kind=_138421_t;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e251639b_SubIdentTypeDecl>>()) {
			_case_begin_1e61132a2:;
			{
				jule::Trait<_1e313497a_Kind> _138921_t = _1e3147ac0_buildSubIdent(&(*_self_), _138029_declKind.operator jule::Ptr<_1e251639b_SubIdentTypeDecl>());;
				if ((_138921_t != nullptr)) {
					_138117_kind=_138921_t;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2516a3e_SptrTypeDecl>>()) {
			_case_begin_1e6113318:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1e313d115_Sptr> _139521_t = _1e31481db_buildSptr(&(*_self_), _138029_declKind.operator jule::Ptr<_1e2516a3e_SptrTypeDecl>());;
				if ((_139521_t != nullptr)) {
					_138117_kind=jule::Trait<_1e313497a_Kind>(_139521_t, 7);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2517512_PtrTypeDecl>>()) {
			_case_begin_1e6111b0d:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1e3141679_Ptr> _140121_t = _1e3148807_buildPtr(&(*_self_), _138029_declKind.operator jule::Ptr<_1e2517512_PtrTypeDecl>());;
				if ((_140121_t != nullptr)) {
					_138117_kind=jule::Trait<_1e313497a_Kind>(_140121_t, 12);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2516e3a_SlcTypeDecl>>()) {
			_case_begin_1e6111b74:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1e313da72_Slc> _140721_t = _1e3148b15_buildSlc(&(*_self_), _138029_declKind.operator jule::Ptr<_1e2516e3a_SlcTypeDecl>());;
				if ((_140721_t != nullptr)) {
					_138117_kind=jule::Trait<_1e313497a_Kind>(_140721_t, 8);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2517b94_ArrTypeDecl>>()) {
			_case_begin_1e6111bda:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1e3140c1c_Arr> _141321_t = _1e3148e23_buildArr(&(*_self_), _138029_declKind.operator jule::Ptr<_1e2517b94_ArrTypeDecl>());;
				if ((_141321_t != nullptr)) {
					_138117_kind=jule::Trait<_1e313497a_Kind>(_141321_t, 11);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e25183e2_MapTypeDecl>>()) {
			_case_begin_1e6111c51:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1e3140128_Map> _141921_t = _1e3149231_buildMap(&(*_self_), _138029_declKind.operator jule::Ptr<_1e25183e2_MapTypeDecl>());;
				if ((_141921_t != nullptr)) {
					_138117_kind=jule::Trait<_1e313497a_Kind>(_141921_t, 10);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2517226_TupleTypeDecl>>()) {
			_case_begin_1e61139ab:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1e313e600_Tuple> _142521_t = _1e314953e_buildTuple(&(*_self_), _138029_declKind.operator jule::Ptr<_1e2517226_TupleTypeDecl>());;
				if ((_142521_t != nullptr)) {
					_138117_kind=jule::Trait<_1e313497a_Kind>(_142521_t, 9);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e252749a_FnDecl>>()) {
			_case_begin_1e6113a22:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1e258dee5_FnIns> _143121_t = _1e3149b5a_buildFn(&(*_self_), _138029_declKind.operator jule::Ptr<_1e252749a_FnDecl>());;
				if ((_143121_t != nullptr)) {
					_138117_kind=jule::Trait<_1e313497a_Kind>(_143121_t, 1);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2516753_NamespaceTypeDecl>>()) {
			_case_begin_1e6113a88:;
			{
				(*_self_)._field_inscatch=true;
				jule::Trait<_1e313497a_Kind> _143721_t = _1e3149e68_buildByNamespace(&(*_self_), _138029_declKind.operator jule::Ptr<_1e2516753_NamespaceTypeDecl>());;
				if ((_143721_t != nullptr)) {
					_138117_kind=_143721_t;
				};
			}
		}
		else {
			_case_begin_1e6111965:;
			{
				jule::Any _144221_udeclKind = (*(((jule::Any*)((&(_138029_declKind))))));;
				{
					auto &_match_expr{ _144221_udeclKind };
					
					if (_match_expr.type_is<jule::Ptr<_1e313d115_Sptr>>()) {
						_case_begin_1e6112845:;
						{
							_138117_kind=jule::Trait<_1e313497a_Kind>(_144221_udeclKind.operator jule::Ptr<_1e313d115_Sptr>(), 7);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e3141679_Ptr>>()) {
						_case_begin_1e61128ab:;
						{
							_138117_kind=jule::Trait<_1e313497a_Kind>(_144221_udeclKind.operator jule::Ptr<_1e3141679_Ptr>(), 12);
						}
					}
					else {
						_case_begin_1e61126e1:;
						{
							_1e3143a22_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
							return nullptr;
						}
					}
					_match_end_1e6112603:;
				};
			}
		}
		_match_end_1e6111910:;
	};
	if ((_138117_kind == nullptr)) {
		return nullptr;
	};
	{
		auto &_match_expr{ _138117_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e3134da9_TypeKind>>()) {
			_case_begin_1e6120941:;
			{
				return _138117_kind.operator jule::Ptr<_1e3134da9_TypeKind>();
			}
		}
		else {
			_case_begin_1e612027b:;
			{
				return jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=_138117_kind});
			}
		}
		_match_end_1e6114094:;
	};
}



inline jule::Ptr<_1e3134da9_TypeKind> _1e314a584_checkDecl(_1e3143318_typeChecker* _self_, jule::Ptr<_1e2515686_TypeDecl>& _146633_decl) {
	jule::Ptr<_1d42b43cc_Token> _146817_errorToken = (*_self_)._field_errorToken;;
	(*_self_)._field_errorToken=_146633_decl.get()._field_Token;
	jule::Ptr<_1e3134da9_TypeKind> _147117_kind = _1e314a276_build(&(*_self_), _146633_decl.get()._field_Kind);;
	(*_self_)._field_errorToken=_146817_errorToken;
	return _147117_kind;
}



inline void _1e314a809_check(_1e3143318_typeChecker* _self_, jule::Ptr<_1e3139012_TypeSymbol>& _147729_t) {
	if ((_147729_t.get()._field_Decl == nullptr)) {
		return;;
	};
	jule::Ptr<_1e3134da9_TypeKind> _148117_kind = _1e314a584_checkDecl(&(*_self_), _147729_t.get()._field_Decl);;
	if ((_148117_kind == nullptr)) {
		_1e3139595_removeKind(_147729_t.ptr());
		return;;
	};
	_147729_t.get()._field_Kind=_148117_kind;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3143318_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "notPlain:" << _Src._field_notPlain << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1e314ae69_identTypeDecl(jule::Str& _149330_ident, jule::Ptr<_1e2515c4c_IdentTypeDecl> _149342_t) {
	if ((_149342_t.get()._field_Ident == _149330_ident)) {
		return true;
	};
	{
		auto &expr = _149342_t.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1e612447d:;
		if (it != expr.end()) {
			jule::Ptr<_1e2515686_TypeDecl> &_149716_g = *it;
			{
				if (static__1e314b2aa_exist(_149330_ident,_149716_g.get()._field_Kind)) {
					return true;
				};
			}
			_iter_next_1e612447d:;
			++it;
			goto _iter_begin_1e612447d;
		}
		_iter_end_1e612447d:;
	};
	return false;
}



inline jule::Bool static__1e314b2aa_exist(jule::Str& _150522_ident, jule::Any& _150535_k) {
	{
		auto &_match_expr{ _150535_k };
		
		if (_match_expr.type_is<jule::Ptr<_1e2515c4c_IdentTypeDecl>>()) {
			_case_begin_1e612557d:;
			{
				return static__1e314ae69_identTypeDecl(_150522_ident,_150535_k.operator jule::Ptr<_1e2515c4c_IdentTypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e251639b_SubIdentTypeDecl>>()) {
			_case_begin_1e61255e4:;
			{
				jule::Ptr<_1e251639b_SubIdentTypeDecl> _151017_sit = _150535_k.operator jule::Ptr<_1e251639b_SubIdentTypeDecl>();;
				{
					auto &expr = _151017_sit.get()._field_Idents;
					auto it = expr.begin();
					_iter_begin_1e6126ded:;
					if (it != expr.end()) {
						jule::Ptr<_1e2515c4c_IdentTypeDecl> &_151120_id = *it;
						{
							if (static__1e314ae69_identTypeDecl(_150522_ident,_151120_id)) {
								return true;
							};
						}
						_iter_next_1e6126ded:;
						++it;
						goto _iter_begin_1e6126ded;
					}
					_iter_end_1e6126ded:;
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2516a3e_SptrTypeDecl>>()) {
			_case_begin_1e61257d1:;
			{
				jule::Ptr<_1e2516a3e_SptrTypeDecl> _151817_sptr = _150535_k.operator jule::Ptr<_1e2516a3e_SptrTypeDecl>();;
				return static__1e314b2aa_exist(_150522_ident,_151817_sptr.get()._field_Elem.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2517512_PtrTypeDecl>>()) {
			_case_begin_1e6125847:;
			{
				jule::Ptr<_1e2517512_PtrTypeDecl> _152117_ptr = _150535_k.operator jule::Ptr<_1e2517512_PtrTypeDecl>();;
				return static__1e314b2aa_exist(_150522_ident,_152117_ptr.get()._field_Elem.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2516e3a_SlcTypeDecl>>()) {
			_case_begin_1e61258ad:;
			{
				jule::Ptr<_1e2516e3a_SlcTypeDecl> _152417_slc = _150535_k.operator jule::Ptr<_1e2516e3a_SlcTypeDecl>();;
				return static__1e314b2aa_exist(_150522_ident,_152417_slc.get()._field_Elem.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2517b94_ArrTypeDecl>>()) {
			_case_begin_1e6125924:;
			{
				jule::Ptr<_1e2517b94_ArrTypeDecl> _152717_arr = _150535_k.operator jule::Ptr<_1e2517b94_ArrTypeDecl>();;
				return static__1e314b2aa_exist(_150522_ident,_152717_arr.get()._field_Elem.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e25183e2_MapTypeDecl>>()) {
			_case_begin_1e612598a:;
			{
				jule::Ptr<_1e25183e2_MapTypeDecl> _153017_map = _150535_k.operator jule::Ptr<_1e25183e2_MapTypeDecl>();;
				return (static__1e314b2aa_exist(_150522_ident,_153017_map.get()._field_Key.get()._field_Kind) || static__1e314b2aa_exist(_150522_ident,_153017_map.get()._field_Val.get()._field_Kind));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e252749a_FnDecl>>()) {
			_case_begin_1e6125a01:;
			{
				jule::Ptr<_1e252749a_FnDecl> _153417_f = _150535_k.operator jule::Ptr<_1e252749a_FnDecl>();;
				{
					auto &expr = _153417_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1e612c299:;
					if (it != expr.end()) {
						jule::Ptr<_1e252617a_ParamDecl> &_153520_p = *it;
						{
							if (_1e25264dd_IsSelf(_153520_p.ptr())) {
								goto _iter_next_1e612c299;
							};
							if (static__1e314b2aa_exist(_150522_ident,_153520_p.get()._field_Kind.get()._field_Kind)) {
								return true;
							};
						}
						_iter_next_1e612c299:;
						++it;
						goto _iter_begin_1e612c299;
					}
					_iter_end_1e612c299:;
				};
				if ((_153417_f.get()._field_Result != nullptr)) {
					return static__1e314b2aa_exist(_150522_ident,_153417_f.get()._field_Result.get()._field_Kind.get()._field_Kind);
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2517226_TupleTypeDecl>>()) {
			_case_begin_1e6125a78:;
			{
				jule::Ptr<_1e2517226_TupleTypeDecl> _154817_tup = _150535_k.operator jule::Ptr<_1e2517226_TupleTypeDecl>();;
				{
					auto &expr = _154817_tup.get()._field_Types;
					auto it = expr.begin();
					_iter_begin_1e612e653:;
					if (it != expr.end()) {
						jule::Ptr<_1e2515686_TypeDecl> &_154920_t = *it;
						{
							if (static__1e314b2aa_exist(_150522_ident,_154920_t.get()._field_Kind)) {
								return true;
							};
						}
						_iter_next_1e612e653:;
						++it;
						goto _iter_begin_1e612e653;
					}
					_iter_end_1e612e653:;
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2516753_NamespaceTypeDecl>>()) {
			_case_begin_1e6125b00:;
			{
				jule::Ptr<_1e2516753_NamespaceTypeDecl> _155617_ns = _150535_k.operator jule::Ptr<_1e2516753_NamespaceTypeDecl>();;
				return static__1e314b2aa_exist(_150522_ident,_155617_ns.get()._field_Kind.get()._field_Kind);
			}
		}
		else {
			_case_begin_1e61253b3:;
			{
				return false;
			}
		}
		_match_end_1e612535d:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e314aa29_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e337e39a_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33ce0dc_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1e33d0099_stop(_1e33ce917_scopeParser* _self_) {
	(*_self_)._field_pos=-1LL;
}



inline jule::Bool _1e33d030d_stopped(_1e33ce917_scopeParser* _self_) {
	return ((*_self_)._field_pos == -1LL);
}



inline jule::Bool _1e33d0572_finished(_1e33ce917_scopeParser* _self_) {
	return ((*_self_)._field_pos >= (*_self_)._field_stmts.len());
}



inline jule::Bool _1e33d07d6_isLastSt(_1e33ce917_scopeParser* _self_) {
	return (((*_self_)._field_pos + 1LL) >= (*_self_)._field_stmts.len());
}



inline void _1e33d0b05_pushErr(_1e33ce917_scopeParser* _self_, jule::Ptr<_1d42b43cc_Token> _19226_token, jule::Str _19241_fmt) {
	_1e33eb060_pushErr((*_self_)._field_p.ptr(), _19226_token,_19241_fmt,jule::Slice<jule::Any>());
}



inline void _1e33d0e24_pushSuggestion(_1e33ce917_scopeParser* _self_, jule::Str _19733_fmt, jule::Slice<jule::Any> _19746_args) {
	_1e33eb37e_pushSuggestion((*_self_)._field_p.ptr(), _19733_fmt,jule::Any(_19746_args));
}



inline void _1e33d1199_insertAsNext(_1e33ce917_scopeParser* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _20136_tokens) {
	(*_self_)._field_stmts=jule::append((*_self_)._field_stmts.slice(0LL,((*_self_)._field_pos + 1LL)),(*_self_)._field_stmts.slice((*_self_)._field_pos));
	(*_self_)._field_stmts[((*_self_)._field_pos + 1LL)]=jule::new_ptr<_1e33ce0dc_stmt>(_1e33ce0dc_stmt{._field_tokens=_20136_tokens, });
}



inline jule::Ptr<_1e33ce0dc_stmt> _1e33d140d_next(_1e33ce917_scopeParser* _self_) {
	((*_self_)._field_pos)++;
	return (*_self_)._field_stmts[(*_self_)._field_pos];
}



inline jule::Ptr<_1e25259a4_ScopeTree> _1e33d17b5_buildScope(_1e33ce917_scopeParser* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _21134_tokens, jule::Ptr<_1d42b43cc_Token> _21156_end) {
	jule::Ptr<_1e25259a4_ScopeTree> _21217_s = _1e33cceba_newScope();;
	_21217_s.get()._field_Parent=(*_self_)._field_s;
	_21217_s.get()._field_End=_21156_end;
	_1e33ce917_scopeParser _21517_ssp = _1e33ce917_scopeParser{._field_p=(*_self_)._field_p, };;
	_1e33da406_build(&_21517_ssp, _21134_tokens,_21217_s);
	return _21217_s;
}



inline jule::Ptr<_1e2528479_VarDecl> _1e33d1ac3_buildVarSt(_1e33ce917_scopeParser* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _22234_tokens) {
	jule::Ptr<_1e2528479_VarDecl> _22317_v = _1e33eda9b_buildVar((*_self_)._field_p, _22234_tokens);;
	_22317_v.get()._field_Scope=(*_self_)._field_s;
	return _22317_v;
}



inline jule::Ptr<_1e2528831_RetSt> _1e33d1dd1_buildRetSt(_1e33ce917_scopeParser* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _22833_tokens) {
	jule::Ptr<_1e2528831_RetSt> _22917_st = jule::new_ptr<_1e2528831_RetSt>(_1e2528831_RetSt{._field_Token=_22833_tokens[0LL], });;
	if ((_22833_tokens.len() > 1LL)) {
		_22833_tokens=_22833_tokens.slice(1LL);
		_22917_st.get()._field_Expr=_1e33eb68c_buildExpr((*_self_)._field_p, _22833_tokens);
	};
	return _22917_st;
}



inline jule::Ptr<_1e2528e91_Iter> _1e33d21de_buildWhileNextIter(_1e33ce917_scopeParser* _self_, jule::Ptr<_1e33ce0dc_stmt>& _23942_s) {
	jule::Ptr<_1e2528e91_Iter> _24017_it = jule::new_ptr<_1e2528e91_Iter>(_1e2528e91_Iter{._field_Token=_23942_s.get()._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _24317_tokens = _23942_s.get()._field_tokens.slice(1LL);;
	jule::Ptr<_1e2529766_WhileKind> _24417_kind = jule::new_ptr<_1e2529766_WhileKind>();;
	if ((_24317_tokens.len() > 0LL)) {
		_24417_kind.get()._field_Expr=_1e33eb68c_buildExpr((*_self_)._field_p, _24317_tokens);
	};
	if (_1e33d07d6_isLastSt(&(*_self_))) {
		_1e33d0b05_pushErr(&(*_self_), _24017_it.get()._field_Token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	_24317_tokens=_1e33d140d_next(&(*_self_)).get()._field_tokens;
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _25617_stTokens = _1e33dad85_getBlockExpr(_24317_tokens);;
	if ((_25617_stTokens.len() > 0LL)) {
		jule::Ptr<_1e33ce0dc_stmt> _25821_stmt = jule::new_ptr<_1e33ce0dc_stmt>(_1e33ce0dc_stmt{._field_tokens=_25617_stTokens, ._field_terminated=_23942_s.get()._field_terminated});;
		_24417_kind.get()._field_NextToken=_25617_stTokens[0LL];
		_24417_kind.get()._field_Next=_1e33da0d7_buildSt(&(*_self_), _25821_stmt);
	};
	jule::I64 _26617_i = _25617_stTokens.len();;
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _26717_blockTokens = _1e33e87dd_range(_26617_i,jule::Str("{", 1),jule::Str("}", 1),_24317_tokens);;
	if ((_26717_blockTokens == nullptr)) {
		_1e33d0099_stop(&(*_self_));
		_1e33d0b05_pushErr(&(*_self_), _24017_it.get()._field_Token,jule::Str("body is not exist", 17));
		_1e33d0e24_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_26617_i < _24317_tokens.len())) {
		_1e33d0b05_pushErr(&(*_self_), _24317_tokens[_26617_i],jule::Str("invalid syntax", 14));
	};
	_24017_it.get()._field_Scope=_1e33d17b5_buildScope(&(*_self_), _26717_blockTokens,_24317_tokens[(_26617_i - 1LL)]);
	_24017_it.get()._field_Kind=static_cast<jule::Any>(_24417_kind);
	return _24017_it;
}



inline jule::Ptr<_1e2529766_WhileKind> _1e33d24ec_buildWhileIterKind(_1e33ce917_scopeParser* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _28442_tokens) {
	return jule::new_ptr<_1e2529766_WhileKind>(_1e2529766_WhileKind{._field_Expr=_1e33eb68c_buildExpr((*_self_)._field_p, _28442_tokens), });
}



inline jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>> _1e33d280a_getRangeKindKeysTokens(_1e33ce917_scopeParser* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _29046_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>> _29118_vars;;
	jule::Slice<_20a35491e_Log> _29124_errs;;
	std::tie(_29118_vars,_29124_errs) = _1e33e93d2_parts(_29046_toks,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_29124_errs);
	return _29118_vars;
}



inline jule::Ptr<_1e2528479_VarDecl> _1e33d2b18_buildRangeKindKey(_1e33ce917_scopeParser* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _29641_tokens) {
	if ((_29641_tokens.len() == 0LL)) {
		return nullptr;
	};
	jule::Ptr<_1e2528479_VarDecl> _30017_key = jule::new_ptr<_1e2528479_VarDecl>(_1e2528479_VarDecl{._field_Token=_29641_tokens[0LL], });;
	if ((_30017_key.get()._field_Token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
		_30017_key.get()._field_Mutable=true;
		if ((_29641_tokens.len() == 1LL)) {
			_1e33d0b05_pushErr(&(*_self_), _30017_key.get()._field_Token,jule::Str("invalid syntax", 14));
		};
		_30017_key.get()._field_Token=_29641_tokens[1LL];
	} else if ((_29641_tokens.len() > 1LL)) {
		_1e33d0b05_pushErr(&(*_self_), _29641_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	if ((_30017_key.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e33d0b05_pushErr(&(*_self_), _30017_key.get()._field_Token,jule::Str("invalid syntax", 14));
		_1e33d0e24_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	_30017_key.get()._field_Ident=_30017_key.get()._field_Token.get()._field_Kind;
	return _30017_key;
}



inline jule::Slice<jule::Ptr<_1e2528479_VarDecl>> _1e33d2e26_buildRangeKindKeys(_1e33ce917_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>>& _32142_parts) {
	jule::Slice<jule::Ptr<_1e2528479_VarDecl>> _32217_keys = nullptr;;
	{
		auto &expr = _32142_parts;
		auto it = expr.begin();
		_iter_begin_1e628ea05:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d42b43cc_Token>> _32321_tokens = *it;
			{
				_32217_keys = jule::alloc_for_append(_32217_keys,1);_32217_keys.__push(_1e33d2b18_buildRangeKindKey(&(*_self_), _32321_tokens));;
			}
			_iter_next_1e628ea05:;
			++it;
			goto _iter_begin_1e628ea05;
		}
		_iter_end_1e628ea05:;
	};
	return _32217_keys;
}



inline void _1e33d3267_setupRangeKindKeysPlain(_1e33ce917_scopeParser* _self_, jule::Ptr<_1e252a107_RangeKind>& _32947_rng, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _32969_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>> _33017_keyTokens = _1e33d280a_getRangeKindKeysTokens(&(*_self_), _32969_tokens);;
	if ((_33017_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_33017_keyTokens.len() > 2LL)) {
		_1e33d0b05_pushErr(&(*_self_), _32947_rng.get()._field_InToken,jule::Str("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1e2528479_VarDecl>> _33717_keys = _1e33d2e26_buildRangeKindKeys(&(*_self_), _33017_keyTokens);;
	_32947_rng.get()._field_KeyA=_33717_keys[0LL];
	if ((_33717_keys.len() > 1LL)) {
		_32947_rng.get()._field_KeyB=_33717_keys[1LL];
	};
}



inline void _1e33d35b9_setupRangeKindKeysExplicit(_1e33ce917_scopeParser* _self_, jule::Ptr<_1e252a107_RangeKind>& _34450_rng, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _34472_tokens) {
	jule::I64 _34517_i = 0LL;;
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _34617_rang = _1e33e87dd_range(_34517_i,jule::Str("(", 1),jule::Str(")", 1),_34472_tokens);;
	if ((_34517_i < _34472_tokens.len())) {
		_1e33d0b05_pushErr(&(*_self_), _34450_rng.get()._field_InToken,jule::Str("invalid syntax", 14));
	};
	_1e33d3267_setupRangeKindKeysPlain(&(*_self_), _34450_rng,_34617_rang);
}



inline void _1e33d38e9_setupRangeKindKeys(_1e33ce917_scopeParser* _self_, jule::Ptr<_1e252a107_RangeKind>& _35342_rng, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _35364_tokens) {
	if ((_35364_tokens[0LL].get()._field_Id == static_cast<jule::U64>(3LLU))) {
		if ((_35364_tokens[0LL].get()._field_Kind != jule::Str("(", 1))) {
			_1e33d0b05_pushErr(&(*_self_), _35364_tokens[0LL],jule::Str("invalid syntax", 14));
			return;;
		};
		_1e33d35b9_setupRangeKindKeysExplicit(&(*_self_), _35342_rng,_35364_tokens);
		return;;
	};
	_1e33d3267_setupRangeKindKeysPlain(&(*_self_), _35342_rng,_35364_tokens);
}



inline jule::Ptr<_1e252a107_RangeKind> _1e33d3d4a_buildRangeIterKind(_1e33ce917_scopeParser* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _36542_var_tokens, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _36614_exprTokens, jule::Ptr<_1d42b43cc_Token>& _36641_inToken) {
	jule::Ptr<_1e252a107_RangeKind> _36717_rng = jule::new_ptr<_1e252a107_RangeKind>(_1e252a107_RangeKind{._field_InToken=_36641_inToken, });;
	if ((_36614_exprTokens.len() == 0LL)) {
		_1e33d0b05_pushErr(&(*_self_), _36717_rng.get()._field_InToken,jule::Str("expression missing", 18));
		return _36717_rng;
	};
	_36717_rng.get()._field_Expr=_1e33eb68c_buildExpr((*_self_)._field_p, _36614_exprTokens);
	if ((_36542_var_tokens.len() > 0LL)) {
		_1e33d38e9_setupRangeKindKeys(&(*_self_), _36717_rng,_36542_var_tokens);
	};
	return _36717_rng;
}



inline jule::Any _1e33d4202_buildCommonIterKind(_1e33ce917_scopeParser* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _38143_tokens, jule::Ptr<_1d42b43cc_Token>& _38162_err_tok) {
	jule::I64 _38217_braceN = 0LL;;
	{
		auto &expr = _38143_tokens;
		auto it = expr.begin();
		_iter_begin_1e629a626:;
		if (it != expr.end()) {
			jule::I64 _38314_i = it - expr.begin();
			jule::Ptr<_1d42b43cc_Token> _38321_tok = *it;
			{
				if ((_38321_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _38321_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1e629b5d3:;
							{
								(_38217_braceN)++;
								goto _iter_next_1e629a626;
							}
						}
						else {
							_case_begin_1e629b8ad:;
							{
								(_38217_braceN)--;
							}
						}
						_match_end_1e629b69e:;
					};
				};
				if ((_38217_braceN != 0LL)) {
					goto _iter_next_1e629a626;
				};
				{
					auto &_match_expr{ _38321_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(15LLU)) {
						_case_begin_1e629b2c5:;
						{
							jule::Slice<jule::Ptr<_1d42b43cc_Token>> _40025_declTokens = _38143_tokens.slice(0LL,_38314_i);;
							jule::Slice<jule::Ptr<_1d42b43cc_Token>> _40125_exprTokens = _38143_tokens.slice((_38314_i + 1LL));;
							return static_cast<jule::Any>(_1e33d3d4a_buildRangeIterKind(&(*_self_), _40025_declTokens,_40125_exprTokens,_38321_tok));
						}
					}
					_match_end_1e629bd75:;
				};
			}
			_iter_next_1e629a626:;
			++it;
			_38314_i++;
			goto _iter_begin_1e629a626;
		}
		_iter_end_1e629a626:;
	};
	return static_cast<jule::Any>(_1e33d24ec_buildWhileIterKind(&(*_self_), _38143_tokens));
}



inline jule::Ptr<_1e2528e91_Iter> _1e33d4510_buildCommonIter(_1e33ce917_scopeParser* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _40838_tokens) {
	jule::Ptr<_1e2528e91_Iter> _40917_it = jule::new_ptr<_1e2528e91_Iter>(_1e2528e91_Iter{._field_Token=_40838_tokens[0LL], });;
	_40838_tokens=_40838_tokens.slice(1LL);
	if ((_40838_tokens.len() == 0LL)) {
		_1e33d0099_stop(&(*_self_));
		_1e33d0b05_pushErr(&(*_self_), _40917_it.get()._field_Token,jule::Str("body is not exist", 17));
		_1e33d0e24_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _41917_exprTokens = _1e33dad85_getBlockExpr(_40838_tokens);;
	if ((_41917_exprTokens.len() > 0LL)) {
		_40917_it.get()._field_Kind=_1e33d4202_buildCommonIterKind(&(*_self_), _41917_exprTokens,_40917_it.get()._field_Token);
	};
	jule::I64 _42317_i = _41917_exprTokens.len();;
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _42417_scopeTokens = _1e33e87dd_range(_42317_i,jule::Str("{", 1),jule::Str("}", 1),_40838_tokens);;
	if ((_42417_scopeTokens == nullptr)) {
		_1e33d0099_stop(&(*_self_));
		_1e33d0b05_pushErr(&(*_self_), _40917_it.get()._field_Token,jule::Str("body is not exist", 17));
		_1e33d0e24_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_42317_i < _40838_tokens.len())) {
		_1e33d0b05_pushErr(&(*_self_), _40838_tokens[_42317_i],jule::Str("invalid syntax", 14));
	};
	_40917_it.get()._field_Scope=_1e33d17b5_buildScope(&(*_self_), _42417_scopeTokens,_40838_tokens[(_42317_i - 1LL)]);
	return _40917_it;
}



inline jule::Ptr<_1e2528e91_Iter> _1e33d481d_buildIterSt(_1e33ce917_scopeParser* _self_, jule::Ptr<_1e33ce0dc_stmt>& _43835_st) {
	if (_43835_st.get()._field_terminated) {
		return _1e33d21de_buildWhileNextIter(&(*_self_), _43835_st);
	};
	return _1e33d4510_buildCommonIter(&(*_self_), _43835_st.get()._field_tokens);
}



inline jule::Ptr<_1e252a4ae_BreakSt> _1e33d4b2b_buildBreakSt(_1e33ce917_scopeParser* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _44536_tokens) {
	jule::Ptr<_1e252a4ae_BreakSt> _44617_brk = jule::new_ptr<_1e252a4ae_BreakSt>(_1e252a4ae_BreakSt{._field_Token=_44536_tokens[0LL], });;
	if ((_44536_tokens.len() > 1LL)) {
		if ((_44536_tokens[1LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_1e33d0b05_pushErr(&(*_self_), _44536_tokens[1LL],jule::Str("invalid syntax", 14));
			_1e33d0e24_pushSuggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_44617_brk.get()._field_Label=_44536_tokens[1LL];
			if ((_44536_tokens.len() > 2LL)) {
				_1e33d0b05_pushErr(&(*_self_), _44536_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return _44617_brk;
}



inline jule::Ptr<_1e252a866_ContSt> _1e33d4e39_buildContSt(_1e33ce917_scopeParser* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _46335_tokens) {
	jule::Ptr<_1e252a866_ContSt> _46417_cont = jule::new_ptr<_1e252a866_ContSt>(_1e252a866_ContSt{._field_Token=_46335_tokens[0LL], });;
	if ((_46335_tokens.len() > 1LL)) {
		if ((_46335_tokens[1LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_1e33d0b05_pushErr(&(*_self_), _46335_tokens[1LL],jule::Str("invalid syntax", 14));
			_1e33d0e24_pushSuggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_46417_cont.get()._field_Label=_46335_tokens[1LL];
			if ((_46335_tokens.len() > 2LL)) {
				_1e33d0b05_pushErr(&(*_self_), _46335_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return _46417_cont;
}



inline jule::Ptr<_1e252acd9_If> _1e33d5247_buildIf(_1e33ce917_scopeParser* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _48131_tokens) {
	jule::Ptr<_1e252acd9_If> _48217_model = jule::new_ptr<_1e252acd9_If>(_1e252acd9_If{._field_Token=_48131_tokens[0LL], });;
	_48131_tokens=_48131_tokens.slice(1LL);
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _48617_exprTokens = _1e33dad85_getBlockExpr(_48131_tokens);;
	jule::I64 _48717_i = 0LL;;
	if ((_48617_exprTokens.len() == 0LL)) {
		_1e33d0b05_pushErr(&(*_self_), _48217_model.get()._field_Token,jule::Str("expression missing", 18));
	} else {
		_48717_i=static_cast<jule::I64>(_48617_exprTokens.len());
	};
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _49317_scopeTokens = _1e33e87dd_range(_48717_i,jule::Str("{", 1),jule::Str("}", 1),_48131_tokens);;
	if ((_49317_scopeTokens == nullptr)) {
		_1e33d0099_stop(&(*_self_));
		_1e33d0b05_pushErr(&(*_self_), _48217_model.get()._field_Token,jule::Str("body is not exist", 17));
		_1e33d0e24_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1d42b43cc_Token> _50017_end = _48131_tokens[(_48717_i - 1LL)];;
	if ((_48717_i < _48131_tokens.len())) {
		if ((_48131_tokens[_48717_i].get()._field_Id == static_cast<jule::U64>(17LLU))) {
			_48131_tokens=_48131_tokens.slice(_48717_i);
		} else {
			_1e33d0b05_pushErr(&(*_self_), _48131_tokens[_48717_i],jule::Str("invalid syntax", 14));
			_48131_tokens=nullptr;
		};
	};
	_48217_model.get()._field_Expr=_1e33eb68c_buildExpr((*_self_)._field_p, _48617_exprTokens);
	_48217_model.get()._field_Scope=_1e33d17b5_buildScope(&(*_self_), _49317_scopeTokens,_50017_end);
	return _48217_model;
}



inline jule::Ptr<_1e252b191_Else> _1e33d5555_buildElse(_1e33ce917_scopeParser* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _51433_tokens) {
	jule::Ptr<_1e252b191_Else> _51517_els = jule::new_ptr<_1e252b191_Else>(_1e252b191_Else{._field_Token=_51433_tokens[0LL], });;
	_51433_tokens=_51433_tokens.slice(1LL);
	jule::I64 _51917_i = 0LL;;
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _52017_scopeTokens = _1e33e87dd_range(_51917_i,jule::Str("{", 1),jule::Str("}", 1),_51433_tokens);;
	if ((_52017_scopeTokens == nullptr)) {
		if ((_51917_i < _51433_tokens.len())) {
			_1e33d0b05_pushErr(&(*_self_), _51517_els.get()._field_Token,jule::Str("else's cannot have any expression", 33));
		} else {
			_1e33d0099_stop(&(*_self_));
			_1e33d0b05_pushErr(&(*_self_), _51517_els.get()._field_Token,jule::Str("body is not exist", 17));
			_1e33d0e24_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		};
		return nullptr;
	};
	if ((_51917_i < _51433_tokens.len())) {
		_1e33d0b05_pushErr(&(*_self_), _51433_tokens[_51917_i],jule::Str("invalid syntax", 14));
	};
	_51517_els.get()._field_Scope=_1e33d17b5_buildScope(&(*_self_), _52017_scopeTokens,_51433_tokens[(_51917_i - 1LL)]);
	return _51517_els;
}



inline jule::Ptr<_1e252b614_Conditional> _1e33d5863_buildIfElseChain(_1e33ce917_scopeParser* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _53839_tokens) {
	jule::Ptr<_1e252b614_Conditional> _53917_chain = jule::new_ptr<_1e252b614_Conditional>(_1e252b614_Conditional{._field_Head=_1e33d5247_buildIf(&(*_self_), _53839_tokens), });;
	if ((_53917_chain.get()._field_Head == nullptr)) {
		return nullptr;
	};
	while ((_53839_tokens.len() != 0LL)) {
		{
			if ((_53839_tokens[0LL].get()._field_Id != static_cast<jule::U64>(17LLU))) {
				goto _iter_end_1e62b7c3c;
			};
			if (((_53839_tokens.len() > 1LL) && (_53839_tokens[1LL].get()._field_Id == static_cast<jule::U64>(16LLU)))) {
				_53839_tokens=_53839_tokens.slice(1LL);
				jule::Ptr<_1e252acd9_If> _55125_elif = _1e33d5247_buildIf(&(*_self_), _53839_tokens);;
				_53917_chain.get()._field_Tail = jule::alloc_for_append(_53917_chain.get()._field_Tail,1);_53917_chain.get()._field_Tail.__push(_55125_elif);;
				goto _iter_next_1e62b7c3c;
			};
			_53917_chain.get()._field_Default=_1e33d5555_buildElse(&(*_self_), _53839_tokens);
			goto _iter_end_1e62b7c3c;
		}
	_iter_next_1e62b7c3c:;
	}
	_iter_end_1e62b7c3c:;;
	return _53917_chain;
}



inline jule::Ptr<_1e251b79c_CoExpr> _1e33d5b71_buildCoCallSt(_1e33ce917_scopeParser* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _56136_tokens) {
	jule::Ptr<_1e251b79c_CoExpr> _56217_c = jule::new_ptr<_1e251b79c_CoExpr>(_1e251b79c_CoExpr{._field_Token=_56136_tokens[0LL], });;
	_56136_tokens=_56136_tokens.slice(1LL);
	_56217_c.get()._field_Expr=_1e33eb68c_buildExpr((*_self_)._field_p, _56136_tokens);
	return _56217_c;
}



inline jule::Ptr<_1e25234c9_GotoSt> _1e33d5e7e_buildGotoSt(_1e33ce917_scopeParser* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _57035_tokens) {
	jule::Ptr<_1e25234c9_GotoSt> _57117_gt = jule::new_ptr<_1e25234c9_GotoSt>(_1e25234c9_GotoSt{._field_Token=_57035_tokens[0LL], });;
	if ((_57035_tokens.len() == 1LL)) {
		_1e33d0b05_pushErr(&(*_self_), _57117_gt.get()._field_Token,jule::Str("missing label identifier for goto statement", 43));
		return nullptr;
	} else if ((_57035_tokens.len() > 2LL)) {
		_1e33d0b05_pushErr(&(*_self_), _57035_tokens[2LL],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1d42b43cc_Token> _58017_identToken = _57035_tokens[1LL];;
	if ((_58017_identToken.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e33d0b05_pushErr(&(*_self_), _58017_identToken,jule::Str("invalid syntax", 14));
		_1e33d0e24_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return _57117_gt;
	};
	_57117_gt.get()._field_Label=_58017_identToken;
	return _57117_gt;
}



inline jule::Ptr<_1e25237b5_FallSt> _1e33d628c_buildFallSt(_1e33ce917_scopeParser* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _59035_tokens) {
	jule::Ptr<_1e25237b5_FallSt> _59117_fll = jule::new_ptr<_1e25237b5_FallSt>(_1e25237b5_FallSt{._field_Token=_59035_tokens[0LL]});;
	if ((_59035_tokens.len() > 1LL)) {
		_1e33d0b05_pushErr(&(*_self_), _59035_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	return _59117_fll;
}



inline jule::Ptr<_1e252bcda_TypeAliasDecl> _1e33d659a_buildTypeAliasSt(_1e33ce917_scopeParser* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _60040_tokens) {
	jule::Ptr<_1e252bcda_TypeAliasDecl> _60117_tad = _1e33ecc87_buildTypeAliasDecl((*_self_)._field_p, _60040_tokens);;
	_60117_tad.get()._field_Scope=(*_self_)._field_s;
	return _60117_tad;
}



inline void _1e33d6a0c_pushCaseExpr(_1e33ce917_scopeParser* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _60635_tokens, jule::Ptr<_1d42b43cc_Token> _60657_token, jule::Bool _6079_typeMatch, jule::Slice<jule::Ptr<_1e2519ba7_Expr>>& _60731_exprs) {
	if ((_60635_tokens.len() == 0LL)) {
		return;;
	};
	if (_6079_typeMatch) {
		jule::I64 _61321_i = 0LL;;
		jule::Ptr<_1e2515686_TypeDecl> _61422_t;;
		jule::Bool _61425_ok;;
		std::tie(_61422_t,_61425_ok) = _1e33ec979_buildType((*_self_)._field_p, _60635_tokens,(&(_61321_i)),true);
		if (_61425_ok) {
			_60731_exprs = jule::alloc_for_append(_60731_exprs,1);_60731_exprs.__push(jule::new_ptr<_1e2519ba7_Expr>(_1e2519ba7_Expr{._field_Token=_60635_tokens[0LL], ._field_End=_60635_tokens[(_60635_tokens.len() - 1LL)], ._field_Kind=static_cast<jule::Any>(_61422_t)}));;
			if ((_61321_i < _60635_tokens.len())) {
				_1e33d0b05_pushErr(&(*_self_), _60635_tokens[_61321_i],jule::Str("invalid syntax", 14));
			};
		};
		return;;
	};
	_60731_exprs = jule::alloc_for_append(_60731_exprs,1);_60731_exprs.__push(_1e33eb68c_buildExpr((*_self_)._field_p, _60635_tokens));;
}



inline jule::Slice<jule::Ptr<_1e2519ba7_Expr>> _1e33d6db4_buildCaseExprs(_1e33ce917_scopeParser* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _63038_tokens, jule::Bool _63056_type_match) {
	jule::Slice<jule::Ptr<_1e2519ba7_Expr>> _63117_exprs = jule::Slice<jule::Ptr<_1e2519ba7_Expr>>::alloc(0LL,1LL);;
	jule::I64 _63317_braceN = 0LL;;
	jule::I64 _63417_j = 0LL;;
	{
		auto &expr = _63038_tokens;
		auto it = expr.begin();
		_iter_begin_1e62c82d0:;
		if (it != expr.end()) {
			jule::I64 _63514_i = it - expr.begin();
			jule::Ptr<_1d42b43cc_Token> _63521_tok = *it;
			{
				if ((_63521_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _63521_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_1e62c9336:;
							{
								(_63317_braceN)++;
							}
						}
						else {
							_case_begin_1e62c9611:;
							{
								(_63317_braceN)--;
							}
						}
						_match_end_1e62c9402:;
					};
					goto _iter_next_1e62c82d0;
				} else if ((_63317_braceN != 0LL)) {
					goto _iter_next_1e62c82d0;
				};
				{
					
					if (((_63521_tok.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_63521_tok.get()._field_Kind == jule::Str("|", 1)))) {
						_case_begin_1e62ca304:;
						{
							jule::Slice<jule::Ptr<_1d42b43cc_Token>> _65121_exprTokens = _63038_tokens.slice(_63417_j,_63514_i);;
							if ((_65121_exprTokens.len() == 0LL)) {
								_1e33d0b05_pushErr(&(*_self_), _63521_tok,jule::Str("expression missing", 18));
							} else {
								_1e33d6a0c_pushCaseExpr(&(*_self_), _63038_tokens.slice(_63417_j,_63514_i),_63521_tok,_63056_type_match,_63117_exprs);
							};
							_63417_j=static_cast<jule::I64>((_63514_i + 1LL));
						}
					}
					else if ((_63521_tok.get()._field_Id == static_cast<jule::U64>(11LLU))) {
						_case_begin_1e62ca36a:;
						{
							_1e33d6a0c_pushCaseExpr(&(*_self_), _63038_tokens.slice(_63417_j,_63514_i),_63521_tok,_63056_type_match,_63117_exprs);
							_63038_tokens=_63038_tokens.slice((_63514_i + 1LL));
							return _63117_exprs;
						}
					}
					_match_end_1e62c9d92:;
				};
			}
			_iter_next_1e62c82d0:;
			++it;
			_63514_i++;
			goto _iter_begin_1e62c82d0;
		}
		_iter_end_1e62c82d0:;
	};
	_1e33d0b05_pushErr(&(*_self_), _63038_tokens[0LL],jule::Str("invalid syntax", 14));
	_63038_tokens=nullptr;
	return nullptr;
}



inline jule::Ptr<_1e25259a4_ScopeTree> _1e33d71c2_buildCaseScope(_1e33ce917_scopeParser* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _66938_tokens) {
	jule::I64 _67017_n = 0LL;;
	for (;;) {
		{
			jule::I64 _67221_i = 0LL;;
			jule::Slice<jule::Ptr<_1d42b43cc_Token>> _67322_next;;
			std::tie(_67322_next,std::ignore) = _1e33cdce0_skipSt(_67221_i,_66938_tokens.slice(_67017_n));
			if ((_67322_next.len() == 0LL)) {
				goto _iter_end_1e62cdda7;
			};
			jule::Ptr<_1d42b43cc_Token> _67717_tok = _67322_next[0LL];;
			if (((_67717_tok.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_67717_tok.get()._field_Kind != jule::Str("|", 1)))) {
				_67017_n+=_67221_i;
				goto _iter_next_1e62cdda7;
			};
			jule::Slice<jule::Ptr<_1d42b43cc_Token>> _68221_scopeTokens = _66938_tokens.slice(0LL,_67017_n);;
			jule::Ptr<_1e25259a4_ScopeTree> _68321_scope = _1e33d17b5_buildScope(&(*_self_), _68221_scopeTokens,_66938_tokens[_67017_n]);;
			_66938_tokens=_66938_tokens.slice(_67017_n);
			return _68321_scope;
		}
	_iter_next_1e62cdda7:;
	}
	_iter_end_1e62cdda7:;;
	jule::Ptr<_1d42b43cc_Token> _68717_end = jule::Ptr<_1d42b43cc_Token>();;
	if ((_66938_tokens.len() > 0LL)) {
		_68717_end=_66938_tokens[(_66938_tokens.len() - 1LL)];
	};
	jule::Ptr<_1e25259a4_ScopeTree> _69117_scope = _1e33d17b5_buildScope(&(*_self_), _66938_tokens,_68717_end);;
	_66938_tokens=nullptr;
	return _69117_scope;
}



inline std::tuple<jule::Ptr<_1e252c25d_Case>,jule::Bool> _1e33d7579_buildCase(_1e33ce917_scopeParser* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _69633_tokens, jule::Bool _69651_typeMatch) {
	jule::Ptr<_1e252c25d_Case> _69717_c = jule::new_ptr<_1e252c25d_Case>(_1e252c25d_Case{._field_Token=_69633_tokens[0LL], });;
	_69633_tokens=_69633_tokens.slice(1LL);
	_69717_c.get()._field_Exprs=_1e33d6db4_buildCaseExprs(&(*_self_), _69633_tokens,_69651_typeMatch);
	_69717_c.get()._field_Scope=_1e33d71c2_buildCaseScope(&(*_self_), _69633_tokens);
	jule::Bool _70313_isDefault = (_69717_c.get()._field_Exprs.len() == 0LL);;
	return std::make_tuple(_69717_c,_70313_isDefault);
}



inline std::tuple<jule::Slice<jule::Ptr<_1e252c25d_Case>>,jule::Ptr<_1e252b191_Else>> _1e33d7931_buildCases(_1e33ce917_scopeParser* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _70733_tokens, jule::Bool _70751_type_match) {
	jule::Slice<jule::Ptr<_1e252c25d_Case>> _70817_cases = nullptr;;
	jule::Ptr<_1e252b191_Else> _70917_def = nullptr;;
	jule::Bool _71017_defNotLast = false;;
	while ((_70733_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1d42b43cc_Token> _71221_tok = _70733_tokens[0LL];;
			if (((_71221_tok.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_71221_tok.get()._field_Kind != jule::Str("|", 1)))) {
				_1e33d0b05_pushErr(&(*_self_), _71221_tok,jule::Str("invalid syntax", 14));
				goto _iter_end_1e62d6b29;
			};
			jule::Ptr<_1e252c25d_Case> _71722_c;;
			jule::Bool _71725_is_default;;
			std::tie(_71722_c,_71725_is_default) = _1e33d7579_buildCase(&(*_self_), _70733_tokens,_70751_type_match);
			if (_71725_is_default) {
				_71722_c.get()._field_Token=_71221_tok;
				if ((_70917_def == nullptr)) {
					_70917_def=jule::new_ptr<_1e252b191_Else>(_1e252b191_Else{._field_Token=_71722_c.get()._field_Token, ._field_Scope=_71722_c.get()._field_Scope});
				} else {
					_1e33d0b05_pushErr(&(*_self_), _71221_tok,jule::Str("invalid syntax", 14));
				};
			} else {
				_71017_defNotLast=(_71017_defNotLast || (_70917_def != nullptr));
				_70817_cases = jule::alloc_for_append(_70817_cases,1);_70817_cases.__push(_71722_c);;
			};
		}
	_iter_next_1e62d6b29:;
	}
	_iter_end_1e62d6b29:;;
	if (_71017_defNotLast) {
		_1e33d0b05_pushErr(&(*_self_), _70917_def.get()._field_Token,jule::Str("default case should be last case", 32));
	};
	return std::make_tuple(_70817_cases,_70917_def);
}



inline jule::Ptr<_1e252c934_MatchCase> _1e33d7c3e_buildMatchCase(_1e33ce917_scopeParser* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _74137_tokens) {
	jule::Ptr<_1e252c934_MatchCase> _74217_m = jule::new_ptr<_1e252c934_MatchCase>(_1e252c934_MatchCase{._field_Token=_74137_tokens[0LL], });;
	_74137_tokens=_74137_tokens.slice(1LL);
	if (((_74137_tokens.len() > 0LL) && (_74137_tokens[0LL].get()._field_Id == static_cast<jule::U64>(10LLU)))) {
		_74217_m.get()._field_TypeMatch=true;
		_74137_tokens=_74137_tokens.slice(1LL);
	};
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _75217_exprTokens = _1e33dad85_getBlockExpr(_74137_tokens);;
	if ((_75217_exprTokens.len() > 0LL)) {
		_74217_m.get()._field_Expr=_1e33eb68c_buildExpr((*_self_)._field_p, _75217_exprTokens);
	} else if (_74217_m.get()._field_TypeMatch) {
		_1e33d0b05_pushErr(&(*_self_), _74217_m.get()._field_Token,jule::Str("expression missing", 18));
	};
	jule::I64 _75917_i = _75217_exprTokens.len();;
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _76017_blockToks = _1e33e87dd_range(_75917_i,jule::Str("{", 1),jule::Str("}", 1),_74137_tokens);;
	if ((_76017_blockToks == nullptr)) {
		_1e33d0099_stop(&(*_self_));
		_1e33d0b05_pushErr(&(*_self_), _74217_m.get()._field_Token,jule::Str("body is not exist", 17));
		_1e33d0e24_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((_75917_i < _74137_tokens.len())) {
		_1e33d0b05_pushErr(&(*_self_), _74137_tokens[_75917_i],jule::Str("invalid syntax", 14));
	};
	_74217_m.get()._field_End=_74137_tokens[(_75917_i - 1LL)];
	std::tie(_74217_m.get()._field_Cases,_74217_m.get()._field_Default) = _1e33d7931_buildCases(&(*_self_), _76017_blockToks,_74217_m.get()._field_TypeMatch);
	return _74217_m;
}



inline jule::Ptr<_1e25259a4_ScopeTree> _1e33d804c_buildScopeSt(_1e33ce917_scopeParser* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _77435_tokens) {
	jule::Bool _77517_isUnsafe = false;;
	jule::Bool _77617_isDeferred = false;;
	jule::Ptr<_1d42b43cc_Token> _77717_token = _77435_tokens[0LL];;
	if ((_77717_token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_77517_isUnsafe=true;
		_77435_tokens=_77435_tokens.slice(1LL);
		if ((_77435_tokens.len() == 0LL)) {
			_1e33d0b05_pushErr(&(*_self_), _77717_token,jule::Str("invalid syntax", 14));
			return nullptr;
		};
		_77717_token=_77435_tokens[0LL];
		if ((_77717_token.get()._field_Id == static_cast<jule::U64>(37LLU))) {
			_77617_isDeferred=true;
			_77435_tokens=_77435_tokens.slice(1LL);
			if ((_77435_tokens.len() == 0LL)) {
				_1e33d0b05_pushErr(&(*_self_), _77717_token,jule::Str("invalid syntax", 14));
				return nullptr;
			};
		};
	} else if ((_77717_token.get()._field_Id == static_cast<jule::U64>(37LLU))) {
		_77617_isDeferred=true;
		_77435_tokens=_77435_tokens.slice(1LL);
		if ((_77435_tokens.len() == 0LL)) {
			_1e33d0b05_pushErr(&(*_self_), _77717_token,jule::Str("invalid syntax", 14));
			return nullptr;
		};
	};
	jule::I64 _80317_i = 0LL;;
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _80417_scopeTokens = _1e33e87dd_range(_80317_i,jule::Str("{", 1),jule::Str("}", 1),_77435_tokens);;
	if ((_80417_scopeTokens == nullptr)) {
		_1e33d0b05_pushErr(&(*_self_), _77717_token,jule::Str("invalid syntax", 14));
		return nullptr;
	} else if ((_80317_i < _77435_tokens.len())) {
		_1e33d0b05_pushErr(&(*_self_), _77435_tokens[_80317_i],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1e25259a4_ScopeTree> _81117_scope = _1e33d17b5_buildScope(&(*_self_), _80417_scopeTokens,_77435_tokens[(_80317_i - 1LL)]);;
	_81117_scope.get()._field_Unsafety=_77517_isUnsafe;
	_81117_scope.get()._field_Deferred=_77617_isDeferred;
	return _81117_scope;
}



inline jule::Ptr<_1e2523122_LabelSt> _1e33d835a_buildLabelSt(_1e33ce917_scopeParser* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _81736_tokens) {
	jule::Ptr<_1e2523122_LabelSt> _81817_lbl = jule::new_ptr<_1e2523122_LabelSt>(_1e2523122_LabelSt{._field_Token=_81736_tokens[0LL], ._field_Ident=_81736_tokens[0LL].get()._field_Kind});;
	if ((_81736_tokens.len() > 2LL)) {
		_81736_tokens=_81736_tokens.slice(2LL);
		_1e33d1199_insertAsNext(&(*_self_), _81736_tokens);
	};
	return _81817_lbl;
}



inline std::tuple<jule::Any,jule::Bool> _1e33d8668_buildIdSt(_1e33ce917_scopeParser* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _83233_tokens) {
	jule::Bool _83263_ok = jule::Bool();
	if ((_83233_tokens.len() == 1LL)) {
		return std::make_tuple(jule::Any(),_83263_ok);
	};
	jule::Ptr<_1d42b43cc_Token> _83717_token = _83233_tokens[1LL];;
	{
		auto &_match_expr{ _83717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1e62ec7cc:;
			{
				_83263_ok = true;
				return std::make_tuple(static_cast<jule::Any>(_1e33d835a_buildLabelSt(&(*_self_), _83233_tokens)),_83263_ok);
			}
		}
		_match_end_1e62ed48c:;
	};
	return std::make_tuple(jule::Any(),_83263_ok);
}



inline jule::Ptr<_1e33e70b1_assignInfo> _1e33d8976_buildAssignInfo(_1e33ce917_scopeParser* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _84639_tokens) {
	jule::Ptr<_1e33e70b1_assignInfo> _84717_info = jule::new_ptr<_1e33e70b1_assignInfo>(_1e33e70b1_assignInfo{._field_ok=true});;
	jule::I64 _85017_braceN = 0LL;;
	{
		auto &expr = _84639_tokens;
		auto it = expr.begin();
		_iter_begin_1e63002d5:;
		if (it != expr.end()) {
			jule::I64 _85114_i = it - expr.begin();
			jule::Ptr<_1d42b43cc_Token> _85121_token = *it;
			{
				if ((_85121_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _85121_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1e63012d6:;
							{
								(_85017_braceN)++;
							}
						}
						else {
							_case_begin_1e63015b1:;
							{
								(_85017_braceN)--;
							}
						}
						_match_end_1e63013a2:;
					};
				};
				{
					
					if ((_85017_braceN > 0LL)) {
						_case_begin_1e6301c98:;
						{
							goto _iter_next_1e63002d5;
						}
					}
					else if ((_85121_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
						_case_begin_1e6301d0e:;
						{
							goto _iter_next_1e63002d5;
						}
					}
					else if ((!(_1d42b8eb4_IsAssignOp(_85121_token.get()._field_Kind)))) {
						_case_begin_1e6301d86:;
						{
							goto _iter_next_1e63002d5;
						}
					}
					_match_end_1e6301a78:;
				};
				_84717_info.get()._field_l=_84639_tokens.slice(0LL,_85114_i);
				if ((_84717_info.get()._field_l.len() == 0LL)) {
					_84717_info.get()._field_ok=false;
				};
				_84717_info.get()._field_setter=_85121_token;
				if (((_85114_i + 1LL) >= _84639_tokens.len())) {
					_84717_info.get()._field_r=nullptr;
					_84717_info.get()._field_ok=_1d42b8c1c_IsPostfixOp(_84717_info.get()._field_setter.get()._field_Kind);
					goto _iter_end_1e63002d5;
				};
				_84717_info.get()._field_r=_84639_tokens.slice((_85114_i + 1LL));
				if (_1d42b8c1c_IsPostfixOp(_84717_info.get()._field_setter.get()._field_Kind)) {
					if ((_84717_info.get()._field_r.len() > 0LL)) {
						_1e33d0b05_pushErr(&(*_self_), _84717_info.get()._field_r[0LL],jule::Str("invalid syntax", 14));
						_84717_info.get()._field_r=nullptr;
					};
				};
				goto _iter_end_1e63002d5;
			}
			_iter_next_1e63002d5:;
			++it;
			_85114_i++;
			goto _iter_begin_1e63002d5;
		}
		_iter_end_1e63002d5:;
	};
	return _84717_info;
}



inline jule::Ptr<_1e2523dc0_AssignLeft> _1e33d8c84_buildAssignL(_1e33ce917_scopeParser* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _89436_tokens) {
	jule::Ptr<_1e2523dc0_AssignLeft> _89517_l = jule::new_ptr<_1e2523dc0_AssignLeft>(_1e2523dc0_AssignLeft{._field_Token=_89436_tokens[0LL], });;
	if ((_89436_tokens[0LL].get()._field_Id == static_cast<jule::U64>(2LLU))) {
		_89517_l.get()._field_Ident=_89517_l.get()._field_Token.get()._field_Kind;
	};
	_89517_l.get()._field_Expr=_1e33eb68c_buildExpr((*_self_)._field_p, _89436_tokens);
	return _89517_l;
}



inline jule::Slice<jule::Ptr<_1e2523dc0_AssignLeft>> _1e33d9092_buildAssignLs(_1e33ce917_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>>& _90537_parts) {
	jule::Slice<jule::Ptr<_1e2523dc0_AssignLeft>> _90617_lefts = nullptr;;
	{
		auto &expr = _90537_parts;
		auto it = expr.begin();
		_iter_begin_1e63089c5:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d42b43cc_Token>> _90721_part = *it;
			{
				jule::Ptr<_1e2523dc0_AssignLeft> _90821_l = _1e33d8c84_buildAssignL(&(*_self_), _90721_part);;
				_90617_lefts = jule::alloc_for_append(_90617_lefts,1);_90617_lefts.__push(_90821_l);;
			}
			_iter_next_1e63089c5:;
			++it;
			goto _iter_begin_1e63089c5;
		}
		_iter_end_1e63089c5:;
	};
	return _90617_lefts;
}



inline std::tuple<jule::Ptr<_1e252440e_AssignSt>,jule::Bool> _1e33d93a0_buildPlainAssign(_1e33ce917_scopeParser* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _91540_tokens) {
	jule::Ptr<_1e33e70b1_assignInfo> _91617_info = _1e33d8976_buildAssignInfo(&(*_self_), _91540_tokens);;
	if ((!(_91617_info.get()._field_ok))) {
		return std::make_tuple(nullptr,false);
	};
	jule::Ptr<_1e252440e_AssignSt> _92117_assign = jule::new_ptr<_1e252440e_AssignSt>(_1e252440e_AssignSt{._field_Setter=_91617_info.get()._field_setter, });;
	jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>> _92518_parts;;
	jule::Slice<_20a35491e_Log> _92525_errs;;
	std::tie(_92518_parts,_92525_errs) = _1e33e93d2_parts(_91617_info.get()._field_l,static_cast<jule::U64>(8LLU),true);
	if ((_92525_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_92525_errs);
		return std::make_tuple(nullptr,false);
	};
	_92117_assign.get()._field_Left=_1e33d9092_buildAssignLs(&(*_self_), _92518_parts);
	if ((_91617_info.get()._field_r != nullptr)) {
		_92117_assign.get()._field_Right=_1e33eb68c_buildExpr((*_self_)._field_p, _91617_info.get()._field_r);
	};
	return std::make_tuple(_92117_assign,true);
}



inline std::tuple<jule::Ptr<_1e252440e_AssignSt>,jule::Bool> _1e33d96ad_buildDeclAssign(_1e33ce917_scopeParser* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _93938_tokens) {
	if ((_93938_tokens.len() < 1LL)) {
		return std::make_tuple(nullptr,false);
	};
	_93938_tokens=_93938_tokens.slice(1LL);
	jule::Ptr<_1d42b43cc_Token> _94517_token = _93938_tokens[0LL];;
	if (((_94517_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_94517_token.get()._field_Kind != jule::Str("(", 1)))) {
		return std::make_tuple(nullptr,false);
	};
	jule::Ptr<_1e252440e_AssignSt> _95017_assign = jule::new_ptr<_1e252440e_AssignSt>(_1e252440e_AssignSt{._field_Declarative=true, });;
	jule::I64 _95417_i = 0LL;;
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _95517_rang = _1e33e87dd_range(_95417_i,jule::Str("(", 1),jule::Str(")", 1),_93938_tokens);;
	if ((_95517_rang == nullptr)) {
		_1e33d0b05_pushErr(&(*_self_), _94517_token,jule::Str("invalid syntax", 14));
		return std::make_tuple(nullptr,false);
	} else if (((_95417_i + 1LL) < _93938_tokens.len())) {
		_95017_assign.get()._field_Setter=_93938_tokens[_95417_i];
		(_95417_i)++;
		jule::Slice<jule::Ptr<_1d42b43cc_Token>> _96221_exprTokens = _93938_tokens.slice(_95417_i);;
		_95017_assign.get()._field_Right=_1e33eb68c_buildExpr((*_self_)._field_p, _96221_exprTokens);
	};
	jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>> _96718_parts;;
	jule::Slice<_20a35491e_Log> _96725_errs;;
	std::tie(_96718_parts,_96725_errs) = _1e33e93d2_parts(_95517_rang,static_cast<jule::U64>(8LLU),true);
	if ((_96725_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_96725_errs);
		return std::make_tuple(nullptr,false);
	};
	{
		auto &expr = _96718_parts;
		auto it = expr.begin();
		_iter_begin_1e631488d:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d42b43cc_Token>> _97321_part = *it;
			{
				jule::Bool _97421_isMut = false;;
				jule::Bool _97521_isRef = false;;
				_94517_token=_97321_part[0LL];
				if ((_94517_token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
					_97421_isMut=true;
					_97321_part=_97321_part.slice(1LL);
					if ((_97321_part.len() == 0LL)) {
						_1e33d0b05_pushErr(&(*_self_), _94517_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1e631488d;
					};
				};
				if (((_97321_part[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_97321_part[0LL].get()._field_Kind == jule::Str("&", 1)))) {
					_97521_isRef=true;
					_97321_part=_97321_part.slice(1LL);
					if ((_97321_part.len() == 0LL)) {
						_1e33d0b05_pushErr(&(*_self_), _94517_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1e631488d;
					};
				};
				if ((((_97321_part[0LL].get()._field_Id != static_cast<jule::U64>(2LLU)) && (_97321_part[0LL].get()._field_Id != static_cast<jule::U64>(3LLU))) && (_97321_part[0LL].get()._field_Kind != jule::Str("(", 1)))) {
					_1e33d0b05_pushErr(&(*_self_), _94517_token,jule::Str("invalid syntax", 14));
					goto _iter_next_1e631488d;
				};
				jule::Ptr<_1e2523dc0_AssignLeft> _100321_l = _1e33d8c84_buildAssignL(&(*_self_), _97321_part);;
				_100321_l.get()._field_Mutable=_97421_isMut;
				_100321_l.get()._field_Reference=_97521_isRef;
				_95017_assign.get()._field_Left = jule::alloc_for_append(_95017_assign.get()._field_Left,1);_95017_assign.get()._field_Left.__push(_100321_l);;
			}
			_iter_next_1e631488d:;
			++it;
			goto _iter_begin_1e631488d;
		}
		_iter_end_1e631488d:;
	};
	return std::make_tuple(_95017_assign,true);
}



inline std::tuple<jule::Ptr<_1e252440e_AssignSt>,jule::Bool> _1e33d99bb_buildAssignSt(_1e33ce917_scopeParser* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _101237_tokens) {
	jule::Ptr<_1e252440e_AssignSt> _101257_st = jule::Ptr<_1e252440e_AssignSt>();
	jule::Bool _101272_ok = jule::Bool();
	if ((!(_1e33e7457_checkAssignTokens(_101237_tokens)))) {
		_101257_st = nullptr;
		_101272_ok = false;
		return std::make_tuple(_101257_st,_101272_ok);
	};
	{
		auto &_match_expr{ _101237_tokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1e631d677:;
			{
				std::tie(_101257_st,_101272_ok) = _1e33d96ad_buildDeclAssign(&(*_self_), _101237_tokens);
			}
		}
		else {
			_case_begin_1e631d26a:;
			{
				std::tie(_101257_st,_101272_ok) = _1e33d93a0_buildPlainAssign(&(*_self_), _101237_tokens);
			}
		}
		_match_end_1e631d215:;
	};
	return std::make_tuple(_101257_st,_101272_ok);
}



inline jule::Ptr<_1e251a548_UseExpr> _1e33d9cc9_buildUseExpr(_1e33ce917_scopeParser* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _102736_tokens) {
	if ((_102736_tokens.len() == 1LL)) {
		_1e33d0b05_pushErr(&(*_self_), _102736_tokens[0LL],jule::Str("expression missing", 18));
		return nullptr;
	};
	jule::Ptr<_1e251a548_UseExpr> _103217_ue = jule::new_ptr<_1e251a548_UseExpr>(_1e251a548_UseExpr{._field_Token=_102736_tokens[0LL], });;
	_102736_tokens=_102736_tokens.slice(1LL);
	_103217_ue.get()._field_Expr=_1e33eb68c_buildExpr((*_self_)._field_p, _102736_tokens);
	return _103217_ue;
}



inline jule::Any _1e33da0d7_buildSt(_1e33ce917_scopeParser* _self_, jule::Ptr<_1e33ce0dc_stmt>& _104031_st) {
	jule::Ptr<_1d42b43cc_Token> _104117_token = _104031_st.get()._field_tokens[0LL];;
	if ((_104117_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
		jule::Any _104322_s;;
		jule::Bool _104325_ok;;
		std::tie(_104322_s,_104325_ok) = _1e33d8668_buildIdSt(&(*_self_), _104031_st.get()._field_tokens);
		if (_104325_ok) {
			return _104322_s;
		};
	};
	jule::Ptr<_1e252440e_AssignSt> _104918_s;;
	jule::Bool _104921_ok;;
	std::tie(_104918_s,_104921_ok) = _1e33d99bb_buildAssignSt(&(*_self_), _104031_st.get()._field_tokens);
	if (_104921_ok) {
		return static_cast<jule::Any>(_104918_s);
	};
	{
		auto &_match_expr{ _104117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1e63237ae:;
			{
				return static_cast<jule::Any>(_1e33d9cc9_buildUseExpr(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(38LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1e632357d:;
			{
				return static_cast<jule::Any>(_1e33d1ac3_buildVarSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1e6323b77:;
			{
				return static_cast<jule::Any>(_1e33d1dd1_buildRetSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(12LLU)) {
			_case_begin_1e6323bdd:;
			{
				return static_cast<jule::Any>(_1e33d481d_buildIterSt(&(*_self_), _104031_st));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1e6323c54:;
			{
				return static_cast<jule::Any>(_1e33d4b2b_buildBreakSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(14LLU)) {
			_case_begin_1e6323cba:;
			{
				return static_cast<jule::Any>(_1e33d4e39_buildContSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1e6323d31:;
			{
				return static_cast<jule::Any>(_1e33d5863_buildIfElseChain(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1e6323d97:;
			{
				return static_cast<jule::Any>(_1e33d5b71_buildCoCallSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1e6323e0d:;
			{
				return static_cast<jule::Any>(_1e33d5e7e_buildGotoSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1e6323e74:;
			{
				return static_cast<jule::Any>(_1e33d628c_buildFallSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1e6323eda:;
			{
				return static_cast<jule::Any>(_1e33d659a_buildTypeAliasSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1e6324051:;
			{
				return static_cast<jule::Any>(_1e33d7c3e_buildMatchCase(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU) || _match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1e63240b7:;
			{
				return static_cast<jule::Any>(_1e33d804c_buildScopeSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1e632412d:;
			{
				if ((_104117_token.get()._field_Kind == jule::Str("{", 1))) {
					return static_cast<jule::Any>(_1e33d804c_buildScopeSt(&(*_self_), _104031_st.get()._field_tokens));
				};
			}
		}
		_match_end_1e632399b:;
	};
	jule::Ptr<_1e2519ba7_Expr> _109017_expr = _1e33eb68c_buildExpr((*_self_)._field_p, _104031_st.get()._field_tokens);;
	if ((_109017_expr != nullptr)) {
		return static_cast<jule::Any>(_109017_expr);
	};
	_1e33d0b05_pushErr(&(*_self_), _104117_token,jule::Str("invalid syntax", 14));
	return nullptr;
}



inline void _1e33da406_build(_1e33ce917_scopeParser* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _109829_tokens, jule::Ptr<_1e25259a4_ScopeTree>& _109852_s) {
	if ((_109852_s == nullptr)) {
		return;;
	};
	(*_self_)._field_stmts=_1e33ce483_splitStmts(_109829_tokens);
	(*_self_)._field_pos=-1LL;
	(*_self_)._field_s=_109852_s;
	while (((!(_1e33d07d6_isLastSt(&(*_self_)))) && (!(_1e33d0572_finished(&(*_self_)))))) {
		{
			jule::Ptr<_1e33ce0dc_stmt> _110621_st = _1e33d140d_next(&(*_self_));;
			jule::Any _110721_data = _1e33da0d7_buildSt(&(*_self_), _110621_st);;
			if ((_110721_data != nullptr)) {
				(*_self_)._field_s.get()._field_Stmts = jule::alloc_for_append((*_self_)._field_s.get()._field_Stmts,1);(*_self_)._field_s.get()._field_Stmts.__push(_1e2525399_Stmt{._field_Token=_110621_st.get()._field_tokens[0LL], ._field_Data=_110721_data});;
			};
			if (_1e33d030d_stopped(&(*_self_))) {
				goto _iter_end_1e632c158;
			};
		}
	_iter_next_1e632c158:;
	}
	_iter_end_1e632c158:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33ce917_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _1e33dc57e_pushErr(_1e33dbc76_exprBuilder* _self_, jule::Ptr<_1d42b43cc_Token> _19726_token, jule::Str _19741_fmt, jule::Slice<jule::Any> _19754_args) {
	_1e33eb060_pushErr((*_self_)._field_p.ptr(), _19726_token,_19741_fmt,jule::Any(_19754_args));
}



inline void _1e33dc89d_pushSuggestion(_1e33dbc76_exprBuilder* _self_, jule::Str _20233_fmt, jule::Slice<jule::Any> _20246_args) {
	_1e33eb37e_pushSuggestion((*_self_)._field_p.ptr(), _20233_fmt,jule::Any(_20246_args));
}



inline jule::Ptr<_1e251a834_TupleExpr> _1e33dcbab_buildTuple(_1e33dbc76_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>>& _20634_parts) {
	jule::Ptr<_1e251a834_TupleExpr> _20717_tuple = jule::new_ptr<_1e251a834_TupleExpr>(_1e251a834_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_1e2519ba7_Expr>>::alloc(0LL,_20634_parts.len())});;
	{
		auto &expr = _20634_parts;
		auto it = expr.begin();
		_iter_begin_1e6347bac:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d42b43cc_Token>> _21021_part = *it;
			{
				_20717_tuple.get()._field_Expr = jule::alloc_for_append(_20717_tuple.get()._field_Expr,1);_20717_tuple.get()._field_Expr.__push(_1e33e66cb_buildFromTokens(&(*_self_), _21021_part));;
			}
			_iter_next_1e6347bac:;
			++it;
			goto _iter_begin_1e6347bac;
		}
		_iter_end_1e6347bac:;
	};
	return _20717_tuple;
}



inline jule::Ptr<_1e251abdb_LitExpr> _1e33dceb9_buildLit(_1e33dbc76_exprBuilder* _self_, jule::Ptr<_1d42b43cc_Token> _21627_token) {
	return jule::new_ptr<_1e251abdb_LitExpr>(_1e251abdb_LitExpr{._field_Token=_21627_token, ._field_Value=_21627_token.get()._field_Kind});
}



inline jule::Ptr<_1e2515686_TypeDecl> _1e33dd2c7_buildPrimitiveType(_1e33dbc76_exprBuilder* _self_, jule::Ptr<_1d42b43cc_Token>& _22338_token) {
	return _1e340b070_buildPrimType(_22338_token);
}



inline jule::Any _1e33dd5d5_buildSingle(_1e33dbc76_exprBuilder* _self_, jule::Ptr<_1d42b43cc_Token> _22734_token) {
	{
		auto &_match_expr{ _22734_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1e6349917:;
			{
				return static_cast<jule::Any>(_1e33dceb9_buildLit(&(*_self_), _22734_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1e634997d:;
			{
				if ((_22734_token.get()._field_Kind == jule::Str("...", 3))) {
					return static_cast<jule::Any>(jule::new_ptr<_1e251c7d1_VariadicExpr>(_1e251c7d1_VariadicExpr{._field_Token=_22734_token, }));
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(28LLU) || _match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1e63499e4:;
			{
				return static_cast<jule::Any>(_1e33db79d_buildIdentExpr(_22734_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1e6349a5a:;
			{
				return static_cast<jule::Any>(_1e33dd2c7_buildPrimitiveType(&(*_self_), _22734_token));
			}
		}
		_match_end_1e634888e:;
	};
	_1e33dc57e_pushErr(&(*_self_), _22734_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1e251bc20_IdentExpr> _1e33dd8e3_buildCppLinkedIdent(_1e33dbc76_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _24843_tokens) {
	if ((_24843_tokens[0LL].get()._field_Id != static_cast<jule::U64>(31LLU))) {
		return nullptr;
	} else if ((_24843_tokens[1LL].get()._field_Id != static_cast<jule::U64>(20LLU))) {
		_1e33dc57e_pushErr(&(*_self_), _24843_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e33dc89d_pushSuggestion(&(*_self_), jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1d42b43cc_Token> _25617_token = _24843_tokens[2LL];;
	if ((_25617_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e33dc57e_pushErr(&(*_self_), _24843_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e33dc89d_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e251bc20_IdentExpr> _26217_expr = _1e33db79d_buildIdentExpr(_25617_token);;
	_26217_expr.get()._field_CppLinked=true;
	return _26217_expr;
}



inline jule::Ptr<_1e251c429_UnaryExpr> _1e33ddc01_buildUnary(_1e33dbc76_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _26733_tokens) {
	jule::Ptr<_1d42b43cc_Token> _26817_op = _26733_tokens[0LL];;
	if ((_26733_tokens.len() == 1LL)) {
		_1e33dc57e_pushErr(&(*_self_), _26817_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((!(_1d42b4ad6_IsUnaryOp(_26817_op.get()._field_Kind)))) {
		_1e33dc57e_pushErr(&(*_self_), _26817_op,jule::Str("invalid unary operator: @", 25),jule::Slice<jule::Any>::make({jule::Any(_26817_op.get()._field_Kind)}));
		return nullptr;
	};
	_26733_tokens=_26733_tokens.slice(1LL);
	return jule::new_ptr<_1e251c429_UnaryExpr>(_1e251c429_UnaryExpr{._field_Op=_26817_op, ._field_Expr=_1e33e66cb_buildFromTokens(&(*_self_), _26733_tokens)});
}



inline jule::Ptr<_1e251d4b3_SubIdentExpr> _1e33de00e_buildObjSubIdent(_1e33dbc76_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _28839_tokens) {
	jule::I64 _28917_i = (_28839_tokens.len() - 1LL);;
	jule::Ptr<_1d42b43cc_Token> _29017_identToken = _28839_tokens[_28917_i];;
	(_28917_i)--;
	_28839_tokens=_28839_tokens.slice(0LL,_28917_i);
	if ((_28839_tokens.len() == 0LL)) {
		_1e33dc57e_pushErr(&(*_self_), _29017_identToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1e251d4b3_SubIdentExpr>(_1e251d4b3_SubIdentExpr{._field_Expr=_1e33e66cb_buildFromTokens(&(*_self_), _28839_tokens), ._field_Ident=_29017_identToken});
}



inline jule::Ptr<_1e251d040_NsSelectionExpr> _1e33de31c_buildNsSubIdent(_1e33dbc76_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _30339_tokens) {
	jule::Ptr<_1e251d040_NsSelectionExpr> _30417_ns = jule::new_ptr<_1e251d040_NsSelectionExpr>();;
	{
		auto &expr = _30339_tokens;
		auto it = expr.begin();
		_iter_begin_1e63560d8:;
		if (it != expr.end()) {
			jule::I64 _30514_i = it - expr.begin();
			jule::Ptr<_1d42b43cc_Token> _30521_token = *it;
			{
				if (((_30514_i & 1LL) == 0LL)) {
					if ((_30521_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
						_1e33dc57e_pushErr(&(*_self_), _30521_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1e33dc89d_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					};
					_30417_ns.get()._field_Ns = jule::alloc_for_append(_30417_ns.get()._field_Ns,1);_30417_ns.get()._field_Ns.__push(_30521_token);;
				} else if ((_30521_token.get()._field_Id != static_cast<jule::U64>(23LLU))) {
					_1e33dc57e_pushErr(&(*_self_), _30521_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1e33dc89d_pushSuggestion(&(*_self_), jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>());
				};
			}
			_iter_next_1e63560d8:;
			++it;
			_30514_i++;
			goto _iter_begin_1e63560d8;
		}
		_iter_end_1e63560d8:;
	};
	_30417_ns.get()._field_Ident=_30417_ns.get()._field_Ns[(_30417_ns.get()._field_Ns.len() - 1LL)];
	_30417_ns.get()._field_Ns=_30417_ns.get()._field_Ns.slice(0LL,(_30417_ns.get()._field_Ns.len() - 1LL));
	return _30417_ns;
}



inline jule::Ptr<_1e2515686_TypeDecl> _1e33de62a_buildType(_1e33dbc76_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _32233_tokens) {
	jule::I64 _32317_i = 0LL;;
	jule::Ptr<_1e2515686_TypeDecl> _32418_t;;
	jule::Bool _32421_ok;;
	std::tie(_32418_t,_32421_ok) = _1e33ec979_buildType((*_self_)._field_p, _32233_tokens,(&(_32317_i)),false);
	if ((!(_32421_ok))) {
		_1e33dc57e_pushErr(&(*_self_), _32233_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_32317_i < _32233_tokens.len())) {
		_1e33dc57e_pushErr(&(*_self_), _32233_tokens[_32317_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _32418_t;
}



inline jule::Any _1e33de938_buildSubIdent(_1e33dbc76_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _33637_tokens) {
	jule::I64 _33713_i = (_33637_tokens.len() - 2LL);;
	jule::Ptr<_1d42b43cc_Token> _33813_token = _33637_tokens[_33713_i];;
	{
		auto &_match_expr{ _33813_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1e6363414:;
			{
				return static_cast<jule::Any>(_1e33de00e_buildObjSubIdent(&(*_self_), _33637_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1e6363942:;
			{
				return static_cast<jule::Any>(_1e33de31c_buildNsSubIdent(&(*_self_), _33637_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1e63639a8:;
			{
				if ((_33813_token.get()._field_Kind == jule::Str("]", 1))) {
					return static_cast<jule::Any>(_1e33de62a_buildType(&(*_self_), _33637_tokens));
				};
			}
		}
		_match_end_1e6363799:;
	};
	_1e33dc57e_pushErr(&(*_self_), _33813_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1e251c7d1_VariadicExpr> _1e33dec46_buildVariadic(_1e33dbc76_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _35436_tokens) {
	jule::Ptr<_1d42b43cc_Token> _35517_token = _35436_tokens[(_35436_tokens.len() - 1LL)];;
	_35436_tokens=_35436_tokens.slice(0LL,(_35436_tokens.len() - 1LL));
	return jule::new_ptr<_1e251c7d1_VariadicExpr>(_1e251c7d1_VariadicExpr{._field_Token=_35517_token, ._field_Expr=_1e33e66cb_buildFromTokens(&(*_self_), _35436_tokens)});
}



inline jule::Any _1e33e0054_buildOpRight(_1e33dbc76_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _36336_tokens) {
	jule::Ptr<_1d42b43cc_Token> _36417_token = _36336_tokens[(_36336_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _36417_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1e6367b33:;
			{
				_36336_tokens=_36336_tokens.slice(0LL,(_36336_tokens.len() - 1LL));
				jule::Any _36821_d = _1e33e60b0_build(&(*_self_), _36336_tokens);;
				if ((_36821_d == nullptr)) {
					return nullptr;
				};
				{
					auto &_match_expr{ _36821_d };
					
					if (_match_expr.type_is<jule::Ptr<_1e251de75_FnCallExpr>>()) {
						_case_begin_1e6369085:;
						{
							_36821_d.operator jule::Ptr<_1e251de75_FnCallExpr>().get()._field_Exception=jule::new_ptr<_1e25259a4_ScopeTree>(_1e25259a4_ScopeTree{._field_Deferred=true, });
							return _36821_d;
						}
					}
					_match_end_1e6368edb:;
				};
			}
		}
		_match_end_1e6367a89:;
	};
	_1e33dc57e_pushErr(&(*_self_), _36417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1e2519e93_RangeExpr> _1e33e0384_buildBetweenParentheses(_1e33dbc76_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _38446_tokens) {
	if ((_38446_tokens.len() == 2LL)) {
		_1e33dc57e_pushErr(&(*_self_), _38446_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1e33dc89d_pushSuggestion(&(*_self_), jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>());
		return nullptr;
	};
	_38446_tokens=_38446_tokens.slice(1LL,(_38446_tokens.len() - 1LL));
	return jule::new_ptr<_1e2519e93_RangeExpr>(_1e2519e93_RangeExpr{._field_Expr=_1e33e66cb_buildFromTokens(&(*_self_), _38446_tokens)});
}



inline jule::Ptr<_1e251cb88_CastExpr> _1e33e06a3_tryBuildCast(_1e33dbc76_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _39636_tokens) {
	jule::I64 _39717_rangeN = 0LL;;
	{
		auto &expr = _39636_tokens;
		auto it = expr.begin();
		_iter_begin_1e636c6e8:;
		if (it != expr.end()) {
			jule::I64 _39813_i = it - expr.begin();
			jule::Ptr<_1d42b43cc_Token> _39816_token = *it;
			{
				if ((_39816_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _39816_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1e636d60b:;
							{
								(_39717_rangeN)++;
								goto _iter_next_1e636c6e8;
							}
						}
						else {
							_case_begin_1e636d8d6:;
							{
								(_39717_rangeN)--;
							}
						}
						_match_end_1e636d6c7:;
					};
				};
				if ((_39717_rangeN > 0LL)) {
					goto _iter_next_1e636c6e8;
				} else if (((_39813_i + 1LL) == _39636_tokens.len())) {
					return nullptr;
				};
				jule::Slice<jule::Ptr<_1d42b43cc_Token>> _41721_typeTokens = _39636_tokens.slice(0LL,(_39813_i + 1LL));;
				jule::Slice<jule::Ptr<_1d42b43cc_Token>> _41821_exprTokens = _39636_tokens.slice((_39813_i + 1LL));;
				if ((_41821_exprTokens.len() == 0LL)) {
					return nullptr;
				};
				jule::Ptr<_1d42b43cc_Token> _42517_tok = _41821_exprTokens[0LL];;
				if (((_42517_tok.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_42517_tok.get()._field_Kind != jule::Str("(", 1)))) {
					return nullptr;
				};
				jule::Ptr<_1e251cb88_CastExpr> _43021_cast = jule::new_ptr<_1e251cb88_CastExpr>(_1e251cb88_CastExpr{});;
				if ((_41821_exprTokens.len() == 2LL)) {
					_1e33dc57e_pushErr(&(*_self_), _41821_exprTokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
					_1e33dc89d_pushSuggestion(&(*_self_), jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>());
				};
				if ((_41721_typeTokens.len() == 2LL)) {
					_1e33dc57e_pushErr(&(*_self_), _41721_typeTokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
					_1e33dc89d_pushSuggestion(&(*_self_), jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>());
				} else {
					_41721_typeTokens=_41721_typeTokens.slice(1LL,(_41721_typeTokens.len() - 1LL));
					jule::I64 _44425_typeIndex = 0LL;;
					jule::Ptr<_1e2515686_TypeDecl> _44526_t;;
					jule::Bool _44529_ok;;
					std::tie(_44526_t,_44529_ok) = _1e33ec979_buildType((*_self_)._field_p, _41721_typeTokens,(&(_44425_typeIndex)),true);
					if ((_44529_ok && (_44425_typeIndex < _41721_typeTokens.len()))) {
						_1e33dc57e_pushErr(&(*_self_), _41721_typeTokens[_44425_typeIndex],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					} else if ((!(_44529_ok))) {
						return _43021_cast;
					};
					_43021_cast.get()._field_Kind=_44526_t;
					if ((_41821_exprTokens.len() > 2LL)) {
						jule::I64 _45529_j = 0LL;;
						_1e33e87dd_range(_45529_j,jule::Str("(", 1),jule::Str(")", 1),_41821_exprTokens);
						if ((_45529_j < _41821_exprTokens.len())) {
							return nullptr;
						};
						_41821_exprTokens=_41821_exprTokens.slice(0LL,_45529_j);
						_43021_cast.get()._field_Expr=_1e33e66cb_buildFromTokens(&(*_self_), _41821_exprTokens);
					};
				};
				return _43021_cast;
			}
			_iter_next_1e636c6e8:;
			++it;
			_39813_i++;
			goto _iter_begin_1e636c6e8;
		}
		_iter_end_1e636c6e8:;
	};
	return nullptr;
}



inline void _1e33e0a6b_pushArg(_1e33dbc76_exprBuilder* _self_, jule::Slice<jule::Ptr<_1e2519ba7_Expr>>& _47031_args, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _47050_tokens, jule::Ptr<_1d42b43cc_Token> _47068_err_token) {
	if ((_47050_tokens.len() == 0LL)) {
		_1e33dc57e_pushErr(&(*_self_), _47068_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e33dc89d_pushSuggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_47031_args = jule::alloc_for_append(_47031_args,1);_47031_args.__push(_1e33e66cb_buildFromTokens(&(*_self_), _47050_tokens));;
}



inline jule::Slice<jule::Ptr<_1e2519ba7_Expr>> _1e33e0d79_buildArgs(_1e33dbc76_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _47932_tokens) {
	if ((_47932_tokens.len() < 2LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1e2519ba7_Expr>> _48517_args = nullptr;;
	jule::I64 _48617_last = 0LL;;
	jule::I64 _48717_rangeN = 0LL;;
	_47932_tokens=_47932_tokens.slice(1LL,(_47932_tokens.len() - 1LL));
	{
		auto &expr = _47932_tokens;
		auto it = expr.begin();
		_iter_begin_1e637bc57:;
		if (it != expr.end()) {
			jule::I64 _48913_i = it - expr.begin();
			jule::Ptr<_1d42b43cc_Token> _48916_token = *it;
			{
				if ((_48916_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _48916_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1e637ca49:;
							{
								(_48717_rangeN)++;
							}
						}
						else {
							_case_begin_1e637cd24:;
							{
								(_48717_rangeN)--;
							}
						}
						_match_end_1e637cb15:;
					};
				};
				if (((_48717_rangeN > 0LL) || (_48916_token.get()._field_Id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1e637bc57;
				};
				_1e33e0a6b_pushArg(&(*_self_), _48517_args,_47932_tokens.slice(_48617_last,_48913_i),_48916_token);
				_48617_last=static_cast<jule::I64>((_48913_i + 1LL));
			}
			_iter_next_1e637bc57:;
			++it;
			_48913_i++;
			goto _iter_begin_1e637bc57;
		}
		_iter_end_1e637bc57:;
	};
	if ((_48617_last < _47932_tokens.len())) {
		if ((_48617_last == 0LL)) {
			if ((_47932_tokens.len() > 0LL)) {
				_1e33e0a6b_pushArg(&(*_self_), _48517_args,_47932_tokens.slice(_48617_last),_47932_tokens[_48617_last]);
			};
		} else {
			_1e33e0a6b_pushArg(&(*_self_), _48517_args,_47932_tokens.slice(_48617_last),_47932_tokens[(_48617_last - 1LL)]);
		};
	};
	return _48517_args;
}



inline jule::Slice<jule::Ptr<_1e2515686_TypeDecl>> _1e33e1187_buildCallGenerics(_1e33dbc76_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _52140_tokens) {
	if ((_52140_tokens.len() == 0LL)) {
		return nullptr;
	};
	_52140_tokens=_52140_tokens.slice(1LL,(_52140_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>> _52718_parts;;
	jule::Slice<_20a35491e_Log> _52725_errs;;
	std::tie(_52718_parts,_52725_errs) = _1e33e93d2_parts(_52140_tokens,static_cast<jule::U64>(8LLU),true);
	jule::Slice<jule::Ptr<_1e2515686_TypeDecl>> _52817_generics = jule::Slice<jule::Ptr<_1e2515686_TypeDecl>>::alloc(0LL,_52718_parts.len());;
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_52725_errs);
	{
		auto &expr = _52718_parts;
		auto it = expr.begin();
		_iter_begin_1e638318c:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d42b43cc_Token>> _53021_part = *it;
			{
				if ((_53021_part.len() == 0LL)) {
					goto _iter_next_1e638318c;
				};
				jule::I64 _53421_j = 0LL;;
				jule::Ptr<_1e2515686_TypeDecl> _53522_generic;;
				std::tie(_53522_generic,std::ignore) = _1e33ec979_buildType((*_self_)._field_p, _53021_part,(&(_53421_j)),true);
				if ((_53421_j < _53021_part.len())) {
					_1e33dc57e_pushErr(&(*_self_), _53021_part[_53421_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_52817_generics = jule::alloc_for_append(_52817_generics,1);_52817_generics.__push(_53522_generic);;
			}
			_iter_next_1e638318c:;
			++it;
			goto _iter_begin_1e638318c;
		}
		_iter_end_1e638318c:;
	};
	return _52817_generics;
}



inline jule::Ptr<_1e251de75_FnCallExpr> _1e33e15d8_buildFnCall(_1e33dbc76_exprBuilder* _self_, jule::Ptr<_1d42b43cc_Token>& _54535_token, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _54555_expr, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _54576_args) {
	return jule::new_ptr<_1e251de75_FnCallExpr>(_1e251de75_FnCallExpr{._field_Token=_54535_token, ._field_Expr=_1e33e66cb_buildFromTokens(&(*_self_), _54555_expr), ._field_Args=_1e33e0d79_buildArgs(&(*_self_), _54576_args), });
}



inline jule::Any _1e33e18e6_buildParenthesesRange(_1e33dbc76_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _55345_tokens) {
	jule::Ptr<_1d42b43cc_Token> _55417_token = _55345_tokens[0LL];;
	{
		auto &_match_expr{ _55417_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1e6387559:;
			{
				{
					auto &_match_expr{ _55417_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1e6387ceb:;
						{
							jule::Ptr<_1e251cb88_CastExpr> _55925_expr = _1e33e06a3_tryBuildCast(&(*_self_), _55345_tokens);;
							if ((_55925_expr != nullptr)) {
								return static_cast<jule::Any>(_55925_expr);
							};
						}
					}
					_match_end_1e6387b31:;
				};
			}
		}
		_match_end_1e63874b0:;
	};
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _56518_exprTokens;;
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _56534_args_tokens;;
	std::tie(_56518_exprTokens,_56534_args_tokens) = _1e33e8a85_rangeLast(_55345_tokens);
	if ((_56518_exprTokens.len() == 0LL)) {
		return static_cast<jule::Any>(_1e33e0384_buildBetweenParentheses(&(*_self_), _56534_args_tokens));
	};
	return static_cast<jule::Any>(_1e33e15d8_buildFnCall(&(*_self_), _55417_token,_56518_exprTokens,_56534_args_tokens));
}



inline jule::Ptr<_1e251b3e5_UnsafeExpr> _1e33e1c04_buildUnsafeExpr(_1e33dbc76_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _57438_tokens) {
	jule::Ptr<_1d42b43cc_Token> _57517_token = _57438_tokens[0LL];;
	_57438_tokens=_57438_tokens.slice(1LL);
	jule::I64 _57717_i = 0LL;;
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _57817_rangeTokens = _1e33e87dd_range(_57717_i,jule::Str("{", 1),jule::Str("}", 1),_57438_tokens);;
	if ((_57817_rangeTokens.len() == 0LL)) {
		_1e33dc57e_pushErr(&(*_self_), _57438_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1e251b3e5_UnsafeExpr>(_1e251b3e5_UnsafeExpr{._field_Token=_57517_token, ._field_Expr=_1e33e66cb_buildFromTokens(&(*_self_), _57817_rangeTokens)});
}



inline jule::Ptr<_1e252749a_FnDecl> _1e33e2012_buildAnonFn(_1e33dbc76_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _58935_tokens) {
	jule::Ptr<_1e252749a_FnDecl> _59017_f = _1e3401ac1_buildFn((*_self_)._field_p, _58935_tokens,false,false);;
	if ((!(_1e25277ec_IsAnon(_59017_f.ptr())))) {
		_1e33dc57e_pushErr(&(*_self_), _59017_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e33dc89d_pushSuggestion(&(*_self_), jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>());
	};
	return _59017_f;
}



inline jule::Any _1e33e2320_buildUnsafe(_1e33dbc76_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _59835_tokens) {
	{
		auto &_match_expr{ _59835_tokens[1LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1e638e2b9:;
			{
				return static_cast<jule::Any>(_1e33e2012_buildAnonFn(&(*_self_), _59835_tokens));
			}
		}
		else {
			_case_begin_1e638e7b4:;
			{
				return static_cast<jule::Any>(_1e33e1c04_buildUnsafeExpr(&(*_self_), _59835_tokens));
			}
		}
		_match_end_1e638e709:;
	};
}



inline void _1e33e26d8_pushRangeLitPart(_1e33dbc76_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _60839_part, jule::Ptr<_1d42b43cc_Token> _6099_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>>& _60934_parts) {
	if ((_60839_part.len() == 0LL)) {
		_1e33dc57e_pushErr(&(*_self_), _6099_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e33dc89d_pushSuggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_60934_parts = jule::alloc_for_append(_60934_parts,1);_60934_parts.__push(_60839_part);;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>> _1e33e2a18_getBraceRangeLitExprParts(_1e33dbc76_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _61948_tokens) {
	if ((_61948_tokens.len() < 2LL)) {
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>> _62517_parts = nullptr;;
	jule::I64 _62717_last = 0LL;;
	jule::I64 _62817_rangeN = 0LL;;
	_61948_tokens=_61948_tokens.slice(1LL,(_61948_tokens.len() - 1LL));
	{
		auto &expr = _61948_tokens;
		auto it = expr.begin();
		_iter_begin_1e6393e39:;
		if (it != expr.end()) {
			jule::I64 _63013_i = it - expr.begin();
			jule::Ptr<_1d42b43cc_Token> _63016_token = *it;
			{
				if ((_63016_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _63016_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1e6394c2b:;
							{
								(_62817_rangeN)++;
							}
						}
						else {
							_case_begin_1e6395006:;
							{
								(_62817_rangeN)--;
							}
						}
						_match_end_1e6394ce7:;
					};
				};
				if (((_62817_rangeN > 0LL) || (_63016_token.get()._field_Id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1e6393e39;
				};
				_1e33e26d8_pushRangeLitPart(&(*_self_), _61948_tokens.slice(_62717_last,_63013_i),_63016_token,_62517_parts);
				_62717_last=static_cast<jule::I64>((_63013_i + 1LL));
			}
			_iter_next_1e6393e39:;
			++it;
			_63013_i++;
			goto _iter_begin_1e6393e39;
		}
		_iter_end_1e6393e39:;
	};
	if ((_62717_last < _61948_tokens.len())) {
		if ((_62717_last == 0LL)) {
			if ((_61948_tokens.len() > 0LL)) {
				_1e33e26d8_pushRangeLitPart(&(*_self_), _61948_tokens.slice(_62717_last),_61948_tokens[_62717_last],_62517_parts);
			};
		} else {
			_1e33e26d8_pushRangeLitPart(&(*_self_), _61948_tokens.slice(_62717_last),_61948_tokens[(_62717_last - 1LL)],_62517_parts);
		};
	};
	return _62517_parts;
}



inline jule::Ptr<_1e251e904_FieldExprPair> _1e33e2d37_buildFieldExprPair(_1e33dbc76_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _66141_tokens) {
	if (((_66141_tokens.len() - 2LL) == 0LL)) {
		_1e33dc57e_pushErr(&(*_self_), _66141_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e251e904_FieldExprPair> _66617_pair = jule::new_ptr<_1e251e904_FieldExprPair>(_1e251e904_FieldExprPair{._field_Field=_66141_tokens[0LL], });;
	_66141_tokens=_66141_tokens.slice(2LL);
	_66617_pair.get()._field_Expr=_1e33e66cb_buildFromTokens(&(*_self_), _66141_tokens);
	return _66617_pair;
}



inline jule::Ptr<_1e2519ba7_Expr> _1e33e3145_buildStructLitExpr(_1e33dbc76_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _67442_tokens) {
	jule::Ptr<_1d42b43cc_Token> _67517_token = _67442_tokens[0LL];;
	if (((_67517_token.get()._field_Id == static_cast<jule::U64>(2LLU)) && (_67442_tokens.len() > 1LL))) {
		_67517_token=_67442_tokens[1LL];
		if ((_67517_token.get()._field_Id == static_cast<jule::U64>(11LLU))) {
			return jule::new_ptr<_1e2519ba7_Expr>(_1e2519ba7_Expr{._field_Token=_67517_token, ._field_End=_67442_tokens[(_67442_tokens.len() - 1LL)], ._field_Kind=static_cast<jule::Any>(_1e33e2d37_buildFieldExprPair(&(*_self_), _67442_tokens))});
		};
	};
	return _1e33e66cb_buildFromTokens(&(*_self_), _67442_tokens);
}



inline jule::Slice<jule::Ptr<_1e2519ba7_Expr>> _1e33e3453_buildStructLitExprs(_1e33dbc76_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _68943_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>> _69017_parts = _1e33e2a18_getBraceRangeLitExprParts(&(*_self_), _68943_tokens);;
	if ((_69017_parts.len() == 0LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1e2519ba7_Expr>> _69517_pairs = jule::Slice<jule::Ptr<_1e2519ba7_Expr>>::alloc(0LL,_69017_parts.len());;
	{
		auto &expr = _69017_parts;
		auto it = expr.begin();
		_iter_begin_1e639e74c:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d42b43cc_Token>> _69621_part = *it;
			{
				_69517_pairs = jule::alloc_for_append(_69517_pairs,1);_69517_pairs.__push(_1e33e3145_buildStructLitExpr(&(*_self_), _69621_part));;
			}
			_iter_next_1e639e74c:;
			++it;
			goto _iter_begin_1e639e74c;
		}
		_iter_end_1e639e74c:;
	};
	return _69517_pairs;
}



inline jule::Ptr<_1e2520152_StructLit> _1e33e3783_buildTypedStructLiteral(_1e33dbc76_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _70246_tokens) {
	jule::I64 _70317_i = 0LL;;
	jule::Ptr<_1e2515686_TypeDecl> _70418_t;;
	jule::Bool _70421_ok;;
	std::tie(_70418_t,_70421_ok) = _1e33ec979_buildType((*_self_)._field_p, _70246_tokens,(&(_70317_i)),true);
	if ((!(_70421_ok))) {
		return nullptr;
	} else if ((_70317_i >= _70246_tokens.len())) {
		_1e33dc57e_pushErr(&(*_self_), _70246_tokens[_70317_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_70246_tokens=_70246_tokens.slice(_70317_i);
	jule::Ptr<_1d42b43cc_Token> _71313_token = _70246_tokens[0LL];;
	if (((_71313_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_71313_token.get()._field_Kind != jule::Str("{", 1)))) {
		_1e33dc57e_pushErr(&(*_self_), _71313_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1e2520152_StructLit>(_1e2520152_StructLit{._field_End=_70246_tokens[(_70246_tokens.len() - 1LL)], ._field_Kind=_70418_t, ._field_Exprs=_1e33e3453_buildStructLitExprs(&(*_self_), _70246_tokens)});
}



inline jule::Ptr<_1e2519ba7_Expr> _1e33e3aa2_buildBraceLitPart(_1e33dbc76_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _72641_tokens) {
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _72718_l;;
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _72725_r;;
	std::tie(_72718_l,_72725_r) = _1e33db1d7_splitDelim(_72641_tokens,static_cast<jule::U64>(11LLU));
	if ((_72718_l != nullptr)) {
		return jule::new_ptr<_1e2519ba7_Expr>(_1e2519ba7_Expr{._field_Token=_72641_tokens[0LL], ._field_End=_72641_tokens[(_72641_tokens.len() - 1LL)], ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1e25210dc_KeyValPair>(_1e25210dc_KeyValPair{._field_Key=_1e33e66cb_buildFromTokens(&(*_self_), _72718_l), ._field_Val=_1e33e66cb_buildFromTokens(&(*_self_), _72725_r), ._field_Colon=_72641_tokens[_72718_l.len()]}))});
	};
	return _1e33e66cb_buildFromTokens(&(*_self_), _72641_tokens);
}



inline jule::Ptr<_1e25205c5_BraceLit> _1e33e3db0_buildBraceLit(_1e33dbc76_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _74337_tokens) {
	jule::Ptr<_1e25205c5_BraceLit> _74417_lit = jule::new_ptr<_1e25205c5_BraceLit>(_1e25205c5_BraceLit{._field_Token=_74337_tokens[0LL], ._field_End=_74337_tokens[(_74337_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>> _74917_parts = _1e33e2a18_getBraceRangeLitExprParts(&(*_self_), _74337_tokens);;
	if ((_74917_parts == nullptr)) {
		return _74417_lit;
	};
	_74417_lit.get()._field_Exprs=jule::Slice<jule::Ptr<_1e2519ba7_Expr>>::alloc(0LL,_74917_parts.len());
	{
		auto &expr = _74917_parts;
		auto it = expr.begin();
		_iter_begin_1e63a87cd:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d42b43cc_Token>> _75521_part = *it;
			{
				_74417_lit.get()._field_Exprs = jule::alloc_for_append(_74417_lit.get()._field_Exprs,1);_74417_lit.get()._field_Exprs.__push(_1e33e3aa2_buildBraceLitPart(&(*_self_), _75521_part));;
			}
			_iter_next_1e63a87cd:;
			++it;
			goto _iter_begin_1e63a87cd;
		}
		_iter_end_1e63a87cd:;
	};
	return _74417_lit;
}



inline jule::Any _1e33e41bd_buildBraceRange(_1e33dbc76_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _76239_tokens) {
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _76318_exprTokens;;
	jule::I64 _76330_rangeN;;
	std::tie(_76318_exprTokens,_76330_rangeN) = _1e33dba45_getRangeExprTokens(_76239_tokens);
	{
		
		if ((_76318_exprTokens.len() == 0LL)) {
			_case_begin_1e63aa082:;
			{
				return static_cast<jule::Any>(_1e33e3db0_buildBraceLit(&(*_self_), _76239_tokens));
			}
		}
		else if ((_76330_rangeN > 0LL)) {
			_case_begin_1e63aa109:;
			{
				_1e33dc57e_pushErr(&(*_self_), _76239_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1e63a9ee9:;
	};
	jule::Ptr<_1d42b43cc_Token> _77413_elseToken = _76318_exprTokens[(_76318_exprTokens.len() - 1LL)];;
	if ((_76318_exprTokens[(_76318_exprTokens.len() - 1LL)].get()._field_Id == static_cast<jule::U64>(17LLU))) {
		_76318_exprTokens=_76318_exprTokens.slice(0LL,(_76318_exprTokens.len() - 1LL));
		jule::Any _77721_d = _1e33e60b0_build(&(*_self_), _76318_exprTokens);;
		if ((_77721_d == nullptr)) {
			return nullptr;
		};
		{
			auto &_match_expr{ _77721_d };
			
			if (_match_expr.type_is<jule::Ptr<_1e251de75_FnCallExpr>>()) {
				_case_begin_1e63ad5e6:;
				{
					_76239_tokens=_76239_tokens.slice((_76318_exprTokens.len() + 1LL));
					jule::I64 _78425_i = 0LL;;
					jule::Slice<jule::Ptr<_1d42b43cc_Token>> _78525_rangeTokens = _1e33e87dd_range(_78425_i,jule::Str("{", 1),jule::Str("}", 1),_76239_tokens);;
					jule::Ptr<_1e251de75_FnCallExpr> _78625_model = _77721_d.operator jule::Ptr<_1e251de75_FnCallExpr>();;
					if (_1e251e54c_Ignored(_78625_model.ptr())) {
						_1e33dc57e_pushErr(&(*_self_), _77413_elseToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1e33dc89d_pushSuggestion(&(*_self_), jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72),jule::Slice<jule::Any>());
					};
					_78625_model.get()._field_Exception=_1e33ec0c7_buildScope((*_self_)._field_p, _78525_rangeTokens,_76239_tokens[(_78425_i - 1LL)]);
					return _77721_d;
				}
			}
			else {
				_case_begin_1e63ad519:;
				{
					_1e33dc57e_pushErr(&(*_self_), _76318_exprTokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;
				}
			}
			_match_end_1e63ad2c7:;
		};
	};
	{
		auto &_match_expr{ _76318_exprTokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1e63b2584:;
			{
				return _1e33e2320_buildUnsafe(&(*_self_), _76239_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1e63b25ea:;
			{
				return static_cast<jule::Any>(_1e33e2012_buildAnonFn(&(*_self_), _76239_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1e63b2661:;
			{
				return static_cast<jule::Any>(_1e33e3783_buildTypedStructLiteral(&(*_self_), _76239_tokens));
			}
		}
		else {
			_case_begin_1e63ad65c:;
			{
				_1e33dc57e_pushErr(&(*_self_), _76318_exprTokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1e63ac095:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>> _1e33e44cb_getEnumerableParts(_1e33dbc76_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _81441_tokens) {
	_81441_tokens=_81441_tokens.slice(1LL,(_81441_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>> _81618_parts;;
	jule::Slice<_20a35491e_Log> _81625_errors;;
	std::tie(_81618_parts,_81625_errors) = _1e33e93d2_parts(_81441_tokens,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_81625_errors);
	return _81618_parts;
}



inline jule::Ptr<_1e2521560_SliceExpr> _1e33e47d9_buildSlice(_1e33dbc76_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _82133_tokens) {
	jule::Ptr<_1e2521560_SliceExpr> _82217_slc = jule::new_ptr<_1e2521560_SliceExpr>(_1e2521560_SliceExpr{._field_Token=_82133_tokens[0LL], ._field_End=_82133_tokens[(_82133_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>> _82717_parts = _1e33e44cb_getEnumerableParts(&(*_self_), _82133_tokens);;
	if ((_82717_parts.len() == 0LL)) {
		return _82217_slc;
	};
	_82217_slc.get()._field_Exprs=jule::Slice<jule::Ptr<_1e2519ba7_Expr>>::alloc(0LL,_82717_parts.len());
	{
		auto &expr = _82717_parts;
		auto it = expr.begin();
		_iter_begin_1e63b7d4d:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d42b43cc_Token>> _83321_p = *it;
			{
				if ((_83321_p.len() == 0LL)) {
					goto _iter_next_1e63b7d4d;
				};
				_82217_slc.get()._field_Exprs = jule::alloc_for_append(_82217_slc.get()._field_Exprs,1);_82217_slc.get()._field_Exprs.__push(_1e33e66cb_buildFromTokens(&(*_self_), _83321_p));;
			}
			_iter_next_1e63b7d4d:;
			++it;
			goto _iter_begin_1e63b7d4d;
		}
		_iter_end_1e63b7d4d:;
	};
	return _82217_slc;
}



inline jule::Ptr<_1e2521e01_IndexingExpr> _1e33e4c3a_buildIndexing(_1e33dbc76_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _84336_exprTokens, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _84413_tokens, jule::Ptr<_1d42b43cc_Token> _84435_errorToken) {
	jule::Ptr<_1d42b43cc_Token> _84517_end = _84413_tokens[(_84413_tokens.len() - 1LL)];;
	_84413_tokens=_84413_tokens.slice(1LL,(_84413_tokens.len() - 1LL));
	if ((_84413_tokens.len() == 0LL)) {
		_1e33dc57e_pushErr(&(*_self_), _84435_errorToken,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e2519ba7_Expr> _85117_expr = _1e33e66cb_buildFromTokens(&(*_self_), _84336_exprTokens);;
	if ((_85117_expr == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1e2519ba7_Expr> _85517_index = _1e33e66cb_buildFromTokens(&(*_self_), _84413_tokens);;
	if ((_85517_index == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1e2521e01_IndexingExpr>(_1e2521e01_IndexingExpr{._field_Token=_84435_errorToken, ._field_End=_84517_end, ._field_Expr=_85117_expr, ._field_Index=_85517_index});
}



inline jule::Ptr<_1e252250b_SlicingExpr> _1e33e52ce_buildSlicing(_1e33dbc76_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _86736_exprTokens, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _86763_start, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _86814_to, jule::Ptr<_1d42b43cc_Token>& _86833_errorToken, jule::Ptr<_1d42b43cc_Token> _86857_end) {
	jule::Ptr<_1e252250b_SlicingExpr> _86917_slc = jule::new_ptr<_1e252250b_SlicingExpr>(_1e252250b_SlicingExpr{._field_Token=_86833_errorToken, ._field_End=_86857_end, ._field_Expr=_1e33e66cb_buildFromTokens(&(*_self_), _86736_exprTokens), });;
	if ((_86763_start.len() > 0LL)) {
		_86917_slc.get()._field_Start=_1e33e66cb_buildFromTokens(&(*_self_), _86763_start);
	};
	if ((_86814_to.len() > 0LL)) {
		_86917_slc.get()._field_To=_1e33e66cb_buildFromTokens(&(*_self_), _86814_to);
	};
	return _86917_slc;
}



inline jule::Any _1e33e55dc_buildBracketRange(_1e33dbc76_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _88340_tokens) {
	jule::Ptr<_1d42b43cc_Token> _88417_errorToken = _88340_tokens[0LL];;
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _88518_exprTokens;;
	jule::I64 _88530_rangeN;;
	std::tie(_88518_exprTokens,_88530_rangeN) = _1e33dba45_getRangeExprTokens(_88340_tokens);
	if ((_88518_exprTokens.len() == 0LL)) {
		return static_cast<jule::Any>(_1e33e47d9_buildSlice(&(*_self_), _88340_tokens));
	} else if ((_88530_rangeN > 0LL)) {
		_1e33dc57e_pushErr(&(*_self_), _88417_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_88340_tokens=_88340_tokens.slice(_88518_exprTokens.len());
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _90017_splitTokens = _88340_tokens.slice(1LL,(_88340_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _90118_start;;
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _90129_to;;
	std::tie(_90118_start,_90129_to) = _1e33db1d7_splitDelim(_90017_splitTokens,static_cast<jule::U64>(11LLU));
	if (((_90118_start != nullptr) || (_90129_to != nullptr))) {
		return static_cast<jule::Any>(_1e33e52ce_buildSlicing(&(*_self_), _88518_exprTokens,_90118_start,_90129_to,_88417_errorToken,_88340_tokens[(_88340_tokens.len() - 1LL)]));
	};
	return static_cast<jule::Any>(_1e33e4c3a_buildIndexing(&(*_self_), _88518_exprTokens,_88340_tokens,_88417_errorToken));
}



inline jule::Any _1e33e58ea_buildData(_1e33dbc76_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _90833_tokens) {
	{
		auto _match_expr{ _90833_tokens.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1e63c4c5b:;
			{
				return nullptr;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1e63c4cd3:;
			{
				return _1e33dd5d5_buildSingle(&(*_self_), _90833_tokens[0LL]);
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1e63c4d5a:;
			{
				if ((_90833_tokens[0LL].get()._field_Id == static_cast<jule::U64>(31LLU))) {
					return static_cast<jule::Any>(_1e33dd8e3_buildCppLinkedIdent(&(*_self_), _90833_tokens));
				};
			}
		}
		_match_end_1e63c49e7:;
	};
	jule::Ptr<_1d42b43cc_Token> _92017_token = _90833_tokens[(_90833_tokens.len() - 1LL)];;
	if (((_92017_token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_92017_token.get()._field_Kind == jule::Str("...", 3)))) {
		return static_cast<jule::Any>(_1e33dec46_buildVariadic(&(*_self_), _90833_tokens));
	};
	_92017_token=_90833_tokens[0LL];
	{
		auto &_match_expr{ _92017_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1e63c8138:;
			{
				if (((_90833_tokens.len() > 1LL) && (_92017_token.get()._field_Kind == jule::Str("*", 1)))) {
					_92017_token=_90833_tokens[1LL];
					if (((_92017_token.get()._field_Id == static_cast<jule::U64>(1LLU)) || (_92017_token.get()._field_Id == static_cast<jule::U64>(35LLU)))) {
						return static_cast<jule::Any>(_1e33de62a_buildType(&(*_self_), _90833_tokens));
					};
				};
				return static_cast<jule::Any>(_1e33ddc01_buildUnary(&(*_self_), _90833_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1e63c81b0:;
			{
				if ((_90833_tokens.len() < 3LL)) {
					goto _match_end_1e63c805b;
				};
				if ((_90833_tokens.len() > 3LL)) {
					jule::Ptr<_1d42b43cc_Token> _94221_t = _90833_tokens[(_90833_tokens.len() - 1LL)];;
					if (((_94221_t.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_94221_t.get()._field_Kind == jule::Str(")", 1)))) {
						goto _match_end_1e63c805b;
					};
				};
				jule::Ptr<_1d42b43cc_Token> _94817_next = _90833_tokens[1LL];;
				if (((_94817_next.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_94817_next.get()._field_Kind != jule::Str("]", 1)))) {
					jule::I64 _95125_delim = 0LL;;
					_95125_delim=static_cast<jule::I64>(_1e340b3b1_mapColon(_90833_tokens,_95125_delim));
					if ((_95125_delim == -1LL)) {
						goto _match_end_1e63c805b;
					};
				};
				return static_cast<jule::Any>(_1e33de62a_buildType(&(*_self_), _90833_tokens));
			}
		}
		_match_end_1e63c805b:;
	};
	_92017_token=_90833_tokens[(_90833_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _92017_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1e63c86aa:;
			{
				return _1e33de938_buildSubIdent(&(*_self_), _90833_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1e63ce86a:;
			{
				return static_cast<jule::Any>(_1e33de62a_buildType(&(*_self_), _90833_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1e63ce8d1:;
			{
				return _1e33e0054_buildOpRight(&(*_self_), _90833_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1e63ce947:;
			{
				{
					auto &_match_expr{ _92017_token.get()._field_Kind };
					
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1e63d1284:;
						{
							return _1e33e18e6_buildParenthesesRange(&(*_self_), _90833_tokens);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1e63d12ea:;
						{
							return _1e33e41bd_buildBraceRange(&(*_self_), _90833_tokens);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1e63d1372:;
						{
							return _1e33e55dc_buildBracketRange(&(*_self_), _90833_tokens);
						}
					}
					_match_end_1e63d0bbd:;
				};
			}
		}
		_match_end_1e63c8655:;
	};
	if ((_92017_token.get()._field_Id == static_cast<jule::U64>(33LLU))) {
		return static_cast<jule::Any>(_1e33de62a_buildType(&(*_self_), _90833_tokens));
	};
	_1e33dc57e_pushErr(&(*_self_), _92017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1e251d936_BinopExpr> _1e33e5ca2_buildBinop(_1e33dbc76_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _98934_tokens, jule::I64 _98952_i) {
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _99017_leftTokens = _98934_tokens.slice(0LL,_98952_i);;
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _99117_rightTokens = _98934_tokens.slice((_98952_i + 1LL));;
	if ((_99017_leftTokens.len() == 0LL)) {
		_1e33dc57e_pushErr(&(*_self_), _98934_tokens[_98952_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e33dc89d_pushSuggestion(&(*_self_), jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_99117_rightTokens.len() == 0LL)) {
		_1e33dc57e_pushErr(&(*_self_), _98934_tokens[_98952_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e33dc89d_pushSuggestion(&(*_self_), jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1e251d936_BinopExpr>(_1e251d936_BinopExpr{._field_Left=_1e33e66cb_buildFromTokens(&(*_self_), _99017_leftTokens), ._field_Right=_1e33e66cb_buildFromTokens(&(*_self_), _99117_rightTokens), ._field_Op=_98934_tokens[_98952_i]});
}



inline jule::Any _1e33e60b0_build(_1e33dbc76_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _100929_tokens) {
	jule::I64 _101013_i = _1e33db47e_findLowestPrecOp(_100929_tokens);;
	if ((_101013_i == -1LL)) {
		return _1e33e58ea_buildData(&(*_self_), _100929_tokens);
	};
	return static_cast<jule::Any>(_1e33e5ca2_buildBinop(&(*_self_), _100929_tokens,_101013_i));
}



inline jule::Any _1e33e63bd_buildKind(_1e33dbc76_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _101733_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>> _101818_parts;;
	jule::Slice<_20a35491e_Log> _101825_errors;;
	std::tie(_101818_parts,_101825_errors) = _1e33e93d2_parts(_101733_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_101825_errors != nullptr)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_101825_errors);
		return nullptr;
	} else if ((_101818_parts.len() > 1LL)) {
		return static_cast<jule::Any>(_1e33dcbab_buildTuple(&(*_self_), _101818_parts));
	};
	return _1e33e60b0_build(&(*_self_), _101733_tokens);
}



inline jule::Ptr<_1e2519ba7_Expr> _1e33e66cb_buildFromTokens(_1e33dbc76_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _102838_tokens) {
	if ((_102838_tokens.len() == 0LL)) {
		return nullptr;
	};
	return jule::new_ptr<_1e2519ba7_Expr>(_1e2519ba7_Expr{._field_Token=_102838_tokens[0LL], ._field_End=_102838_tokens[(_102838_tokens.len() - 1LL)], ._field_Kind=_1e33e63bd_buildKind(&(*_self_), _102838_tokens)});
}







std::ostream &operator<<(std::ostream &_Stream, _1e33dbc76_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e33e70b1_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1e33ea933_stop(_1e33ea603_parser* _self_) {
	(*_self_)._field_ast=nullptr;
}



inline jule::Bool _1e33eab97_stopped(_1e33ea603_parser* _self_) {
	return ((*_self_)._field_ast == nullptr);
}



inline void _1e33eb060_pushErr(_1e33ea603_parser* _self_, jule::Ptr<_1d42b43cc_Token> _28526_token, jule::Str _28541_fmt, jule::Slice<jule::Any> _28554_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1e33e9a64_compilerErr(_28526_token,_28541_fmt,jule::Any(_28554_args)));;
}



inline void _1e33eb37e_pushSuggestion(_1e33ea603_parser* _self_, jule::Str _29033_fmt, jule::Slice<jule::Any> _29046_args) {
	{
		_1e33e9e93_pushSuggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_29033_fmt,jule::Any(_29046_args));
	};
}



inline jule::Ptr<_1e2519ba7_Expr> _1e33eb68c_buildExpr(jule::Ptr<_1e33ea603_parser> _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _29434_tokens) {
	jule::Ptr<_1e33dbc76_exprBuilder> _29517_ep = jule::new_ptr<_1e33dbc76_exprBuilder>(_1e33dbc76_exprBuilder{._field_p=_self_});;
	jule::Ptr<_1e2519ba7_Expr> _29817_expr = _1e33e66cb_buildFromTokens(_29517_ep.ptr(), _29434_tokens);;
	return _29817_expr;
}



inline jule::Ptr<_1e24d1e8d_Directive> _1e33eb99a_buildDirective(_1e33ea603_parser* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _30237_tokens) {
	if ((_30237_tokens.len() == 1LL)) {
		_1e33eb060_pushErr(&(*_self_), _30237_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_30237_tokens[1LL].get()._field_Column != (_30237_tokens[0LL].get()._field_Column + 1LL))) {
		_1e33eb060_pushErr(&(*_self_), _30237_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1e24d1e8d_Directive>(_1e24d1e8d_Directive{._field_Tag=_30237_tokens[1LL], ._field_Args=_30237_tokens.slice(2LL)});
}



inline void _1e33ebc20_pushDirective(_1e33ea603_parser* _self_, jule::Ptr<_1e24d1e8d_Directive> _31736_d) {
	if ((_31736_d == nullptr)) {
		return;;
	};
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_1e64150dc:;
		if (it != expr.end()) {
			jule::Ptr<_1e24d1e8d_Directive> _32216_pd = *it;
			{
				if ((_31736_d.get()._field_Tag.get()._field_Kind == _32216_pd.get()._field_Tag.get()._field_Kind)) {
					return;;
				};
			}
			_iter_next_1e64150dc:;
			++it;
			goto _iter_begin_1e64150dc;
		}
		_iter_end_1e64150dc:;
	};
	(*_self_)._field_directives = jule::alloc_for_append((*_self_)._field_directives,1);(*_self_)._field_directives.__push(_31736_d);;
}



inline jule::Ptr<_1e25259a4_ScopeTree> _1e33ec0c7_buildScope(jule::Ptr<_1e33ea603_parser> _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _33035_tokens, jule::Ptr<_1d42b43cc_Token> _33057_end) {
	jule::Ptr<_1e25259a4_ScopeTree> _33117_s = _1e33cceba_newScope();;
	_33117_s.get()._field_End=_33057_end;
	_1e33ce917_scopeParser _33317_sp = _1e33ce917_scopeParser{._field_p=_self_, };;
	_1e33da406_build(&_33317_sp, _33035_tokens,_33117_s);
	return _33117_s;
}



inline std::tuple<jule::Ptr<_1e2515686_TypeDecl>,jule::Bool> _1e33ec528__buildType(jule::Ptr<_1e33ea603_parser> _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _34042_tokens, jule::I64* _34113_i, jule::Bool _34122_err) {
	_1e340b8bc_typeBuilder _34217_tb = _1e340b8bc_typeBuilder{._field_p=_self_, ._field_tokens=_34042_tokens, ._field_i=_34113_i, ._field_err=_34122_err};;
	jule::Ptr<_1e2515686_TypeDecl> _34818_decl;;
	jule::Bool _34824_ok;;
	std::tie(_34818_decl,_34824_ok) = _1e340ec77_build(&_34217_tb);
	return std::make_tuple(_34818_decl,_34824_ok);
}



inline std::tuple<jule::Ptr<_1e2515686_TypeDecl>,jule::Bool> _1e33ec979_buildType(jule::Ptr<_1e33ea603_parser> _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _35341_tokens, jule::I64* _35413_i, jule::Bool _35422_err) {
	jule::Ptr<_1d42b43cc_Token> _35513_token = _35341_tokens[(*(_35413_i))];;
	jule::Ptr<_1e2515686_TypeDecl> _35618_t;;
	jule::Bool _35621_ok;;
	std::tie(_35618_t,_35621_ok) = _1e33ec528__buildType(_self_, _35341_tokens,_35413_i,_35422_err);
	if ((_35422_err && (!(_35621_ok)))) {
		_1e33eb060_pushErr(_self_.ptr(), _35513_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	};
	return std::make_tuple(_35618_t,_35621_ok);
}



inline jule::Ptr<_1e252bcda_TypeAliasDecl> _1e33ecc87_buildTypeAliasDecl(jule::Ptr<_1e33ea603_parser> _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _36343_tokens) {
	jule::I64 _36417_i = 1LL;;
	if ((_36417_i >= _36343_tokens.len())) {
		_1e33eb060_pushErr(_self_.ptr(), _36343_tokens[(_36417_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e252bcda_TypeAliasDecl> _36917_tad = jule::new_ptr<_1e252bcda_TypeAliasDecl>(_1e252bcda_TypeAliasDecl{._field_Token=_36343_tokens[1LL], ._field_Ident=_36343_tokens[1LL].get()._field_Kind, });;
	jule::Ptr<_1d42b43cc_Token> _37317_token = _36343_tokens[_36417_i];;
	if ((_37317_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e33eb060_pushErr(_self_.ptr(), _37317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e33eb37e_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_36417_i)++;
	if ((_36417_i >= _36343_tokens.len())) {
		_1e33eb060_pushErr(_self_.ptr(), _36343_tokens[(_36417_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _36917_tad;
	};
	_37317_token=_36343_tokens[_36417_i];
	if ((_37317_token.get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_1e33eb060_pushErr(_self_.ptr(), _36343_tokens[(_36417_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e33eb37e_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>());
		return _36917_tad;
	};
	(_36417_i)++;
	if ((_36417_i >= _36343_tokens.len())) {
		_1e33eb060_pushErr(_self_.ptr(), _36343_tokens[(_36417_i - 1LL)],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return _36917_tad;
	};
	jule::Ptr<_1e2515686_TypeDecl> _39418_t;;
	jule::Bool _39421_ok;;
	std::tie(_39418_t,_39421_ok) = _1e33ec979_buildType(_self_, _36343_tokens,(&(_36417_i)),true);
	_36917_tad.get()._field_Kind=_39418_t;
	if ((_39421_ok && (_36417_i < _36343_tokens.len()))) {
		_1e33eb060_pushErr(_self_.ptr(), _36343_tokens[_36417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _36917_tad;
}



inline void _1e33ed0a6_buildVarTypeAndExpr(jule::Ptr<_1e33ea603_parser> _self_, jule::Ptr<_1e2528479_VarDecl>& _40244_v, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _40262_tokens) {
	jule::I64 _40317_i = 0LL;;
	jule::Ptr<_1d42b43cc_Token> _40417_tok = _40262_tokens[_40317_i];;
	if ((_40417_tok.get()._field_Id == static_cast<jule::U64>(11LLU))) {
		(_40317_i)++;
		if (((_40317_i >= _40262_tokens.len()) || ((_40262_tokens[_40317_i].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_40262_tokens[_40317_i].get()._field_Kind == jule::Str("=", 1))))) {
			_1e33eb060_pushErr(_self_.ptr(), _40417_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1e2515686_TypeDecl> _41222_t;;
		jule::Bool _41225_ok;;
		std::tie(_41222_t,_41225_ok) = _1e33ec979_buildType(_self_, _40262_tokens,(&(_40317_i)),true);
		if (_41225_ok) {
			_40244_v.get()._field_Kind=_41222_t;
			if ((_40317_i >= _40262_tokens.len())) {
				return;;
			};
			_40417_tok=_40262_tokens[_40317_i];
		};
	};
	if ((_40417_tok.get()._field_Id == static_cast<jule::U64>(7LLU))) {
		if ((_40417_tok.get()._field_Kind != jule::Str("=", 1))) {
			_1e33eb060_pushErr(_self_.ptr(), _40417_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return;;
		};
		jule::Slice<jule::Ptr<_1d42b43cc_Token>> _42721_exprTokens = _40262_tokens.slice((_40317_i + 1LL));;
		if ((_42721_exprTokens.len() == 0LL)) {
			_1e33eb060_pushErr(_self_.ptr(), _40417_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return;;
		};
		_40244_v.get()._field_Expr=_1e33eb68c_buildExpr(_self_, _42721_exprTokens);
	} else {
		_1e33eb060_pushErr(_self_.ptr(), _40417_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1e33ed3c5_buildVarCommon(jule::Ptr<_1e33ea603_parser> _self_, jule::Ptr<_1e2528479_VarDecl>& _43839_v, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _43856_tokens) {
	_43839_v.get()._field_Token=_43856_tokens[0LL];
	if ((_43839_v.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e33eb060_pushErr(_self_.ptr(), _43839_v.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e33eb37e_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	_43839_v.get()._field_Ident=_43839_v.get()._field_Token.get()._field_Kind;
	_43839_v.get()._field_Kind=nullptr;
	if ((_43856_tokens.len() > 1LL)) {
		_43856_tokens=_43856_tokens.slice(1LL);
		_1e33ed0a6_buildVarTypeAndExpr(_self_, _43839_v,_43856_tokens);
	};
}



inline void _1e33ed78d_buildVarBegin(_1e33ea603_parser* _self_, jule::Ptr<_1e2528479_VarDecl>& _45337_v, jule::I64& _45355_i, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _45364_tokens) {
	jule::Ptr<_1d42b43cc_Token> _45413_tok = _45364_tokens[_45355_i];;
	{
		auto &_match_expr{ _45413_tok.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_1e642eb51:;
			{
				_45337_v.get()._field_Statically=true;
				goto _case_begin_1e642ebb7;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1e642ebb7:;
			{
				(_45355_i)++;
				if ((_45355_i >= _45364_tokens.len())) {
					_1e33eb060_pushErr(&(*_self_), _45413_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				if ((_45364_tokens[_45355_i].get()._field_Id == static_cast<jule::U64>(36LLU))) {
					_45337_v.get()._field_Mutable=true;
					(_45355_i)++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1e642e348:;
			{
				(_45355_i)++;
				_45337_v.get()._field_Constant=true;
			}
		}
		else {
			_case_begin_1e642e27c:;
			{
				_1e33eb060_pushErr(&(*_self_), _45413_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1e642e0d4:;
	};
	if ((_45355_i >= _45364_tokens.len())) {
		_1e33eb060_pushErr(&(*_self_), _45413_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1e2528479_VarDecl> _1e33eda9b_buildVar(jule::Ptr<_1e33ea603_parser> _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _48332_tokens) {
	jule::I64 _48417_i = 0LL;;
	jule::Ptr<_1e2528479_VarDecl> _48517_v = jule::new_ptr<_1e2528479_VarDecl>(_1e2528479_VarDecl{._field_Token=_48332_tokens[0LL], });;
	_1e33ed78d_buildVarBegin(_self_.ptr(), _48517_v,_48417_i,_48332_tokens);
	if ((_48417_i >= _48332_tokens.len())) {
		return nullptr;
	};
	_48332_tokens=_48332_tokens.slice(_48417_i);
	if (((_48332_tokens[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_48332_tokens[0LL].get()._field_Kind == jule::Str("&", 1)))) {
		_48517_v.get()._field_Reference=true;
		if ((_48332_tokens.len() == 1LL)) {
			return nullptr;
		};
		_48332_tokens=_48332_tokens.slice(1LL);
	};
	_1e33ed3c5_buildVarCommon(_self_, _48517_v,_48332_tokens);
	return _48517_v;
}



inline jule::Ptr<_1e2522c6a_GenericDecl> _1e33edda9_buildGeneric(jule::Ptr<_1e33ea603_parser> _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _50537_tokens) {
	jule::Ptr<_1e2522c6a_GenericDecl> _50617_g = jule::new_ptr<_1e2522c6a_GenericDecl>(_1e2522c6a_GenericDecl{._field_Token=_50537_tokens[0LL], });;
	if ((_50617_g.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e33eb060_pushErr(_self_.ptr(), _50617_g.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e33eb37e_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_50617_g.get()._field_Ident=_50617_g.get()._field_Token.get()._field_Kind;
	if ((_50537_tokens.len() > 1LL)) {
		if ((_50537_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
			_1e33eb060_pushErr(_self_.ptr(), _50537_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		if ((_50537_tokens.len() == 2LL)) {
			_1e33eb060_pushErr(_self_.ptr(), _50537_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;
		};
		jule::Slice<jule::Ptr<_1d42b43cc_Token>> _52321_constraintTokens = _50537_tokens.slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>> _52422_parts;;
		jule::Slice<_20a35491e_Log> _52429_errors;;
		std::tie(_52422_parts,_52429_errors) = _1e33e8ee7_partsKind(_52321_constraintTokens,jule::Str("|", 1),true);
		if ((_52429_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_52429_errors);
			return nullptr;
		};
		_50617_g.get()._field_Constraint=jule::new_ptr<_1e25227e7_Constraint>(_1e25227e7_Constraint{._field_Mask=jule::Slice<jule::Ptr<_1e2515686_TypeDecl>>::alloc(0LL,_52422_parts.len())});
		{
			auto &expr = _52422_parts;
			auto it = expr.begin();
			_iter_begin_1e643b388:;
			if (it != expr.end()) {
				jule::Slice<jule::Ptr<_1d42b43cc_Token>> _53025_part = *it;
				{
					jule::I64 _53125_i = 0LL;;
					jule::Ptr<_1e2515686_TypeDecl> _53226_kind;;
					std::tie(_53226_kind,std::ignore) = _1e33ec979_buildType(_self_, _53025_part,(&(_53125_i)),true);
					_50617_g.get()._field_Constraint.get()._field_Mask = jule::alloc_for_append(_50617_g.get()._field_Constraint.get()._field_Mask,1);_50617_g.get()._field_Constraint.get()._field_Mask.__push(_53226_kind);;
					if ((_53125_i < _53025_part.len())) {
						_1e33eb060_pushErr(_self_.ptr(), _53025_part[_53125_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				}
				_iter_next_1e643b388:;
				++it;
				goto _iter_begin_1e643b388;
			}
			_iter_end_1e643b388:;
		};
	};
	return _50617_g;
}



inline jule::Slice<jule::Ptr<_1e2522c6a_GenericDecl>> _1e33ee261_buildGenerics(jule::Ptr<_1e33ea603_parser> _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _54238_tokens, jule::Ptr<_1d42b43cc_Token>& _54257_errorToken) {
	if ((_54238_tokens.len() == 0LL)) {
		_1e33eb060_pushErr(_self_.ptr(), _54257_errorToken,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>> _54818_parts;;
	jule::Slice<_20a35491e_Log> _54825_errors;;
	std::tie(_54818_parts,_54825_errors) = _1e33e93d2_parts(_54238_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_54825_errors.len() > 0LL)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_54825_errors);
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1e2522c6a_GenericDecl>> _55417_generics = jule::Slice<jule::Ptr<_1e2522c6a_GenericDecl>>::alloc(0LL,_54818_parts.len());;
	{
		auto &expr = _54818_parts;
		auto it = expr.begin();
		_iter_begin_1e6441998:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d42b43cc_Token>> _55521_part = *it;
			{
				_55417_generics = jule::alloc_for_append(_55417_generics,1);_55417_generics.__push(_1e33edda9_buildGeneric(_self_, _55521_part));;
			}
			_iter_next_1e6441998:;
			++it;
			goto _iter_begin_1e6441998;
		}
		_iter_end_1e6441998:;
	};
	return _55417_generics;
}



inline jule::Ptr<_1e252617a_ParamDecl> _1e33ee56e_buildSelfParam(_1e33ea603_parser* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _56237_tokens) {
	if ((_56237_tokens.len() == 0LL)) {
		return nullptr;
	};
	jule::Ptr<_1e252617a_ParamDecl> _56717_param = jule::new_ptr<_1e252617a_ParamDecl>();;
	jule::I64 _57017_i = 0LL;;
	if ((_56237_tokens[_57017_i].get()._field_Id == static_cast<jule::U64>(36LLU))) {
		_56717_param.get()._field_Mutable=true;
		(_57017_i)++;
		if ((_57017_i >= _56237_tokens.len())) {
			_1e33eb060_pushErr(&(*_self_), _56237_tokens[(_57017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	if ((_56237_tokens[_57017_i].get()._field_Kind == jule::Str("&", 1))) {
		_56717_param.get()._field_Ident=jule::Str("&", 1);
		(_57017_i)++;
		if ((_57017_i >= _56237_tokens.len())) {
			_1e33eb060_pushErr(&(*_self_), _56237_tokens[(_57017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	if ((_56237_tokens[_57017_i].get()._field_Id == static_cast<jule::U64>(28LLU))) {
		_56717_param.get()._field_Ident+=jule::Str("self", 4);
		_56717_param.get()._field_Token=_56237_tokens[_57017_i];
		(_57017_i)++;
		if ((_57017_i < _56237_tokens.len())) {
			_1e33eb060_pushErr(&(*_self_), _56237_tokens[_57017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	};
	return _56717_param;
}



inline void _1e33ee937_paramTypeBegin(_1e33ea603_parser* _self_, jule::Ptr<_1e252617a_ParamDecl>& _60138_param, jule::I64& _60162_i, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _60171_tokens) {
	for (; (_60162_i < _60171_tokens.len()); (_60162_i)++) {
		{
			jule::Ptr<_1d42b43cc_Token> _60317_token = _60171_tokens[_60162_i];;
			if ((_60317_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
				return;;
			} else if ((_60317_token.get()._field_Kind != jule::Str("...", 3))) {
				return;;
			};
			if (_60138_param.get()._field_Variadic) {
				_1e33eb060_pushErr(&(*_self_), _60317_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>());
				goto _iter_next_1e6448494;
			};
			_60138_param.get()._field_Variadic=true;
		}
	_iter_next_1e6448494:;
	}
	_iter_end_1e6448494:;;
}



inline void _1e33eec56_buildParamType(jule::Ptr<_1e33ea603_parser> _self_, jule::Ptr<_1e252617a_ParamDecl>& _61839_param, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _61863_tokens) {
	jule::I64 _61917_i = 0LL;;
	_1e33ee937_paramTypeBegin(_self_.ptr(), _61839_param,_61917_i,_61863_tokens);
	if ((_61917_i >= _61863_tokens.len())) {
		return;;
	};
	std::tie(_61839_param.get()._field_Kind,std::ignore) = _1e33ec979_buildType(_self_, _61863_tokens,(&(_61917_i)),true);
	if ((_61917_i < _61863_tokens.len())) {
		_1e33eb060_pushErr(_self_.ptr(), _61863_tokens[_61917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1e3400075_buildParamBody(jule::Ptr<_1e33ea603_parser> _self_, jule::Ptr<_1e252617a_ParamDecl>& _63139_param, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _63162_tokens) {
	jule::Ptr<_1d42b43cc_Token> _63217_tok = _63162_tokens[0LL];;
	_63139_param.get()._field_Ident=_63217_tok.get()._field_Kind;
	if ((_63162_tokens.len() == 1LL)) {
		return;;
	} else if ((_63162_tokens.len() < 3LL)) {
		_1e33eb060_pushErr(_self_.ptr(), _63217_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return;;
	};
	if ((_63162_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_1e33eec56_buildParamType(_self_, _63139_param,_63162_tokens);
		return;;
	};
	_63162_tokens=_63162_tokens.slice(2LL);
	_1e33eec56_buildParamType(_self_, _63139_param,_63162_tokens);
}



inline jule::Ptr<_1e252617a_ParamDecl> _1e3400383_buildParam(jule::Ptr<_1e33ea603_parser> _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _64934_tokens) {
	jule::Ptr<_1e252617a_ParamDecl> _65017_param = jule::new_ptr<_1e252617a_ParamDecl>(_1e252617a_ParamDecl{._field_Token=_64934_tokens[0LL], });;
	if ((_65017_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
		_65017_param.get()._field_Mutable=true;
		if ((_64934_tokens.len() == 1LL)) {
			_1e33eb060_pushErr(_self_.ptr(), _64934_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_64934_tokens=_64934_tokens.slice(1LL);
		_65017_param.get()._field_Token=_64934_tokens[0LL];
	};
	if ((_64934_tokens.len() >= 3LL)) {
		if (((_65017_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_65017_param.get()._field_Token.get()._field_Kind == jule::Str("&", 1)))) {
			if ((_64934_tokens.len() == 1LL)) {
				_1e33eb060_pushErr(_self_.ptr(), _64934_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			};
			if (((_64934_tokens[1LL].get()._field_Id == static_cast<jule::U64>(2LLU)) && (_64934_tokens[2LL].get()._field_Id == static_cast<jule::U64>(11LLU)))) {
				_65017_param.get()._field_Reference=true;
				_64934_tokens=_64934_tokens.slice(1LL);
				_65017_param.get()._field_Token=_64934_tokens[0LL];
			};
		};
	};
	if ((_65017_param.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_65017_param.get()._field_Ident=jule::Str("<anonymous>", 11);
		_1e33eec56_buildParamType(_self_, _65017_param,_64934_tokens);
	} else {
		_1e3400075_buildParamBody(_self_, _65017_param,_64934_tokens);
	};
	return _65017_param;
}



inline void _1e3400608_checkParams(_1e33ea603_parser* _self_, jule::Slice<jule::Ptr<_1e252617a_ParamDecl>>& _69235_params) {
	{
		auto &expr = _69235_params;
		auto it = expr.begin();
		_iter_begin_1e6457948:;
		if (it != expr.end()) {
			jule::Ptr<_1e252617a_ParamDecl> _69321_param = *it;
			{
				if ((_1e25264dd_IsSelf(_69321_param.ptr()) || (_69321_param.get()._field_Kind != nullptr))) {
					goto _iter_next_1e6457948;
				};
				if ((_69321_param.get()._field_Token == nullptr)) {
					_1e33eb060_pushErr(&(*_self_), _69321_param.get()._field_Token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
				} else {
					_69321_param.get()._field_Kind=jule::new_ptr<_1e2515686_TypeDecl>(_1e2515686_TypeDecl{._field_Token=_69321_param.get()._field_Token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1e2515c4c_IdentTypeDecl>(_1e2515c4c_IdentTypeDecl{._field_Token=_69321_param.get()._field_Token, ._field_Ident=_69321_param.get()._field_Token.get()._field_Kind, }))});
					_69321_param.get()._field_Ident=jule::Str("<anonymous>", 11);
				};
			}
			_iter_next_1e6457948:;
			++it;
			goto _iter_begin_1e6457948;
		}
		_iter_end_1e6457948:;
	};
}



inline jule::Slice<jule::Ptr<_1e252617a_ParamDecl>> _1e34009b0_buildParams(jule::Ptr<_1e33ea603_parser> _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _71236_tokens, jule::Bool _71254_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>> _71318_parts;;
	jule::Slice<_20a35491e_Log> _71325_errs;;
	std::tie(_71318_parts,_71325_errs) = _1e33e93d2_parts(_71236_tokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_71325_errs);
	if ((_71318_parts.len() == 0LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1e252617a_ParamDecl>> _71917_params = nullptr;;
	if ((_71254_method && (_71318_parts.len() > 0LL))) {
		jule::Ptr<_1e252617a_ParamDecl> _72121_param = _1e33ee56e_buildSelfParam(_self_.ptr(), _71318_parts[0LL]);;
		if (((_72121_param != nullptr) && _1e25264dd_IsSelf(_72121_param.ptr()))) {
			_71917_params = jule::alloc_for_append(_71917_params,1);_71917_params.__push(_72121_param);;
			_71318_parts=_71318_parts.slice(1LL);
		};
	};
	{
		auto &expr = _71318_parts;
		auto it = expr.begin();
		_iter_begin_1e645c244:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d42b43cc_Token>> _72821_part = *it;
			{
				jule::Ptr<_1e252617a_ParamDecl> _72921_param = _1e3400383_buildParam(_self_, _72821_part);;
				if ((_72921_param != nullptr)) {
					_71917_params = jule::alloc_for_append(_71917_params,1);_71917_params.__push(_72921_param);;
				};
			}
			_iter_next_1e645c244:;
			++it;
			goto _iter_begin_1e645c244;
		}
		_iter_end_1e645c244:;
	};
	_1e3400608_checkParams(_self_.ptr(), _71917_params);
	return _71917_params;
}



inline std::tuple<jule::Ptr<_1e2518799_RetTypeDecl>,jule::Bool> _1e3400d67_buildMultiRetType(jule::Ptr<_1e33ea603_parser> _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _73942_tokens, jule::I64& _73965_i) {
	jule::Ptr<_1e2518799_RetTypeDecl> _73975_t = jule::Ptr<_1e2518799_RetTypeDecl>();
	jule::Bool _73992_ok = jule::Bool();
	_73975_t=jule::new_ptr<_1e2518799_RetTypeDecl>();
	(_73965_i)++;
	if ((_73965_i >= _73942_tokens.len())) {
		(_73965_i)--;
		std::tie(_73975_t.get()._field_Kind,_73992_ok) = _1e33ec979_buildType(_self_, _73942_tokens,(&(_73965_i)),false);
		return std::make_tuple(_73975_t,_73992_ok);
	};
	(_73965_i)--;
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _74917_rangeTokens = _1e33e87dd_range(_73965_i,jule::Str("(", 1),jule::Str(")", 1),_73942_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>> _75118_parts;;
	jule::Slice<_20a35491e_Log> _75125_errs;;
	std::tie(_75118_parts,_75125_errs) = _1e33e93d2_parts(_74917_rangeTokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_75125_errs);
	if ((_75118_parts.len() == 0LL)) {
		return std::make_tuple(_73975_t,_73992_ok);
	};
	jule::Slice<jule::Ptr<_1e2515686_TypeDecl>> _75717_types = jule::Slice<jule::Ptr<_1e2515686_TypeDecl>>::alloc(0LL,_75118_parts.len());;
	_73975_t.get()._field_Idents=jule::Slice<jule::Ptr<_1d42b43cc_Token>>::alloc(0LL,_75118_parts.len());
	{
		auto &expr = _75118_parts;
		auto it = expr.begin();
		_iter_begin_1e64638bb:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d42b43cc_Token>> _75921_part = *it;
			{
				jule::Ptr<_1d42b43cc_Token> _76021_token = _75921_part[0LL];;
				jule::I64 _76121_offset = 0LL;;
				if ((_75921_part.len() > 1LL)) {
					_76021_token=_75921_part[1LL];
					if ((_76021_token.get()._field_Id == static_cast<jule::U64>(11LLU))) {
						_76121_offset=2LL;
						if ((_75921_part.len() < 3LL)) {
							_1e33eb060_pushErr(_self_.ptr(), _76021_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
							goto _iter_next_1e64638bb;
						};
					};
				};
				_76021_token=_75921_part[0LL];
				if ((_76121_offset != 2LL)) {
					jule::Ptr<_1d42b43cc_Token> _77725_newToken = jule::new_ptr<_1d42b43cc_Token>((*(_76021_token)));;
					_77725_newToken.get()._field_Kind=jule::Str("<anonymous>", 11);
					_73975_t.get()._field_Idents = jule::alloc_for_append(_73975_t.get()._field_Idents,1);_73975_t.get()._field_Idents.__push(_77725_newToken);;
				} else {
					_73975_t.get()._field_Idents = jule::alloc_for_append(_73975_t.get()._field_Idents,1);_73975_t.get()._field_Idents.__push(_76021_token);;
				};
				jule::Ptr<_1e2515686_TypeDecl> _78422_tk;;
				std::tie(_78422_tk,std::ignore) = _1e33ec979_buildType(_self_, _75921_part,(&(_76121_offset)),true);
				if ((_76121_offset < _75921_part.len())) {
					_1e33eb060_pushErr(_self_.ptr(), _75921_part[_76121_offset],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_75717_types = jule::alloc_for_append(_75717_types,1);_75717_types.__push(_78422_tk);;
			}
			_iter_next_1e64638bb:;
			++it;
			goto _iter_begin_1e64638bb;
		}
		_iter_end_1e64638bb:;
	};
	if ((_75717_types.len() > 1LL)) {
		_73975_t.get()._field_Kind=jule::new_ptr<_1e2515686_TypeDecl>(_1e2515686_TypeDecl{._field_Token=_73942_tokens[0LL], ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1e2517226_TupleTypeDecl>(_1e2517226_TupleTypeDecl{._field_Types=_75717_types}))});
	} else {
		_73975_t.get()._field_Kind=_75717_types[0LL];
	};
	_73992_ok=true;
	return std::make_tuple(_73975_t,_73992_ok);
}



inline std::tuple<jule::Ptr<_1e2518799_RetTypeDecl>,jule::Bool> _1e340121e_buildRetType(jule::Ptr<_1e33ea603_parser> _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _80737_tokens, jule::I64& _80760_i) {
	jule::Ptr<_1e2518799_RetTypeDecl> _80770_t = jule::Ptr<_1e2518799_RetTypeDecl>();
	jule::Bool _80787_ok = jule::Bool();
	_80770_t=jule::new_ptr<_1e2518799_RetTypeDecl>();
	if ((_80760_i >= _80737_tokens.len())) {
		return std::make_tuple(_80770_t,_80787_ok);
	};
	jule::Ptr<_1d42b43cc_Token> _81317_token = _80737_tokens[_80760_i];;
	{
		auto &_match_expr{ _81317_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1e646c3ca:;
			{
				if ((_81317_token.get()._field_Kind == jule::Str("{", 1))) {
					return std::make_tuple(_80770_t,_80787_ok);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1e646c441:;
			{
				if ((_81317_token.get()._field_Kind == jule::Str("=", 1))) {
					return std::make_tuple(_80770_t,_80787_ok);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1e646c4a7:;
			{
				if (((_80760_i + 1LL) >= _80737_tokens.len())) {
					_1e33eb060_pushErr(_self_.ptr(), _81317_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					return std::make_tuple(_80770_t,_80787_ok);
				};
				(_80760_i)++;
				_81317_token=_80737_tokens[_80760_i];
				if ((_81317_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _81317_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_1e646eee3:;
							{
								std::tie(_80770_t,_80787_ok) = _1e3400d67_buildMultiRetType(_self_, _80737_tokens,_80760_i);
								return std::make_tuple(_80770_t,_80787_ok);
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_1e6470059:;
							{
								_1e33eb060_pushErr(_self_.ptr(), _81317_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
								return std::make_tuple(_80770_t,_80787_ok);
							}
						}
						_match_end_1e646ee38:;
					};
				};
				std::tie(_80770_t.get()._field_Kind,_80787_ok) = _1e33ec979_buildType(_self_, _80737_tokens,(&(_80760_i)),true);
				return std::make_tuple(_80770_t,_80787_ok);
			}
		}
		_match_end_1e646c320:;
	};
	(_80760_i)++;
	_1e33eb060_pushErr(_self_.ptr(), _81317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return std::make_tuple(_80770_t,_80787_ok);
}



inline jule::Ptr<_1e252749a_FnDecl> _1e3401670_buildFnPrototype(jule::Ptr<_1e33ea603_parser> _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _85241_tokens, jule::I64& _85264_i, jule::Bool _85272_method) {
	jule::Ptr<_1e252749a_FnDecl> _85317_f = jule::new_ptr<_1e252749a_FnDecl>(_1e252749a_FnDecl{._field_Token=_85241_tokens[_85264_i], });;
	if ((_85317_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(38LLU))) {
		_85317_f.get()._field_Statically=true;
		(_85264_i)++;
		if ((_85264_i >= _85241_tokens.len())) {
			_1e33eb060_pushErr(_self_.ptr(), _85317_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_85317_f.get()._field_Token=_85241_tokens[_85264_i];
	};
	if ((_85317_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_85317_f.get()._field_Unsafety=true;
		(_85264_i)++;
		if ((_85264_i >= _85241_tokens.len())) {
			_1e33eb060_pushErr(_self_.ptr(), _85317_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_85317_f.get()._field_Token=_85241_tokens[_85264_i];
	};
	(_85264_i)++;
	if ((_85264_i >= _85241_tokens.len())) {
		_1e33eb060_pushErr(_self_.ptr(), _85317_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1d42b43cc_Token> _88613_tok = _85241_tokens[_85264_i];;
	if ((_88613_tok.get()._field_Id == static_cast<jule::U64>(2LLU))) {
		(_85264_i)++;
		if ((_85264_i >= _85241_tokens.len())) {
			_1e33eb060_pushErr(_self_.ptr(), _85317_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_85317_f.get()._field_Ident=_88613_tok.get()._field_Kind;
	} else {
		_85317_f.get()._field_Ident=jule::Str("<anonymous>", 11);
	};
	jule::Ptr<_1d42b43cc_Token> _89813_errorToken = _85241_tokens[_85264_i];;
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _89917_genericsTokens = _1e33e87dd_range(_85264_i,jule::Str("[", 1),jule::Str("]", 1),_85241_tokens);;
	if ((_89917_genericsTokens != nullptr)) {
		_85317_f.get()._field_Generics=_1e33ee261_buildGenerics(_self_, _89917_genericsTokens,_89813_errorToken);
	};
	if ((_85241_tokens[_85264_i].get()._field_Kind != jule::Str("(", 1))) {
		_1e33eb060_pushErr(_self_.ptr(), _85241_tokens[_85264_i],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _90917_paramsToks = _1e33e87dd_range(_85264_i,jule::Str("(", 1),jule::Str(")", 1),_85241_tokens);;
	if ((_90917_paramsToks.len() > 0LL)) {
		_85317_f.get()._field_Params=_1e34009b0_buildParams(_self_, _90917_paramsToks,_85272_method);
	};
	if ((_85264_i < _85241_tokens.len())) {
		jule::Ptr<_1d42b43cc_Token> _91517_token = _85241_tokens[_85264_i];;
		if (((_91517_token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_91517_token.get()._field_Kind == jule::Str("!", 1)))) {
			_85317_f.get()._field_Exceptional=true;
			(_85264_i)++;
		};
	};
	std::tie(_85317_f.get()._field_Result,std::ignore) = _1e340121e_buildRetType(_self_, _85241_tokens,_85264_i);
	return _85317_f;
}



inline jule::Ptr<_1e252749a_FnDecl> _1e3401ac1_buildFn(jule::Ptr<_1e33ea603_parser> _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _92832_tokens, jule::Bool _92850_method, jule::Bool _92864_prototype) {
	jule::I64 _92917_i = 0LL;;
	jule::Ptr<_1e252749a_FnDecl> _93017_f = _1e3401670_buildFnPrototype(_self_, _92832_tokens,_92917_i,_92850_method);;
	if (_92864_prototype) {
		if ((_92917_i < _92832_tokens.len())) {
			_1e33eb060_pushErr(_self_.ptr(), _92832_tokens[(_92917_i + 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		return _93017_f;
	} else if ((_93017_f == nullptr)) {
		return _93017_f;
	};
	if ((_92917_i >= _92832_tokens.len())) {
		_1e33ea933_stop(_self_.ptr());
		_1e33eb060_pushErr(_self_.ptr(), _93017_f.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1e33eb37e_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _94617_blockTokens = _1e33e87dd_range(_92917_i,jule::Str("{", 1),jule::Str("}", 1),_92832_tokens);;
	if ((_94617_blockTokens != nullptr)) {
		_93017_f.get()._field_Scope=_1e33ec0c7_buildScope(_self_, _94617_blockTokens,_92832_tokens[(_92917_i - 1LL)]);
		_93017_f.get()._field_Scope.get()._field_Unsafety=_93017_f.get()._field_Unsafety;
		if ((_92917_i < _92832_tokens.len())) {
			_1e33eb060_pushErr(_self_.ptr(), _92832_tokens[_92917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	} else {
		_1e33ea933_stop(_self_.ptr());
		_1e33eb060_pushErr(_self_.ptr(), _93017_f.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1e33eb37e_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _93017_f;
}



inline jule::Slice<jule::Ptr<_1d42b43cc_Token>> _1e3401dce_getUseDeclSelectors(_1e33ea603_parser* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _96242_tokens) {
	jule::I64 _96317_i = 0LL;;
	_96242_tokens=_1e33e87dd_range(_96317_i,jule::Str("{", 1),jule::Str("}", 1),_96242_tokens);
	jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>> _96518_parts;;
	jule::Slice<_20a35491e_Log> _96525_errs;;
	std::tie(_96518_parts,_96525_errs) = _1e33e93d2_parts(_96242_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_96525_errs.len() > 0LL)) {
		(*_self_)._field_errors=jule::append((*_self_)._field_errors,_96525_errs);
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _97117_selectors = jule::Slice<jule::Ptr<_1d42b43cc_Token>>::alloc(0LL,_96518_parts.len());;
	{
		auto &expr = _96518_parts;
		auto it = expr.begin();
		_iter_begin_1e64863d3:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d42b43cc_Token>> _97221_part = *it;
			{
				if ((_97221_part.len() > 1LL)) {
					_1e33eb060_pushErr(&(*_self_), _97221_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				jule::Ptr<_1d42b43cc_Token> _97621_tok = _97221_part[0LL];;
				if (((_97621_tok.get()._field_Id != static_cast<jule::U64>(2LLU)) && (_97621_tok.get()._field_Id != static_cast<jule::U64>(28LLU)))) {
					_1e33eb060_pushErr(&(*_self_), _97621_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1e33eb37e_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					goto _iter_next_1e64863d3;
				};
				_97117_selectors = jule::alloc_for_append(_97117_selectors,1);_97117_selectors.__push(_97621_tok);;
			}
			_iter_next_1e64863d3:;
			++it;
			goto _iter_begin_1e64863d3;
		}
		_iter_end_1e64863d3:;
	};
	return _97117_selectors;
}



inline void _1e34021ed_buildCppUseDecl(_1e33ea603_parser* _self_, jule::Ptr<_1e252d1c6_UseDecl>& _98739_decl, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _98756_tokens) {
	if ((_98756_tokens.len() > 1LL)) {
		_1e33eb060_pushErr(&(*_self_), _98756_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d42b43cc_Token> _99113_token = _98756_tokens[0LL];;
	if (((_99113_token.get()._field_Id != static_cast<jule::U64>(6LLU)) || ((_99113_token.get()._field_Kind[0LL] != '`') && (_99113_token.get()._field_Kind[0LL] != '\"')))) {
		_1e33eb060_pushErr(&(*_self_), _99113_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return;;
	};
	_98739_decl.get()._field_CppLinked=true;
	_98739_decl.get()._field_LinkPath=_99113_token.get()._field_Kind.slice(1LL,(_99113_token.get()._field_Kind.len() - 1LL));
}



inline void _1e340251c_buildStdUseDecl(_1e33ea603_parser* _self_, jule::Ptr<_1e252d1c6_UseDecl>& _100039_decl, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _100059_tokens) {
	_100039_decl.get()._field_Std=true;
	jule::Ptr<_1d42b43cc_Token> _100317_token = _100059_tokens[0LL];;
	if ((_100059_tokens.len() < 3LL)) {
		_1e33eb060_pushErr(&(*_self_), _100317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_100059_tokens=_100059_tokens.slice(2LL);
	_100317_token=_100059_tokens[(_100059_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _100317_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1e649019a:;
			{
				_1e33eb060_pushErr(&(*_self_), _100317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1e6490222:;
			{
				if ((_100317_token.get()._field_Kind != jule::Str("}", 1))) {
					_1e33eb060_pushErr(&(*_self_), _100317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_1d42b43cc_Token>> _102021_selectors = nullptr;;
				std::tie(_100059_tokens,_102021_selectors) = _1e33e8a85_rangeLast(_100059_tokens);
				_100039_decl.get()._field_Selected=_1e3401dce_getUseDeclSelectors(&(*_self_), _102021_selectors);
				if ((_100059_tokens.len() == 0LL)) {
					_1e33eb060_pushErr(&(*_self_), _100317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100317_token=_100059_tokens[(_100059_tokens.len() - 1LL)];
				if ((_100317_token.get()._field_Id != static_cast<jule::U64>(23LLU))) {
					_1e33eb060_pushErr(&(*_self_), _100317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100059_tokens=_100059_tokens.slice(0LL,(_100059_tokens.len() - 1LL));
				if ((_100059_tokens.len() == 0LL)) {
					_1e33eb060_pushErr(&(*_self_), _100317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1e6490299:;
			{
				if ((_100317_token.get()._field_Kind != jule::Str("*", 1))) {
					_1e33eb060_pushErr(&(*_self_), _100317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100059_tokens=_100059_tokens.slice(0LL,(_100059_tokens.len() - 1LL));
				if ((_100059_tokens.len() == 0LL)) {
					_1e33eb060_pushErr(&(*_self_), _100317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100317_token=_100059_tokens[(_100059_tokens.len() - 1LL)];
				if ((_100317_token.get()._field_Id != static_cast<jule::U64>(23LLU))) {
					_1e33eb060_pushErr(&(*_self_), _100317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100059_tokens=_100059_tokens.slice(0LL,(_100059_tokens.len() - 1LL));
				if ((_100059_tokens.len() == 0LL)) {
					_1e33eb060_pushErr(&(*_self_), _100317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100039_decl.get()._field_Full=true;
			}
		}
		_match_end_1e6490123:;
	};
	_100039_decl.get()._field_LinkPath=(jule::Str("std::", 5) + _1e33ea23a_tokstoa(_100059_tokens));
}



inline void _1e340283b_buildIdentUseDecl(_1e33ea603_parser* _self_, jule::Ptr<_1e252d1c6_UseDecl>& _106241_decl, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _106261_tokens) {
	_106241_decl.get()._field_Std=false;
	jule::Ptr<_1d42b43cc_Token> _106517_token = _106261_tokens[(_106261_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _106517_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1e649a22c:;
			{
				_1e33eb060_pushErr(&(*_self_), _106517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1e649a408:;
			{
				if ((_106517_token.get()._field_Kind != jule::Str("}", 1))) {
					_1e33eb060_pushErr(&(*_self_), _106517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_1d42b43cc_Token>> _107621_selectors = nullptr;;
				std::tie(_106261_tokens,_107621_selectors) = _1e33e8a85_rangeLast(_106261_tokens);
				_106241_decl.get()._field_Selected=_1e3401dce_getUseDeclSelectors(&(*_self_), _107621_selectors);
				if ((_106261_tokens.len() == 0LL)) {
					_1e33eb060_pushErr(&(*_self_), _106517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106517_token=_106261_tokens[(_106261_tokens.len() - 1LL)];
				if ((_106517_token.get()._field_Id != static_cast<jule::U64>(23LLU))) {
					_1e33eb060_pushErr(&(*_self_), _106517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106261_tokens=_106261_tokens.slice(0LL,(_106261_tokens.len() - 1LL));
				if ((_106261_tokens.len() == 0LL)) {
					_1e33eb060_pushErr(&(*_self_), _106517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1e649a46e:;
			{
				if ((_106517_token.get()._field_Kind != jule::Str("*", 1))) {
					_1e33eb060_pushErr(&(*_self_), _106517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106261_tokens=_106261_tokens.slice(0LL,(_106261_tokens.len() - 1LL));
				if ((_106261_tokens.len() == 0LL)) {
					_1e33eb060_pushErr(&(*_self_), _106517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106517_token=_106261_tokens[(_106261_tokens.len() - 1LL)];
				if ((_106517_token.get()._field_Id != static_cast<jule::U64>(23LLU))) {
					_1e33eb060_pushErr(&(*_self_), _106517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106261_tokens=_106261_tokens.slice(0LL,(_106261_tokens.len() - 1LL));
				if ((_106261_tokens.len() == 0LL)) {
					_1e33eb060_pushErr(&(*_self_), _106517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106241_decl.get()._field_Full=true;
			}
		}
		_match_end_1e649a1c7:;
	};
	_106241_decl.get()._field_LinkPath=_1e33ea23a_tokstoa(_106261_tokens);
}



inline void _1e3402b5a_parseUseDecl(_1e33ea603_parser* _self_, jule::Ptr<_1e252d1c6_UseDecl>& _112536_decl, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _112556_tokens) {
	if (_112536_decl.get()._field_CppLinked) {
		_1e34021ed_buildCppUseDecl(&(*_self_), _112536_decl,_112556_tokens);
		return;;
	};
	jule::Ptr<_1d42b43cc_Token> _113117_token = _112556_tokens[0LL];;
	if ((_113117_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e33eb060_pushErr(&(*_self_), _113117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e33eb37e_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	if (((_112556_tokens.len() > 2LL) && (_112556_tokens[1LL].get()._field_Id == static_cast<jule::U64>(12LLU)))) {
		_112536_decl.get()._field_Alias=_113117_token.get()._field_Kind;
		if ((_112556_tokens[2LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_1e33eb060_pushErr(&(*_self_), _113117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			_1e33eb37e_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			return;;
		};
		_112556_tokens=_112556_tokens.slice(2LL);
		_113117_token=_112556_tokens[0LL];
	};
	;
	{
		
		if ((_113117_token.get()._field_Kind == jule::Str("std", 3))) {
			_case_begin_1e64a6a74:;
			{
				_1e340251c_buildStdUseDecl(&(*_self_), _112536_decl,_112556_tokens);
			}
		}
		else {
			_case_begin_1e64a8b42:;
			{
				_1e340283b_buildIdentUseDecl(&(*_self_), _112536_decl,_112556_tokens);
			}
		}
		_match_end_1e64a8acb:;
	};
}



inline jule::Ptr<_1e252d1c6_UseDecl> _1e3403012_buildUseDecl(_1e33ea603_parser* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _115935_tokens, jule::Bool _115953_cpp_linked) {
	jule::Ptr<_1e252d1c6_UseDecl> _116017_decl = jule::new_ptr<_1e252d1c6_UseDecl>(_1e252d1c6_UseDecl{._field_Token=_115935_tokens[0LL], ._field_CppLinked=_115953_cpp_linked, });;
	if ((_115935_tokens.len() < 2LL)) {
		_1e33eb060_pushErr(&(*_self_), _116017_decl.get()._field_Token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>());
		return nullptr;
	};
	_115935_tokens=_115935_tokens.slice(1LL);
	_1e3402b5a_parseUseDecl(&(*_self_), _116017_decl,_115935_tokens);
	return _116017_decl;
}



inline jule::Ptr<_1e2515686_TypeDecl> _1e34033b9_buildTypeEnumItemKind(jule::Ptr<_1e33ea603_parser> _self_, jule::I64& _117346_i, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _117359_tokens) {
	jule::I64 _117417_braceN = 0LL;;
	jule::I64 _117513_exprStart = _117346_i;;
	for (; (_117346_i < _117359_tokens.len()); (_117346_i)++) {
		{
			jule::Ptr<_1d42b43cc_Token> _117717_t = _117359_tokens[_117346_i];;
			if ((_117717_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _117717_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1e64ad163:;
						{
							(_117417_braceN)++;
							goto _iter_next_1e64ac99d;
						}
					}
					else {
						_case_begin_1e64ada26:;
						{
							(_117417_braceN)--;
						}
					}
					_match_end_1e64ad817:;
				};
			};
			if ((_117417_braceN > 0LL)) {
				goto _iter_next_1e64ac99d;
			};
			if (((_117717_t.get()._field_Id == static_cast<jule::U64>(8LLU)) || ((_117346_i + 1LL) >= _117359_tokens.len()))) {
				jule::Slice<jule::Ptr<_1d42b43cc_Token>> _119325_kindTokens = nullptr;;
				if ((_117717_t.get()._field_Id == static_cast<jule::U64>(8LLU))) {
					_119325_kindTokens=_117359_tokens.slice(_117513_exprStart,_117346_i);
				} else {
					_119325_kindTokens=_117359_tokens.slice(_117513_exprStart);
				};
				jule::I64 _119925_j = 0LL;;
				jule::Ptr<_1e2515686_TypeDecl> _120026_kind;;
				std::tie(_120026_kind,std::ignore) = _1e33ec979_buildType(_self_, _119325_kindTokens,(&(_119925_j)),true);
				if ((_119925_j < _119325_kindTokens.len())) {
					_1e33eb060_pushErr(_self_.ptr(), _119325_kindTokens[_119925_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				return _120026_kind;
			};
		}
	_iter_next_1e64ac99d:;
	}
	_iter_end_1e64ac99d:;;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_1e252eb78_TypeEnumItemDecl>> _1e34036c7_buildTypeEnumItems(jule::Ptr<_1e33ea603_parser> _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _121043_tokens) {
	jule::Slice<jule::Ptr<_1e252eb78_TypeEnumItemDecl>> _121117_items = jule::Slice<jule::Ptr<_1e252eb78_TypeEnumItemDecl>>::alloc(0LL,1LL);;
	jule::I64 _121217_i = 0LL;;
	for (; (_121217_i < _121043_tokens.len()); (_121217_i)++) {
		{
			jule::Ptr<_1d42b43cc_Token> _121421_t = _121043_tokens[_121217_i];;
			jule::Ptr<_1e252eb78_TypeEnumItemDecl> _121521_item = jule::new_ptr<_1e252eb78_TypeEnumItemDecl>();;
			_121521_item.get()._field_Token=_121421_t;
			if (((_121521_item.get()._field_Token.get()._field_Id == static_cast<jule::U64>(2LLU)) && ((_121043_tokens.len() - _121217_i) > 2LL))) {
				_121521_item.get()._field_Ident=_121521_item.get()._field_Token.get()._field_Kind;
				_121421_t=_121043_tokens[(_121217_i + 1LL)];
				if ((_121421_t.get()._field_Id == static_cast<jule::U64>(11LLU))) {
					_121217_i+=2LL;
					if (((_121217_i >= _121043_tokens.len()) || (_121043_tokens[_121217_i].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
						_1e33eb060_pushErr(_self_.ptr(), _121421_t,jule::Str("type missing", 12),jule::Slice<jule::Any>());
						goto _iter_next_1e64b3971;
					};
				};
			};
			_121521_item.get()._field_Kind=_1e34033b9_buildTypeEnumItemKind(_self_, _121217_i,_121043_tokens);
			_121117_items = jule::alloc_for_append(_121117_items,1);_121117_items.__push(_121521_item);;
		}
	_iter_next_1e64b3971:;
	}
	_iter_end_1e64b3971:;;
	return _121117_items;
}



inline jule::Ptr<_1e252ed76_TypeEnumDecl> _1e34039d5_buildTypeEnumDecl(jule::Ptr<_1e33ea603_parser> _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _123442_tokens) {
	jule::I64 _123517_i = 1LL;;
	jule::Ptr<_1e252ed76_TypeEnumDecl> _123617_e = jule::new_ptr<_1e252ed76_TypeEnumDecl>(_1e252ed76_TypeEnumDecl{._field_Token=_123442_tokens[_123517_i], });;
	if ((_123617_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e33eb060_pushErr(_self_.ptr(), _123617_e.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e33eb37e_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_123617_e.get()._field_Ident=_123617_e.get()._field_Token.get()._field_Kind;
	_123517_i+=3LL;
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _124617_itemTokens = _1e33e87dd_range(_123517_i,jule::Str("{", 1),jule::Str("}", 1),_123442_tokens);;
	if ((_124617_itemTokens == nullptr)) {
		_1e33ea933_stop(_self_.ptr());
		_1e33eb060_pushErr(_self_.ptr(), _123617_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1e33eb37e_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _123617_e;
	} else if ((_123517_i < _123442_tokens.len())) {
		_1e33eb060_pushErr(_self_.ptr(), _123442_tokens[_123517_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_123617_e.get()._field_End=_123442_tokens[(_123517_i - 1LL)];
	_123617_e.get()._field_Items=_1e34036c7_buildTypeEnumItems(_self_, _124617_itemTokens);
	return _123617_e;
}



inline jule::Ptr<_1e2519ba7_Expr> _1e3403d8c_buildEnumItemExpr(jule::Ptr<_1e33ea603_parser> _self_, jule::I64& _126042_i, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _126055_tokens) {
	jule::I64 _126117_braceN = 0LL;;
	jule::I64 _126213_exprStart = _126042_i;;
	for (; (_126042_i < _126055_tokens.len()); (_126042_i)++) {
		{
			jule::Ptr<_1d42b43cc_Token> _126417_t = _126055_tokens[_126042_i];;
			if ((_126417_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _126417_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1e64c418a:;
						{
							(_126117_braceN)++;
							goto _iter_next_1e64c39c5;
						}
					}
					else {
						_case_begin_1e64c4a4d:;
						{
							(_126117_braceN)--;
						}
					}
					_match_end_1e64c483e:;
				};
			};
			if ((_126117_braceN > 0LL)) {
				goto _iter_next_1e64c39c5;
			};
			if (((_126417_t.get()._field_Id == static_cast<jule::U64>(8LLU)) || ((_126042_i + 1LL) >= _126055_tokens.len()))) {
				jule::Slice<jule::Ptr<_1d42b43cc_Token>> _128025_exprTokens = nullptr;;
				if ((_126417_t.get()._field_Id == static_cast<jule::U64>(8LLU))) {
					_128025_exprTokens=_126055_tokens.slice(_126213_exprStart,_126042_i);
				} else {
					_128025_exprTokens=_126055_tokens.slice(_126213_exprStart);
				};
				return _1e33eb68c_buildExpr(_self_, _128025_exprTokens);
			};
		}
	_iter_next_1e64c39c5:;
	}
	_iter_end_1e64c39c5:;;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_1e252d649_EnumItemDecl>> _1e340419a_buildEnumItems(jule::Ptr<_1e33ea603_parser> _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _129239_tokens) {
	jule::Slice<jule::Ptr<_1e252d649_EnumItemDecl>> _129317_items = jule::Slice<jule::Ptr<_1e252d649_EnumItemDecl>>::alloc(0LL,1LL);;
	jule::I64 _129417_i = 0LL;;
	for (; (_129417_i < _129239_tokens.len()); (_129417_i)++) {
		{
			jule::Ptr<_1d42b43cc_Token> _129621_t = _129239_tokens[_129417_i];;
			jule::Ptr<_1e252d649_EnumItemDecl> _129721_item = jule::new_ptr<_1e252d649_EnumItemDecl>();;
			_129721_item.get()._field_Token=_129621_t;
			if ((_129721_item.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
				_1e33eb060_pushErr(_self_.ptr(), _129721_item.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1e33eb37e_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			};
			_129721_item.get()._field_Ident=_129721_item.get()._field_Token.get()._field_Kind;
			if ((((_129417_i + 1LL) >= _129239_tokens.len()) || (_129239_tokens[(_129417_i + 1LL)].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
				if (((_129417_i + 1LL) < _129239_tokens.len())) {
					(_129417_i)++;
				};
				_129317_items = jule::alloc_for_append(_129317_items,1);_129317_items.__push(_129721_item);;
				goto _iter_next_1e64c8502;
			};
			(_129417_i)++;
			_129621_t=_129239_tokens[_129417_i];
			(_129417_i)++;
			if ((_129621_t.get()._field_Id != static_cast<jule::U64>(11LLU))) {
				_1e33eb060_pushErr(_self_.ptr(), _129621_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1e33eb37e_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\" for assignment", 33),jule::Slice<jule::Any>());
				goto _iter_next_1e64c8502;
			};
			if (((_129417_i >= _129239_tokens.len()) || (_129239_tokens[_129417_i].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
				_1e33eb060_pushErr(_self_.ptr(), _129621_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
				goto _iter_next_1e64c8502;
			};
			_129721_item.get()._field_Expr=_1e3403d8c_buildEnumItemExpr(_self_, _129417_i,_129239_tokens);
			_129317_items = jule::alloc_for_append(_129317_items,1);_129317_items.__push(_129721_item);;
		}
	_iter_next_1e64c8502:;
	}
	_iter_end_1e64c8502:;;
	return _129317_items;
}



inline jule::Ptr<_1e252e172_EnumDecl> _1e34044a8_buildEnumDecl(jule::Ptr<_1e33ea603_parser> _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _132938_tokens) {
	if ((_132938_tokens.len() < 3LL)) {
		_1e33eb060_pushErr(_self_.ptr(), _132938_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e252e172_EnumDecl> _133417_e = jule::new_ptr<_1e252e172_EnumDecl>(_1e252e172_EnumDecl{._field_Token=_132938_tokens[1LL], });;
	if ((_133417_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e33eb060_pushErr(_self_.ptr(), _133417_e.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e33eb37e_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_133417_e.get()._field_Ident=_133417_e.get()._field_Token.get()._field_Kind;
	jule::I64 _134217_i = 2LL;;
	if ((_132938_tokens[_134217_i].get()._field_Id == static_cast<jule::U64>(11LLU))) {
		(_134217_i)++;
		if ((_134217_i >= _132938_tokens.len())) {
			_1e33eb060_pushErr(_self_.ptr(), _132938_tokens[(_134217_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return _133417_e;
		};
		std::tie(_133417_e.get()._field_Kind,std::ignore) = _1e33ec979_buildType(_self_, _132938_tokens,(&(_134217_i)),true);
		if ((_134217_i >= _132938_tokens.len())) {
			_1e33ea933_stop(_self_.ptr());
			_1e33eb060_pushErr(_self_.ptr(), _133417_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
			_1e33eb37e_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
			return _133417_e;
		};
	} else {
		_133417_e.get()._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _135917_itemTokens = _1e33e87dd_range(_134217_i,jule::Str("{", 1),jule::Str("}", 1),_132938_tokens);;
	if ((_135917_itemTokens == nullptr)) {
		_1e33ea933_stop(_self_.ptr());
		_1e33eb060_pushErr(_self_.ptr(), _133417_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1e33eb37e_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _133417_e;
	} else if ((_134217_i < _132938_tokens.len())) {
		_1e33eb060_pushErr(_self_.ptr(), _132938_tokens[_134217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_133417_e.get()._field_End=_132938_tokens[(_134217_i - 1LL)];
	_133417_e.get()._field_Items=_1e340419a_buildEnumItems(_self_, _135917_itemTokens);
	return _133417_e;
}



inline jule::Any _1e34047b6_buildNodeEnumDecl(jule::Ptr<_1e33ea603_parser> _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _137342_tokens) {
	if (((_137342_tokens.len() > 3LL) && (_137342_tokens[2LL].get()._field_Id == static_cast<jule::U64>(11LLU)))) {
		if ((_137342_tokens[3LL].get()._field_Id == static_cast<jule::U64>(10LLU))) {
			return static_cast<jule::Any>(_1e34039d5_buildTypeEnumDecl(_self_, _137342_tokens));
		};
	};
	return static_cast<jule::Any>(_1e34044a8_buildEnumDecl(_self_, _137342_tokens));
}



inline jule::Ptr<_1e25303c6_FieldDecl> _1e3404ac4_buildField(jule::Ptr<_1e33ea603_parser> _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _138234_tokens) {
	jule::Ptr<_1e25303c6_FieldDecl> _138317_f = jule::new_ptr<_1e25303c6_FieldDecl>();;
	_138317_f.get()._field_Public=(_138234_tokens[0LL].get()._field_Id == static_cast<jule::U64>(21LLU));
	if (_138317_f.get()._field_Public) {
		if ((_138234_tokens.len() == 1LL)) {
			_1e33eb060_pushErr(_self_.ptr(), _138234_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_138234_tokens=_138234_tokens.slice(1LL);
	};
	_138317_f.get()._field_Mutable=(_138234_tokens[0LL].get()._field_Id == static_cast<jule::U64>(36LLU));
	if (_138317_f.get()._field_Mutable) {
		if ((_138234_tokens.len() == 1LL)) {
			_1e33eb060_pushErr(_self_.ptr(), _138234_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_138234_tokens=_138234_tokens.slice(1LL);
	};
	_138317_f.get()._field_Token=_138234_tokens[0LL];
	if ((_138317_f.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e33eb060_pushErr(_self_.ptr(), _138317_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e33eb37e_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	_138317_f.get()._field_Ident=_138317_f.get()._field_Token.get()._field_Kind;
	if ((_138234_tokens.len() == 1LL)) {
		_1e33eb060_pushErr(_self_.ptr(), _138234_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((_138234_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_1e33eb060_pushErr(_self_.ptr(), _138234_tokens[1LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	_138234_tokens=_138234_tokens.slice(2LL);
	jule::I64 _142017_i = 0LL;;
	std::tie(_138317_f.get()._field_Kind,std::ignore) = _1e33ec979_buildType(_self_, _138234_tokens,(&(_142017_i)),true);
	if ((_142017_i < _138234_tokens.len())) {
		jule::Ptr<_1d42b43cc_Token> _142317_token = _138234_tokens[_142017_i];;
		if (((_142317_token.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_142317_token.get()._field_Kind != jule::Str("=", 1)))) {
			_1e33eb060_pushErr(_self_.ptr(), _138234_tokens[_142017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_142017_i)++;
		if ((_142017_i >= _138234_tokens.len())) {
			_1e33eb060_pushErr(_self_.ptr(), _142317_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;
		};
		_138234_tokens=_138234_tokens.slice(_142017_i);
		_138317_f.get()._field_Default=_1e33eb68c_buildExpr(_self_, _138234_tokens);
	};
	return _138317_f;
}



inline jule::Slice<jule::Ptr<_1e25303c6_FieldDecl>> _1e3404dd2_buildStructDeclFields(jule::Ptr<_1e33ea603_parser> _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _144045_tokens) {
	jule::Slice<jule::Ptr<_1e25303c6_FieldDecl>> _144117_fields = nullptr;;
	jule::Slice<jule::Ptr<_1e33ce0dc_stmt>> _144217_stmts = _1e33ce483_splitStmts(_144045_tokens);;
	{
		auto &expr = _144217_stmts;
		auto it = expr.begin();
		_iter_begin_1e64e66c9:;
		if (it != expr.end()) {
			jule::Ptr<_1e33ce0dc_stmt> _144321_stmt = *it;
			{
				_144045_tokens=_144321_stmt.get()._field_tokens;
				jule::Ptr<_1e25303c6_FieldDecl> _144521_f = _1e3404ac4_buildField(_self_, _144045_tokens);;
				_144117_fields = jule::alloc_for_append(_144117_fields,1);_144117_fields.__push(_144521_f);;
			}
			_iter_next_1e64e66c9:;
			++it;
			goto _iter_begin_1e64e66c9;
		}
		_iter_end_1e64e66c9:;
	};
	return _144117_fields;
}



inline jule::Ptr<_1e2530c34_StructDecl> _1e34051e0_buildStructDecl(jule::Ptr<_1e33ea603_parser> _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _145140_tokens) {
	if ((_145140_tokens.len() < 3LL)) {
		_1e33eb060_pushErr(_self_.ptr(), _145140_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::I64 _145717_i = 1LL;;
	jule::Ptr<_1e2530c34_StructDecl> _145817_s = jule::new_ptr<_1e2530c34_StructDecl>(_1e2530c34_StructDecl{._field_Token=_145140_tokens[_145717_i], });;
	if ((_145817_s.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e33eb060_pushErr(_self_.ptr(), _145817_s.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e33eb37e_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_145717_i)++;
	if ((_145717_i >= _145140_tokens.len())) {
		_1e33eb060_pushErr(_self_.ptr(), _145140_tokens[_145717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _145817_s;
	};
	_145817_s.get()._field_Ident=_145817_s.get()._field_Token.get()._field_Kind;
	jule::Ptr<_1d42b43cc_Token> _147213_errorToken = _145140_tokens[_145717_i];;
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _147317_genericsTokens = _1e33e87dd_range(_145717_i,jule::Str("[", 1),jule::Str("]", 1),_145140_tokens);;
	if ((_147317_genericsTokens != nullptr)) {
		_145817_s.get()._field_Generics=_1e33ee261_buildGenerics(_self_, _147317_genericsTokens,_147213_errorToken);
	};
	if ((_145717_i >= _145140_tokens.len())) {
		_1e33eb060_pushErr(_self_.ptr(), _145140_tokens[(_145717_i - 1LL)],jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1e33eb37e_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _145817_s;
	};
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _148317_bodyTokens = _1e33e87dd_range(_145717_i,jule::Str("{", 1),jule::Str("}", 1),_145140_tokens);;
	if ((_148317_bodyTokens == nullptr)) {
		_1e33ea933_stop(_self_.ptr());
		_1e33eb060_pushErr(_self_.ptr(), _145817_s.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1e33eb37e_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _145817_s;
	};
	if ((_145717_i < _145140_tokens.len())) {
		_1e33eb060_pushErr(_self_.ptr(), _145140_tokens[_145717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_145817_s.get()._field_Fields=_1e3404dd2_buildStructDeclFields(_self_, _148317_bodyTokens);
	_145817_s.get()._field_End=_145140_tokens[(_145717_i - 1LL)];
	return _145817_s;
}



inline void _1e3405465_checkMethodReceiver(_1e33ea603_parser* _self_, jule::Ptr<_1e252749a_FnDecl>& _149839_f) {
	if (_149839_f.get()._field_Statically) {
		if (((_149839_f.get()._field_Params.len() > 0LL) && _1e25264dd_IsSelf(_149839_f.get()._field_Params[0LL].ptr()))) {
			_1e33eb060_pushErr(&(*_self_), _149839_f.get()._field_Token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_149839_f.get()._field_Params.len() == 0LL)) {
		_1e33eb060_pushErr(&(*_self_), _149839_f.get()._field_Token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e252617a_ParamDecl> _151113_param = _149839_f.get()._field_Params[0LL];;
	if ((!(_1e25264dd_IsSelf(_151113_param.ptr())))) {
		_1e33eb060_pushErr(&(*_self_), _149839_f.get()._field_Token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
}



inline jule::Slice<jule::Ptr<_1e252749a_FnDecl>> _1e3405773_buildTraitMethods(jule::Ptr<_1e33ea603_parser> _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _151841_tokens) {
	jule::Slice<jule::Ptr<_1e252749a_FnDecl>> _151917_methods = nullptr;;
	jule::Slice<jule::Ptr<_1e33ce0dc_stmt>> _152017_stmts = _1e33ce483_splitStmts(_151841_tokens);;
	{
		auto &expr = _152017_stmts;
		auto it = expr.begin();
		_iter_begin_1e6505ab2:;
		if (it != expr.end()) {
			jule::Ptr<_1e33ce0dc_stmt> _152121_stmt = *it;
			{
				_151841_tokens=_152121_stmt.get()._field_tokens;
				if ((_151841_tokens.len() == 0LL)) {
					goto _iter_next_1e6505ab2;
				};
				jule::Bool _152721_isPub = false;;
				if ((_151841_tokens[0LL].get()._field_Id == static_cast<jule::U64>(21LLU))) {
					_152721_isPub=true;
					if ((_151841_tokens.len() == 1LL)) {
						_1e33eb060_pushErr(_self_.ptr(), _151841_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						goto _iter_next_1e6505ab2;
					};
					_151841_tokens=_151841_tokens.slice(1LL);
				};
				jule::Ptr<_1e252749a_FnDecl> _153721_f = _1e3401ac1_buildFn(_self_, _151841_tokens,true,true);;
				if ((_153721_f != nullptr)) {
					if (_1e25277ec_IsAnon(_153721_f.ptr())) {
						_1e33eb060_pushErr(_self_.ptr(), _153721_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
					_1e3405465_checkMethodReceiver(_self_.ptr(), _153721_f);
					if ((_153721_f.get()._field_Generics.len() > 0LL)) {
						_1e33eb060_pushErr(_self_.ptr(), _153721_f.get()._field_Token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>());
					};
					_153721_f.get()._field_Public=_152721_isPub;
					_151917_methods = jule::alloc_for_append(_151917_methods,1);_151917_methods.__push(_153721_f);;
				};
			}
			_iter_next_1e6505ab2:;
			++it;
			goto _iter_begin_1e6505ab2;
		}
		_iter_end_1e6505ab2:;
	};
	return _151917_methods;
}



inline jule::Ptr<_1e253133e_TraitDecl> _1e3405a81_buildTraitDecl(jule::Ptr<_1e33ea603_parser> _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _155339_tokens) {
	if ((_155339_tokens.len() < 3LL)) {
		_1e33eb060_pushErr(_self_.ptr(), _155339_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e253133e_TraitDecl> _155817_t = jule::new_ptr<_1e253133e_TraitDecl>(_1e253133e_TraitDecl{._field_Token=_155339_tokens[1LL], });;
	if ((_155817_t.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e33eb060_pushErr(_self_.ptr(), _155817_t.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1e33eb37e_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_155817_t.get()._field_Ident=_155817_t.get()._field_Token.get()._field_Kind;
	jule::I64 _156617_i = 2LL;;
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _156717_bodyTokens = _1e33e87dd_range(_156617_i,jule::Str("{", 1),jule::Str("}", 1),_155339_tokens);;
	if ((_156717_bodyTokens == nullptr)) {
		_1e33ea933_stop(_self_.ptr());
		_1e33eb060_pushErr(_self_.ptr(), _155817_t.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1e33eb37e_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_156617_i < _155339_tokens.len())) {
		_1e33eb060_pushErr(_self_.ptr(), _155339_tokens[_156617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_155817_t.get()._field_Methods=_1e3405773_buildTraitMethods(_self_, _156717_bodyTokens);
	_155817_t.get()._field_End=_155339_tokens[(_156617_i - 1LL)];
	return _155817_t;
}



inline jule::Ptr<_1e252749a_FnDecl> _1e3405d8e_buildCppLinkFn(jule::Ptr<_1e33ea603_parser> _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _158238_tokens) {
	_158238_tokens=_158238_tokens.slice(1LL);
	jule::Ptr<_1e252749a_FnDecl> _158417_f = _1e3401ac1_buildFn(_self_, _158238_tokens,false,true);;
	if ((_158417_f != nullptr)) {
		if (_1e25277ec_IsAnon(_158417_f.ptr())) {
			_1e33eb060_pushErr(_self_.ptr(), _158417_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		_158417_f.get()._field_CppLinked=true;
	};
	return _158417_f;
}



inline jule::Ptr<_1e2528479_VarDecl> _1e340619c_buildCppLinkVar(jule::Ptr<_1e33ea603_parser> _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _159439_tokens) {
	_159439_tokens=_159439_tokens.slice(1LL);
	jule::Ptr<_1e2528479_VarDecl> _159617_v = _1e33eda9b_buildVar(_self_, _159439_tokens);;
	if ((_159617_v != nullptr)) {
		_159617_v.get()._field_CppLinked=true;
		if ((_159617_v.get()._field_Expr != nullptr)) {
			_1e33eb060_pushErr(_self_.ptr(), _159617_v.get()._field_Token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>());
		};
	};
	return _159617_v;
}



inline jule::Ptr<_1e2530c34_StructDecl> _1e34064aa_buildCppLinkStruct(jule::Ptr<_1e33ea603_parser> _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _160642_tokens) {
	_160642_tokens=_160642_tokens.slice(1LL);
	jule::Ptr<_1e2530c34_StructDecl> _160817_s = _1e34051e0_buildStructDecl(_self_, _160642_tokens);;
	if ((_160817_s != nullptr)) {
		_160817_s.get()._field_CppLinked=true;
	};
	return _160817_s;
}



inline jule::Ptr<_1e252bcda_TypeAliasDecl> _1e34067b8_buildCppLinkTypeAlias(jule::Ptr<_1e33ea603_parser> _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _161545_tokens) {
	_161545_tokens=_161545_tokens.slice(1LL);
	jule::Ptr<_1e252bcda_TypeAliasDecl> _161717_t = _1e33ecc87_buildTypeAliasDecl(_self_, _161545_tokens);;
	if ((_161717_t != nullptr)) {
		_161717_t.get()._field_CppLinked=true;
	};
	return _161717_t;
}



inline jule::Ptr<_1e252d1c6_UseDecl> _1e3406ac6_buildCppLinkUse(jule::Ptr<_1e33ea603_parser> _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _162439_tokens) {
	if ((_162439_tokens.len() == 1LL)) {
		_1e33eb060_pushErr(_self_.ptr(), _162439_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_162439_tokens=_162439_tokens.slice(1LL);
	;
	return _1e3403012_buildUseDecl(_self_.ptr(), _162439_tokens,true);
}



inline jule::Any _1e3406dd4_buildCppLink(jule::Ptr<_1e33ea603_parser> _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _163537_tokens) {
	jule::Ptr<_1d42b43cc_Token> _163617_token = _163537_tokens[0LL];;
	if ((_163537_tokens.len() == 1LL)) {
		_1e33eb060_pushErr(_self_.ptr(), _163617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_163617_token=_163537_tokens[1LL];
	{
		auto &_match_expr{ _163617_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1e651a9b7:;
			{
				return static_cast<jule::Any>(_1e3405d8e_buildCppLinkFn(_self_, _163537_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1e651b6cc:;
			{
				return static_cast<jule::Any>(_1e340619c_buildCppLinkVar(_self_, _163537_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1e651b743:;
			{
				return static_cast<jule::Any>(_1e34064aa_buildCppLinkStruct(_self_, _163537_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1e651b7a9:;
			{
				return static_cast<jule::Any>(_1e34067b8_buildCppLinkTypeAlias(_self_, _163537_tokens));
			}
		}
		else {
			_case_begin_1e651b5de:;
			{
				_1e33eb060_pushErr(_self_.ptr(), _163617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1e651b578:;
	};
	return nullptr;
}



inline jule::Ptr<_1e252749a_FnDecl> _1e34071e2_getMethod(jule::Ptr<_1e33ea603_parser> _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _165934_tokens) {
	jule::I64 _166017_i = 0LL;;
	jule::Ptr<_1d42b43cc_Token> _166117_token = _165934_tokens[_166017_i];;
	if ((_166117_token.get()._field_Id == static_cast<jule::U64>(38LLU))) {
		if (((_166017_i + 1LL) >= _165934_tokens.len())) {
			_1e33eb060_pushErr(_self_.ptr(), _166117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_166017_i)++;
		_166117_token=_165934_tokens[_166017_i];
	};
	if ((_166117_token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		if (((_166017_i + 1LL) >= _165934_tokens.len())) {
			_1e33eb060_pushErr(_self_.ptr(), _166117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_166017_i)++;
		_166117_token=_165934_tokens[_166017_i];
	};
	if ((_166117_token.get()._field_Id != static_cast<jule::U64>(33LLU))) {
		_1e33eb060_pushErr(_self_.ptr(), _166117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e252749a_FnDecl> _168517_f = _1e3401ac1_buildFn(_self_, _165934_tokens,true,false);;
	if (((_168517_f != nullptr) && _1e25277ec_IsAnon(_168517_f.ptr()))) {
		_1e33eb060_pushErr(_self_.ptr(), _168517_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _168517_f;
}



inline void _1e3407511_parseImplBody(jule::Ptr<_1e33ea603_parser> _self_, jule::Ptr<_1e2531949_Impl>& _169238_ipl, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _169255_tokens) {
	jule::Slice<jule::Ptr<_1e33ce0dc_stmt>> _169317_stmts = _1e33ce483_splitStmts(_169255_tokens);;
	{
		auto &expr = _169317_stmts;
		auto it = expr.begin();
		_iter_begin_1e6524ad1:;
		if (it != expr.end()) {
			jule::Ptr<_1e33ce0dc_stmt> _169421_stmt = *it;
			{
				_169255_tokens=_169421_stmt.get()._field_tokens;
				jule::Ptr<_1d42b43cc_Token> _169621_token = _169255_tokens[0LL];;
				jule::Bool _169721_isPub = false;;
				{
					auto &_match_expr{ _169621_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(39LLU)) {
						_case_begin_1e6526341:;
						{
							_1e33ebc20_pushDirective(_self_.ptr(), _1e33eb99a_buildDirective(_self_.ptr(), _169255_tokens));
							goto _iter_next_1e6524ad1;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(21LLU)) {
						_case_begin_1e65263da:;
						{
							_169721_isPub=true;
							if ((_169255_tokens.len() == 1LL)) {
								_1e33eb060_pushErr(_self_.ptr(), _169255_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
								goto _iter_next_1e6524ad1;
							};
							_169255_tokens=_169255_tokens.slice(1LL);
							if ((_169255_tokens.len() > 0LL)) {
								_169621_token=_169255_tokens[0LL];
							};
						}
					}
					_match_end_1e65262ca:;
				};
				{
					auto &_match_expr{ _169621_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(9LLU)) {
						_case_begin_1e65253b7:;
						{
							jule::Ptr<_1e2528479_VarDecl> _171625_v = _1e33eda9b_buildVar(_self_, _169255_tokens);;
							if ((_171625_v != nullptr)) {
								_171625_v.get()._field_Public=_169721_isPub;
								_169238_ipl.get()._field_Statics = jule::alloc_for_append(_169238_ipl.get()._field_Statics,1);_169238_ipl.get()._field_Statics.__push(_171625_v);;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(38LLU) || _match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1e6527133:;
						{
							jule::Ptr<_1e252749a_FnDecl> _172425_f = _1e34071e2_getMethod(_self_, _169255_tokens);;
							if ((_172425_f != nullptr)) {
								_1e3405465_checkMethodReceiver(_self_.ptr(), _172425_f);
								_1e3407e4b_applyFnMeta(_self_.ptr(), _172425_f,_169721_isPub);
								_169238_ipl.get()._field_Methods = jule::alloc_for_append(_169238_ipl.get()._field_Methods,1);_169238_ipl.get()._field_Methods.__push(_172425_f);;
							};
						}
					}
					else {
						_case_begin_1e65267d6:;
						{
							_1e33eb060_pushErr(_self_.ptr(), _169621_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							goto _iter_next_1e6524ad1;
						}
					}
					_match_end_1e652861d:;
				};
			}
			_iter_next_1e6524ad1:;
			++it;
			goto _iter_begin_1e6524ad1;
		}
		_iter_end_1e6524ad1:;
	};
}



inline jule::Ptr<_1e2531949_Impl> _1e340781e_buildImpl(jule::Ptr<_1e33ea603_parser> _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _173733_tokens) {
	jule::Ptr<_1d42b43cc_Token> _173817_token = _173733_tokens[0LL];;
	if ((_173733_tokens.len() < 2LL)) {
		_1e33eb060_pushErr(_self_.ptr(), _173817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::I64 _174417_i = 1LL;;
	jule::Ptr<_1e2515686_TypeDecl> _174618_base;;
	jule::Bool _174628_ok;;
	std::tie(_174618_base,_174628_ok) = _1e33ec979_buildType(_self_, _173733_tokens,(&(_174417_i)),true);
	if ((!(_174628_ok))) {
		return nullptr;
	};
	if ((_174417_i >= _173733_tokens.len())) {
		_1e33eb060_pushErr(_self_.ptr(), _173817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e2531949_Impl> _175517_ipl = jule::new_ptr<_1e2531949_Impl>(_1e2531949_Impl{._field_Base=_174618_base, });;
	_173817_token=_173733_tokens[_174417_i];
	if ((_173817_token.get()._field_Id != static_cast<jule::U64>(12LLU))) {
		if (((_173817_token.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_173817_token.get()._field_Kind == jule::Str("{", 1)))) {
			std::tie(_175517_ipl.get()._field_Base,_175517_ipl.get()._field_Dest) = std::make_tuple(_175517_ipl.get()._field_Dest,_175517_ipl.get()._field_Base);
			goto _julec_label_body;
		};
		_1e33ea933_stop(_self_.ptr());
		_1e33eb060_pushErr(_self_.ptr(), _173817_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1e33eb37e_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	(_174417_i)++;
	if ((_174417_i >= _173733_tokens.len())) {
		_1e33ea933_stop(_self_.ptr());
		_1e33eb060_pushErr(_self_.ptr(), _173817_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1e33eb37e_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	std::tie(_175517_ipl.get()._field_Dest,_174628_ok) = _1e33ec979_buildType(_self_, _173733_tokens,(&(_174417_i)),true);
	if ((!(_174628_ok))) {
		return nullptr;
	};
	if ((_174417_i >= _173733_tokens.len())) {
		_1e33ea933_stop(_self_.ptr());
		_1e33eb060_pushErr(_self_.ptr(), _173817_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1e33eb37e_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	_julec_label_body:;
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _179317_bodyTokens = _1e33e87dd_range(_174417_i,jule::Str("{", 1),jule::Str("}", 1),_173733_tokens);;
	if ((_179317_bodyTokens == nullptr)) {
		_1e33ea933_stop(_self_.ptr());
		_1e33eb060_pushErr(_self_.ptr(), _173817_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1e33eb37e_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_174417_i < _173733_tokens.len())) {
		_1e33eb060_pushErr(_self_.ptr(), _173733_tokens[_174417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_175517_ipl.get()._field_End=_173733_tokens[(_174417_i - 1LL)];
	_1e3407511_parseImplBody(_self_, _175517_ipl,_179317_bodyTokens);
	return _175517_ipl;
}



inline jule::Any _1e3407b2c_buildNodeData(jule::Ptr<_1e33ea603_parser> _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _180838_tokens) {
	jule::Ptr<_1d42b43cc_Token> _180917_token = _180838_tokens[0LL];;
	{
		auto &_match_expr{ _180917_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1e6539563:;
			{
				jule::Ptr<_1e252749a_FnDecl> _181321_f = _1e3401ac1_buildFn(_self_, _180838_tokens,false,false);;
				if ((_181321_f != nullptr)) {
					_181321_f.get()._field_Global=true;
					if (_1e25277ec_IsAnon(_181321_f.ptr())) {
						_1e33eb060_pushErr(_self_.ptr(), _181321_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				};
				return static_cast<jule::Any>(_181321_f);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(36LLU) || _match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_1e65395c9:;
			{
				return static_cast<jule::Any>(_1e33eda9b_buildVar(_self_, _180838_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1e6539cd3:;
			{
				return static_cast<jule::Any>(_1e33ecc87_buildTypeAliasDecl(_self_, _180838_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_1e6539d49:;
			{
				return _1e34047b6_buildNodeEnumDecl(_self_, _180838_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1e6539db0:;
			{
				return static_cast<jule::Any>(_1e34051e0_buildStructDecl(_self_, _180838_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1e6539e26:;
			{
				return static_cast<jule::Any>(_1e3405a81_buildTraitDecl(_self_, _180838_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1e6539e8c:;
			{
				return static_cast<jule::Any>(_1e340781e_buildImpl(_self_, _180838_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1e653a014:;
			{
				return _1e3406dd4_buildCppLink(_self_, _180838_tokens);
			}
		}
		else {
			_case_begin_1e6539453:;
			{
				_1e33eb060_pushErr(_self_.ptr(), _180917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1e65393a9:;
	};
}



inline void _1e3407e4b_applyFnMeta(_1e33ea603_parser* _self_, jule::Ptr<_1e252749a_FnDecl>& _184435_f, jule::Bool _184447_isPub) {
	_184435_f.get()._field_Public=_184447_isPub;
	_184435_f.get()._field_Directives=(*_self_)._field_directives;
	(*_self_)._field_directives=nullptr;
}



inline void _1e340826a_applyMeta(_1e33ea603_parser* _self_, _1e24d1a92_Node& _185033_node, jule::Bool _185045_isPub) {
	{
		auto &_match_expr{ _185033_node._field_Data };
		
		if (_match_expr.type_is<jule::Ptr<_1e2528479_VarDecl>>()) {
			_case_begin_1e65419dd:;
			{
				jule::Ptr<_1e2528479_VarDecl> _185321_v = _185033_node._field_Data.operator jule::Ptr<_1e2528479_VarDecl>();;
				if ((_185321_v == nullptr)) {
					return;;
				};
				_185321_v.get()._field_Public=_185045_isPub;
				_185321_v.get()._field_Directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e252749a_FnDecl>>()) {
			_case_begin_1e654113b:;
			{
				jule::Ptr<_1e252749a_FnDecl> _186121_f = _185033_node._field_Data.operator jule::Ptr<_1e252749a_FnDecl>();;
				if ((_186121_f == nullptr)) {
					return;;
				};
				_1e3407e4b_applyFnMeta(&(*_self_), _186121_f,_185045_isPub);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e252bcda_TypeAliasDecl>>()) {
			_case_begin_1e65411b3:;
			{
				jule::Ptr<_1e252bcda_TypeAliasDecl> _186721_tad = _185033_node._field_Data.operator jule::Ptr<_1e252bcda_TypeAliasDecl>();;
				if ((_186721_tad == nullptr)) {
					return;;
				};
				_186721_tad.get()._field_Public=_185045_isPub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e252e172_EnumDecl>>()) {
			_case_begin_1e654123a:;
			{
				jule::Ptr<_1e252e172_EnumDecl> _187321_ed = _185033_node._field_Data.operator jule::Ptr<_1e252e172_EnumDecl>();;
				if ((_187321_ed == nullptr)) {
					return;;
				};
				_187321_ed.get()._field_Public=_185045_isPub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e252ed76_TypeEnumDecl>>()) {
			_case_begin_1e6541548:;
			{
				jule::Ptr<_1e252ed76_TypeEnumDecl> _187921_ted = _185033_node._field_Data.operator jule::Ptr<_1e252ed76_TypeEnumDecl>();;
				if ((_187921_ted == nullptr)) {
					return;;
				};
				_187921_ted.get()._field_Public=_185045_isPub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2530c34_StructDecl>>()) {
			_case_begin_1e65415ae:;
			{
				jule::Ptr<_1e2530c34_StructDecl> _188521_sd = _185033_node._field_Data.operator jule::Ptr<_1e2530c34_StructDecl>();;
				if ((_188521_sd == nullptr)) {
					return;;
				};
				_188521_sd.get()._field_Directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
				_188521_sd.get()._field_Public=_185045_isPub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e253133e_TraitDecl>>()) {
			_case_begin_1e6541625:;
			{
				jule::Ptr<_1e253133e_TraitDecl> _189321_td = _185033_node._field_Data.operator jule::Ptr<_1e253133e_TraitDecl>();;
				if ((_189321_td == nullptr)) {
					return;;
				};
				_189321_td.get()._field_Public=_185045_isPub;
			}
		}
		else {
			_case_begin_1e6541092:;
			{
				if (_185045_isPub) {
					_1e33eb060_pushErr(&(*_self_), _185033_node._field_Token,jule::Str("define is not supports pub modifier", 35),jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1e6540de9:;
	};
}



inline std::tuple<jule::Bool,jule::Any> _1e340859a_buildGeneralScopeNodeData(jule::Ptr<_1e33ea603_parser> _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _190549_st) {
	jule::Bool _190565_isPub = jule::Bool();
	jule::Any _190578_data = jule::Any();
	if ((_190549_st[0LL].get()._field_Id == static_cast<jule::U64>(21LLU))) {
		_190565_isPub=true;
		_190549_st=_190549_st.slice(1LL);
		if ((_190549_st.len() == 0LL)) {
			_1e33eb060_pushErr(_self_.ptr(), _190549_st[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return std::make_tuple(_190565_isPub,_190578_data);
		};
	};
	_190578_data=_1e3407b2c_buildNodeData(_self_, _190549_st);
	return std::make_tuple(_190565_isPub,_190578_data);
}



inline void _1e34087a9_pushUseDecl(jule::Ptr<_1e33ea603_parser> _self_, jule::Ptr<_1e252d1c6_UseDecl>& _192036_decl) {
	_self_.get()._field_ast.get()._field_UseDecls = jule::alloc_for_append(_self_.get()._field_ast.get()._field_UseDecls,1);_self_.get()._field_ast.get()._field_UseDecls.__push(_192036_decl);;
	if ((_self_.get()._field_ast.get()._field_Nodes.len() > 0LL)) {
		_1e33eb060_pushErr(_self_.ptr(), _192036_decl.get()._field_Token,jule::Str("use declarations must declared top of source code", 49),jule::Slice<jule::Any>());
		_1e33eb37e_pushSuggestion(_self_.ptr(), jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1e3408ab7_pushMetaNodes(jule::Ptr<_1e33ea603_parser> _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _192838_tokens) {
	{
		auto &_match_expr{ _192838_tokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1e654e04a:;
			{
				;
				jule::Ptr<_1e252d1c6_UseDecl> _193221_decl = _1e3403012_buildUseDecl(_self_.ptr(), _192838_tokens,false);;
				_1e34087a9_pushUseDecl(_self_, _193221_decl);
				return true;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1e654e0b1:;
			{
				if (((_192838_tokens.len() > 1LL) && (_192838_tokens[1LL].get()._field_Id == static_cast<jule::U64>(19LLU)))) {
					jule::Ptr<_1e252d1c6_UseDecl> _193725_decl = _1e3406ac6_buildCppLinkUse(_self_, _192838_tokens);;
					_1e34087a9_pushUseDecl(_self_, _193725_decl);
					return true;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1e654e138:;
			{
				_1e33ebc20_pushDirective(_self_.ptr(), _1e33eb99a_buildDirective(_self_.ptr(), _192838_tokens));
				return true;
			}
		}
		_match_end_1e654de4b:;
	};
	return false;
}



inline _1e24d1a92_Node _1e3408dc5_parseNode(jule::Ptr<_1e33ea603_parser> _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _194834_st) {
	_1e24d1a92_Node _194917_node = _1e24d1a92_Node{._field_Token=_194834_st[0LL], };;
	if (_1e3408ab7_pushMetaNodes(_self_, _194834_st)) {
		return _194917_node;
	};
	jule::Bool _195714_isPub;;
	jule::Any _195725_data;;
	std::tie(_195714_isPub,_195725_data) = _1e340859a_buildGeneralScopeNodeData(_self_, _194834_st);
	if ((_195725_data == nullptr)) {
		return _194917_node;
	};
	_194917_node._field_Data=_195725_data;
	_1e340826a_applyMeta(_self_.ptr(), _194917_node,_195714_isPub);
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1e33eb060_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
	_self_.get()._field_directives=nullptr;
	return _194917_node;
}



inline void _1e340914a_appendNode(jule::Ptr<_1e33ea603_parser> _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _197235_st) {
	if ((_197235_st.len() == 0LL)) {
		return;;
	};
	_1e24d1a92_Node _197617_node = _1e3408dc5_parseNode(_self_, _197235_st);;
	if (((_197617_node._field_Data == nullptr) || _1e33eab97_stopped(_self_.ptr()))) {
		return;;
	};
	_self_.get()._field_ast.get()._field_Nodes = jule::alloc_for_append(_self_.get()._field_ast.get()._field_Nodes,1);_self_.get()._field_ast.get()._field_Nodes.__push(_197617_node);;
}



inline void _1e34095ac_removeRange(_1e33ea603_parser* _self_, jule::I64 _198330_i, jule::Str _198338_kind, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _198350_tokens, jule::Slice<jule::I64>& _198373_ranges) {
	jule::Str _198413_close = _1e33e9679_getCloseKindOfBrace(_198338_kind);;
	for (; (_198330_i >= 0LL); (_198330_i)--) {
		{
			jule::Ptr<_1d42b43cc_Token> _198617_tok = _198350_tokens[_198373_ranges[_198330_i]];;
			if ((_198617_tok.get()._field_Kind != _198413_close)) {
				goto _iter_next_1e655898e;
			};
			_198373_ranges=jule::append(_198373_ranges.slice(0LL,_198330_i),_198373_ranges.slice((_198330_i + 1LL)));
			goto _iter_end_1e655898e;
		}
	_iter_next_1e655898e:;
	}
	_iter_end_1e655898e:;;
}



inline void _1e3409975_pushWrongOrderCloseErr(_1e33ea603_parser* _self_, jule::Ptr<_1d42b43cc_Token>& _199542_t, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _199554_tokens, jule::Slice<jule::I64>& _199573_ranges) {
	{
		auto &_match_expr{ _199554_tokens[_199573_ranges[(_199573_ranges.len() - 1LL)]].get()._field_Kind };
		
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_1e655ac9e:;
			{
				_1e33eb060_pushErr(&(*_self_), _199542_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_1e655ad26:;
			{
				_1e33eb060_pushErr(&(*_self_), _199542_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_1e655ad9d:;
			{
				_1e33eb060_pushErr(&(*_self_), _199542_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>());
			}
		}
		_match_end_1e655ab6c:;
	};
}



inline void _1e3409dd7_pushRangeClose(_1e33ea603_parser* _self_, jule::Ptr<_1d42b43cc_Token> _200633_t, jule::Str _200644_left, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _200656_tokens, jule::Slice<jule::I64>& _200679_ranges) {
	jule::I64 _200713_n = _200679_ranges.len();;
	if ((_200713_n == 0LL)) {
		{
			auto &_match_expr{ _200633_t.get()._field_Kind };
			
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_1e655d93e:;
				{
					_1e33eb060_pushErr(&(*_self_), _200633_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_1e655d9a5:;
				{
					_1e33eb060_pushErr(&(*_self_), _200633_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_1e655da2c:;
				{
					_1e33eb060_pushErr(&(*_self_), _200633_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>());
				}
			}
			_match_end_1e655d6db:;
		};
		return;;
	} else if ((_200656_tokens[_200679_ranges[(_200713_n - 1LL)]].get()._field_Kind != _200644_left)) {
		_1e3409975_pushWrongOrderCloseErr(&(*_self_), _200633_t,_200656_tokens,_200679_ranges);
	};
	_1e34095ac_removeRange(&(*_self_), static_cast<jule::I64>((_200713_n - 1LL)),_200633_t.get()._field_Kind,_200656_tokens,_200679_ranges);
}



inline void _1e340a15c_checkRanges(_1e33ea603_parser* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _202431_tokens) {
	jule::Slice<jule::I64> _202517_ranges = nullptr;;
	{
		auto &expr = _202431_tokens;
		auto it = expr.begin();
		_iter_begin_1e6561c3e:;
		if (it != expr.end()) {
			jule::I64 _202713_i = it - expr.begin();
			jule::Ptr<_1d42b43cc_Token> &_202716_token = *it;
			{
				if ((_202716_token.get()._field_Id != static_cast<jule::U64>(3LLU))) {
					goto _iter_next_1e6561c3e;
				};
				{
					auto &_match_expr{ _202716_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_1e6562ec6:;
						{
							_202517_ranges = jule::alloc_for_append(_202517_ranges,1);_202517_ranges.__push(_202713_i);;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1e6563070:;
						{
							_1e3409dd7_pushRangeClose(&(*_self_), _202716_token,jule::Str("(", 1),_202431_tokens,_202517_ranges);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1e65630d6:;
						{
							_1e3409dd7_pushRangeClose(&(*_self_), _202716_token,jule::Str("{", 1),_202431_tokens,_202517_ranges);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1e656314c:;
						{
							_1e3409dd7_pushRangeClose(&(*_self_), _202716_token,jule::Str("[", 1),_202431_tokens,_202517_ranges);
						}
					}
					_match_end_1e6562a53:;
				};
			}
			_iter_next_1e6561c3e:;
			++it;
			_202713_i++;
			goto _iter_begin_1e6561c3e;
		}
		_iter_end_1e6561c3e:;
	};
	{
		auto &expr = _202517_ranges;
		auto it = expr.begin();
		_iter_begin_1e6564978:;
		if (it != expr.end()) {
			jule::I64 _204516_i = *it;
			{
				jule::Ptr<_1d42b43cc_Token> _204617_token = _202431_tokens[_204516_i];;
				{
					auto &_match_expr{ _204617_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1e65657e2:;
						{
							_1e33eb060_pushErr(&(*_self_), _204617_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_1e6565869:;
						{
							_1e33eb060_pushErr(&(*_self_), _204617_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1e65658e1:;
						{
							_1e33eb060_pushErr(&(*_self_), _204617_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					_match_end_1e6565726:;
				};
			}
			_iter_next_1e6564978:;
			++it;
			goto _iter_begin_1e6564978;
		}
		_iter_end_1e6564978:;
	};
}



inline void _1e340a3d2_parse(jule::Ptr<_1e33ea603_parser> _self_, jule::Ptr<_1d42b9767_File>& _205830_f) {
	_self_.get()._field_ast=jule::new_ptr<_1e24d0d9e_Ast>(_1e24d0d9e_Ast{._field_File=_205830_f, });
	_1e340a15c_checkRanges(_self_.ptr(), _205830_f.get()._field_Tokens);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1e33ce0dc_stmt>> _206817_stmts = _1e33ce483_splitStmts(_205830_f.get()._field_Tokens);;
	jule::I64 _207117_i = 0LL;;
	for (; (_207117_i < _206817_stmts.len()); (_207117_i)++) {
		{
			jule::Ptr<_1e33ce0dc_stmt> _207321_stmt = _206817_stmts[_207117_i];;
			if ((_207321_stmt.get()._field_tokens.len() < 2LL)) {
				return;;
			};
			if ((_207321_stmt.get()._field_tokens[0LL].get()._field_Id != static_cast<jule::U64>(39LLU))) {
				goto _iter_end_1e656898d;
			};
			if ((!(_20a356844_IsTopDirective(_207321_stmt.get()._field_tokens[1LL].get()._field_Kind)))) {
				goto _iter_end_1e656898d;
			};
			_self_.get()._field_ast.get()._field_TopDirectives = jule::alloc_for_append(_self_.get()._field_ast.get()._field_TopDirectives,1);_self_.get()._field_ast.get()._field_TopDirectives.__push(_1e33eb99a_buildDirective(_self_.ptr(), _207321_stmt.get()._field_tokens));;
		}
	_iter_next_1e656898d:;
	}
	_iter_end_1e656898d:;;
	_self_.get()._field_errors=nullptr;
	for (; (_207117_i < _206817_stmts.len()); (_207117_i)++) {
		{
			jule::Ptr<_1e33ce0dc_stmt> _209021_stmt = _206817_stmts[_207117_i];;
			_1e340914a_appendNode(_self_, _209021_stmt.get()._field_tokens);
			if (_1e33eab97_stopped(_self_.ptr())) {
				goto _iter_end_1e656b573;
			};
		}
	_iter_next_1e656b573:;
	}
	_iter_end_1e656b573:;;
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1e33eb060_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e33ea603_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _1e340be61_pushErr(_1e340b8bc_typeBuilder* _self_, jule::Ptr<_1d42b43cc_Token> _7326_token, jule::Str _7341_fmt) {
	if ((*_self_)._field_err) {
		_1e33eb060_pushErr((*_self_)._field_p.ptr(), _7326_token,_7341_fmt,jule::Slice<jule::Any>());
	};
}



inline void _1e340c280_pushSuggestion(_1e340b8bc_typeBuilder* _self_, jule::Str _8033_fmt, jule::Slice<jule::Any> _8046_args) {
	if ((*_self_)._field_err) {
		_1e33eb37e_pushSuggestion((*_self_)._field_p.ptr(), _8033_fmt,jule::Any(_8046_args));
	};
}



inline jule::Ptr<_1e2515686_TypeDecl> _1e340c4e4_buildPrim(_1e340b8bc_typeBuilder* _self_) {
	jule::Ptr<_1e2515686_TypeDecl> _8717_t = _1e340b070_buildPrimType((*_self_)._field_tokens[(*((*_self_)._field_i))]);;
	((*((*_self_)._field_i)))++;
	return _8717_t;
}



inline jule::Ptr<_1e2515686_TypeDecl> _1e340c758_buildNamespace(_1e340b8bc_typeBuilder* _self_) {
	jule::Ptr<_1e2515686_TypeDecl> _9317_t = jule::new_ptr<_1e2515686_TypeDecl>(_1e2515686_TypeDecl{._field_Token=(*_self_)._field_tokens[(*((*_self_)._field_i))], });;
	jule::Ptr<_1e2516753_NamespaceTypeDecl> _9717_nst = jule::new_ptr<_1e2516753_NamespaceTypeDecl>();;
	jule::I64 _9817_n = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_1d42b43cc_Token> _10021_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if (((_9817_n & 1LL) == 0LL)) {
				if ((_10021_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
					_1e340be61_pushErr(&(*_self_), _10021_token,jule::Str("invalid syntax", 14));
					_1e340c280_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
				};
				_9717_nst.get()._field_Idents = jule::alloc_for_append(_9717_nst.get()._field_Idents,1);_9717_nst.get()._field_Idents.__push(_10021_token);;
			} else if ((_10021_token.get()._field_Id != static_cast<jule::U64>(23LLU))) {
				goto _iter_end_1e65763d5;
			};
			(_9817_n)++;
		}
	_iter_next_1e65763d5:;
	}
	_iter_end_1e65763d5:;;
	_9717_nst.get()._field_Idents=_9717_nst.get()._field_Idents.slice(0LL,(_9717_nst.get()._field_Idents.len() - 1LL));
	((*((*_self_)._field_i)))--;
	_9717_nst.get()._field_Kind=_1e340ce95_buildIdent(&(*_self_));
	_9317_t.get()._field_Kind=static_cast<jule::Any>(_9717_nst);
	return _9317_t;
}



inline jule::Slice<jule::Ptr<_1e2515686_TypeDecl>> _1e340c9bc_buildGenerics(_1e340b8bc_typeBuilder* _self_) {
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		return nullptr;
	};
	jule::Ptr<_1d42b43cc_Token> _12613_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if (((_12613_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_12613_token.get()._field_Kind != jule::Str("[", 1)))) {
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>> _13117_parts = _1e340cc31_identGenerics(&(*_self_));;
	if ((_13117_parts.len() == 0LL)) {
		_1e340be61_pushErr(&(*_self_), _12613_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1e2515686_TypeDecl>> _13717_types = jule::Slice<jule::Ptr<_1e2515686_TypeDecl>>::alloc(0LL,_13117_parts.len());;
	{
		auto &expr = _13117_parts;
		auto it = expr.begin();
		_iter_begin_1e657e025:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d42b43cc_Token>> _13821_part = *it;
			{
				jule::I64 _13921_j = 0LL;;
				jule::Ptr<_1e2515686_TypeDecl> _14022_t;;
				std::tie(_14022_t,std::ignore) = _1e33ec979_buildType((*_self_)._field_p, _13821_part,(&(_13921_j)),true);
				if ((_13921_j < _13821_part.len())) {
					_1e340be61_pushErr(&(*_self_), _13821_part[_13921_j],jule::Str("invalid syntax", 14));
				};
				_13717_types = jule::alloc_for_append(_13717_types,1);_13717_types.__push(_14022_t);;
			}
			_iter_next_1e657e025:;
			++it;
			goto _iter_begin_1e657e025;
		}
		_iter_end_1e657e025:;
	};
	return _13717_types;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>> _1e340cc31_identGenerics(_1e340b8bc_typeBuilder* _self_) {
	jule::I64 _15013_first = (*((*_self_)._field_i));;
	jule::I64 _15117_rangeN = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_1d42b43cc_Token> _15317_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if ((_15317_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _15317_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1e6582be9:;
						{
							(_15117_rangeN)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1e6582c71:;
						{
							(_15117_rangeN)--;
						}
					}
					_match_end_1e65829b8:;
				};
			};
			if ((_15117_rangeN == 0LL)) {
				((*((*_self_)._field_i)))++;
				goto _iter_end_1e6581863;
			};
		}
	_iter_next_1e6581863:;
	}
	_iter_end_1e6581863:;;
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _16717_tokens = (*_self_)._field_tokens.slice((_15013_first + 1LL),((*((*_self_)._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>> _16818_parts;;
	jule::Slice<_20a35491e_Log> _16825_errors;;
	std::tie(_16818_parts,_16825_errors) = _1e33e93d2_parts(_16717_tokens,static_cast<jule::U64>(8LLU),true);
	if ((*_self_)._field_err) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_16825_errors);
	};
	return _16818_parts;
}



inline jule::Ptr<_1e2515686_TypeDecl> _1e340ce95_buildIdent(_1e340b8bc_typeBuilder* _self_) {
	jule::Bool _17617_next = (((*((*_self_)._field_i)) + 1LL) < (*_self_)._field_tokens.len());;
	if ((_17617_next && ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_Id == static_cast<jule::U64>(23LLU)))) {
		return _1e340c758_buildNamespace(&(*_self_));
	};
	jule::Ptr<_1d42b43cc_Token> _18017_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_1e2515c4c_IdentTypeDecl> _18117_it = jule::new_ptr<_1e2515c4c_IdentTypeDecl>(_1e2515c4c_IdentTypeDecl{._field_Token=_18017_token, ._field_Ident=_18017_token.get()._field_Kind, ._field_CppLinked=false, });;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1e2515686_TypeDecl> _18717_itd = jule::new_ptr<_1e2515686_TypeDecl>(_1e2515686_TypeDecl{._field_Token=_18017_token, ._field_Kind=static_cast<jule::Any>(_18117_it)});;
	if (((!(_17617_next)) || ((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id != static_cast<jule::U64>(20LLU)))) {
		_18117_it.get()._field_Generics=_1e340c9bc_buildGenerics(&(*_self_));
		return _18717_itd;
	};
	if ((((*_self_)._field_tokens.len() - (*((*_self_)._field_i))) == 1LL)) {
		_1e340be61_pushErr(&(*_self_), _18017_token,jule::Str("invalid syntax", 14));
		return _18717_itd;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e340be61_pushErr(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("invalid syntax", 14));
		return _18717_itd;
	};
	jule::Ptr<_1e251639b_SubIdentTypeDecl> _20417_sit = jule::new_ptr<_1e251639b_SubIdentTypeDecl>();;
	_20417_sit.get()._field_Idents = jule::alloc_for_append(_20417_sit.get()._field_Idents,1);_20417_sit.get()._field_Idents.__push(_18117_it);;
	jule::Ptr<_1e2515686_TypeDecl> _20617_ident = _1e340ce95_buildIdent(&(*_self_));;
	{
		auto &_match_expr{ _20617_ident.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e2515c4c_IdentTypeDecl>>()) {
			_case_begin_1e658ce13:;
			{
				_20417_sit.get()._field_Idents = jule::alloc_for_append(_20417_sit.get()._field_Idents,1);_20417_sit.get()._field_Idents.__push(_20617_ident.get()._field_Kind.operator jule::Ptr<_1e2515c4c_IdentTypeDecl>());;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e251639b_SubIdentTypeDecl>>()) {
			_case_begin_1e658cece:;
			{
				_20417_sit.get()._field_Idents=jule::append(_20417_sit.get()._field_Idents,_20617_ident.get()._field_Kind.operator jule::Ptr<_1e251639b_SubIdentTypeDecl>().get()._field_Idents);
			}
		}
		_match_end_1e658cdad:;
	};
	return jule::new_ptr<_1e2515686_TypeDecl>(_1e2515686_TypeDecl{._field_Token=_18017_token, ._field_Kind=static_cast<jule::Any>(_20417_sit)});
}



inline jule::Ptr<_1e2515686_TypeDecl> _1e340d209_buildCppLink(_1e340b8bc_typeBuilder* _self_) {
	if (((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len()) || ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_Id != static_cast<jule::U64>(20LLU)))) {
		_1e340be61_pushErr(&(*_self_), (*_self_)._field_tokens[(*((*_self_)._field_i))],jule::Str("invalid syntax", 14));
		return nullptr;
	};
	(*((*_self_)._field_i))+=2LL;
	jule::Ptr<_1e2515686_TypeDecl> _22517_t = _1e340ce95_buildIdent(&(*_self_));;
	_22517_t.get()._field_Kind.operator jule::Ptr<_1e2515c4c_IdentTypeDecl>().get()._field_CppLinked=true;
	return _22517_t;
}



inline jule::Ptr<_1e2515686_TypeDecl> _1e340d46d_buildFn(_1e340b8bc_typeBuilder* _self_) {
	jule::Ptr<_1d42b43cc_Token> _23117_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_1e252749a_FnDecl> _23217_f = _1e3401670_buildFnPrototype((*_self_)._field_p, (*_self_)._field_tokens,(*((*_self_)._field_i)),false);;
	if ((_23217_f == nullptr)) {
		return nullptr;
	};
	if ((!(_1e25277ec_IsAnon(_23217_f.ptr())))) {
		_1e340be61_pushErr(&(*_self_), _23217_f.get()._field_Token,jule::Str("invalid syntax", 14));
	};
	return jule::new_ptr<_1e2515686_TypeDecl>(_1e2515686_TypeDecl{._field_Token=_23117_token, ._field_Kind=static_cast<jule::Any>(_23217_f)});
}



inline jule::Ptr<_1e2515686_TypeDecl> _1e340d6d2_buildPtr(_1e340b8bc_typeBuilder* _self_) {
	jule::Ptr<_1d42b43cc_Token> _24617_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_1e340be61_pushErr(&(*_self_), _24617_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id == static_cast<jule::U64>(35LLU))) {
		((*((*_self_)._field_i)))++;
		return jule::new_ptr<_1e2515686_TypeDecl>(_1e2515686_TypeDecl{._field_Token=_24617_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1e2517512_PtrTypeDecl>(_1e2517512_PtrTypeDecl{._field_Elem=nullptr}))});
	};
	jule::Ptr<_1e2515686_TypeDecl> _26317_elem = _1e340ea13_step(&(*_self_));;
	if ((_26317_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1e2515686_TypeDecl>(_1e2515686_TypeDecl{._field_Token=_24617_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1e2517512_PtrTypeDecl>(_1e2517512_PtrTypeDecl{._field_Elem=_26317_elem}))});
}



inline jule::Ptr<_1e2515686_TypeDecl> _1e340d946_buildSptr(_1e340b8bc_typeBuilder* _self_) {
	jule::Ptr<_1d42b43cc_Token> _27717_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_1e340be61_pushErr(&(*_self_), _27717_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1e2515686_TypeDecl> _28417_elem = _1e340ea13_step(&(*_self_));;
	if ((_28417_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1e2515686_TypeDecl>(_1e2515686_TypeDecl{._field_Token=_27717_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1e2516a3e_SptrTypeDecl>(_1e2516a3e_SptrTypeDecl{._field_Elem=_28417_elem}))});
}



inline jule::Ptr<_1e2515686_TypeDecl> _1e340dbaa_buildOp(_1e340b8bc_typeBuilder* _self_) {
	jule::Ptr<_1d42b43cc_Token> _29817_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _29817_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1e659b51a:;
			{
				return _1e340d6d2_buildPtr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1e659b581:;
			{
				return _1e340d946_buildSptr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1e659b5e7:;
			{
				return jule::new_ptr<_1e2515686_TypeDecl>(_1e2515686_TypeDecl{._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1e2516a3e_SptrTypeDecl>(_1e2516a3e_SptrTypeDecl{._field_Elem=_1e340d946_buildSptr(&(*_self_))}))});
			}
		}
		else {
			_case_begin_1e659b460:;
			{
				_1e340be61_pushErr(&(*_self_), _29817_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_1e659b3b6:;
	};
}



inline jule::Ptr<_1e2515686_TypeDecl> _1e340de1e_buildSlc(_1e340b8bc_typeBuilder* _self_) {
	jule::Ptr<_1d42b43cc_Token> _31717_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1e2515686_TypeDecl> _31917_elem = _1e340ea13_step(&(*_self_));;
	if ((_31917_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1e2515686_TypeDecl>(_1e2515686_TypeDecl{._field_Token=_31717_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1e2516e3a_SlcTypeDecl>(_1e2516e3a_SlcTypeDecl{._field_Elem=_31917_elem}))});
}



inline jule::Ptr<_1e2515686_TypeDecl> _1e340e183_buildArr(_1e340b8bc_typeBuilder* _self_) {
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_1e340be61_pushErr(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("type missing", 12));
		return nullptr;
	};
	jule::I64 _34013_exprDelta = (*((*_self_)._field_i));;
	jule::Ptr<_1e2515686_TypeDecl> _34217_elem = _1e340ea13_step(&(*_self_));;
	if ((_34217_elem == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1e2517b94_ArrTypeDecl> _34717_arrt = jule::new_ptr<_1e2517b94_ArrTypeDecl>(_1e2517b94_ArrTypeDecl{._field_Elem=_34217_elem, });;
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _35117_exprTokens = (*_self_)._field_tokens.slice(0LL,_34013_exprDelta);;
	std::tie(std::ignore,_35117_exprTokens) = _1e33e8a85_rangeLast(_35117_exprTokens);
	_35117_exprTokens=_35117_exprTokens.slice(1LL,(_35117_exprTokens.len() - 1LL));
	jule::Ptr<_1d42b43cc_Token> _35417_token = _35117_exprTokens[0LL];;
	if ((((_35117_exprTokens.len() == 1LL) && (_35417_token.get()._field_Id == static_cast<jule::U64>(7LLU))) && (_35417_token.get()._field_Kind == jule::Str("...", 3)))) {
	} else {
		_34717_arrt.get()._field_Size=_1e33eb68c_buildExpr((*_self_)._field_p, _35117_exprTokens);
	};
	return jule::new_ptr<_1e2515686_TypeDecl>(_1e2515686_TypeDecl{._field_Token=_35417_token, ._field_Kind=static_cast<jule::Any>(_34717_arrt)});
}



inline jule::Ptr<_1e2515686_TypeDecl> _1e340e53a_buildMap(_1e340b8bc_typeBuilder* _self_, jule::I64 _36734_start, jule::I64 _36746_delim) {
	jule::Ptr<_1d42b43cc_Token> _36817_delimToken = (*_self_)._field_tokens[_36746_delim];;
	if (((_36746_delim == 0LL) || ((_36746_delim + 1LL) >= (*_self_)._field_tokens.len()))) {
		_1e340be61_pushErr(&(*_self_), _36817_delimToken,jule::Str("type missing", 12));
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _37517_keyTokens = (*_self_)._field_tokens.slice((_36734_start + 1LL),(_36746_delim - 1LL));;
	if ((_37517_keyTokens.len() == 0LL)) {
		_1e340be61_pushErr(&(*_self_), _36817_delimToken,jule::Str("type missing", 12));
		return nullptr;
	};
	jule::Ptr<_1e25183e2_MapTypeDecl> _38117_mapt = jule::new_ptr<_1e25183e2_MapTypeDecl>();;
	jule::I64 _38317_j = 0LL;;
	jule::Ptr<_1e2515686_TypeDecl> _38418_keyt;;
	jule::Bool _38428_ok;;
	std::tie(_38418_keyt,_38428_ok) = _1e33ec979_buildType((*_self_)._field_p, _37517_keyTokens,(&(_38317_j)),(*_self_)._field_err);
	if ((!(_38428_ok))) {
		return nullptr;
	} else if ((_38317_j < _37517_keyTokens.len())) {
		_1e340be61_pushErr(&(*_self_), _37517_keyTokens[_38317_j],jule::Str("invalid syntax", 14));
	};
	_38117_mapt.get()._field_Key=_38418_keyt;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1e2515686_TypeDecl> _39318_valt;;
	std::tie(_39318_valt,_38428_ok) = _1e33ec979_buildType((*_self_)._field_p, (*_self_)._field_tokens,(*_self_)._field_i,(*_self_)._field_err);
	if ((!(_38428_ok))) {
		return nullptr;
	};
	_38117_mapt.get()._field_Val=_39318_valt;
	return jule::new_ptr<_1e2515686_TypeDecl>(_1e2515686_TypeDecl{._field_Token=_36817_delimToken, ._field_Kind=static_cast<jule::Any>(_38117_mapt)});
}



inline jule::Ptr<_1e2515686_TypeDecl> _1e340e79e_buildEnumerable(_1e340b8bc_typeBuilder* _self_) {
	jule::Ptr<_1d42b43cc_Token> _40517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((((*((*_self_)._field_i)) + 2LL) >= (*_self_)._field_tokens.len()) || (_40517_token.get()._field_Id != static_cast<jule::U64>(3LLU))) || (_40517_token.get()._field_Kind != jule::Str("[", 1)))) {
		_1e340be61_pushErr(&(*_self_), _40517_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	_40517_token=(*_self_)._field_tokens[(*((*_self_)._field_i))];
	if (((_40517_token.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_40517_token.get()._field_Kind == jule::Str("]", 1)))) {
		return _1e340de1e_buildSlc(&(*_self_));
	};
	((*((*_self_)._field_i)))--;
	jule::I64 _41913_i = (*((*_self_)._field_i));;
	jule::I64 _42017_delim = _1e340b3b1_mapColon((*_self_)._field_tokens,(*((*_self_)._field_i)));;
	((*((*_self_)._field_i)))++;
	if ((_42017_delim == -1LL)) {
		return _1e340e183_buildArr(&(*_self_));
	};
	return _1e340e53a_buildMap(&(*_self_), _41913_i,_42017_delim);
}



inline jule::Ptr<_1e2515686_TypeDecl> _1e340ea13_step(_1e340b8bc_typeBuilder* _self_) {
	jule::Ptr<_1d42b43cc_Token> _42913_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _42913_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1e65b2872:;
			{
				return _1e340c4e4_buildPrim(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1e65b2762:;
			{
				return _1e340ce95_buildIdent(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1e65b27c8:;
			{
				return _1e340d209_buildCppLink(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1e65b1b90:;
			{
				return _1e340d46d_buildFn(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1e65b1c06:;
			{
				return _1e340dbaa_buildOp(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1e65b1c6c:;
			{
				return _1e340e79e_buildEnumerable(&(*_self_));
			}
		}
		else {
			_case_begin_1e65b1b29:;
			{
				((*((*_self_)._field_i)))++;
				_1e340be61_pushErr(&(*_self_), _42913_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_1e65b19a3:;
	};
}



inline std::tuple<jule::Ptr<_1e2515686_TypeDecl>,jule::Bool> _1e340ec77_build(_1e340b8bc_typeBuilder* _self_) {
	jule::Bool _45244_ok = jule::Bool();
	jule::Ptr<_1e2515686_TypeDecl> _45317_root = _1e340ea13_step(&(*_self_));;
	if ((_45317_root == nullptr)) {
		_45244_ok = false;
		return std::make_tuple(_1e340ad0b_buildVoidType(),_45244_ok);
	};
	_45244_ok = true;
	return std::make_tuple(_45317_root,_45244_ok);
}







std::ostream &operator<<(std::ostream &_Stream, _1e340b8bc_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3317a2b_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _1e33193ce_pushErr(_1e3318d7e_directiveEval* _self_, jule::Ptr<_1d42b43cc_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	(*_self_)._field_logs = jule::alloc_for_append((*_self_)._field_logs,1);(*_self_)._field_logs.__push(_20a35491e_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_2126_t.get()._field_Row, ._field_Column=_2126_t.get()._field_Column, ._field_Path=_2126_t.get()._field_File.get()._field_Path, ._field_Text=_20a354d5e_Logf(_2137_fmt,jule::Any(_2150_args)), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>> _1e3319786_splitOperans(_1e3318d7e_directiveEval* _self_, jule::Str _3331_op, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _3351_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>>::alloc(0LL,10LL);;
	jule::I64 _3617_i = 0LL;;
	jule::I64 _3717_rangeN = 0LL;;
	jule::I64 _3817_last = 0LL;;
	for (; (_3617_i < (_3351_tokens.len() - 1LL)); (_3617_i)++) {
		{
			jule::Ptr<_1d42b43cc_Token> _4017_b = _3351_tokens[_3617_i];;
			if ((_4017_b.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4017_b.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1e65d8d0a:;
						{
							(_3717_rangeN)++;
							goto _iter_next_1e65d7c0a;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1e65d8d71:;
						{
							(_3717_rangeN)--;
						}
					}
					_match_end_1e65d8aeb:;
				};
			};
			if (((_3717_rangeN > 0LL) || (_4017_b.get()._field_Id != static_cast<jule::U64>(7LLU)))) {
				goto _iter_next_1e65d7c0a;
			};
			if ((_4017_b.get()._field_Kind == _3331_op)) {
				_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3351_tokens.slice(_3817_last,_3617_i));;
				_3817_last=static_cast<jule::I64>((_3617_i + 1LL));
			};
		}
	_iter_next_1e65d7c0a:;
	}
	_iter_end_1e65d7c0a:;;
	if ((_3817_last < _3351_tokens.len())) {
		_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3351_tokens.slice(_3817_last));;
	} else {
		_1e33193ce_pushErr(&(*_self_), _3351_tokens[(_3817_last - 1LL)],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _3417_parts;
}



inline jule::Bool _1e3319a94_evalDirectiveIdent(_1e3318d7e_directiveEval* _self_, jule::Str _7333_ident) {
	if (_7333_ident.empty()) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1e65dc380:;
		if (it != expr.end()) {
			jule::Str &_7716_var = *it;
			{
				if ((_7716_var == _7333_ident)) {
					return true;
				};
			}
			_iter_next_1e65dc380:;
			++it;
			goto _iter_begin_1e65dc380;
		}
		_iter_end_1e65dc380:;
	};
	return false;
}



inline jule::Bool _1e3319da2_evalDirectivePart(_1e3318d7e_directiveEval* _self_, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _8740_part) {
	jule::Bool _8813_logicalNot = ((_8740_part[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_8740_part[0LL].get()._field_Kind == jule::Str("!", 1)));;
	if (_8813_logicalNot) {
		_8740_part=_8740_part.slice(1LL);
	};
	if ((_8740_part.len() > 1LL)) {
		_1e33193ce_pushErr(&(*_self_), _8740_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	};
	jule::Bool _9817_result = _1e3319a94_evalDirectiveIdent(&(*_self_), _8740_part[0LL].get()._field_Kind);;
	if (_8813_logicalNot) {
		_9817_result=(!(_9817_result));
	};
	return _9817_result;
}



inline jule::Bool _1e331a116_eval(_1e3318d7e_directiveEval* _self_) {
	if (((*_self_)._field_d.get()._field_Args.len() == 0LL)) {
		_1e33193ce_pushErr(&(*_self_), (*_self_)._field_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return false;
	};
	jule::Bool _11117_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>> _11317_logicalOrParts = _1e3319786_splitOperans(&(*_self_), jule::Str("||", 2),(*_self_)._field_d.get()._field_Args);;
	if ((_11317_logicalOrParts == nullptr)) {
		return false;
	};
	{
		auto &expr = _11317_logicalOrParts;
		auto it = expr.begin();
		_iter_begin_1e65e35a6:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d42b43cc_Token>> _11821_part = *it;
			{
				jule::Bool _11921_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>> _12021_logicalAndParts = _1e3319786_splitOperans(&(*_self_), jule::Str("&&", 2),_11821_part);;
				if ((_12021_logicalAndParts == nullptr)) {
					return false;
				};
				{
					auto &expr = _12021_logicalAndParts;
					auto it = expr.begin();
					_iter_begin_1e65e4992:;
					if (it != expr.end()) {
						jule::Slice<jule::Ptr<_1d42b43cc_Token>> _12525_andPart = *it;
						{
							jule::Ptr<_1d42b43cc_Token> _12621_first = _12525_andPart[0LL];;
							if (((_12621_first.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_12621_first.get()._field_Kind == jule::Str("(", 1)))) {
								jule::Ptr<_1d42b43cc_Token> _12825_end = _12525_andPart[(_12525_andPart.len() - 1LL)];;
								if (((_12825_end.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_12825_end.get()._field_Kind != jule::Str(")", 1)))) {
									_1e33193ce_pushErr(&(*_self_), _12621_first,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
									return false;
								};
								_12525_andPart=_12525_andPart.slice(1LL,(_12525_andPart.len() - 1LL));
							};
							_11921_and=(_11921_and && _1e3319da2_evalDirectivePart(&(*_self_), _12525_andPart));
						}
						_iter_next_1e65e4992:;
						++it;
						goto _iter_begin_1e65e4992;
					}
					_iter_end_1e65e4992:;
				};
				_11117_result=(_11117_result || _11921_and);
			}
			_iter_next_1e65e35a6:;
			++it;
			goto _iter_begin_1e65e35a6;
		}
		_iter_end_1e65e35a6:;
	};
	return _11117_result;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3318d7e_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e333ae7d_JuleImporter> static__1e3387c00_New(_1e3317a2b_CompileInfo _5823_info) {
	jule::Ptr<_1e333ae7d_JuleImporter> _5917_imp = jule::new_ptr<_1e333ae7d_JuleImporter>(_1e333ae7d_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_20a3768ec_PathStdlib}), });;
	_1e3318345_initVars(_5917_imp.get()._field_vars,_5823_info);
	return _5917_imp;
}



inline jule::Slice<jule::Ptr<_1e320561c_ImportInfo>> _1e338952b_AllPackages(_1e333ae7d_JuleImporter* _self_) {
	return (*_self_)._field_pkgs;
}



inline void _1e339a4d7_SetModPath(_1e333ae7d_JuleImporter* _self_, jule::Str _7533_path) {
	(*_self_)._field_mod=_7533_path;
}



inline jule::Str _1e33a7291_GetModPath(_1e333ae7d_JuleImporter* _self_) {
	return (*_self_)._field_mod;
}



inline jule::Str _1e33ada7d_ModById(_1e333ae7d_JuleImporter* _self_, jule::I64 _8326_id) {
	return (*_self_)._field_mods[_8326_id];
}



inline jule::Ptr<_1e320561c_ImportInfo> _1e33b5aeb_GetImport(_1e333ae7d_JuleImporter* _self_, jule::Str _8732_path) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1e65ebe3e:;
		if (it != expr.end()) {
			jule::Ptr<_1e320561c_ImportInfo> _8821_p = *it;
			{
				if ((_8821_p.get()._field_Path == _8732_path)) {
					return _8821_p;
				};
			}
			_iter_next_1e65ebe3e:;
			++it;
			goto _iter_begin_1e65ebe3e;
		}
		_iter_end_1e65ebe3e:;
	};
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_1e24d0d9e_Ast>>,jule::Slice<_20a35491e_Log>> _1e33bb1b7_ImportPackage(_1e333ae7d_JuleImporter* _self_, jule::Str _9636_path, jule::Bool _9647_update_mod) {
	jule::Slice<jule::Ptr<_2162e43ca_DirEntry>> _9717_dirents = ({
		auto except = static__20a1b1968_Read(_9636_path);
		(except.ok()) ? (except.result) : ({{
			return std::make_tuple(nullptr,jule::Slice<_20a35491e_Log>::make({_1e3386dca_flatCompilerErr((jule::Str("connot read package directory: ", 31) + _9636_path))}));
		} jule::Slice<jule::Ptr<_2162e43ca_DirEntry>>();});
	});;
	if (_9647_update_mod) {
		jule::Str _10217_newMod = _1e3328c90_FindModuleFileDeep(_9636_path);;
		if ((_10217_newMod != (*_self_)._field_mod)) {
			(*_self_)._field_mod=_10217_newMod;
			jule::Slice<_20a35491e_Log> _10525_errs = _1e3329037_CheckModuleFile((*_self_)._field_mod);;
			if ((_10525_errs.len() != 0LL)) {
				return std::make_tuple(nullptr,_10525_errs);
			};
		};
	};
	jule::Slice<jule::Ptr<_1e24d0d9e_Ast>> _11217_asts = jule::Slice<jule::Ptr<_1e24d0d9e_Ast>>::alloc(0LL,_9717_dirents.len());;
	{
		auto &expr = _9717_dirents;
		auto it = expr.begin();
		_iter_begin_1e6601185:;
		if (it != expr.end()) {
			jule::Ptr<_2162e43ca_DirEntry> _11316_dirent = *it;
			{
				if ((_2162d1a05_IsDir(_11316_dirent.get()._field_Stat.ptr()) || (!(_20a12e9c4_HasSuffix(_11316_dirent.get()._field_Name,jule::Str(".jule", 5)))))) {
					goto _iter_next_1e6601185;
				};
				jule::Str _11917__path = _20a1b122b_Join(jule::Slice<jule::Str>::make({_9636_path,_11316_dirent.get()._field_Name}));;
				jule::Ptr<_1d42b9767_File> _12021_file = _1d42bac96_NewFileSet(_11917__path);;
				_1d42b9de9_Fill(_12021_file.ptr(), _1e338070e_readBuff(_12021_file.get()._field_Path));
				jule::Slice<_20a35491e_Log> _12221_errors = _1d42c66ca_Lex(_12021_file,static_cast<jule::I64>(0LL));;
				if ((_12221_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12221_errors);
				};
				jule::Ptr<_1e337e39a_FileInfo> _12721_finfo = _1e3386050_ParseFile(_12021_file);;
				if ((_12721_finfo.get()._field_Errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12721_finfo.get()._field_Errors);
				};
				if ((!(_1e32ed836_isPassFileAnnotation(_11316_dirent.get()._field_Name)))) {
					goto _iter_next_1e6601185;
				};
				jule::Bool _13718_r;;
				jule::Slice<_20a35491e_Log> _13725_logs;;
				std::tie(_13718_r,_13725_logs) = _1e338ee27_isPassBuildDirectives(&(*_self_), _12721_finfo.get()._field_Ast);
				if ((_13725_logs.len() > 0LL)) {
					return std::make_tuple(nullptr,_13725_logs);
				};
				if ((!(_13718_r))) {
					goto _iter_next_1e6601185;
				};
				_11217_asts = jule::alloc_for_append(_11217_asts,1);_11217_asts.__push(_12721_finfo.get()._field_Ast);;
			}
			_iter_next_1e6601185:;
			++it;
			goto _iter_begin_1e6601185;
		}
		_iter_end_1e6601185:;
	};
	return std::make_tuple(_11217_asts,nullptr);
}



inline void _1e3330901_Imported(_1e333ae7d_JuleImporter* _self_, jule::Ptr<_1e320561c_ImportInfo> _15335_imp) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1e6606c18:;
		if (it != expr.end()) {
			jule::Ptr<_1e320561c_ImportInfo> _15516_p = *it;
			{
				if (((_15516_p.get()._field_CppLinked == _15335_imp.get()._field_CppLinked) && (_15516_p.get()._field_LinkPath == _15335_imp.get()._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1e6606c18:;
			++it;
			goto _iter_begin_1e6606c18;
		}
		_iter_end_1e6606c18:;
	};
	if (((*_self_)._field_mod.len() != 0LL)) {
		{
			auto &expr = (*_self_)._field_mods;
			auto it = expr.begin();
			_iter_begin_1e66085ee:;
			if (it != expr.end()) {
				jule::I64 _16217_i = it - expr.begin();
				jule::Str _16220_mod = *it;
				{
					if (((*_self_)._field_mod == _16220_mod)) {
						_15335_imp.get()._field_ModId=_16217_i;
						goto _julec_label_setted;
					};
				}
				_iter_next_1e66085ee:;
				++it;
				_16217_i++;
				goto _iter_begin_1e66085ee;
			}
			_iter_end_1e66085ee:;
		};
		_15335_imp.get()._field_ModId=static_cast<jule::I64>((*_self_)._field_mods.len());
		(*_self_)._field_mods = jule::alloc_for_append((*_self_)._field_mods,1);(*_self_)._field_mods.__push((*_self_)._field_mod);;
		_julec_label_setted:;
	};
	(*_self_)._field_pkgs = jule::alloc_for_append((*_self_)._field_pkgs,1);(*_self_)._field_pkgs.__push(_15335_imp);;
}



inline std::tuple<jule::Bool,jule::Slice<_20a35491e_Log>> _1e338ee27_isPassBuildDirectives(_1e333ae7d_JuleImporter* _self_, jule::Ptr<_1e24d0d9e_Ast>& _17945_file) {
	{
		auto &expr = _17945_file.get()._field_TopDirectives;
		auto it = expr.begin();
		_iter_begin_1e660b877:;
		if (it != expr.end()) {
			jule::Ptr<_1e24d1e8d_Directive> _18021_td = *it;
			{
				if ((_18021_td.get()._field_Tag.get()._field_Kind != jule::Str("build", 5))) {
					goto _iter_next_1e660b877;
				};
				_1e3318d7e_directiveEval _18421_de = _1e3318d7e_directiveEval{._field_d=_18021_td, ._field_vars=(*_self_)._field_vars};;
				jule::Bool _18817_result = _1e331a116_eval(&_18421_de);;
				if ((_18421_de._field_logs.len() > 0LL)) {
					return std::make_tuple(false,_18421_de._field_logs);
				};
				if ((!(_18817_result))) {
					return std::make_tuple(false,nullptr);
				};
			}
			_iter_next_1e660b877:;
			++it;
			goto _iter_begin_1e660b877;
		}
		_iter_end_1e660b877:;
	};
	return std::make_tuple(true,nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e333ae7d_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e32ee34d_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e6633a03_isCommonOrdered(jule::Slice<jule::Ptr<_1e2505d6e_Struct>>& _1835_s, jule::Ptr<_1e2505d6e_Struct> _1844_t) {
	jule::Ptr<_1e2505d6e_Struct>* _1917_p = (&(_1844_t.get()._field_Depends[0LL]));;
	jule::Ptr<_1e2505d6e_Struct>* _2013_end = (_1917_p + _1844_t.get()._field_Depends.len());;
	{
		auto &expr = _1835_s;
		auto it = expr.begin();
		_iter_begin_1e663693a:;
		if (it != expr.end()) {
			jule::Ptr<_1e2505d6e_Struct> &_2116_tt = *it;
			{
				{
					if ((_2116_tt == _1844_t)) {
						goto _iter_end_1e663693a;
					};
					if ((((*(_1917_p)).get()._field_CppLinked || ((*(_1917_p)).get()._field_Depends.len() == 0LL)) || (_2116_tt == (*(_1917_p))))) {
						(_1917_p)++;
						if ((_1917_p == _2013_end)) {
							return true;
						};
					};
				};
			}
			_iter_next_1e663693a:;
			++it;
			goto _iter_begin_1e663693a;
		}
		_iter_end_1e663693a:;
	};
	return false;
}

inline jule::Bool _1e663bdb3_isCommonOrdered(jule::Slice<jule::Ptr<_1e322a147_Var>>& _1835_s, jule::Ptr<_1e322a147_Var> _1844_t) {
	jule::Ptr<_1e322a147_Var>* _1917_p = (&(_1844_t.get()._field_Depends[0LL]));;
	jule::Ptr<_1e322a147_Var>* _2013_end = (_1917_p + _1844_t.get()._field_Depends.len());;
	{
		auto &expr = _1835_s;
		auto it = expr.begin();
		_iter_begin_1e663eca6:;
		if (it != expr.end()) {
			jule::Ptr<_1e322a147_Var> &_2116_tt = *it;
			{
				{
					if ((_2116_tt == _1844_t)) {
						goto _iter_end_1e663eca6;
					};
					if ((((*(_1917_p)).get()._field_CppLinked || ((*(_1917_p)).get()._field_Depends.len() == 0LL)) || (_2116_tt == (*(_1917_p))))) {
						(_1917_p)++;
						if ((_1917_p == _2013_end)) {
							return true;
						};
					};
				};
			}
			_iter_next_1e663eca6:;
			++it;
			goto _iter_begin_1e663eca6;
		}
		_iter_end_1e663eca6:;
	};
	return false;
}



inline void _1e662ea43_orderCommon(jule::Slice<jule::Ptr<_1e2505d6e_Struct>>& _3935_s) {
	jule::I64 _4017_i = 0LL;;
	{
		auto &expr = _3935_s;
		auto it = expr.begin();
		_iter_begin_1e6630d96:;
		if (it != expr.end()) {
			jule::I64 _4114_j = it - expr.begin();
			jule::Ptr<_1e2505d6e_Struct> _4121_t = *it;
			{
				if ((_4121_t.get()._field_CppLinked || (_4121_t.get()._field_Depends.len() == 0LL))) {
					_3935_s.swap(_4017_i,_4114_j);
					(_4017_i)++;
				};
			}
			_iter_next_1e6630d96:;
			++it;
			_4114_j++;
			goto _iter_begin_1e6630d96;
		}
		_iter_end_1e6630d96:;
	};
	jule::I64 _4817_j = _4017_i;;
	for (; (_4817_j < _3935_s.len()); (_4817_j)++) {
		{
			jule::I64 _5021_k = _4017_i;;
			for (; (_5021_k < (_3935_s.len() - 1LL)); (_5021_k)++) {
				{
					if ((!(_1e6633a03_isCommonOrdered(_3935_s,_3935_s[_5021_k])))) {
						_3935_s.swap(_5021_k,static_cast<jule::I64>((_5021_k + 1LL)));
					};
				}
			_iter_next_1e663341a:;
			}
			_iter_end_1e663341a:;;
		}
	_iter_next_1e6630d1e:;
	}
	_iter_end_1e6630d1e:;;
}

inline void _1e662ec63_orderCommon(jule::Slice<jule::Ptr<_1e322a147_Var>>& _3935_s) {
	jule::I64 _4017_i = 0LL;;
	{
		auto &expr = _3935_s;
		auto it = expr.begin();
		_iter_begin_1e6639256:;
		if (it != expr.end()) {
			jule::I64 _4114_j = it - expr.begin();
			jule::Ptr<_1e322a147_Var> _4121_t = *it;
			{
				if ((_4121_t.get()._field_CppLinked || (_4121_t.get()._field_Depends.len() == 0LL))) {
					_3935_s.swap(_4017_i,_4114_j);
					(_4017_i)++;
				};
			}
			_iter_next_1e6639256:;
			++it;
			_4114_j++;
			goto _iter_begin_1e6639256;
		}
		_iter_end_1e6639256:;
	};
	jule::I64 _4817_j = _4017_i;;
	for (; (_4817_j < _3935_s.len()); (_4817_j)++) {
		{
			jule::I64 _5021_k = _4017_i;;
			for (; (_5021_k < (_3935_s.len() - 1LL)); (_5021_k)++) {
				{
					if ((!(_1e663bdb3_isCommonOrdered(_3935_s,_3935_s[_5021_k])))) {
						_3935_s.swap(_5021_k,static_cast<jule::I64>((_5021_k + 1LL)));
					};
				}
			_iter_next_1e663b7ca:;
			}
			_iter_end_1e663b7ca:;;
		}
	_iter_next_1e66391ce:;
	}
	_iter_end_1e66391ce:;;
}



inline void static__1e3388470_orderStructures(jule::Slice<jule::Ptr<_1e2505d6e_Struct>>& _6136_structs) {
	_1e662ea43_orderCommon(_6136_structs);
}



inline void static__1e33b3764_orderVars(jule::Slice<jule::Ptr<_1e322a147_Var>>& _6730_vars) {
	_1e662ec63_orderCommon(_6730_vars);
}







std::ostream &operator<<(std::ostream &_Stream, _1e33bb32c_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3bd4947_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1e3c169e0_optimizeChild(jule::Ptr<_1e3c16517_scopeDeadCode> _self_, jule::Ptr<_1e31d6c3b_Scope>& _3938_s) {
	jule::Ptr<_1e3c16517_scopeDeadCode> _4017_sdc = jule::new_ptr<_1e3c16517_scopeDeadCode>(_1e3c16517_scopeDeadCode{._field_parent=_self_, ._field_s=_3938_s, ._field_stmts=(&(_3938_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1e3c19130_optimizeStmts(_4017_sdc);
	};
}



inline void _1e3c16c87_optimizeBodyChildExceptional(jule::Ptr<_1e3c16517_scopeDeadCode> _self_, jule::Ptr<_1e31d6c3b_Scope>& _5053_s) {
	jule::Ptr<_1e3c16517_scopeDeadCode> _5117_sdc = jule::new_ptr<_1e3c16517_scopeDeadCode>(_1e3c16517_scopeDeadCode{._field_s=_5053_s, ._field_stmts=(&(_5053_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, ._field_except=true});;
	{
		_1e3c19130_optimizeStmts(_5117_sdc);
	};
}



inline void _1e3c1701d_optimizeBodyChild(jule::Ptr<_1e3c16517_scopeDeadCode> _self_, jule::Ptr<_1e31d6c3b_Scope>& _6142_s) {
	jule::Ptr<_1e3c16517_scopeDeadCode> _6217_sdc = jule::new_ptr<_1e3c16517_scopeDeadCode>(_1e3c16517_scopeDeadCode{._field_s=_6142_s, ._field_stmts=(&(_6142_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1e3c19130_optimizeStmts(_6217_sdc);
	};
}



inline void _1e3c17293_optimizeExprModel(jule::Ptr<_1e3c16517_scopeDeadCode> _self_, jule::Any& _7142_model) {
	_1e3c1a472_exprDeadCode _7213_edc = static__1e3c1aa6b_new(_self_);;
	_1e3c21016_optimize(&_7213_edc, _7142_model);
}



inline void _1e3c1746e_eliminateFollowed(_1e3c16517_scopeDeadCode* _self_) {
	if (((*_self_)._field_gotos.get().len() != 0LL)) {
		return;;
	};
	{
		(*((*_self_)._field_stmts))=(*((*_self_)._field_stmts)).slice(0LL,((*_self_)._field_i + 1LL));
	};
	jule::Ptr<_1e3c16517_scopeDeadCode> _8317_parent = (*_self_)._field_parent;;
	while ((_8317_parent != nullptr)) {
		{
			{
				(*(_8317_parent.get()._field_stmts))=(*(_8317_parent.get()._field_stmts)).slice(0LL,(_8317_parent.get()._field_i + 1LL));
			};
			_8317_parent=_8317_parent.get()._field_parent;
		}
	_iter_next_1e66ae7a4:;
	}
	_iter_end_1e66ae7a4:;;
}



inline void _1e3c176e4_pushGoto(jule::Ptr<_1e3c16517_scopeDeadCode> _self_, jule::Ptr<_1e31d9766_GotoSt> _9232_gt) {
	jule::I64 _9317_i = 0LL;;
	for (; (_9317_i < _self_.get()._field_labels.get().len()); (_9317_i)++) {
		{
			if ((_9232_gt.get()._field_Ident == (*(_self_.get()._field_labels))[_9317_i].get()._field_Ident)) {
				return;;
			};
		}
	_iter_next_1e66b21d0:;
	}
	_iter_end_1e66b21d0:;;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1e31d9766_GotoSt>>::make({_9232_gt}));
}



inline void _1e3c17969_pushLabel(jule::Ptr<_1e3c16517_scopeDeadCode> _self_, jule::Ptr<_1e31d947a_Label> _10233_l) {
	jule::I64 _10317_i = 0LL;;
	while ((_10317_i < _self_.get()._field_gotos.get().len())) {
		{
			if ((_10233_l.get()._field_Ident == (*(_self_.get()._field_gotos))[_10317_i].get()._field_Ident)) {
				jule::copy(((*(_self_.get()._field_gotos)).slice(_10317_i)), ((*(_self_.get()._field_gotos)).slice((_10317_i + 1LL))));
				(*(_self_.get()._field_gotos))=(*(_self_.get()._field_gotos)).slice(0LL,(_self_.get()._field_gotos.get().len() - 1LL));
				goto _iter_next_1e66b3e4b;
			};
			(_10317_i)++;
		}
	_iter_next_1e66b3e4b:;
	}
	_iter_end_1e66b3e4b:;;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1e31d947a_Label>>::make({_10233_l}));
}



inline void _1e3c17bde_optimizeRangeIter(jule::Ptr<_1e3c16517_scopeDeadCode> _self_, jule::Ptr<_1e31d88db_RangeIter> _11541_it) {
	_1e3c17293_optimizeExprModel(_self_, _11541_it.get()._field_Expr.get()._field_Model);
	_1e3c1701d_optimizeBodyChild(_self_, _11541_it.get()._field_Scope);
}



inline void _1e3c17e64_optimizeWhileIter(jule::Ptr<_1e3c16517_scopeDeadCode> _self_, jule::Ptr<_1e31d8006_WhileIter> _12041_it) {
	_1e3c17293_optimizeExprModel(_self_, _12041_it.get()._field_Expr);
	if ((_12041_it.get()._field_Next != nullptr)) {
		_1e3c18e54_optimizeStmt(_self_, _12041_it.get()._field_Next);
	};
	_1e3c1701d_optimizeBodyChild(_self_, _12041_it.get()._field_Scope);
}



inline void _1e3c181d9_optimizeInfIter(jule::Ptr<_1e3c16517_scopeDeadCode> _self_, jule::Ptr<_1e31d7a83_InfIter> _12839_it) {
	_1e3c1701d_optimizeBodyChild(_self_, _12839_it.get()._field_Scope);
}



inline void _1e3c1845e_optimizeConditional(jule::Ptr<_1e3c16517_scopeDeadCode> _self_, jule::Ptr<_1e31d7797_Conditional> _13243_c) {
	{
		auto &expr = _13243_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1e66b999b:;
		if (it != expr.end()) {
			jule::Ptr<_1e31d7137_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_1e3c17293_optimizeExprModel(_self_, _13321_case.get()._field_Expr);
					_1e3c1701d_optimizeBodyChild(_self_, _13321_case.get()._field_Scope);
				};
			}
			_iter_next_1e66b999b:;
			++it;
			goto _iter_begin_1e66b999b;
		}
		_iter_end_1e66b999b:;
	};
	if ((_13243_c.get()._field_Default != nullptr)) {
		if ((_13243_c.get()._field_Elifs.len() == 0LL)) {
			_1e3c169e0_optimizeChild(_self_, _13243_c.get()._field_Default.get()._field_Scope);
		} else {
			_1e3c1701d_optimizeBodyChild(_self_, _13243_c.get()._field_Default.get()._field_Scope);
		};
	};
}



inline void _1e3c186d4_optimizeMatch(jule::Ptr<_1e3c16517_scopeDeadCode> _self_, jule::Ptr<_1e31da987_Match> _15037_m) {
	{
		auto &expr = _15037_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1e66bc608:;
		if (it != expr.end()) {
			jule::Ptr<_1e31db4d2_Case> _15121_case = *it;
			{
				{
					auto &expr = _15121_case.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_1e66bce77:;
					if (it != expr.end()) {
						jule::Ptr<_1e310908c_Data> _15225_expr = *it;
						{
							_1e3c17293_optimizeExprModel(_self_, _15225_expr.get()._field_Model);
						}
						_iter_next_1e66bce77:;
						++it;
						goto _iter_begin_1e66bce77;
					}
					_iter_end_1e66bce77:;
				};
				_1e3c1701d_optimizeBodyChild(_self_, _15121_case.get()._field_Scope);
			}
			_iter_next_1e66bc608:;
			++it;
			goto _iter_begin_1e66bc608;
		}
		_iter_end_1e66bc608:;
	};
	if ((_15037_m.get()._field_Default != nullptr)) {
		if ((_15037_m.get()._field_Cases.len() == 0LL)) {
			_1e3c169e0_optimizeChild(_self_, _15037_m.get()._field_Default.get()._field_Scope);
		} else {
			_1e3c1701d_optimizeBodyChild(_self_, _15037_m.get()._field_Default.get()._field_Scope);
		};
	};
}



inline void _1e3c18959_optimizeAssign(jule::Ptr<_1e3c16517_scopeDeadCode> _self_, jule::Ptr<_1e31da091_Assign> _16838_assign) {
	_1e3c17293_optimizeExprModel(_self_, _16838_assign.get()._field_L.get()._field_Model);
	_1e3c17293_optimizeExprModel(_self_, _16838_assign.get()._field_R.get()._field_Model);
}



inline void _1e3c18bce_optimizeMultiAssign(jule::Ptr<_1e3c16517_scopeDeadCode> _self_, jule::Ptr<_1e31da448_MultiAssign> _17343_assign) {
	{
		auto &expr = _17343_assign.get()._field_L;
		auto it = expr.begin();
		_iter_begin_1e66c1420:;
		if (it != expr.end()) {
			jule::Any _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_1e3c17293_optimizeExprModel(_self_, _17421_l);
				};
			}
			_iter_next_1e66c1420:;
			++it;
			goto _iter_begin_1e66c1420;
		}
		_iter_end_1e66c1420:;
	};
	_1e3c17293_optimizeExprModel(_self_, _17343_assign.get()._field_R);
}



inline void _1e3c18e54_optimizeStmt(jule::Ptr<_1e3c16517_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type_is<jule::Ptr<_1e31d6c3b_Scope>>()) {
			_case_begin_1e66c2a5e:;
			{
				jule::Ptr<_1e31d6c3b_Scope> _18521_scope = _18236_st.operator jule::Ptr<_1e31d6c3b_Scope>();;
				if (_18521_scope.get()._field_Deferred) {
					_1e3c1941b_eliminateDeadCodeOfScope(_18521_scope);
				} else {
					_1e3c169e0_optimizeChild(_self_, _18521_scope);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e31d88db_RangeIter>>()) {
			_case_begin_1e66c2bd5:;
			{
				_1e3c17bde_optimizeRangeIter(_self_, _18236_st.operator jule::Ptr<_1e31d88db_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e31d8006_WhileIter>>()) {
			_case_begin_1e66c2c4b:;
			{
				_1e3c17e64_optimizeWhileIter(_self_, _18236_st.operator jule::Ptr<_1e31d8006_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e31d7a83_InfIter>>()) {
			_case_begin_1e66c2cb2:;
			{
				_1e3c181d9_optimizeInfIter(_self_, _18236_st.operator jule::Ptr<_1e31d7a83_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e31d7797_Conditional>>()) {
			_case_begin_1e66c2d39:;
			{
				_1e3c1845e_optimizeConditional(_self_, _18236_st.operator jule::Ptr<_1e31d7797_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e31da987_Match>>()) {
			_case_begin_1e66c2db1:;
			{
				_1e3c186d4_optimizeMatch(_self_, _18236_st.operator jule::Ptr<_1e31da987_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e31da091_Assign>>()) {
			_case_begin_1e66c2e38:;
			{
				_1e3c18959_optimizeAssign(_self_, _18236_st.operator jule::Ptr<_1e31da091_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e31da448_MultiAssign>>()) {
			_case_begin_1e66c2eb0:;
			{
				_1e3c18bce_optimizeMultiAssign(_self_, _18236_st.operator jule::Ptr<_1e31da448_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e310908c_Data>>()) {
			_case_begin_1e66c3037:;
			{
				jule::Ptr<_1e310908c_Data> _20621_d = _18236_st.operator jule::Ptr<_1e310908c_Data>();;
				if (_self_.get()._field_except) {
					goto _match_end_1e66c2b6e;
				};
				{
					auto &_match_expr{ _20621_d.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_1e2587c58_BuiltinErrorCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e25872b8_BuiltinPanicCallExprModel>>()) {
						_case_begin_1e66c81c4:;
						{
							_1e3c1746e_eliminateFollowed(_self_.ptr());
						}
					}
					else {
						_case_begin_1e66c86e1:;
						{
							_1e3c17293_optimizeExprModel(_self_, _20621_d.get()._field_Model);
						}
					}
					_match_end_1e66c868b:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e31dc00a_RetSt>>()) {
			_case_begin_1e66c30ae:;
			{
				_1e3c1746e_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e31d9766_GotoSt>>()) {
			_case_begin_1e66c3136:;
			{
				_1e3c176e4_pushGoto(_self_, _18236_st.operator jule::Ptr<_1e31d9766_GotoSt>());
				_1e3c1746e_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e31d947a_Label>>()) {
			_case_begin_1e66c31ad:;
			{
				_1e3c17969_pushLabel(_self_, _18236_st.operator jule::Ptr<_1e31d947a_Label>());
			}
		}
		_match_end_1e66c2b6e:;
	};
}



inline void _1e3c19130_optimizeStmts(jule::Ptr<_1e3c16517_scopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; (_self_.get()._field_i < _self_.get()._field_stmts->len()); (_self_.get()._field_i)++) {
		{
			_1e3c18e54_optimizeStmt(_self_, (*(_self_.get()._field_stmts))[_self_.get()._field_i]);
		}
	_iter_next_1e66ca5d3:;
	}
	_iter_end_1e66ca5d3:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e3c16517_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _1e3c1a472_exprDeadCode static__1e3c1aa6b_new(jule::Ptr<_1e3c16517_scopeDeadCode>& _4724_s) {
	return _1e3c1a472_exprDeadCode{._field_s=_4724_s};
}



inline void _1e3c1ace1_binary(_1e3c1a472_exprDeadCode* _self_, jule::Ptr<_1e2583e74_BinopExprModel> _5325_m) {
	_1e3c21016_optimize(&(*_self_), _5325_m.get()._field_Left.get()._field_Model);
	_1e3c21016_optimize(&(*_self_), _5325_m.get()._field_Right.get()._field_Model);
}



inline void _1e3c1b066_unary(_1e3c1a472_exprDeadCode* _self_, jule::Ptr<_1e2584161_UnaryExprModel> _5824_m) {
	_1e3c21016_optimize(&(*_self_), _5824_m.get()._field_Expr.get()._field_Model);
}



inline void _1e3c1b2db_structureLit(_1e3c1a472_exprDeadCode* _self_, jule::Ptr<_1e258453a_StructLitExprModel> _6231_m) {
	{
		auto &expr = _6231_m.get()._field_Args;
		auto it = expr.begin();
		_iter_begin_1e66cdc9b:;
		if (it != expr.end()) {
			jule::Ptr<_1e258434d_StructArgExprModel> _6321_arg = *it;
			{
				_1e3c21016_optimize(&(*_self_), _6321_arg.get()._field_Expr);
			}
			_iter_next_1e66cdc9b:;
			++it;
			goto _iter_begin_1e66cdc9b;
		}
		_iter_end_1e66cdc9b:;
	};
}



inline void _1e3c1b561_allocStructure(_1e3c1a472_exprDeadCode* _self_, jule::Ptr<_1e2584727_AllocStructLitExprModel> _6833_m) {
	_1e3c1b2db_structureLit(&(*_self_), _6833_m.get()._field_Lit);
}



inline void _1e3c1b7d6_casting(_1e3c1a472_exprDeadCode* _self_, jule::Ptr<_1e2584914_CastingExprModel> _7226_m) {
	_1e3c21016_optimize(&(*_self_), _7226_m.get()._field_Expr);
}



inline void _1e3c1ba5b_args(_1e3c1a472_exprDeadCode* _self_, jule::Slice<jule::Any>& _7624_args) {
	{
		auto &expr = _7624_args;
		auto it = expr.begin();
		_iter_begin_1e66d1023:;
		if (it != expr.end()) {
			jule::Any _7721_arg = *it;
			{
				_1e3c21016_optimize(&(*_self_), _7721_arg);
			}
			_iter_next_1e66d1023:;
			++it;
			goto _iter_begin_1e66d1023;
		}
		_iter_end_1e66d1023:;
	};
}



inline void _1e3c1bcd1_funcCall(_1e3c1a472_exprDeadCode* _self_, jule::Ptr<_1e2584b01_FnCallExprModel> _8227_m) {
	_1e3c21016_optimize(&(*_self_), _8227_m.get()._field_Expr);
	_1e3c1ba5b_args(&(*_self_), _8227_m.get()._field_Args);
	if ((_8227_m.get()._field_Except != nullptr)) {
		_1e3c16c87_optimizeBodyChildExceptional((*_self_)._field_s, _8227_m.get()._field_Except);
	};
}



inline void _1e3c1c056_slice(_1e3c1a472_exprDeadCode* _self_, jule::Ptr<_1e2584cdd_SliceExprModel> _9024_m) {
	_1e3c1ba5b_args(&(*_self_), _9024_m.get()._field_Elems);
}



inline void _1e3c1c2cb_array(_1e3c1a472_exprDeadCode* _self_, jule::Ptr<_1e2586262_ArrayExprModel> _9424_m) {
	if (((_9424_m.get()._field_Elems.len() == 2LL) && (_9424_m.get()._field_Elems[1LL] == nullptr))) {
		_1e3c21016_optimize(&(*_self_), _9424_m.get()._field_Elems[0LL]);
	};
	_1e3c1ba5b_args(&(*_self_), _9424_m.get()._field_Elems);
}



inline void _1e3c1c551_indexing(_1e3c1a472_exprDeadCode* _self_, jule::Ptr<_1e2584eca_IndexingExprModel> _10127_m) {
	_1e3c21016_optimize(&(*_self_), _10127_m.get()._field_Expr.get()._field_Model);
	_1e3c21016_optimize(&(*_self_), _10127_m.get()._field_Index.get()._field_Model);
}



inline void _1e3c1c7c6_anonFunc(_1e3c1a472_exprDeadCode* _self_, jule::Ptr<_1e25851b7_AnonFnExprModel> _10627_m) {
	_1e3c1941b_eliminateDeadCodeOfScope(_10627_m.get()._field_Func.get()._field_Scope);
}



inline void _1e3c1ca4b_map(_1e3c1a472_exprDeadCode* _self_, jule::Ptr<_1e2585591_MapExprModel> _11022_m) {
	{
		auto &expr = _11022_m.get()._field_Entries;
		auto it = expr.begin();
		_iter_begin_1e66d6e5d:;
		if (it != expr.end()) {
			jule::Ptr<_1e25853a4_KeyValPairExprModel> _11121_pair = *it;
			{
				_1e3c21016_optimize(&(*_self_), _11121_pair.get()._field_Key);
				_1e3c21016_optimize(&(*_self_), _11121_pair.get()._field_Val);
			}
			_iter_next_1e66d6e5d:;
			++it;
			goto _iter_begin_1e66d6e5d;
		}
		_iter_end_1e66d6e5d:;
	};
}



inline void _1e3c1ccc1_slicing(_1e3c1a472_exprDeadCode* _self_, jule::Ptr<_1e258577d_SlicingExprModel> _11726_m) {
	_1e3c21016_optimize(&(*_self_), _11726_m.get()._field_Expr);
	_1e3c21016_optimize(&(*_self_), _11726_m.get()._field_Left);
	if ((_11726_m.get()._field_Right != nullptr)) {
		_1e3c21016_optimize(&(*_self_), _11726_m.get()._field_Right);
	};
}



inline void _1e3c1d046_traitSub(_1e3c1a472_exprDeadCode* _self_, jule::Ptr<_1e258596a_TraitSubIdentExprModel> _12527_m) {
	_1e3c21016_optimize(&(*_self_), _12527_m.get()._field_Expr);
}



inline void _1e3c1d2bb_structureSub(_1e3c1a472_exprDeadCode* _self_, jule::Ptr<_1e2585d88_StructSubIdentExprModel> _12931_m) {
	_1e3c21016_optimize(&(*_self_), _12931_m.get()._field_Expr.get()._field_Model);
}



inline void _1e3c1d541_commonSub(_1e3c1a472_exprDeadCode* _self_, jule::Ptr<_1e258663b_CommonSubIdentExprModel> _13328_m) {
	_1e3c21016_optimize(&(*_self_), _13328_m.get()._field_Expr);
}



inline void _1e3c1d7b6_tuple(_1e3c1a472_exprDeadCode* _self_, jule::Ptr<_1e2586828_TupleExprModel> _13724_m) {
	{
		auto &expr = _13724_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_1e66db44b:;
		if (it != expr.end()) {
			jule::Ptr<_1e310908c_Data> _13821_d = *it;
			{
				_1e3c21016_optimize(&(*_self_), _13821_d.get()._field_Model);
			}
			_iter_next_1e66db44b:;
			++it;
			goto _iter_begin_1e66db44b;
		}
		_iter_end_1e66db44b:;
	};
}



inline void _1e3c1da3b_newCall(_1e3c1a472_exprDeadCode* _self_, jule::Ptr<_1e25870cb_BuiltinNewCallExprModel> _14326_m) {
	if ((_14326_m.get()._field_Init != nullptr)) {
		_1e3c21016_optimize(&(*_self_), _14326_m.get()._field_Init);
	};
}



inline void _1e3c1dcb1_outCall(_1e3c1a472_exprDeadCode* _self_, jule::Ptr<_1e2586a15_BuiltinOutCallExprModel> _14926_m) {
	_1e3c21016_optimize(&(*_self_), _14926_m.get()._field_Expr);
}



inline void _1e3c1e036_outlnCall(_1e3c1a472_exprDeadCode* _self_, jule::Ptr<_1e2586c02_BuiltinOutlnCallExprModel> _15328_m) {
	_1e3c21016_optimize(&(*_self_), _15328_m.get()._field_Expr);
}



inline void _1e3c1e2ab_panicCall(_1e3c1a472_exprDeadCode* _self_, jule::Ptr<_1e25872b8_BuiltinPanicCallExprModel> _15728_m) {
	_1e3c21016_optimize(&(*_self_), _15728_m.get()._field_Expr);
}



inline void _1e3c1e531_assertCall(_1e3c1a472_exprDeadCode* _self_, jule::Ptr<_1e25874a5_BuiltinAssertCallExprModel> _16129_m) {
	_1e3c21016_optimize(&(*_self_), _16129_m.get()._field_Expr);
}



inline void _1e3c1e7a6_errorCall(_1e3c1a472_exprDeadCode* _self_, jule::Ptr<_1e2587c58_BuiltinErrorCallExprModel> _16528_m) {
	_1e3c21016_optimize(&(*_self_), _16528_m.get()._field_Err);
}



inline void _1e3c1ea2b_makeCall(_1e3c1a472_exprDeadCode* _self_, jule::Ptr<_1e2587692_BuiltinMakeCallExprModel> _16927_m) {
	if ((_16927_m.get()._field_Len != nullptr)) {
		_1e3c21016_optimize(&(*_self_), _16927_m.get()._field_Len);
	};
	if ((_16927_m.get()._field_Cap != nullptr)) {
		_1e3c21016_optimize(&(*_self_), _16927_m.get()._field_Cap);
	};
}



inline void _1e3c1eca1_appendCall(_1e3c1a472_exprDeadCode* _self_, jule::Ptr<_1e258787e_BuiltinAppendCallExprModel> _17829_m) {
	_1e3c21016_optimize(&(*_self_), _17829_m.get()._field_Dest);
	_1e3c21016_optimize(&(*_self_), _17829_m.get()._field_Elements);
}



inline void _1e3c20026_cloneCall(_1e3c1a472_exprDeadCode* _self_, jule::Ptr<_1e2586dde_BuiltinCloneCallExprModel> _18328_m) {
	_1e3c21016_optimize(&(*_self_), _18328_m.get()._field_Expr);
}



inline void _1e3c2029b_sizeof(_1e3c1a472_exprDeadCode* _self_, jule::Ptr<_1e2585b57_SizeofExprModel> _18725_m) {
	_1e3c21016_optimize(&(*_self_), _18725_m.get()._field_Expr);
}



inline void _1e3c20521_alignof(_1e3c1a472_exprDeadCode* _self_, jule::Ptr<_1e25883b8_AlignofExprModel> _19126_m) {
	_1e3c21016_optimize(&(*_self_), _19126_m.get()._field_Expr);
}



inline void _1e3c20796_integratedToStr(_1e3c1a472_exprDeadCode* _self_, jule::Ptr<_1e2588792_IntegratedToStrExprModel> _19534_m) {
	_1e3c21016_optimize(&(*_self_), _19534_m.get()._field_Expr);
}



inline void _1e3c20a1b_free(_1e3c1a472_exprDeadCode* _self_, jule::Ptr<_1e2588b6b_FreeExprModel> _19923_m) {
	_1e3c21016_optimize(&(*_self_), _19923_m.get()._field_Expr);
}



inline void _1e3c20c91_backendEmit(_1e3c1a472_exprDeadCode* _self_, jule::Ptr<_1e258897e_BackendEmitExprModel> _20330_m) {
	_1e3c1ba5b_args(&(*_self_), _20330_m.get()._field_Exprs);
}



inline void _1e3c21016_optimize(_1e3c1a472_exprDeadCode* _self_, jule::Any& _20728_model) {
	{
		auto &_match_expr{ _20728_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e2583e74_BinopExprModel>>()) {
			_case_begin_1e66e6621:;
			{
				_1e3c1ace1_binary(&(*_self_), _20728_model.operator jule::Ptr<_1e2583e74_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2584161_UnaryExprModel>>()) {
			_case_begin_1e66e6698:;
			{
				_1e3c1b066_unary(&(*_self_), _20728_model.operator jule::Ptr<_1e2584161_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e258453a_StructLitExprModel>>()) {
			_case_begin_1e66e6720:;
			{
				_1e3c1b2db_structureLit(&(*_self_), _20728_model.operator jule::Ptr<_1e258453a_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2584727_AllocStructLitExprModel>>()) {
			_case_begin_1e66e6ab6:;
			{
				_1e3c1b561_allocStructure(&(*_self_), _20728_model.operator jule::Ptr<_1e2584727_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2584914_CastingExprModel>>()) {
			_case_begin_1e66e6b2c:;
			{
				_1e3c1b7d6_casting(&(*_self_), _20728_model.operator jule::Ptr<_1e2584914_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2584b01_FnCallExprModel>>()) {
			_case_begin_1e66e6ba4:;
			{
				_1e3c1bcd1_funcCall(&(*_self_), _20728_model.operator jule::Ptr<_1e2584b01_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2584cdd_SliceExprModel>>()) {
			_case_begin_1e66e6c2b:;
			{
				_1e3c1c056_slice(&(*_self_), _20728_model.operator jule::Ptr<_1e2584cdd_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2586262_ArrayExprModel>>()) {
			_case_begin_1e66e6ca3:;
			{
				_1e3c1c2cb_array(&(*_self_), _20728_model.operator jule::Ptr<_1e2586262_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2584eca_IndexingExprModel>>()) {
			_case_begin_1e66e6d2a:;
			{
				_1e3c1c551_indexing(&(*_self_), _20728_model.operator jule::Ptr<_1e2584eca_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e25851b7_AnonFnExprModel>>()) {
			_case_begin_1e66e6da2:;
			{
				_1e3c1c7c6_anonFunc(&(*_self_), _20728_model.operator jule::Ptr<_1e25851b7_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2585591_MapExprModel>>()) {
			_case_begin_1e66e6e29:;
			{
				_1e3c1ca4b_map(&(*_self_), _20728_model.operator jule::Ptr<_1e2585591_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e258577d_SlicingExprModel>>()) {
			_case_begin_1e66e6ea1:;
			{
				_1e3c1ccc1_slicing(&(*_self_), _20728_model.operator jule::Ptr<_1e258577d_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e258596a_TraitSubIdentExprModel>>()) {
			_case_begin_1e66e7028:;
			{
				_1e3c1d046_traitSub(&(*_self_), _20728_model.operator jule::Ptr<_1e258596a_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2585d88_StructSubIdentExprModel>>()) {
			_case_begin_1e66e70a0:;
			{
				_1e3c1d2bb_structureSub(&(*_self_), _20728_model.operator jule::Ptr<_1e2585d88_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e258663b_CommonSubIdentExprModel>>()) {
			_case_begin_1e66e7127:;
			{
				_1e3c1d541_commonSub(&(*_self_), _20728_model.operator jule::Ptr<_1e258663b_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2586828_TupleExprModel>>()) {
			_case_begin_1e66e719e:;
			{
				_1e3c1d7b6_tuple(&(*_self_), _20728_model.operator jule::Ptr<_1e2586828_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2586a15_BuiltinOutCallExprModel>>()) {
			_case_begin_1e66e7226:;
			{
				_1e3c1dcb1_outCall(&(*_self_), _20728_model.operator jule::Ptr<_1e2586a15_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2586c02_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1e66e729d:;
			{
				_1e3c1e036_outlnCall(&(*_self_), _20728_model.operator jule::Ptr<_1e2586c02_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e25870cb_BuiltinNewCallExprModel>>()) {
			_case_begin_1e66e7325:;
			{
				_1e3c1da3b_newCall(&(*_self_), _20728_model.operator jule::Ptr<_1e25870cb_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e25872b8_BuiltinPanicCallExprModel>>()) {
			_case_begin_1e66e739c:;
			{
				_1e3c1e2ab_panicCall(&(*_self_), _20728_model.operator jule::Ptr<_1e25872b8_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e25874a5_BuiltinAssertCallExprModel>>()) {
			_case_begin_1e66e7424:;
			{
				_1e3c1e531_assertCall(&(*_self_), _20728_model.operator jule::Ptr<_1e25874a5_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2587c58_BuiltinErrorCallExprModel>>()) {
			_case_begin_1e66e749b:;
			{
				_1e3c1e7a6_errorCall(&(*_self_), _20728_model.operator jule::Ptr<_1e2587c58_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2587692_BuiltinMakeCallExprModel>>()) {
			_case_begin_1e66e7523:;
			{
				_1e3c1ea2b_makeCall(&(*_self_), _20728_model.operator jule::Ptr<_1e2587692_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e258787e_BuiltinAppendCallExprModel>>()) {
			_case_begin_1e66e759a:;
			{
				_1e3c1eca1_appendCall(&(*_self_), _20728_model.operator jule::Ptr<_1e258787e_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2586dde_BuiltinCloneCallExprModel>>()) {
			_case_begin_1e66e7622:;
			{
				_1e3c20026_cloneCall(&(*_self_), _20728_model.operator jule::Ptr<_1e2586dde_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2585b57_SizeofExprModel>>()) {
			_case_begin_1e66e7699:;
			{
				_1e3c2029b_sizeof(&(*_self_), _20728_model.operator jule::Ptr<_1e2585b57_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e25883b8_AlignofExprModel>>()) {
			_case_begin_1e66e7721:;
			{
				_1e3c20521_alignof(&(*_self_), _20728_model.operator jule::Ptr<_1e25883b8_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2588792_IntegratedToStrExprModel>>()) {
			_case_begin_1e66e7798:;
			{
				_1e3c20796_integratedToStr(&(*_self_), _20728_model.operator jule::Ptr<_1e2588792_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2588b6b_FreeExprModel>>()) {
			_case_begin_1e66e7820:;
			{
				_1e3c20a1b_free(&(*_self_), _20728_model.operator jule::Ptr<_1e2588b6b_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e258897e_BackendEmitExprModel>>()) {
			_case_begin_1e66e7897:;
			{
				_1e3c20c91_backendEmit(&(*_self_), _20728_model.operator jule::Ptr<_1e258897e_BackendEmitExprModel>());
			}
		}
		_match_end_1e66e681e:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e3c1a472_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d42d3d8b_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d42d4d15_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e10cb072_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e12489e7_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e17484d0_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e1600552_scopeOptimizer> static__1d42d1a8c_new(jule::Ptr<_1e31d6c3b_Scope> _4523_scope) {
	return jule::new_ptr<_1e1600552_scopeOptimizer>(_1e1600552_scopeOptimizer{._field_scope=_4523_scope});
}



inline void _1d42d59e7_setCurrentStmt(_1e1600552_scopeOptimizer* _self_, jule::Any _5137_stmt) {
	(*_self_)._field_scope.get()._field_Stmts[(*_self_)._field_i]=(*(((jule::Any*)((&(_5137_stmt))))));
}



inline void _1d42d6520_optimizeData(_1e1600552_scopeOptimizer* _self_, jule::Ptr<_1e310908c_Data> _5535_d) {
	{
		auto &_match_expr{ _5535_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1e2584b01_FnCallExprModel>>()) {
			_case_begin_1e6732151:;
			{
				jule::Ptr<_1e2584b01_FnCallExprModel> _5821_m = _5535_d.get()._field_Model.operator jule::Ptr<_1e2584b01_FnCallExprModel>();;
				if (_22eb614e2_Production) {
					if (((!(_1e259037b_IsBuiltin(_5821_m.get()._field_Func.ptr()))) && _1e1066309_isStdPackage(_5821_m.get()._field_Func.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path,jule::Str("debug", 5)))) {
						_1d42d59e7_setCurrentStmt(&(*_self_), nullptr);
						return;;
					};
				};
			}
		}
		_match_end_1e6731e42:;
	};
	static__1e1088ace_optimize(_5535_d.get()._field_Model);
}



inline void _1d42d8c92_optimizeVar(_1e1600552_scopeOptimizer* _self_, jule::Ptr<_1e322a147_Var> _7034_v) {
	if ((_7034_v.get()._field_Value != nullptr)) {
		static__1e1088ace_optimize(_7034_v.get()._field_Value.get()._field_Data.get()._field_Model);
	};
}



inline void _1d42da238_optimizeConditional(_1e1600552_scopeOptimizer* _self_, jule::Ptr<_1e31d7797_Conditional> _7642_c) {
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1e6735253:;
		if (it != expr.end()) {
			jule::Ptr<_1e31d7137_If> _7721_elif = *it;
			{
				static__1e1088ace_optimize(_7721_elif.get()._field_Expr);
				_1e1041ee9_optimizeChild(&(*_self_), _7721_elif.get()._field_Scope);
			}
			_iter_next_1e6735253:;
			++it;
			goto _iter_begin_1e6735253;
		}
		_iter_end_1e6735253:;
	};
	if ((_7642_c.get()._field_Default != nullptr)) {
		_1e1041ee9_optimizeChild(&(*_self_), _7642_c.get()._field_Default.get()._field_Scope);
	};
	if ((!(_1e102377d_Cond))) {
		return;;
	};
	jule::Bool _8917_constCase = false;;
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1e67371cd:;
		if (it != expr.end()) {
			jule::I64 _9214_i = it - expr.begin();
			jule::Ptr<_1e31d7137_If> _9221_elif = *it;
			{
				if ((!(_1e1069a5a_isConstantValidConditionalCase(_9221_elif)))) {
					goto _iter_next_1e67371cd;
				};
				_8917_constCase=true;
				_7642_c.get()._field_Elifs=_7642_c.get()._field_Elifs.slice(0LL,_9214_i);
				_7642_c.get()._field_Default=jule::new_ptr<_1e31d7423_Else>(_1e31d7423_Else{._field_Scope=_9221_elif.get()._field_Scope});
				goto _iter_end_1e67371cd;
			}
			_iter_next_1e67371cd:;
			++it;
			_9214_i++;
			goto _iter_begin_1e67371cd;
		}
		_iter_end_1e67371cd:;
	};
	if ((_7642_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1e31d7137_If>* _10917_i = (&(_7642_c.get()._field_Elifs[0LL]));;
	jule::Ptr<_1e31d7137_If>* _11013_end = (&(_7642_c.get()._field_Elifs[(_7642_c.get()._field_Elifs.len() - 1LL)]));;
	for (; (_10917_i <= _11013_end); (_10917_i)++) {
		{
			{
				if (_1e1079938_isUnreachableConditionalCase((*(_10917_i)))) {
					(*(_10917_i))=nullptr;
				};
			};
		}
	_iter_next_1e673a500:;
	}
	_iter_end_1e673a500:;;
	if ((_7642_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_8917_constCase))) {
		return;;
	};
	jule::I64 _12817_only = -1LL;;
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1e673bc60:;
		if (it != expr.end()) {
			jule::I64 _12913_j = it - expr.begin();
			jule::Ptr<_1e31d7137_If> _12916_elif = *it;
			{
				if ((_12916_elif != nullptr)) {
					if ((_12817_only != -1LL)) {
						return;;
					};
					_12817_only=_12913_j;
				};
			}
			_iter_next_1e673bc60:;
			++it;
			_12913_j++;
			goto _iter_begin_1e673bc60;
		}
		_iter_end_1e673bc60:;
	};
	if ((_12817_only != -1LL)) {
		_1d42d59e7_setCurrentStmt(&(*_self_), jule::Any(_7642_c.get()._field_Elifs[_12817_only].get()._field_Scope));
	};
}



inline void _1d42da6de_buildDefaultConstatTrueCase(_1e1600552_scopeOptimizer* _self_, jule::Ptr<_1e31db4d2_Case> _14550_case, jule::I64& _14568_i, jule::Ptr<_1e31da987_Match>& _14581_m) {
	_14550_case.get()._field_Exprs=nullptr;
	jule::I64 _14713_start = _14568_i;;
	_julec_label_loop:;
	for (;;) {
		{
			if ((_14550_case.get()._field_Scope.get()._field_Stmts.len() == 0LL)) {
				goto _iter_end_1e673e45a;
			};
			jule::Any &_15322_stmt = _14550_case.get()._field_Scope.get()._field_Stmts[(_14550_case.get()._field_Scope.get()._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _15322_stmt };
				
				if (_match_expr.type_is<jule::Ptr<_1e31dba87_FallSt>>()) {
					_case_begin_1e673ed1d:;
					{
						(_14568_i)++;
						if ((_14568_i >= _14581_m.get()._field_Cases.len())) {
							_15322_stmt=static_cast<jule::Any>(_14581_m.get()._field_Default.get()._field_Scope);
							goto _iter_end_1e673e45a;
						};
						_14550_case=_14581_m.get()._field_Cases[_14568_i];
						_15322_stmt=static_cast<jule::Any>(_14550_case.get()._field_Scope);
					}
				}
				else {
					_case_begin_1e674135d:;
					{
						goto _iter_end_1e673e45a;
					}
				}
				_match_end_1e6741270:;
			};
		}
	_iter_next_1e673e45a:;
	}
	_iter_end_1e673e45a:;;
	_14581_m.get()._field_Default=_14581_m.get()._field_Cases[_14713_start];
	_14581_m.get()._field_Cases=_14581_m.get()._field_Cases.slice(0LL,_14713_start);
}



inline void _1e1021b00_optimizeMatch(_1e1600552_scopeOptimizer* _self_, jule::Ptr<_1e31da987_Match> _17136_m) {
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1e67433e8:;
		if (it != expr.end()) {
			jule::Ptr<_1e31db4d2_Case> _17221_case = *it;
			{
				{
					auto &expr = _17221_case.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_1e6743c89:;
					if (it != expr.end()) {
						jule::Ptr<_1e310908c_Data> _17325_expr = *it;
						{
							static__1e1088ace_optimize(_17325_expr.get()._field_Model);
						}
						_iter_next_1e6743c89:;
						++it;
						goto _iter_begin_1e6743c89;
					}
					_iter_end_1e6743c89:;
				};
				_1e1041ee9_optimizeChild(&(*_self_), _17221_case.get()._field_Scope);
			}
			_iter_next_1e67433e8:;
			++it;
			goto _iter_begin_1e67433e8;
		}
		_iter_end_1e67433e8:;
	};
	if ((_17136_m.get()._field_Default != nullptr)) {
		_1e1041ee9_optimizeChild(&(*_self_), _17136_m.get()._field_Default.get()._field_Scope);
	};
	if ((!(_1e102377d_Cond))) {
		return;;
	};
	jule::Bool _18617_constCase = false;;
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1e6745a16:;
		if (it != expr.end()) {
			jule::I64 _18918_i = it - expr.begin();
			jule::Ptr<_1e31db4d2_Case> _18925_case = *it;
			{
				if ((!(_1e107205c_isConstantValidMatchCase(_18925_case)))) {
					goto _iter_next_1e6745a16;
				};
				_18617_constCase=true;
				_1d42da6de_buildDefaultConstatTrueCase(&(*_self_), _18925_case,_18918_i,_17136_m);
				goto _iter_end_1e6745a16;
			}
			_iter_next_1e6745a16:;
			++it;
			_18918_i++;
			goto _iter_begin_1e6745a16;
		}
		_iter_end_1e6745a16:;
	};
	if ((_17136_m.get()._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1e31db4d2_Case>* _20317_i = (&(_17136_m.get()._field_Cases[0LL]));;
	jule::Ptr<_1e31db4d2_Case>* _20413_end = (&(_17136_m.get()._field_Cases[(_17136_m.get()._field_Cases.len() - 1LL)]));;
	for (; (_20317_i <= _20413_end); (_20317_i)++) {
		{
			{
				if (_1e107b132_isUnreachableMatchCase((*(_20317_i)))) {
					(*(_20317_i))=nullptr;
				};
			};
		}
	_iter_next_1e67488b5:;
	}
	_iter_end_1e67488b5:;;
	if ((!(_18617_constCase))) {
		return;;
	};
	jule::I64 _21817_only = -1LL;;
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1e6749a5e:;
		if (it != expr.end()) {
			jule::I64 _21913_j = it - expr.begin();
			jule::Ptr<_1e31db4d2_Case> _21916_case = *it;
			{
				if ((_21916_case != nullptr)) {
					if ((_21817_only != -1LL)) {
						return;;
					};
					_21817_only=_21913_j;
				};
			}
			_iter_next_1e6749a5e:;
			++it;
			_21913_j++;
			goto _iter_begin_1e6749a5e;
		}
		_iter_end_1e6749a5e:;
	};
	if ((_21817_only != -1LL)) {
		_1d42d59e7_setCurrentStmt(&(*_self_), jule::Any(_17136_m.get()._field_Cases[_21817_only].get()._field_Scope));
	};
}



inline void _1e1029cd4_optimizeRangeIter(_1e1600552_scopeOptimizer* _self_, jule::Ptr<_1e31d88db_RangeIter> _23540_it) {
	static__1e1088ace_optimize(_23540_it.get()._field_Expr.get()._field_Model);
	_1e1041ee9_optimizeChild(&(*_self_), _23540_it.get()._field_Scope);
}



inline void _1e102ce08_optimizeWhileIter(_1e1600552_scopeOptimizer* _self_, jule::Ptr<_1e31d8006_WhileIter> _24040_it) {
	static__1e1088ace_optimize(_24040_it.get()._field_Expr);
	_1e1040c95_optimizeStmt(&(*_self_), _24040_it.get()._field_Next);
	_1e1041ee9_optimizeChild(&(*_self_), _24040_it.get()._field_Scope);
}



inline jule::Bool _1e102e723_substr(_1e1600552_scopeOptimizer* _self_, jule::Ptr<_1e31da091_Assign> _24629_a) {
	{
		auto &_match_expr{ _24629_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1e258577d_SlicingExprModel>>()) {
			_case_begin_1e674dc61:;
			{
				jule::Ptr<_1e258577d_SlicingExprModel> _24921_sem = _24629_a.get()._field_R.get()._field_Model.operator jule::Ptr<_1e258577d_SlicingExprModel>();;
				if ((_24921_sem.get()._field_Expr == _24629_a.get()._field_L.get()._field_Model)) {
					_1d42d59e7_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_1e12489e7_MutSlicingExprModel>(_1e12489e7_MutSlicingExprModel{._field_Token=_24921_sem.get()._field_Token, ._field_Expr=_24921_sem.get()._field_Expr, ._field_Left=_24921_sem.get()._field_Left, ._field_Right=_24921_sem.get()._field_Right})));
					return true;
				};
			}
		}
		_match_end_1e674dc0b:;
	};
	return false;
}



inline jule::Bool _1e103401e_strInsert(_1e1600552_scopeOptimizer* _self_, jule::Ptr<_1e31da091_Assign> _26332_a) {
	{
		auto &_match_expr{ _26332_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1e2583e74_BinopExprModel>>()) {
			_case_begin_1e6751170:;
			{
				jule::Ptr<_1e2583e74_BinopExprModel> _26621_m = _26332_a.get()._field_R.get()._field_Model.operator jule::Ptr<_1e2583e74_BinopExprModel>();;
				if ((_26621_m.get()._field_Right.get()._field_Model == _26332_a.get()._field_L.get()._field_Model)) {
					_1d42d59e7_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_1e17484d0_StrInsertBeginExprModel>(_1e17484d0_StrInsertBeginExprModel{._field_Dest=_26332_a.get()._field_L.get()._field_Model, ._field_Expr=_26621_m.get()._field_Left.get()._field_Model})));
					return true;
				};
			}
		}
		_match_end_1e675111a:;
	};
	return false;
}



inline jule::Bool _1e1029a3c_strAssign(_1e1600552_scopeOptimizer* _self_, jule::Ptr<_1e31da091_Assign> _27832_a) {
	if ((_27832_a.get()._field_Op.get()._field_Kind != jule::Str("=", 1))) {
		return false;
	};
	jule::Ptr<_1e3139881_Prim> _28213_lp = _1e3136ebb_Prim(_27832_a.get()._field_L.get()._field_Kind.ptr());;
	if (((_28213_lp == nullptr) || (!(_1e313cab5_IsStr(_28213_lp.ptr()))))) {
		return false;
	};
	{
		
		if (_1e102e723_substr(&(*_self_), _27832_a) || _1e103401e_strInsert(&(*_self_), _27832_a)) {
			_case_begin_1e6754a9c:;
			{
				return true;
			}
		}
		_match_end_1e6754a14:;
	};
	return false;
}



inline void _1e10390bd_optimizeAssign(_1e1600552_scopeOptimizer* _self_, jule::Ptr<_1e31da091_Assign> _29437_assign) {
	if ((_1d42c9c1c_Copy && _1e1029a3c_strAssign(&(*_self_), _29437_assign))) {
		return;;
	};
	static__1e1088ace_optimize(_29437_assign.get()._field_L.get()._field_Model);
	static__1e1088ace_optimize(_29437_assign.get()._field_R.get()._field_Model);
	{
		auto &_match_expr{ _29437_assign.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1e6756a6b:;
			{
				if ((_1d42d580a_Math && (_1e313841d_Struct(_29437_assign.get()._field_L.get()._field_Kind.ptr()) == nullptr))) {
					_29437_assign.get()._field_Op.get()._field_Kind=_29437_assign.get()._field_Op.get()._field_Kind.slice(0LL,(_29437_assign.get()._field_Op.get()._field_Kind.len() - 1LL));
					jule::Any _30725_model = static_cast<jule::Any>(jule::new_ptr<_1e2583e74_BinopExprModel>(_1e2583e74_BinopExprModel{._field_Left=_29437_assign.get()._field_L, ._field_Right=_29437_assign.get()._field_R, ._field_Op=_29437_assign.get()._field_Op}));;
					static__1e1088ace_optimize(_30725_model);
					{
						auto &_match_expr{ _30725_model };
						
						if (_match_expr.type_is<jule::Ptr<_1e2583e74_BinopExprModel>>()) {
							_case_begin_1e6758c16:;
							{
								_29437_assign.get()._field_R=jule::new_ptr<_1e2583c87_OperandExprModel>((*(_29437_assign.get()._field_R)));
								_29437_assign.get()._field_Op.get()._field_Kind=jule::Str("=", 1);
								_29437_assign.get()._field_R.get()._field_Model=_30725_model;
								return;;
							}
						}
						_match_end_1e6758d37:;
					};
					_29437_assign.get()._field_Op.get()._field_Kind+=jule::Str("=", 1);
					return;;
				};
			}
		}
		_match_end_1e67569b1:;
	};
	if (_1d42d53dc_Append) {
		{
			auto &_match_expr{ _29437_assign.get()._field_R.get()._field_Model };
			
			if (_match_expr.type_is<jule::Ptr<_1e258787e_BuiltinAppendCallExprModel>>()) {
				_case_begin_1e675aac5:;
				{
					jule::Ptr<_1e258787e_BuiltinAppendCallExprModel> _32825_m = _29437_assign.get()._field_R.get()._field_Model.operator jule::Ptr<_1e258787e_BuiltinAppendCallExprModel>();;
					{
						auto &_match_expr{ _32825_m.get()._field_Elements };
						
						if (_match_expr.type_is<jule::Ptr<_1e2584cdd_SliceExprModel>>()) {
							_case_begin_1e675bb3c:;
							{
								{
									auto &_match_expr{ _32825_m.get()._field_Dest };
									
									if (_match_expr.type_is<jule::Ptr<_1e322a147_Var>>() || _match_expr.type_is<jule::Ptr<_1e2585d88_StructSubIdentExprModel>>()) {
										_case_begin_1e675c423:;
										{
											_1d42d59e7_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_1e10cb072_PushToSliceExprModel>(_1e10cb072_PushToSliceExprModel{._field_Dest=_32825_m.get()._field_Dest, ._field_Elems=_32825_m.get()._field_Elements.operator jule::Ptr<_1e2584cdd_SliceExprModel>()})));
										}
									}
									_match_end_1e675c3bd:;
								};
							}
						}
						_match_end_1e675b983:;
					};
				}
			}
			_match_end_1e67575e9:;
		};
	};
}



inline void _1e103bb2b_optimizeMultiAssign(_1e1600552_scopeOptimizer* _self_, jule::Ptr<_1e31da448_MultiAssign> _34442_assign) {
	{
		auto &expr = _34442_assign.get()._field_L;
		auto it = expr.begin();
		_iter_begin_1e6756ebc:;
		if (it != expr.end()) {
			jule::I64 _34514_i = it - expr.begin();
			jule::Any _34521_l = *it;
			{
				if ((_34521_l != nullptr)) {
					static__1e1088ace_optimize(_34521_l);
					_34442_assign.get()._field_L[_34514_i]=_34521_l;
				};
			}
			_iter_next_1e6756ebc:;
			++it;
			_34514_i++;
			goto _iter_begin_1e6756ebc;
		}
		_iter_end_1e6756ebc:;
	};
	static__1e1088ace_optimize(_34442_assign.get()._field_R);
}



inline void _1e103d237_optimizeRet(_1e1600552_scopeOptimizer* _self_, jule::Ptr<_1e31dc00a_RetSt> _35434_r) {
	static__1e1088ace_optimize(_35434_r.get()._field_Expr);
}



inline void _1e1040c95_optimizeStmt(_1e1600552_scopeOptimizer* _self_, jule::Any _35835_stmt) {
	{
		auto &_match_expr{ _35835_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1e31d6c3b_Scope>>()) {
			_case_begin_1e67600e6:;
			{
				_1e1041ee9_optimizeChild(&(*_self_), _35835_stmt.operator jule::Ptr<_1e31d6c3b_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e310908c_Data>>()) {
			_case_begin_1e676015c:;
			{
				_1d42d6520_optimizeData(&(*_self_), _35835_stmt.operator jule::Ptr<_1e310908c_Data>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e322a147_Var>>()) {
			_case_begin_1e67601c3:;
			{
				_1d42d8c92_optimizeVar(&(*_self_), _35835_stmt.operator jule::Ptr<_1e322a147_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e31d7797_Conditional>>()) {
			_case_begin_1e6760239:;
			{
				_1d42da238_optimizeConditional(&(*_self_), _35835_stmt.operator jule::Ptr<_1e31d7797_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e31d88db_RangeIter>>()) {
			_case_begin_1e67602a0:;
			{
				_1e1029cd4_optimizeRangeIter(&(*_self_), _35835_stmt.operator jule::Ptr<_1e31d88db_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e31d8006_WhileIter>>()) {
			_case_begin_1e6760316:;
			{
				_1e102ce08_optimizeWhileIter(&(*_self_), _35835_stmt.operator jule::Ptr<_1e31d8006_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e31d7a83_InfIter>>()) {
			_case_begin_1e676037c:;
			{
				_1e1041ee9_optimizeChild(&(*_self_), _35835_stmt.operator jule::Ptr<_1e31d7a83_InfIter>().get()._field_Scope);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e31da091_Assign>>()) {
			_case_begin_1e67603e3:;
			{
				_1e10390bd_optimizeAssign(&(*_self_), _35835_stmt.operator jule::Ptr<_1e31da091_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e31da448_MultiAssign>>()) {
			_case_begin_1e6760459:;
			{
				_1e103bb2b_optimizeMultiAssign(&(*_self_), _35835_stmt.operator jule::Ptr<_1e31da448_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e31da987_Match>>()) {
			_case_begin_1e67604d1:;
			{
				_1e1021b00_optimizeMatch(&(*_self_), _35835_stmt.operator jule::Ptr<_1e31da987_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e31dc00a_RetSt>>()) {
			_case_begin_1e6760558:;
			{
				_1e103d237_optimizeRet(&(*_self_), _35835_stmt.operator jule::Ptr<_1e31dc00a_RetSt>());
			}
		}
		_match_end_1e675ee92:;
	};
}



inline void _1e1041ee9_optimizeChild(_1e1600552_scopeOptimizer* _self_, jule::Ptr<_1e31d6c3b_Scope> _38536_child) {
	jule::Ptr<_1e1600552_scopeOptimizer> _38617_so = static__1d42d1a8c_new(_38536_child);;
	_1e1049cd2_optimize(_38617_so.ptr());
}



inline void _1e1049cd2_optimize(_1e1600552_scopeOptimizer* _self_) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1e6766482:;
		if (it != expr.end()) {
			jule::I64 _39214_i = it - expr.begin();
			jule::Any _39221_stmt = *it;
			{
				(*_self_)._field_i=_39214_i;
				_1e1040c95_optimizeStmt(&(*_self_), _39221_stmt);
			}
			_iter_next_1e6766482:;
			++it;
			_39214_i++;
			goto _iter_begin_1e6766482;
		}
		_iter_end_1e6766482:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e1600552_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__1e1088ace_optimize(jule::Any& _5529_model) {
	if (_1e3b26aa9_exprEnabled) {
		jule::Ptr<_1e1605678_exprOptimizer> _5821_exop = jule::new_ptr<_1e1605678_exprOptimizer>(_1e1605678_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)((&(_5529_model))))});;
		_1e15d615e_do(_5821_exop.ptr());
	};
}



inline jule::Bool _1e109a6e5_strCond(_1e1605678_exprOptimizer* _self_, jule::Ptr<_1e2583e74_BinopExprModel> _6526_m) {
	jule::Ptr<_1e3139881_Prim> _6613_lp = _1e3136ebb_Prim(_6526_m.get()._field_Left.get()._field_Kind.ptr());;
	if (((_6613_lp == nullptr) || (!(_1e313cab5_IsStr(_6613_lp.ptr()))))) {
		return false;
	};
	if (((_6526_m.get()._field_Op.get()._field_Kind != jule::Str("==", 2)) && (_6526_m.get()._field_Op.get()._field_Kind != jule::Str("!=", 2)))) {
		return false;
	};
	{
		auto &_match_expr{ _6526_m.get()._field_Left.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1e23b4a96_Const>>()) {
			_case_begin_1e6770ab8:;
			{
				std::tie(_6526_m.get()._field_Left,_6526_m.get()._field_Right) = std::make_tuple(_6526_m.get()._field_Right,_6526_m.get()._field_Left);
				goto _julec_label_opt;
			}
		}
		_match_end_1e6770a63:;
	};
	{
		auto &_match_expr{ _6526_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1e23b4a96_Const>>()) {
			_case_begin_1e6771ab9:;
			{
				goto _match_end_1e67719cb;
			}
		}
		else {
			_case_begin_1e6771a42:;
			{
				return true;
			}
		}
		_match_end_1e67719cb:;
	};
	_julec_label_opt:;
	jule::Ptr<_1e23b4a96_Const> _8513_c = _6526_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_1e23b4a96_Const>();;
	if ((!(_1e257c137_ReadStr(_8513_c.ptr()).empty()))) {
		return false;
	};
	{
		auto &_match_expr{ _6526_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1e677337e:;
			{
				(*((*_self_)._field_model))=static_cast<jule::Any>(jule::new_ptr<_1e258663b_CommonSubIdentExprModel>(_1e258663b_CommonSubIdentExprModel{._field_ExprKind=_6526_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6526_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1e67733e5:;
			{
				jule::Ptr<_1d42b43cc_Token> _9721_op = _6526_m.get()._field_Op;;
				_9721_op.get()._field_Kind=jule::Str("!", 1);
				(*((*_self_)._field_model))=static_cast<jule::Any>(jule::new_ptr<_1e2584161_UnaryExprModel>(_1e2584161_UnaryExprModel{._field_Expr=jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e258663b_CommonSubIdentExprModel>(_1e258663b_CommonSubIdentExprModel{._field_ExprKind=_6526_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6526_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)})), }), ._field_Op=_9721_op}));
			}
		}
		_match_end_1e677325d:;
	};
	return true;
}



inline void _1e10bee56_binary(_1e1605678_exprOptimizer* _self_, jule::Ptr<_1e2583e74_BinopExprModel> _11325_m) {
	static__1e1088ace_optimize(_11325_m.get()._field_Left.get()._field_Model);
	static__1e1088ace_optimize(_11325_m.get()._field_Right.get()._field_Model);
	{
		auto &_match_expr{ _11325_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1e23b4a96_Const>>()) {
			_case_begin_1e6777383:;
			{
				goto _match_end_1e6776d55;
			}
		}
		else {
			_case_begin_1e6776dee:;
			{
				return;;
			}
		}
		_match_end_1e6776d55:;
	};
	if ((_1e102377d_Cond && _1e109a6e5_strCond(&(*_self_), _11325_m))) {
		return;;
	};
	if ((!(_1d42d580a_Math))) {
		return;;
	};
	{
		auto &_match_expr{ _11325_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1e6778054:;
			{
				jule::Bool _13318_ok;;
				jule::U64 _13322_x;;
				std::tie(_13318_ok,_13322_x) = _1e15d9b57_checkForBitShiftOpt(_11325_m.get()._field_Left,_11325_m.get()._field_Right);
				if (_13318_ok) {
					_11325_m.get()._field_Op.get()._field_Kind=jule::Str("<<", 2);
					jule::Ptr<_1e23b4a96_Const> _13625_c = _11325_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_1e23b4a96_Const>();;
					_1e257d0d3_SetU64(_13625_c.ptr(), _13322_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1e67780ba:;
			{
				jule::Bool _14118_ok;;
				jule::U64 _14122_x;;
				std::tie(_14118_ok,_14122_x) = _1e15d9b57_checkForBitShiftOpt(_11325_m.get()._field_Left,_11325_m.get()._field_Right);
				if (_14118_ok) {
					_11325_m.get()._field_Op.get()._field_Kind=jule::Str(">>", 2);
					jule::Ptr<_1e23b4a96_Const> _14425_c = _11325_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_1e23b4a96_Const>();;
					_1e257d0d3_SetU64(_14425_c.ptr(), _14122_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1e6778142:;
			{
				jule::Ptr<_1e23b4a96_Const> _14921_c = _11325_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_1e23b4a96_Const>();;
				jule::F64 _15017_d = _1e257cad8_AsF64(_14921_c.ptr());;
				if ((_15017_d == 2LL)) {
					_11325_m.get()._field_Op.get()._field_Kind=jule::Str("&", 1);
					_1e257cd5d_SetI64(_14921_c.ptr(), 1LL);
				};
			}
		}
		_match_end_1e6777eee:;
	};
	jule::Any _15617_model = jule::Any(jule::new_ptr<_1d42d3d8b_UnsafeBinopExprModel>(_1d42d3d8b_UnsafeBinopExprModel{._field_Node=_11325_m}));;
	(*((*_self_)._field_model))=(*(((jule::Any*)((&(_15617_model))))));
}



inline void _1e10c393d_unary(_1e1605678_exprOptimizer* _self_, jule::Ptr<_1e2584161_UnaryExprModel> _16024_m) {
	static__1e1088ace_optimize(_16024_m.get()._field_Expr.get()._field_Model);
	if ((_1e1023629_Ptr && (_16024_m.get()._field_Op.get()._field_Kind == jule::Str("*", 1)))) {
		{
			auto &_match_expr{ _16024_m.get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type_is<jule::Ptr<_1e2584161_UnaryExprModel>>()) {
				_case_begin_1e678525e:;
				{
					jule::Ptr<_1e2584161_UnaryExprModel> _16525_um = _16024_m.get()._field_Expr.get()._field_Model.operator jule::Ptr<_1e2584161_UnaryExprModel>();;
					if ((_16525_um.get()._field_Op.get()._field_Kind == jule::Str("&", 1))) {
						(*((*_self_)._field_model))=_16525_um.get()._field_Expr.get()._field_Model;
					};
				}
			}
			_match_end_1e6785209:;
		};
	};
}



inline void _1e10cc7c1_structureLit(_1e1605678_exprOptimizer* _self_, jule::Ptr<_1e258453a_StructLitExprModel> _17331_m) {
	{
		auto &expr = _17331_m.get()._field_Args;
		auto it = expr.begin();
		_iter_begin_1e6786caa:;
		if (it != expr.end()) {
			jule::Ptr<_1e258434d_StructArgExprModel> _17421_arg = *it;
			{
				static__1e1088ace_optimize(_17421_arg.get()._field_Expr);
			}
			_iter_next_1e6786caa:;
			++it;
			goto _iter_begin_1e6786caa;
		}
		_iter_end_1e6786caa:;
	};
}



inline void _1e122142b_allocStructure(_1e1605678_exprOptimizer* _self_, jule::Ptr<_1e2584727_AllocStructLitExprModel> _17933_m) {
	_1e10cc7c1_structureLit(&(*_self_), _17933_m.get()._field_Lit);
}



inline void _1e1235451_casting(_1e1605678_exprOptimizer* _self_, jule::Ptr<_1e2584914_CastingExprModel> _18326_m) {
	static__1e1088ace_optimize(_18326_m.get()._field_Expr);
}



inline void _1e123e3e4_args(_1e1605678_exprOptimizer* _self_, jule::Slice<jule::Any>& _18724_args) {
	{
		auto &expr = _18724_args;
		auto it = expr.begin();
		_iter_begin_1e67887e5:;
		if (it != expr.end()) {
			jule::I64 _18814_i = it - expr.begin();
			jule::Any _18821_arg = *it;
			{
				static__1e1088ace_optimize(_18821_arg);
				_18724_args[_18814_i]=_18821_arg;
			}
			_iter_next_1e67887e5:;
			++it;
			_18814_i++;
			goto _iter_begin_1e67887e5;
		}
		_iter_end_1e67887e5:;
	};
}



inline void _1e1245373_scope(_1e1605678_exprOptimizer* _self_, jule::Ptr<_1e31d6c3b_Scope>& _19425_s) {
	jule::Ptr<_1e1600552_scopeOptimizer> _19517_scopt = static__1d42d1a8c_new(_19425_s);;
	_1e1049cd2_optimize(_19517_scopt.ptr());
}



inline void _1e12463eb_funcCall(_1e1605678_exprOptimizer* _self_, jule::Ptr<_1e2584b01_FnCallExprModel> _19927_m) {
	static__1e1088ace_optimize(_19927_m.get()._field_Expr);
	_1e123e3e4_args(&(*_self_), _19927_m.get()._field_Args);
	if ((_19927_m.get()._field_Except != nullptr)) {
		_1e1245373_scope(&(*_self_), _19927_m.get()._field_Except);
	};
}



inline void _1e1234d8a_slice(_1e1605678_exprOptimizer* _self_, jule::Ptr<_1e2584cdd_SliceExprModel> _20724_m) {
	_1e123e3e4_args(&(*_self_), _20724_m.get()._field_Elems);
}



inline void _1e124a29b_array(_1e1605678_exprOptimizer* _self_, jule::Ptr<_1e2586262_ArrayExprModel> _21124_m) {
	if (((_21124_m.get()._field_Elems.len() == 2LL) && (_21124_m.get()._field_Elems[1LL] == nullptr))) {
		jule::Any _21321_elem = _21124_m.get()._field_Elems[0LL];;
		static__1e1088ace_optimize(_21321_elem);
		_21124_m.get()._field_Elems[0LL]=_21321_elem;
	};
	_1e123e3e4_args(&(*_self_), _21124_m.get()._field_Elems);
}



inline void _1e12576d7_indexing(_1e1605678_exprOptimizer* _self_, jule::Ptr<_1e2584eca_IndexingExprModel> _22027_m) {
	static__1e1088ace_optimize(_22027_m.get()._field_Expr.get()._field_Model);
	static__1e1088ace_optimize(_22027_m.get()._field_Index.get()._field_Model);
	if ((!(_1d42d618a_Access))) {
		return;;
	};
	jule::Bool _22613_array = (_1e3137bd1_Arr(_22027_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr);;
	if ((_22613_array && _1e3109950_IsConst(_22027_m.get()._field_Index.ptr()))) {
		jule::Any _22921_model = jule::Any(jule::new_ptr<_1d42d4d15_UnsafeIndexingExprModel>(_1d42d4d15_UnsafeIndexingExprModel{._field_Node=_22027_m}));;
		(*((*_self_)._field_model))=(*(((jule::Any*)((&(_22921_model))))));
		return;;
	};
	{
		auto &_match_expr{ _22027_m.get()._field_Index.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1e322a147_Var>>()) {
			_case_begin_1e6792403:;
			{
				jule::Ptr<_1e322a147_Var> _23517_i = _22027_m.get()._field_Index.get()._field_Model.operator jule::Ptr<_1e322a147_Var>();;
				if ((_23517_i.get()._field_Mutable || (_23517_i.get()._field_IterRelation == nullptr))) {
					goto _match_end_1e679229e;
				};
				{
					auto &_match_expr{ _22027_m.get()._field_Expr.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_1e322a147_Var>>()) {
						_case_begin_1e6793bb8:;
						{
							jule::Ptr<_1e322a147_Var> _24121_r = _22027_m.get()._field_Expr.get()._field_Model.operator jule::Ptr<_1e322a147_Var>();;
							if ((_23517_i.get()._field_IterRelation.get()._field_Range == _24121_r)) {
								jule::Any _24429_model = jule::Any(jule::new_ptr<_1d42d4d15_UnsafeIndexingExprModel>(_1d42d4d15_UnsafeIndexingExprModel{._field_Node=_22027_m}));;
								(*((*_self_)._field_model))=(*(((jule::Any*)((&(_24429_model))))));
							};
						}
					}
					_match_end_1e6793b63:;
				};
			}
		}
		_match_end_1e679229e:;
	};
}



inline void _1e125c2e1_anonFunc(_1e1605678_exprOptimizer* _self_, jule::Ptr<_1e25851b7_AnonFnExprModel> _25127_m) {
	_1e1245373_scope(&(*_self_), _25127_m.get()._field_Func.get()._field_Scope);
}



inline void _1e12629bc_map(_1e1605678_exprOptimizer* _self_, jule::Ptr<_1e2585591_MapExprModel> _25522_m) {
	{
		auto &expr = _25522_m.get()._field_Entries;
		auto it = expr.begin();
		_iter_begin_1e679634c:;
		if (it != expr.end()) {
			jule::Ptr<_1e25853a4_KeyValPairExprModel> _25621_pair = *it;
			{
				static__1e1088ace_optimize(_25621_pair.get()._field_Key);
				static__1e1088ace_optimize(_25621_pair.get()._field_Val);
			}
			_iter_next_1e679634c:;
			++it;
			goto _iter_begin_1e679634c;
		}
		_iter_end_1e679634c:;
	};
}



inline void _1e1263dca_slicing(_1e1605678_exprOptimizer* _self_, jule::Ptr<_1e258577d_SlicingExprModel> _26226_m) {
	static__1e1088ace_optimize(_26226_m.get()._field_Expr);
	static__1e1088ace_optimize(_26226_m.get()._field_Left);
	if ((_26226_m.get()._field_Right != nullptr)) {
		static__1e1088ace_optimize(_26226_m.get()._field_Right);
	};
}



inline void _1e1265184_traitSub(_1e1605678_exprOptimizer* _self_, jule::Ptr<_1e258596a_TraitSubIdentExprModel> _27027_m) {
	static__1e1088ace_optimize(_27027_m.get()._field_Expr);
}



inline void _1e126b784_structureSub(_1e1605678_exprOptimizer* _self_, jule::Ptr<_1e2585d88_StructSubIdentExprModel> _27431_m) {
	static__1e1088ace_optimize(_27431_m.get()._field_Expr.get()._field_Model);
}



inline void _1e12702c1_commonSub(_1e1605678_exprOptimizer* _self_, jule::Ptr<_1e258663b_CommonSubIdentExprModel> _27828_m) {
	static__1e1088ace_optimize(_27828_m.get()._field_Expr);
}



inline void _1e127c124_tuple(_1e1605678_exprOptimizer* _self_, jule::Ptr<_1e2586828_TupleExprModel> _28224_m) {
	{
		auto &expr = _28224_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_1e67997d4:;
		if (it != expr.end()) {
			jule::Ptr<_1e310908c_Data> _28321_d = *it;
			{
				static__1e1088ace_optimize(_28321_d.get()._field_Model);
			}
			_iter_next_1e67997d4:;
			++it;
			goto _iter_begin_1e67997d4;
		}
		_iter_end_1e67997d4:;
	};
}



inline void _1e1288707_newCall(_1e1605678_exprOptimizer* _self_, jule::Ptr<_1e25870cb_BuiltinNewCallExprModel> _28826_m) {
	if ((_28826_m.get()._field_Init != nullptr)) {
		static__1e1088ace_optimize(_28826_m.get()._field_Init);
	};
}



inline void _1e1293525_outCall(_1e1605678_exprOptimizer* _self_, jule::Ptr<_1e2586a15_BuiltinOutCallExprModel> _29426_m) {
	static__1e1088ace_optimize(_29426_m.get()._field_Expr);
}



inline void _1e12b44be_outlnCall(_1e1605678_exprOptimizer* _self_, jule::Ptr<_1e2586c02_BuiltinOutlnCallExprModel> _29828_m) {
	static__1e1088ace_optimize(_29828_m.get()._field_Expr);
}



inline void _1e12b6c63_panicCall(_1e1605678_exprOptimizer* _self_, jule::Ptr<_1e25872b8_BuiltinPanicCallExprModel> _30228_m) {
	static__1e1088ace_optimize(_30228_m.get()._field_Expr);
}



inline void _1e12bb372_assertCall(_1e1605678_exprOptimizer* _self_, jule::Ptr<_1e25874a5_BuiltinAssertCallExprModel> _30629_m) {
	static__1e1088ace_optimize(_30629_m.get()._field_Expr);
}



inline void _1e12c912c_errorCall(_1e1605678_exprOptimizer* _self_, jule::Ptr<_1e2587c58_BuiltinErrorCallExprModel> _31028_m) {
	static__1e1088ace_optimize(_31028_m.get()._field_Err);
}



inline void _1e12dc2e9_makeCall(_1e1605678_exprOptimizer* _self_, jule::Ptr<_1e2587692_BuiltinMakeCallExprModel> _31427_m) {
	if ((_31427_m.get()._field_Len != nullptr)) {
		static__1e1088ace_optimize(_31427_m.get()._field_Len);
	};
	if ((_31427_m.get()._field_Cap != nullptr)) {
		static__1e1088ace_optimize(_31427_m.get()._field_Cap);
	};
}



inline void _1e132d14d_appendCall(_1e1605678_exprOptimizer* _self_, jule::Ptr<_1e258787e_BuiltinAppendCallExprModel> _32329_m) {
	static__1e1088ace_optimize(_32329_m.get()._field_Dest);
	static__1e1088ace_optimize(_32329_m.get()._field_Elements);
}



inline void _1e1376bad_cloneCall(_1e1605678_exprOptimizer* _self_, jule::Ptr<_1e2586dde_BuiltinCloneCallExprModel> _32828_m) {
	static__1e1088ace_optimize(_32828_m.get()._field_Expr);
}



inline void _1e15913b1_sizeof(_1e1605678_exprOptimizer* _self_, jule::Ptr<_1e2585b57_SizeofExprModel> _33225_m) {
	static__1e1088ace_optimize(_33225_m.get()._field_Expr);
}



inline void _1e1595508_alignof(_1e1605678_exprOptimizer* _self_, jule::Ptr<_1e25883b8_AlignofExprModel> _33626_m) {
	static__1e1088ace_optimize(_33626_m.get()._field_Expr);
}



inline void _1e15b6282_integratedToStr(_1e1605678_exprOptimizer* _self_, jule::Ptr<_1e2588792_IntegratedToStrExprModel> _34034_m) {
	static__1e1088ace_optimize(_34034_m.get()._field_Expr);
}



inline void _1e15d446a_free(_1e1605678_exprOptimizer* _self_, jule::Ptr<_1e2588b6b_FreeExprModel> _34423_m) {
	static__1e1088ace_optimize(_34423_m.get()._field_Expr);
}



inline void _1e15d5207_backendEmit(_1e1605678_exprOptimizer* _self_, jule::Ptr<_1e258897e_BackendEmitExprModel> _34830_m) {
	_1e123e3e4_args(&(*_self_), _34830_m.get()._field_Exprs);
}



inline void _1e15d615e_do(_1e1605678_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*_self_)._field_model)) };
		
		if (_match_expr.type_is<jule::Ptr<_1e2583e74_BinopExprModel>>()) {
			_case_begin_1e67a20b1:;
			{
				_1e10bee56_binary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e2583e74_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2584161_UnaryExprModel>>()) {
			_case_begin_1e67a237a:;
			{
				_1e10c393d_unary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e2584161_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e258453a_StructLitExprModel>>()) {
			_case_begin_1e67a23e1:;
			{
				_1e10cc7c1_structureLit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e258453a_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2584727_AllocStructLitExprModel>>()) {
			_case_begin_1e67a2457:;
			{
				_1e122142b_allocStructure(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e2584727_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2584914_CastingExprModel>>()) {
			_case_begin_1e67a24bd:;
			{
				_1e1235451_casting(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e2584914_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2584b01_FnCallExprModel>>()) {
			_case_begin_1e67a2545:;
			{
				_1e12463eb_funcCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e2584b01_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2584cdd_SliceExprModel>>()) {
			_case_begin_1e67a25bc:;
			{
				_1e1234d8a_slice(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e2584cdd_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2586262_ArrayExprModel>>()) {
			_case_begin_1e67a2644:;
			{
				_1e124a29b_array(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e2586262_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2584eca_IndexingExprModel>>()) {
			_case_begin_1e67a26bb:;
			{
				_1e12576d7_indexing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e2584eca_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e25851b7_AnonFnExprModel>>()) {
			_case_begin_1e67a2743:;
			{
				_1e125c2e1_anonFunc(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e25851b7_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2585591_MapExprModel>>()) {
			_case_begin_1e67a27ba:;
			{
				_1e12629bc_map(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e2585591_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e258577d_SlicingExprModel>>()) {
			_case_begin_1e67a2842:;
			{
				_1e1263dca_slicing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e258577d_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e258596a_TraitSubIdentExprModel>>()) {
			_case_begin_1e67a28b9:;
			{
				_1e1265184_traitSub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e258596a_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2585d88_StructSubIdentExprModel>>()) {
			_case_begin_1e67a2941:;
			{
				_1e126b784_structureSub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e2585d88_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e258663b_CommonSubIdentExprModel>>()) {
			_case_begin_1e67a29b8:;
			{
				_1e12702c1_commonSub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e258663b_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2586828_TupleExprModel>>()) {
			_case_begin_1e67a2a40:;
			{
				_1e127c124_tuple(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e2586828_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2586a15_BuiltinOutCallExprModel>>()) {
			_case_begin_1e67a2ab7:;
			{
				_1e1293525_outCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e2586a15_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2586c02_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1e67a2b3e:;
			{
				_1e12b44be_outlnCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e2586c02_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e25870cb_BuiltinNewCallExprModel>>()) {
			_case_begin_1e67a2bb6:;
			{
				_1e1288707_newCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e25870cb_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e25872b8_BuiltinPanicCallExprModel>>()) {
			_case_begin_1e67a2c3d:;
			{
				_1e12b6c63_panicCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e25872b8_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e25874a5_BuiltinAssertCallExprModel>>()) {
			_case_begin_1e67a2cb5:;
			{
				_1e12bb372_assertCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e25874a5_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2587c58_BuiltinErrorCallExprModel>>()) {
			_case_begin_1e67a2d3c:;
			{
				_1e12c912c_errorCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e2587c58_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2587692_BuiltinMakeCallExprModel>>()) {
			_case_begin_1e67a2db4:;
			{
				_1e12dc2e9_makeCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e2587692_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e258787e_BuiltinAppendCallExprModel>>()) {
			_case_begin_1e67a2e3b:;
			{
				_1e132d14d_appendCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e258787e_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2586dde_BuiltinCloneCallExprModel>>()) {
			_case_begin_1e67a2eb3:;
			{
				_1e1376bad_cloneCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e2586dde_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2585b57_SizeofExprModel>>()) {
			_case_begin_1e67a303a:;
			{
				_1e15913b1_sizeof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e2585b57_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e25883b8_AlignofExprModel>>()) {
			_case_begin_1e67a30b2:;
			{
				_1e1595508_alignof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e25883b8_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2588792_IntegratedToStrExprModel>>()) {
			_case_begin_1e67a3139:;
			{
				_1e15b6282_integratedToStr(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e2588792_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2588b6b_FreeExprModel>>()) {
			_case_begin_1e67a31b1:;
			{
				_1e15d446a_free(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e2588b6b_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e258897e_BackendEmitExprModel>>()) {
			_case_begin_1e67a3238:;
			{
				_1e15d5207_backendEmit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e258897e_BackendEmitExprModel>());
			}
		}
		_match_end_1e67a205b:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e1605678_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e3bdecc6_Optimizer> static__1e3b53564_New(jule::Ptr<_1e3381952_IR>& _2528_ir) {
	return jule::new_ptr<_1e3bdecc6_Optimizer>(_1e3bdecc6_Optimizer{._field_ir=_2528_ir});
}



inline void _1e3b272a2_optimizeGlobal(_1e3bdecc6_Optimizer* _self_, jule::Ptr<_1e322a147_Var>& _3138_v) {
	if ((!(_3138_v.get()._field_CppLinked))) {
		static__1e1088ace_optimize(_3138_v.get()._field_Value.get()._field_Data.get()._field_Model);
	};
}



inline void _1e3b82153_optimizeFunction(_1e3bdecc6_Optimizer* _self_, jule::Ptr<_1e258b344_Fn>& _3740_func) {
	if (_3740_func.get()._field_CppLinked) {
		return;;
	};
	{
		auto &expr = _3740_func.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1e67b8eda:;
		if (it != expr.end()) {
			jule::Ptr<_1e258dee5_FnIns> _4121_ins = *it;
			{
				jule::Ptr<_1e1600552_scopeOptimizer> _4221_so = static__1d42d1a8c_new(_4121_ins.get()._field_Scope);;
				_1e1049cd2_optimize(_4221_so.ptr());
			}
			_iter_next_1e67b8eda:;
			++it;
			goto _iter_begin_1e67b8eda;
		}
		_iter_end_1e67b8eda:;
	};
}



inline void _1e3b86498_optimizeStruct(_1e3bdecc6_Optimizer* _self_, jule::Ptr<_1e2505d6e_Struct>& _4738_s) {
	if (_4738_s.get()._field_CppLinked) {
		return;;
	};
	{
		auto &expr = _4738_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1e67ba43c:;
		if (it != expr.end()) {
			jule::Ptr<_1e253220d_StructIns> _5121_ins = *it;
			{
				{
					auto &expr = _5121_ins.get()._field_Fields;
					auto it = expr.begin();
					_iter_begin_1e67baabe:;
					if (it != expr.end()) {
						jule::Ptr<_1e250d4d6_FieldIns> _5225_f = *it;
						{
							if ((_5225_f.get()._field_Default != nullptr)) {
								static__1e1088ace_optimize(_5225_f.get()._field_Default.get()._field_Model);
							};
						}
						_iter_next_1e67baabe:;
						++it;
						goto _iter_begin_1e67baabe;
					}
					_iter_end_1e67baabe:;
				};
				{
					auto &expr = _5121_ins.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1e67bbd67:;
					if (it != expr.end()) {
						jule::Ptr<_1e258b344_Fn> _5725_m = *it;
						{
							_1e3b82153_optimizeFunction(&(*_self_), _5725_m);
						}
						_iter_next_1e67bbd67:;
						++it;
						goto _iter_begin_1e67bbd67;
					}
					_iter_end_1e67bbd67:;
				};
			}
			_iter_next_1e67ba43c:;
			++it;
			goto _iter_begin_1e67ba43c;
		}
		_iter_end_1e67ba43c:;
	};
}



inline void _1e3b8a0e5_optimizeGlobals(_1e3bdecc6_Optimizer* _self_, jule::Ptr<_1e3208576_Package>& _6339_p) {
	{
		auto &expr = _6339_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1e67bc0ba:;
		if (it != expr.end()) {
			jule::Ptr<_1e310432e_SymbolTable> _6421_f = *it;
			{
				{
					auto &expr = _6421_f.get()._field_Vars;
					auto it = expr.begin();
					_iter_begin_1e67bcd13:;
					if (it != expr.end()) {
						jule::Ptr<_1e322a147_Var> _6525_v = *it;
						{
							_1e3b272a2_optimizeGlobal(&(*_self_), _6525_v);
						}
						_iter_next_1e67bcd13:;
						++it;
						goto _iter_begin_1e67bcd13;
					}
					_iter_end_1e67bcd13:;
				};
			}
			_iter_next_1e67bc0ba:;
			++it;
			goto _iter_begin_1e67bc0ba;
		}
		_iter_end_1e67bc0ba:;
	};
}



inline void _1e3b9144d_optimizeFunctions(_1e3bdecc6_Optimizer* _self_, jule::Ptr<_1e3208576_Package>& _7141_p) {
	{
		auto &expr = _7141_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1e67bd451:;
		if (it != expr.end()) {
			jule::Ptr<_1e310432e_SymbolTable> _7221_f = *it;
			{
				{
					auto &expr = _7221_f.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_1e67be199:;
					if (it != expr.end()) {
						jule::Ptr<_1e258b344_Fn> _7325_func = *it;
						{
							_1e3b82153_optimizeFunction(&(*_self_), _7325_func);
						}
						_iter_next_1e67be199:;
						++it;
						goto _iter_begin_1e67be199;
					}
					_iter_end_1e67be199:;
				};
			}
			_iter_next_1e67bd451:;
			++it;
			goto _iter_begin_1e67bd451;
		}
		_iter_end_1e67bd451:;
	};
}



inline void _1e3b995aa_optimizeStructs(_1e3bdecc6_Optimizer* _self_, jule::Ptr<_1e3208576_Package>& _7939_p) {
	{
		auto &expr = _7939_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1e67be7d7:;
		if (it != expr.end()) {
			jule::Ptr<_1e310432e_SymbolTable> _8021_f = *it;
			{
				{
					auto &expr = _8021_f.get()._field_Structs;
					auto it = expr.begin();
					_iter_begin_1e67c0530:;
					if (it != expr.end()) {
						jule::Ptr<_1e2505d6e_Struct> _8125_s = *it;
						{
							_1e3b86498_optimizeStruct(&(*_self_), _8125_s);
						}
						_iter_next_1e67c0530:;
						++it;
						goto _iter_begin_1e67c0530;
					}
					_iter_end_1e67c0530:;
				};
			}
			_iter_next_1e67be7d7:;
			++it;
			goto _iter_begin_1e67be7d7;
		}
		_iter_end_1e67be7d7:;
	};
}



inline void _1e3ba4bae_optimizePackage(_1e3bdecc6_Optimizer* _self_, jule::Ptr<_1e3208576_Package>& _8739_p) {
	_1e3b8a0e5_optimizeGlobals(&(*_self_), _8739_p);
	_1e3b9144d_optimizeFunctions(&(*_self_), _8739_p);
	_1e3b995aa_optimizeStructs(&(*_self_), _8739_p);
}



inline void _1e3ba92e0_Optimize(_1e3bdecc6_Optimizer* _self_) {
	_1e3baaa1c_detectEnabled();
	if (_1d42d241c_Deadcode) {
		_1e3c150e8_EliminateDefines((*_self_)._field_ir);
	};
	if ((_1e3b27c0e_scopeEnabled || _1e3b26aa9_exprEnabled)) {
		{
			auto &expr = (*_self_)._field_ir.get()._field_Used;
			auto it = expr.begin();
			_iter_begin_1e67c0b29:;
			if (it != expr.end()) {
				jule::Ptr<_1e320561c_ImportInfo> _10325_u = *it;
				{
					if ((!(_10325_u.get()._field_CppLinked))) {
						_1e3ba4bae_optimizePackage(&(*_self_), _10325_u.get()._field_Package);
					};
				}
				_iter_next_1e67c0b29:;
				++it;
				goto _iter_begin_1e67c0b29;
			}
			_iter_end_1e67c0b29:;
		};
		_1e3ba4bae_optimizePackage(&(*_self_), (*_self_)._field_ir.get()._field_Main);
	};
	if (_1d42d241c_Deadcode) {
		_1e3c19d9a_EliminateScopes((*_self_)._field_ir);
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e3bdecc6_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__20a406ae2_Reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__20a4081cb_Print(jule::Str _1925_escape, jule::Str _1938_text) {
	jule::out(_1925_escape);
	jule::out(_1938_text);
	static__20a406ae2_Reset();
}







std::ostream &operator<<(std::ostream &_Stream, _20a4244a0_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__20a408484_LogFlat(_20a35491e_Log& _1428_l) {
	jule::outln(_1428_l._field_Text);
}



inline void static__20a409540_LogError(_20a35491e_Log& _1929_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out(_1929_l._field_Text);
	static__20a406ae2_Reset();
	if ((_1929_l._field_Path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out(_1929_l._field_Path);
	};
	if (((_1929_l._field_Row != 0LL) && (_1929_l._field_Column != 0LL))) {
		jule::out(jule::Str(":", 1));
		jule::out(_1e31c54ee_Itoa(_1929_l._field_Row));
		jule::out(jule::Str(":", 1));
		jule::out(_1e31c54ee_Itoa(_1929_l._field_Column));
	};
	if ((_1929_l._field_Line.len() != 0LL)) {
		jule::Str _3621_line = _20a1b01e7_TrimLeft(_1929_l._field_Line,jule::Str("\r\n\v\b ", 5));;
		jule::I64 _3721_offset = ((_1929_l._field_Line.len() - _3621_line.len()) + 1LL);;
		jule::I64 _3821_oldLen = _3621_line.len();;
		_3621_line=_20a1b01e7_TrimLeft(_3621_line,jule::Str("\t", 1));
		if ((_3821_oldLen != _3621_line.len())) {
			_3721_offset+=((_3821_oldLen - _3621_line.len()) << 3LLU);
		};
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _1e31c54ee_Itoa(_1929_l._field_Row);;
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_20a110026_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_20a110026_Repeat(jule::Str(" ", 1),static_cast<jule::I64>((_1929_l._field_Column - _3721_offset))));
		jule::out(jule::Str("^", 1));
		if ((_1929_l._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_20a110026_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__20a4081cb_Print(jule::Str("\033[95m", 5),jule::Str("suggestion: ", 12));
			jule::out(_1929_l._field_Suggestion);
		};
	};
	jule::outln(jule::Str("\n", 1));
}



inline void static__20a40bde4_Log(_20a35491e_Log& _6524_l) {
	{
		auto &_match_expr{ _6524_l._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1e67d2740:;
			{
				static__20a408484_LogFlat(_6524_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1e67d27a6:;
			{
				static__20a409540_LogError(_6524_l);
			}
		}
		_match_end_1e67d25db:;
	};
}



inline void static__20a41a199_PrintLogs(jule::Slice<_20a35491e_Log>& _7530_logs) {
	{
		auto &expr = _7530_logs;
		auto it = expr.begin();
		_iter_begin_1e67c756a:;
		if (it != expr.end()) {
			_20a35491e_Log &_7616_l = *it;
			{
				static__20a40bde4_Log(_7616_l);
			}
			_iter_next_1e67c756a:;
			++it;
			goto _iter_begin_1e67c756a;
		}
		_iter_end_1e67c756a:;
	};
	jule::out(jule::Str("=== ", 4));
	jule::out(_1e31c54ee_Itoa(static_cast<jule::I64>(_7530_logs.len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _1e3b45149_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _1e42a4478_Unix(_1e42a40c1_AbsTime* _self_) {
	jule::Bool _5617_leap = false;;
	jule::U64 _5717_y = ((*_self_)._field_Year - 1900LLU);;
	jule::U64 _5817_m = ((*_self_)._field_Month - 1LLU);;
	if (((_5817_m >= 12LLU) || (_5817_m < 0LLU))) {
		jule::U64 _6021_adj = (_5817_m / 12LLU);;
		_5817_m%=12LL;
		if ((_5817_m < 0LLU)) {
			(_6021_adj)--;
			_5817_m+=12LLU;
		};
		_5717_y+=_6021_adj;
	};
	jule::U64 _6817_t = _1e42a958d_unixYearToSeconds(_5717_y,_5617_leap);;
	_6817_t+=_1e42a9923_unixMonthToSeconds(_5817_m,_5617_leap);
	_6817_t+=(86400LLU * ((*_self_)._field_Day - 1LLU));
	_6817_t+=(3600LLU * (*_self_)._field_Hour);
	_6817_t+=(60LLU * (*_self_)._field_Minute);
	_6817_t+=(*_self_)._field_Second;
	return _6817_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1e42a40c1_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _1e42a4764_Time static__1e42a4b0a_Unix(jule::U64 _9124_sec) {
	return _1e42a4764_Time{._field_sec=_9124_sec};
}



inline _1e42a4764_Time static__1e42a4d08_Now(void) {
	return static__1e42a4b0a_Unix(static_cast<jule::U64>(_1e42a924c_unix()));
}



inline jule::U64 _1e42a5259_Unix(_1e42a4764_Time* _self_) {
	return (*_self_)._field_sec;
}



inline jule::U64 _1e42a54bd_Day(_1e42a4764_Time* _self_) {
	return _1e42a6447_Abs(&(*_self_))._field_Day;
}



inline jule::U64 _1e42a5732_Month(_1e42a4764_Time* _self_) {
	return _1e42a6447_Abs(&(*_self_))._field_Month;
}



inline jule::U64 _1e42a5996_Year(_1e42a4764_Time* _self_) {
	return _1e42a6447_Abs(&(*_self_))._field_Year;
}



inline jule::U64 _1e42a5c0a_Second(_1e42a4764_Time* _self_) {
	return _1e42a6447_Abs(&(*_self_))._field_Second;
}



inline jule::U64 _1e42a5e6e_Minute(_1e42a4764_Time* _self_) {
	return _1e42a6447_Abs(&(*_self_))._field_Minute;
}



inline jule::U64 _1e42a61d3_Hour(_1e42a4764_Time* _self_) {
	return _1e42a6447_Abs(&(*_self_))._field_Hour;
}



inline _1e42a40c1_AbsTime _1e42a6447_Abs(_1e42a4764_Time* _self_) {
	jule::U64 _12713_secs = ((*_self_)._field_sec - 951868800LLU);;
	jule::U64 _12817_days = (_12713_secs / 86400LLU);;
	jule::U64 _12917_remSecs = (_12713_secs % 86400LL);;
	if ((_12917_remSecs < 0LLU)) {
		_12917_remSecs+=86400LLU;
		(_12817_days)--;
	};
	jule::U64 _13517_qcCycles = (_12817_days / 146097LLU);;
	jule::U64 _13617_remDays = (_12817_days % 146097LL);;
	if ((_13617_remDays < 0LLU)) {
		_13617_remDays+=146097LLU;
		(_13517_qcCycles)--;
	};
	jule::U64 _14217_cCycles = (_13617_remDays / 36524LLU);;
	if ((_14217_cCycles == 4LLU)) {
		(_14217_cCycles)--;
	};
	_13617_remDays-=(_14217_cCycles * 36524LLU);
	jule::U64 _14817_qCycles = (_13617_remDays / 1461LLU);;
	if ((_14817_qCycles == 25LLU)) {
		(_14817_qCycles)--;
	};
	_13617_remDays-=(_14817_qCycles * 1461LLU);
	jule::U64 _15417_remYears = (_13617_remDays / 365LLU);;
	if ((_15417_remYears == 4LLU)) {
		(_15417_remYears)--;
	};
	_13617_remDays-=(_15417_remYears * 365LLU);
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);;
	if (((_15417_remYears == 0LLU) && ((_14817_qCycles > 0LLU) || (_14217_cCycles == 0LLU)))) {
		_16017_leap=1LLU;
	};
	jule::U64 _16417_yDay = (((_13617_remDays + 31LLU) + 28LLU) + _16017_leap);;
	if ((_16417_yDay >= (365LLU + _16017_leap))) {
		_16417_yDay-=(365LLU + _16017_leap);
	};
	jule::U64 _16917_months = 0LLU;;
	for (; (_1e42a3664_mdays[static_cast<jule::I64>(_16917_months)] <= _13617_remDays); (_16917_months)++) {
		{
			_13617_remDays-=_1e42a3664_mdays[static_cast<jule::I64>(_16917_months)];
		}
	_iter_next_1e680e6d4:;
	}
	_iter_end_1e680e6d4:;;
	_1e42a40c1_AbsTime _17417_t = _1e42a40c1_AbsTime{};;
	_17417_t._field_Year=static_cast<jule::U64>(((((_15417_remYears + (4LLU * _14817_qCycles)) + (100LLU * _14217_cCycles)) + (400LLU * _13517_qcCycles)) + 100LLU));
	_17417_t._field_Month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_Month >= 12LLU)) {
		_17417_t._field_Month-=12LLU;
		(_17417_t._field_Year)++;
	};
	_17417_t._field_Month+=1LLU;
	_17417_t._field_Year+=1900LLU;
	_17417_t._field_Day=static_cast<jule::U64>((_13617_remDays + 1LLU));
	_17417_t._field_WeekDay=static_cast<jule::U64>(((3LLU + _12817_days) % 7LL));
	if ((_17417_t._field_WeekDay < 0LLU)) {
		_17417_t._field_WeekDay+=7LLU;
	};
	_17417_t._field_YearDay=_16417_yDay;
	_17417_t._field_Hour=static_cast<jule::U64>((_12917_remSecs / 3600LLU));
	_17417_t._field_Minute=static_cast<jule::U64>(((_12917_remSecs / 60LLU) % 60LL));
	_17417_t._field_Second=static_cast<jule::U64>((_12917_remSecs % 60LL));
	return _17417_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1e42a4764_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e422d358_scopeCoder> static__1e422d952_new(jule::Ptr<_1e42a9e62_ObjectCoder>& _5524_oc) {
	return jule::new_ptr<_1e422d358_scopeCoder>(_1e422d358_scopeCoder{._field_oc=_5524_oc});
}



inline void _1e422dbc7_rangeIndexIter(jule::Ptr<_1e422d358_scopeCoder> _self_, jule::Ptr<_1e31d88db_RangeIter>& _6139_it) {
	jule::Str _6213_begin = static__1e4249aa0_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6139_it)));;
	jule::Str _6313_next = static__1e424a0de_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6139_it)));;
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1e428da5b_addIndent(_self_.get()._field_oc);
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_1d42c9c1c_Copy && _1e423388b_isCopyOptimizable(_6139_it.get()._field_Expr))) {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_1e424124a_model(_self_.get()._field_oc.get()._field_ec, _6139_it.get()._field_Expr.get()._field_Model);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, _6213_begin);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_1e428da5b_addIndent(_self_.get()._field_oc);
	_1e4290299_indent(_self_.get()._field_oc);
	if ((_6139_it.get()._field_KeyA != nullptr)) {
		_1e42ababd_varInitExpr(_self_.get()._field_oc, _6139_it.get()._field_KeyA,jule::Fn<void(void)>([=](void) mutable -> void {
			_1e428d2b9_write(_self_.get()._field_oc, jule::Str("it - expr.begin()", 17));
		}));
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1e4290299_indent(_self_.get()._field_oc);
	};
	if ((_6139_it.get()._field_KeyB != nullptr)) {
		if (_1d42c9c1c_Copy) {
			_6139_it.get()._field_KeyB.get()._field_Reference=_1e4233c21_isIterCopyOptimizable(_6139_it.get()._field_Expr,_6139_it.get()._field_KeyB);
		};
		_1e42ababd_varInitExpr(_self_.get()._field_oc, _6139_it.get()._field_KeyB,jule::Fn<void(void)>([=](void) mutable -> void {
			_1e428d2b9_write(_self_.get()._field_oc, jule::Str("*it", 3));
		}));
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1e4290299_indent(_self_.get()._field_oc);
	};
	_1e42332b4_scope(_self_, _6139_it.get()._field_Scope);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, _6313_next);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1e4290299_indent(_self_.get()._field_oc);
	if ((_6139_it.get()._field_KeyA != nullptr)) {
		_1e428d2b9_write(_self_.get()._field_oc, static__1e4249808_var(_6139_it.get()._field_KeyA));
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("++;\n", 4));
		_1e4290299_indent(_self_.get()._field_oc);
	};
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1e428d2b9_write(_self_.get()._field_oc, _6213_begin);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1e428ea4b_doneIndent(_self_.get()._field_oc);
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, static__1e4249d47_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6139_it))));
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1e428ea4b_doneIndent(_self_.get()._field_oc);
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1e422de4c_rangeHashmapIter(jule::Ptr<_1e422d358_scopeCoder> _self_, jule::Ptr<_1e31d88db_RangeIter>& _12941_it) {
	jule::Str _13013_begin = static__1e4249aa0_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12941_it)));;
	jule::Str _13113_next = static__1e424a0de_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12941_it)));;
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1e428da5b_addIndent(_self_.get()._field_oc);
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_1d42c9c1c_Copy && _1e423388b_isCopyOptimizable(_12941_it.get()._field_Expr))) {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_1e424124a_model(_self_.get()._field_oc.get()._field_ec, _12941_it.get()._field_Expr.get()._field_Model);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, _13013_begin);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_1e428da5b_addIndent(_self_.get()._field_oc);
	_1e4290299_indent(_self_.get()._field_oc);
	if ((_12941_it.get()._field_KeyA != nullptr)) {
		if (_1d42c9c1c_Copy) {
			_12941_it.get()._field_KeyA.get()._field_Reference=_1e4233c21_isIterCopyOptimizable(_12941_it.get()._field_Expr,_12941_it.get()._field_KeyA);
		};
		_1e42ababd_varInitExpr(_self_.get()._field_oc, _12941_it.get()._field_KeyA,jule::Fn<void(void)>([=](void) mutable -> void {
			_1e428d2b9_write(_self_.get()._field_oc, jule::Str("it->first", 9));
		}));
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1e4290299_indent(_self_.get()._field_oc);
	};
	if ((_12941_it.get()._field_KeyB != nullptr)) {
		if (_1d42c9c1c_Copy) {
			_12941_it.get()._field_KeyB.get()._field_Reference=_1e4233c21_isIterCopyOptimizable(_12941_it.get()._field_Expr,_12941_it.get()._field_KeyB);
		};
		_1e42ababd_varInitExpr(_self_.get()._field_oc, _12941_it.get()._field_KeyB,jule::Fn<void(void)>([=](void) mutable -> void {
			_1e428d2b9_write(_self_.get()._field_oc, jule::Str("it->second", 10));
		}));
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1e4290299_indent(_self_.get()._field_oc);
	};
	_1e42332b4_scope(_self_, _12941_it.get()._field_Scope);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, _13113_next);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1e428d2b9_write(_self_.get()._field_oc, _13013_begin);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1e428ea4b_doneIndent(_self_.get()._field_oc);
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, static__1e4249d47_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12941_it))));
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1e428ea4b_doneIndent(_self_.get()._field_oc);
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1e422e1c2_ifCase(jule::Ptr<_1e422d358_scopeCoder> _self_, jule::Ptr<_1e31d7137_If> _19530_i) {
	if ((_19530_i.get()._field_Expr != nullptr)) {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("if (", 4));
		_1e42414c0_expr(_self_.get()._field_oc.get()._field_ec, _19530_i.get()._field_Expr);
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str(") ", 2));
	};
	_1e42332b4_scope(_self_, _19530_i.get()._field_Scope);
}



inline void _1e422e447_conditional(jule::Ptr<_1e422d358_scopeCoder> _self_, jule::Ptr<_1e31d7797_Conditional> _20435_c) {
	jule::Bool _20517_writed = false;;
	{
		auto &expr = _20435_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1e68a3514:;
		if (it != expr.end()) {
			jule::Ptr<_1e31d7137_If> _20621_elif = *it;
			{
				if ((_20621_elif == nullptr)) {
					goto _iter_next_1e68a3514;
				};
				if (_20517_writed) {
					_1e428d2b9_write(_self_.get()._field_oc, jule::Str(" else ", 6));
				};
				_20517_writed=true;
				_1e422e1c2_ifCase(_self_, _20621_elif);
			}
			_iter_next_1e68a3514:;
			++it;
			goto _iter_begin_1e68a3514;
		}
		_iter_end_1e68a3514:;
	};
	if ((_20435_c.get()._field_Default != nullptr)) {
		if (_20517_writed) {
			_1e428d2b9_write(_self_.get()._field_oc, jule::Str(" else ", 6));
		};
		_1e42332b4_scope(_self_, _20435_c.get()._field_Default.get()._field_Scope);
	};
}



inline void _1e422e6bc_infIter(jule::Ptr<_1e422d358_scopeCoder> _self_, jule::Ptr<_1e31d7a83_InfIter> _22431_it) {
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("for (;;) {\n", 11));
	_1e428da5b_addIndent(_self_.get()._field_oc);
	_1e4290299_indent(_self_.get()._field_oc);
	_1e42332b4_scope(_self_, _22431_it.get()._field_Scope);
	_1e428ea4b_doneIndent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, static__1e424a0de_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_22431_it))));
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, static__1e4249d47_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_22431_it))));
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1e422e942_whileIter(jule::Ptr<_1e422d358_scopeCoder> _self_, jule::Ptr<_1e31d8006_WhileIter> _24133_it) {
	if (((_24133_it.get()._field_Expr != nullptr) && (_24133_it.get()._field_Next == nullptr))) {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("while (", 7));
		_1e42414c0_expr(_self_.get()._field_oc.get()._field_ec, _24133_it.get()._field_Expr);
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	} else {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("for (; ", 7));
		if ((_24133_it.get()._field_Expr != nullptr)) {
			_1e42414c0_expr(_self_.get()._field_oc.get()._field_ec, _24133_it.get()._field_Expr);
		};
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("; ", 2));
		if ((_24133_it.get()._field_Next != nullptr)) {
			_1e4232cb9_st(_self_, _24133_it.get()._field_Next);
		};
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	};
	_1e428da5b_addIndent(_self_.get()._field_oc);
	_1e4290299_indent(_self_.get()._field_oc);
	_1e42332b4_scope(_self_, _24133_it.get()._field_Scope);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1e428ea4b_doneIndent(_self_.get()._field_oc);
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, static__1e424a0de_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_24133_it))));
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, static__1e4249d47_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_24133_it))));
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1e422ebb7_rangeIter(jule::Ptr<_1e422d358_scopeCoder> _self_, jule::Ptr<_1e31d88db_RangeIter> _27433_it) {
	{
		
		if ((_1e3137e45_Slc(_27433_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e68b39ca:;
			{
				_1e422dbc7_rangeIndexIter(_self_, _27433_it);
			}
		}
		else if ((_1e3137bd1_Arr(_27433_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e68b369a:;
			{
				_1e422dbc7_rangeIndexIter(_self_, _27433_it);
			}
		}
		else if ((_1e31388e6_Map(_27433_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e68b3711:;
			{
				_1e422de4c_rangeHashmapIter(_self_, _27433_it);
			}
		}
		else {
			_case_begin_1e68b3634:;
			{
				_1e422dbc7_rangeIndexIter(_self_, _27433_it);
			}
		}
		_match_end_1e68b3557:;
	};
}



inline void _1e422ee3c_cont(jule::Ptr<_1e422d358_scopeCoder> _self_, jule::Ptr<_1e31d8cd7_ContSt> _28724_c) {
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1e428d2b9_write(_self_.get()._field_oc, static__1e424a0de_iterNext(_28724_c.get()._field_It));
}



inline void _1e42301b2_label(jule::Ptr<_1e422d358_scopeCoder> _self_, jule::Ptr<_1e31d947a_Label> _29225_l) {
	_1e428d2b9_write(_self_.get()._field_oc, static__1e424a386_label(_29225_l.get()._field_Ident));
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(":", 1));
}



inline void _1e4230437_gotoSt(jule::Ptr<_1e422d358_scopeCoder> _self_, jule::Ptr<_1e31d9766_GotoSt> _29726_gt) {
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1e428d2b9_write(_self_.get()._field_oc, static__1e424a386_label(_29726_gt.get()._field_Ident));
}



inline void _1e42306ac_postfix(jule::Ptr<_1e422d358_scopeCoder> _self_, jule::Ptr<_1e31d9b1d_Postfix> _30231_p) {
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1e42414c0_expr(_self_.get()._field_oc.get()._field_ec, _30231_p.get()._field_Expr);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(")", 1));
	_1e428d2b9_write(_self_.get()._field_oc, _30231_p.get()._field_Op);
}



inline void _1e4230932_assign(jule::Ptr<_1e422d358_scopeCoder> _self_, jule::Ptr<_1e31da091_Assign> _30930_a) {
	_1e42414c0_expr(_self_.get()._field_oc.get()._field_ec, _30930_a.get()._field_L.get()._field_Model);
	_1e428d2b9_write(_self_.get()._field_oc, _30930_a.get()._field_Op.get()._field_Kind);
	_1e42414c0_expr(_self_.get()._field_oc.get()._field_ec, _30930_a.get()._field_R.get()._field_Model);
}



inline void _1e4230ba7_multiAssign(jule::Ptr<_1e422d358_scopeCoder> _self_, jule::Ptr<_1e31da448_MultiAssign> _31535_a) {
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("std::tie(", 9));
	{
		auto &expr = _31535_a.get()._field_L;
		auto it = expr.begin();
		_iter_begin_1e68bcbd2:;
		if (it != expr.end()) {
			jule::I64 _31714_i = it - expr.begin();
			jule::Any _31721_l = *it;
			{
				if ((_31721_l == nullptr)) {
					_1e428d2b9_write(_self_.get()._field_oc, jule::Str("std::ignore", 11));
				} else {
					_1e42414c0_expr(_self_.get()._field_oc.get()._field_ec, _31721_l);
				};
				if (((_31535_a.get()._field_L.len() - _31714_i) > 1LL)) {
					_1e428d2b9_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1e68bcbd2:;
			++it;
			_31714_i++;
			goto _iter_begin_1e68bcbd2;
		}
		_iter_end_1e68bcbd2:;
	};
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(") = ", 4));
	_1e42414c0_expr(_self_.get()._field_oc.get()._field_ec, _31535_a.get()._field_R);
}



inline jule::Fn<void(void)> _1e4230eb5_matchExpr(jule::Ptr<_1e422d358_scopeCoder> _self_, jule::Ptr<_1e31da987_Match> _33133_m) {
	if ((!(_1e3109950_IsConst(_33133_m.get()._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1e428d2b9_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
		});
	};
	if (((!(_1e257e26b_IsBool(_33133_m.get()._field_Expr.get()._field_Constant.ptr()))) || (!(_1e257bdc3_ReadBool(_33133_m.get()._field_Expr.get()._field_Constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1e424124a_model(_self_.get()._field_oc.get()._field_ec, _33133_m.get()._field_Expr.get()._field_Model);
		});
	};
	return nullptr;
}



inline void _1e42312d4_case(jule::Ptr<_1e422d358_scopeCoder> _self_, jule::Ptr<_1e31da987_Match> _34128_m, jule::Ptr<_1e31db4d2_Case> _34143_c) {
	if (((_34143_c.get()._field_Exprs.len() != 0LL) && (!(_1e31dae93_IsGenericTypeMatch(_34128_m.ptr()))))) {
		if (((_34128_m.get()._field_Cases.len() > 0LL) && (_34128_m.get()._field_Cases[0LL] == _34143_c))) {
			_1e428d2b9_write(_self_.get()._field_oc, jule::Str("if (", 4));
		} else {
			_1e428d2b9_write(_self_.get()._field_oc, jule::Str("else if (", 9));
		};
		{
			auto &expr = _34143_c.get()._field_Exprs;
			auto it = expr.begin();
			_iter_begin_1e68c5c73:;
			if (it != expr.end()) {
				jule::I64 _34818_i = it - expr.begin();
				jule::Ptr<_1e310908c_Data> _34825_expr = *it;
				{
					{
						
						if ((!(_34128_m.get()._field_TypeMatch))) {
							_case_begin_1e68c812c:;
							{
								jule::Fn<void(void)> _35125_caseExpr = _1e4230eb5_matchExpr(_self_, _34128_m);;
								if (_1e3109c5d_GoodOperand(_34128_m.get()._field_Expr.ptr(), _34825_expr)) {
									if ((_35125_caseExpr != nullptr)) {
										_35125_caseExpr();
										_1e428d2b9_write(_self_.get()._field_oc, jule::Str(" == ", 4));
									};
									_1e42414c0_expr(_self_.get()._field_oc.get()._field_ec, _34825_expr.get()._field_Model);
								} else {
									_1e42414c0_expr(_self_.get()._field_oc.get()._field_ec, _34825_expr.get()._field_Model);
									if ((_35125_caseExpr != nullptr)) {
										_1e428d2b9_write(_self_.get()._field_oc, jule::Str(" == ", 4));
										_35125_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1e68c6a87:;
							{
								_1e428d2b9_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
								_1e428d2b9_write(_self_.get()._field_oc, jule::Str(".type_is<", 9));
								_1e42414c0_expr(_self_.get()._field_oc.get()._field_ec, _34825_expr.get()._field_Model);
								_1e428d2b9_write(_self_.get()._field_oc, jule::Str(">()", 3));
							}
						}
						_match_end_1e68c69aa:;
					};
					if (((_34143_c.get()._field_Exprs.len() - _34818_i) > 1LL)) {
						_1e428d2b9_write(_self_.get()._field_oc, jule::Str(" || ", 4));
					};
				}
				_iter_next_1e68c5c73:;
				++it;
				_34818_i++;
				goto _iter_begin_1e68c5c73;
			}
			_iter_end_1e68c5c73:;
		};
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str(") ", 2));
	} else if (((_34128_m.get()._field_Default == _34143_c) && (_34128_m.get()._field_Cases.len() != 0LL))) {
		_1e4290299_indent(_self_.get()._field_oc);
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("else ", 5));
	};
	_1e428da5b_addIndent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, static__1e424a8c5_caseBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_34143_c))));
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	if ((_34143_c.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		_1e4290299_indent(_self_.get()._field_oc);
		_1e42332b4_scope(_self_, _34143_c.get()._field_Scope);
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("\n", 1));
	};
	_1e428ea4b_doneIndent(_self_.get()._field_oc);
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1e4231559_matchSt(jule::Ptr<_1e422d358_scopeCoder> _self_, jule::Ptr<_1e31da987_Match> _40031_m) {
	if (((_40031_m.get()._field_Cases.len() == 0LL) && (_40031_m.get()._field_Default == nullptr))) {
		return;;
	};
	jule::Bool _40513_genericTypeMatch = _1e31dae93_IsGenericTypeMatch(_40031_m.ptr());;
	if ((_40513_genericTypeMatch && ((_40031_m.get()._field_Default == nullptr) || (_40031_m.get()._field_Default.get()._field_Scope.get()._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1e428da5b_addIndent(_self_.get()._field_oc);
	_1e4290299_indent(_self_.get()._field_oc);
	if (((!(_40513_genericTypeMatch)) && (!(_1e3109950_IsConst(_40031_m.get()._field_Expr.ptr()))))) {
		if ((_1d42c9c1c_Copy && _1e423388b_isCopyOptimizable(_40031_m.get()._field_Expr))) {
			_1e428d2b9_write(_self_.get()._field_oc, jule::Str("auto &_match_expr{ ", 19));
		} else {
			_1e428d2b9_write(_self_.get()._field_oc, jule::Str("auto _match_expr{ ", 18));
		};
		_1e42414c0_expr(_self_.get()._field_oc.get()._field_ec, _40031_m.get()._field_Expr.get()._field_Model);
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str(" };\n", 4));
		_1e4290299_indent(_self_.get()._field_oc);
	};
	if ((_40031_m.get()._field_Cases.len() > 0LL)) {
		{
			auto &expr = _40031_m.get()._field_Cases;
			auto it = expr.begin();
			_iter_begin_1e68dc8c2:;
			if (it != expr.end()) {
				jule::Ptr<_1e31db4d2_Case> _42925_c = *it;
				{
					if ((_42925_c == nullptr)) {
						goto _iter_next_1e68dc8c2;
					};
					_1e428d2b9_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1e4290299_indent(_self_.get()._field_oc);
					_1e42312d4_case(_self_, _40031_m,_42925_c);
				}
				_iter_next_1e68dc8c2:;
				++it;
				goto _iter_begin_1e68dc8c2;
			}
			_iter_end_1e68dc8c2:;
		};
	};
	if ((_40031_m.get()._field_Default != nullptr)) {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1e42312d4_case(_self_, _40031_m,_40031_m.get()._field_Default);
	};
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, static__1e424a62d_matchEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_40031_m))));
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(":;", 2));
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1e428ea4b_doneIndent(_self_.get()._field_oc);
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1e42317ce_fallSt(jule::Ptr<_1e422d358_scopeCoder> _self_, jule::Ptr<_1e31dba87_FallSt> _45626_f) {
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1e428d2b9_write(_self_.get()._field_oc, static__1e424a8c5_caseBegin(_45626_f.get()._field_DestCase));
}



inline void _1e4231a54_breakSt(jule::Ptr<_1e422d358_scopeCoder> _self_, jule::Ptr<_1e31d918e_BreakSt> _46127_b) {
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	if ((_46127_b.get()._field_It != 0LLU)) {
		_1e428d2b9_write(_self_.get()._field_oc, static__1e4249d47_iterEnd(_46127_b.get()._field_It));
	} else {
		_1e428d2b9_write(_self_.get()._field_oc, static__1e424a62d_matchEnd(_46127_b.get()._field_Mtch));
	};
}



inline void _1e4231cc9_retWithVars(jule::Ptr<_1e422d358_scopeCoder> _self_, jule::Ptr<_1e31dc00a_RetSt> _47035_r) {
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_47035_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1e428d2b9_write(_self_.get()._field_oc, static__1e42b5852_kind(_47035_r.get()._field_Func.get()._field_Result));
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), ", 15));
	};
	if ((_47035_r.get()._field_Vars.len() > 1LL)) {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	};
	{
		auto &expr = _47035_r.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1e68e801a:;
		if (it != expr.end()) {
			jule::I64 _48014_i = it - expr.begin();
			jule::Ptr<_1e322a147_Var> _48021_v = *it;
			{
				if (_1d42b6b71_IsIgnoreIdent(_48021_v.get()._field_Ident)) {
					_1e42419ba_initExpr(_self_.get()._field_oc.get()._field_ec, _48021_v.get()._field_Kind.get()._field_Kind);
				} else {
					_1e428d2b9_write(_self_.get()._field_oc, static__1e4249808_var(_48021_v));
				};
				if (((_47035_r.get()._field_Vars.len() - _48014_i) > 1LL)) {
					_1e428d2b9_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1e68e801a:;
			++it;
			_48014_i++;
			goto _iter_begin_1e68e801a;
		}
		_iter_end_1e68e801a:;
	};
	if ((_47035_r.get()._field_Vars.len() > 1LL)) {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	if (_47035_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1e423204e_retTuple(jule::Ptr<_1e422d358_scopeCoder> _self_, jule::Ptr<_1e31dc00a_RetSt> _50032_r) {
	jule::Slice<jule::Ptr<_1e310908c_Data>> _50117_datas = _50032_r.get()._field_Expr.operator jule::Ptr<_1e2586828_TupleExprModel>().get()._field_Datas;;
	{
		auto &expr = _50032_r.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1e68ec4e7:;
		if (it != expr.end()) {
			jule::I64 _50214_i = it - expr.begin();
			jule::Ptr<_1e322a147_Var> _50221_v = *it;
			{
				if (_1d42b6b71_IsIgnoreIdent(_50221_v.get()._field_Ident)) {
					goto _iter_next_1e68ec4e7;
				};
				jule::Any _50621_model = _50117_datas[_50214_i].get()._field_Model;;
				if ((_50621_model == _50221_v)) {
					goto _iter_next_1e68ec4e7;
				};
				_1e428d2b9_write(_self_.get()._field_oc, static__1e4249808_var(_50221_v));
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1e42414c0_expr(_self_.get()._field_oc.get()._field_ec, _50621_model);
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				_1e4290299_indent(_self_.get()._field_oc);
			}
			_iter_next_1e68ec4e7:;
			++it;
			_50214_i++;
			goto _iter_begin_1e68ec4e7;
		}
		_iter_end_1e68ec4e7:;
	};
	if (_50032_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1e428d2b9_write(_self_.get()._field_oc, static__1e42b5852_kind(_50032_r.get()._field_Func.get()._field_Result));
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
	} else {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("return ", 7));
	};
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	{
		auto &expr = _50117_datas;
		auto it = expr.begin();
		_iter_begin_1e6902574:;
		if (it != expr.end()) {
			jule::I64 _52714_i = it - expr.begin();
			jule::Ptr<_1e310908c_Data> _52721_d = *it;
			{
				jule::Ptr<_1e322a147_Var> _52821_v = _50032_r.get()._field_Vars[_52714_i];;
				if (_1d42b6b71_IsIgnoreIdent(_52821_v.get()._field_Ident)) {
					_1e42414c0_expr(_self_.get()._field_oc.get()._field_ec, _52721_d.get()._field_Model);
				} else {
					_1e428d2b9_write(_self_.get()._field_oc, static__1e4249808_var(_52821_v));
				};
				if (((_50117_datas.len() - _52714_i) > 1LL)) {
					_1e428d2b9_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1e6902574:;
			++it;
			_52714_i++;
			goto _iter_begin_1e6902574;
		}
		_iter_end_1e6902574:;
	};
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_50032_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1e42322c4_retWithExprs(jule::Ptr<_1e422d358_scopeCoder> _self_, jule::Ptr<_1e31dc00a_RetSt> _54536_r) {
	if ((_54536_r.get()._field_Vars.len() > 1LL)) {
		_1e423204e_retTuple(_self_, _54536_r);
		return;;
	};
	if ((_54536_r.get()._field_Vars.len() > 0LL)) {
		jule::Ptr<_1e322a147_Var> _55321_v = _54536_r.get()._field_Vars[0LL];;
		if (((!(_1d42b6b71_IsIgnoreIdent(_55321_v.get()._field_Ident))) && (_54536_r.get()._field_Expr != _55321_v))) {
			jule::Str _55521_ident = static__1e4249808_var(_55321_v);;
			_1e428d2b9_write(_self_.get()._field_oc, _55521_ident);
			_1e428d2b9_write(_self_.get()._field_oc, jule::Str(" = ", 3));
			_1e42414c0_expr(_self_.get()._field_oc.get()._field_ec, _54536_r.get()._field_Expr);
			_1e428d2b9_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			_1e4290299_indent(_self_.get()._field_oc);
			if (_54536_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
				_1e428d2b9_write(_self_.get()._field_oc, static__1e42b5852_kind(_54536_r.get()._field_Func.get()._field_Result));
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
				_1e428d2b9_write(_self_.get()._field_oc, _55521_ident);
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str(")", 1));
			} else {
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str("return ", 7));
				_1e428d2b9_write(_self_.get()._field_oc, _55521_ident);
			};
			return;;
		};
	};
	if (_54536_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1e428d2b9_write(_self_.get()._field_oc, static__1e42b5852_kind(_54536_r.get()._field_Func.get()._field_Result));
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
		_1e42414c0_expr(_self_.get()._field_oc.get()._field_ec, _54536_r.get()._field_Expr);
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("return ", 7));
	_1e42414c0_expr(_self_.get()._field_oc.get()._field_ec, _54536_r.get()._field_Expr);
	return;;
}



inline void _1e4232549_retSt(jule::Ptr<_1e422d358_scopeCoder> _self_, jule::Ptr<_1e31dc00a_RetSt> _58929_r) {
	if (((_58929_r.get()._field_Expr == nullptr) && (_58929_r.get()._field_Vars.len() == 0LL))) {
		if (_58929_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_1e428d2b9_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();", 31));
			return;;
		};
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("return;", 7));
		return;;
	};
	if ((_58929_r.get()._field_Expr == nullptr)) {
		_1e4231cc9_retWithVars(_self_, _58929_r);
		return;;
	};
	_1e42322c4_retWithExprs(_self_, _58929_r);
}



inline void _1e4232a44_var(jule::Ptr<_1e422d358_scopeCoder> _self_, jule::Ptr<_1e322a147_Var> _62427_v) {
	if ((!(_62427_v.get()._field_Constant))) {
		_1e42abd43_var(_self_.get()._field_oc, _62427_v);
	};
}



inline void _1e4232cb9_st(jule::Ptr<_1e422d358_scopeCoder> _self_, jule::Any _63126_st) {
	if ((_63126_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _63126_st };
		
		if (_match_expr.type_is<jule::Ptr<_1e31d6c3b_Scope>>()) {
			_case_begin_1e6918920:;
			{
				_1e42332b4_scope(_self_, _63126_st.operator jule::Ptr<_1e31d6c3b_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e322a147_Var>>()) {
			_case_begin_1e69185ce:;
			{
				_1e4232a44_var(_self_, _63126_st.operator jule::Ptr<_1e322a147_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e310908c_Data>>()) {
			_case_begin_1e691903b:;
			{
				_1e42414c0_expr(_self_.get()._field_oc.get()._field_ec, _63126_st.operator jule::Ptr<_1e310908c_Data>().get()._field_Model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e31d7797_Conditional>>()) {
			_case_begin_1e69190a2:;
			{
				_1e422e447_conditional(_self_, _63126_st.operator jule::Ptr<_1e31d7797_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e31d7a83_InfIter>>()) {
			_case_begin_1e6919118:;
			{
				_1e422e6bc_infIter(_self_, _63126_st.operator jule::Ptr<_1e31d7a83_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e31d8006_WhileIter>>()) {
			_case_begin_1e691917e:;
			{
				_1e422e942_whileIter(_self_, _63126_st.operator jule::Ptr<_1e31d8006_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e31d88db_RangeIter>>()) {
			_case_begin_1e69191e5:;
			{
				_1e422ebb7_rangeIter(_self_, _63126_st.operator jule::Ptr<_1e31d88db_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e31d8cd7_ContSt>>()) {
			_case_begin_1e691925b:;
			{
				_1e422ee3c_cont(_self_, _63126_st.operator jule::Ptr<_1e31d8cd7_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e31d947a_Label>>()) {
			_case_begin_1e69192c2:;
			{
				_1e42301b2_label(_self_, _63126_st.operator jule::Ptr<_1e31d947a_Label>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e31d9766_GotoSt>>()) {
			_case_begin_1e6919338:;
			{
				_1e4230437_gotoSt(_self_, _63126_st.operator jule::Ptr<_1e31d9766_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e31d9b1d_Postfix>>()) {
			_case_begin_1e691939e:;
			{
				_1e42306ac_postfix(_self_, _63126_st.operator jule::Ptr<_1e31d9b1d_Postfix>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e31da091_Assign>>()) {
			_case_begin_1e6919415:;
			{
				_1e4230932_assign(_self_, _63126_st.operator jule::Ptr<_1e31da091_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e31da448_MultiAssign>>()) {
			_case_begin_1e691948c:;
			{
				_1e4230ba7_multiAssign(_self_, _63126_st.operator jule::Ptr<_1e31da448_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e31da987_Match>>()) {
			_case_begin_1e6919514:;
			{
				_1e4231559_matchSt(_self_, _63126_st.operator jule::Ptr<_1e31da987_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e31dba87_FallSt>>()) {
			_case_begin_1e691958b:;
			{
				_1e42317ce_fallSt(_self_, _63126_st.operator jule::Ptr<_1e31dba87_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e31d918e_BreakSt>>()) {
			_case_begin_1e6919613:;
			{
				_1e4231a54_breakSt(_self_, _63126_st.operator jule::Ptr<_1e31d918e_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e31dc00a_RetSt>>()) {
			_case_begin_1e691968a:;
			{
				_1e4232549_retSt(_self_, _63126_st.operator jule::Ptr<_1e31dc00a_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e10cb072_PushToSliceExprModel>>()) {
			_case_begin_1e6919712:;
			{
				_1e423e1d2_pushToSlice(_self_.get()._field_oc.get()._field_ec, _63126_st.operator jule::Ptr<_1e10cb072_PushToSliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e12489e7_MutSlicingExprModel>>()) {
			_case_begin_1e6919789:;
			{
				_1e4240c50_mutSlicing(_self_.get()._field_oc.get()._field_ec, _63126_st.operator jule::Ptr<_1e12489e7_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e17484d0_StrInsertBeginExprModel>>()) {
			_case_begin_1e6919811:;
			{
				_1e4240ec5_strInsertBegin(_self_.get()._field_oc.get()._field_ec, _63126_st.operator jule::Ptr<_1e17484d0_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_1e6918326:;
			{
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1e69182c1:;
	};
}



inline void _1e423303e_scopeStmts(jule::Ptr<_1e422d358_scopeCoder> _self_, jule::Ptr<_1e31d6c3b_Scope>& _68135_s) {
	{
		auto &expr = _68135_s.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1e6924761:;
		if (it != expr.end()) {
			jule::Any _68221_st = *it;
			{
				_1e4290299_indent(_self_.get()._field_oc);
				_1e4232cb9_st(_self_, _68221_st);
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1e6924761:;
			++it;
			goto _iter_begin_1e6924761;
		}
		_iter_end_1e6924761:;
	};
}



inline void _1e42332b4_scope(jule::Ptr<_1e422d358_scopeCoder> _self_, jule::Ptr<_1e31d6c3b_Scope> _69029_s) {
	_1e428da5b_addIndent(_self_.get()._field_oc);
	if (_69029_s.get()._field_Deferred) {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("__JULE_DEFER(", 13));
	};
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1e423303e_scopeStmts(_self_, _69029_s);
	_1e428ea4b_doneIndent(_self_.get()._field_oc);
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("}", 1));
	if (_69029_s.get()._field_Deferred) {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str(");", 2));
	};
}



inline void _1e4233539_funcScope(jule::Ptr<_1e422d358_scopeCoder> _self_, jule::Ptr<_1e258dee5_FnIns> _70633_f) {
	if ((_70633_f.get()._field_Scope == nullptr)) {
		return;;
	};
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1e428da5b_addIndent(_self_.get()._field_oc);
	if ((!(_1e258b7a6_IsVoid(_70633_f.get()._field_Decl.ptr())))) {
		jule::Slice<jule::Ptr<_1e3134da9_TypeKind>> _71321_types = _1e2590117_Types(_70633_f.ptr());;
		{
			auto &expr = _70633_f.get()._field_Decl.get()._field_Result.get()._field_Idents;
			auto it = expr.begin();
			_iter_begin_1e692a525:;
			if (it != expr.end()) {
				jule::I64 _71417_i = it - expr.begin();
				jule::Ptr<_1d42b43cc_Token> _71420_ident = *it;
				{
					if ((_1d42b6b71_IsIgnoreIdent(_71420_ident.get()._field_Kind) || _1d42b6e18_IsAnonIdent(_71420_ident.get()._field_Kind))) {
						goto _iter_next_1e692a525;
					};
					_1e4290299_indent(_self_.get()._field_oc);
					_1e428d2b9_write(_self_.get()._field_oc, static__1e42b5852_kind(_71321_types[_71417_i]));
					_1e428d2b9_write(_self_.get()._field_oc, jule::Str(" ", 1));
					_1e428d2b9_write(_self_.get()._field_oc, static__1e42481ec_toLocal(_71420_ident.get()._field_Row,_71420_ident.get()._field_Column,_71420_ident.get()._field_Kind));
					_1e428d2b9_write(_self_.get()._field_oc, jule::Str(" = ", 3));
					_1e42419ba_initExpr(_self_.get()._field_oc.get()._field_ec, _71321_types[_71417_i]);
					_1e428d2b9_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				}
				_iter_next_1e692a525:;
				++it;
				_71417_i++;
				goto _iter_begin_1e692a525;
			}
			_iter_end_1e692a525:;
		};
	};
	_1e423303e_scopeStmts(_self_, _70633_f.get()._field_Scope);
	if ((_70633_f.get()._field_Decl.get()._field_Exceptional && _1e258b7a6_IsVoid(_70633_f.get()._field_Decl.ptr()))) {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str(" return jule::VoidExceptional();\n", 33));
	};
	_1e428ea4b_doneIndent(_self_.get()._field_oc);
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("}", 1));
}







std::ostream &operator<<(std::ostream &_Stream, _1e422d358_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e4235d77_exprCoder> static__1e4236273_new(jule::Ptr<_1e42a9e62_ObjectCoder>& _9724_oc) {
	return jule::new_ptr<_1e4235d77_exprCoder>(_1e4235d77_exprCoder{._field_oc=_9724_oc});
}



inline void _1e42364e8_string(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e23b4a96_Const>& _10327_c) {
	jule::Str _10413_content = _1e257c137_ReadStr(_10327_c.ptr());;
	if ((_10413_content.len() == 0LL)) {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		return;;
	};
	jule::Slice<jule::U8> _10913_bytes = static_cast<jule::Slice<jule::U8>>(_10413_content);;
	jule::Str _11013_len = _1e31c5257_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_10913_bytes.len())),10LL);;
	jule::Str _11113_lit = _1e42426be_cstrLit(_10913_bytes);;
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1e428d2b9_write(_self_.get()._field_oc, _11113_lit);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1e428d2b9_write(_self_.get()._field_oc, _11013_len);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e423676d_boolean(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e23b4a96_Const>& _12028_c) {
	if (_1e257bdc3_ReadBool(_12028_c.ptr())) {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("true", 4));
		return;;
	};
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("false", 5));
}



inline void _1e4236949_nilLit(jule::Ptr<_1e4235d77_exprCoder> _self_) {
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
}



inline jule::Bool _1e4236c57_ftoaSpecialCases(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::F64& _13237_x) {
	{
		
		if (_1e2ead02e_IsNaN(_13237_x)) {
			_case_begin_1e6949e6d:;
			{
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str("NAN", 3));
			}
		}
		else if (_1e2eb5333_IsInf(_13237_x,1LL)) {
			_case_begin_1e6949731:;
			{
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str("INFINITY", 8));
			}
		}
		else if (_1e2eb5333_IsInf(_13237_x,-1LL)) {
			_case_begin_1e6949797:;
			{
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1e69496ba:;
			{
				return false;
			}
		}
		_match_end_1e69495dd:;
	};
	return true;
}



inline void _1e4236ecc_float32(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e23b4a96_Const>& _14628_c) {
	jule::F64 _14713_x = _1e257cad8_AsF64(_14628_c.ptr());;
	if (_1e4236c57_ftoaSpecialCases(_self_, _14713_x)) {
		return;;
	};
	{
		
		if ((_14713_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1e694c943:;
			{
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str("jule::MAX_F32", 13));
			}
		}
		else if ((_14713_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1e694c646:;
			{
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1e694beb4:;
			{
				_1e428d2b9_write(_self_.get()._field_oc, _1e42429cc_ftoa(_14713_x,32LL));
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str("f", 1));
			}
		}
		_match_end_1e694c37c:;
	};
}



inline void _1e4237252_float64(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e23b4a96_Const>& _16528_c) {
	jule::F64 _16613_x = _1e257cad8_AsF64(_16528_c.ptr());;
	if (_1e4236c57_ftoaSpecialCases(_self_, _16613_x)) {
		return;;
	};
	{
		
		if ((_16613_x == jule::MAX_F64)) {
			_case_begin_1e695098a:;
			{
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str("jule::MAX_F64", 13));
			}
		}
		else if ((_16613_x == jule::MIN_F64)) {
			_case_begin_1e69510ea:;
			{
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1e695000b:;
			{
				_1e428d2b9_write(_self_.get()._field_oc, _1e42429cc_ftoa(_16613_x,64LL));
			}
		}
		_match_end_1e69503c4:;
	};
}



inline void _1e4237571_constant(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e23b4a96_Const> _18432_c, jule::Bool _18443_fx32) {
	{
		
		if (_1e257e4d0_IsStr(_18432_c.ptr())) {
			_case_begin_1e6952904:;
			{
				_1e42364e8_string(_self_, _18432_c);
			}
		}
		else if (_1e257e26b_IsBool(_18432_c.ptr())) {
			_case_begin_1e695296a:;
			{
				_1e423676d_boolean(_self_, _18432_c);
			}
		}
		else if (_1e257e744_IsF64(_18432_c.ptr())) {
			_case_begin_1e69529d1:;
			{
				{
					
					if (_18443_fx32) {
						_case_begin_1e6954bc0:;
						{
							_1e4236ecc_float32(_self_, _18432_c);
						}
					}
					else {
						_case_begin_1e6954829:;
						{
							_1e4237252_float64(_self_, _18432_c);
						}
					}
					_match_end_1e695474c:;
				};
			}
		}
		else if (_1e257dc93_IsI64(_18432_c.ptr())) {
			_case_begin_1e6952a47:;
			{
				_1e428d2b9_write(_self_.get()._field_oc, _1e4242c74_itoa(static_cast<jule::I64>(_1e257b8ea_ReadI64(_18432_c.ptr()))));
			}
		}
		else if (_1e257e007_IsU64(_18432_c.ptr())) {
			_case_begin_1e6953394:;
			{
				_1e428d2b9_write(_self_.get()._field_oc, _1e424301b_utoa(static_cast<jule::U64>(_1e257bb5e_ReadU64(_18432_c.ptr()))));
			}
		}
		else if (_1e257e9a8_IsNil(_18432_c.ptr())) {
			_case_begin_1e695340a:;
			{
				_1e4236949_nilLit(_self_);
			}
		}
		else {
			_case_begin_1e695288d:;
			{
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1e69527b1:;
	};
}



inline void _1e4237939_divByZeroBinary(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1d42b43cc_Token>& _20836_op, jule::Ptr<_1e2583c87_OperandExprModel>& _20853_l, jule::Ptr<_1e2583c87_OperandExprModel>& _20880_r) {
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("jule::", 6));
	{
		auto &_match_expr{ _20836_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("/=", 2)) {
			_case_begin_1e6957cc2:;
			{
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str("div(", 4));
			}
		}
		else if (_match_expr == jule::Str("%", 1) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1e6957d38:;
			{
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str("mod(", 4));
			}
		}
		_match_end_1e6957bc3:;
	};
	if ((!(_22eb614e2_Production))) {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1e4291685_locInfo(_self_.get()._field_oc, _20836_op);
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1e42414c0_expr(_self_, _20853_l.get()._field_Model);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1e42414c0_expr(_self_, _20880_r.get()._field_Model);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e4237bae_unsafeBinary(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e2583e74_BinopExprModel> _23036_m) {
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1e424124a_model(_self_, _23036_m.get()._field_Left.get()._field_Model);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1e428d2b9_write(_self_.get()._field_oc, _23036_m.get()._field_Op.get()._field_Kind);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1e424124a_model(_self_, _23036_m.get()._field_Right.get()._field_Model);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e4237e34_binary(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e2583e74_BinopExprModel> _24030_m) {
	{
		auto &_match_expr{ _24030_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_1e695e416:;
			{
				if ((_1e313841d_Struct(_24030_m.get()._field_Left.get()._field_Kind.ptr()) == nullptr)) {
					_1e4237939_divByZeroBinary(_self_, _24030_m.get()._field_Op,_24030_m.get()._field_Left,_24030_m.get()._field_Right);
					return;;
				};
			}
		}
		_match_end_1e695e35b:;
	};
	_1e4237bae_unsafeBinary(_self_, _24030_m);
}



inline void _1e42381a9_var(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e322a147_Var> _25227_m) {
	if (_25227_m.get()._field_CppLinked) {
		jule::Ptr<_1e24d1e8d_Directive> _25417_d = _1e42b81b2_findDirective(_25227_m.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_25417_d != nullptr)) {
			_1e428d2b9_write(_self_.get()._field_oc, _1e42aec8b_concatAllParts(_25417_d.get()._field_Args));
			_1e428d2b9_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1e428d2b9_write(_self_.get()._field_oc, static__1e4249808_var(_25227_m));
}



inline void _1e423842e_structureIns(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e253220d_StructIns> _26336_m) {
	_1e428d2b9_write(_self_.get()._field_oc, static__1e42b4246_structureIns(_26336_m));
}



inline void _1e42386a4_unary(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e2584161_UnaryExprModel> _26729_m) {
	{
		auto &_match_expr{ _26729_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1e6963e98:;
			{
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str("(~(", 3));
				_1e42414c0_expr(_self_, _26729_m.get()._field_Expr.get()._field_Model);
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1e696400e:;
			{
				if ((_22eb614e2_Production || (_1e3137230_Sptr(_26729_m.get()._field_Expr.get()._field_Kind.ptr()) == nullptr))) {
					goto _match_end_1e6963ddd;
				};
				_1e42414c0_expr(_self_, _26729_m.get()._field_Expr.get()._field_Model);
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str(".get(\"", 6));
				_1e4291685_locInfo(_self_.get()._field_oc, _26729_m.get()._field_Op);
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str("\")", 2));
				return;;
			}
		}
		_match_end_1e6963ddd:;
	};
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1e428d2b9_write(_self_.get()._field_oc, _26729_m.get()._field_Op.get()._field_Kind);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1e42414c0_expr(_self_, _26729_m.get()._field_Expr.get()._field_Model);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1e4238929_structureLit(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e258453a_StructLitExprModel> _29136_m) {
	if (_29136_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("(", 1));
	};
	_1e428d2b9_write(_self_.get()._field_oc, static__1e42492b9_structureIns(_29136_m.get()._field_Strct));
	if (_29136_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("{", 1));
	if ((_29136_m.get()._field_Args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto &expr = _29136_m.get()._field_Strct.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1e696b5ee:;
			if (it != expr.end()) {
				jule::I64 _30417_i = it - expr.begin();
				jule::Ptr<_1e250d4d6_FieldIns> _30420_f = *it;
				{
					{
						auto &expr = _29136_m.get()._field_Args;
						auto it = expr.begin();
						_iter_begin_1e696c1c1:;
						if (it != expr.end()) {
							jule::Ptr<_1e258434d_StructArgExprModel> _30529_arg = *it;
							{
								if ((_30529_arg.get()._field_Field == _30420_f)) {
									_1e428d2b9_write(_self_.get()._field_oc, jule::Str(".", 1));
									_1e428d2b9_write(_self_.get()._field_oc, static__1e4249561_field(_30529_arg.get()._field_Field.get()._field_Decl));
									_1e428d2b9_write(_self_.get()._field_oc, jule::Str("=", 1));
									_1e42414c0_expr(_self_, _30529_arg.get()._field_Expr);
									if (((_29136_m.get()._field_Strct.get()._field_Fields.len() - _30417_i) > 1LL)) {
										_1e428d2b9_write(_self_.get()._field_oc, jule::Str(", ", 2));
									};
									goto _iter_next_1e696b5ee;
								};
							}
							_iter_next_1e696c1c1:;
							++it;
							goto _iter_begin_1e696c1c1;
						}
						_iter_end_1e696c1c1:;
					};
				}
				_iter_next_1e696b5ee:;
				++it;
				_30417_i++;
				goto _iter_begin_1e696b5ee;
			}
			_iter_end_1e696b5ee:;
		};
	};
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1e4238b9e_allocStructure(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e2584727_AllocStructLitExprModel> _32238_m) {
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1e428d2b9_write(_self_.get()._field_oc, static__1e42492b9_structureIns(_32238_m.get()._field_Lit.get()._field_Strct));
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1e4238929_structureLit(_self_, _32238_m.get()._field_Lit);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e4238e24_casting(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e2584914_CastingExprModel> _33031_m) {
	{
		
		if (((_1e3136ebb_Prim(_33031_m.get()._field_Kind.ptr()) != nullptr) && _1e313cd29_IsAny(_1e3136ebb_Prim(_33031_m.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1e6973073:;
			{
				_1e428d2b9_write(_self_.get()._field_oc, static__1e42b5852_kind(_33031_m.get()._field_Kind));
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1e424124a_model(_self_, _33031_m.get()._field_Expr);
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_1e3137494_Ptr(_33031_m.get()._field_ExprKind.ptr()) != nullptr) || (_1e3137494_Ptr(_33031_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6972c43:;
			{
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str("((", 2));
				_1e428d2b9_write(_self_.get()._field_oc, static__1e42b5852_kind(_33031_m.get()._field_Kind));
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str(")(", 2));
				_1e42414c0_expr(_self_, _33031_m.get()._field_Expr);
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str("))", 2));
			}
		}
		else if ((_1e3138682_Trait(_33031_m.get()._field_ExprKind.ptr()) != nullptr) || ((_1e3136ebb_Prim(_33031_m.get()._field_ExprKind.ptr()) != nullptr) && _1e313cd29_IsAny(_1e3136ebb_Prim(_33031_m.get()._field_ExprKind.ptr()).ptr())) || (_1e313796c_TypeEnum(_33031_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1e6972ca9:;
			{
				_1e424124a_model(_self_, _33031_m.get()._field_Expr);
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str(".", 1));
				if (_22eb614e2_Production) {
					_1e428d2b9_write(_self_.get()._field_oc, jule::Str("operator ", 9));
					_1e428d2b9_write(_self_.get()._field_oc, static__1e42b5852_kind(_33031_m.get()._field_Kind));
					_1e428d2b9_write(_self_.get()._field_oc, jule::Str("()", 2));
				} else {
					if ((_1e3137230_Sptr(_33031_m.get()._field_Kind.ptr()) != nullptr)) {
						_1e428d2b9_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
						_1e428d2b9_write(_self_.get()._field_oc, static__1e42b5852_kind(_1e3137230_Sptr(_33031_m.get()._field_Kind.ptr()).get()._field_Elem));
					} else {
						_1e428d2b9_write(_self_.get()._field_oc, jule::Str("cast<", 5));
						_1e428d2b9_write(_self_.get()._field_oc, static__1e42b5852_kind(_33031_m.get()._field_Kind));
					};
					_1e428d2b9_write(_self_.get()._field_oc, jule::Str(">(\"", 3));
					_1e4291685_locInfo(_self_.get()._field_oc, _33031_m.get()._field_Token);
					_1e428d2b9_write(_self_.get()._field_oc, jule::Str("\")", 2));
				};
			}
		}
		else if ((_1e3138682_Trait(_33031_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6972d20:;
			{
				_1e428d2b9_write(_self_.get()._field_oc, static__1e42b5852_kind(_33031_m.get()._field_Kind));
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1e42414c0_expr(_self_, _33031_m.get()._field_Expr);
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1e428d2b9_write(_self_.get()._field_oc, _1e31c54ee_Itoa(static_cast<jule::I64>(_1e427e61d_findTypeOffset(_self_.get()._field_oc.ptr(), _1e3138682_Trait(_33031_m.get()._field_Kind.ptr()),_33031_m.get()._field_ExprKind))));
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else {
			_case_begin_1e6972bcc:;
			{
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
				_1e428d2b9_write(_self_.get()._field_oc, static__1e42b5852_kind(_33031_m.get()._field_Kind));
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str(">(", 2));
				_1e42414c0_expr(_self_, _33031_m.get()._field_Expr);
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1e6972b00:;
	};
}



inline void _1e4239199_args(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Slice<jule::Any> _38128_args) {
	if ((_38128_args.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _38128_args;
		auto it = expr.begin();
		_iter_begin_1e6983649:;
		if (it != expr.end()) {
			jule::I64 _38514_i = it - expr.begin();
			jule::Any _38521_a = *it;
			{
				_1e42414c0_expr(_self_, _38521_a);
				if (((_38128_args.len() - _38514_i) > 1LL)) {
					_1e428d2b9_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1e6983649:;
			++it;
			_38514_i++;
			goto _iter_begin_1e6983649;
		}
		_iter_end_1e6983649:;
	};
}



inline void _1e423941e_modelForCall(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Any _39336_expr) {
	{
		auto &_match_expr{ _39336_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1e258dee5_FnIns>>()) {
			_case_begin_1e6985618:;
			{
				_1e423c202_funcIns(_self_, _39336_expr.operator jule::Ptr<_1e258dee5_FnIns>());
				return;;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2585d88_StructSubIdentExprModel>>()) {
			_case_begin_1e6985690:;
			{
				jule::Ptr<_1e2585d88_StructSubIdentExprModel> _39921_ssie = _39336_expr.operator jule::Ptr<_1e2585d88_StructSubIdentExprModel>();;
				if ((_39921_ssie.get()._field_Method != nullptr)) {
					_1e423c202_funcIns(_self_, _39921_ssie.get()._field_Method);
					return;;
				};
			}
		}
		_match_end_1e6985508:;
	};
	_1e424124a_model(_self_, _39336_expr);
}



inline void _1e4239694_pushCallInf(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e2584b01_FnCallExprModel>& _40832_m) {
	if ((_22eb614e2_Production || ((!(_40832_m.get()._field_Func.get()._field_Anon)) && (!(_1e424368c_isBuiltinCallHasDebuginf(_40832_m)))))) {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("(", 1));
		return;;
	};
	if (_40832_m.get()._field_Func.get()._field_Anon) {
		{
			auto &_match_expr{ _40832_m.get()._field_Expr };
			
			if (_match_expr.type_is<jule::Ptr<_1e2585d88_StructSubIdentExprModel>>()) {
				_case_begin_1e69889e5:;
				{
					if (_40832_m.get()._field_Expr.operator jule::Ptr<_1e2585d88_StructSubIdentExprModel>().get()._field_Field.get()._field_Decl.get()._field_Owner.get()._field_CppLinked) {
						_1e428d2b9_write(_self_.get()._field_oc, jule::Str("(", 1));
						return;;
					};
					goto _case_begin_1e6988bc1;
				}
			}
			else {
				_case_begin_1e6988bc1:;
				{
					_1e428d2b9_write(_self_.get()._field_oc, jule::Str(".call", 5));
				}
			}
			_match_end_1e6988aa0:;
		};
	};
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("(\"", 2));
	_1e4291685_locInfo(_self_.get()._field_oc, _40832_m.get()._field_Token);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("\"", 1));
	if ((_40832_m.get()._field_Args.len() != 0LL)) {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str(",", 1));
	};
}



inline jule::Bool _1e42399a2_isWrapped(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e2584b01_FnCallExprModel>& _43334_m) {
	if ((((!(_1e259037b_IsBuiltin(_43334_m.get()._field_Func.ptr()))) && (_43334_m.get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _1e258a134_IsSelf(_43334_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ _43334_m.get()._field_Expr };
			
			if (_match_expr.type_is<jule::Ptr<_1e2585d88_StructSubIdentExprModel>>()) {
				_case_begin_1e698c730:;
				{
					jule::Ptr<_1e2585d88_StructSubIdentExprModel> _43725_ssie = _43334_m.get()._field_Expr.operator jule::Ptr<_1e2585d88_StructSubIdentExprModel>();;
					{
						
						if (_1e258a398_IsRef(_43334_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()) || (_1e3137230_Sptr(_43725_ssie.get()._field_ExprKind.ptr()) != nullptr)) {
							_case_begin_1e698d05a:;
							{
								goto _match_end_1e698d5dd;
							}
						}
						else {
							_case_begin_1e698d654:;
							{
								if ((_1e313841d_Struct(_43725_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									if ((!(_43725_ssie.get()._field_Expr.get()._field_Lvalue))) {
										_1e428d2b9_write(_self_.get()._field_oc, jule::Str("({ auto _wrap_copy = ", 21));
										_1e424124a_model(_self_, _43725_ssie.get()._field_Expr.get()._field_Model);
										_1e428d2b9_write(_self_.get()._field_oc, jule::Str("; ", 2));
										return true;
									};
								};
							}
						}
						_match_end_1e698d5dd:;
					};
				}
			}
			_match_end_1e698c521:;
		};
	};
	return false;
}



inline void _1e4239c27_pureFuncCall(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e2584b01_FnCallExprModel>& _45737_m) {
	jule::Bool _45813_wrapped = _1e42399a2_isWrapped(_self_, _45737_m);;
	if (_45737_m.get()._field_IsCo) {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("__JULE_CO(", 10));
	};
	_1e423941e_modelForCall(_self_, _45737_m.get()._field_Expr);
	if ((!(_1e259037b_IsBuiltin(_45737_m.get()._field_Func.ptr())))) {
		if ((_45737_m.get()._field_Func.get()._field_Decl.get()._field_CppLinked && (_45737_m.get()._field_Func.get()._field_Generics.len() > 0LL))) {
			if ((!(_1e42b8547_hasDirective(_45737_m.get()._field_Func.get()._field_Decl.get()._field_Directives,jule::Str("cdef", 4))))) {
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str("<", 1));
				{
					auto &expr = _45737_m.get()._field_Func.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1e6994979:;
					if (it != expr.end()) {
						jule::I64 _46726_i = it - expr.begin();
						jule::Ptr<_1e313367c_InsGeneric> _46733_g = *it;
						{
							_1e428d2b9_write(_self_.get()._field_oc, static__1e42b5852_kind(_46733_g.get()._field_Kind));
							if (((_45737_m.get()._field_Func.get()._field_Generics.len() - _46726_i) > 1LL)) {
								_1e428d2b9_write(_self_.get()._field_oc, jule::Str(",", 1));
							};
						}
						_iter_next_1e6994979:;
						++it;
						_46726_i++;
						goto _iter_begin_1e6994979;
					}
					_iter_end_1e6994979:;
				};
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str(">", 1));
			};
		};
	};
	_1e4239694_pushCallInf(_self_, _45737_m);
	jule::Bool _47817_locinfo = false;;
	if ((((!(_1e259037b_IsBuiltin(_45737_m.get()._field_Func.ptr()))) && (_45737_m.get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _1e258a134_IsSelf(_45737_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ _45737_m.get()._field_Expr };
			
			if (_match_expr.type_is<jule::Ptr<_1e2585d88_StructSubIdentExprModel>>()) {
				_case_begin_1e699368c:;
				{
					jule::Ptr<_1e2585d88_StructSubIdentExprModel> _48225_ssie = _45737_m.get()._field_Expr.operator jule::Ptr<_1e2585d88_StructSubIdentExprModel>();;
					{
						
						if (_1e258a398_IsRef(_45737_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr())) {
							_case_begin_1e699a650:;
							{
								_1e424124a_model(_self_, _48225_ssie.get()._field_Expr.get()._field_Model);
							}
						}
						else if ((_1e3137230_Sptr(_48225_ssie.get()._field_ExprKind.ptr()) != nullptr)) {
							_case_begin_1e699abb1:;
							{
								_1e424124a_model(_self_, _48225_ssie.get()._field_Expr.get()._field_Model);
								_1e428d2b9_write(_self_.get()._field_oc, jule::Str(".ptr(", 5));
								if ((!(_22eb614e2_Production))) {
									_1e428d2b9_write(_self_.get()._field_oc, jule::Str("\"", 1));
									_1e4291685_locInfo(_self_.get()._field_oc, _45737_m.get()._field_Token);
									_1e428d2b9_write(_self_.get()._field_oc, jule::Str("\"", 1));
								};
								_1e428d2b9_write(_self_.get()._field_oc, jule::Str(")", 1));
							}
						}
						else {
							_case_begin_1e69992a8:;
							{
								if ((_1e313841d_Struct(_48225_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									_1e428d2b9_write(_self_.get()._field_oc, jule::Str("&", 1));
								};
								if (_45813_wrapped) {
									_1e428d2b9_write(_self_.get()._field_oc, jule::Str("_wrap_copy", 10));
								} else {
									_1e424124a_model(_self_, _48225_ssie.get()._field_Expr.get()._field_Model);
								};
							}
						}
						_match_end_1e6999242:;
					};
					if ((_45737_m.get()._field_Args.len() > 0LL)) {
						_1e428d2b9_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1e258596a_TraitSubIdentExprModel>>()) {
				_case_begin_1e699832e:;
				{
					_1e424124a_model(_self_, _45737_m.get()._field_Expr.operator jule::Ptr<_1e258596a_TraitSubIdentExprModel>().get()._field_Expr);
					if ((!(_22eb614e2_Production))) {
						_47817_locinfo=true;
					};
					if ((_45737_m.get()._field_Args.len() > 0LL)) {
						_1e428d2b9_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			_match_end_1e69981b9:;
		};
	};
	_1e4239199_args(_self_, _45737_m.get()._field_Args);
	if (_47817_locinfo) {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str(", \"", 3));
		_1e4291685_locInfo(_self_.get()._field_oc, _45737_m.get()._field_Token);
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("\"", 1));
	};
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_45813_wrapped) {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("; })", 4));
	};
	if (_45737_m.get()._field_IsCo) {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1e4239e9c_funcCall(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e2584b01_FnCallExprModel> _53632_m) {
	if (((_1e259037b_IsBuiltin(_53632_m.get()._field_Func.ptr()) || (!(_53632_m.get()._field_Func.get()._field_Decl.get()._field_Exceptional))) || ((_53632_m.get()._field_Except != nullptr) && (_53632_m.get()._field_Except.get()._field_Stmts.len() == 0LL)))) {
		_1e4239c27_pureFuncCall(_self_, _53632_m);
		return;;
	};
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1e428da5b_addIndent(_self_.get()._field_oc);
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("auto except = ", 14));
	_1e4239c27_pureFuncCall(_self_, _53632_m);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1e4290299_indent(_self_.get()._field_oc);
	if ((_53632_m.get()._field_Except != nullptr)) {
		if (((_53632_m.get()._field_Func.get()._field_Result == nullptr) || (!(_53632_m.get()._field_Assigned)))) {
			_1e428d2b9_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) ", 18));
			_1e42332b4_scope(_self_.get()._field_oc.get()._field_sc, _53632_m.get()._field_Except);
			_1e428d2b9_write(_self_.get()._field_oc, jule::Str("\n", 1));
		} else {
			jule::Bool _55821_forwarded = _1e42433c3_isForwarded(_53632_m.get()._field_Except);;
			_1e428d2b9_write(_self_.get()._field_oc, jule::Str("(except.ok()) ? (except.result) : (", 35));
			if (_55821_forwarded) {
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str("{", 1));
			};
			_1e42332b4_scope(_self_.get()._field_oc.get()._field_sc, _53632_m.get()._field_Except);
			if (_55821_forwarded) {
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str(" ", 1));
				_1e42419ba_initExpr(_self_, _53632_m.get()._field_Func.get()._field_Result);
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str(";}", 2));
			};
			_1e428d2b9_write(_self_.get()._field_oc, jule::Str(");\n", 3));
		};
		_1e428ea4b_doneIndent(_self_.get()._field_oc);
	} else {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1e4291685_locInfo(_self_.get()._field_oc, _53632_m.get()._field_Token);
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("\"));\n", 5));
		if ((!(_1e258b7a6_IsVoid(_53632_m.get()._field_Func.get()._field_Decl.ptr())))) {
			_1e4290299_indent(_self_.get()._field_oc);
			_1e428d2b9_write(_self_.get()._field_oc, jule::Str("(except.result);\n", 17));
		};
		_1e428ea4b_doneIndent(_self_.get()._field_oc);
	};
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1e423a222_slice(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e2584cdd_SliceExprModel> _58729_m) {
	if ((_58729_m.get()._field_Elems.len() == 0LL)) {
		_1e428d2b9_write(_self_.get()._field_oc, static__1e42b3179_asSlice(_58729_m.get()._field_ElemKind));
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	_1e428d2b9_write(_self_.get()._field_oc, static__1e42b3179_asSlice(_58729_m.get()._field_ElemKind));
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("::make({", 8));
	_1e4239199_args(_self_, _58729_m.get()._field_Elems);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1e423a497_indexing(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e2584eca_IndexingExprModel> _59932_m) {
	_1e424124a_model(_self_, _59932_m.get()._field_Expr.get()._field_Model);
	{
		
		if (_22eb614e2_Production || (_1e3137494_Ptr(_59932_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_1e31388e6_Map(_59932_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e69b3e71:;
			{
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1e42414c0_expr(_self_, _59932_m.get()._field_Index.get()._field_Model);
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1e69b4713:;
			{
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str(".at(\"", 5));
				_1e4291685_locInfo(_self_.get()._field_oc, _59932_m.get()._field_Token);
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str("\",", 2));
				_1e42414c0_expr(_self_, _59932_m.get()._field_Index.get()._field_Model);
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1e69b469c:;
	};
}



inline void _1e423a71c_unsafeIndexing(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1d42d4d15_UnsafeIndexingExprModel> _61838_m) {
	_1e424124a_model(_self_, _61838_m.get()._field_Node.get()._field_Expr.get()._field_Model);
	{
		
		if (_22eb614e2_Production || (_1e3137494_Ptr(_61838_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_1e31388e6_Map(_61838_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e69b731a:;
			{
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1e42414c0_expr(_self_, _61838_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1e69b8c01:;
			{
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str(".__at(", 6));
				_1e42414c0_expr(_self_, _61838_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1e69b8b8a:;
	};
}



inline void _1e423a992_anonFunc(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e25851b7_AnonFnExprModel> _63532_m) {
	_1e428d2b9_write(_self_.get()._field_oc, static__1e42b55aa_func(_63532_m.get()._field_Func));
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("([=]", 4));
	_1e42ab79e_paramsIns(_self_.get()._field_oc, _63532_m.get()._field_Func.get()._field_Params);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(" mutable -> ", 12));
	_1e428d2b9_write(_self_.get()._field_oc, static__1e42b506b_funcInsResult(_63532_m.get()._field_Func));
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1e4233539_funcScope(_self_.get()._field_oc.get()._field_sc, _63532_m.get()._field_Func);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e423ac17_map(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e2585591_MapExprModel> _64627_m) {
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("jule::Map<", 10));
	_1e428d2b9_write(_self_.get()._field_oc, static__1e42b5852_kind(_64627_m.get()._field_KeyKind));
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1e428d2b9_write(_self_.get()._field_oc, static__1e42b5852_kind(_64627_m.get()._field_ValKind));
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(">({", 3));
	if ((_64627_m.get()._field_Entries.len() > 0LL)) {
		{
			auto &expr = _64627_m.get()._field_Entries;
			auto it = expr.begin();
			_iter_begin_1e69c26bb:;
			if (it != expr.end()) {
				jule::I64 _65318_i = it - expr.begin();
				jule::Ptr<_1e25853a4_KeyValPairExprModel> _65325_pair = *it;
				{
					_1e428d2b9_write(_self_.get()._field_oc, jule::Str("{", 1));
					_1e42414c0_expr(_self_, _65325_pair.get()._field_Key);
					_1e428d2b9_write(_self_.get()._field_oc, jule::Str(",", 1));
					_1e42414c0_expr(_self_, _65325_pair.get()._field_Val);
					_1e428d2b9_write(_self_.get()._field_oc, jule::Str("}", 1));
					if (((_64627_m.get()._field_Entries.len() - _65318_i) > 1LL)) {
						_1e428d2b9_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_1e69c26bb:;
				++it;
				_65318_i++;
				goto _iter_begin_1e69c26bb;
			}
			_iter_end_1e69c26bb:;
		};
	};
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1e423ae8c_slicing(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e258577d_SlicingExprModel> _66731_m) {
	_1e424124a_model(_self_, _66731_m.get()._field_Expr);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(".slice(", 7));
	if ((!(_22eb614e2_Production))) {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1e4291685_locInfo(_self_.get()._field_oc, _66731_m.get()._field_Token);
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1e42414c0_expr(_self_, _66731_m.get()._field_Left);
	if ((_66731_m.get()._field_Right != nullptr)) {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1e42414c0_expr(_self_, _66731_m.get()._field_Right);
	};
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e423b212_traitSub(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e258596a_TraitSubIdentExprModel> _68332_m) {
	_1e428d2b9_write(_self_.get()._field_oc, static__1e42489d3_traitDecl(_68332_m.get()._field_Trt));
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("_mptr_data", 10));
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("[(", 2));
	_1e424124a_model(_self_, _68332_m.get()._field_Expr);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(").type_offset].", 15));
	_1e428d2b9_write(_self_.get()._field_oc, static__1e4248494_func(_68332_m.get()._field_Method));
}



inline void _1e423b487_structureSub(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e2585d88_StructSubIdentExprModel> _69236_m) {
	_1e424124a_model(_self_, _69236_m.get()._field_Expr.get()._field_Model);
	if ((_69236_m.get()._field_Field != nullptr)) {
		if ((_1e3137494_Ptr(_69236_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_1e428d2b9_write(_self_.get()._field_oc, jule::Str("->", 2));
		} else if ((_1e3137230_Sptr(_69236_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_1e428d2b9_write(_self_.get()._field_oc, jule::Str(".get(", 5));
			if ((!(_22eb614e2_Production))) {
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str("\"", 1));
				_1e4291685_locInfo(_self_.get()._field_oc, _69236_m.get()._field_Token);
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str("\"", 1));
			};
			_1e428d2b9_write(_self_.get()._field_oc, jule::Str(").", 2));
		} else {
			_1e428d2b9_write(_self_.get()._field_oc, jule::Str(".", 1));
		};
		_1e428d2b9_write(_self_.get()._field_oc, static__1e4249561_field(_69236_m.get()._field_Field.get()._field_Decl));
	};
}



inline void _1e423b70c_commonIdent(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e258644e_CommonIdentExprModel> _71231_m) {
	_1e428d2b9_write(_self_.get()._field_oc, _71231_m.get()._field_Ident);
}



inline void _1e423b982_commonSub(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e258663b_CommonSubIdentExprModel> _71633_m) {
	_1e424124a_model(_self_, _71633_m.get()._field_Expr);
	{
		
		if ((_1e3137494_Ptr(_71633_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1e69d1a71:;
			{
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str("->", 2));
			}
		}
		else if ((_1e3137230_Sptr(_71633_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1e69d229c:;
			{
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str(".get(", 5));
				if ((!(_22eb614e2_Production))) {
					_1e428d2b9_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1e4291685_locInfo(_self_.get()._field_oc, _71633_m.get()._field_Token);
					_1e428d2b9_write(_self_.get()._field_oc, jule::Str("\"", 1));
				};
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str(").", 2));
			}
		}
		else {
			_case_begin_1e69d2236:;
			{
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str(".", 1));
			}
		}
		_match_end_1e69d21c0:;
	};
	_1e428d2b9_write(_self_.get()._field_oc, _71633_m.get()._field_Ident);
}



inline void _1e423bc07_array(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e2586262_ArrayExprModel> _73529_m) {
	_1e428d2b9_write(_self_.get()._field_oc, static__1e42b44dd_array(_73529_m.get()._field_Kind));
	if ((_73529_m.get()._field_Elems.len() == 0LL)) {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	if (((_73529_m.get()._field_Elems.len() == 2LL) && (_73529_m.get()._field_Elems[1LL] == nullptr))) {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1e42414c0_expr(_self_, _73529_m.get()._field_Elems[0LL]);
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("({", 2));
	_1e4239199_args(_self_, _73529_m.get()._field_Elems);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("})", 2));
	return;;
}



inline void _1e423be7c_funcInsCommon(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e258dee5_FnIns> _75837_m) {
	_1e428d2b9_write(_self_.get()._field_oc, static__1e42b55aa_func(_75837_m));
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1e423c202_funcIns(_self_, _75837_m);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e423c202_funcIns(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e258dee5_FnIns> _76531_m) {
	if (((_76531_m.get()._field_Decl != nullptr) && _76531_m.get()._field_Decl.get()._field_CppLinked)) {
		jule::Ptr<_1e24d1e8d_Directive> _76717_d = _1e42b81b2_findDirective(_76531_m.get()._field_Decl.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_76717_d != nullptr)) {
			_1e428d2b9_write(_self_.get()._field_oc, _1e42aec8b_concatAllParts(_76717_d.get()._field_Args));
			_1e428d2b9_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1e428d2b9_write(_self_.get()._field_oc, static__1e424873b_funcIns(_76531_m));
}



inline void _1e423c477_tuple(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e2586828_TupleExprModel> _77629_m) {
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	{
		auto &expr = _77629_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_1e69de8e7:;
		if (it != expr.end()) {
			jule::I64 _77814_i = it - expr.begin();
			jule::Ptr<_1e310908c_Data> _77821_d = *it;
			{
				_1e42414c0_expr(_self_, _77821_d.get()._field_Model);
				if (((_77629_m.get()._field_Datas.len() - _77814_i) > 1LL)) {
					_1e428d2b9_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1e69de8e7:;
			++it;
			_77814_i++;
			goto _iter_begin_1e69de8e7;
		}
		_iter_end_1e69de8e7:;
	};
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e423c6ec_newCall(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e25870cb_BuiltinNewCallExprModel> _78731_m) {
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1e428d2b9_write(_self_.get()._field_oc, static__1e42b5852_kind(_78731_m.get()._field_Kind));
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(">(", 2));
	if ((_78731_m.get()._field_Init != nullptr)) {
		_1e42414c0_expr(_self_, _78731_m.get()._field_Init);
	};
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e423c972_outCall(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e2586a15_BuiltinOutCallExprModel> _79731_m) {
	if ((_79731_m.get()._field_Debug && _22eb614e2_Production)) {
		return;;
	};
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("jule::out(", 10));
	_1e42414c0_expr(_self_, _79731_m.get()._field_Expr);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e423cbe7_outlnCall(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e2586c02_BuiltinOutlnCallExprModel> _80633_m) {
	if ((_80633_m.get()._field_Debug && _22eb614e2_Production)) {
		return;;
	};
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1e42414c0_expr(_self_, _80633_m.get()._field_Expr);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e423ce6c_panicCall(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e25872b8_BuiltinPanicCallExprModel> _81533_m) {
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("jule::panic(", 12));
	_1e42414c0_expr(_self_, _81533_m.get()._field_Expr);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(" + jule::Str(\"\\nlocation: ", 26));
	_1e4291685_locInfo(_self_.get()._field_oc, _81533_m.get()._field_Token);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1e423d1e2_assertCall(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e25874a5_BuiltinAssertCallExprModel> _82334_m) {
	if (_22eb614e2_Production) {
		return;;
	};
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("if (!(", 6));
	_1e42414c0_expr(_self_, _82334_m.get()._field_Expr);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(")) jule::panic(jule::Str(", 25));
	_1e428d2b9_write(_self_.get()._field_oc, _1e42426be_cstrLit(static_cast<jule::Slice<jule::U8>>(_82334_m.get()._field_Log)));
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(") + jule::Str(\"\\nlocation: ", 27));
	_1e4291685_locInfo(_self_.get()._field_oc, _82334_m.get()._field_Token);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1e423d467_errorCall(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e2587c58_BuiltinErrorCallExprModel> _83633_m) {
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_1e258b7a6_IsVoid(_83633_m.get()._field_Func.get()._field_Decl.ptr())) {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(", 22));
	} else {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1e428d2b9_write(_self_.get()._field_oc, static__1e42b5852_kind(_83633_m.get()._field_Func.get()._field_Result));
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str(">(", 2));
	};
	_1e42414c0_expr(_self_, _83633_m.get()._field_Err);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e423d6dc_copyCall(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e2587a6b_BuiltinCopyCallExprModel> _84932_m) {
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("jule::copy((", 12));
	_1e424124a_model(_self_, _84932_m.get()._field_Dest.get()._field_Model);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1e3136ebb_Prim(_84932_m.get()._field_Dest.get()._field_Kind.ptr()) != nullptr)) {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(", (", 3));
	_1e424124a_model(_self_, _84932_m.get()._field_Src.get()._field_Model);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1e3136ebb_Prim(_84932_m.get()._field_Src.get()._field_Kind.ptr()) != nullptr)) {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e423d962_makeCallSlice(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e2587692_BuiltinMakeCallExprModel>& _86538_m) {
	jule::Ptr<_1e313da72_Slc> _86617_slice = _1e3137e45_Slc(_86538_m.get()._field_Kind.ptr());;
	_1e428d2b9_write(_self_.get()._field_oc, static__1e42b5852_kind(_86538_m.get()._field_Kind));
	if ((_1e3137708_Enum(_86617_slice.get()._field_Elem.ptr()) != nullptr)) {
		if ((_86538_m.get()._field_Cap != nullptr)) {
			_1e428d2b9_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
		} else {
			_1e428d2b9_write(_self_.get()._field_oc, jule::Str("::alloc_def(", 12));
		};
	} else {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	};
	_1e42414c0_expr(_self_, _86538_m.get()._field_Len);
	if ((_86538_m.get()._field_Cap != nullptr)) {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1e42414c0_expr(_self_, _86538_m.get()._field_Cap);
	};
	if ((_1e3137708_Enum(_86617_slice.get()._field_Elem.ptr()) != nullptr)) {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1e42419ba_initExpr(_self_, _86617_slice.get()._field_Elem);
	};
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e423dbd7_makeCallStr(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e2587692_BuiltinMakeCallExprModel>& _89136_m) {
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1e42414c0_expr(_self_, _89136_m.get()._field_Len);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e423de5c_makeCall(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e2587692_BuiltinMakeCallExprModel> _89832_m) {
	if ((_1e3137e45_Slc(_89832_m.get()._field_Kind.ptr()) != nullptr)) {
		_1e423d962_makeCallSlice(_self_, _89832_m);
		return;;
	};
	_1e423dbd7_makeCallStr(_self_, _89832_m);
}



inline void _1e423e1d2_pushToSlice(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e10cb072_PushToSliceExprModel> _90635_m) {
	jule::I64 _90713_n = _self_.get()._field_oc.get()._field_Obj.len();;
	_1e424124a_model(_self_, _90635_m.get()._field_Dest);
	jule::Str _90913_dest = _self_.get()._field_oc.get()._field_Obj.slice(_90713_n);;
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(" = jule::alloc_for_append(", 26));
	_1e428d2b9_write(_self_.get()._field_oc, _90913_dest);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1e428d2b9_write(_self_.get()._field_oc, _1e31c54ee_Itoa(static_cast<jule::I64>(_90635_m.get()._field_Elems.get()._field_Elems.len())));
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(");", 2));
	{
		auto &expr = _90635_m.get()._field_Elems.get()._field_Elems;
		auto it = expr.begin();
		_iter_begin_1e6a0e84b:;
		if (it != expr.end()) {
			jule::Any _91621_e = *it;
			{
				_1e428d2b9_write(_self_.get()._field_oc, _90913_dest);
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str(".__push(", 8));
				_1e424124a_model(_self_, _91621_e);
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str(");", 2));
			}
			_iter_next_1e6a0e84b:;
			++it;
			goto _iter_begin_1e6a0e84b;
		}
		_iter_end_1e6a0e84b:;
	};
}



inline void _1e423e457_appendCall(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e258787e_BuiltinAppendCallExprModel> _92534_m) {
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("jule::append(", 13));
	_1e424124a_model(_self_, _92534_m.get()._field_Dest);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1e424124a_model(_self_, _92534_m.get()._field_Elements);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e423e6cc_cloneCall(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e2586dde_BuiltinCloneCallExprModel> _93333_m) {
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("jule::clone(", 12));
	_1e424124a_model(_self_, _93333_m.get()._field_Expr);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e423e952_sizeof(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e2585b57_SizeofExprModel> _93930_m) {
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("sizeof(", 7));
	_1e424124a_model(_self_, _93930_m.get()._field_Expr);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e423ebc7_alignof(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e25883b8_AlignofExprModel> _94531_m) {
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("alignof(", 8));
	_1e424124a_model(_self_, _94531_m.get()._field_Expr);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline jule::Str _1e423eed5_runeLit(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e25885a5_RuneExprModel> _95127_m) {
	if ((_95127_m.get()._field_Code <= 127LL)) {
		jule::Str _95321_b = _1e4242108_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_95127_m.get()._field_Code)));;
		if ((_95321_b == jule::Str("'", 1))) {
			_95321_b=jule::Str("\\'", 2);
		};
		return ((jule::Str("'", 1) + _95321_b) + jule::Str("'", 1));
	};
	return _1e4242c74_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_95127_m.get()._field_Code)));
}



inline void _1e424025a_structureStatic(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e2586075_StructStaticIdentExprModel> _96239_m) {
	_1e428d2b9_write(_self_.get()._field_oc, static__1e424873b_funcIns(_96239_m.get()._field_Method));
}



inline void _1e42404d0_integratedToStr(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e2588792_IntegratedToStrExprModel> _96639_m) {
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("jule::to_str(", 13));
	_1e424124a_model(_self_, _96639_m.get()._field_Expr);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1e4240755_backendEmit(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e258897e_BackendEmitExprModel> _97235_m) {
	if ((_97235_m.get()._field_Exprs.len() == 0LL)) {
		_1e428d2b9_write(_self_.get()._field_oc, _97235_m.get()._field_Code);
		return;;
	};
	jule::I64 _97713_n = _self_.get()._field_oc.get()._field_Obj.len();;
	jule::Slice<jule::Any> _97817_args = jule::Slice<jule::Any>::alloc(_97235_m.get()._field_Exprs.len());;
	{
		auto &expr = _97235_m.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1e6a1c2d7:;
		if (it != expr.end()) {
			jule::I64 _97914_i = it - expr.begin();
			jule::Any _97921_expr = *it;
			{
				_1e42414c0_expr(_self_, _97921_expr);
				_97817_args[_97914_i]=jule::Any(_self_.get()._field_oc.get()._field_Obj.slice(_97713_n));
				_self_.get()._field_oc.get()._field_Obj=_self_.get()._field_oc.get()._field_Obj.slice(0LL,_97713_n);
			}
			_iter_next_1e6a1c2d7:;
			++it;
			_97914_i++;
			goto _iter_begin_1e6a1c2d7;
		}
		_iter_end_1e6a1c2d7:;
	};
	_1e428d2b9_write(_self_.get()._field_oc, _1e3284c51_Format(_97235_m.get()._field_Code,jule::Any(_97817_args)));
}



inline void _1e42409ca_free(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e2588b6b_FreeExprModel> _98728_m) {
	_1e42414c0_expr(_self_, _98728_m.get()._field_Expr);
	if (_22eb60cb6_RC) {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str(".dealloc()", 10));
		return;;
	};
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(".__free()", 9));
}



inline void _1e4240c50_mutSlicing(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e12489e7_MutSlicingExprModel> _99634_m) {
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1e424124a_model(_self_, _99634_m.get()._field_Expr);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(").mut_slice(", 12));
	if ((!(_22eb614e2_Production))) {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1e4291685_locInfo(_self_.get()._field_oc, _99634_m.get()._field_Token);
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1e42414c0_expr(_self_, _99634_m.get()._field_Left);
	if ((_99634_m.get()._field_Right != nullptr)) {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1e42414c0_expr(_self_, _99634_m.get()._field_Right);
	};
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _1e4240ec5_strInsertBegin(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e17484d0_StrInsertBeginExprModel> _101338_m) {
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1e424124a_model(_self_, _101338_m.get()._field_Dest);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(").buffer.insert(0, (", 20));
	_1e424124a_model(_self_, _101338_m.get()._field_Expr);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("));", 3));
}



inline void _1e424124a_model(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Any _102129_m) {
	{
		auto &_match_expr{ _102129_m };
		
		if (_match_expr.type_is<jule::Ptr<_1e3134da9_TypeKind>>()) {
			_case_begin_1e6a26379:;
			{
				_1e428d2b9_write(_self_.get()._field_oc, static__1e42b5852_kind(_102129_m.operator jule::Ptr<_1e3134da9_TypeKind>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e23b4a96_Const>>()) {
			_case_begin_1e6a26654:;
			{
				_1e4237571_constant(_self_, _102129_m.operator jule::Ptr<_1e23b4a96_Const>(),false);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e322a147_Var>>()) {
			_case_begin_1e6a266ba:;
			{
				_1e42381a9_var(_self_, _102129_m.operator jule::Ptr<_1e322a147_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e253220d_StructIns>>()) {
			_case_begin_1e6a26731:;
			{
				_1e423842e_structureIns(_self_, _102129_m.operator jule::Ptr<_1e253220d_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e258dee5_FnIns>>()) {
			_case_begin_1e6a26797:;
			{
				_1e423be7c_funcInsCommon(_self_, _102129_m.operator jule::Ptr<_1e258dee5_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d42d3d8b_UnsafeBinopExprModel>>()) {
			_case_begin_1e6a272ae:;
			{
				_1e4237bae_unsafeBinary(_self_, _102129_m.operator jule::Ptr<_1d42d3d8b_UnsafeBinopExprModel>().get()._field_Node);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2583e74_BinopExprModel>>()) {
			_case_begin_1e6a27325:;
			{
				_1e4237e34_binary(_self_, _102129_m.operator jule::Ptr<_1e2583e74_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2584161_UnaryExprModel>>()) {
			_case_begin_1e6a2738b:;
			{
				_1e42386a4_unary(_self_, _102129_m.operator jule::Ptr<_1e2584161_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e258453a_StructLitExprModel>>()) {
			_case_begin_1e6a27402:;
			{
				_1e4238929_structureLit(_self_, _102129_m.operator jule::Ptr<_1e258453a_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2584727_AllocStructLitExprModel>>()) {
			_case_begin_1e6a27468:;
			{
				_1e4238b9e_allocStructure(_self_, _102129_m.operator jule::Ptr<_1e2584727_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2584914_CastingExprModel>>()) {
			_case_begin_1e6a274ce:;
			{
				_1e4238e24_casting(_self_, _102129_m.operator jule::Ptr<_1e2584914_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2584b01_FnCallExprModel>>()) {
			_case_begin_1e6a27545:;
			{
				_1e4239e9c_funcCall(_self_, _102129_m.operator jule::Ptr<_1e2584b01_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2584cdd_SliceExprModel>>()) {
			_case_begin_1e6a275ab:;
			{
				_1e423a222_slice(_self_, _102129_m.operator jule::Ptr<_1e2584cdd_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2586262_ArrayExprModel>>()) {
			_case_begin_1e6a27622:;
			{
				_1e423bc07_array(_self_, _102129_m.operator jule::Ptr<_1e2586262_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d42d4d15_UnsafeIndexingExprModel>>()) {
			_case_begin_1e6a27688:;
			{
				_1e423a71c_unsafeIndexing(_self_, _102129_m.operator jule::Ptr<_1d42d4d15_UnsafeIndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2584eca_IndexingExprModel>>()) {
			_case_begin_1e6a276ee:;
			{
				_1e423a497_indexing(_self_, _102129_m.operator jule::Ptr<_1e2584eca_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e25851b7_AnonFnExprModel>>()) {
			_case_begin_1e6a27765:;
			{
				_1e423a992_anonFunc(_self_, _102129_m.operator jule::Ptr<_1e25851b7_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2585591_MapExprModel>>()) {
			_case_begin_1e6a277cb:;
			{
				_1e423ac17_map(_self_, _102129_m.operator jule::Ptr<_1e2585591_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e258577d_SlicingExprModel>>()) {
			_case_begin_1e6a27842:;
			{
				_1e423ae8c_slicing(_self_, _102129_m.operator jule::Ptr<_1e258577d_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e258596a_TraitSubIdentExprModel>>()) {
			_case_begin_1e6a278a8:;
			{
				_1e423b212_traitSub(_self_, _102129_m.operator jule::Ptr<_1e258596a_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2585d88_StructSubIdentExprModel>>()) {
			_case_begin_1e6a27930:;
			{
				_1e423b487_structureSub(_self_, _102129_m.operator jule::Ptr<_1e2585d88_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e258644e_CommonIdentExprModel>>()) {
			_case_begin_1e6a279a7:;
			{
				_1e423b70c_commonIdent(_self_, _102129_m.operator jule::Ptr<_1e258644e_CommonIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e258663b_CommonSubIdentExprModel>>()) {
			_case_begin_1e6a27a2e:;
			{
				_1e423b982_commonSub(_self_, _102129_m.operator jule::Ptr<_1e258663b_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2586828_TupleExprModel>>()) {
			_case_begin_1e6a27aa6:;
			{
				_1e423c477_tuple(_self_, _102129_m.operator jule::Ptr<_1e2586828_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2586a15_BuiltinOutCallExprModel>>()) {
			_case_begin_1e6a27b2d:;
			{
				_1e423c972_outCall(_self_, _102129_m.operator jule::Ptr<_1e2586a15_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2586c02_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1e6a27ba5:;
			{
				_1e423cbe7_outlnCall(_self_, _102129_m.operator jule::Ptr<_1e2586c02_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e25870cb_BuiltinNewCallExprModel>>()) {
			_case_begin_1e6a27c2c:;
			{
				_1e423c6ec_newCall(_self_, _102129_m.operator jule::Ptr<_1e25870cb_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e25872b8_BuiltinPanicCallExprModel>>()) {
			_case_begin_1e6a27ca4:;
			{
				_1e423ce6c_panicCall(_self_, _102129_m.operator jule::Ptr<_1e25872b8_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e25874a5_BuiltinAssertCallExprModel>>()) {
			_case_begin_1e6a27d2b:;
			{
				_1e423d1e2_assertCall(_self_, _102129_m.operator jule::Ptr<_1e25874a5_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2587c58_BuiltinErrorCallExprModel>>()) {
			_case_begin_1e6a27da3:;
			{
				_1e423d467_errorCall(_self_, _102129_m.operator jule::Ptr<_1e2587c58_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2587692_BuiltinMakeCallExprModel>>()) {
			_case_begin_1e6a27e2a:;
			{
				_1e423de5c_makeCall(_self_, _102129_m.operator jule::Ptr<_1e2587692_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e258787e_BuiltinAppendCallExprModel>>()) {
			_case_begin_1e6a27ea2:;
			{
				_1e423e457_appendCall(_self_, _102129_m.operator jule::Ptr<_1e258787e_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2586dde_BuiltinCloneCallExprModel>>()) {
			_case_begin_1e6a28029:;
			{
				_1e423e6cc_cloneCall(_self_, _102129_m.operator jule::Ptr<_1e2586dde_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2587a6b_BuiltinCopyCallExprModel>>()) {
			_case_begin_1e6a280a1:;
			{
				_1e423d6dc_copyCall(_self_, _102129_m.operator jule::Ptr<_1e2587a6b_BuiltinCopyCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2585b57_SizeofExprModel>>()) {
			_case_begin_1e6a28128:;
			{
				_1e423e952_sizeof(_self_, _102129_m.operator jule::Ptr<_1e2585b57_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e25883b8_AlignofExprModel>>()) {
			_case_begin_1e6a281a0:;
			{
				_1e423ebc7_alignof(_self_, _102129_m.operator jule::Ptr<_1e25883b8_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e25885a5_RuneExprModel>>()) {
			_case_begin_1e6a28227:;
			{
				_1e428d2b9_write(_self_.get()._field_oc, _1e423eed5_runeLit(_self_, _102129_m.operator jule::Ptr<_1e25885a5_RuneExprModel>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2586075_StructStaticIdentExprModel>>()) {
			_case_begin_1e6a2829e:;
			{
				_1e424025a_structureStatic(_self_, _102129_m.operator jule::Ptr<_1e2586075_StructStaticIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2588792_IntegratedToStrExprModel>>()) {
			_case_begin_1e6a28326:;
			{
				_1e42404d0_integratedToStr(_self_, _102129_m.operator jule::Ptr<_1e2588792_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e258897e_BackendEmitExprModel>>()) {
			_case_begin_1e6a2839d:;
			{
				_1e4240755_backendEmit(_self_, _102129_m.operator jule::Ptr<_1e258897e_BackendEmitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2588b6b_FreeExprModel>>()) {
			_case_begin_1e6a28425:;
			{
				_1e42409ca_free(_self_, _102129_m.operator jule::Ptr<_1e2588b6b_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e12489e7_MutSlicingExprModel>>()) {
			_case_begin_1e6a2849c:;
			{
				_1e4240c50_mutSlicing(_self_, _102129_m.operator jule::Ptr<_1e12489e7_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e17484d0_StrInsertBeginExprModel>>()) {
			_case_begin_1e6a28524:;
			{
				_1e4240ec5_strInsertBegin(_self_, _102129_m.operator jule::Ptr<_1e17484d0_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_1e6a26500:;
			{
				_1e428d2b9_write(_self_.get()._field_oc, jule::Str("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1e6a26423:;
	};
}



inline void _1e42414c0_expr(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Any _111428_e) {
	_1e424124a_model(_self_, _111428_e);
}



inline void _1e4241745_val(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e310a115_Value> _111827_v) {
	if (_1e3109950_IsConst(_111827_v.get()._field_Data.ptr())) {
		_1e4237571_constant(_self_, _111827_v.get()._field_Data.get()._field_Constant,((_111827_v.get()._field_Data.get()._field_Kind != nullptr) && _1e313bb3b_IsF32(_1e3136ebb_Prim(_111827_v.get()._field_Data.get()._field_Kind.ptr()).ptr())));
		return;;
	};
	_1e42414c0_expr(_self_, _111827_v.get()._field_Data.get()._field_Model);
}



inline void _1e42419ba_initExpr(jule::Ptr<_1e4235d77_exprCoder> _self_, jule::Ptr<_1e3134da9_TypeKind> _112632_t) {
	if ((_1e3137494_Ptr(_112632_t.ptr()) != nullptr)) {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
		return;;
	};
	jule::Ptr<_1e25a038b_Enum> _113117_enm = _1e3137708_Enum(_112632_t.ptr());;
	if ((_113117_enm != nullptr)) {
		_1e4241745_val(_self_, _113117_enm.get()._field_Items[0LL].get()._field_Value);
		return;;
	};
	_1e428d2b9_write(_self_.get()._field_oc, static__1e42b5852_kind(_112632_t));
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1e4235d77_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1e424402d_cloneFuncDecl(jule::Ptr<_1e2505d6e_Struct>& _1030_s) {
	jule::Str _1117_obj = static__1e42b3e9e_structure(_1030_s);;
	_1117_obj+=jule::Str(" clone(void) const ", 19);
	return _1117_obj;
}



inline jule::Str static__1e42442c5_cloneFuncDef(jule::Ptr<_1e2505d6e_Struct>& _1629_s) {
	jule::Str _1717_obj = static__1e42b3e9e_structure(_1629_s);;
	_1717_obj+=(jule::Str(" ", 1) + _1717_obj);
	_1717_obj+=jule::Str("::clone(void) const ", 20);
	return _1717_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4243c75_deriveCoder _Src) {
	_Stream << "deriveCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e42451a5_TestCoder> static__1e4245628_New(jule::Ptr<_1e42a9e62_ObjectCoder>& _2828_oc) {
	return jule::new_ptr<_1e42451a5_TestCoder>(_1e42451a5_TestCoder{._field_oc=_2828_oc});
}



inline jule::Ptr<_1e320561c_ImportInfo> _1e424588c_findTestingPackage(jule::Ptr<_1e42451a5_TestCoder> _self_) {
	{
		auto &expr = _self_.get()._field_oc.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1e6a4a5e0:;
		if (it != expr.end()) {
			jule::Ptr<_1e320561c_ImportInfo> _3521_imp = *it;
			{
				if ((_3521_imp.get()._field_LinkPath == jule::Str("std::testing", 12))) {
					return _3521_imp;
				};
			}
			_iter_next_1e6a4a5e0:;
			++it;
			goto _iter_begin_1e6a4a5e0;
		}
		_iter_end_1e6a4a5e0:;
	};
	return nullptr;
}



inline void _1e4245b12_appendTest(jule::Ptr<_1e42451a5_TestCoder> _self_, jule::Ptr<_1e258dee5_FnIns> _4334_f) {
	_1e4290299_indent(_self_.get()._field_oc);
	_1e42462c7_callTmReset(_self_);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("std::cout << \">>> TEST RUNNING: \";\n", 35));
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1e428d2b9_write(_self_.get()._field_oc, _1e42426be_cstrLit(static_cast<jule::Slice<jule::U8>>(_4334_f.get()._field_Decl.get()._field_Ident)));
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(");\n", 3));
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, static__1e424873b_funcIns(_4334_f));
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("(_t);\n", 6));
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("post_test();\n", 13));
}



inline void _1e4245d87_appendPackageTests(jule::Ptr<_1e42451a5_TestCoder> _self_, jule::Ptr<_1e3208576_Package>& _6043_p) {
	{
		auto &expr = _6043_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1e6a51382:;
		if (it != expr.end()) {
			jule::Ptr<_1e310432e_SymbolTable> _6121_file = *it;
			{
				{
					auto &expr = _6121_file.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_1e6a51c23:;
					if (it != expr.end()) {
						jule::Ptr<_1e258b344_Fn> _6225_f = *it;
						{
							if (_1e42b8547_hasDirective(_6225_f.get()._field_Directives,jule::Str("test", 4))) {
								_1e4245b12_appendTest(_self_, _6225_f.get()._field_Instances[0LL]);
							};
						}
						_iter_next_1e6a51c23:;
						++it;
						goto _iter_begin_1e6a51c23;
					}
					_iter_end_1e6a51c23:;
				};
			}
			_iter_next_1e6a51382:;
			++it;
			goto _iter_begin_1e6a51382;
		}
		_iter_end_1e6a51382:;
	};
}



inline jule::Bool _1e42460eb_readyTestingPackage(jule::Ptr<_1e42451a5_TestCoder> _self_) {
	jule::Ptr<_1e320561c_ImportInfo> _7117_p = _1e424588c_findTestingPackage(_self_);;
	if ((_7117_p == nullptr)) {
		return false;
	};
	_self_.get()._field_t=_1e3206a5d_FindStruct(_7117_p.ptr(), jule::Str("T", 1),false).get()._field_Instances[0LL];
	_self_.get()._field_tmReset=_1e250c33c_FindMethod(_self_.get()._field_t.ptr(), jule::Str("reset", 5),false);
	_self_.get()._field_tmFailed=_1e250c33c_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Failed", 6),false);
	_self_.get()._field_tmSkipped=_1e250c33c_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Skipped", 7),false);
	return true;
}



inline void _1e42462c7_callTmReset(jule::Ptr<_1e42451a5_TestCoder> _self_) {
	_1e428d2b9_write(_self_.get()._field_oc, static__1e4248494_func(_self_.get()._field_tmReset));
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1e42464a3_callTmFailed(jule::Ptr<_1e42451a5_TestCoder> _self_) {
	_1e428d2b9_write(_self_.get()._field_oc, static__1e4248494_func(_self_.get()._field_tmFailed));
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1e424667e_callTmSkipped(jule::Ptr<_1e42451a5_TestCoder> _self_) {
	_1e428d2b9_write(_self_.get()._field_oc, static__1e4248494_func(_self_.get()._field_tmSkipped));
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1e424685a_Serialize(jule::Ptr<_1e42451a5_TestCoder> _self_) {
	_1e42ae252_serializeHead(_self_.get()._field_oc);
	__JULE_DEFER({
		_1e42ae076_end(_self_.get()._field_oc);
	});;
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("\nvoid test_point(void) {\n", 25));
	_1e428da5b_addIndent(_self_.get()._field_oc);
	_1e4290299_indent(_self_.get()._field_oc);
	if ((!(_1e42460eb_readyTestingPackage(_self_)))) {
		_1e428d2b9_write(_self_.get()._field_oc, jule::Str("}", 1));
		_1e428ea4b_doneIndent(_self_.get()._field_oc);
		return;;
	};
	_1e428d2b9_write(_self_.get()._field_oc, static__1e42b20ac_asSptr(static__1e42b4246_structureIns(_self_.get()._field_t)));
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(" _t = jule::new_ptr<", 20));
	_1e428d2b9_write(_self_.get()._field_oc, static__1e42b4246_structureIns(_self_.get()._field_t));
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(">(); _t.ref = nullptr;\n", 23));
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("auto post_test = [&](void) {\n", 29));
	_1e428da5b_addIndent(_self_.get()._field_oc);
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("++total;\n", 9));
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("if (", 4));
	_1e42464a3_callTmFailed(_self_);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("else if (", 9));
	_1e424667e_callTmSkipped(_self_);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1e428ea4b_doneIndent(_self_.get()._field_oc);
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("};\n", 3));
	_1e4245d87_appendPackageTests(_self_, _self_.get()._field_oc.get()._field_ir.get()._field_Main);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("\n\n", 2));
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("if (failed != 0) std::exit(1);\n", 31));
	_1e428ea4b_doneIndent(_self_.get()._field_oc);
	_1e4290299_indent(_self_.get()._field_oc);
	_1e428d2b9_write(_self_.get()._field_oc, jule::Str("}\n", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1e42451a5_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1e4247d12_toOut(jule::Str& _3322_ident, jule::Uintptr _3334_addr) {
	if ((_3334_addr != 0LLU)) {
		jule::Str _3521_obj = jule::Str::alloc(40LL);;
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_1e31c4dc2_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_3334_addr)),15LL);
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_3322_ident;
		return _3521_obj;
	};
	jule::Str _4217_obj = jule::Str::alloc((_3322_ident.len() + 1LL));;
	_4217_obj+=jule::Str("_", 1);
	_4217_obj+=_3322_ident;
	return _4217_obj;
}



inline jule::Str static__1e42481ec_toLocal(jule::I64 _5423_row, jule::I64 _5433_col, jule::Str& _5444_ident) {
	jule::Str _5517_obj = jule::Str::alloc(40LL);;
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_1e31c54ee_Itoa(_5423_row);
	_5517_obj+=_1e31c54ee_Itoa(_5433_col);
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_5444_ident;
	return _5517_obj;
}



inline jule::Str static__1e4248494_func(jule::Ptr<_1e258b344_Fn>& _6521_f) {
	{
		
		if (_6521_f.get()._field_CppLinked) {
			_case_begin_1e6a694ee:;
			{
				return _6521_f.get()._field_Ident;
			}
		}
		else if ((_6521_f.get()._field_Ident == jule::Str("main", 4))) {
			_case_begin_1e6a69565:;
			{
				return jule::Str("entry_point", 11);
			}
		}
		else if (_1e258ba1a_IsMethod(_6521_f.ptr())) {
			_case_begin_1e6a688c7:;
			{
				jule::Str _7221_obj = static__1e4247d12_toOut(_6521_f.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));;
				if (_6521_f.get()._field_Statically) {
					(_7221_obj).buffer.insert(0, (jule::Str("static_", 7)));;
					return _7221_obj;
				};
				return _7221_obj;
			}
		}
		else {
			_case_begin_1e6a6880b:;
			{
				return static__1e4247d12_toOut(_6521_f.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));
			}
		}
		_match_end_1e6a6872e:;
	};
}



inline jule::Str static__1e424873b_funcIns(jule::Ptr<_1e258dee5_FnIns>& _8424_f) {
	if (_1e259037b_IsBuiltin(_8424_f.ptr())) {
		return (jule::Str("jule::", 6) + _8424_f.get()._field_Decl.get()._field_Ident);
	};
	if ((_8424_f.get()._field_Decl.get()._field_CppLinked || (_8424_f.get()._field_Generics.len() == 0LL))) {
		return static__1e4248494_func(_8424_f.get()._field_Decl);
	};
	return static__1e4247d12_toOut(_8424_f.get()._field_Decl.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_8424_f)));
}



inline jule::Str static__1e42489d3_traitDecl(jule::Ptr<_1e259d246_Trait> _9525_t) {
	if (_1e259dcb3_IsBuiltin(_9525_t.ptr())) {
		return (jule::Str("jule::", 6) + _9525_t.get()._field_Ident);
	};
	return static__1e4247d12_toOut(_9525_t.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_9525_t)));
}



inline jule::Str static__1e4248c7a_param(jule::Ptr<_1e2589a07_Param>& _10322_p) {
	if ((_1d42b6e18_IsAnonIdent(_10322_p.get()._field_Ident) || _1d42b6b71_IsIgnoreIdent(_10322_p.get()._field_Ident))) {
		return jule::Str();
	};
	if (_1e258a134_IsSelf(_10322_p.ptr())) {
		return jule::Str("_self_", 6);
	};
	if ((_10322_p.get()._field_Token == nullptr)) {
		return static__1e42481ec_toLocal(0LL,0LL,_10322_p.get()._field_Ident);
	};
	return static__1e42481ec_toLocal(_10322_p.get()._field_Token.get()._field_Row,_10322_p.get()._field_Token.get()._field_Column,_10322_p.get()._field_Ident);
}



inline jule::Str static__1e4249022_structure(jule::Ptr<_1e2505d6e_Struct>& _11726_s) {
	if (_11726_s.get()._field_CppLinked) {
		if (_1e42b8547_hasDirective(_11726_s.get()._field_Directives,jule::Str("typedef", 7))) {
			return _11726_s.get()._field_Ident;
		};
		return (jule::Str("struct ", 7) + _11726_s.get()._field_Ident);
	};
	return static__1e4247d12_toOut(_11726_s.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_11726_s)));
}



inline jule::Str static__1e42492b9_structureIns(jule::Ptr<_1e253220d_StructIns>& _12829_s) {
	if ((_12829_s.get()._field_Decl.get()._field_CppLinked || (_12829_s.get()._field_Generics.len() == 0LL))) {
		return static__1e4249022_structure(_12829_s.get()._field_Decl);
	};
	return static__1e4247d12_toOut(_12829_s.get()._field_Decl.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12829_s)));
}



inline jule::Str static__1e4249561_field(jule::Ptr<_1e24e8339_Field>& _13622_f) {
	if (_13622_f.get()._field_Owner.get()._field_CppLinked) {
		return _13622_f.get()._field_Ident;
	};
	return (jule::Str("_field_", 7) + _13622_f.get()._field_Ident);
}



inline jule::Str static__1e4249808_var(jule::Ptr<_1e322a147_Var> _14423_v) {
	{
		
		if (_14423_v.get()._field_CppLinked) {
			_case_begin_1e6a747d4:;
			{
				return _14423_v.get()._field_Ident;
			}
		}
		else if ((_14423_v.get()._field_Ident == jule::Str("error", 5))) {
			_case_begin_1e6a7484a:;
			{
				return jule::Str("except.error", 12);
			}
		}
		else if ((_14423_v.get()._field_Ident == jule::Str("self", 4))) {
			_case_begin_1e6a73b68:;
			{
				if ((_1e3137230_Sptr(_14423_v.get()._field_Kind.get()._field_Kind.ptr()) == nullptr)) {
					return jule::Str("(*_self_)", 9);
				};
				return jule::Str("_self_", 6);
			}
		}
		else if ((_14423_v.get()._field_Scope != nullptr)) {
			_case_begin_1e6a73bce:;
			{
				return static__1e42481ec_toLocal(_14423_v.get()._field_Token.get()._field_Row,_14423_v.get()._field_Token.get()._field_Column,_14423_v.get()._field_Ident);
			}
		}
		else {
			_case_begin_1e6a73b02:;
			{
				return static__1e4247d12_toOut(_14423_v.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_14423_v)));
			}
		}
		_match_end_1e6a73a47:;
	};
}



inline jule::Str static__1e4249aa0_iterBegin(jule::Uintptr _16325_it) {
	jule::Str _16417_obj = jule::Str::alloc(30LL);;
	_16417_obj+=jule::Str("_iter_begin_", 12);
	_16417_obj+=_1e31c4dc2_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_16325_it)),15LL);
	return _16417_obj;
}



inline jule::Str static__1e4249d47_iterEnd(jule::Uintptr _17123_it) {
	jule::Str _17217_obj = jule::Str::alloc(30LL);;
	_17217_obj+=jule::Str("_iter_end_", 10);
	_17217_obj+=_1e31c4dc2_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_17123_it)),15LL);
	return _17217_obj;
}



inline jule::Str static__1e424a0de_iterNext(jule::Uintptr _17924_it) {
	jule::Str _18017_obj = jule::Str::alloc(30LL);;
	_18017_obj+=jule::Str("_iter_next_", 11);
	_18017_obj+=_1e31c4dc2_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_17924_it)),15LL);
	return _18017_obj;
}



inline jule::Str static__1e424a386_label(jule::Str& _18722_ident) {
	jule::Str _18817_obj = jule::Str::alloc(30LL);;
	_18817_obj+=jule::Str("_julec_label_", 13);
	_18817_obj+=_18722_ident;
	return _18817_obj;
}



inline jule::Str static__1e424a62d_matchEnd(jule::Uintptr _19524_m) {
	jule::Str _19617_obj = jule::Str::alloc(30LL);;
	_19617_obj+=jule::Str("_match_end_", 11);
	_19617_obj+=_1e31c4dc2_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19524_m)),15LL);
	return _19617_obj;
}



inline jule::Str static__1e424a8c5_caseBegin(jule::Uintptr _20325_c) {
	jule::Str _20417_obj = jule::Str::alloc(30LL);;
	_20417_obj+=jule::Str("_case_begin_", 12);
	_20417_obj+=_1e31c4dc2_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20325_c)),15LL);
	return _20417_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _1e4247806_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e42a9a88_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e42a9c75_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e42b0c6a_Str(_1e42b09a1_customType* _self_) {
	return (*_self_)._field_kind;
}



inline jule::Bool _1e42b1078_Equals(jule::Ptr<_1e42b09a1_customType> _self_, jule::Ptr<_1e3134da9_TypeKind> _3926_k) {
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1e42b09a1_customType _Src) {
	_Stream << "customType{";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1e42b17c6_toType(jule::Str _6026_id) {
	if ((_6026_id != jule::Str("uintptr", 7))) {
		_6026_id=_1e27020d1_RealKindOf(_6026_id);
	};
	if (((97LL <= _6026_id[0LL]) && (_6026_id[0LL] <= 122LLU))) {
		_6026_id[0LL]-=32LLU;
	};
	return (jule::Str("jule::", 6) + _6026_id);
}



inline jule::Str static__1e42b1a6d_prim(jule::Ptr<_1e3139881_Prim> _7120_p) {
	return static__1e42b17c6_toType(_1e3139be4_Str(_7120_p.ptr()));
}



inline jule::Str static__1e42b1d15_tuple(jule::Ptr<_1e313e600_Tuple> _7625_t) {
	jule::Str _7717_obj = jule::Str("std::tuple<", 11);;
	{
		auto &expr = _7625_t.get()._field_Types;
		auto it = expr.begin();
		_iter_begin_1e6b513b6:;
		if (it != expr.end()) {
			jule::Ptr<_1e3134da9_TypeKind> _7821_tk = *it;
			{
				_7717_obj+=static__1e42b5852_kind(_7821_tk);
				_7717_obj+=jule::Str(",", 1);
			}
			_iter_next_1e6b513b6:;
			++it;
			goto _iter_begin_1e6b513b6;
		}
		_iter_end_1e6b513b6:;
	};
	(_7717_obj).mut_slice(0LL,(_7717_obj.len() - 1LL));;
	_7717_obj+=jule::Str(">", 1);
	return _7717_obj;
}



inline jule::Str static__1e42b20ac_asSptr(jule::Str _8822_elem) {
	jule::Str _8917_obj = jule::Str("jule::Ptr<", 10);;
	_8917_obj+=_8822_elem;
	_8917_obj+=jule::Str(">", 1);
	return _8917_obj;
}



inline jule::Str static__1e42b2354_asPtr(jule::Str _9621_elem) {
	return (_9621_elem + jule::Str("*", 1));
}



inline jule::Str static__1e42b25eb_sptr(jule::Ptr<_1e313d115_Sptr> _10124_sptr) {
	return static__1e42b20ac_asSptr(static__1e42b5852_kind(_10124_sptr.get()._field_Elem));
}



inline jule::Str static__1e42b2893_ptr(jule::Ptr<_1e3141679_Ptr> _10623_p) {
	;
	if (_1e314214c_IsUnsafe(_10623_p.ptr())) {
		return jule::Str("void*", 5);
	};
	jule::Str _11117_elem = static__1e42b5852_kind(_10623_p.get()._field_Elem);;
	_11117_elem+=jule::Str("*", 1);
	return _11117_elem;
}



inline jule::Str static__1e42b2b3a_enumDecl(jule::Ptr<_1e25a038b_Enum> _11728_e) {
	return static__1e42b5852_kind(_11728_e.get()._field_Kind.get()._field_Kind);
}



inline jule::Str static__1e42b2dd2_typeEnumDecl(jule::Ptr<_1e25a1986_TypeEnum> _12232_e) {
	return jule::Str("jule::Any", 9);
}



inline jule::Str static__1e42b3179_asSlice(jule::Ptr<_1e3134da9_TypeKind> _12627_elem) {
	jule::Str _12717_obj = jule::Str("jule::Slice<", 12);;
	_12717_obj+=static__1e42b5852_kind(_12627_elem);
	_12717_obj+=jule::Str(">", 1);
	return _12717_obj;
}



inline jule::Str static__1e42b3421_slice(jule::Ptr<_1e313da72_Slc> _13425_s) {
	return static__1e42b3179_asSlice(_13425_s.get()._field_Elem);
}



inline jule::Str static__1e42b36b8_map(jule::Ptr<_1e3140128_Map> _13923_m) {
	jule::Str _14017_obj = jule::Str("jule::Map<", 10);;
	_14017_obj+=static__1e42b5852_kind(_13923_m.get()._field_Key);
	_14017_obj+=jule::Str(",", 1);
	_14017_obj+=static__1e42b5852_kind(_13923_m.get()._field_Val);
	_14017_obj+=jule::Str(">", 1);
	return _14017_obj;
}



inline jule::Str static__1e42b3960_traitIdent(jule::Str _14826_ident) {
	jule::Str _14917_obj = jule::Str("jule::Trait<", 12);;
	_14917_obj+=_14826_ident;
	_14917_obj+=jule::Str(">", 1);
	return _14917_obj;
}



inline jule::Str static__1e42b3c07_traitDecl(jule::Ptr<_1e259d246_Trait> _15625_t) {
	return static__1e42b3960_traitIdent(static__1e42489d3_traitDecl(_15625_t));
}



inline jule::Str static__1e42b3e9e_structure(jule::Ptr<_1e2505d6e_Struct> _16125_s) {
	jule::Str _16217_rep = jule::Str();;
	if ((_16125_s.get()._field_CppLinked && (!(_1e42b8547_hasDirective(_16125_s.get()._field_Directives,jule::Str("typedef", 7)))))) {
		_16217_rep+=jule::Str("struct ", 7);
	};
	_16217_rep+=static__1e4249022_structure(_16125_s);
	return _16217_rep;
}



inline jule::Str static__1e42b4246_structureIns(jule::Ptr<_1e253220d_StructIns> _17132_s) {
	if (_17132_s.get()._field_Decl.get()._field_CppLinked) {
		jule::Str _17321_ident = static__1e42492b9_structureIns(_17132_s);;
		if ((_17132_s.get()._field_Generics.len() > 0LL)) {
			_17321_ident+=jule::Str("<", 1);
			{
				auto &expr = _17132_s.get()._field_Generics;
				auto it = expr.begin();
				_iter_begin_1e6b5b734:;
				if (it != expr.end()) {
					jule::Ptr<_1e313367c_InsGeneric> _17629_g = *it;
					{
						_17321_ident+=static__1e42b5852_kind(_17629_g.get()._field_Kind);
						_17321_ident+=jule::Str(",", 1);
					}
					_iter_next_1e6b5b734:;
					++it;
					goto _iter_begin_1e6b5b734;
				}
				_iter_end_1e6b5b734:;
			};
			(_17321_ident).mut_slice(0LL,(_17321_ident.len() - 1LL));;
			_17321_ident+=jule::Str(">", 1);
		};
		jule::Ptr<_1e24d1e8d_Directive> _18317_d = _1e42b81b2_findDirective(_17132_s.get()._field_Decl.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_18317_d != nullptr)) {
			(_17321_ident).buffer.insert(0, ((_1e42aec8b_concatAllParts(_18317_d.get()._field_Args) + jule::Str("::", 2))));;
		};
		return _17321_ident;
	};
	return static__1e42492b9_structureIns(_17132_s);
}



inline jule::Str static__1e42b44dd_array(jule::Ptr<_1e3140c1c_Arr> _19325_a) {
	jule::Str _19417_obj = jule::Str("jule::Array<", 12);;
	_19417_obj+=static__1e42b5852_kind(_19325_a.get()._field_Elem);
	_19417_obj+=jule::Str(",", 1);
	_19417_obj+=_1e31c54ee_Itoa(_19325_a.get()._field_N);
	_19417_obj+=jule::Str(">", 1);
	return _19417_obj;
}



inline jule::Str static__1e42b4a2c_paramIns(jule::Ptr<_1e258d126_ParamIns>& _21929_p) {
	jule::Str _22017_obj = jule::Str();;
	if (_21929_p.get()._field_Decl.get()._field_Variadic) {
		_22017_obj+=jule::Str("jule::Slice<", 12);
		_22017_obj+=static__1e42b5852_kind(_21929_p.get()._field_Kind);
		_22017_obj+=jule::Str(">", 1);
	} else {
		_22017_obj+=static__1e42b5852_kind(_21929_p.get()._field_Kind);
	};
	if (_21929_p.get()._field_Decl.get()._field_Reference) {
		_22017_obj+=jule::Str("&", 1);
	};
	return _22017_obj;
}



inline jule::Str static__1e42b506b_funcInsResult(jule::Ptr<_1e258dee5_FnIns>& _24934_f) {
	if (_1e258b7a6_IsVoid(_24934_f.get()._field_Decl.ptr())) {
		if (_24934_f.get()._field_Decl.get()._field_Exceptional) {
			return jule::Str("jule::VoidExceptional", 21);
		};
		return jule::Str("void", 4);
	};
	if (_24934_f.get()._field_Decl.get()._field_Exceptional) {
		return ((jule::Str("jule::Exceptional<", 18) + static__1e42b5852_kind(_24934_f.get()._field_Result)) + jule::Str(">", 1));
	};
	return static__1e42b5852_kind(_24934_f.get()._field_Result);
}



inline jule::Str static__1e42b5313_anonFunc(jule::Ptr<_1e258dee5_FnIns> _26228_f) {
	jule::Str _26317_decl = static__1e42b506b_funcInsResult(_26228_f);;
	_26317_decl+=jule::Str("(", 1);
	if ((_26228_f.get()._field_Params.len() > 0LL)) {
		{
			auto &expr = _26228_f.get()._field_Params;
			auto it = expr.begin();
			_iter_begin_1e6b6808c:;
			if (it != expr.end()) {
				jule::Ptr<_1e258d126_ParamIns> _26625_param = *it;
				{
					if (_1e258a134_IsSelf(_26625_param.get()._field_Decl.ptr())) {
						goto _iter_next_1e6b6808c;
					};
					_26317_decl+=static__1e42b4a2c_paramIns(_26625_param);
					_26317_decl+=jule::Str(",", 1);
				}
				_iter_next_1e6b6808c:;
				++it;
				goto _iter_begin_1e6b6808c;
			}
			_iter_end_1e6b6808c:;
		};
		(_26317_decl).mut_slice(0LL,(_26317_decl.len() - 1LL));;
	} else {
		_26317_decl+=jule::Str("void", 4);
	};
	_26317_decl+=jule::Str(")", 1);
	return _26317_decl;
}



inline jule::Str static__1e42b55aa_func(jule::Ptr<_1e258dee5_FnIns> _28224_f) {
	jule::Str _28317_obj = jule::Str("jule::Fn<", 9);;
	_28317_obj+=static__1e42b5313_anonFunc(_28224_f);
	_28317_obj+=jule::Str(">", 1);
	return _28317_obj;
}



inline jule::Str static__1e42b5852_kind(jule::Ptr<_1e3134da9_TypeKind> _29024_k) {
	{
		
		if (_1e3135a69_CppLinked(_29024_k.ptr())) {
			_case_begin_1e6b6aab7:;
			{
				return _29024_k.get()._field_CppIdent;
			}
		}
		else if ((_1e3136ebb_Prim(_29024_k.ptr()) != nullptr)) {
			_case_begin_1e6b6ac4e:;
			{
				return static__1e42b1a6d_prim(_1e3136ebb_Prim(_29024_k.ptr()));
			}
		}
		else if ((_1e3138b5a_Tup(_29024_k.ptr()) != nullptr)) {
			_case_begin_1e6b6acb5:;
			{
				return static__1e42b1d15_tuple(_1e3138b5a_Tup(_29024_k.ptr()));
			}
		}
		else if ((_1e3137230_Sptr(_29024_k.ptr()) != nullptr)) {
			_case_begin_1e6b6ad3c:;
			{
				return static__1e42b25eb_sptr(_1e3137230_Sptr(_29024_k.ptr()));
			}
		}
		else if ((_1e3137494_Ptr(_29024_k.ptr()) != nullptr)) {
			_case_begin_1e6b6adb4:;
			{
				return static__1e42b2893_ptr(_1e3137494_Ptr(_29024_k.ptr()));
			}
		}
		else if ((_1e3137708_Enum(_29024_k.ptr()) != nullptr)) {
			_case_begin_1e6b6ae3b:;
			{
				return static__1e42b2b3a_enumDecl(_1e3137708_Enum(_29024_k.ptr()));
			}
		}
		else if ((_1e313796c_TypeEnum(_29024_k.ptr()) != nullptr)) {
			_case_begin_1e6b6aeb3:;
			{
				return static__1e42b2dd2_typeEnumDecl(_1e313796c_TypeEnum(_29024_k.ptr()));
			}
		}
		else if ((_1e3137e45_Slc(_29024_k.ptr()) != nullptr)) {
			_case_begin_1e6b6b03a:;
			{
				return static__1e42b3421_slice(_1e3137e45_Slc(_29024_k.ptr()));
			}
		}
		else if ((_1e31388e6_Map(_29024_k.ptr()) != nullptr)) {
			_case_begin_1e6b6b0b2:;
			{
				return static__1e42b36b8_map(_1e31388e6_Map(_29024_k.ptr()));
			}
		}
		else if ((_1e3138682_Trait(_29024_k.ptr()) != nullptr)) {
			_case_begin_1e6b6b139:;
			{
				return static__1e42b3c07_traitDecl(_1e3138682_Trait(_29024_k.ptr()));
			}
		}
		else if ((_1e313841d_Struct(_29024_k.ptr()) != nullptr)) {
			_case_begin_1e6b6b1b1:;
			{
				return static__1e42b4246_structureIns(_1e313841d_Struct(_29024_k.ptr()));
			}
		}
		else if ((_1e3137bd1_Arr(_29024_k.ptr()) != nullptr)) {
			_case_begin_1e6b6b238:;
			{
				return static__1e42b44dd_array(_1e3137bd1_Arr(_29024_k.ptr()));
			}
		}
		else if ((_1e31381a9_Fn(_29024_k.ptr()) != nullptr)) {
			_case_begin_1e6b6b2b0:;
			{
				return static__1e42b55aa_func(_1e31381a9_Fn(_29024_k.ptr()));
			}
		}
		_match_end_1e6b6a9c9:;
	};
	{
		auto &_match_expr{ _29024_k.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e42b09a1_customType>>()) {
			_case_begin_1e6b6b38c:;
			{
				return _29024_k.get()._field_Kind.operator jule::Ptr<_1e42b09a1_customType>().get()._field_kind;
			}
		}
		else {
			_case_begin_1e6b727c2:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);
			}
		}
		_match_end_1e6b7276c:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e42b1298_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e697035b_name(_1e6b747d5_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1e697048d_what(_1e6b747d5_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1e6b74bc0_reset(_1e6b747d5_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1e6b74d02_short(_1e6b747d5_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6b747d5_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1e6b77ee2_name(_1e6b78498_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1e6b78762_what(_1e6b78498_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1e6b78894_reset(_1e6b78498_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1e6b789c6_short(_1e6b78498_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6b78498_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1e6b7b9c9_name(_1e6b7be80_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1e6b7c249_what(_1e6b7be80_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1e6b7c37b_reset(_1e6b7be80_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1e6b7c4ad_short(_1e6b7be80_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6b7be80_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1e6b80505_name(_1e6b809ab_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1e6b80c75_what(_1e6b809ab_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1e6b80da7_reset(_1e6b809ab_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1e6b80ed9_short(_1e6b809ab_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6b809ab_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1e6b83edc_name(_1e6b84493_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1e6b8475c_what(_1e6b84493_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1e6b8488e_reset(_1e6b84493_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1e6b849c1_short(_1e6b84493_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6b84493_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e42e927b_FlagSet> static__1e42e9567_new(void) {
	return jule::new_ptr<_1e42e927b_FlagSet>(_1e42e927b_FlagSet{._field__flags=jule::Slice<jule::Trait<_1e4060344_CommonFlag>>::alloc(0LL,20LL)});
}



inline jule::Trait<_1e4060344_CommonFlag> _1e42e99eb_find_flag(_1e42e927b_FlagSet* _self_, jule::Str _7132_name) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1e6b9013b:;
		if (it != expr.end()) {
			jule::Trait<_1e4060344_CommonFlag> _7221_flag = *it;
			{
				if ((_1e4060344_CommonFlag_mptr_data[(_7221_flag).type_offset]._1e4060212_name(_7221_flag) == _7132_name)) {
					return _7221_flag;
				};
			}
			_iter_next_1e6b9013b:;
			++it;
			goto _iter_begin_1e6b9013b;
		}
		_iter_end_1e6b9013b:;
	};
	return nullptr;
}



inline jule::Trait<_1e4060344_CommonFlag> _1e42e9d09_find_flag_short(_1e42e927b_FlagSet* _self_, jule::I32 _8138_name) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1e6b9059d:;
		if (it != expr.end()) {
			jule::Trait<_1e4060344_CommonFlag> _8221_flag = *it;
			{
				if ((_1e4060344_CommonFlag_mptr_data[(_8221_flag).type_offset]._1e4015382_short(_8221_flag) == _8138_name)) {
					return _8221_flag;
				};
			}
			_iter_next_1e6b9059d:;
			++it;
			goto _iter_begin_1e6b9059d;
		}
		_iter_end_1e6b9059d:;
	};
	return nullptr;
}



inline jule::Slice<jule::Trait<_1e4060344_CommonFlag>> _1e42ea06d_flags(_1e42e927b_FlagSet* _self_) {
	return (*_self_)._field__flags;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1e42ea37b_parse(_1e42e927b_FlagSet* _self_, jule::Slice<jule::Str> _11528_args) {
	_1e42eb954_ArgParser _11617_ap = _1e42eb954_ArgParser{._field_set=(*_self_), ._field_args=_11528_args, };;
	({
		auto except = _1e42ecd40_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(),_11617_ap._field_content);
}



inline void _1e42ea557_reset(_1e42e927b_FlagSet* _self_) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1e6b93947:;
		if (it != expr.end()) {
			jule::Trait<_1e4060344_CommonFlag> _12616_f = *it;
			{
				_1e4060344_CommonFlag_mptr_data[(_12616_f).type_offset]._1e42e77eb_reset(_12616_f);
			}
			_iter_next_1e6b93947:;
			++it;
			goto _iter_begin_1e6b93947;
		}
		_iter_end_1e6b93947:;
	};
}



inline jule::Ptr<_1e6b84493_Flag> _1e6c10c5b_add_flag_common(_1e42e927b_FlagSet* _self_, jule::Str _13141_name, jule::I32 _13152_short, jule::Str _13165_what) {
	{
		
{
			_case_begin_1e6c123cd:;
			{
				goto _match_end_1e6c12367;
			}
		}
		_match_end_1e6c12367:;
	};
	if ((_1e42e99eb_find_flag(&(*_self_), _13141_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _13141_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13152_short != 0LL) && (_1e42e9d09_find_flag_short(&(*_self_), _13152_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13152_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1e6b84493_Flag> _14817_flag = jule::new_ptr<_1e6b84493_Flag>(_1e6b84493_Flag{._field__name=_13141_name, ._field__short=_13152_short, ._field__what=_13165_what, });;
	(*_self_)._field__flags = jule::alloc_for_append((*_self_)._field__flags,1);(*_self_)._field__flags.__push(jule::Trait<_1e4060344_CommonFlag>(_14817_flag, 4));;
	return _14817_flag;
}

inline jule::Ptr<_1e6b809ab_Flag> _1e6c1987a_add_flag_common(_1e42e927b_FlagSet* _self_, jule::Str _13141_name, jule::I32 _13152_short, jule::Str _13165_what) {
	{
		
{
			_case_begin_1e6c1ae64:;
			{
				goto _match_end_1e6c1addc;
			}
		}
		_match_end_1e6c1addc:;
	};
	if ((_1e42e99eb_find_flag(&(*_self_), _13141_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _13141_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13152_short != 0LL) && (_1e42e9d09_find_flag_short(&(*_self_), _13152_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13152_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1e6b809ab_Flag> _14817_flag = jule::new_ptr<_1e6b809ab_Flag>(_1e6b809ab_Flag{._field__name=_13141_name, ._field__short=_13152_short, ._field__what=_13165_what, });;
	(*_self_)._field__flags = jule::alloc_for_append((*_self_)._field__flags,1);(*_self_)._field__flags.__push(jule::Trait<_1e4060344_CommonFlag>(_14817_flag, 3));;
	return _14817_flag;
}



inline void _1e6c0dc26_add_var(_1e42e927b_FlagSet* _self_, jule::Ptr<jule::Str> _17537_var, jule::Str _17546_name, jule::I32 _17557_short, jule::Str _17570_what) {
	jule::Ptr<_1e6b84493_Flag> _17617_flag = _1e6c10c5b_add_flag_common(&(*_self_), _17546_name,_17557_short,_17570_what);;
	_17617_flag.get()._field__default=(*(_17537_var));
	_17617_flag.get()._field__data=_17537_var;
}

inline void _1e6c17856_add_var(_1e42e927b_FlagSet* _self_, jule::Ptr<jule::Bool> _17537_var, jule::Str _17546_name, jule::I32 _17557_short, jule::Str _17570_what) {
	jule::Ptr<_1e6b809ab_Flag> _17617_flag = _1e6c1987a_add_flag_common(&(*_self_), _17546_name,_17557_short,_17570_what);;
	_17617_flag.get()._field__default=(*(_17537_var));
	_17617_flag.get()._field__data=_17537_var;
}







std::ostream &operator<<(std::ostream &_Stream, _1e42e927b_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "_flags:" << _Src._field__flags;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Ptr<_1e3381952_IR>,jule::Slice<_20a35491e_Log>> static__1e1d4c8c5_Build(jule::Str _2725_path, jule::I64 _2736_flags) {
	jule::Ptr<_1e333ae7d_JuleImporter> _2817_importer = static__1e3387c00_New(_1e3304d37_buildCompileInfo());;
	jule::Slice<jule::Ptr<_1e24d0d9e_Ast>> _2918_files;;
	jule::Slice<_20a35491e_Log> _2929_logs;;
	std::tie(_2918_files,_2929_logs) = _1e33bb1b7_ImportPackage(_2817_importer.ptr(), _2725_path,true);
	if ((_2929_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_2929_logs);
	};
	jule::Str _3313_root = _2725_path;;
	if ((_2918_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Ptr<_1e3208576_Package> _3918_pkg;;
	std::tie(_3918_pkg,_2929_logs) = _1e3151c94_AnalyzePackage(_2918_files,jule::Trait<_1e3202d89_Importer>(_2817_importer, 0),_2736_flags);
	if ((_2929_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_2929_logs);
	};
	jule::Ptr<_1e3381952_IR> _4417_ir = jule::new_ptr<_1e3381952_IR>(_1e3381952_IR{._field_Root=_3313_root, ._field_Main=_3918_pkg, ._field_Used=_1e338952b_AllPackages(_2817_importer.ptr()), });;
	_4417_ir.get()._field_Passes=_1e3302087_getAllUniquePasses(_4417_ir.get()._field_Main,_4417_ir.get()._field_Used);
	return std::make_tuple(_4417_ir,nullptr);
}



inline void _1e20dd4b2_appendStructs(_1e3381952_IR* _self_, jule::Ptr<_1e3208576_Package>& _5633_p, jule::Slice<jule::Ptr<_1e2505d6e_Struct>>& _5657_buffer) {
	{
		auto &expr = _5633_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1e6626c7c:;
		if (it != expr.end()) {
			jule::Ptr<_1e310432e_SymbolTable> _5721_f = *it;
			{
				{
					auto &expr = _5721_f.get()._field_Structs;
					auto it = expr.begin();
					_iter_begin_1e662761d:;
					if (it != expr.end()) {
						jule::Ptr<_1e2505d6e_Struct> _5825_s = *it;
						{
							if ((!(_5825_s.get()._field_CppLinked))) {
								_5657_buffer = jule::alloc_for_append(_5657_buffer,1);_5657_buffer.__push(_5825_s);;
							};
						}
						_iter_next_1e662761d:;
						++it;
						goto _iter_begin_1e662761d;
					}
					_iter_end_1e662761d:;
				};
			}
			_iter_next_1e6626c7c:;
			++it;
			goto _iter_begin_1e6626c7c;
		}
		_iter_end_1e6626c7c:;
	};
}



inline jule::Slice<jule::Ptr<_1e2505d6e_Struct>> _1e32edec9_GetAllStructures(_1e3381952_IR* _self_) {
	jule::Slice<jule::Ptr<_1e2505d6e_Struct>> _6917_buffer = nullptr;;
	_1e20dd4b2_appendStructs(&(*_self_), (*_self_)._field_Main,_6917_buffer);
	{
		auto &expr = (*_self_)._field_Used;
		auto it = expr.begin();
		_iter_begin_1e662808b:;
		if (it != expr.end()) {
			jule::Ptr<_1e320561c_ImportInfo> _7121_u = *it;
			{
				if ((!(_7121_u.get()._field_CppLinked))) {
					_1e20dd4b2_appendStructs(&(*_self_), _7121_u.get()._field_Package,_6917_buffer);
				};
			}
			_iter_next_1e662808b:;
			++it;
			goto _iter_begin_1e662808b;
		}
		_iter_end_1e662808b:;
	};
	return _6917_buffer;
}



inline void _1e227cd6b_appendGlobals(_1e3381952_IR* _self_, jule::Ptr<_1e3208576_Package>& _7933_p, jule::Slice<jule::Ptr<_1e322a147_Var>>& _7957_buffer) {
	{
		auto &expr = _7933_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1e6629e17:;
		if (it != expr.end()) {
			jule::Ptr<_1e310432e_SymbolTable> _8021_f = *it;
			{
				{
					auto &expr = _8021_f.get()._field_Vars;
					auto it = expr.begin();
					_iter_begin_1e662a764:;
					if (it != expr.end()) {
						jule::Ptr<_1e322a147_Var> _8125_v = *it;
						{
							if ((((_8125_v.get()._field_Token != nullptr) && (!(_8125_v.get()._field_CppLinked))) && (!(_8125_v.get()._field_Constant)))) {
								_7957_buffer = jule::alloc_for_append(_7957_buffer,1);_7957_buffer.__push(_8125_v);;
							};
						}
						_iter_next_1e662a764:;
						++it;
						goto _iter_begin_1e662a764;
					}
					_iter_end_1e662a764:;
				};
			}
			_iter_next_1e6629e17:;
			++it;
			goto _iter_begin_1e6629e17;
		}
		_iter_end_1e6629e17:;
	};
}



inline jule::Slice<jule::Ptr<_1e322a147_Var>> _1e18058cd_GetAllGlobals(_1e3381952_IR* _self_) {
	jule::Slice<jule::Ptr<_1e322a147_Var>> _9217_buffer = nullptr;;
	_1e227cd6b_appendGlobals(&(*_self_), (*_self_)._field_Main,_9217_buffer);
	{
		auto &expr = (*_self_)._field_Used;
		auto it = expr.begin();
		_iter_begin_1e662c25a:;
		if (it != expr.end()) {
			jule::Ptr<_1e320561c_ImportInfo> _9421_u = *it;
			{
				if ((!(_9421_u.get()._field_CppLinked))) {
					_1e227cd6b_appendGlobals(&(*_self_), _9421_u.get()._field_Package,_9217_buffer);
				};
			}
			_iter_next_1e662c25a:;
			++it;
			goto _iter_begin_1e662c25a;
		}
		_iter_end_1e662c25a:;
	};
	return _9217_buffer;
}



inline void _1e18062b3_Order(_1e3381952_IR* _self_) {
	(*_self_)._field_Ordered._field_Structs=_1e32edec9_GetAllStructures(&(*_self_));
	(*_self_)._field_Ordered._field_Globals=_1e18058cd_GetAllGlobals(&(*_self_));
	static__1e3388470_orderStructures((*_self_)._field_Ordered._field_Structs);
	static__1e33b3764_orderVars((*_self_)._field_Ordered._field_Globals);
}







std::ostream &operator<<(std::ostream &_Stream, _1e3381952_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e2507a52_Str(_1e253220d_StructIns* _self_) {
	jule::Str _24317_kind = jule::Str();;
	_24317_kind+=(*_self_)._field_Decl.get()._field_Ident;
	if (((*_self_)._field_Generics.len() > 0LL)) {
		_24317_kind+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_Generics;
			auto it = expr.begin();
			_iter_begin_1e56368c5:;
			if (it != expr.end()) {
				jule::Ptr<_1e313367c_InsGeneric> &_24720_g = *it;
				{
					_24317_kind+=_1e31352a5_Str(_24720_g.get()._field_Kind.ptr());
					_24317_kind+=jule::Str(",", 1);
				}
				_iter_next_1e56368c5:;
				++it;
				goto _iter_begin_1e56368c5;
			}
			_iter_end_1e56368c5:;
		};
		(_24317_kind).mut_slice(0LL,(_24317_kind.len() - 1LL));;
		_24317_kind+=jule::Str("]", 1);
	};
	return _24317_kind;
}



inline jule::Bool _1e2508bb8_Equals(jule::Ptr<_1e253220d_StructIns> _self_, jule::Ptr<_1e3134da9_TypeKind> _25826_other) {
	jule::Ptr<_1e253220d_StructIns> _25913_s = _1e313841d_Struct(_25826_other.ptr());;
	if ((_25913_s == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_Decl != _25913_s.get()._field_Decl)) {
		return false;
	};
	if ((_self_.get()._field_Generics.len() != _25913_s.get()._field_Generics.len())) {
		return false;
	};
	jule::I64 _27217_i = 0LL;;
	for (; (_27217_i < _self_.get()._field_Generics.len()); (_27217_i)++) {
		{
			if ((!(_1e31355b3_Equals(_self_.get()._field_Generics[_27217_i].get()._field_Kind, _25913_s.get()._field_Generics[_27217_i].get()._field_Kind)))) {
				return false;
			};
		}
	_iter_next_1e563a104:;
	}
	_iter_end_1e563a104:;;
	return true;
}



inline jule::Bool _1e250b01c_Same(_1e253220d_StructIns* _self_, jule::Ptr<_1e253220d_StructIns> _28623_s) {
	if ((((*_self_)._field_Decl != _28623_s.get()._field_Decl) || (_28623_s.get()._field_Generics.len() != (*_self_)._field_Generics.len()))) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_Generics;
		auto it = expr.begin();
		_iter_begin_1e563c579:;
		if (it != expr.end()) {
			jule::I64 _29013_i = it - expr.begin();
			jule::Ptr<_1e313367c_InsGeneric> &_29016_g = *it;
			{
				if ((!(_1e31355b3_Equals(_29016_g.get()._field_Kind, _28623_s.get()._field_Generics[_29013_i].get()._field_Kind)))) {
					return false;
				};
			}
			_iter_next_1e563c579:;
			++it;
			_29013_i++;
			goto _iter_begin_1e563c579;
		}
		_iter_end_1e563c579:;
	};
	return true;
}



inline jule::Ptr<_1e258b344_Fn> _1e250c33c_FindMethod(_1e253220d_StructIns* _self_, jule::Str _30033_ident, jule::Bool _30045_statically) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1e563e05e:;
		if (it != expr.end()) {
			jule::Ptr<_1e258b344_Fn> _30121_f = *it;
			{
				if (((_30121_f.get()._field_Statically == _30045_statically) && (_30121_f.get()._field_Ident == _30033_ident))) {
					return _30121_f;
				};
			}
			_iter_next_1e563e05e:;
			++it;
			goto _iter_begin_1e563e05e;
		}
		_iter_end_1e563e05e:;
	};
	return nullptr;
}



inline jule::Ptr<_1e250d4d6_FieldIns> _1e250ed56_FindField(_1e253220d_StructIns* _self_, jule::Str _31132_ident) {
	{
		auto &expr = (*_self_)._field_Fields;
		auto it = expr.begin();
		_iter_begin_1e56402d5:;
		if (it != expr.end()) {
			jule::Ptr<_1e250d4d6_FieldIns> _31221_f = *it;
			{
				if ((_31221_f.get()._field_Decl.get()._field_Ident == _31132_ident)) {
					return _31221_f;
				};
			}
			_iter_next_1e56402d5:;
			++it;
			goto _iter_begin_1e56402d5;
		}
		_iter_end_1e56402d5:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1e253220d_StructIns _Src) {
	_Stream << "StructIns{";
	_Stream << "Checked:" << _Src._field_Checked << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Operators:" << _Src._field_Operators;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e3bd4c11_ObjectDeadCode> static__1e3bd5162_new(jule::Ptr<_1e3381952_IR>& _3424_ir) {
	return jule::new_ptr<_1e3bd4c11_ObjectDeadCode>(_1e3bd4c11_ObjectDeadCode{._field_ir=_3424_ir});
}



inline jule::Bool _1e6666c56_isLive(jule::Ptr<_1e3bd4c11_ObjectDeadCode> _self_, jule::Ptr<_1e259d246_Trait>& _4030_t) {
	jule::Slice<jule::Ptr<_1e259d246_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1e6668cd0:;
			{
				_4117_live=_self_.get()._field_live._field_traits;
			}
		}
		_match_end_1e66689e4:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1e66694a6:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;
				};
			}
			_iter_next_1e66694a6:;
			++it;
			_5213_i++;
			goto _iter_begin_1e66694a6;
		}
		_iter_end_1e66694a6:;
	};
	return false;
}

inline jule::Bool _1e666ca2b_isLive(jule::Ptr<_1e3bd4c11_ObjectDeadCode> _self_, jule::Ptr<_1e258dee5_FnIns>& _4030_t) {
	jule::Slice<jule::Ptr<_1e258dee5_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1e666e357:;
			{
				_4117_live=_self_.get()._field_live._field_fns;
			}
		}
		_match_end_1e666e29c:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1e666e90c:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;
				};
			}
			_iter_next_1e666e90c:;
			++it;
			_5213_i++;
			goto _iter_begin_1e666e90c;
		}
		_iter_end_1e666e90c:;
	};
	return false;
}

inline jule::Bool _1e6673ba8_isLive(jule::Ptr<_1e3bd4c11_ObjectDeadCode> _self_, jule::Ptr<_1e253220d_StructIns>& _4030_t) {
	jule::Slice<jule::Ptr<_1e253220d_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1e66781eb:;
			{
				_4117_live=_self_.get()._field_live._field_structs;
			}
		}
		_match_end_1e6677e76:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1e66782c8:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;
				};
			}
			_iter_next_1e66782c8:;
			++it;
			_5213_i++;
			goto _iter_begin_1e66782c8;
		}
		_iter_end_1e66782c8:;
	};
	return false;
}

inline jule::Bool _1e667aac2_isLive(jule::Ptr<_1e3bd4c11_ObjectDeadCode> _self_, jule::Ptr<_1e322a147_Var>& _4030_t) {
	jule::Slice<jule::Ptr<_1e322a147_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1e667c93c:;
			{
				_4117_live=_self_.get()._field_live._field_vars;
			}
		}
		_match_end_1e667c81b:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1e667d344:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;
				};
			}
			_iter_next_1e667d344:;
			++it;
			_5213_i++;
			goto _iter_begin_1e667d344;
		}
		_iter_end_1e667d344:;
	};
	return false;
}



inline void _1e66672ea_pushLive(jule::Ptr<_1e3bd4c11_ObjectDeadCode> _self_, jule::Ptr<_1e259d246_Trait> _6035_t) {
	{
		
{
			_case_begin_1e666aee1:;
			{
				_self_.get()._field_live._field_traits = jule::alloc_for_append(_self_.get()._field_live._field_traits,1);_self_.get()._field_live._field_traits.__push(_6035_t);;
			}
		}
		_match_end_1e666ab8e:;
	};
}

inline void _1e667115b_pushLive(jule::Ptr<_1e3bd4c11_ObjectDeadCode> _self_, jule::Ptr<_1e258dee5_FnIns> _6035_t) {
	{
		
{
			_case_begin_1e6671cd8:;
			{
				_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_6035_t);;
			}
		}
		_match_end_1e6671a63:;
	};
}

inline void _1e667423b_pushLive(jule::Ptr<_1e3bd4c11_ObjectDeadCode> _self_, jule::Ptr<_1e253220d_StructIns> _6035_t) {
	{
		
{
			_case_begin_1e6675a01:;
			{
				_self_.get()._field_live._field_structs = jule::alloc_for_append(_self_.get()._field_live._field_structs,1);_self_.get()._field_live._field_structs.__push(_6035_t);;
			}
		}
		_match_end_1e6675715:;
	};
}

inline void _1e667e4aa_pushLive(jule::Ptr<_1e3bd4c11_ObjectDeadCode> _self_, jule::Ptr<_1e322a147_Var> _6035_t) {
	{
		
{
			_case_begin_1e667ee8e:;
			{
				_self_.get()._field_live._field_vars = jule::alloc_for_append(_self_.get()._field_live._field_vars,1);_self_.get()._field_live._field_vars.__push(_6035_t);;
			}
		}
		_match_end_1e667edb2:;
	};
}



inline void _1e3c132b1_setReferencesAsLive(jule::Ptr<_1e3bd4c11_ObjectDeadCode> _self_, jule::Ptr<_1e2591e60_ReferenceStack>& _7344_rs) {
	if ((_7344_rs == nullptr)) {
		return;;
	};
	jule::I64 _7717_i = 0LL;;
	for (; (_7717_i < _1e259257b_Len(_7344_rs.ptr())); (_7717_i)++) {
		{
			jule::Any _7921_ref = _1e2592889_At(_7344_rs.ptr(), _7717_i);;
			{
				auto &_match_expr{ _7921_ref };
				
				if (_match_expr.type_is<jule::Ptr<_1e259d246_Trait>>()) {
					_case_begin_1e6665cbb:;
					{
						jule::Ptr<_1e259d246_Trait> _8225_t = _7921_ref.operator jule::Ptr<_1e259d246_Trait>();;
						if (_1e6666c56_isLive(_self_, _8225_t)) {
							goto _iter_next_1e66650a6;
						};
						_1e66672ea_pushLive(_self_, _8225_t);
						{
							auto &expr = _8225_t.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_1e666a782:;
							if (it != expr.end()) {
								jule::Ptr<_1e258b344_Fn> _8729_ins = *it;
								{
									{
										auto &expr = _8729_ins.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_1e666a9a2:;
										if (it != expr.end()) {
											jule::Ptr<_1e258dee5_FnIns> _8833_mins = *it;
											{
												if (_1e666ca2b_isLive(_self_, _8833_mins)) {
													goto _iter_next_1e666a9a2;
												};
												_1e667115b_pushLive(_self_, _8833_mins);
												_1e3c132b1_setReferencesAsLive(_self_, _8833_mins.get()._field_Refers);
											}
											_iter_next_1e666a9a2:;
											++it;
											goto _iter_begin_1e666a9a2;
										}
										_iter_end_1e666a9a2:;
									};
								}
								_iter_next_1e666a782:;
								++it;
								goto _iter_begin_1e666a782;
							}
							_iter_end_1e666a782:;
						};
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1e258dee5_FnIns>>()) {
					_case_begin_1e6665d32:;
					{
						jule::Ptr<_1e258dee5_FnIns> _9725_f = _7921_ref.operator jule::Ptr<_1e258dee5_FnIns>();;
						if (_1e666ca2b_isLive(_self_, _9725_f)) {
							goto _match_end_1e6665947;
						};
						if (((_9725_f.get()._field_Owner != nullptr) && (!(_9725_f.get()._field_Decl.get()._field_Statically)))) {
							if ((!(_1e6673ba8_isLive(_self_, _9725_f.get()._field_Owner)))) {
								_1e667423b_pushLive(_self_, _9725_f.get()._field_Owner);
								_1e3c132b1_setReferencesAsLive(_self_, _9725_f.get()._field_Owner.get()._field_Refers);
							};
						};
						_1e667115b_pushLive(_self_, _9725_f);
						_1e3c132b1_setReferencesAsLive(_self_, _9725_f.get()._field_Refers);
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1e322a147_Var>>()) {
					_case_begin_1e6665e20:;
					{
						jule::Ptr<_1e322a147_Var> _11025_v = _7921_ref.operator jule::Ptr<_1e322a147_Var>();;
						if (_1e667aac2_isLive(_self_, _11025_v)) {
							goto _match_end_1e6665947;
						};
						_1e667e4aa_pushLive(_self_, _11025_v);
						_1e3c132b1_setReferencesAsLive(_self_, _11025_v.get()._field_Refers);
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1e253220d_StructIns>>()) {
					_case_begin_1e6665e86:;
					{
						jule::Ptr<_1e253220d_StructIns> _11725_s = _7921_ref.operator jule::Ptr<_1e253220d_StructIns>();;
						if (_1e6673ba8_isLive(_self_, _11725_s)) {
							goto _match_end_1e6665947;
						};
						_1e667423b_pushLive(_self_, _11725_s);
						_1e3c132b1_setReferencesAsLive(_self_, _11725_s.get()._field_Refers);
						{
							auto &expr = _11725_s.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_1e6683426:;
							if (it != expr.end()) {
								jule::Ptr<_1e258b344_Fn> _12329_ins = *it;
								{
									{
										auto &expr = _12329_ins.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_1e667e81d:;
										if (it != expr.end()) {
											jule::Ptr<_1e258dee5_FnIns> _12433_mins = *it;
											{
												if (_1e666ca2b_isLive(_self_, _12433_mins)) {
													goto _iter_next_1e667e81d;
												};
												_1e667115b_pushLive(_self_, _12433_mins);
												_1e3c132b1_setReferencesAsLive(_self_, _12433_mins.get()._field_Refers);
											}
											_iter_next_1e667e81d:;
											++it;
											goto _iter_begin_1e667e81d;
										}
										_iter_end_1e667e81d:;
									};
								}
								_iter_next_1e6683426:;
								++it;
								goto _iter_begin_1e6683426;
							}
							_iter_end_1e6683426:;
						};
					}
				}
				_match_end_1e6665947:;
			};
		}
	_iter_next_1e66650a6:;
	}
	_iter_end_1e66650a6:;;
}



inline void _1e3c13536_inits(jule::Ptr<_1e3bd4c11_ObjectDeadCode> _self_, jule::Ptr<_1e3208576_Package>& _13630_pkg) {
	{
		auto &expr = _13630_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1e666546e:;
		if (it != expr.end()) {
			jule::Ptr<_1e310432e_SymbolTable> _13721_file = *it;
			{
				{
					auto &expr = _13721_file.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_1e6686407:;
					if (it != expr.end()) {
						jule::Ptr<_1e258b344_Fn> _13825_f = *it;
						{
							if ((_13825_f.get()._field_Ident == jule::Str("init", 4))) {
								jule::Ptr<_1e258dee5_FnIns> _14029_ins = _13825_f.get()._field_Instances[0LL];;
								_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_14029_ins);;
								_1e3c132b1_setReferencesAsLive(_self_, _14029_ins.get()._field_Refers);
							};
						}
						_iter_next_1e6686407:;
						++it;
						goto _iter_begin_1e6686407;
					}
					_iter_end_1e6686407:;
				};
			}
			_iter_next_1e666546e:;
			++it;
			goto _iter_begin_1e666546e;
		}
		_iter_end_1e666546e:;
	};
}



inline void _1e3c137ab_collectLivePackage(jule::Ptr<_1e3bd4c11_ObjectDeadCode> _self_, jule::Ptr<_1e3208576_Package>& _14843_pkg) {
	_1e3c13536_inits(_self_, _14843_pkg);
	if (_22eb609a8_Test) {
		{
			auto &expr = _14843_pkg.get()._field_Files;
			auto it = expr.begin();
			_iter_begin_1e66888c1:;
			if (it != expr.end()) {
				jule::Ptr<_1e310432e_SymbolTable> _15425_file = *it;
				{
					{
						auto &expr = _15425_file.get()._field_Funcs;
						auto it = expr.begin();
						_iter_begin_1e6689262:;
						if (it != expr.end()) {
							jule::Ptr<_1e258b344_Fn> _15529_f = *it;
							{
								if (_1e3c157be_hasDirective(_15529_f.get()._field_Directives,jule::Str("test", 4))) {
									jule::Ptr<_1e258dee5_FnIns> _15733_ins = _15529_f.get()._field_Instances[0LL];;
									_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_15733_ins);;
									_1e3c132b1_setReferencesAsLive(_self_, _15733_ins.get()._field_Refers);
								};
							}
							_iter_next_1e6689262:;
							++it;
							goto _iter_begin_1e6689262;
						}
						_iter_end_1e6689262:;
					};
				}
				_iter_next_1e66888c1:;
				++it;
				goto _iter_begin_1e66888c1;
			}
			_iter_end_1e66888c1:;
		};
	};
}



inline void _1e3c13987_collectLive(jule::Ptr<_1e3bd4c11_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1e6689bbe:;
		if (it != expr.end()) {
			jule::Ptr<_1e320561c_ImportInfo> _16721_used = *it;
			{
				if ((!(_16721_used.get()._field_CppLinked))) {
					_1e3c137ab_collectLivePackage(_self_, _16721_used.get()._field_Package);
				};
			}
			_iter_next_1e6689bbe:;
			++it;
			goto _iter_begin_1e6689bbe;
		}
		_iter_end_1e6689bbe:;
	};
	_1e3c137ab_collectLivePackage(_self_, _self_.get()._field_ir.get()._field_Main);
	jule::Ptr<_1e258b344_Fn> _17517_main = _1e3209d2a_FindFn(_self_.get()._field_ir.get()._field_Main.ptr(), jule::Str("main", 4),false);;
	jule::Ptr<_1e258dee5_FnIns> _17617_ins = _17517_main.get()._field_Instances[0LL];;
	_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_17617_ins);;
	_1e3c132b1_setReferencesAsLive(_self_, _17617_ins.get()._field_Refers);
}



inline void _1e3c13c0c_removeDeadGlobals(jule::Ptr<_1e3bd4c11_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1e322a147_Var>>& _18142_vars) {
	jule::I64 _18217_i = 0LL;;
	while ((_18217_i < _18142_vars.len())) {
		{
			jule::Ptr<_1e322a147_Var> _18417_v = _18142_vars[_18217_i];;
			if (_1e667aac2_isLive(_self_, _18417_v)) {
				(_18217_i)++;
				goto _iter_next_1e668e0be;
			};
			_18142_vars=jule::append(_18142_vars.slice(0LL,_18217_i),_18142_vars.slice((_18217_i + 1LL)));
		}
	_iter_next_1e668e0be:;
	}
	_iter_end_1e668e0be:;;
}



inline void _1e3c13e82_removeDeadFns(jule::Ptr<_1e3bd4c11_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1e258b344_Fn>>& _19338_funcs) {
	jule::I64 _19417_i = 0LL;;
	while ((_19417_i < _19338_funcs.len())) {
		{
			jule::Ptr<_1e258b344_Fn> _19621_f = _19338_funcs[_19417_i];;
			jule::I64 _19721_j = 0LL;;
			while ((_19721_j < _19621_f.get()._field_Instances.len())) {
				{
					jule::Ptr<_1e258dee5_FnIns> _19921_ins = _19621_f.get()._field_Instances[_19721_j];;
					if (_1e666ca2b_isLive(_self_, _19921_ins)) {
						(_19721_j)++;
						goto _iter_next_1e66926ee;
					};
					_19621_f.get()._field_Instances=jule::append(_19621_f.get()._field_Instances.slice(0LL,_19721_j),_19621_f.get()._field_Instances.slice((_19721_j + 1LL)));
				}
			_iter_next_1e66926ee:;
			}
			_iter_end_1e66926ee:;;
			if ((_19621_f.get()._field_Instances.len() == 0LL)) {
				_19338_funcs=jule::append(_19338_funcs.slice(0LL,_19417_i),_19338_funcs.slice((_19417_i + 1LL)));
				goto _iter_next_1e668e5b9;
			};
			(_19417_i)++;
		}
	_iter_next_1e668e5b9:;
	}
	_iter_end_1e668e5b9:;;
}



inline void _1e3c14207_removeDeadStructs(jule::Ptr<_1e3bd4c11_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1e2505d6e_Struct>>& _21442_structs) {
	jule::I64 _21517_i = 0LL;;
	while ((_21517_i < _21442_structs.len())) {
		{
			jule::Ptr<_1e2505d6e_Struct> _21721_s = _21442_structs[_21517_i];;
			jule::I64 _21821_j = 0LL;;
			while ((_21821_j < _21721_s.get()._field_Instances.len())) {
				{
					jule::Ptr<_1e253220d_StructIns> _22025_ins = _21721_s.get()._field_Instances[_21821_j];;
					_1e3c13e82_removeDeadFns(_self_, _22025_ins.get()._field_Methods);
					if (((_22025_ins.get()._field_Methods.len() != 0LL) || _1e6673ba8_isLive(_self_, _22025_ins))) {
						(_21821_j)++;
						goto _iter_next_1e6696923;
					};
					_21721_s.get()._field_Instances=jule::append(_21721_s.get()._field_Instances.slice(0LL,_21821_j),_21721_s.get()._field_Instances.slice((_21821_j + 1LL)));
				}
			_iter_next_1e6696923:;
			}
			_iter_end_1e6696923:;;
			if ((_21721_s.get()._field_Instances.len() == 0LL)) {
				_21442_structs=jule::append(_21442_structs.slice(0LL,_21517_i),_21442_structs.slice((_21517_i + 1LL)));
				goto _iter_next_1e6695768;
			};
			(_21517_i)++;
		}
	_iter_next_1e6695768:;
	}
	_iter_end_1e6695768:;;
}



inline void _1e3c1447c_removeDeadTraits(jule::Ptr<_1e3bd4c11_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1e259d246_Trait>>& _23641_traits) {
	jule::I64 _23717_i = 0LL;;
	while ((_23717_i < _23641_traits.len())) {
		{
			jule::Ptr<_1e259d246_Trait> _23921_t = _23641_traits[_23717_i];;
			if ((!(_1e6666c56_isLive(_self_, _23921_t)))) {
				_23641_traits=jule::append(_23641_traits.slice(0LL,_23717_i),_23641_traits.slice((_23717_i + 1LL)));
				goto _iter_next_1e669a394;
			};
			jule::I64 _24421_j = 0LL;;
			while ((_24421_j < _23921_t.get()._field_Implemented.len())) {
				{
					jule::Ptr<_1e2505d6e_Struct> _24621_s = _23921_t.get()._field_Implemented[_24421_j];;
					if ((_24621_s.get()._field_Instances.len() > 0LL)) {
						(_24421_j)++;
						goto _iter_next_1e669b032;
					};
					_23921_t.get()._field_Implemented=jule::append(_23921_t.get()._field_Implemented.slice(0LL,_24421_j),_23921_t.get()._field_Implemented.slice((_24421_j + 1LL)));
				}
			_iter_next_1e669b032:;
			}
			_iter_end_1e669b032:;;
			(_23717_i)++;
		}
	_iter_next_1e669a394:;
	}
	_iter_end_1e669a394:;;
}



inline void _1e3c14702_removeDeadsFile(jule::Ptr<_1e3bd4c11_ObjectDeadCode> _self_, jule::Ptr<_1e310432e_SymbolTable>& _25740_file) {
	_1e3c13e82_removeDeadFns(_self_, _25740_file.get()._field_Funcs);
	_1e3c14207_removeDeadStructs(_self_, _25740_file.get()._field_Structs);
	_1e3c1447c_removeDeadTraits(_self_, _25740_file.get()._field_Traits);
	_1e3c13c0c_removeDeadGlobals(_self_, _25740_file.get()._field_Vars);
}



inline void _1e3c14977_removeDeadsPackage(jule::Ptr<_1e3bd4c11_ObjectDeadCode> _self_, jule::Ptr<_1e3208576_Package>& _26443_pkg) {
	{
		auto &expr = _26443_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1e66a0a92:;
		if (it != expr.end()) {
			jule::Ptr<_1e310432e_SymbolTable> _26521_file = *it;
			{
				_1e3c14702_removeDeadsFile(_self_, _26521_file);
			}
			_iter_next_1e66a0a92:;
			++it;
			goto _iter_begin_1e66a0a92;
		}
		_iter_end_1e66a0a92:;
	};
}



inline void _1e3c14b53_removeDeads(jule::Ptr<_1e3bd4c11_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1e66a19b6:;
		if (it != expr.end()) {
			jule::Ptr<_1e320561c_ImportInfo> _27121_used = *it;
			{
				if ((!(_27121_used.get()._field_CppLinked))) {
					_1e3c14977_removeDeadsPackage(_self_, _27121_used.get()._field_Package);
				};
			}
			_iter_next_1e66a19b6:;
			++it;
			goto _iter_begin_1e66a19b6;
		}
		_iter_end_1e66a19b6:;
	};
	_1e3c14977_removeDeadsPackage(_self_, _self_.get()._field_ir.get()._field_Main);
}



inline void _1e3c14d2e_elimanate(jule::Ptr<_1e3bd4c11_ObjectDeadCode> _self_) {
	_1e3c13987_collectLive(_self_);
	_1e3c14b53_removeDeads(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1e3bd4c11_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e42a9e62_ObjectCoder> static__1e428ce89_New(jule::Ptr<_1e3381952_IR>& _7228_ir, _1e42a9a88_SerializationInfo _7237_info) {
	jule::Ptr<_1e42a9e62_ObjectCoder> _7317_oc = jule::new_ptr<_1e42a9e62_ObjectCoder>(_1e42a9e62_ObjectCoder{._field_ir=_7228_ir, ._field_info=_7237_info, });;
	_7317_oc.get()._field_ec=static__1e4236273_new(_7317_oc);
	_7317_oc.get()._field_sc=static__1e422d952_new(_7317_oc);
	return _7317_oc;
}



inline void _1e428d2b9_write(jule::Ptr<_1e42a9e62_ObjectCoder> _self_, jule::Str _8225_s) {
	_self_.get()._field_Obj+=_8225_s;
}



inline void _1e428da5b_addIndent(jule::Ptr<_1e42a9e62_ObjectCoder> _self_) {
	;
	_self_.get()._field_indentBuffer+=jule::Str("\t", 1);
}



inline void _1e428ea4b_doneIndent(jule::Ptr<_1e42a9e62_ObjectCoder> _self_) {
	_self_.get()._field_indentBuffer=_self_.get()._field_indentBuffer.slice(0LL,(_self_.get()._field_indentBuffer.len() - 1LL));
}



inline void _1e4290299_indent(jule::Ptr<_1e42a9e62_ObjectCoder> _self_) {
	_self_.get()._field_Obj+=_self_.get()._field_indentBuffer;
}



inline jule::I64 _1e427e61d_findTypeOffset(_1e42a9e62_ObjectCoder* _self_, jule::Ptr<_1e259d246_Trait> _10229_t, jule::Ptr<_1e3134da9_TypeKind> _10244_k) {
	if ((_10229_t.get()._field_Implemented.len() == 0LL)) {
		return 0LL;
	};
	jule::Ptr<_1e253220d_StructIns> _10617_s = nullptr;;
	if ((_1e3137230_Sptr(_10244_k.ptr()) != nullptr)) {
		_10244_k=_1e3137230_Sptr(_10244_k.ptr()).get()._field_Elem;
	};
	if ((_1e313841d_Struct(_10244_k.ptr()) == nullptr)) {
		return -1LL;
	};
	_10617_s=_1e313841d_Struct(_10244_k.ptr());
	{
		auto &expr = (*_self_)._field_tmap;
		auto it = expr.begin();
		_iter_begin_1e6a89299:;
		if (it != expr.end()) {
			jule::Ptr<_1e42a9c75_traitHash> &_11416_hash = *it;
			{
				if (((_11416_hash.get()._field_t == _10229_t) && (_11416_hash.get()._field_s == _10617_s))) {
					return _11416_hash.get()._field_i;
				};
			}
			_iter_next_1e6a89299:;
			++it;
			goto _iter_begin_1e6a89299;
		}
		_iter_end_1e6a89299:;
	};
	return -1LL;
}



inline void _1e4291685_locInfo(jule::Ptr<_1e42a9e62_ObjectCoder> _self_, jule::Ptr<_1d42b43cc_Token>& _12328_t) {
	jule::Str &_12414_loc = _12328_t.get()._field_File.get()._field_Path;;
	if (_22eb614e2_Production) {
		{
			
			if (_20a119ae1_HasPrefix(_12414_loc,_20a3768ec_PathStdlib)) {
				_case_begin_1e6a8b6ec:;
				{
					_1e428d2b9_write(_self_, _1e42423a0_cstrBytes(static_cast<jule::Slice<jule::U8>>(_12414_loc.slice((_20a1b1704_Dir(_20a3768ec_PathStdlib).len() + 1LL)))));
				}
			}
			else if (_20a119ae1_HasPrefix(_12414_loc,_self_.get()._field_ir.get()._field_Root)) {
				_case_begin_1e6a8b3bc:;
				{
					_1e428d2b9_write(_self_, _1e42423a0_cstrBytes(static_cast<jule::Slice<jule::U8>>(_12414_loc.slice((_20a1b1704_Dir(_self_.get()._field_ir.get()._field_Root).len() + 1LL)))));
				}
			}
			else {
				_case_begin_1e6a8b356:;
				{
					_1e428d2b9_write(_self_, _1e42423a0_cstrBytes(static_cast<jule::Slice<jule::U8>>(_12414_loc)));
				}
			}
			_match_end_1e6a8b279:;
		};
	} else {
		_1e428d2b9_write(_self_, _1e42423a0_cstrBytes(static_cast<jule::Slice<jule::U8>>(_12414_loc)));
	};
	_1e428d2b9_write(_self_, jule::Str(":", 1));
	_1e428d2b9_write(_self_, _1e31c54ee_Itoa(_12328_t.get()._field_Row));
	_1e428d2b9_write(_self_, jule::Str(":", 1));
	_1e428d2b9_write(_self_, _1e31c54ee_Itoa(_12328_t.get()._field_Column));
}



inline void _1e4270cb3_head(jule::Ptr<_1e42a9e62_ObjectCoder> _self_) {
	_1e42a4764_Time _15013_time = static__1e42a4d08_Now();;
	_1e42a40c1_AbsTime _15113_abs = _1e42a6447_Abs(&_15013_time);;
	_1e428d2b9_write(_self_, jule::Str("// Auto generated by JuleC.\n", 28));
	_1e428d2b9_write(_self_, jule::Str("// JuleC version: ", 18));
	_1e428d2b9_write(_self_, jule::Str("jule0.0.12 @master", 18));
	_1e428d2b9_write(_self_, jule::Str("\n", 1));
	_1e428d2b9_write(_self_, jule::Str("// Date: ", 9));
	_1e428d2b9_write(_self_, _1e31c4dc2_FmtUint(_15113_abs._field_Day,10LL));
	_1e428d2b9_write(_self_, jule::Str("/", 1));
	_1e428d2b9_write(_self_, _1e31c4dc2_FmtUint(_15113_abs._field_Month,10LL));
	_1e428d2b9_write(_self_, jule::Str("/", 1));
	_1e428d2b9_write(_self_, _1e31c4dc2_FmtUint(_15113_abs._field_Year,10LL));
	_1e428d2b9_write(_self_, jule::Str(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1e428d2b9_write(_self_, _self_.get()._field_info._field_Compiler);
	_1e428d2b9_write(_self_, jule::Str(" ", 1));
	_1e428d2b9_write(_self_, _self_.get()._field_info._field_CompilerCommand);
	_1e428d2b9_write(_self_, jule::Str("\n\n", 2));
	if (_22eb614e2_Production) {
		_1e428d2b9_write(_self_, jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_22eb60cb6_RC))) {
		_1e428d2b9_write(_self_, jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_22eb611d4_Safety))) {
		_1e428d2b9_write(_self_, jule::Str("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1e428d2b9_write(_self_, jule::Str("\n\n#include \"", 12));
	_1e428d2b9_write(_self_, _20a391d46_PathApi);
	_1e428d2b9_write(_self_, jule::Str("\"\n\n", 3));
}



inline void _1e428e2a9_links(jule::Ptr<_1e42a9e62_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1e6a9763c:;
		if (it != expr.end()) {
			jule::Ptr<_1e320561c_ImportInfo> _18316_used = *it;
			{
				{
					
					if ((!(_18316_used.get()._field_CppLinked))) {
						_case_begin_1e6a99100:;
						{
							goto _iter_next_1e6a9763c;
						}
					}
					else if (_20a347c42_IsStdHeaderPath(_18316_used.get()._field_Path)) {
						_case_begin_1e6a9850b:;
						{
							_1e428d2b9_write(_self_, jule::Str("#include ", 9));
							_1e428d2b9_write(_self_, _18316_used.get()._field_Path);
							_1e428d2b9_write(_self_, jule::Str("\n", 1));
						}
					}
					else {
						_case_begin_1e6a98165:;
						{
							_1e428d2b9_write(_self_, jule::Str("#include \"", 10));
							_1e428d2b9_write(_self_, _18316_used.get()._field_Path);
							_1e428d2b9_write(_self_, jule::Str("\"\n", 2));
						}
					}
					_match_end_1e6a98088:;
				};
			}
			_iter_next_1e6a9763c:;
			++it;
			goto _iter_begin_1e6a9763c;
		}
		_iter_end_1e6a9763c:;
	};
}



inline void _1e42745e1_prepareStructures(jule::Ptr<_1e42a9e62_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1e6a97d57:;
		if (it != expr.end()) {
			jule::Ptr<_1e2505d6e_Struct> _20021_s = *it;
			{
				if ((_20021_s.get()._field_Token != nullptr)) {
					_1e42ae9e4_prepareStructure(_20021_s);
				};
			}
			_iter_next_1e6a97d57:;
			++it;
			goto _iter_begin_1e6a97d57;
		}
		_iter_end_1e6a97d57:;
	};
}



inline void _1e427b42d_iterPackages(jule::Ptr<_1e42a9e62_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_1e3208576_Package>&)> _20732_f) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1e6a9ad05:;
		if (it != expr.end()) {
			jule::Ptr<_1e320561c_ImportInfo> _20821_used = *it;
			{
				if ((!(_20821_used.get()._field_CppLinked))) {
					_20732_f(_20821_used.get()._field_Package);
				};
			}
			_iter_next_1e6a9ad05:;
			++it;
			goto _iter_begin_1e6a9ad05;
		}
		_iter_end_1e6a9ad05:;
	};
	_20732_f(_self_.get()._field_ir.get()._field_Main);
}



inline void _1e427b9b1_buildTraitMap(jule::Ptr<_1e42a9e62_ObjectCoder> _self_) {
	_1e427b42d_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1e3208576_Package>&)>([=](jule::Ptr<_1e3208576_Package>& _21735_pkg) mutable -> void {
		_1e42ae791_iterFiles(_21735_pkg,jule::Fn<void(jule::Ptr<_1e310432e_SymbolTable>&)>([=](jule::Ptr<_1e310432e_SymbolTable>& _21836_file) mutable -> void {
			{
				auto &expr = _21836_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_1e6a9eb61:;
				if (it != expr.end()) {
					jule::Ptr<_1e259d246_Trait> _21929_t = *it;
					{
						if ((_21929_t.get()._field_Token == nullptr)) {
							return;;
						};
						if ((_21929_t.get()._field_Implemented.len() == 0LL)) {
							_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1e42a9c75_traitHash>(_1e42a9c75_traitHash{._field_t=_21929_t, ._field_s=nullptr, ._field_i=0LL}));;
							goto _iter_next_1e6a9eb61;
						};
						jule::I64 _23129_i = 0LL;;
						{
							auto &expr = _21929_t.get()._field_Implemented;
							auto it = expr.begin();
							_iter_begin_1e6aa0e4d:;
							if (it != expr.end()) {
								jule::Ptr<_1e2505d6e_Struct> _23233_s = *it;
								{
									{
										auto &expr = _23233_s.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_1e6aa0722:;
										if (it != expr.end()) {
											jule::Ptr<_1e253220d_StructIns> _23337_ins = *it;
											{
												_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1e42a9c75_traitHash>(_1e42a9c75_traitHash{._field_t=_21929_t, ._field_s=_23337_ins, ._field_i=_23129_i}));;
												(_23129_i)++;
											}
											_iter_next_1e6aa0722:;
											++it;
											goto _iter_begin_1e6aa0722;
										}
										_iter_end_1e6aa0722:;
									};
								}
								_iter_next_1e6aa0e4d:;
								++it;
								goto _iter_begin_1e6aa0e4d;
							}
							_iter_end_1e6aa0e4d:;
						};
					}
					_iter_next_1e6a9eb61:;
					++it;
					goto _iter_begin_1e6a9eb61;
				}
				_iter_end_1e6a9eb61:;
			};
		}));
	}));
}



inline void _1e427c880_traitDecls(jule::Ptr<_1e42a9e62_ObjectCoder> _self_) {
	_1e427b42d_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1e3208576_Package>&)>([=](jule::Ptr<_1e3208576_Package>& _24835_pkg) mutable -> void {
		_1e42ae791_iterFiles(_24835_pkg,jule::Fn<void(jule::Ptr<_1e310432e_SymbolTable>&)>([=](jule::Ptr<_1e310432e_SymbolTable>& _24936_file) mutable -> void {
			{
				auto &expr = _24936_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_1e6aa4726:;
				if (it != expr.end()) {
					jule::Ptr<_1e259d246_Trait> _25029_t = *it;
					{
						if ((_25029_t.get()._field_Token == nullptr)) {
							return;;
						};
						_1e4290299_indent(_self_);
						_1e428d2b9_write(_self_, jule::Str("struct ", 7));
						_1e428d2b9_write(_self_, static__1e42489d3_traitDecl(_25029_t));
						_1e428d2b9_write(_self_, jule::Str("{};\n", 4));
					}
					_iter_next_1e6aa4726:;
					++it;
					goto _iter_begin_1e6aa4726;
				}
				_iter_end_1e6aa4726:;
			};
		}));
	}));
}



inline void _1e427d045_structurePlainDecl(jule::Ptr<_1e42a9e62_ObjectCoder> _self_, jule::Ptr<_1e2505d6e_Struct>& _26343_s) {
	{
		auto &expr = _26343_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1e6aa4319:;
		if (it != expr.end()) {
			jule::Ptr<_1e253220d_StructIns> _26421_ins = *it;
			{
				_1e428d2b9_write(_self_, jule::Str("struct ", 7));
				_1e428d2b9_write(_self_, static__1e42492b9_structureIns(_26421_ins));
				_1e428d2b9_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1e6aa4319:;
			++it;
			goto _iter_begin_1e6aa4319;
		}
		_iter_end_1e6aa4319:;
	};
}



inline void _1e427d70a_structurePlainDecls(jule::Ptr<_1e42a9e62_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1e6aa69ae:;
		if (it != expr.end()) {
			jule::Ptr<_1e2505d6e_Struct> _27221_s = *it;
			{
				if ((_27221_s.get()._field_Token != nullptr)) {
					_1e427d045_structurePlainDecl(_self_, _27221_s);
				};
			}
			_iter_next_1e6aa69ae:;
			++it;
			goto _iter_begin_1e6aa69ae;
		}
		_iter_end_1e6aa69ae:;
	};
}



inline void _1e427ddc0_fieldDecl(jule::Ptr<_1e42a9e62_ObjectCoder> _self_, jule::Ptr<_1e250d4d6_FieldIns>& _27934_f) {
	_1e428d2b9_write(_self_, static__1e42b5852_kind(_27934_f.get()._field_Kind));
	_1e428d2b9_write(_self_, jule::Str(" ", 1));
	_1e428d2b9_write(_self_, static__1e4249561_field(_27934_f.get()._field_Decl));
	_1e428d2b9_write(_self_, jule::Str(" = ", 3));
	if ((_27934_f.get()._field_Default == nullptr)) {
		_1e42419ba_initExpr(_self_.get()._field_ec, _27934_f.get()._field_Kind);
	} else {
		_1e42414c0_expr(_self_.get()._field_ec, _27934_f.get()._field_Default.get()._field_Model);
	};
	_1e428d2b9_write(_self_, jule::Str(";", 1));
}



inline void _1e42759aa_structureDestructor(jule::Ptr<_1e42a9e62_ObjectCoder> _self_, jule::Ptr<_1e253220d_StructIns>& _29444_s) {
	;
	jule::Ptr<_1e258b344_Fn> _29713_disposeMethod = _1e250c33c_FindMethod(_29444_s.ptr(), jule::Str("dispose", 7),false);;
	jule::Bool _29817_disposed = static__1e322b2e1_Dispose(_29713_disposeMethod);;
	if ((!(_29817_disposed))) {
		return;;
	};
	_1e428d2b9_write(_self_, jule::Str("~", 1));
	_1e428d2b9_write(_self_, static__1e42492b9_structureIns(_29444_s));
	_1e428d2b9_write(_self_, jule::Str("(void) { ", 9));
	_1e428d2b9_write(_self_, static__1e4248494_func(_29713_disposeMethod));
	_1e428d2b9_write(_self_, jule::Str("(this); }", 9));
}



inline void _1e42aa506_structureDeriveDefsDecls(jule::Ptr<_1e42a9e62_ObjectCoder> _self_, jule::Ptr<_1e253220d_StructIns>& _31045_s) {
	if (_1e24e6dc6_IsDerives(_31045_s.get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1e4290299_indent(_self_);
		_1e428d2b9_write(_self_, static__1e424402d_cloneFuncDecl(_31045_s.get()._field_Decl));
		_1e428d2b9_write(_self_, jule::Str(";\n\n", 3));
	};
}



inline void _1e42aa638_structureOperatorEq(jule::Ptr<_1e42a9e62_ObjectCoder> _self_, jule::Str& _31840_ident, jule::Ptr<_1e253220d_StructIns>& _31857_s) {
	if ((_31857_s.get()._field_Operators._field_Eq != nullptr)) {
		_1e42aa89c_structureOperator(_self_, _31840_ident,_31857_s.get()._field_Operators._field_Eq,jule::Str("==", 2));
		return;;
	};
	_1e4290299_indent(_self_);
	if (_1d42d78c8_Inline) {
		_1e428d2b9_write(_self_, jule::Str("inline ", 7));
	};
	_1e428d2b9_write(_self_, jule::Str("bool operator==(", 16));
	_1e428d2b9_write(_self_, _31840_ident);
	_1e428d2b9_write(_self_, jule::Str(" _other) {", 10));
	if ((_31857_s.get()._field_Fields.len() > 0LL)) {
		_1e428da5b_addIndent(_self_);
		_1e428d2b9_write(_self_, jule::Str("\n", 1));
		_1e4290299_indent(_self_);
		_1e428d2b9_write(_self_, jule::Str("return ", 7));
		_1e428da5b_addIndent(_self_);
		jule::Bool _33821_writed = false;;
		{
			auto &expr = _31857_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1e6ab4e40:;
			if (it != expr.end()) {
				jule::Ptr<_1e250d4d6_FieldIns> _33925_f = *it;
				{
					jule::Ptr<_1e253220d_StructIns> _34121_strct = _1e313841d_Struct(_33925_f.get()._field_Kind.ptr());;
					if ((((_34121_strct != nullptr) && (_34121_strct.get()._field_Decl != nullptr)) && _34121_strct.get()._field_Decl.get()._field_CppLinked)) {
						goto _iter_next_1e6ab4e40;
					};
					if (_33821_writed) {
						_1e428d2b9_write(_self_, jule::Str(" &&", 3));
					};
					_33821_writed=true;
					_1e428d2b9_write(_self_, jule::Str("\n", 1));
					_1e4290299_indent(_self_);
					_1e428d2b9_write(_self_, jule::Str("this->", 6));
					jule::Str _35321_fIdent = static__1e4249561_field(_33925_f.get()._field_Decl);;
					_1e428d2b9_write(_self_, _35321_fIdent);
					_1e428d2b9_write(_self_, jule::Str(" == _other.", 11));
					_1e428d2b9_write(_self_, _35321_fIdent);
				}
				_iter_next_1e6ab4e40:;
				++it;
				goto _iter_begin_1e6ab4e40;
			}
			_iter_end_1e6ab4e40:;
		};
		_1e428ea4b_doneIndent(_self_);
		if ((!(_33821_writed))) {
			_1e428d2b9_write(_self_, jule::Str("true", 4));
		};
		_1e428d2b9_write(_self_, jule::Str(";\n", 2));
		_1e428ea4b_doneIndent(_self_);
		_1e4290299_indent(_self_);
		_1e428d2b9_write(_self_, jule::Str("}", 1));
	} else {
		_1e428d2b9_write(_self_, jule::Str(" return true; }", 15));
	};
	_1e428d2b9_write(_self_, jule::Str("\n\n", 2));
}



inline void _1e42aa76a_structureOperatorNotEq(jule::Ptr<_1e42a9e62_ObjectCoder> _self_, jule::Str& _37243_ident, jule::Ptr<_1e253220d_StructIns>& _37260_s) {
	_1e4290299_indent(_self_);
	if (_1d42d78c8_Inline) {
		_1e428d2b9_write(_self_, jule::Str("inline ", 7));
	};
	_1e428d2b9_write(_self_, jule::Str("bool operator!=(", 16));
	_1e428d2b9_write(_self_, _37243_ident);
	_1e428d2b9_write(_self_, jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1e42aa89c_structureOperator(jule::Ptr<_1e42a9e62_ObjectCoder> _self_, jule::Str& _38338_ident, jule::Ptr<_1e258dee5_FnIns>& _38355_f, jule::Str _38366_op) {
	if ((_38355_f == nullptr)) {
		return;;
	};
	jule::Bool _38813_unary = (_38355_f.get()._field_Params.len() == 1LL);;
	jule::Bool _38913_assignment = _1e258b7a6_IsVoid(_38355_f.get()._field_Decl.ptr());;
	_1e4290299_indent(_self_);
	if (_1d42d78c8_Inline) {
		_1e428d2b9_write(_self_, jule::Str("inline ", 7));
	};
	if (_38913_assignment) {
		_1e428d2b9_write(_self_, _38338_ident);
		_1e428d2b9_write(_self_, jule::Str("&", 1));
	} else {
		if ((_1e3136ebb_Prim(_38355_f.get()._field_Result.ptr()) == nullptr)) {
			_1e428d2b9_write(_self_, _38338_ident);
		} else {
			_1e428d2b9_write(_self_, jule::Str("jule::Bool", 10));
		};
	};
	_1e428d2b9_write(_self_, jule::Str(" operator", 9));
	_1e428d2b9_write(_self_, _38366_op);
	_1e428d2b9_write(_self_, jule::Str("(", 1));
	if ((!(_38813_unary))) {
		jule::Ptr<_1e258d126_ParamIns> _41121_p = _38355_f.get()._field_Params[1LL];;
		_1e428d2b9_write(_self_, static__1e42b4a2c_paramIns(_41121_p));
		_1e428d2b9_write(_self_, jule::Str(" _other", 7));
	};
	_1e428d2b9_write(_self_, jule::Str(") { ", 4));
	if ((!(_38913_assignment))) {
		_1e428d2b9_write(_self_, jule::Str("return ", 7));
	};
	_1e428d2b9_write(_self_, static__1e424873b_funcIns(_38355_f));
	if ((!(_38813_unary))) {
		_1e428d2b9_write(_self_, jule::Str("(this, _other); ", 16));
		if (_38913_assignment) {
			_1e428d2b9_write(_self_, jule::Str("return *this; ", 14));
		};
		_1e428d2b9_write(_self_, jule::Str("}", 1));
	} else {
		_1e428d2b9_write(_self_, jule::Str("(this); }", 9));
	};
	_1e428d2b9_write(_self_, jule::Str("\n\n", 2));
}



inline void _1e42aa9ce_structureOperators(jule::Ptr<_1e42a9e62_ObjectCoder> _self_, jule::Ptr<_1e253220d_StructIns>& _43243_s) {
	jule::Str _43313_ident = static__1e42492b9_structureIns(_43243_s);;
	_1e42aa638_structureOperatorEq(_self_, _43313_ident,_43243_s);
	_1e42aa76a_structureOperatorNotEq(_self_, _43313_ident,_43243_s);
	_1e42aa89c_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Gt,jule::Str(">", 1));
	_1e42aa89c_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_GtEq,jule::Str(">=", 2));
	_1e42aa89c_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Lt,jule::Str("<", 1));
	_1e42aa89c_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_LtEq,jule::Str("<=", 2));
	_1e42aa89c_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Shl,jule::Str("<<", 2));
	_1e42aa89c_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Shr,jule::Str(">>", 2));
	_1e42aa89c_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Add,jule::Str("+", 1));
	_1e42aa89c_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Sub,jule::Str("-", 1));
	_1e42aa89c_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Div,jule::Str("/", 1));
	_1e42aa89c_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Mul,jule::Str("*", 1));
	_1e42aa89c_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Mod,jule::Str("%", 1));
	_1e42aa89c_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitAnd,jule::Str("&", 1));
	_1e42aa89c_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitOr,jule::Str("|", 1));
	_1e42aa89c_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitXor,jule::Str("^", 1));
	_1e42aa89c_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Neg,jule::Str("-", 1));
	_1e42aa89c_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Pos,jule::Str("+", 1));
	_1e42aa89c_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitNot,jule::Str("~", 1));
	_1e42aa89c_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_AddAssign,jule::Str("+=", 2));
	_1e42aa89c_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_SubAssign,jule::Str("-=", 2));
	_1e42aa89c_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_DivAssign,jule::Str("/=", 2));
	_1e42aa89c_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_MulAssign,jule::Str("*=", 2));
	_1e42aa89c_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_ModAssign,jule::Str("%=", 2));
	_1e42aa89c_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_ShlAssign,jule::Str("<<=", 3));
	_1e42aa89c_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_ShrAssign,jule::Str(">>=", 3));
	_1e42aa89c_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitOrAssign,jule::Str("|=", 2));
	_1e42aa89c_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitAndAssign,jule::Str("&=", 2));
	_1e42aa89c_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitXorAssign,jule::Str("^=", 2));
}



inline void _1e42aab11_structureInsDecl(jule::Ptr<_1e42a9e62_ObjectCoder> _self_, jule::Ptr<_1e253220d_StructIns>& _47141_s) {
	if ((_47141_s.get()._field_Methods.len() > 0LL)) {
		{
			auto &expr = _47141_s.get()._field_Methods;
			auto it = expr.begin();
			_iter_begin_1e6ad2d2b:;
			if (it != expr.end()) {
				jule::Ptr<_1e258b344_Fn> _47325_m = *it;
				{
					_1e42ab21b_funcDecl(_self_, _47325_m,false);
				}
				_iter_next_1e6ad2d2b:;
				++it;
				goto _iter_begin_1e6ad2d2b;
			}
			_iter_end_1e6ad2d2b:;
		};
	};
	_1e428d2b9_write(_self_, jule::Str("struct ", 7));
	jule::Str _47913_outIdent = static__1e42492b9_structureIns(_47141_s);;
	_1e428d2b9_write(_self_, _47913_outIdent);
	_1e428d2b9_write(_self_, jule::Str(" {\n", 3));
	_1e428da5b_addIndent(_self_);
	{
		auto &expr = _47141_s.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1e6ad4d2d:;
		if (it != expr.end()) {
			jule::Ptr<_1e250d4d6_FieldIns> _48521_f = *it;
			{
				_1e4290299_indent(_self_);
				_1e427ddc0_fieldDecl(_self_, _48521_f);
				_1e428d2b9_write(_self_, jule::Str("\n", 1));
			}
			_iter_next_1e6ad4d2d:;
			++it;
			goto _iter_begin_1e6ad4d2d;
		}
		_iter_end_1e6ad4d2d:;
	};
	_1e4290299_indent(_self_);
	_1e42759aa_structureDestructor(_self_, _47141_s);
	_1e428d2b9_write(_self_, jule::Str("\n\n", 2));
	_1e4290299_indent(_self_);
	_1e428d2b9_write(_self_, _47913_outIdent);
	_1e428d2b9_write(_self_, jule::Str("(void) = default;\n\n", 19));
	_1e42aa506_structureDeriveDefsDecls(_self_, _47141_s);
	_1e42aa9ce_structureOperators(_self_, _47141_s);
	_1e428d2b9_write(_self_, jule::Str("\n", 1));
	_1e428ea4b_doneIndent(_self_);
	_1e4290299_indent(_self_);
	_1e428d2b9_write(_self_, jule::Str("};", 2));
}



inline void _1e42aac43_structureDecl(jule::Ptr<_1e42a9e62_ObjectCoder> _self_, jule::Ptr<_1e2505d6e_Struct>& _51038_s) {
	{
		auto &expr = _51038_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1e6ad8da9:;
		if (it != expr.end()) {
			jule::Ptr<_1e253220d_StructIns> _51121_ins = *it;
			{
				_1e42aab11_structureInsDecl(_self_, _51121_ins);
			}
			_iter_next_1e6ad8da9:;
			++it;
			goto _iter_begin_1e6ad8da9;
		}
		_iter_end_1e6ad8da9:;
	};
}



inline void _1e42aad75_structureDecls(jule::Ptr<_1e42a9e62_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1e6ad9ccd:;
		if (it != expr.end()) {
			jule::Ptr<_1e2505d6e_Struct> _51721_s = *it;
			{
				if ((_51721_s.get()._field_Token != nullptr)) {
					_1e42aac43_structureDecl(_self_, _51721_s);
					_1e428d2b9_write(_self_, jule::Str("\n", 1));
				};
			}
			_iter_next_1e6ad9ccd:;
			++it;
			goto _iter_begin_1e6ad9ccd;
		}
		_iter_end_1e6ad9ccd:;
	};
}



inline void _1e42aaea7_paramsDecls(jule::Ptr<_1e42a9e62_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1e258d126_ParamIns>>& _52536_params) {
	if ((_52536_params.len() == 0LL)) {
		_1e428d2b9_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1e428d2b9_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _52536_params;
		auto it = expr.begin();
		_iter_begin_1e6adbd9b:;
		if (it != expr.end()) {
			jule::I64 _53214_i = it - expr.begin();
			jule::Ptr<_1e258d126_ParamIns> _53221_p = *it;
			{
				_1e428d2b9_write(_self_, static__1e42b4a2c_paramIns(_53221_p));
				if (((_52536_params.len() - _53214_i) > 1LL)) {
					_1e428d2b9_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1e6adbd9b:;
			++it;
			_53214_i++;
			goto _iter_begin_1e6adbd9b;
		}
		_iter_end_1e6adbd9b:;
	};
	_1e428d2b9_write(_self_, jule::Str(")", 1));
}



inline void _1e42ab0d9_funcHead(jule::Ptr<_1e42a9e62_ObjectCoder> _self_, jule::Ptr<_1e258dee5_FnIns>& _54233_f, jule::Bool _54244_ptr) {
	if ((((!(_54244_ptr)) && _1d42d78c8_Inline) && (!(_1e258bc7e_IsEntryPoint(_54233_f.get()._field_Decl.ptr()))))) {
		_1e428d2b9_write(_self_, jule::Str("inline ", 7));
	};
	_1e428d2b9_write(_self_, static__1e42b506b_funcInsResult(_54233_f));
	if (_54244_ptr) {
		_1e428d2b9_write(_self_, jule::Str("(*", 2));
		_1e428d2b9_write(_self_, static__1e424873b_funcIns(_54233_f));
		_1e428d2b9_write(_self_, jule::Str(")", 1));
	} else {
		_1e428d2b9_write(_self_, jule::Str(" ", 1));
		_1e428d2b9_write(_self_, static__1e424873b_funcIns(_54233_f));
	};
}



inline void _1e42ab21b_funcDecl(jule::Ptr<_1e42a9e62_ObjectCoder> _self_, jule::Ptr<_1e258b344_Fn>& _55733_f, jule::Bool _55741_ptr) {
	{
		auto &expr = _55733_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1e6ae2313:;
		if (it != expr.end()) {
			jule::Ptr<_1e258dee5_FnIns> _55821_c = *it;
			{
				_1e4290299_indent(_self_);
				_1e42ab0d9_funcHead(_self_, _55821_c,_55741_ptr);
				_1e42aaea7_paramsDecls(_self_, _55821_c.get()._field_Params);
				_1e428d2b9_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1e6ae2313:;
			++it;
			goto _iter_begin_1e6ae2313;
		}
		_iter_end_1e6ae2313:;
	};
}



inline void _1e42ab34d_funcDecls(jule::Ptr<_1e42a9e62_ObjectCoder> _self_) {
	_1e427b42d_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1e3208576_Package>&)>([=](jule::Ptr<_1e3208576_Package>& _56735_pkg) mutable -> void {
		_1e42ae791_iterFiles(_56735_pkg,jule::Fn<void(jule::Ptr<_1e310432e_SymbolTable>&)>([=](jule::Ptr<_1e310432e_SymbolTable>& _56836_file) mutable -> void {
			{
				auto &expr = _56836_file.get()._field_Funcs;
				auto it = expr.begin();
				_iter_begin_1e6ae58dd:;
				if (it != expr.end()) {
					jule::Ptr<_1e258b344_Fn> _56929_f = *it;
					{
						if (((!(_56929_f.get()._field_CppLinked)) && (_56929_f.get()._field_Token != nullptr))) {
							_1e42ab21b_funcDecl(_self_, _56929_f,false);
						};
					}
					_iter_next_1e6ae58dd:;
					++it;
					goto _iter_begin_1e6ae58dd;
				}
				_iter_end_1e6ae58dd:;
			};
		}));
	}));
}



inline void _1e42ab480_traitDataTypes(jule::Ptr<_1e42a9e62_ObjectCoder> _self_) {
	_1e427b42d_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1e3208576_Package>&)>([=](jule::Ptr<_1e3208576_Package>& _57935_pkg) mutable -> void {
		_1e42ae791_iterFiles(_57935_pkg,jule::Fn<void(jule::Ptr<_1e310432e_SymbolTable>&)>([=](jule::Ptr<_1e310432e_SymbolTable>& _58036_file) mutable -> void {
			{
				auto &expr = _58036_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_1e6ae86c1:;
				if (it != expr.end()) {
					jule::Ptr<_1e259d246_Trait> _58129_t = *it;
					{
						if ((_58129_t.get()._field_Token == nullptr)) {
							return;;
						};
						_1e428d2b9_write(_self_, jule::Str("struct ", 7));
						_1e428d2b9_write(_self_, static__1e42489d3_traitDecl(_58129_t));
						_1e428d2b9_write(_self_, jule::Str("MptrData", 8));
						_1e428d2b9_write(_self_, jule::Str(" {\n", 3));
						_1e428da5b_addIndent(_self_);
						{
							auto &expr = _58129_t.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_1e6aea481:;
							if (it != expr.end()) {
								jule::Ptr<_1e258b344_Fn> _59033_m = *it;
								{
									jule::Ptr<_1e258dee5_FnIns> _59133_ins = _59033_m.get()._field_Instances[0LL];;
									jule::Ptr<_1e258d126_ParamIns> _59233_p = _59133_ins.get()._field_Params[0LL];;
									_59233_p.get()._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_58129_t, 2)});
									{
										auto expr = _59133_ins.get()._field_Params.slice(1LL);
										auto it = expr.begin();
										_iter_begin_1e6aec8e5:;
										if (it != expr.end()) {
											jule::I64 _59630_i = it - expr.begin();
											jule::Ptr<_1e258d126_ParamIns> _59637_ip = *it;
											{
												if (_1d42b6e18_IsAnonIdent(_59637_ip.get()._field_Decl.get()._field_Ident)) {
													_59637_ip.get()._field_Decl.get()._field_Ident=(jule::Str("_", 1) + _1e31c54ee_Itoa(_59630_i));
												};
											}
											_iter_next_1e6aec8e5:;
											++it;
											_59630_i++;
											goto _iter_begin_1e6aec8e5;
										}
										_iter_end_1e6aec8e5:;
									};
									if ((!(_22eb614e2_Production))) {
										_59133_ins.get()._field_Params = jule::alloc_for_append(_59133_ins.get()._field_Params,1);_59133_ins.get()._field_Params.__push(jule::new_ptr<_1e258d126_ParamIns>(_1e258d126_ParamIns{._field_Decl=jule::new_ptr<_1e2589a07_Param>(_1e2589a07_Param{._field_Ident=jule::Str("__file", 6)}), ._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(jule::new_ptr<_1e42b09a1_customType>(_1e42b09a1_customType{._field_kind=jule::Str("const char*", 11)}), 13)})}));;
									};
									_1e42ab21b_funcDecl(_self_, _59033_m,true);
								}
								_iter_next_1e6aea481:;
								++it;
								goto _iter_begin_1e6aea481;
							}
							_iter_end_1e6aea481:;
						};
						_1e428ea4b_doneIndent(_self_);
						_1e4290299_indent(_self_);
						_1e428d2b9_write(_self_, jule::Str("};\n\n", 4));
					}
					_iter_next_1e6ae86c1:;
					++it;
					goto _iter_begin_1e6ae86c1;
				}
				_iter_end_1e6ae86c1:;
			};
		}));
	}));
}



inline void _1e42ab5b2_paramIns(jule::Ptr<_1e42a9e62_ObjectCoder> _self_, jule::Ptr<_1e258d126_ParamIns>& _62333_p) {
	_1e428d2b9_write(_self_, static__1e42b4a2c_paramIns(_62333_p));
	_1e428d2b9_write(_self_, jule::Str(" ", 1));
	_1e428d2b9_write(_self_, static__1e4248c7a_param(_62333_p.get()._field_Decl));
}



inline void _1e42ab79e_paramsIns(jule::Ptr<_1e42a9e62_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1e258d126_ParamIns>>& _62934_params) {
	if ((_62934_params.len() == 0LL)) {
		_1e428d2b9_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1e428d2b9_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _62934_params;
		auto it = expr.begin();
		_iter_begin_1e6b02103:;
		if (it != expr.end()) {
			jule::I64 _63514_i = it - expr.begin();
			jule::Ptr<_1e258d126_ParamIns> _63521_p = *it;
			{
				_1e42ab5b2_paramIns(_self_, _63521_p);
				if (((_62934_params.len() - _63514_i) > 1LL)) {
					_1e428d2b9_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1e6b02103:;
			++it;
			_63514_i++;
			goto _iter_begin_1e6b02103;
		}
		_iter_end_1e6b02103:;
	};
	_1e428d2b9_write(_self_, jule::Str(")", 1));
}



inline void _1e42ababd_varInitExpr(jule::Ptr<_1e42a9e62_ObjectCoder> _self_, jule::Ptr<_1e322a147_Var>& _64436_v, jule::Fn<void(void)> _64445_init) {
	if (_64436_v.get()._field_Statically) {
		_1e428d2b9_write(_self_, jule::Str("static ", 7));
	};
	_1e428d2b9_write(_self_, static__1e42b5852_kind(_64436_v.get()._field_Kind.get()._field_Kind));
	_1e428d2b9_write(_self_, jule::Str(" ", 1));
	if (_64436_v.get()._field_Reference) {
		_1e428d2b9_write(_self_, jule::Str("&", 1));
	};
	_1e428d2b9_write(_self_, static__1e4249808_var(_64436_v));
	if ((_64445_init != nullptr)) {
		_1e428d2b9_write(_self_, jule::Str(" = ", 3));
		_64445_init();
	};
	_1e428d2b9_write(_self_, jule::Str(";", 1));
}



inline void _1e42abd43_var(jule::Ptr<_1e42a9e62_ObjectCoder> _self_, jule::Ptr<_1e322a147_Var> _66227_v) {
	if (_1d42b6b71_IsIgnoreIdent(_66227_v.get()._field_Ident)) {
		return;;
	};
	if (((_66227_v.get()._field_Value != nullptr) && (_66227_v.get()._field_Value.get()._field_Expr != nullptr))) {
		if ((_66227_v.get()._field_Value.get()._field_Data.get()._field_Model != nullptr)) {
			_1e42ababd_varInitExpr(_self_, _66227_v,jule::Fn<void(void)>([=](void) mutable -> void {
				_1e4241745_val(_self_.get()._field_ec, _66227_v.get()._field_Value);
			}));
			return;;
		};
		_1e42ababd_varInitExpr(_self_, _66227_v,nullptr);
		return;;
	};
	_1e42ababd_varInitExpr(_self_, _66227_v,jule::Fn<void(void)>([=](void) mutable -> void {
		_1e42419ba_initExpr(_self_.get()._field_ec, _66227_v.get()._field_Kind.get()._field_Kind);
	}));
}



inline void _1e42ac0b8_func(jule::Ptr<_1e42a9e62_ObjectCoder> _self_, jule::Ptr<_1e258b344_Fn>& _67729_f) {
	{
		auto &expr = _67729_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1e6b0b085:;
		if (it != expr.end()) {
			jule::Ptr<_1e258dee5_FnIns> _67821_ins = *it;
			{
				_1e42ab0d9_funcHead(_self_, _67821_ins,false);
				_1e42ab79e_paramsIns(_self_, _67821_ins.get()._field_Params);
				_1e428d2b9_write(_self_, jule::Str(" ", 1));
				_1e4233539_funcScope(_self_.get()._field_sc, _67821_ins);
				if ((_67821_ins.get()._field_Scope != nullptr)) {
					_1e428d2b9_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1e6b0b085:;
			++it;
			goto _iter_begin_1e6b0b085;
		}
		_iter_end_1e6b0b085:;
	};
}



inline void _1e42ac294_traitWrappers(jule::Ptr<_1e42a9e62_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_1e6b0b7c2:;
		if (it != expr.end()) {
			jule::Ptr<_1e42a9c75_traitHash> _69021_hash = *it;
			{
				{
					auto &expr = _69021_hash.get()._field_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1e6b0db26:;
					if (it != expr.end()) {
						jule::Ptr<_1e258b344_Fn> _69125_m = *it;
						{
							jule::Str _69221_ident = _69125_m.get()._field_Ident;;
							_69125_m.get()._field_Instances[0LL].get()._field_Scope=nullptr;
							_69125_m.get()._field_Ident=((_69221_ident + jule::Str("_", 1)) + _1e31c54ee_Itoa(_69021_hash.get()._field_i));
							_1e42ac0b8_func(_self_, _69125_m);
							_69125_m.get()._field_Ident=_69221_ident;
							if ((_69021_hash.get()._field_s == nullptr)) {
								if (_22eb614e2_Production) {
									_1e428d2b9_write(_self_, jule::Str(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
								} else {
									_1e428d2b9_write(_self_, jule::Str(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
								};
								goto _iter_next_1e6b0db26;
							};
							jule::Bool _70821_ptr = (!(_1e258a398_IsRef(_69125_m.get()._field_Params[0LL].ptr())));;
							jule::Ptr<_1e258b344_Fn> _71025_sm = _1e250c33c_FindMethod(_69021_hash.get()._field_s.ptr(), _69125_m.get()._field_Ident,false);;
							if (((_71025_sm == nullptr) || (_71025_sm.get()._field_Instances.len() == 0LL))) {
								goto _iter_next_1e6b0db26;
							};
							_1e428da5b_addIndent(_self_);
							_1e428d2b9_write(_self_, jule::Str("{\n", 2));
							_1e4290299_indent(_self_);
							if ((!(_1e258b7a6_IsVoid(_71025_sm.ptr())))) {
								_1e428d2b9_write(_self_, jule::Str("return ", 7));
							};
							_1e428d2b9_write(_self_, static__1e4248494_func(_71025_sm));
							_1e428d2b9_write(_self_, jule::Str("(", 1));
							if (_70821_ptr) {
								_1e428d2b9_write(_self_, jule::Str("_self_.safe_ptr<", 16));
								_1e428d2b9_write(_self_, static__1e42b4246_structureIns(_69021_hash.get()._field_s));
								_1e428d2b9_write(_self_, jule::Str(">(", 2));
								if ((!(_22eb614e2_Production))) {
									_1e428d2b9_write(_self_, jule::Str("_00___file", 10));
								};
								_1e428d2b9_write(_self_, jule::Str(")", 1));
							} else {
								_1e428d2b9_write(_self_, jule::Str("_self_.data.as<", 15));
								_1e428d2b9_write(_self_, static__1e42b3e9e_structure(_71025_sm.get()._field_Owner));
								_1e428d2b9_write(_self_, jule::Str(">()", 3));
							};
							{
								auto expr = _69125_m.get()._field_Params.slice(1LL);
								auto it = expr.begin();
								_iter_begin_1e6b17e71:;
								if (it != expr.end()) {
									jule::Ptr<_1e2589a07_Param> _73624_mp = *it;
									{
										_1e428d2b9_write(_self_, jule::Str(", ", 2));
										_1e428d2b9_write(_self_, static__1e4248c7a_param(_73624_mp));
									}
									_iter_next_1e6b17e71:;
									++it;
									goto _iter_begin_1e6b17e71;
								}
								_iter_end_1e6b17e71:;
							};
							_1e428d2b9_write(_self_, jule::Str(");\n}\n", 5));
							_1e428ea4b_doneIndent(_self_);
						}
						_iter_next_1e6b0db26:;
						++it;
						goto _iter_begin_1e6b0db26;
					}
					_iter_end_1e6b0db26:;
				};
			}
			_iter_next_1e6b0b7c2:;
			++it;
			goto _iter_begin_1e6b0b7c2;
		}
		_iter_end_1e6b0b7c2:;
	};
}



inline void _1e42ac470_traitDatas(jule::Ptr<_1e42a9e62_ObjectCoder> _self_) {
	jule::Ptr<_1e259d246_Trait> _74717_old = nullptr;;
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_1e6b19747:;
		if (it != expr.end()) {
			jule::Ptr<_1e42a9c75_traitHash> _74821_hash = *it;
			{
				jule::Str _74917_ident = static__1e42489d3_traitDecl(_74821_hash.get()._field_t);;
				if ((_74821_hash.get()._field_t != _74717_old)) {
					if ((_74717_old != nullptr)) {
						_1e428ea4b_doneIndent(_self_);
						_1e4290299_indent(_self_);
						_1e428d2b9_write(_self_, jule::Str("};\n", 3));
					};
					_1e428d2b9_write(_self_, jule::Str("static ", 7));
					_1e428d2b9_write(_self_, _74917_ident);
					_1e428d2b9_write(_self_, jule::Str("MptrData ", 9));
					_1e428d2b9_write(_self_, _74917_ident);
					_1e428d2b9_write(_self_, jule::Str("_mptr_data[] = {\n", 17));
					_74717_old=_74821_hash.get()._field_t;
					_1e428da5b_addIndent(_self_);
				};
				_1e4290299_indent(_self_);
				_1e428d2b9_write(_self_, jule::Str("{\n", 2));
				_1e428da5b_addIndent(_self_);
				{
					auto &expr = _74821_hash.get()._field_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1e6b1d581:;
					if (it != expr.end()) {
						jule::Ptr<_1e258b344_Fn> _76725_m = *it;
						{
							jule::Str _76821_mIdent = static__1e4248494_func(_76725_m);;
							_1e4290299_indent(_self_);
							_1e428d2b9_write(_self_, jule::Str(".", 1));
							_1e428d2b9_write(_self_, _76821_mIdent);
							_1e428d2b9_write(_self_, jule::Str("=", 1));
							_1e428d2b9_write(_self_, _76821_mIdent);
							_1e428d2b9_write(_self_, jule::Str("_", 1));
							_1e428d2b9_write(_self_, _1e31c54ee_Itoa(_74821_hash.get()._field_i));
							_1e428d2b9_write(_self_, jule::Str(",\n", 2));
						}
						_iter_next_1e6b1d581:;
						++it;
						goto _iter_begin_1e6b1d581;
					}
					_iter_end_1e6b1d581:;
				};
				_1e428ea4b_doneIndent(_self_);
				_1e4290299_indent(_self_);
				_1e428d2b9_write(_self_, jule::Str("},\n", 3));
			}
			_iter_next_1e6b19747:;
			++it;
			goto _iter_begin_1e6b19747;
		}
		_iter_end_1e6b19747:;
	};
	if ((_74717_old != nullptr)) {
		_1e428ea4b_doneIndent(_self_);
		_1e4290299_indent(_self_);
		_1e428d2b9_write(_self_, jule::Str("};\n", 3));
	};
}



inline void _1e42ac64b_globals(jule::Ptr<_1e42a9e62_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Globals;
		auto it = expr.begin();
		_iter_begin_1e6b22288:;
		if (it != expr.end()) {
			jule::Ptr<_1e322a147_Var> _79021_v = *it;
			{
				_1e428d2b9_write(_self_, static__1e42b5852_kind(_79021_v.get()._field_Kind.get()._field_Kind));
				_1e428d2b9_write(_self_, jule::Str(" ", 1));
				if (_79021_v.get()._field_Reference) {
					_1e428d2b9_write(_self_, jule::Str("&", 1));
				};
				_1e428d2b9_write(_self_, static__1e4249808_var(_79021_v));
				_1e428d2b9_write(_self_, jule::Str(" = ", 3));
				_1e4241745_val(_self_.get()._field_ec, _79021_v.get()._field_Value);
				_1e428d2b9_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1e6b22288:;
			++it;
			goto _iter_begin_1e6b22288;
		}
		_iter_end_1e6b22288:;
	};
}



inline void _1e42ac827_decls(jule::Ptr<_1e42a9e62_ObjectCoder> _self_) {
	_1e427c880_traitDecls(_self_);
	_1e427d70a_structurePlainDecls(_self_);
	_1e42aad75_structureDecls(_self_);
	_1e42ab34d_funcDecls(_self_);
	_1e428d2b9_write(_self_, jule::Str("\n\n", 2));
	_1e42ab480_traitDataTypes(_self_);
	_1e428d2b9_write(_self_, jule::Str("\n\n", 2));
	_1e42ac294_traitWrappers(_self_);
	_1e428d2b9_write(_self_, jule::Str("\n\n", 2));
	_1e42ac470_traitDatas(_self_);
	_1e428d2b9_write(_self_, jule::Str("\n\n", 2));
	_1e42ac64b_globals(_self_);
}



inline void _1e42aca9c_structureMethods(jule::Ptr<_1e42a9e62_ObjectCoder> _self_, jule::Ptr<_1e253220d_StructIns>& _81841_s) {
	{
		auto &expr = _81841_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1e6b28910:;
		if (it != expr.end()) {
			jule::Ptr<_1e258b344_Fn> _81921_f = *it;
			{
				_1e42ac0b8_func(_self_, _81921_f);
				_1e428d2b9_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1e6b28910:;
			++it;
			goto _iter_begin_1e6b28910;
		}
		_iter_end_1e6b28910:;
	};
}



inline void _1e42acd22_structureDeriveDefs(jule::Ptr<_1e42a9e62_ObjectCoder> _self_, jule::Ptr<_1e253220d_StructIns>& _82544_s) {
	if (_1e24e6dc6_IsDerives(_82544_s.get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1e428d2b9_write(_self_, static__1e42442c5_cloneFuncDef(_82544_s.get()._field_Decl));
		_1e428d2b9_write(_self_, jule::Str("{\n", 2));
		_1e428da5b_addIndent(_self_);
		_1e4290299_indent(_self_);
		_1e428d2b9_write(_self_, static__1e42b4246_structureIns(_82544_s));
		_1e428d2b9_write(_self_, jule::Str(" clone;\n", 8));
		{
			auto &expr = _82544_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1e6b2b65a:;
			if (it != expr.end()) {
				jule::Ptr<_1e250d4d6_FieldIns> _83320_f = *it;
				{
					jule::Str _83421_ident = static__1e4249561_field(_83320_f.get()._field_Decl);;
					_1e4290299_indent(_self_);
					_1e428d2b9_write(_self_, jule::Str("clone.", 6));
					_1e428d2b9_write(_self_, _83421_ident);
					_1e428d2b9_write(_self_, jule::Str(" = jule::clone(this->", 21));
					_1e428d2b9_write(_self_, _83421_ident);
					_1e428d2b9_write(_self_, jule::Str(");\n", 3));
				}
				_iter_next_1e6b2b65a:;
				++it;
				goto _iter_begin_1e6b2b65a;
			}
			_iter_end_1e6b2b65a:;
		};
		_1e4290299_indent(_self_);
		_1e428d2b9_write(_self_, jule::Str("return clone;\n", 14));
		_1e428ea4b_doneIndent(_self_);
		_1e428d2b9_write(_self_, jule::Str("}", 1));
	};
}



inline void _1e42ad097_structureOstream(jule::Ptr<_1e42a9e62_ObjectCoder> _self_, jule::Ptr<_1e253220d_StructIns>& _84941_s) {
	_1e4290299_indent(_self_);
	_1e428d2b9_write(_self_, jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_1e428d2b9_write(_self_, static__1e42492b9_structureIns(_84941_s));
	_1e428d2b9_write(_self_, jule::Str(" _Src) {\n", 9));
	_1e428da5b_addIndent(_self_);
	_1e4290299_indent(_self_);
	jule::Ptr<_1e258b344_Fn> _85717_fts = _1e250c33c_FindMethod(_84941_s.ptr(), jule::Str("to_str", 6),false);;
	if (static__1e322b588_Str(_85717_fts)) {
		_1e428d2b9_write(_self_, jule::Str("_Stream << ", 11));
		_1e428d2b9_write(_self_, static__1e4248494_func(_85717_fts));
		_1e428d2b9_write(_self_, jule::Str("(&_Src);\n", 9));
	} else {
		_1e428d2b9_write(_self_, jule::Str("_Stream << \"", 12));
		_1e428d2b9_write(_self_, _84941_s.get()._field_Decl.get()._field_Ident);
		_1e428d2b9_write(_self_, jule::Str("{\";\n", 4));
		{
			auto &expr = _84941_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1e6b34047:;
			if (it != expr.end()) {
				jule::I64 _86718_i = it - expr.begin();
				jule::Ptr<_1e250d4d6_FieldIns> _86725_f = *it;
				{
					_1e4290299_indent(_self_);
					_1e428d2b9_write(_self_, jule::Str("_Stream << \"", 12));
					_1e428d2b9_write(_self_, _86725_f.get()._field_Decl.get()._field_Ident);
					_1e428d2b9_write(_self_, jule::Str(":", 1));
					jule::Ptr<_1e253220d_StructIns> _87421_strct = _1e313841d_Struct(_86725_f.get()._field_Kind.ptr());;
					if ((((_87421_strct != nullptr) && (_87421_strct.get()._field_Decl != nullptr)) && _87421_strct.get()._field_Decl.get()._field_CppLinked)) {
						_1e428d2b9_write(_self_, jule::Str(" cpp.", 5));
						_1e428d2b9_write(_self_, static__1e4249561_field(_86725_f.get()._field_Decl));
						_1e428d2b9_write(_self_, jule::Str("\"", 1));
					} else {
						_1e428d2b9_write(_self_, jule::Str("\" << _Src.", 10));
						_1e428d2b9_write(_self_, static__1e4249561_field(_86725_f.get()._field_Decl));
					};
					if (((_86718_i + 1LL) < _84941_s.get()._field_Fields.len())) {
						_1e428d2b9_write(_self_, jule::Str(" << \", \"", 8));
					};
					_1e428d2b9_write(_self_, jule::Str(";\n", 2));
				}
				_iter_next_1e6b34047:;
				++it;
				_86718_i++;
				goto _iter_begin_1e6b34047;
			}
			_iter_end_1e6b34047:;
		};
		_1e4290299_indent(_self_);
		_1e428d2b9_write(_self_, jule::Str("_Stream << \"}\";\n", 16));
	};
	_1e4290299_indent(_self_);
	_1e428d2b9_write(_self_, jule::Str("return _Stream;\n", 16));
	_1e428ea4b_doneIndent(_self_);
	_1e428d2b9_write(_self_, jule::Str("}", 1));
}



inline void _1e42ad31c_structureIns(jule::Ptr<_1e42a9e62_ObjectCoder> _self_, jule::Ptr<_1e253220d_StructIns>& _90037_s) {
	_1e42aca9c_structureMethods(_self_, _90037_s);
	_1e428d2b9_write(_self_, jule::Str("\n\n", 2));
	_1e42acd22_structureDeriveDefs(_self_, _90037_s);
	_1e428d2b9_write(_self_, jule::Str("\n\n", 2));
	_1e42ad097_structureOstream(_self_, _90037_s);
}



inline void _1e42ad592_structure(jule::Ptr<_1e42a9e62_ObjectCoder> _self_, jule::Ptr<_1e2505d6e_Struct>& _90834_s) {
	{
		auto &expr = _90834_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1e6b3c03e:;
		if (it != expr.end()) {
			jule::Ptr<_1e253220d_StructIns> _90921_ins = *it;
			{
				_1e42ad31c_structureIns(_self_, _90921_ins);
				_1e428d2b9_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1e6b3c03e:;
			++it;
			goto _iter_begin_1e6b3c03e;
		}
		_iter_end_1e6b3c03e:;
	};
}



inline void _1e42ad76d_structures(jule::Ptr<_1e42a9e62_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1e6b3c7c0:;
		if (it != expr.end()) {
			jule::Ptr<_1e2505d6e_Struct> _91621_s = *it;
			{
				if ((_91621_s.get()._field_Token != nullptr)) {
					_1e42ad592_structure(_self_, _91621_s);
					_1e428d2b9_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1e6b3c7c0:;
			++it;
			goto _iter_begin_1e6b3c7c0;
		}
		_iter_end_1e6b3c7c0:;
	};
}



inline void _1e42ad949_funcs(jule::Ptr<_1e42a9e62_ObjectCoder> _self_) {
	_1e427b42d_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1e3208576_Package>&)>([=](jule::Ptr<_1e3208576_Package>& _92535_pkg) mutable -> void {
		_1e42ae791_iterFiles(_92535_pkg,jule::Fn<void(jule::Ptr<_1e310432e_SymbolTable>&)>([=](jule::Ptr<_1e310432e_SymbolTable>& _92636_file) mutable -> void {
			{
				auto &expr = _92636_file.get()._field_Funcs;
				auto it = expr.begin();
				_iter_begin_1e6b41560:;
				if (it != expr.end()) {
					jule::Ptr<_1e258b344_Fn> _92729_f = *it;
					{
						if (((!(_22eb609a8_Test)) && _1e42b8547_hasDirective(_92729_f.get()._field_Directives,jule::Str("test", 4)))) {
							goto _iter_next_1e6b41560;
						};
						if (((!(_92729_f.get()._field_CppLinked)) && (_92729_f.get()._field_Token != nullptr))) {
							_1e42ac0b8_func(_self_, _92729_f);
							_1e428d2b9_write(_self_, jule::Str("\n\n", 2));
						};
					}
					_iter_next_1e6b41560:;
					++it;
					goto _iter_begin_1e6b41560;
				}
				_iter_end_1e6b41560:;
			};
		}));
	}));
}



inline void _1e42adbbe_pushInit(jule::Ptr<_1e42a9e62_ObjectCoder> _self_, jule::Ptr<_1e3208576_Package>& _94033_pkg) {
	_1e42ae791_iterFiles(_94033_pkg,jule::Fn<void(jule::Ptr<_1e310432e_SymbolTable>&)>([=](jule::Ptr<_1e310432e_SymbolTable>& _94132_file) mutable -> void {
		{
			auto &expr = _94132_file.get()._field_Funcs;
			auto it = expr.begin();
			_iter_begin_1e6b43e14:;
			if (it != expr.end()) {
				jule::Ptr<_1e258b344_Fn> _94220_f = *it;
				{
					if ((_94220_f.get()._field_Ident == jule::Str("init", 4))) {
						_1e4290299_indent(_self_);
						_1e428d2b9_write(_self_, static__1e4248494_func(_94220_f));
						_1e428d2b9_write(_self_, jule::Str("();\n", 4));
					};
				}
				_iter_next_1e6b43e14:;
				++it;
				goto _iter_begin_1e6b43e14;
			}
			_iter_end_1e6b43e14:;
		};
	}));
}



inline void _1e42add9a_initCaller(jule::Ptr<_1e42a9e62_ObjectCoder> _self_) {
	_1e428d2b9_write(_self_, jule::Str("void __jule_call_initializers(void) {\n", 38));
	_1e428da5b_addIndent(_self_);
	_1e427b42d_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1e3208576_Package>&)>([=](jule::Ptr<_1e3208576_Package>& _95535_pkg) mutable -> void {
		_1e42adbbe_pushInit(_self_, _95535_pkg);
	}));
	_1e428ea4b_doneIndent(_self_);
	_1e428d2b9_write(_self_, jule::Str("\n}", 2));
}



inline void _1e42ae076_end(jule::Ptr<_1e42a9e62_ObjectCoder> _self_) {
	_1e428d2b9_write(_self_, jule::Str("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_22eb609a8_Test) {
		_1e428d2b9_write(_self_, jule::Str("test_point();", 13));
	} else {
		_1e428d2b9_write(_self_, jule::Str("entry_point();", 14));
	};
	_1e428d2b9_write(_self_, jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1e42ae252_serializeHead(jule::Ptr<_1e42a9e62_ObjectCoder> _self_) {
	_1e42745e1_prepareStructures(_self_);
	_1e427b9b1_buildTraitMap(_self_);
	_1e4270cb3_head(_self_);
	_1e428e2a9_links(_self_);
	_1e428d2b9_write(_self_, jule::Str("\n", 1));
	_1e42ac827_decls(_self_);
	_1e428d2b9_write(_self_, jule::Str("\n", 1));
	_1e42ad76d_structures(_self_);
	_1e42ad949_funcs(_self_);
	_1e42add9a_initCaller(_self_);
	_1e428d2b9_write(_self_, jule::Str("\n\n", 2));
}



inline void _1e42ae42d_Serialize(jule::Ptr<_1e42a9e62_ObjectCoder> _self_) {
	_1e42ae252_serializeHead(_self_);
	_1e42ae076_end(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1e42a9e62_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Obj:" << _Src._field_Obj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::I64,jule::Bool> _1e6b9860b_parse_integer(_1e42eb954_ArgParser* _self_, jule::Str& _19032_s, jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)> _19040_parser) {
	jule::I64 _19084_x = jule::I64();
	jule::Bool _19090_ok = jule::Bool();
	{
		
		if (_19032_s.empty()) {
			_case_begin_1e6b9b18b:;
			{
				_19084_x = 0LL;
				_19090_ok = false;
				return std::make_tuple(_19084_x,_19090_ok);
			}
		}
		else if (_20a119ae1_HasPrefix(_19032_s,jule::Str("0x", 2))) {
			_case_begin_1e6b9b664:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),16LL);
			}
		}
		else if (_20a119ae1_HasPrefix(_19032_s,jule::Str("0b", 2))) {
			_case_begin_1e6b9b4ee:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),2LL);
			}
		}
		else if (_20a119ae1_HasPrefix(_19032_s,jule::Str("0o", 2))) {
			_case_begin_1e6b9b752:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),8LL);
			}
		}
		else if ((_19032_s[0LL] == '0')) {
			_case_begin_1e6b9b7b8:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_1e6b9ace5:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s,10LL);
			}
		}
		_match_end_1e6b9ac18:;
	};
	return std::make_tuple(_19084_x,_19090_ok);
}

inline std::tuple<jule::U64,jule::Bool> _1e6ba630b_parse_integer(_1e42eb954_ArgParser* _self_, jule::Str& _19032_s, jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)> _19040_parser) {
	jule::U64 _19084_x = jule::U64();
	jule::Bool _19090_ok = jule::Bool();
	{
		
		if (_19032_s.empty()) {
			_case_begin_1e6ba9067:;
			{
				_19084_x = 0LLU;
				_19090_ok = false;
				return std::make_tuple(_19084_x,_19090_ok);
			}
		}
		else if (_20a119ae1_HasPrefix(_19032_s,jule::Str("0x", 2))) {
			_case_begin_1e6ba9540:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),16LL);
			}
		}
		else if (_20a119ae1_HasPrefix(_19032_s,jule::Str("0b", 2))) {
			_case_begin_1e6ba93ca:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),2LL);
			}
		}
		else if (_20a119ae1_HasPrefix(_19032_s,jule::Str("0o", 2))) {
			_case_begin_1e6ba962d:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),8LL);
			}
		}
		else if ((_19032_s[0LL] == '0')) {
			_case_begin_1e6ba9694:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_1e6ba8bc1:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s,10LL);
			}
		}
		_match_end_1e6ba8ae4:;
	};
	return std::make_tuple(_19084_x,_19090_ok);
}



inline jule::Str _1e42ec24b_get_data(_1e42eb954_ArgParser* _self_) {
	if ((((*_self_)._field_i + 1LL) >= (*_self_)._field_args.len())) {
		return jule::Str();
	};
	((*_self_)._field_i)++;
	return (*_self_)._field_args[(*_self_)._field_i];
}



inline jule::VoidExceptional _1e42ec48d_process_flag(_1e42eb954_ArgParser* _self_, jule::Trait<_1e4060344_CommonFlag>& _21736_flag) {
	{
		auto &_match_expr{ _21736_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1e6b809ab_Flag>>()) {
			_case_begin_1e6b95608:;
			{
				jule::Ptr<_1e6b809ab_Flag> _22021_bf = _21736_flag.operator jule::Ptr<_1e6b809ab_Flag>();;
				(*(_22021_bf.get()._field__data))=(!(_22021_bf.get()._field__default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_1e6b95592:;
	};
	jule::Str _22513_data = _1e42ec24b_get_data(&(*_self_));;
	if (_22513_data.empty()) {
		return jule::VoidExceptional(((jule::Str("--", 2) + _1e4060344_CommonFlag_mptr_data[(_21736_flag).type_offset]._1e4060212_name(_21736_flag)) + jule::Str(": expression missing", 20)));
	};
	{
		auto &_match_expr{ _21736_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1e6b747d5_Flag>>()) {
			_case_begin_1e6b96cad:;
			{
				jule::Ptr<_1e6b747d5_Flag> _23221_intf = _21736_flag.operator jule::Ptr<_1e6b747d5_Flag>();;
				jule::Bool _23333_ok;;
				std::tie((*(_23221_intf.get()._field__data)),_23333_ok) = _1e6b9860b_parse_integer(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _23372_s, jule::I64 _23380_base) mutable -> std::tuple<jule::I64,jule::Bool> {
					return std::make_tuple(static_cast<jule::I64>(({
						auto except = _1e2ba1173_ParseInt(_23372_s,_23380_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LL,false);
						} jule::I64();});
					})),true);
				}));
				if ((!(_23333_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _1e4060344_CommonFlag_mptr_data[(_21736_flag).type_offset]._1e4060212_name(_21736_flag)) + jule::Str(": expression must be valid signed integer", 41)));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6b78498_Flag>>()) {
			_case_begin_1e6b976e8:;
			{
				jule::Ptr<_1e6b78498_Flag> _24021_uintf = _21736_flag.operator jule::Ptr<_1e6b78498_Flag>();;
				jule::Bool _24134_ok;;
				std::tie((*(_24021_uintf.get()._field__data)),_24134_ok) = _1e6ba630b_parse_integer(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _24173_s, jule::I64 _24181_base) mutable -> std::tuple<jule::U64,jule::Bool> {
					return std::make_tuple(static_cast<jule::U64>(({
						auto except = _1e2dd78c6_ParseUint(_24173_s,_24181_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LLU,false);
						} jule::U64();});
					})),true);
				}));
				if ((!(_24134_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _1e4060344_CommonFlag_mptr_data[(_21736_flag).type_offset]._1e4060212_name(_21736_flag)) + jule::Str(": expression must be valid unsigned integer", 43)));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6b7be80_Flag>>()) {
			_case_begin_1e6b9775e:;
			{
				jule::Ptr<_1e6b7be80_Flag> _24821_ff = _21736_flag.operator jule::Ptr<_1e6b7be80_Flag>();;
				(*(_24821_ff.get()._field__data))=static_cast<jule::F64>(({
					auto except = _1e31c062b_ParseFloat(_22513_data,64LL);
					(except.ok()) ? (except.result) : ({{
						return jule::VoidExceptional(((jule::Str("--", 2) + _1e4060344_CommonFlag_mptr_data[(_21736_flag).type_offset]._1e4060212_name(_21736_flag)) + jule::Str(": expression must be valid floating-point", 41)));
					} jule::F64();});
				}));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e6b84493_Flag>>()) {
			_case_begin_1e6b977c5:;
			{
				(*(_21736_flag.operator jule::Ptr<_1e6b84493_Flag>().get()._field__data))=_22513_data;
			}
		}
		_match_end_1e6b97682:;
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1e42ec713_single_dash(_1e42eb954_ArgParser* _self_, jule::Str& _25731_arg) {
	if ((_25731_arg.len() == 1LL)) {
		return jule::VoidExceptional((_25731_arg + jule::Str(": missing argument", 18)));
	};
	jule::Slice<jule::I32> _26113_rarg = static_cast<jule::Slice<jule::I32>>(_25731_arg).slice(1LL);;
	{
		auto &expr = _26113_rarg;
		auto it = expr.begin();
		_iter_begin_1e6bb1426:;
		if (it != expr.end()) {
			jule::I32 &_26216_r = *it;
			{
				jule::Trait<_1e4060344_CommonFlag> _26321_flag = _1e42e9d09_find_flag_short(&(*_self_)._field_set, _26216_r);;
				if ((_26321_flag == nullptr)) {
					return jule::VoidExceptional(((_25731_arg + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>(_26216_r)));
				};
				({
					auto except = _1e42ec48d_process_flag(&(*_self_), _26321_flag);
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1e6bb1426:;
			++it;
			goto _iter_begin_1e6bb1426;
		}
		_iter_end_1e6bb1426:;
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1e42ec988_double_dash(_1e42eb954_ArgParser* _self_, jule::Str& _27231_arg) {
	if ((_27231_arg.len() == 2LL)) {
		return jule::VoidExceptional((_27231_arg + jule::Str(": missing argument", 18)));
	};
	jule::Trait<_1e4060344_CommonFlag> _27617_flag = _1e42e99eb_find_flag(&(*_self_)._field_set, _27231_arg.slice(2LL));;
	if ((_27617_flag == nullptr)) {
		return jule::VoidExceptional((_27231_arg + jule::Str(": flag is not exist", 19)));
	};
	({
		auto except = _1e42ec48d_process_flag(&(*_self_), _27617_flag);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1e42ecb64_try_arg(_1e42eb954_ArgParser* _self_) {
	jule::Str _28513_arg = (*_self_)._field_args[(*_self_)._field_i];;
	if (((*_self_)._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_28513_arg[0LL] == '-')) {
		if (((_28513_arg.len() > 1LL) && (_28513_arg[1LL] == '-'))) {
			({
				auto except = _1e42ec988_double_dash(&(*_self_), _28513_arg);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _1e42ec713_single_dash(&(*_self_), _28513_arg);
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	(*_self_)._field_content = jule::alloc_for_append((*_self_)._field_content,1);(*_self_)._field_content.__push(_28513_arg);;
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1e42ecd40_parse(_1e42eb954_ArgParser* _self_) {
	for (; ((*_self_)._field_i < (*_self_)._field_args.len()); ((*_self_)._field_i)++) {
		{
			({
				auto except = _1e42ecb64_try_arg(&(*_self_));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1e6bb94ea:;
	}
	_iter_end_1e6bb94ea:;;
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1e42eb954_ArgParser _Src) {
	_Stream << "ArgParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::I32 _2163ac6a2_DecodeRune(jule::I32 _6819_r1, jule::I32 _6829_r2) {
	if (((((55296LL <= _6819_r1) && (_6819_r1 < 56320LL)) && (56320LL <= _6829_r2)) && (_6829_r2 < 57344LL))) {
		return static_cast<jule::I32>(((((_6819_r1 - 55296LL) << 10LL) | (_6829_r2 - 56320LL)) + 65536LL));
	};
	return 65533LL;
}



inline std::tuple<jule::I32,jule::I32> _2163ac949_EncodeRune(jule::I32 _7823_r) {
	jule::I32 _7834_r1 = jule::I32();
	jule::I32 _7844_r2 = jule::I32();
	if (((_7823_r < 65536LL) || (_7823_r > 1114111LL))) {
		_7834_r1 = 65533LL;
		_7844_r2 = 65533LL;
		return std::make_tuple(_7834_r1,_7844_r2);
	};
	_7823_r-=65536LL;
	_7834_r1 = static_cast<jule::I32>((55296LL + ((_7823_r >> 10LL) & 1023LL)));
	_7844_r2 = static_cast<jule::I32>((56320LL + (_7823_r & 1023LL)));
	return std::make_tuple(_7834_r1,_7844_r2);
}



inline jule::Slice<jule::I32> _2163ad010_Decode(jule::Slice<jule::U16> _11915_s) {
	jule::Slice<jule::I32> _12013_a = jule::Slice<jule::I32>::alloc(_11915_s.len());;
	jule::I64 _12113_n = 0LL;;
	jule::I64 _12213_i = 0LL;;
	for (; (_12213_i < _11915_s.len()); (_12213_i)++) {
		{
			jule::U16 _12413_r = _11915_s[_12213_i];;
			{
				
				if ((_12413_r < 55296LLU) || (57344LL <= _12413_r)) {
					_case_begin_1e431275b:;
					{
						_12013_a[_12113_n]=static_cast<jule::I32>(static_cast<jule::I32>(_12413_r));
					}
				}
				else if (((((_12413_r < 56320LLU) && ((_12213_i + 1LL) < _11915_s.len())) && (56320LL <= _11915_s[(_12213_i + 1LL)])) && (_11915_s[(_12213_i + 1LL)] < 57344LLU))) {
					_case_begin_1e43132c8:;
					{
						_12013_a[_12113_n]=static_cast<jule::I32>(_2163ac6a2_DecodeRune(static_cast<jule::I32>(static_cast<jule::I32>(_12413_r)),static_cast<jule::I32>(static_cast<jule::I32>(_11915_s[(_12213_i + 1LL)]))));
						(_12213_i)++;
					}
				}
				else {
					_case_begin_1e4312c45:;
					{
						_12013_a[_12113_n]=65533LL;
					}
				}
				_match_end_1e4312bce:;
			};
			(_12113_n)++;
		}
	_iter_next_1e431178d:;
	}
	_iter_end_1e431178d:;;
	return _12013_a.slice(0LL,_12113_n);
}



inline jule::Slice<jule::U16> _2163ad31d_AppendRune(jule::Slice<jule::U16> _14923_a, jule::I32 _14933_r) {
	{
		
		if (((0LL <= _14933_r) && (_14933_r < 55296LL)) || ((57344LL <= _14933_r) && (_14933_r < 65536LL))) {
			_case_begin_1e431630e:;
			{
				return jule::append(_14923_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(static_cast<jule::U16>(_14933_r))}));
			}
		}
		else if (((65536LL <= _14933_r) && (_14933_r <= 1114111LL))) {
			_case_begin_1e4316386:;
			{
				jule::I32 _15614_r1;;
				jule::I32 _15618_r2;;
				std::tie(_15614_r1,_15618_r2) = _2163ac949_EncodeRune(_14933_r);
				return jule::append(_14923_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(static_cast<jule::U16>(_15614_r1)),static_cast<jule::U16>(static_cast<jule::U16>(_15618_r2))}));
			}
		}
		_match_end_1e43152db:;
	};
	return jule::append(_14923_a,jule::Slice<jule::U16>::make({65533LLU}));
}



inline jule::Slice<jule::U16> _216397e2e_Utf16FromStr(jule::Str _1421_s) {
	;
	jule::Slice<jule::I32> _209_runes = static_cast<jule::Slice<jule::I32>>(_1421_s);;
	jule::Slice<jule::U16> _2113_buff = jule::Slice<jule::U16>::alloc(0LL,_209_runes.len());;
	{
		auto &expr = _209_runes;
		auto it = expr.begin();
		_iter_begin_1e4322e31:;
		if (it != expr.end()) {
			jule::I32 &_2212_r = *it;
			{
				if ((_2212_r == 0LL)) {
					goto _iter_end_1e4322e31;
				};
				_2113_buff=_2163ad31d_AppendRune(_2113_buff,_2212_r);
			}
			_iter_next_1e4322e31:;
			++it;
			goto _iter_begin_1e4322e31;
		}
		_iter_end_1e4322e31:;
	};
	return _2163ad31d_AppendRune(_2113_buff,0LL);
}



inline jule::Str _216398a67_Utf16ToStr(jule::Slice<jule::U16> _3419_s) {
	if ((_3419_s == nullptr)) {
		return jule::Str();
	};
	jule::Slice<jule::U16> _3813_codePage = _3419_s;;
	{
		auto &expr = _3419_s;
		auto it = expr.begin();
		_iter_begin_1e43245e7:;
		if (it != expr.end()) {
			jule::I64 _399_i = it - expr.begin();
			jule::U16 &_3912_v = *it;
			{
				if ((_3912_v == 0LLU)) {
					_3813_codePage=_3813_codePage.slice(0LL,_399_i);
					goto _iter_end_1e43245e7;
				};
			}
			_iter_next_1e43245e7:;
			++it;
			_399_i++;
			goto _iter_begin_1e43245e7;
		}
		_iter_end_1e43245e7:;
	};
	return static_cast<jule::Str>(_2163ad010_Decode(_3813_codePage));
}



inline jule::Str _216398b99_U16PtrToStr(jule::U16* _5027_s) {
	if ((_5027_s == nullptr)) {
		return jule::Str();
	};
	jule::Slice<jule::U16> _5513_codePage = nullptr;;
	jule::I64 _5613_i = 0LL;;
	for (; ; (_5613_i)++) {
		{
			jule::U16 _5813_r = _5027_s[_5613_i];;
			if ((_5813_r == 0LLU)) {
				return static_cast<jule::Str>(_2163ad010_Decode(_5513_codePage));
			};
			_5513_codePage = jule::alloc_for_append(_5513_codePage,1);_5513_codePage.__push(_5813_r);;
		}
	_iter_next_1e432595b:;
	}
	_iter_end_1e432595b:;;
	return jule::Str();
}



inline jule::I64 _22ebe4d7d_GetLastErrno(void) {
	return errno;
}



inline jule::Uintptr _2163ae93a_GetStdHandle(jule::Uintptr _5421_stdh) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)(GetStdHandle(_5421_stdh))));
}



inline jule::I64 _2163aed8b_Wstat(jule::U16* _5821_path, struct stat* _5837_stat) {
	return static_cast<jule::I64>(wstat(((wchar_t*)(_5821_path)),_5837_stat));
}



inline jule::I64 _2163b0276_Wopen(jule::U16* _6321_path, jule::I64 _6333_flag, jule::I64 _6344_mode) {
	return static_cast<jule::I64>(_wopen(((wchar_t*)((&(_6321_path[0LL])))),_6333_flag,_6344_mode));
}



inline jule::U32 _2163b0474_GetLastError(void) {
	return static_cast<jule::U32>(GetLastError());
}



inline jule::U32 _2163b07b5_GetCurrentDirectory(jule::U32 _7235_bufflen, jule::U16* _7253_buff) {
	return static_cast<jule::U32>(GetCurrentDirectoryW(_7235_bufflen,((wchar_t*)(_7253_buff))));
}



inline jule::Bool _2163b0d04_DeleteFile(jule::U16* _8326_path) {
	return DeleteFileW(((wchar_t*)(_8326_path)));
}



inline jule::Bool _2163b109b_CreateDirectory(jule::U16* _8831_path) {
	return CreateDirectoryW(((wchar_t*)(_8831_path)),nullptr);
}



inline jule::Bool _2163b1343_RemoveDirectory(jule::U16* _9331_path) {
	return RemoveDirectoryW(((wchar_t*)(_9331_path)));
}



inline _WDIR* _2163b15da_Wopendir(jule::U16* _9824_path) {
	return _wopendir(((wchar_t*)(_9824_path)));
}



inline struct _wdirent* _2163b1882_Wreaddir(_WDIR* _10128_dir) {
	return _wreaddir(_10128_dir);
}



inline jule::I64 _2163b1b29_Wclosedir(_WDIR* _10429_dir) {
	return static_cast<jule::I64>(_wclosedir(_10429_dir));
}



inline jule::U32 _2163b2300_GetFullPathName(jule::U16* _10731_path, jule::U32 _10743_bufflen, jule::U16* _1085_buff, jule::U16** _10817_fname) {
	return static_cast<jule::U32>(GetFullPathNameW(((wchar_t*)(_10731_path)),_10743_bufflen,((wchar_t*)(_1085_buff)),((wchar_t**)(_10817_fname))));
}



inline jule::Bool _2163b2641_GetConsoleMode(jule::Uintptr _11323_handle, jule::I64& _11344_mode) {
	return GetConsoleMode(((HANDLE)(_11323_handle)),((DWORD*)((&(_11344_mode)))));
}



inline jule::Bool _2163b2982_SetConsoleMode(jule::Uintptr _11823_handle, jule::I64 _11839_mode) {
	return SetConsoleMode(((HANDLE)(_11823_handle)),static_cast<DWORD>(_11839_mode));
}



inline jule::Bool _2163b2eb0_WriteConsole(jule::Uintptr _12328_handle, jule::U16* _12344_buffer, jule::I64 _12358_to_write, jule::I64& _12410_written, void* _12424_reserved) {
	return WriteConsoleW(((HANDLE)(_12328_handle)),((void*)(_12344_buffer)),static_cast<DWORD>(_12358_to_write),((DWORD*)(_12410_written)),_12424_reserved);
}



inline jule::Bool _2163b34dd_ReadConsole(jule::Uintptr _13027_handle, jule::U16* _13047_buffer, jule::I64 _13061_to_read, jule::I64& _13110_readed, void* _13123_input_control) {
	return ReadConsoleW(((HANDLE)(_13027_handle)),((void*)(_13047_buffer)),static_cast<DWORD>(_13061_to_read),((DWORD*)((&(_13110_readed)))),_13123_input_control);
}



inline jule::I64 _2163b5875_Seek(jule::I64 _2613_handle, jule::I64 _2626_offset, jule::I64 _2639_origin) {
	return static_cast<jule::I64>(lseek(_2613_handle,_2626_offset,_2639_origin));
}



inline jule::I64 _2163b5c60_Read(jule::I64 _3120_handle, void* _3137_buff, jule::U64 _3152_n) {
	return static_cast<jule::I64>(read(_3120_handle,_3137_buff,_3152_n));
}



inline jule::I64 _2163b60d4_Close(jule::I64 _3614_handle) {
	return static_cast<jule::I64>(close(_3614_handle));
}



inline jule::I64 _2163b64be_Write(jule::I64 _3921_handle, void* _3934_buff, jule::U64 _3949_n) {
	return static_cast<jule::I64>(write(_3921_handle,_3934_buff,_3949_n));
}



inline void _2163b66cd_Exit(jule::I64 _4413_code) {
	exit(_4413_code);
}



inline std::tuple<jule::I32,jule::I64> _2164948dd_DecodeRune(jule::Slice<jule::U8> _18219_p) {
	jule::I32 _18232_r = jule::I32();
	jule::I64 _18241_size = jule::I64();
	if ((_18219_p.len() < 1LL)) {
		_18232_r = 65533LL;
		_18241_size = 0LL;
		return std::make_tuple(_18232_r,_18241_size);
	};
	jule::U8 _1869_p0 = _18219_p[0LL];;
	jule::U8 _1879_x = _216493788_first[static_cast<jule::I64>(_1869_p0)];;
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::I32>(((_1879_x << 31LLU) >> 31LLU));;
		_18232_r = static_cast<jule::I32>(((static_cast<jule::I32>(_18219_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask)));
		_18241_size = 1LL;
		return std::make_tuple(_18232_r,_18241_size);
	};
	jule::I64 _1959_sz = static_cast<jule::I64>((_1879_x & 7LLU));;
	_216493d0a_acceptRange _1969_accept = _21649416d_acceptRanges[static_cast<jule::I64>((_1879_x >> 4LLU))];;
	if ((_18219_p.len() < _1959_sz)) {
		_18232_r = 65533LL;
		_18241_size = 1LL;
		return std::make_tuple(_18232_r,_18241_size);
	};
	jule::U8 _2009_b1 = _18219_p[1LL];;
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		_18232_r = 65533LL;
		_18241_size = 1LL;
		return std::make_tuple(_18232_r,_18241_size);
	};
	if ((_1959_sz <= 2LL)) {
		_18232_r = static_cast<jule::I32>(((static_cast<jule::I32>((_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2009_b1 & 63LLU))));
		_18241_size = 2LL;
		return std::make_tuple(_18232_r,_18241_size);
	};
	jule::U8 _2079_b2 = _18219_p[2LL];;
	if (((_2079_b2 < 128LLU) || (191LL < _2079_b2))) {
		_18232_r = 65533LL;
		_18241_size = 1LL;
		return std::make_tuple(_18232_r,_18241_size);
	};
	if ((_1959_sz <= 3LL)) {
		_18232_r = static_cast<jule::I32>((((static_cast<jule::I32>((_1869_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2079_b2 & 63LLU))));
		_18241_size = 3LL;
		return std::make_tuple(_18232_r,_18241_size);
	};
	jule::U8 _2149_b3 = _18219_p[3LL];;
	if (((_2149_b3 < 128LLU) || (191LL < _2149_b3))) {
		_18232_r = 65533LL;
		_18241_size = 1LL;
		return std::make_tuple(_18232_r,_18241_size);
	};
	_18232_r = static_cast<jule::I32>(((((static_cast<jule::I32>((_1869_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2149_b3 & 63LLU))));
	_18241_size = 4LL;
	return std::make_tuple(_18232_r,_18241_size);
}



inline std::tuple<jule::I32,jule::I64> _216494ea4_DecodeLastRune(jule::Slice<jule::U8> _27623_p) {
	jule::I32 _27636_r = jule::I32();
	jule::I64 _27645_size = jule::I64();
	if ((_27623_p.len() == 0LL)) {
		_27636_r = 65533LL;
		_27645_size = 0LL;
		return std::make_tuple(_27636_r,_27645_size);
	};
	jule::I64 _2809_end = _27623_p.len();;
	jule::I64 _28113_start = (_2809_end - 1LL);;
	_27636_r=static_cast<jule::I32>(static_cast<jule::I32>(_27623_p[_28113_start]));
	if ((_27636_r < 128LL)) {
		_27645_size = 1LL;
		return std::make_tuple(_27636_r,_27645_size);
	};
	jule::I64 _28913_lim = (_2809_end - 4LL);;
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	};
	(_28113_start)--;
	for (; (_28113_start >= _28913_lim); (_28113_start)--) {
		{
			if (_216496879_RuneStart(_27623_p[_28113_start])) {
				goto _iter_end_1e43993c5;
			};
		}
	_iter_next_1e43993c5:;
	}
	_iter_end_1e43993c5:;;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	};
	std::tie(_27636_r,_27645_size) = _2164948dd_DecodeRune(_27623_p.slice(_28113_start,_2809_end));
	if (((_28113_start + _27645_size) != _2809_end)) {
		_27636_r = 65533LL;
		_27645_size = 1LL;
		return std::make_tuple(_27636_r,_27645_size);
	};
	return std::make_tuple(_27636_r,_27645_size);
}



inline jule::I64 _2164954e3_RuneLen(jule::I32 _35216_r) {
	{
		
		if ((_35216_r < 0LL)) {
			_case_begin_1e43a1597:;
			{
				return -1LL;
			}
		}
		else if ((_35216_r <= 127LL)) {
			_case_begin_1e43a0cd3:;
			{
				return 1LL;
			}
		}
		else if ((_35216_r <= 2047LL)) {
			_case_begin_1e43a0d5a:;
			{
				return 2LL;
			}
		}
		else if (((55296LL <= _35216_r) && (_35216_r <= 57343LL))) {
			_case_begin_1e43a0dd2:;
			{
				return -1LL;
			}
		}
		else if ((_35216_r <= 65535LL)) {
			_case_begin_1e43a0e59:;
			{
				return 3LL;
			}
		}
		else if ((_35216_r <= 1114111LL)) {
			_case_begin_1e43a1201:;
			{
				return 4LL;
			}
		}
		else {
			_case_begin_1e43a0c6c:;
			{
				return -1LL;
			}
		}
		_match_end_1e43a0bb2:;
	};
}



inline jule::I64 _216495911_EncodeRune(jule::Slice<jule::U8> _37423_p, jule::I32 _37438_r) {
	jule::U32 _3769_i = static_cast<jule::U32>(_37438_r);;
	{
		
		if ((_3769_i <= 127LLU)) {
			_case_begin_1e43a6910:;
			{
				_37423_p[0LL]=static_cast<jule::U8>(static_cast<jule::U8>(_37438_r));
				return 1LL;
			}
		}
		else if ((_3769_i <= 2047LLU)) {
			_case_begin_1e43a6976:;
			{
				_37423_p[0LL]=static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_37438_r >> 6LL))));
				_37423_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37438_r) & 63LLU)));
				return 2LL;
			}
		}
		else if ((_3769_i > 1114111LLU) || ((55296LL <= _3769_i) && (_3769_i <= 57343LLU))) {
			_case_begin_1e43a66bd:;
			{
				_37438_r=65533LL;
				goto _case_begin_1e43a6734;
			}
		}
		else if ((_3769_i <= 65535LLU)) {
			_case_begin_1e43a6734:;
			{
				_37423_p[0LL]=static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_37438_r >> 12LL))));
				_37423_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37438_r >> 6LL)) & 63LLU)));
				_37423_p[2LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37438_r) & 63LLU)));
				return 3LL;
			}
		}
		else {
			_case_begin_1e43a3e29:;
			{
				_37423_p[0LL]=static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_37438_r >> 18LL))));
				_37423_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37438_r >> 12LL)) & 63LLU)));
				_37423_p[2LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37438_r >> 6LL)) & 63LLU)));
				_37423_p[3LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37438_r) & 63LLU)));
				return 4LL;
			}
		}
		_match_end_1e43a3dc4:;
	};
}



inline jule::Slice<jule::U8> _216495c52_AppendRune(jule::Slice<jule::U8> _40523_p, jule::I32 _40534_r) {
	if ((_40534_r <= 127LL)) {
		return jule::append(_40523_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40534_r))}));
	};
	return _216496093_appendRuneNonASCII(_40523_p,_40534_r);
}



inline jule::Slice<jule::U8> _216496093_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_1e43aeae4:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41242_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));
			}
		}
		else if ((_4149_i > 1114111LLU) || ((55296LL <= _4149_i) && (_4149_i <= 57343LLU))) {
			_case_begin_1e43ad285:;
			{
				_41242_r=128LL;
				goto _case_begin_1e43ad2eb;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_1e43ad2eb:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41242_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));
			}
		}
		else {
			_case_begin_1e43ac76d:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41242_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));
			}
		}
		_match_end_1e43ac718:;
	};
}



inline jule::I64 _2164965d2_RuneCountStr(jule::Str _47321_s) {
	jule::I64 _47331_n = jule::I64();
	jule::I64 _47413_i = 0LL;;
	for (; (_47413_i < _47321_s.len()); (_47331_n)++) {
		{
			jule::U8 _47617_c = _47321_s[_47413_i];;
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_1e43b703b;
			};
			jule::U8 _48213_x = _216493788_first[static_cast<jule::I64>(_47617_c)];;
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_1e43b703b;
			};
			jule::I64 _48717_size = static_cast<jule::I64>((_48213_x & 7LLU));;
			if (((_47413_i + _48717_size) > _47321_s.len())) {
				(_47413_i)++;
				goto _iter_next_1e43b703b;
			};
			_216493d0a_acceptRange _49213_accept = _21649416d_acceptRanges[static_cast<jule::I64>((_48213_x >> 4LLU))];;
			_47617_c=_47321_s[(_47413_i + 1LL)];
			if (((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c))) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47321_s[(_47413_i + 2LL)];
				if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47321_s[(_47413_i + 3LL)];
					if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
						_48717_size=1LL;
					};
				};
			};
			_47413_i+=_48717_size;
		}
	_iter_next_1e43b703b:;
	}
	_iter_end_1e43b703b:;;
	return _47331_n;
}



inline jule::Bool _216496879_RuneStart(jule::U8 _51718_b) {
	return ((_51718_b & 192LLU) != 128LLU);
}



inline jule::I64 _223203d7c_getLastOsErrorWindows(void) {
	jule::U32 _169_err = _2163b0474_GetLastError();;
	{
		auto &_match_expr{ _169_err };
		
		if (_match_expr == 5LL) {
			_case_begin_1e43dcb11:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1e43deb57:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1e43debbd:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 123LL) {
			_case_begin_1e43dec34:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else {
			_case_begin_1e43dce1e:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		_match_end_1e43deae1:;
	};
}



inline jule::Slice<jule::Str> _2232079c9_Args(void) {
	return jule::args();
}



inline jule::Exceptional<jule::Str> _223207e4c_WorkingDir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(),({
		auto except = _223208d4e_getwd();
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));
}



inline jule::Exceptional<jule::Str> _223208d4e_getwd(void) {
	jule::Array<jule::U16,261> _1513_buff = jule::Array<jule::U16,261>();;
	jule::U32 _169_n = _2163b07b5_GetCurrentDirectory(261LLU,(&(_1513_buff[0LL])));;
	if ((_169_n == 0LLU)) {
		return jule::Exceptional<jule::Str>(_223203d7c_getLastOsErrorWindows());
	};
	return jule::Exceptional<jule::Str>(jule::Any(),_216398b99_U16PtrToStr((&(_1513_buff[0LL]))));
}



inline jule::Slice<jule::U8> _22329237c_Stobs(jule::Str& _915_s) {
	return _915_s.fake_slice();
}



inline jule::Bool _20a134930_IsLetter(jule::I32 _7617_r) {
	if ((static_cast<jule::U32>(_7617_r) <= 255LLU)) {
		return ((_20a1a3c79__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7617_r))] & 96LLU) != 0LLU);
	};
	return _20a1ac733_isExcludingLatin(_20a13e8a2_Letter,_7617_r);
}



inline jule::Bool _20a1abb50_is16(jule::Slice<_20a1aa08d_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto &expr = _1919_ranges;
			auto it = expr.begin();
			_iter_begin_1e49d46ad:;
			if (it != expr.end()) {
				jule::I64 _19313_i = it - expr.begin();
				{
					_20a1aa08d_Range16* _19417_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < _19417_range->_field_Lo)) {
							return false;
						};
						if ((_19128_r <= _19417_range->_field_Hi)) {
							return ((_19417_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _19417_range->_field_Lo),_19417_range->_field_Stride) == 0LLU));
						};
					};
				}
				_iter_next_1e49d46ad:;
				++it;
				_19313_i++;
				goto _iter_begin_1e49d46ad;
			}
			_iter_end_1e49d46ad:;
		};
		return false;
	};
	jule::I64 _20813_lo = 0LL;;
	jule::I64 _20913_hi = _1919_ranges.len();;
	while ((_20813_lo < _20913_hi)) {
		{
			jule::I64 _21113_m = (_20813_lo + ((_20913_hi - _20813_lo) >> 1LLU));;
			_20a1aa08d_Range16* _21213_range = (&(_1919_ranges[_21113_m]));;
			{
				if (((_21213_range->_field_Lo <= _19128_r) && (_19128_r <= _21213_range->_field_Hi))) {
					return ((_21213_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _21213_range->_field_Lo),_21213_range->_field_Stride) == 0LLU));
				};
				if ((_19128_r < _21213_range->_field_Lo)) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I64>((_21113_m + 1LL));
				};
			};
		}
	_iter_next_1e49d303b:;
	}
	_iter_end_1e49d303b:;;
	return false;
}



inline jule::Bool _20a1abe91_is32(jule::Slice<_20a1aa511_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto &expr = _2289_ranges;
			auto it = expr.begin();
			_iter_begin_1e49e0ba3:;
			if (it != expr.end()) {
				jule::I64 _23013_i = it - expr.begin();
				{
					_20a1aa511_Range32* _23117_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < _23117_range->_field_Lo)) {
							return false;
						};
						if ((_22828_r <= _23117_range->_field_Hi)) {
							return ((_23117_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _23117_range->_field_Lo),_23117_range->_field_Stride) == 0LLU));
						};
					};
				}
				_iter_next_1e49e0ba3:;
				++it;
				_23013_i++;
				goto _iter_begin_1e49e0ba3;
			}
			_iter_end_1e49e0ba3:;
		};
		return false;
	};
	jule::I64 _24513_lo = 0LL;;
	jule::I64 _24613_hi = _2289_ranges.len();;
	while ((_24513_lo < _24613_hi)) {
		{
			jule::I64 _24813_m = (_24513_lo + ((_24613_hi - _24513_lo) >> 1LLU));;
			_20a1aa511_Range32* _24913_range = (&(_2289_ranges[_24813_m]));;
			{
				if (((_24913_range->_field_Lo <= _22828_r) && (_22828_r <= _24913_range->_field_Hi))) {
					return ((_24913_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _24913_range->_field_Lo),_24913_range->_field_Stride) == 0LLU));
				};
				if ((_22828_r < _24913_range->_field_Lo)) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I64>((_24813_m + 1LL));
				};
			};
		}
	_iter_next_1e49dc83c:;
	}
	_iter_end_1e49dc83c:;;
	return false;
}



inline jule::Bool _20a1ac733_isExcludingLatin(jule::Ptr<_20a1aa984_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_20a1aa08d_Range16> &_28014_R16 = _27821_rangeTab.get()._field_R16;;
		jule::I64 _28213_off = _27821_rangeTab.get()._field_LatinOffset;;
		if (((_28014_R16.len() > _28213_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>(_28014_R16[(_28014_R16.len() - 1LL)]._field_Hi)))) {
			return _20a1abb50_is16(_28014_R16.slice(_28213_off),static_cast<jule::U16>(static_cast<jule::U16>(_27844_r)));
		};
	};
	jule::Slice<_20a1aa511_Range32> &_28710_R32 = _27821_rangeTab.get()._field_R32;;
	if (((_28710_R32.len() > 0LL) && (_27844_r >= static_cast<jule::I32>(_28710_R32[0LL]._field_Lo)))) {
		return _20a1abe91_is32(_28710_R32,static_cast<jule::U32>(static_cast<jule::U32>(_27844_r)));
	};
	return false;
}



inline jule::Str _20a110026_Repeat(jule::Str _1115_s, jule::I64 _1127_n) {
	if ((_1127_n <= 0LL)) {
		return jule::Str();
	};
	if ((_1115_s.len() > jule::div(jule::MAX_I64,_1127_n))) {
		jule::panic(jule::Str("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:16:9"));;
	};
	jule::Str _1913_ss = jule::Str::alloc((_1115_s.len() * _1127_n));;
	for (; (_1127_n > 0LL); (_1127_n)--) {
		{
			_1913_ss+=_1115_s;
		}
	_iter_next_1e4a13434:;
	}
	_iter_end_1e4a13434:;;
	return _1913_ss;
}



inline jule::Bool _20a1183c5_hasPrefix(jule::Str& _2615_s, jule::Str& _2624_sub, jule::I64 _2638_start) {
	if (((_2624_sub.len() == 0LL) || ((_2615_s.len() - _2638_start) < _2624_sub.len()))) {
		return false;
	};
	jule::I64 _3113_i = 0LL;;
	for (; (_3113_i < _2624_sub.len()); std::tie(_3113_i,_2638_start) = std::make_tuple(static_cast<jule::I64>((_3113_i + 1LL)),static_cast<jule::I64>((_2638_start + 1LL)))) {
		{
			if ((_2615_s[_2638_start] != _2624_sub[_3113_i])) {
				return false;
			};
		}
	_iter_next_1e4a16503:;
	}
	_iter_end_1e4a16503:;;
	return true;
}



inline jule::Bool _20a119ae1_HasPrefix(jule::Str _4118_s, jule::Str _4126_sub) {
	return _20a1183c5_hasPrefix(_4118_s,_4126_sub,0LL);
}



inline jule::Bool _20a12b251_hasSuffix(jule::Str& _4515_s, jule::Str& _4524_sub, jule::I64 _4538_start) {
	if (((_4524_sub.len() == 0LL) || ((_4515_s.len() - _4538_start) < _4524_sub.len()))) {
		return false;
	};
	_4538_start=static_cast<jule::I64>((_4515_s.len() - _4538_start));
	jule::I64 _5113_i = 0LL;;
	for (; (_5113_i < _4524_sub.len()); (_5113_i)++) {
		{
			if ((_4515_s[((_4538_start - _5113_i) - 1LL)] != _4524_sub[((_4524_sub.len() - _5113_i) - 1LL)])) {
				return false;
			};
		}
	_iter_next_1e4a18516:;
	}
	_iter_end_1e4a18516:;;
	return true;
}



inline jule::Bool _20a12e9c4_HasSuffix(jule::Str _6118_s, jule::Str _6126_sub) {
	return _20a12b251_hasSuffix(_6118_s,_6126_sub,0LL);
}



inline jule::I64 _209ed9719_FindAt(jule::Str _6915_s, jule::Str _6923_sub, jule::I64 _6937_i) {
	if ((((_6937_i < 0LL) || (_6915_s.len() < _6923_sub.len())) || (_6923_sub.len() == 0LL))) {
		return -1LL;
	};
	for (; (_6937_i < _6915_s.len()); (_6937_i)++) {
		{
			if (_20a1183c5_hasPrefix(_6915_s,_6923_sub,_6937_i)) {
				return _6937_i;
			};
		}
	_iter_next_1e4a1beba:;
	}
	_iter_end_1e4a1beba:;;
	return -1LL;
}



inline jule::I64 _20a110543_FindLastAt(jule::Str _9219_s, jule::Str _9227_sub, jule::I64 _9237_i) {
	jule::I64 _9313_j = ((_9237_i - _9227_sub.len()) + 1LL);;
	if (((((_9227_sub.len() == 0LL) || (_9237_i < 0LL)) || (_9237_i >= _9219_s.len())) || (_9313_j < 0LL))) {
		return -1LL;
	};
	_julec_label_loop:;
	for (; (_9313_j >= 0LL); (_9313_j)--) {
		{
			jule::I64 _9917_k = _9313_j;;
			jule::I64 _10017_z = 0LL;;
			for (; (_10017_z < _9227_sub.len()); std::tie(_9917_k,_10017_z) = std::make_tuple(static_cast<jule::I64>((_9917_k + 1LL)),static_cast<jule::I64>((_10017_z + 1LL)))) {
				{
					if ((_9219_s[_9917_k] != _9227_sub[_10017_z])) {
						goto _iter_next_1e4a1e671;
					};
				}
			_iter_next_1e4a21651:;
			}
			_iter_end_1e4a21651:;;
			return _9313_j;
		}
	_iter_next_1e4a1e671:;
	}
	_iter_end_1e4a1e671:;;
	return -1LL;
}



inline jule::I64 _20a110a60_FindLast(jule::Str _11417_s, jule::Str _11425_sub) {
	return static_cast<jule::I64>(_20a110543_FindLastAt(_11417_s,_11425_sub,static_cast<jule::I64>((_11417_s.len() - 1LL))));
}



inline jule::I64 _20a1ad37c_findRune(jule::Slice<jule::U8>& _17014_s, jule::I32 _17025_r) {
	jule::I64 _17113_i = 0LL;;
	while ((_17113_i < _17014_s.len())) {
		{
			jule::I32 _17314_br;;
			jule::I64 _17318_n;;
			std::tie(_17314_br,_17318_n) = _2164948dd_DecodeRune(_17014_s.slice(_17113_i));
			if ((_17025_r == _17314_br)) {
				return _17113_i;
			};
			_17113_i+=_17318_n;
		}
	_iter_next_1e4a2911a:;
	}
	_iter_end_1e4a2911a:;;
	return -1LL;
}



inline jule::I64 _20a1ad822_FindLastByte(jule::Str _19721_s, jule::U8 _19729_b) {
	jule::I64 _19813_i = (_19721_s.len() - 1LL);;
	for (; (_19813_i >= 0LL); (_19813_i)--) {
		{
			if ((_19721_s[_19813_i] == _19729_b)) {
				return _19813_i;
			};
		}
	_iter_next_1e4a2c173:;
	}
	_iter_end_1e4a2c173:;;
	return -1LL;
}



inline jule::I64 _20a1adcea_FindAny(jule::Str _23816_s, jule::Str _23824_runes) {
	jule::Slice<jule::U8> _2399_sb = _22329237c_Stobs(_23816_s);;
	jule::Slice<jule::U8> _24013_rb = _22329237c_Stobs(_23824_runes);;
	jule::I64 _24113_i = 0LL;;
	while ((_24113_i < _2399_sb.len())) {
		{
			jule::I32 _24314_r;;
			jule::I64 _24317_n;;
			std::tie(_24314_r,_24317_n) = _2164948dd_DecodeRune(_2399_sb.slice(_24113_i));
			if ((_20a1ad37c_findRune(_24013_rb,_24314_r) != -1LL)) {
				return _24113_i;
			};
			_24113_i+=_24317_n;
		}
	_iter_next_1e4a31a7e:;
	}
	_iter_end_1e4a31a7e:;;
	return -1LL;
}



inline jule::Slice<jule::Str> _20a1ae05e_Split(jule::Str _27214_s, jule::Str _27222_sub, jule::I64 _27236_n) {
	jule::I64 _27313_cap = _27236_n;;
	if ((_27236_n < 0LL)) {
		_27313_cap=16LL;
	};
	jule::Slice<jule::Str> _27713_parts = jule::Slice<jule::Str>::alloc(0LL,_27313_cap);;
	if ((_27236_n == 0LL)) {
		return _27713_parts;
	};
	if ((_27236_n < 0LL)) {
		_27236_n=static_cast<jule::I64>(_27214_s.len());
	};
	jule::I64 _28413_i = 0LL;;
	for (; (_27236_n > 0LL); (_27236_n)--) {
		{
			jule::I64 _28613_j = _209ed9719_FindAt(_27214_s,_27222_sub,_28413_i);;
			if ((_28613_j == -1LL)) {
				goto _iter_end_1e4a38756;
			};
			_27713_parts = jule::alloc_for_append(_27713_parts,1);_27713_parts.__push(_27214_s.slice(_28413_i,_28613_j));;
			_28413_i=static_cast<jule::I64>((_28613_j + _27222_sub.len()));
		}
	_iter_next_1e4a38756:;
	}
	_iter_end_1e4a38756:;;
	if (((_27236_n > 0LL) && (_28413_i < _27214_s.len()))) {
		_27713_parts = jule::alloc_for_append(_27713_parts,1);_27713_parts.__push(_27214_s.slice(_28413_i));;
	};
	return _27713_parts;
}



inline jule::Bool _20a1ae191_Contains(jule::Str _30017_s, jule::Str _30025_sub) {
	return (_209ed9719_FindAt(_30017_s,_30025_sub,0LL) != -1LL);
}



inline jule::Bool _20a1ae537_ContainsAny(jule::Str _31620_s, jule::Str _31628_runes) {
	return (_20a1adcea_FindAny(_31620_s,_31628_runes) != -1LL);
}



inline jule::I64 _20a1ae669_Count(jule::Str _32214_s, jule::Str _32222_sub) {
	if ((_32222_sub.len() == 0LL)) {
		return 0LL;
	};
	jule::I64 _32613_n = 0LL;;
	jule::I64 _32713_i = 0LL;;
	for (;;) {
		{
			jule::I64 _32913_j = _209ed9719_FindAt(_32214_s,_32222_sub,_32713_i);;
			if ((_32913_j == -1LL)) {
				goto _iter_end_1e4a3e174;
			};
			(_32613_n)++;
			_32713_i=static_cast<jule::I64>((_32913_j + _32222_sub.len()));
		}
	_iter_next_1e4a3e174:;
	}
	_iter_end_1e4a3e174:;;
	return _32613_n;
}



inline jule::Str _20a1ae79b_Replace(jule::Str _34216_s, jule::Str _34224_sub, jule::Str _34234_new, jule::I64 _34248_n) {
	if (((_34248_n == 0LL) || (_34224_sub == _34234_new))) {
		return _34216_s;
	};
	jule::I64 _3479_m = _20a1ae669_Count(_34216_s,_34224_sub);;
	if ((_3479_m == 0LL)) {
		return _34216_s;
	};
	if (((_34248_n < 0LL) || (_3479_m < _34248_n))) {
		_34248_n=_3479_m;
	};
	jule::Str _35513_ss = jule::Str::alloc((_34216_s.len() + (_34248_n * (_34234_new.len() - _34224_sub.len()))));;
	jule::I64 _35613_i = 0LL;;
	for (; (_34248_n > 0LL); (_34248_n)--) {
		{
			jule::I64 _35813_j = _209ed9719_FindAt(_34216_s,_34224_sub,_35613_i);;
			if ((_35813_j == -1LL)) {
				goto _iter_end_1e4a43178;
			};
			_35513_ss+=_34216_s.slice(_35613_i,_35813_j);
			_35513_ss+=_34234_new;
			_35613_i=static_cast<jule::I64>((_35813_j + _34224_sub.len()));
		}
	_iter_next_1e4a43178:;
	}
	_iter_end_1e4a43178:;;
	_35513_ss+=_34216_s.slice(_35613_i);
	return _35513_ss;
}



inline void _20a1ad5e1_trimLeft(jule::Slice<jule::U8>& _39818_s, jule::Slice<jule::U8>& _39830_cutset) {
	jule::I64 _39913_i = 0LL;;
	while ((_39913_i < _39818_s.len())) {
		{
			jule::I32 _40114_r;;
			jule::I64 _40117_n;;
			std::tie(_40114_r,_40117_n) = _2164948dd_DecodeRune(_39818_s.slice(_39913_i));
			if ((_20a1ad37c_findRune(_39830_cutset,_40114_r) == -1LL)) {
				_39818_s=_39818_s.slice(_39913_i);
				return;;
			};
			_39913_i+=_40117_n;
		}
	_iter_next_1e4a4803a:;
	}
	_iter_end_1e4a4803a:;;
	_39818_s=nullptr;
}



inline jule::Str _20a1b01e7_TrimLeft(jule::Str _41317_s, jule::Str _41325_cutset) {
	jule::Slice<jule::U8> _41413_bytes = _22329237c_Stobs(_41317_s);;
	jule::Slice<jule::U8> _4159_bcutset = _22329237c_Stobs(_41325_cutset);;
	_20a1ad5e1_trimLeft(_41413_bytes,_4159_bcutset);
	return static_cast<jule::Str>(_41413_bytes);
}



inline void _20a1b0329_trimRight(jule::Slice<jule::U8>& _42019_s, jule::Slice<jule::U8>& _42031_cutset) {
	jule::I64 _42113_i = _42019_s.len();;
	while ((_42113_i > 0LL)) {
		{
			jule::I32 _42314_r;;
			jule::I64 _42317_n;;
			std::tie(_42314_r,_42317_n) = _216494ea4_DecodeLastRune(_42019_s.slice(0LL,_42113_i));
			if ((_20a1ad37c_findRune(_42031_cutset,_42314_r) == -1LL)) {
				_42019_s=_42019_s.slice(0LL,_42113_i);
				return;;
			};
			_42113_i-=_42317_n;
		}
	_iter_next_1e4a4b48e:;
	}
	_iter_end_1e4a4b48e:;;
	_42019_s=nullptr;
}



inline jule::Str _20a1b058d_Trim(jule::Str _44413_s, jule::Str _44421_cutset) {
	jule::Slice<jule::U8> _44513_bytes = _22329237c_Stobs(_44413_s);;
	jule::Slice<jule::U8> _4469_bcutset = _22329237c_Stobs(_44421_cutset);;
	_20a1ad5e1_trimLeft(_44513_bytes,_4469_bcutset);
	_20a1b0329_trimRight(_44513_bytes,_4469_bcutset);
	return static_cast<jule::Str>(_44513_bytes);
}



inline jule::Bool _2231d0d15_IsPathSep(jule::U8 _4818_c) {
	return ((_4818_c == 92LLU) || (_4818_c == '/'));
}



inline jule::Bool _2231d0e47_isSlash(jule::U8 _5212_c) {
	return ((_5212_c == '\\') || (_5212_c == '/'));
}



inline jule::U8 _2231d1112_toUpper(jule::U8 _5412_c) {
	if ((('a' <= _5412_c) && (_5412_c <= 'z'))) {
		return static_cast<jule::U8>((_5412_c - ('a' - 'A')));
	};
	return _5412_c;
}



inline jule::I64 _2231d16c8_volumeNameLen(jule::Str _8218_path) {
	if ((_8218_path.len() < 2LL)) {
		return 0LL;
	};
	jule::U8 _879_c = _8218_path[0LL];;
	if (((_8218_path[1LL] == ':') && ((('a' <= _879_c) && (_879_c <= 'z')) || (('A' <= _879_c) && (_879_c <= 'Z'))))) {
		return 2LL;
	};
	if (((!(_2231d0e47_isSlash(_8218_path[0LL]))) || (!(_2231d0e47_isSlash(_8218_path[1LL]))))) {
		return 0LL;
	};
	jule::Str _9510_p1;;
	jule::Str _9518_rest;;
	std::tie(_9510_p1,_9518_rest,std::ignore) = _2231d1970_cutPath(_8218_path.slice(2LL));
	jule::Str _9613_p2 = jule::Str();;
	jule::Bool _9713_ok = false;;
	std::tie(_9613_p2,_9518_rest,_9713_ok) = _2231d1970_cutPath(_9518_rest);
	if ((!(_9713_ok))) {
		return static_cast<jule::I64>(_8218_path.len());
	};
	if (((_9510_p1 != jule::Str(".", 1)) && (_9510_p1 != jule::Str("?", 1)))) {
		return static_cast<jule::I64>(((_8218_path.len() - _9518_rest.len()) - 1LL));
	};
	if (((((_9613_p2.len() == 3LL) && (_2231d1112_toUpper(_9613_p2[0LL]) == 'U')) && (_2231d1112_toUpper(_9613_p2[1LL]) == 'N')) && (_2231d1112_toUpper(_9613_p2[2LL]) == 'C'))) {
		std::tie(std::ignore,_9518_rest,std::ignore) = _2231d1970_cutPath(_9518_rest);
		std::tie(std::ignore,_9518_rest,_9713_ok) = _2231d1970_cutPath(_9518_rest);
		if ((!(_9713_ok))) {
			return static_cast<jule::I64>(_8218_path.len());
		};
	};
	return static_cast<jule::I64>(((_8218_path.len() - _9518_rest.len()) - 1LL));
}



inline std::tuple<jule::Str,jule::Str,jule::Bool> _2231d1970_cutPath(jule::Str _11912_path) {
	jule::Str _11925_before = jule::Str();
	jule::Str _11938_after = jule::Str();
	jule::Bool _11950_found = jule::Bool();
	{
		auto &expr = _11912_path;
		auto it = expr.begin();
		_iter_begin_1e4a68ba4:;
		if (it != expr.end()) {
			jule::I64 _1209_i = it - expr.begin();
			{
				if (_2231d0e47_isSlash(_11912_path[_1209_i])) {
					_11925_before = _11912_path.slice(0LL,_1209_i);
					_11938_after = _11912_path.slice((_1209_i + 1LL));
					_11950_found = true;
					return std::make_tuple(_11925_before,_11938_after,_11950_found);
				};
			}
			_iter_next_1e4a68ba4:;
			++it;
			_1209_i++;
			goto _iter_begin_1e4a68ba4;
		}
		_iter_end_1e4a68ba4:;
	};
	_11925_before = _11912_path;
	_11938_after = jule::Str();
	_11950_found = false;
	return std::make_tuple(_11925_before,_11938_after,_11950_found);
}



inline std::tuple<jule::Str,jule::Bool> _2231d1c17_fullPath(jule::Str _12813_name) {
	jule::Str _12826_path = jule::Str();
	jule::Bool _12837_ok = jule::Bool();
	jule::Slice<jule::U16> _1299_utf16Name = _216397e2e_Utf16FromStr(_12813_name);;
	jule::U16* _1309_p = (&(_1299_utf16Name[0LL]));;
	jule::U32 _13113_n = 100LLU;;
	for (;;) {
		{
			jule::Slice<jule::U16> _13317_buff = jule::Slice<jule::U16>::alloc(static_cast<jule::I64>(_13113_n));;
			_13113_n=static_cast<jule::U32>(_2163b2300_GetFullPathName(_1309_p,static_cast<jule::U32>(static_cast<jule::U32>(_13317_buff.len())),(&(_13317_buff[0LL])),nullptr));
			if ((_13113_n == 0LLU)) {
				_12826_path = jule::Str();
				_12837_ok = false;
				return std::make_tuple(_12826_path,_12837_ok);
			};
			if ((_13113_n <= static_cast<jule::U32>(_13317_buff.len()))) {
				_12826_path = _216398a67_Utf16ToStr(_13317_buff.slice(0LL,static_cast<jule::I64>(_13113_n)));
				_12837_ok = true;
				return std::make_tuple(_12826_path,_12837_ok);
			};
		}
	_iter_next_1e4a6aa85:;
	}
	_iter_end_1e4a6aa85:;;
	_12826_path = jule::Str();
	_12837_ok = false;
	return std::make_tuple(_12826_path,_12837_ok);
}



inline std::tuple<jule::Str,jule::Bool> _2231d208b_abs(jule::Str _14512_path) {
	jule::Bool _14530_ok = jule::Bool();
	if (_14512_path.empty()) {
		_14512_path=jule::Str(".", 1);
	};
	std::tie(_14512_path,_14530_ok) = _2231d1c17_fullPath(_14512_path);
	if ((!(_14530_ok))) {
		_14530_ok = false;
		return std::make_tuple(jule::Str(),_14530_ok);
	};
	_14530_ok = true;
	return std::make_tuple(_20a1b0d85_Clean(_14512_path),_14530_ok);
}



inline jule::Str _2231d2333_join(jule::Slice<jule::Str> _15913_elem) {
	jule::Str _16013_s = jule::Str();;
	jule::U8 _16113_lastChar = 0LLU;;
	{
		auto &expr = _15913_elem;
		auto it = expr.begin();
		_iter_begin_1e4a7130a:;
		if (it != expr.end()) {
			jule::Str _16217_e = *it;
			{
				{
					
					if ((_16013_s.len() == 0LL)) {
						_case_begin_1e4a72c9b:;
					}
					else if (_2231d0e47_isSlash(_16113_lastChar)) {
						_case_begin_1e4a72e44:;
						{
							while (((_16217_e.len() > 0LL) && _2231d0e47_isSlash(_16217_e[0LL]))) {
								{
									(_16217_e).mut_slice(1LL);;
								}
							_iter_next_1e4a7361a:;
							}
							_iter_end_1e4a7361a:;;
						}
					}
					else if ((_16113_lastChar == ':')) {
						_case_begin_1e4a72eaa:;
					}
					else {
						_case_begin_1e4a728e4:;
						{
							_16013_s+=jule::Str("\\", 1);
							_16113_lastChar='\\';
						}
					}
					_match_end_1e4a72817:;
				};
				if ((_16217_e.len() > 0LL)) {
					_16013_s+=_16217_e;
					_16113_lastChar=_16217_e[(_16217_e.len() - 1LL)];
				};
			}
			_iter_next_1e4a7130a:;
			++it;
			goto _iter_begin_1e4a7130a;
		}
		_iter_end_1e4a7130a:;
	};
	if ((_16013_s.len() == 0LL)) {
		return jule::Str();
	};
	return _20a1b0d85_Clean(_16013_s);
}



inline jule::Str _20a1b0d85_Clean(jule::Str _10818_path) {
	jule::Str _1099_originalPath = _10818_path;;
	jule::I64 _1109_volLen = _2231d16c8_volumeNameLen(_10818_path);;
	(_10818_path).mut_slice(_1109_volLen);;
	if (_10818_path.empty()) {
		if ((((_1109_volLen > 1LL) && _2231d0d15_IsPathSep(_1099_originalPath[0LL])) && _2231d0d15_IsPathSep(_1099_originalPath[1LL]))) {
			return _20a1b10e9_FromSlash(_1099_originalPath);
		};
		return (_1099_originalPath + jule::Str(".", 1));
	};
	jule::Bool _1199_rooted = _2231d0d15_IsPathSep(_10818_path[0LL]);;
	jule::I64 _1269_n = _10818_path.len();;
	_20a1b0802_lazyBuff _12713_out = _20a1b0802_lazyBuff{._field_path=_10818_path, ._field_volAndPath=_1099_originalPath, ._field_volLen=_1109_volLen};;
	jule::I64 _13214_r = 0LL;;
	jule::I64 _13221_dotdot = 0LL;;
	std::tie(_13214_r,_13221_dotdot) = std::make_tuple(0LL,0LL);
	if (_1199_rooted) {
		_20a1b0b21_append(&_12713_out, 92LLU);
		std::tie(_13214_r,_13221_dotdot) = std::make_tuple(1LL,1LL);
	};
	while ((_13214_r < _1269_n)) {
		{
			{
				
				if (_2231d0d15_IsPathSep(_10818_path[_13214_r])) {
					_case_begin_1e4a7c16d:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10818_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _2231d0d15_IsPathSep(_10818_path[(_13214_r + 1LL)])))) {
					_case_begin_1e4a7ed63:;
					{
						(_13214_r)++;
					}
				}
				else if ((((_10818_path[_13214_r] == '.') && (_10818_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _2231d0d15_IsPathSep(_10818_path[(_13214_r + 2LL)])))) {
					_case_begin_1e4a7edc9:;
					{
						_13214_r+=2LL;
						{
							
							if ((_12713_out._field_w > _13221_dotdot)) {
								_case_begin_1e4a82d22:;
								{
									(_12713_out._field_w)--;
									while (((_12713_out._field_w > _13221_dotdot) && (!(_2231d0d15_IsPathSep(static_cast<jule::U8>(_20a1b09de_index(&_12713_out, _12713_out._field_w))))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_1e4a8311e:;
									}
									_iter_end_1e4a8311e:;;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_1e4a82d88:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_20a1b0b21_append(&_12713_out, 92LLU);
									};
									_20a1b0b21_append(&_12713_out, '.');
									_20a1b0b21_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_1e4a82959:;
						};
					}
				}
				else {
					_case_begin_1e4a7a4e0:;
					{
						if (((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL)))) {
							_20a1b0b21_append(&_12713_out, 92LLU);
						};
						if ((((true && (_12713_out._field_w == 0LL)) && (_12713_out._field_volLen == 0LL)) && (_13214_r != 0LL))) {
							jule::I64 _17525_i = _13214_r;;
							for (; ((_17525_i < _1269_n) && (!(_2231d0d15_IsPathSep(_10818_path[_17525_i])))); (_17525_i)++) {
								{
									if ((_10818_path[_17525_i] == ':')) {
										_20a1b0b21_append(&_12713_out, '.');
										_20a1b0b21_append(&_12713_out, 92LLU);
										goto _iter_end_1e4a7c217;
									};
								}
							_iter_next_1e4a7c217:;
							}
							_iter_end_1e4a7c217:;;
						};
						for (; ((_13214_r < _1269_n) && (!(_2231d0d15_IsPathSep(_10818_path[_13214_r])))); (_13214_r)++) {
							{
								_20a1b0b21_append(&_12713_out, _10818_path[_13214_r]);
							}
						_iter_next_1e4a7bb2e:;
						}
						_iter_end_1e4a7bb2e:;;
					}
				}
				_match_end_1e4a7a413:;
			};
		}
	_iter_next_1e4a79a72:;
	}
	_iter_end_1e4a79a72:;;
	if ((_12713_out._field_w == 0LL)) {
		_20a1b0b21_append(&_12713_out, '.');
	};
	return _20a1b10e9_FromSlash(_20a1b0c53_string(&_12713_out));
}



inline jule::Str _20a1b10e9_FromSlash(jule::Str _21118_path) {
	if ((92LL == '/')) {
		return _21118_path;
	};
	return _20a1ae79b_Replace(_21118_path,jule::Str("/", 1),static_cast<jule::Str>(92LL),-1LL);
}



inline jule::Str _20a1b122b_Join(jule::Slice<jule::Str> _22513_elem) {
	return _2231d2333_join(_22513_elem);
}



inline jule::Str _20a1b135d_Ext(jule::Str _23012_path) {
	jule::I64 _23113_i = (_23012_path.len() - 1LL);;
	for (; ((_23113_i >= 0LL) && (!(_2231d0d15_IsPathSep(_23012_path[_23113_i])))); (_23113_i)--) {
		{
			if ((_23012_path[_23113_i] == '.')) {
				return _23012_path.slice(_23113_i);
			};
		}
	_iter_next_1e4a87ca0:;
	}
	_iter_end_1e4a87ca0:;;
	return jule::Str();
}



inline std::tuple<jule::Str,jule::Bool> _20a1b1490_Abs(jule::Str _24512_path) {
	jule::Str _24610_abs_path;;
	jule::Bool _24620_ok;;
	std::tie(_24610_abs_path,_24620_ok) = _2231d208b_abs(_24512_path);
	return std::make_tuple(_24610_abs_path,_24620_ok);
}



inline jule::Str _20a1b15c2_Base(jule::Str _25417_path) {
	if (_25417_path.empty()) {
		return jule::Str(".", 1);
	};
	while (((_25417_path.len() > 0LL) && _2231d0d15_IsPathSep(_25417_path[(_25417_path.len() - 1LL)]))) {
		{
			(_25417_path).mut_slice(0LL,(_25417_path.len() - 1LL));;
		}
	_iter_next_1e4a89ab5:;
	}
	_iter_end_1e4a89ab5:;;
	(_25417_path).mut_slice(_20a1b1836_VolumeName(_25417_path).len());;
	jule::I64 _26513_i = (_25417_path.len() - 1LL);;
	while (((_26513_i >= 0LL) && (!(_2231d0d15_IsPathSep(_25417_path[_26513_i]))))) {
		{
			(_26513_i)--;
		}
	_iter_next_1e4a8ba51:;
	}
	_iter_end_1e4a8ba51:;;
	if ((_26513_i >= 0LL)) {
		(_25417_path).mut_slice((_26513_i + 1LL));;
	};
	if (_25417_path.empty()) {
		return static_cast<jule::Str>(92LL);
	};
	return _25417_path;
}



inline jule::Str _20a1b1704_Dir(jule::Str _28512_path) {
	jule::Str _2869_vol = _20a1b1836_VolumeName(_28512_path);;
	jule::I64 _28713_i = (_28512_path.len() - 1LL);;
	while (((_28713_i >= _2869_vol.len()) && (!(_2231d0d15_IsPathSep(_28512_path[_28713_i]))))) {
		{
			(_28713_i)--;
		}
	_iter_next_1e4a8dec6:;
	}
	_iter_end_1e4a8dec6:;;
	jule::Str _2919_dir = _20a1b0d85_Clean(_28512_path.slice(_2869_vol.len(),(_28713_i + 1LL)));;
	if (((_2919_dir == jule::Str(".", 1)) && (_2869_vol.len() > 2LL))) {
		return _2869_vol;
	};
	return (_2869_vol + _2919_dir);
}



inline jule::Str _20a1b1836_VolumeName(jule::Str _30319_path) {
	return _20a1b10e9_FromSlash(_30319_path.slice(0LL,_2231d16c8_volumeNameLen(_30319_path)));
}



inline jule::I64 _2162c84ad_getLastFsError(void) {
	jule::I64 _729_err = _22ebe4d7d_GetLastErrno();;
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1e4aa31a5:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1e4aa268d:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1e4aa2b11:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1e4aa2b77:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1e4aa2bdd:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1e4aa2c54:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 132LL) {
			_case_begin_1e4aa33b4:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1e4aa342a:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1e4aa3491:;
			{
				return static_cast<jule::I64>(8LL);
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1e4aa3507:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1e4aa356d:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1e4aa35d4:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1e4aa364a:;
			{
				return static_cast<jule::I64>(12LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1e4aa36c2:;
			{
				return static_cast<jule::I64>(13LL);
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1e4aa3749:;
			{
				return static_cast<jule::I64>(14LL);
			}
		}
		else if (_match_expr == 124LL) {
			_case_begin_1e4aa37c1:;
			{
				return static_cast<jule::I64>(15LL);
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1e4aa3848:;
			{
				return static_cast<jule::I64>(16LL);
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1e4aa38c0:;
			{
				return static_cast<jule::I64>(17LL);
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1e4aa3947:;
			{
				return static_cast<jule::I64>(18LL);
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1e4aa39be:;
			{
				return static_cast<jule::I64>(19LL);
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1e4aa3a46:;
			{
				return static_cast<jule::I64>(20LL);
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1e4aa3abd:;
			{
				return static_cast<jule::I64>(21LL);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1e4aa3b45:;
			{
				return static_cast<jule::I64>(22LL);
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1e4aa3bbc:;
			{
				return static_cast<jule::I64>(23LL);
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1e4aa3c44:;
			{
				return static_cast<jule::I64>(24LL);
			}
		}
		else if (_match_expr == 119LL) {
			_case_begin_1e4aa3cbb:;
			{
				return static_cast<jule::I64>(25LL);
			}
		}
		else if (_match_expr == 104LL) {
			_case_begin_1e4aa3d43:;
			{
				return static_cast<jule::I64>(26LL);
			}
		}
		else if (_match_expr == 41LL) {
			_case_begin_1e4aa3dba:;
			{
				return static_cast<jule::I64>(27LL);
			}
		}
		else {
			_case_begin_1e4aa2979:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		_match_end_1e4aa2924:;
	};
}



inline jule::Bool _21646763b_isConsoleHandle(jule::Uintptr _11520_handle) {
	return (((_11520_handle == _216398ea7_STDIN) || (_11520_handle == _21639c9e4_STDOUT)) || (_11520_handle == _216397417_STDERR));
}



inline jule::I64 _20a393265_getLastProcessError(void) {
	jule::I64 _429_err = _22ebe4d7d_GetLastErrno();;
	{
		auto &_match_expr{ _429_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1e4ad2e3d:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1e4ad33b1:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1e4ad3427:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1e4ad348d:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1e4ad3504:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1e4ad3746:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1e4ad37ac:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1e4ad3823:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1e4ad3889:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 121LL) {
			_case_begin_1e4ad3900:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1e4ad3966:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else {
			_case_begin_1e4ad3229:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		_match_end_1e4ad31c4:;
	};
}



inline jule::Slice<wchar_t*> _20a3a2d24_ustrSliceToWcstrSlice(jule::Slice<jule::Slice<jule::U16>> _1726_us) {
	jule::Slice<wchar_t*> _1813_wcs = jule::Slice<wchar_t*>::alloc(0LL,(_1726_us.len() + 1LL));;
	{
		auto &expr = _1726_us;
		auto it = expr.begin();
		_iter_begin_1e4adb4eb:;
		if (it != expr.end()) {
			jule::I64 _199_i = it - expr.begin();
			{
				_1813_wcs = jule::alloc_for_append(_1813_wcs,1);_1813_wcs.__push(((wchar_t*)((&(_1726_us[_199_i][0LL])))));;
			}
			_iter_next_1e4adb4eb:;
			++it;
			_199_i++;
			goto _iter_begin_1e4adb4eb;
		}
		_iter_end_1e4adb4eb:;
	};
	_1813_wcs = jule::alloc_for_append(_1813_wcs,1);_1813_wcs.__push(nullptr);;
	return _1813_wcs;
}



inline jule::Slice<jule::Slice<jule::U16>> _20a3a30bb_strSliceToUstrSlice(jule::Slice<jule::Str> _2624_s) {
	jule::Slice<jule::Slice<jule::U16>> _2713_us = jule::Slice<jule::Slice<jule::U16>>::alloc(0LL,_2624_s.len());;
	{
		auto &expr = _2624_s;
		auto it = expr.begin();
		_iter_begin_1e4add2bc:;
		if (it != expr.end()) {
			jule::Str &_2812_p = *it;
			{
				_2713_us = jule::alloc_for_append(_2713_us,1);_2713_us.__push(_216397e2e_Utf16FromStr(_2812_p));;
			}
			_iter_next_1e4add2bc:;
			++it;
			goto _iter_begin_1e4add2bc;
		}
		_iter_end_1e4add2bc:;
	};
	return _2713_us;
}



inline jule::I64 _20a3a33c9_execvp(jule::Str _3411_file, jule::Slice<jule::Str> _3422_argv) {
	jule::Slice<jule::U16> _359_utf16File = _216397e2e_Utf16FromStr(_3411_file);;
	jule::Slice<jule::Slice<jule::U16>> _369_ucargv = _20a3a30bb_strSliceToUstrSlice(_3422_argv);;
	jule::Slice<wchar_t*> _379_cargv = _20a3a2d24_ustrSliceToWcstrSlice(_369_ucargv);;
	return static_cast<jule::I64>(_wspawnvp(P_NOWAIT,((wchar_t*)((&(_359_utf16File[0LL])))),(&(_379_cargv[0LL]))));
}



inline jule::I64 _20a3a37b4_execve(jule::Str _4111_file, jule::Slice<jule::Str> _4122_argv, jule::Slice<jule::Str> _4135_env) {
	jule::Slice<jule::Slice<jule::U16>> _429_ucargv = _20a3a30bb_strSliceToUstrSlice(_4122_argv);;
	jule::Slice<wchar_t*> _439_cargv = _20a3a2d24_ustrSliceToWcstrSlice(_429_ucargv);;
	jule::Slice<jule::Slice<jule::U16>> _449_ucenv = _20a3a30bb_strSliceToUstrSlice(_4135_env);;
	jule::Slice<wchar_t*> _459_cenv = _20a3a2d24_ustrSliceToWcstrSlice(_449_ucenv);;
	jule::Slice<jule::U16> _469_utf16File = _216397e2e_Utf16FromStr(_4111_file);;
	return static_cast<jule::I64>(_wspawnvpe(P_NOWAIT,((wchar_t*)((&(_469_utf16File[0LL])))),(&(_439_cargv[0LL])),(&(_459_cenv[0LL]))));
}



inline void _20a3a44da_Exit(jule::I64 _1213_code) {
	_2163b66cd_Exit(_1213_code);
}



inline jule::Str _20a3a46d8_Executable(void) {
	return jule::executable();
}



inline jule::Bool _20a347c42_IsStdHeaderPath(jule::Str _2624_p) {
	return ((_2624_p[0LL] == '<') && (_2624_p[(_2624_p.len() - 1LL)] == '>'));
}



inline jule::Bool _20a347ea6_IsValidHeaderExt(jule::Str _3125_ext) {
	{
		auto &expr = _20a2cb3ce_CppHeaderExts;
		auto it = expr.begin();
		_iter_begin_1e4b23951:;
		if (it != expr.end()) {
			jule::Str &_3212_valid_ext = *it;
			{
				if ((_3125_ext == _3212_valid_ext)) {
					return true;
				};
			}
			_iter_next_1e4b23951:;
			++it;
			goto _iter_begin_1e4b23951;
		}
		_iter_end_1e4b23951:;
	};
	return false;
}



inline jule::Bool _20a34824d_IsValidCppExt(jule::Str _4222_ext) {
	if ((_4222_ext == jule::Str(".c", 2))) {
		return true;
	};
	{
		auto &expr = _20a34679b_CppExts;
		auto it = expr.begin();
		_iter_begin_1e4b25942:;
		if (it != expr.end()) {
			jule::Str &_4612_e = *it;
			{
				if ((_4222_ext == _4612_e)) {
					return true;
				};
			}
			_iter_next_1e4b25942:;
			++it;
			goto _iter_begin_1e4b25942;
		}
		_iter_end_1e4b25942:;
	};
	{
		auto &expr = _20a347b54_ObjectiveCppExts;
		auto it = expr.begin();
		_iter_begin_1e4b2668a:;
		if (it != expr.end()) {
			jule::Str &_5112_e = *it;
			{
				if ((_4222_ext == _5112_e)) {
					return true;
				};
			}
			_iter_next_1e4b2668a:;
			++it;
			goto _iter_begin_1e4b2668a;
		}
		_iter_end_1e4b2668a:;
	};
	return false;
}



inline jule::Str _20a354d5e_Logf(jule::Str _29413_fmt, jule::Slice<jule::Any> _29426_args) {
	return _20a355777_applyFmt(_29413_fmt,jule::Any(_29426_args));
}



inline jule::Str _20a35514a_argToStr(jule::Any _29813_arg) {
	{
		auto &_match_expr{ _29813_arg };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1e4b27867:;
			{
				return _29813_arg.operator jule::Str();
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1e4b278cd:;
			{
				return static_cast<jule::Str>(_29813_arg.operator jule::U8());
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1e4b27944:;
			{
				return static_cast<jule::Str>(_29813_arg.operator jule::I32());
			}
		}
		else {
			_case_begin_1e4b26a0e:;
			{
				return jule::Str("<fmt?>", 6);
			}
		}
		_match_end_1e4b2745a:;
	};
}



inline jule::I64 _20a3553e2_findNextFmt(jule::Str _31116_fmt) {
	{
		auto &expr = _31116_fmt;
		auto it = expr.begin();
		_iter_begin_1e4b28b98:;
		if (it != expr.end()) {
			jule::I64 _3129_i = it - expr.begin();
			jule::U8 &_31212_b = *it;
			{
				if ((_31212_b == '@')) {
					return _3129_i;
				};
			}
			_iter_next_1e4b28b98:;
			++it;
			_3129_i++;
			goto _iter_begin_1e4b28b98;
		}
		_iter_end_1e4b28b98:;
	};
	return -1LL;
}



inline jule::Str _20a355777_applyFmt(jule::Str _32017_fmt, jule::Slice<jule::Any> _32027_args) {
	jule::Str _32113_s = jule::Str();;
	{
		auto &expr = _32027_args;
		auto it = expr.begin();
		_iter_begin_1e4b2a4c4:;
		if (it != expr.end()) {
			jule::Any &_32212_arg = *it;
			{
				jule::I64 _32313_i = _20a3553e2_findNextFmt(_32017_fmt);;
				if ((_32313_i == -1LL)) {
					goto _iter_end_1e4b2a4c4;
				};
				_32113_s+=_32017_fmt.slice(0LL,_32313_i);
				_32113_s+=_20a35514a_argToStr(jule::Any(_32212_arg));
				(_32017_fmt).mut_slice((_32313_i + 1LL));;
			}
			_iter_next_1e4b2a4c4:;
			++it;
			goto _iter_begin_1e4b2a4c4;
		}
		_iter_end_1e4b2a4c4:;
	};
	_32113_s+=_32017_fmt;
	return _32113_s;
}



inline jule::Bool _20a356844_IsTopDirective(jule::Str _2823_directive) {
	return ((_2823_directive == jule::Str("pass", 4)) || (_2823_directive == jule::Str("build", 5)));
}



inline jule::Bool _20a357c74_IsWindows(jule::Str _3718_os) {
	return (_3718_os == jule::Str("windows", 7));
}



inline jule::Bool _20a35802c_IsDarwin(jule::Str _4017_os) {
	return (_4017_os == jule::Str("darwin", 6));
}



inline jule::Bool _20a3582c4_IsLinux(jule::Str _4316_os) {
	return (_4316_os == jule::Str("linux", 5));
}



inline jule::Bool _20a3585e3_IsI386(jule::Str _4615_arch) {
	return (_4615_arch == jule::Str("i386", 4));
}



inline jule::Bool _20a35888a_IsAmd64(jule::Str _4916_arch) {
	return (_4916_arch == jule::Str("amd64", 5));
}



inline jule::Bool _20a358b32_IsArm64(jule::Str _5216_arch) {
	return (_5216_arch == jule::Str("arm64", 5));
}



inline jule::Bool _20a358dc9_IsUnix(jule::Str _5515_os) {
	return (_20a35802c_IsDarwin(_5515_os) || _20a3582c4_IsLinux(_5515_os));
}



inline jule::Bool _20a35924d_Is32Bit(jule::Str _5816_arch) {
	return _20a3585e3_IsI386(_5816_arch);
}



inline jule::Bool _20a3594e5_Is64Bit(jule::Str _6116_arch) {
	return (_20a35888a_IsAmd64(_6116_arch) || _20a358b32_IsArm64(_6116_arch));
}



inline void _20a3668a9_init(void) {
	jule::Str _2513_path = _20a3a46d8_Executable();;
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_20a378459_PathWd=({
			auto except = _223207e4c_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_20a377557_PathExec=_20a1b1704_Dir(_2513_path);
		_20a3768ec_PathStdlib=_20a1b122b_Join(jule::Slice<jule::Str>::make({_20a377557_PathExec,jule::Str("..", 2),jule::Str("std", 3)}));
		_20a391d46_PathApi=_20a1b122b_Join(jule::Slice<jule::Str>::make({_20a377557_PathExec,jule::Str("..", 2),jule::Str("api", 3),jule::Str("jule.hpp", 8)}));
	};
}



inline jule::Bool _1d42b4ad6_IsUnaryOp(jule::Str _31218_kind) {
	{
		auto &expr = _1d4219e15_UnaryOps;
		auto it = expr.begin();
		_iter_begin_1e4b79369:;
		if (it != expr.end()) {
			jule::Str &_31312_op = *it;
			{
				if ((_31218_kind == _31312_op)) {
					return true;
				};
			}
			_iter_next_1e4b79369:;
			++it;
			goto _iter_begin_1e4b79369;
		}
		_iter_end_1e4b79369:;
	};
	return false;
}



inline jule::Bool _1d42b4dc2_IsBinOp(jule::Str _32216_kind) {
	{
		auto &expr = _1d421a29a_BinOps;
		auto it = expr.begin();
		_iter_begin_1e4b79c71:;
		if (it != expr.end()) {
			jule::Str &_32312_op = *it;
			{
				if ((_32216_kind == _32312_op)) {
					return true;
				};
			}
			_iter_next_1e4b79c71:;
			++it;
			goto _iter_begin_1e4b79c71;
		}
		_iter_end_1e4b79c71:;
	};
	return false;
}



inline jule::Bool _1d42b5488_IsStr(jule::Str _34214_k) {
	return ((!(_34214_k.empty())) && ((_34214_k[0LL] == '\"') || _1d42b5730_IsRawStr(_34214_k)));
}



inline jule::Bool _1d42b5730_IsRawStr(jule::Str _34517_k) {
	return ((!(_34517_k.empty())) && (_34517_k[0LL] == '`'));
}



inline jule::Bool _1d42b59c7_IsRune(jule::Str _34915_k) {
	return ((!(_34915_k.empty())) && (_34915_k[0LL] == '\''));
}



inline jule::Bool _1d42b60e3_IsBool(jule::Str _35515_k) {
	return ((_35515_k == jule::Str("true", 4)) || (_35515_k == jule::Str("false", 5)));
}



inline jule::Bool _1d42b638a_IsFloat(jule::Str _35816_k) {
	if (_20a119ae1_HasPrefix(_35816_k,jule::Str("0x", 2))) {
		return _20a1ae537_ContainsAny(_35816_k,jule::Str(".pP", 3));
	};
	return _20a1ae537_ContainsAny(_35816_k,jule::Str(".eE", 3));
}



inline jule::Bool _1d42b6632_IsNum(jule::Str _36614_k) {
	if (_36614_k.empty()) {
		return false;
	};
	jule::U8 _3719_b = _36614_k[0LL];;
	return ((_3719_b == '.') || (('0' <= _3719_b) && (_3719_b <= '9')));
}



inline jule::Bool _1d42b6b71_IsIgnoreIdent(jule::Str _38122_ident) {
	return (_38122_ident == jule::Str("_", 1));
}



inline jule::Bool _1d42b6e18_IsAnonIdent(jule::Str _38420_ident) {
	return (_38420_ident == jule::Str("<anonymous>", 11));
}



inline jule::Bool _1d42b7457_IsSpace(jule::I32 _39716_r) {
	{
		auto &expr = _1d4219b18_Spaces;
		auto it = expr.begin();
		_iter_begin_1e4b83b48:;
		if (it != expr.end()) {
			jule::I32 &_39812_cr = *it;
			{
				if ((_39716_r == _39812_cr)) {
					return true;
				};
			}
			_iter_next_1e4b83b48:;
			++it;
			goto _iter_begin_1e4b83b48;
		}
		_iter_end_1e4b83b48:;
	};
	return false;
}



inline jule::Bool _1d42b78a8_IsLetter(jule::I32 _40717_r) {
	return _20a134930_IsLetter(_40717_r);
}



inline jule::Bool _1d42b7de7_IsDecimal(jule::U8 _42718_b) {
	return (('0' <= _42718_b) && (_42718_b <= '9'));
}



inline jule::Bool _1d42b818e_IsBinary(jule::U8 _43017_b) {
	return ((_43017_b == '0') || (_43017_b == '1'));
}



inline jule::Bool _1d42b8436_IsOctal(jule::U8 _43316_b) {
	return (('0' <= _43316_b) && (_43316_b <= '7'));
}



inline jule::Bool _1d42b86cd_IsHex(jule::U8 _43614_b) {
	{
		
		if ((('0' <= _43614_b) && (_43614_b <= '9'))) {
			_case_begin_1e4b889a5:;
			{
				return true;
			}
		}
		else if ((('a' <= _43614_b) && (_43614_b <= 'f'))) {
			_case_begin_1e4b8828a:;
			{
				return true;
			}
		}
		else if ((('A' <= _43614_b) && (_43614_b <= 'F'))) {
			_case_begin_1e4b88301:;
			{
				return true;
			}
		}
		else {
			_case_begin_1e4b88224:;
			{
				return false;
			}
		}
		_match_end_1e4b88169:;
	};
}



inline jule::Bool _1d42b8975_IsAssign(jule::U64 _45117_id) {
	return (((((((_45117_id == static_cast<jule::U64>(2LLU)) || (_45117_id == static_cast<jule::U64>(31LLU))) || (_45117_id == static_cast<jule::U64>(34LLU))) || (_45117_id == static_cast<jule::U64>(20LLU))) || (_45117_id == static_cast<jule::U64>(28LLU))) || (_45117_id == static_cast<jule::U64>(3LLU))) || (_45117_id == static_cast<jule::U64>(7LLU)));
}



inline jule::Bool _1d42b8c1c_IsPostfixOp(jule::Str _46220_kind) {
	{
		auto &expr = _1d42ad89e_PostfixOps;
		auto it = expr.begin();
		_iter_begin_1e4b8a402:;
		if (it != expr.end()) {
			jule::Str &_46312_op = *it;
			{
				if ((_46220_kind == _46312_op)) {
					return true;
				};
			}
			_iter_next_1e4b8a402:;
			++it;
			goto _iter_begin_1e4b8a402;
		}
		_iter_end_1e4b8a402:;
	};
	return false;
}



inline jule::Bool _1d42b8eb4_IsAssignOp(jule::Str _47219_kind) {
	if (_1d42b8c1c_IsPostfixOp(_47219_kind)) {
		return true;
	};
	{
		auto &expr = _1d42adbe0_AssignOps;
		auto it = expr.begin();
		_iter_begin_1e4b8ce0a:;
		if (it != expr.end()) {
			jule::Str &_47612_op = *it;
			{
				if ((_47219_kind == _47612_op)) {
					return true;
				};
			}
			_iter_next_1e4b8ce0a:;
			++it;
			goto _iter_begin_1e4b8ce0a;
		}
		_iter_end_1e4b8ce0a:;
	};
	return false;
}



inline jule::Ptr<_1d42b9767_File> _1d42bac96_NewFileSet(jule::Str _6319_path) {
	return jule::new_ptr<_1d42b9767_File>(_1d42b9767_File{._field_Path=_6319_path, });
}



inline _20a35491e_Log _1d42bc5c2_makeErr(jule::I64 _11112_row, jule::I64 _11122_col, jule::Ptr<_1d42b9767_File>& _11133_f, jule::Str _11143_fmt, jule::Slice<jule::Any> _11156_args) {
	return _20a35491e_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_11112_row, ._field_Column=_11122_col, ._field_Path=_11133_f.get()._field_Path, ._field_Text=_20a354d5e_Logf(_11143_fmt,jule::Any(_11156_args)), };
}



inline jule::Bool _1d42bc957_bytesHasPrefix(jule::Slice<jule::U8>& _12120_bytes, jule::Str _12135_prefix) {
	if ((_12120_bytes.len() < _12135_prefix.len())) {
		return false;
	};
	{
		auto &expr = _12135_prefix;
		auto it = expr.begin();
		_iter_begin_1e4b98520:;
		if (it != expr.end()) {
			jule::I64 _1259_i = it - expr.begin();
			{
				if ((_12120_bytes[_1259_i] != _12135_prefix[_1259_i])) {
					return false;
				};
			}
			_iter_next_1e4b98520:;
			++it;
			_1259_i++;
			goto _iter_begin_1e4b98520;
		}
		_iter_end_1e4b98520:;
	};
	return true;
}



inline jule::Str _1d42bcc98_floatFmtE(jule::Slice<jule::U8>& _13315_txt, jule::I64 _13332_i) {
	jule::Str _13342_lit = jule::Str();
	(_13332_i)++;
	if ((_13332_i >= _13315_txt.len())) {
		return _13342_lit;
	};
	jule::U8 _13913_b = _13315_txt[_13332_i];;
	if ((_13913_b == '_')) {
		return _13342_lit;
	};
	if (((_13913_b == '+') || (_13913_b == '-'))) {
		(_13332_i)++;
		if ((_13332_i >= _13315_txt.len())) {
			return _13342_lit;
		};
		if ((_13315_txt[_13332_i] == '_')) {
			return _13342_lit;
		};
	};
	jule::I64 _1539_first = _13332_i;;
	for (; (_13332_i < _13315_txt.len()); (_13332_i)++) {
		{
			_13913_b=_13315_txt[_13332_i];
			if (((_13913_b != '_') && (!(_1d42b7de7_IsDecimal(_13913_b))))) {
				goto _iter_end_1e4b9bc82;
			};
		}
	_iter_next_1e4b9bc82:;
	}
	_iter_end_1e4b9bc82:;;
	if ((_13332_i == _1539_first)) {
		_13342_lit = jule::Str();
		return _13342_lit;
	};
	_13342_lit = static_cast<jule::Str>(_13315_txt.slice(0LL,_13332_i));
	return _13342_lit;
}



inline jule::Str _1d42bd12d_floatFmtP(jule::Slice<jule::U8>& _16715_txt, jule::I64 _16728_i) {
	return _1d42bcc98_floatFmtE(_16715_txt,_16728_i);
}



inline jule::Str _1d42bd46e_floatFmtDotnp(jule::Slice<jule::U8>& _17119_txt, jule::I64 _17136_i) {
	if ((_17119_txt[_17136_i] != '.')) {
		return jule::Str();
	};
	(_17136_i)++;
	_julec_label_loop:;
	for (; (_17136_i < _17119_txt.len()); (_17136_i)++) {
		{
			jule::U8 _17913_b = _17119_txt[_17136_i];;
			{
				
				if ((_17913_b == '_') || _1d42b7de7_IsDecimal(_17913_b)) {
					_case_begin_1e4ba004e:;
					{
						goto _iter_next_1e4b9d767;
					}
				}
				else if (_1d42bec23_isFloatFmtP(_17913_b,_17136_i)) {
					_case_begin_1e4ba00b5:;
					{
						return _1d42bd12d_floatFmtP(_17119_txt,_17136_i);
					}
				}
				else {
					_case_begin_1e4b9eed8:;
					{
						goto _iter_end_1e4b9d767;
					}
				}
				_match_end_1e4b9ee72:;
			};
		}
	_iter_next_1e4b9d767:;
	}
	_iter_end_1e4b9d767:;;
	return jule::Str();
}



inline jule::Str _1d42bd7b0_floatFmtDotfp(jule::Slice<jule::U8>& _19219_txt, jule::I64 _19236_i) {
	_19236_i+=2LL;
	return _1d42bcc98_floatFmtE(_19219_txt,_19236_i);
}



inline jule::Str _1d42bdb01_floatFmtDotp(jule::Slice<jule::U8>& _19718_txt, jule::I64 _19735_i) {
	(_19735_i)++;
	return _1d42bcc98_floatFmtE(_19718_txt,_19735_i);
}



inline jule::Str _1d42be052_floatNum(jule::Slice<jule::U8>& _20214_txt, jule::I64 _20231_i) {
	jule::Str _20241_lit = jule::Str();
	(_20231_i)++;
	if ((_20231_i >= _20214_txt.len())) {
		_20241_lit = static_cast<jule::Str>(_20214_txt);
		return _20241_lit;
	};
	if ((_20214_txt[_20231_i] == '_')) {
		(_20231_i)--;
		_20241_lit = static_cast<jule::Str>(_20214_txt.slice(0LL,_20231_i));
		return _20241_lit;
	};
	for (; (_20231_i < _20214_txt.len()); (_20231_i)++) {
		{
			jule::U8 _21213_b = _20214_txt[_20231_i];;
			if (((_20231_i > 1LL) && ((_21213_b == 'e') || (_21213_b == 'E')))) {
				_20241_lit = _1d42bcc98_floatFmtE(_20214_txt,_20231_i);
				return _20241_lit;
			};
			if (((_21213_b != '_') && (!(_1d42b7de7_IsDecimal(_21213_b))))) {
				goto _iter_end_1e4ba286a;
			};
		}
	_iter_next_1e4ba286a:;
	}
	_iter_end_1e4ba286a:;;
	if ((_20231_i == 1LL)) {
		return _20241_lit;
	};
	_20241_lit = static_cast<jule::Str>(_20214_txt.slice(0LL,_20231_i));
	return _20241_lit;
}



inline jule::Str _1d42be2e9_commonNum(jule::Slice<jule::U8>& _22715_txt) {
	jule::Str _22730_lit = jule::Str();
	jule::I64 _22813_i = 0LL;;
	_julec_label_loop:;
	for (; (_22813_i < _22715_txt.len()); (_22813_i)++) {
		{
			jule::U8 _23113_b = _22715_txt[_22813_i];;
			{
				
				if ((_23113_b == '.')) {
					_case_begin_1e4ba70ab:;
					{
						_22730_lit = _1d42be052_floatNum(_22715_txt,_22813_i);
						return _22730_lit;
					}
				}
				else if ((_23113_b == '_')) {
					_case_begin_1e4ba7133:;
					{
						goto _iter_next_1e4ba6341;
					}
				}
				else if (_1d42be8d2_isFloatFmtE(_23113_b,_22813_i)) {
					_case_begin_1e4ba71aa:;
					{
						_22730_lit = _1d42bcc98_floatFmtE(_22715_txt,_22813_i);
						return _22730_lit;
					}
				}
				else if ((!(_1d42b7de7_IsDecimal(_23113_b)))) {
					_case_begin_1e4ba7232:;
					{
						goto _iter_end_1e4ba6341;
					}
				}
				_match_end_1e4ba6ece:;
			};
		}
	_iter_next_1e4ba6341:;
	}
	_iter_end_1e4ba6341:;;
	if ((_22813_i == 0LL)) {
		return _22730_lit;
	};
	_22730_lit = static_cast<jule::Str>(_22715_txt.slice(0LL,_22813_i));
	return _22730_lit;
}



inline jule::Str _1d42be591_binaryNum(jule::Slice<jule::U8>& _25015_txt) {
	jule::Str _25030_lit = jule::Str();
	if ((!(_1d42bc957_bytesHasPrefix(_25015_txt,jule::Str("0b", 2))))) {
		_25030_lit = jule::Str();
		return _25030_lit;
	};
	if ((_25015_txt.len() < 2LL)) {
		return _25030_lit;
	};
	;
	jule::I64 _25913_i = 2LL;;
	for (; (_25913_i < _25015_txt.len()); (_25913_i)++) {
		{
			if (((_25015_txt[_25913_i] != '_') && (!(_1d42b818e_IsBinary(_25015_txt[_25913_i]))))) {
				goto _iter_end_1e4baa851;
			};
		}
	_iter_next_1e4baa851:;
	}
	_iter_end_1e4baa851:;;
	if ((_25913_i == 2LL)) {
		return _25030_lit;
	};
	_25030_lit = static_cast<jule::Str>(_25015_txt.slice(0LL,_25913_i));
	return _25030_lit;
}



inline jule::Bool _1d42be8d2_isFloatFmtE(jule::U8 _27216_b, jule::I64 _27225_i) {
	return ((_27225_i > 0LL) && ((_27216_b == 'e') || (_27216_b == 'E')));
}



inline jule::Bool _1d42bec23_isFloatFmtP(jule::U8 _27616_b, jule::I64 _27625_i) {
	return ((_27625_i > 0LL) && ((_27616_b == 'p') || (_27616_b == 'P')));
}



inline jule::Bool _1d42c0064_isFloatFmtDotnp(jule::Slice<jule::U8>& _28021_txt, jule::I64 _28038_i) {
	if ((_28021_txt[_28038_i] != '.')) {
		return false;
	};
	(_28038_i)++;
	_julec_label_loop:;
	for (; (_28038_i < _28021_txt.len()); (_28038_i)++) {
		{
			jule::U8 _28713_b = _28021_txt[_28038_i];;
			{
				
				if ((_28713_b == '_') || _1d42b7de7_IsDecimal(_28713_b)) {
					_case_begin_1e4bb0218:;
					{
						goto _iter_next_1e4bad238;
					}
				}
				else if (_1d42bec23_isFloatFmtP(_28713_b,_28038_i)) {
					_case_begin_1e4bb027e:;
					{
						return true;
					}
				}
				else {
					_case_begin_1e4bb01a2:;
					{
						goto _iter_end_1e4bad238;
					}
				}
				_match_end_1e4bb013b:;
			};
		}
	_iter_next_1e4bad238:;
	}
	_iter_end_1e4bad238:;;
	return false;
}



inline jule::Bool _1d42c03a5_isFloatFmtDotp(jule::Slice<jule::U8>& _30120_txt, jule::I64 _30133_i) {
	{
		
		if ((_30120_txt.len() < 3LL)) {
			_case_begin_1e4bb201c:;
			{
				goto _case_begin_1e4bb17d0;
			}
		}
		else if ((_30120_txt[_30133_i] != '.')) {
			_case_begin_1e4bb17d0:;
			{
				goto _case_begin_1e4bb1846;
			}
		}
		else if (((_30120_txt[(_30133_i + 1LL)] != 'p') && (_30120_txt[(_30133_i + 1LL)] != 'P'))) {
			_case_begin_1e4bb1846:;
			{
				return false;
			}
		}
		else {
			_case_begin_1e4bb1769:;
			{
				return true;
			}
		}
		_match_end_1e4bb168c:;
	};
}



inline jule::Bool _1d42c06e6_isFloatFmtDotfp(jule::Slice<jule::U8>& _31421_txt, jule::I64 _31434_i) {
	{
		
		if ((_31421_txt.len() < 4LL)) {
			_case_begin_1e4bb432c:;
			{
				goto _case_begin_1e4bb3b67;
			}
		}
		else if ((_31421_txt[_31434_i] != '.')) {
			_case_begin_1e4bb3b67:;
			{
				goto _case_begin_1e4bb3bcd;
			}
		}
		else if (((_31421_txt[(_31434_i + 1LL)] != 'f') && (_31421_txt[(_31434_i + 1LL)] != 'F'))) {
			_case_begin_1e4bb3bcd:;
			{
				goto _case_begin_1e4bb3c44;
			}
		}
		else if (((_31421_txt[(_31434_i + 2LL)] != 'p') && (_31421_txt[(_31434_i + 1LL)] != 'P'))) {
			_case_begin_1e4bb3c44:;
			{
				return false;
			}
		}
		else {
			_case_begin_1e4bb3628:;
			{
				return true;
			}
		}
		_match_end_1e4bb354b:;
	};
}



inline jule::Str _1d42c0b47_octalNum(jule::Slice<jule::U8>& _32914_txt) {
	jule::Str _32929_lit = jule::Str();
	if ((_32914_txt[0LL] != '0')) {
		_32929_lit = jule::Str();
		return _32929_lit;
	};
	if ((_32914_txt.len() < 2LL)) {
		return _32929_lit;
	};
	jule::I64 _33713_octalStart = 1LL;;
	jule::Bool _33913_o = false;;
	if ((_32914_txt[1LL] == 'o')) {
		if ((_32914_txt.len() < 3LL)) {
			return _32929_lit;
		};
		(_33713_octalStart)++;
		_33913_o=true;
	};
	jule::I64 _34813_i = _33713_octalStart;;
	for (; (_34813_i < _32914_txt.len()); (_34813_i)++) {
		{
			jule::U8 _35013_b = _32914_txt[_34813_i];;
			if ((_35013_b == '.')) {
				if (_33913_o) {
					_32929_lit = jule::Str();
					return _32929_lit;
				};
				_32929_lit = _1d42be052_floatNum(_32914_txt,_34813_i);
				return _32929_lit;
			};
			if (_1d42be8d2_isFloatFmtE(_35013_b,_34813_i)) {
				_32929_lit = _1d42bcc98_floatFmtE(_32914_txt,_34813_i);
				return _32929_lit;
			};
			if (((_35013_b != '_') && (!(_1d42b8436_IsOctal(_35013_b))))) {
				goto _iter_end_1e4bb9156;
			};
		}
	_iter_next_1e4bb9156:;
	}
	_iter_end_1e4bb9156:;;
	if ((_34813_i == _33713_octalStart)) {
		return _32929_lit;
	};
	_32929_lit = static_cast<jule::Str>(_32914_txt.slice(0LL,_34813_i));
	return _32929_lit;
}



inline jule::Str _1d42c0dde_hexNum(jule::Slice<jule::U8>& _37112_txt) {
	jule::Str _37127_lit = jule::Str();
	if ((_37112_txt.len() < 3LL)) {
		return _37127_lit;
	};
	if (((_37112_txt[0LL] != '0') || ((_37112_txt[1LL] != 'x') && (_37112_txt[1LL] != 'X')))) {
		return _37127_lit;
	};
	;
	jule::I64 _38013_i = 2LL;;
	_julec_label_loop:;
	for (; (_38013_i < _37112_txt.len()); (_38013_i)++) {
		{
			jule::U8 _38313_b = _37112_txt[_38013_i];;
			{
				
				if (_1d42c03a5_isFloatFmtDotp(_37112_txt,_38013_i)) {
					_case_begin_1e4bbeca5:;
					{
						_37127_lit = _1d42bdb01_floatFmtDotp(_37112_txt,_38013_i);
						return _37127_lit;
					}
				}
				else if (_1d42c06e6_isFloatFmtDotfp(_37112_txt,_38013_i)) {
					_case_begin_1e4bbed2c:;
					{
						_37127_lit = _1d42bd7b0_floatFmtDotfp(_37112_txt,_38013_i);
						return _37127_lit;
					}
				}
				else if (_1d42bec23_isFloatFmtP(_38313_b,_38013_i)) {
					_case_begin_1e4bbeda4:;
					{
						_37127_lit = _1d42bd12d_floatFmtP(_37112_txt,_38013_i);
						return _37127_lit;
					}
				}
				else if (_1d42c0064_isFloatFmtDotnp(_37112_txt,_38013_i)) {
					_case_begin_1e4bbee2b:;
					{
						_37127_lit = _1d42bd46e_floatFmtDotnp(_37112_txt,_38013_i);
						return _37127_lit;
					}
				}
				else if (((_38313_b != '_') && (!(_1d42b86cd_IsHex(_38313_b))))) {
					_case_begin_1e4bbeea3:;
					{
						goto _iter_end_1e4bbe14a;
					}
				}
				_match_end_1e4bbebb7:;
			};
		}
	_iter_next_1e4bbe14a:;
	}
	_iter_end_1e4bbe14a:;;
	if ((_38013_i == 2LL)) {
		return _37127_lit;
	};
	_37127_lit = static_cast<jule::Str>(_37112_txt.slice(0LL,_38013_i));
	return _37127_lit;
}



inline jule::Str _1d42c1230_hexEscape(jule::Slice<jule::U8>& _40415_txt, jule::I64 _40428_n) {
	jule::Str _40438_seq = jule::Str();
	if ((_40415_txt.len() < _40428_n)) {
		return _40438_seq;
	};
	;
	jule::I64 _41013_i = 2LL;;
	for (; (_41013_i < _40428_n); (_41013_i)++) {
		{
			if ((!(_1d42b86cd_IsHex(_40415_txt[_41013_i])))) {
				return _40438_seq;
			};
		}
	_iter_next_1e4bc2abb:;
	}
	_iter_end_1e4bc2abb:;;
	_40438_seq=static_cast<jule::Str>(_40415_txt.slice(0LL,_40428_n));
	return _40438_seq;
}



inline jule::Str _1d42c14c7_bigUnicodePointEscape(jule::Slice<jule::U8>& _42227_txt) {
	return _1d42c1230_hexEscape(_42227_txt,10LL);
}



inline jule::Str _1d42c1791_littleUnicodePointEscape(jule::Slice<jule::U8>& _42730_txt) {
	return _1d42c1230_hexEscape(_42730_txt,6LL);
}



inline jule::Str _1d42c194a_hexByteEscape(jule::Slice<jule::U8>& _43219_txt) {
	return _1d42c1230_hexEscape(_43219_txt,4LL);
}



inline jule::Str _1d42c1bd1_byteEscape(jule::Slice<jule::U8>& _43716_txt) {
	jule::Str _43731_seq = jule::Str();
	if ((_43716_txt.len() < 4LL)) {
		return _43731_seq;
	};
	if ((((!(_1d42b8436_IsOctal(_43716_txt[1LL]))) || (!(_1d42b8436_IsOctal(_43716_txt[2LL])))) || (!(_1d42b8436_IsOctal(_43716_txt[3LL]))))) {
		return _43731_seq;
	};
	_43731_seq = static_cast<jule::Str>(_43716_txt.slice(0LL,4LL));
	return _43731_seq;
}



inline jule::Slice<_20a35491e_Log> _1d42c66ca_Lex(jule::Ptr<_1d42b9767_File> _82616_f, jule::I64 _82626_mode) {
	if ((_82616_f == nullptr)) {
		return nullptr;
	};
	_1d42c23b8_lex _83113_lex = _1d42c23b8_lex{._field_mode=_82626_mode, ._field_file=_82616_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_1d42c4e59_newLine(&_83113_lex);
	_1d42c2e57_lex(&_83113_lex);
	if ((_83113_lex._field_errors.len() > 0LL)) {
		return _83113_lex._field_errors;
	};
	_82616_f.get()._field_Tokens=_83113_lex._field_tokens;
	return nullptr;
}



inline void _1e2583825_lshiftUnsig(_1e23b4a96_Const& _58721_c, _1e23b4a96_Const& _58732_x) {
	jule::U64 _5889_l = _1e257c874_AsU64(&_58721_c);;
	jule::U64 _5899_r = _1e257c874_AsU64(&_58732_x);;
	_1e257d0d3_SetU64(&_58721_c, static_cast<jule::U64>((_5889_l << _5899_r)));
}



inline void _1e2583b22_rshiftUnsig(_1e23b4a96_Const& _59321_c, _1e23b4a96_Const& _59332_x) {
	jule::U64 _5949_l = _1e257c874_AsU64(&_59321_c);;
	jule::U64 _5959_r = _1e257c874_AsU64(&_59332_x);;
	_1e257d0d3_SetU64(&_59321_c, static_cast<jule::U64>((_5949_l >> _5959_r)));
}



inline jule::I64 _1e31804a9_LeadingZeros64(jule::U64 _6123_x) {
	return static_cast<jule::I64>((64LL - _1e3187bba_Len64(_6123_x)));
}



inline jule::I64 _1e3181510_TrailingZeros(jule::U64 _8322_x) {
	;
	return static_cast<jule::I64>(_1e318219d_TrailingZeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8322_x))));
}



inline jule::I64 _1e3181e06_TrailingZeros32(jule::U32 _10524_x) {
	if ((_10524_x == 0LLU)) {
		return 32LL;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1e3180b5d__DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10524_x & (-(_10524_x))) * 125613361LLU) >> 27LLU))]));
}



inline jule::I64 _1e318219d_TrailingZeros64(jule::U64 _11424_x) {
	if ((_11424_x == 0LLU)) {
		return 64LL;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1e31812ac__DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11424_x & (-(_11424_x))) * 285870213051353865LLU) >> 58LLU))]));
}



inline jule::I64 _1e3187923_Len32(jule::U32 _35218_x) {
	jule::I64 _35228_n = jule::I64();
	if ((_35218_x >= 65536LLU)) {
		_35218_x>>=16LLU;
		_35228_n=16LL;
	};
	if ((_35218_x >= 256LLU)) {
		_35218_x>>=8LLU;
		_35228_n+=8LL;
	};
	_35228_n = static_cast<jule::I64>((_35228_n + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35218_x)])));
	return _35228_n;
}



inline jule::I64 _1e3187bba_Len64(jule::U64 _36618_x) {
	jule::I64 _36628_n = jule::I64();
	if ((_36618_x >= 4294967296LLU)) {
		_36618_x>>=32LLU;
		_36628_n=32LL;
	};
	if ((_36618_x >= 65536LLU)) {
		_36618_x>>=16LLU;
		_36628_n+=16LL;
	};
	if ((_36618_x >= 256LLU)) {
		_36618_x>>=8LLU;
		_36628_n+=8LL;
	};
	_36628_n = static_cast<jule::I64>((_36628_n + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36618_x)])));
	return _36628_n;
}



inline std::tuple<jule::U64,jule::U64> _1e318887a_Add64(jule::U64 _41514_x, jule::U64 _41522_y, jule::U64 _41530_carry) {
	jule::U64 _41544_sum = jule::U64();
	jule::U64 _41554_carryout = jule::U64();
	_41544_sum=static_cast<jule::U64>(((_41514_x + _41522_y) + _41530_carry));
	_41554_carryout=static_cast<jule::U64>((((_41514_x & _41522_y) | ((_41514_x | _41522_y) & (~(_41544_sum)))) >> 63LLU));
	return std::make_tuple(_41544_sum,_41554_carryout);
}



inline std::tuple<jule::U64,jule::U64> _1e318a00d_Mul64(jule::U64 _49914_x, jule::U64 _49922_y) {
	jule::U64 _49932_hi = jule::U64();
	jule::U64 _49941_lo = jule::U64();
	;
	jule::U64 _5019_x0 = (_49914_x & 4294967295LLU);;
	jule::U64 _5029_x1 = (_49914_x >> 32LLU);;
	jule::U64 _5039_y0 = (_49922_y & 4294967295LLU);;
	jule::U64 _5049_y1 = (_49922_y >> 32LLU);;
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);;
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LLU));;
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);;
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);;
	_50713_w1+=(_5019_x0 * _5049_y1);
	_49932_hi=static_cast<jule::U64>((((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LLU)));
	_49941_lo=static_cast<jule::U64>((_49914_x * _49922_y));
	return std::make_tuple(_49932_hi,_49941_lo);
}



inline jule::U32 _1e2e4a53d_F32Bits(jule::F32 _4116_f) {
	return (*(((jule::U32*)((&(_4116_f))))));
}



inline jule::F32 _1e2e4a829_F32FromBits(jule::U32 _4720_b) {
	return (*(((jule::F32*)((&(_4720_b))))));
}



inline jule::U64 _1e2e4aac1_F64Bits(jule::F64 _5216_f) {
	return (*(((jule::U64*)((&(_5216_f))))));
}



inline jule::F64 _1e2e4ade0_F64FromBits(jule::U64 _5820_b) {
	return (*(((jule::F64*)((&(_5820_b))))));
}



inline std::tuple<jule::F64,jule::I64> _1e2e4d4ec_Frexp(jule::F64 _4718_f) {
	jule::F64 _4728_frac = jule::F64();
	jule::I64 _4739_exp = jule::I64();
	{
		
		if ((_4718_f == 0LL)) {
			_case_begin_1e4db7e6a:;
			{
				_4728_frac = _4718_f;
				_4739_exp = 0LL;
				return std::make_tuple(_4728_frac,_4739_exp);
			}
		}
		else if (_1e2eb5333_IsInf(_4718_f,0LL) || _1e2ead02e_IsNaN(_4718_f)) {
			_case_begin_1e4db7ee2:;
			{
				_4728_frac = _4718_f;
				_4739_exp = 0LL;
				return std::make_tuple(_4728_frac,_4739_exp);
			}
		}
		_match_end_1e4db7d7c:;
	};
	std::tie(_4718_f,_4739_exp) = _1e2eb693e_normalize(_4718_f);
	jule::U64 _5613_x = _1e2e4aac1_F64Bits(_4718_f);;
	_4739_exp+=((static_cast<jule::I64>(((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	_4728_frac=static_cast<jule::F64>(_1e2e4ade0_F64FromBits(_5613_x));
	return std::make_tuple(_4728_frac,_4739_exp);
}



inline jule::F64 _1e2eac0e9_NaN(void) {
	return static_cast<jule::F64>(_1e2e4ade0_F64FromBits(9221120237041090561LLU));
}



inline jule::Bool _1e2ead02e_IsNaN(jule::F64 _5214_f) {
	return (_5214_f != _5214_f);
}



inline jule::F64 _1e2eae9c0_Inf(jule::I64 _6112_sign) {
	if ((_6112_sign >= 0LL)) {
		return static_cast<jule::F64>(_1e2e4ade0_F64FromBits(9218868437227405312LLU));
	};
	return static_cast<jule::F64>(_1e2e4ade0_F64FromBits(18442240474082181120LLU));
}



inline jule::Bool _1e2eb5333_IsInf(jule::F64 _7214_f, jule::I64 _7222_sign) {
	return (((_7222_sign >= 0LL) && (_7214_f > jule::MAX_F64)) || ((_7222_sign <= 0LL) && (_7214_f < jule::MIN_F64)));
}



inline std::tuple<jule::F64,jule::I64> _1e2eb693e_normalize(jule::F64 _8214_x) {
	jule::F64 _8224_y = jule::F64();
	jule::I64 _8232_exp = jule::I64();
	;
	if ((_1e2ecd57c_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		_8224_y = static_cast<jule::F64>((_8214_x * 4503599627370496LL));
		_8232_exp = -52LL;
		return std::make_tuple(_8224_y,_8232_exp);
	};
	_8224_y = _8214_x;
	_8232_exp = 0LL;
	return std::make_tuple(_8224_y,_8232_exp);
}



inline jule::F64 _1e2ec6b08_Log(jule::F64 _11112_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1e2ead02e_IsNaN(_11112_x) || _1e2eb5333_IsInf(_11112_x,1LL)) {
			_case_begin_1e4e11029:;
			{
				return _11112_x;
			}
		}
		else if ((_11112_x < 0LL)) {
			_case_begin_1e4e110a1:;
			{
				return static_cast<jule::F64>(_1e2eac0e9_NaN());
			}
		}
		else if ((_11112_x == 0LL)) {
			_case_begin_1e4e11128:;
			{
				return static_cast<jule::F64>(_1e2eae9c0_Inf(-1LL));
			}
		}
		_match_end_1e4e10e5d:;
	};
	jule::F64 _13314_f1;;
	jule::I64 _13322_ki;;
	std::tie(_13314_f1,_13322_ki) = _1e2e4d4ec_Frexp(_11112_x);
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	};
	jule::F64 _1389_f = (_13314_f1 - 1LL);;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);;
	jule::F64 _1429_s = jule::div(_1389_f,(2LL + _1389_f));;
	jule::F64 _1439_s2 = (_1429_s * _1429_s);;
	jule::F64 _1449_s4 = (_1439_s2 * _1439_s2);;
	jule::F64 _1459_t1 = (_1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586)))))));;
	jule::F64 _1469_t2 = (_1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373)))));;
	jule::F64 _1479_R = (_1459_t1 + _1469_t2);;
	jule::F64 _1489_hfsq = ((0.5 * _1389_f) * _1389_f);;
	return static_cast<jule::F64>(((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f)));
}



inline jule::F64 _1e2ecd57c_Abs(jule::F64 _4312_x) {
	return static_cast<jule::F64>(_1e2e4ade0_F64FromBits(static_cast<jule::U64>((_1e2e4aac1_F64Bits(_4312_x) & 9223372036854775807LLU))));
}



inline std::tuple<jule::F64,jule::F64> _1e3193b60_Modf(jule::F64 _4413_f) {
	jule::F64 _4423_integer = jule::F64();
	jule::F64 _4437_frac = jule::F64();
	;
	jule::F64 _469_absF = _1e2ecd57c_Abs(_4413_f);;
	jule::F64 _4713_i = 0LL;;
	if ((_469_absF > 4503599627370496LL)) {
		_4713_i=_4413_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_absF + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while ((_4713_i > _469_absF)) {
			{
				(_4713_i)--;
			}
		_iter_next_1e4e7d3e8:;
		}
		_iter_end_1e4e7d3e8:;;
		if ((_4413_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		};
	};
	_4423_integer = _4713_i;
	_4437_frac = static_cast<jule::F64>((_4413_f - _4713_i));
	return std::make_tuple(_4423_integer,_4437_frac);
}



inline jule::F64 _1e3194424_Log2(jule::F64 _4413_x) {
	jule::F64 _4510_frac;;
	jule::I64 _4516_exp;;
	std::tie(_4510_frac,_4516_exp) = _1e2e4d4ec_Frexp(_4413_x);
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));
	};
	return static_cast<jule::F64>(((_1e2ec6b08_Log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp)));
}



inline jule::Str _1e2aeb233_FmtFloat(jule::F64 _7817_f, jule::U8 _7825_fmt, jule::I64 _7836_prec, jule::I64 _7847_bit_size) {
	return static_cast<jule::Str>(_1e2b10995_genericFtoa(jule::Slice<jule::U8>::alloc(0LL,_1e2cc9bd6_max(static_cast<jule::I64>((_7836_prec + 4LL)),24LL)),_7817_f,_7825_fmt,_7836_prec,_7847_bit_size));
}



inline jule::Slice<jule::U8> _1e2b10995_genericFtoa(jule::Slice<jule::U8> _8220_dst, jule::F64 _8233_val, jule::U8 _8243_fmt, jule::I64 _8258_prec, jule::I64 _8269_bit_size) {
	jule::U64 _8313_bits = 0LLU;;
	jule::Ptr<_1e2b90cab_floatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8269_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1e5191919:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_1e2e4a53d_F32Bits(static_cast<jule::F32>(static_cast<jule::F32>(_8233_val)))));
				_8413_flt=((jule::Ptr<_1e2b90cab_floatInfo>)((&(_1e281ea8e_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1e5191b06:;
			{
				_8313_bits=static_cast<jule::U64>(_1e2e4aac1_F64Bits(_8233_val));
				_8413_flt=((jule::Ptr<_1e2b90cab_floatInfo>)((&(_1e2ae14d1_f64info))));
			}
		}
		else {
			_case_begin_1e51912dc:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_1e518ee9a:;
	};
	jule::Bool _969_neg = ((_8313_bits >> (_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)) != 0LLU);;
	jule::I64 _9713_exp = (static_cast<jule::I64>((_8313_bits >> _8413_flt.get()._field_mantbits)) & static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)));;
	jule::U64 _9813_mant = (_8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)))) {
			_case_begin_1e519529c:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_1e5197788:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'n','a','n'}));
						}
					}
					else if (_969_neg) {
						_case_begin_1e5197920:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));
						}
					}
					else {
						_case_begin_1e5196787:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));
						}
					}
					_match_end_1e51966aa:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1e5195ce7:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_1e51916e9:;
			{
				_9813_mant|=(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_1e5195247:;
	};
	_9713_exp+=_8413_flt.get()._field_bias;
	if ((_8243_fmt == 'b')) {
		return _1e2ba2ecc_fmtB(_8220_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	if (((_8243_fmt == 'x') || (_8243_fmt == 'X'))) {
		return _1e2c6a02d_fmtX(_8220_dst,_8258_prec,_8243_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	;
	_1e2ba0628_decimalSlice _13213_digs = _1e2ba0628_decimalSlice{};;
	jule::Bool _13313_ok = false;;
	jule::Bool _1359_shortest = (_8258_prec < 0LL);;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL);
		_1e31c0e56_ryuFtoaShortest(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),(*(_8413_flt)));
		_13313_ok=true;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1e519b946:;
				{
					_8258_prec=static_cast<jule::I64>(_1e2cc9bd6_max(static_cast<jule::I64>((_13213_digs._field_nd - 1LL)),0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1e519b9ac:;
				{
					_8258_prec=static_cast<jule::I64>(_1e2cc9bd6_max(static_cast<jule::I64>((_13213_digs._field_nd - _13213_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1e519ba67:;
				{
					_8258_prec=_13213_digs._field_nd;
				}
			}
			_match_end_1e519ac31:;
		};
	} else if ((_8243_fmt != 'f')) {
		jule::I64 _15217_digits = _8258_prec;;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1e519e0b9:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1e519d926:;
				{
					if ((_8258_prec == 0LL)) {
						_8258_prec=1LL;
					};
					_15217_digits=_8258_prec;
				}
			}
			else {
				_case_begin_1e519db02:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_1e519d9ae:;
		};
		if (((_8269_bit_size == 32LL) && (_15217_digits <= 9LL))) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_1e31c0939_ryuFtoaFixed32(_13213_digs,static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)),static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_1e31c0a6b_ryuFtoaFixed64(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		};
	};
	if ((!(_13313_ok))) {
		return _1e2b68844_bigFtoa(_8220_dst,_8258_prec,_8243_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	return _1e2b9045e_fmtDigits(_8220_dst,_1359_shortest,_969_neg,_13213_digs,_8258_prec,_8243_fmt);
}



inline jule::Slice<jule::U8> _1e2b68844_bigFtoa(jule::Slice<jule::U8> _18216_dst, jule::I64 _18233_prec, jule::U8 _18244_fmt, jule::Bool _18255_neg, jule::U64 _1835_mant, jule::I64 _18316_exp, _1e2b90cab_floatInfo& _18327_flt) {
	_1e31c24a7_decimal _18413_d = _1e31c24a7_decimal{};;
	_1e31c2694_assign(&_18413_d, _1835_mant);
	_1e31c27c6_shift(&_18413_d, static_cast<jule::I64>((_18316_exp - static_cast<jule::I64>(_18327_flt._field_mantbits))));
	_1e2ba0628_decimalSlice _18713_digs = _1e2ba0628_decimalSlice{};;
	jule::Bool _1889_shortest = (_18233_prec < 0LL);;
	if (_1889_shortest) {
		_1e2b9262b_roundShortest(_18413_d,_1835_mant,_18316_exp,_18327_flt);
		_18713_digs=_1e2ba0628_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1e51a3d38:;
				{
					_18233_prec=static_cast<jule::I64>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1e51a6687:;
				{
					_18233_prec=static_cast<jule::I64>(_1e2cc9bd6_max(static_cast<jule::I64>((_18713_digs._field_nd - _18713_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1e51a66ed:;
				{
					_18233_prec=_18713_digs._field_nd;
				}
			}
			_match_end_1e51a5d07:;
		};
	} else {
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1e51a571e:;
				{
					_1e31c2b6c_round(&_18413_d, static_cast<jule::I64>((_18233_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1e51a5785:;
				{
					_1e31c2b6c_round(&_18413_d, static_cast<jule::I64>((_18413_d._field_dp + _18233_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1e51a580c:;
				{
					if ((_18233_prec == 0LL)) {
						_18233_prec=1LL;
					};
					_1e31c2b6c_round(&_18413_d, _18233_prec);
				}
			}
			_match_end_1e51a5664:;
		};
		_18713_digs=_1e2ba0628_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
	};
	return _1e2b9045e_fmtDigits(_18216_dst,_1889_shortest,_18255_neg,_18713_digs,_18233_prec,_18244_fmt);
}



inline jule::Slice<jule::U8> _1e2b9045e_fmtDigits(jule::Slice<jule::U8> _21918_dst, jule::Bool _21931_shortest, jule::Bool _21947_neg, _1e2ba0628_decimalSlice _2205_digs, jule::I64 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1e51ab714:;
			{
				return _1e2ba188d_fmtE(_21918_dst,_21947_neg,_2205_digs,_22029_prec,_22040_fmt);
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1e51ab77a:;
			{
				return _1e2ba2042_fmtF(_21918_dst,_21947_neg,_2205_digs,_22029_prec);
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1e51ab7e1:;
			{
				jule::I64 _22817_eprec = _22029_prec;;
				if (((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22817_eprec=_2205_digs._field_nd;
				};
				if (_21931_shortest) {
					_22817_eprec=6LL;
				};
				jule::I64 _23813_exp = (_2205_digs._field_dp - 1LL);;
				if (((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _1e2ba188d_fmtE(_21918_dst,_21947_neg,_2205_digs,static_cast<jule::I64>((_22029_prec - 1LL)),static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _1e2ba2042_fmtF(_21918_dst,_21947_neg,_2205_digs,static_cast<jule::I64>(_1e2cc9bd6_max(static_cast<jule::I64>((_22029_prec - _2205_digs._field_dp)),0LL)));
			}
		}
		_match_end_1e51ab5c1:;
	};
	return jule::append(_21918_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));
}



inline void _1e2b9262b_roundShortest(_1e31c24a7_decimal& _25723_d, jule::U64 _25735_mant, jule::I64 _25746_exp, _1e2b90cab_floatInfo& _25757_flt) {
	if ((_25735_mant == 0LLU)) {
		_25723_d._field_nd=0LL;
		return;;
	};
	jule::I64 _2789_minexp = (_25757_flt._field_bias + 1LL);;
	if (((_25746_exp > _2789_minexp) && ((332LL * (_25723_d._field_dp - _25723_d._field_nd)) >= (100LL * (_25746_exp - static_cast<jule::I64>(_25757_flt._field_mantbits)))))) {
		return;;
	};
	_1e31c24a7_decimal _28713_upper = _1e31c24a7_decimal{};;
	_1e31c2694_assign(&_28713_upper, static_cast<jule::U64>(((_25735_mant << 1LLU) + 1LLU)));
	_1e31c27c6_shift(&_28713_upper, static_cast<jule::I64>(((_25746_exp - static_cast<jule::I64>(_25757_flt._field_mantbits)) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;;
	jule::I64 _29813_explo = 0LL;;
	if (((_25735_mant > (1LLU << _25757_flt._field_mantbits)) || (_25746_exp == _2789_minexp))) {
		_29713_mantlo=static_cast<jule::U64>((_25735_mant - 1LLU));
		_29813_explo=_25746_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(((_25735_mant << 1LLU) - 1LLU));
		_29813_explo=static_cast<jule::I64>((_25746_exp - 1LL));
	};
	_1e31c24a7_decimal _30613_lower = _1e31c24a7_decimal{};;
	_1e31c2694_assign(&_30613_lower, static_cast<jule::U64>(((_29713_mantlo << 1LLU) + 1LLU)));
	_1e31c27c6_shift(&_30613_lower, static_cast<jule::I64>(((_29813_explo - static_cast<jule::I64>(_25757_flt._field_mantbits)) - 1LL)));
	jule::Bool _3139_inclusive = ((_25735_mant & 1LL) == 0LLU);;
	jule::U8 _32613_upperdelta = 0LLU;;
	jule::I64 _33013_ui = 0LL;;
	for (; ; (_33013_ui)++) {
		{
			jule::I64 _33513_mi = ((_33013_ui - _28713_upper._field_dp) + _25723_d._field_dp);;
			if ((_33513_mi >= _25723_d._field_nd)) {
				goto _iter_end_1e51b97dd;
			};
			jule::I64 _33913_li = ((_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp);;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);;
			if (((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd))) {
				_34017_l=_30613_lower._field_d[_33913_li];
			};
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);;
			if ((_33513_mi >= 0LL)) {
				_34417_m=_25723_d._field_d[_33513_mi];
			};
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);;
			if ((_33013_ui < _28713_upper._field_nd)) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			};
			jule::Bool _35613_okdown = ((_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd)));;
			{
				
				if (((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u))) {
					_case_begin_1e51beb34:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if (((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u))) {
					_case_begin_1e51bebab:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if (((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0')))) {
					_case_begin_1e51bec33:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_1e51bea68:;
			};
			jule::Bool _37713_okup = ((_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd)));;
			{
				
				if ((_35613_okdown && _37713_okup)) {
					_case_begin_1e51c7c3b:;
					{
						_1e31c2b6c_round(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_35613_okdown) {
					_case_begin_1e51c7ca2:;
					{
						_1e31c2908_roundDown(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_37713_okup) {
					_case_begin_1e51c7d29:;
					{
						_1e31c2a3a_roundUp(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				_match_end_1e51c7b92:;
			};
		}
	_iter_next_1e51b97dd:;
	}
	_iter_end_1e51b97dd:;;
}



inline jule::Slice<jule::U8> _1e2ba188d_fmtE(jule::Slice<jule::U8> _39613_dst, jule::Bool _39626_neg, _1e2ba0628_decimalSlice _39637_d, jule::I64 _39654_prec, jule::U8 _39665_fmt) {
	if (_39626_neg) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('-');;
	};
	jule::U8 _40313_ch = '0';;
	if ((_39637_d._field_nd != 0LL)) {
		_40313_ch=_39637_d._field_d[0LL];
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	if ((_39654_prec > 0LL)) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('.');;
		jule::I64 _41217_i = 1LL;;
		jule::I64 _41313_m = _1e2ca9c93_min(_39637_d._field_nd,static_cast<jule::I64>((_39654_prec + 1LL)));;
		if ((_41217_i < _41313_m)) {
			_39613_dst=jule::append(_39613_dst,_39637_d._field_d.slice(_41217_i,_41313_m));
			_41217_i=_41313_m;
		};
		for (; (_41217_i <= _39654_prec); (_41217_i)++) {
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('0');;
			}
		_iter_next_1e51ccb31:;
		}
		_iter_end_1e51ccb31:;;
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_39665_fmt);;
	jule::I64 _42513_exp = (_39637_d._field_dp - 1LL);;
	if ((_39637_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	};
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I64>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_1e51d0705:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push('0');_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(_42513_exp) + '0')));;
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_1e51d19c0:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 10LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1e51ced42:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,3);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 100LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_42513_exp / 10LL)) % 10LL) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1e51cd2a2:;
	};
	return _39613_dst;
}



inline jule::Slice<jule::U8> _1e2ba2042_fmtF(jule::Slice<jule::U8> _45113_dst, jule::Bool _45126_neg, _1e2ba0628_decimalSlice _45137_d, jule::I64 _45154_prec) {
	if (_45126_neg) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('-');;
	};
	if ((_45137_d._field_dp > 0LL)) {
		jule::I64 _45917_m = _1e2ca9c93_min(_45137_d._field_nd,_45137_d._field_dp);;
		_45113_dst=jule::append(_45113_dst,_45137_d._field_d.slice(0LL,_45917_m));
		for (; (_45917_m < _45137_d._field_dp); (_45917_m)++) {
			{
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
			}
		_iter_next_1e51d461b:;
		}
		_iter_end_1e51d461b:;;
	} else {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
	};
	if ((_45154_prec > 0LL)) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('.');;
		jule::I64 _47017_i = 0LL;;
		for (; (_47017_i < _45154_prec); (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47317_j = (_45137_d._field_dp + _47017_i);;
				if (((0LL <= _47317_j) && (_47317_j < _45137_d._field_nd))) {
					_47221_ch=_45137_d._field_d[_47317_j];
				};
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push(_47221_ch);;
			}
		_iter_next_1e51d5d7b:;
		}
		_iter_end_1e51d5d7b:;;
	};
	return _45113_dst;
}



inline jule::Slice<jule::U8> _1e2ba2ecc_fmtB(jule::Slice<jule::U8> _48413_dst, jule::Bool _48426_neg, jule::U64 _48437_mant, jule::I64 _48452_exp, _1e2b90cab_floatInfo& _48463_flt) {
	if (_48426_neg) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('-');;
	};
	std::tie(_48413_dst,std::ignore) = _1e31c60e3_fmtBits(_48413_dst,_48437_mant,10LL,false,true);
	_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('p');;
	_48452_exp-=static_cast<jule::I64>(_48463_flt._field_mantbits);
	if ((_48452_exp >= 0LL)) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('+');;
	};
	std::tie(_48413_dst,std::ignore) = _1e31c60e3_fmtBits(_48413_dst,static_cast<jule::U64>(static_cast<jule::U64>(_48452_exp)),10LL,(_48452_exp < 0LL),true);
	return _48413_dst;
}



inline jule::Slice<jule::U8> _1e2c6a02d_fmtX(jule::Slice<jule::U8> _50613_dst, jule::I64 _50626_prec, jule::U8 _50637_fmt, jule::Bool _50648_neg, jule::U64 _5079_mant, jule::I64 _50724_exp, _1e2b90cab_floatInfo& _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - _50735_flt._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_1e51db128:;
	}
	_iter_end_1e51db128:;;
	if (((_50626_prec >= 0LL) && (_50626_prec < 15LL))) {
		jule::U64 _52113_shift = static_cast<jule::U64>((_50626_prec << 2LLU));;
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _52113_shift);
		if (((_52213_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _53513_hex = jule::Str();;
	if ((_50637_fmt == 'X')) {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	};
	if (_50648_neg) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('-');;
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push('0');_50613_dst.__push(_50637_fmt);_50613_dst.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU)))));;
	_5079_mant<<=4LLU;
	if (((_50626_prec < 0LL) && (_5079_mant != 0LLU))) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		while ((_5079_mant != 0LLU)) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1e51e100c:;
		}
		_iter_end_1e51e100c:;;
	} else if ((_50626_prec > 0LL)) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		jule::I64 _55817_i = 0LL;;
		for (; (_55817_i < _50626_prec); (_55817_i)++) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1e51e3828:;
		}
		_iter_end_1e51e3828:;;
	};
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);;
	if ((_50637_fmt == _1e2d2de49_lower(_50637_fmt))) {
		_56613_ch='p';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I64>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_1e51e5c6a:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,2);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_1e51e8432:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1e51e5ece:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,4);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1e51e3e55:;
	};
	return _50613_dst;
}



inline jule::I64 _1e2ca9c93_min(jule::I64 _5918_a, jule::I64 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;
	};
	return _59116_b;
}



inline jule::I64 _1e2cc9bd6_max(jule::I64 _5988_a, jule::I64 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;
	};
	return _59816_b;
}



inline jule::U8 _1e2d2de49_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | ('x' - 'X')));
}



inline std::tuple<jule::U64,jule::I64> _1e2d6d8d4_parseUint(jule::Str _5118_s, jule::I64 _5130_base, jule::I64 _5145_bitSize) {
	if (_5118_s.empty()) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
	};
	{
		
		if (((2LL <= _5130_base) && (_5130_base <= 36LL))) {
			_case_begin_1e51ed217:;
		}
		else if ((_5130_base == 0LL)) {
			_case_begin_1e51ed0b3:;
			{
				_5130_base=10LL;
				if ((_5118_s[0LL] == '0')) {
					{
						
						if (((_5118_s.len() >= 3LL) && (_1e2d2de49_lower(_5118_s[1LL]) == 'b'))) {
							_case_begin_1e51eee83:;
							{
								_5130_base=2LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_1e2d2de49_lower(_5118_s[1LL]) == 'o'))) {
							_case_begin_1e51eec96:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_1e2d2de49_lower(_5118_s[1LL]) == 'x'))) {
							_case_begin_1e51eed1d:;
							{
								_5130_base=16LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1e51ee900:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(1LL);;
							}
						}
						_match_end_1e51ee823:;
					};
				};
			}
		}
		else {
			_case_begin_1e51ec315:;
			{
				return std::make_tuple(0LLU,static_cast<jule::I64>(3LL));
			}
		}
		_match_end_1e51ec2b0:;
	};
	if ((_5145_bitSize == 0LL)) {
		_5145_bitSize=64LL;
	} else if (((_5145_bitSize < 0LL) || (_5145_bitSize > 64LL))) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(4LL));
	};
	jule::U64 _9013_cutoff = 0LLU;;
	{
		auto &_match_expr{ _5130_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1e5204b58:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1e5204295:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1e520455e:;
			{
				_9013_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5130_base)) + 1LLU));
			}
		}
		_match_end_1e52043d8:;
	};
	jule::U64 _10013_maxVal = 0LLU;;
	{
		auto &_match_expr{ _5145_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1e520464c:;
			{
				_10013_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1e5205d02:;
			{
				_10013_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1e5205c9c:;
	};
	jule::U64 _10813_n = 0LLU;;
	{
		auto &expr = _5118_s;
		auto it = expr.begin();
		_iter_begin_1e5206d14:;
		if (it != expr.end()) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11017_d = 0LLU;;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1e5208464:;
						{
							_11017_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _1e2d2de49_lower(_10912_c)) && (_1e2d2de49_lower(_10912_c) <= 'z'))) {
						_case_begin_1e5208332:;
						{
							_11017_d=static_cast<jule::U8>(((_1e2d2de49_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1e5208398:;
						{
							goto _iter_next_1e5206d14;
						}
					}
					else {
						_case_begin_1e5207d9d:;
						{
							return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
						}
					}
					_match_end_1e5207d37:;
				};
				if ((_11017_d >= static_cast<jule::U8>(_5130_base))) {
					return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
				};
				if ((_10813_n >= _9013_cutoff)) {
					return std::make_tuple(_10013_maxVal,static_cast<jule::I64>(1LL));
				};
				_10813_n*=static_cast<jule::U64>(_5130_base);
				jule::U64 _13213_n1 = (_10813_n + static_cast<jule::U64>(_11017_d));;
				if (((_13213_n1 < _10813_n) || (_13213_n1 > _10013_maxVal))) {
					return std::make_tuple(_10013_maxVal,static_cast<jule::I64>(1LL));
				};
				_10813_n=_13213_n1;
			}
			_iter_next_1e5206d14:;
			++it;
			goto _iter_begin_1e5206d14;
		}
		_iter_end_1e5206d14:;
	};
	return std::make_tuple(_10813_n,static_cast<jule::I64>(0LL));
}



inline jule::Exceptional<jule::U64> _1e2dd78c6_ParseUint(jule::Str _14622_s, jule::I64 _14634_base, jule::I64 _14649_bit_size) {
	jule::U64 _14710_un;;
	jule::I64 _14714_err;;
	std::tie(_14710_un,_14714_err) = _1e2d6d8d4_parseUint(_14622_s,_14634_base,_14649_bit_size);
	if ((_14714_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>(_14714_err);
	};
	return jule::Exceptional<jule::U64>(jule::Any(),_14710_un);
}



inline jule::Exceptional<jule::I64> _1e2ba1173_ParseInt(jule::Str _17221_s, jule::I64 _17229_base, jule::I64 _17244_bitSize) {
	if (_17221_s.empty()) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(2LL));
	};
	jule::Bool _17813_neg = false;;
	if ((_17221_s[0LL] == '+')) {
		(_17221_s).mut_slice(1LL);;
	} else if ((_17221_s[0LL] == '-')) {
		_17813_neg=true;
		(_17221_s).mut_slice(1LL);;
	};
	jule::U64 _18714_un;;
	jule::I64 _18718_err;;
	std::tie(_18714_un,_18718_err) = _1e2d6d8d4_parseUint(_17221_s,_17229_base,_17244_bitSize);
	if (((_18718_err != static_cast<jule::I64>(0LL)) && (_18718_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>(_18718_err);
	};
	if ((_17244_bitSize == 0LL)) {
		_17244_bitSize=64LL;
	};
	jule::U64 _1969_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17244_bitSize - 1LL))));;
	if (((!(_17813_neg)) && (_18714_un >= _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	};
	if ((_17813_neg && (_18714_un > _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	};
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);;
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_20313_n);
}



inline std::tuple<jule::F64,jule::Bool> _1e2b32c3c_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	jule::F64 _4157_f = jule::F64();
	jule::Bool _4165_ok = jule::Bool();
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			_4157_f=static_cast<jule::F64>(_1e2e4ade0_F64FromBits(9223372036854775808LLU));
		};
		_4165_ok = true;
		return std::make_tuple(_4157_f,_4165_ok);
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		_4157_f = 0LL;
		_4165_ok = false;
		return std::make_tuple(_4157_f,_4165_ok);
	};
	jule::I64 _579_clz = _1e31804a9_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U64>(_579_clz);
	;
	jule::U64 _6013_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_579_clz));;
	jule::U64 _6314_xHi;;
	jule::U64 _6323_xLo;;
	std::tie(_6314_xHi,_6323_xLo) = _1e318a00d_Mul64(_4122_man,_1e2b8c758_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
	if ((((_6314_xHi & 511LLU) == 511LLU) && ((_6323_xLo + _4122_man) < _4122_man))) {
		jule::U64 _6714_yHi;;
		jule::U64 _6719_yLo;;
		std::tie(_6714_yHi,_6719_yLo) = _1e318a00d_Mul64(_4122_man,_1e2b8c758_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
		jule::U64 _6818_mergedHi = _6314_xHi;;
		jule::U64 _6828_mergedLo = (_6323_xLo + _6714_yHi);;
		std::tie(_6818_mergedHi,_6828_mergedLo) = std::make_tuple(_6314_xHi,(_6323_xLo + _6714_yHi));
		if ((_6828_mergedLo < _6323_xLo)) {
			(_6818_mergedHi)++;
		};
		if (((((_6818_mergedHi & 511LLU) == 511LLU) && ((_6828_mergedLo + 1LLU) == 0LLU)) && ((_6719_yLo + _4122_man) < _4122_man))) {
			_4157_f = 0LL;
			_4165_ok = false;
			return std::make_tuple(_4157_f,_4165_ok);
		};
		std::tie(_6314_xHi,_6323_xLo) = std::make_tuple(_6818_mergedHi,_6828_mergedLo);
	};
	jule::U64 _799_msb = (_6314_xHi >> 63LLU);;
	jule::U64 _8013_retMantissa = (_6314_xHi >> (_799_msb + 9LLU));;
	_6013_retExp2-=(1LLU ^ _799_msb);
	if ((((_6323_xLo == 0LLU) && ((_6314_xHi & 511LLU) == 0LLU)) && ((_8013_retMantissa & 3LLU) == 1LLU))) {
		_4157_f = 0LL;
		_4165_ok = false;
		return std::make_tuple(_4157_f,_4165_ok);
	};
	_8013_retMantissa+=(_8013_retMantissa & 1LLU);
	_8013_retMantissa>>=1LLU;
	if (((_8013_retMantissa >> 53LLU) > 0LLU)) {
		_8013_retMantissa>>=1LLU;
		_6013_retExp2+=1LLU;
	};
	if (((_6013_retExp2 - 1LLU) >= 2046LLU)) {
		_4157_f = 0LL;
		_4165_ok = false;
		return std::make_tuple(_4157_f,_4165_ok);
	};
	jule::U64 _10313_retBits = ((_6013_retExp2 << 52LLU) | (_8013_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_10313_retBits|=9223372036854775808LLU;
	};
	_4157_f = static_cast<jule::F64>(_1e2e4ade0_F64FromBits(_10313_retBits));
	_4165_ok = true;
	return std::make_tuple(_4157_f,_4165_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1e2b769ea_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	jule::F32 _11057_f = jule::F32();
	jule::Bool _11065_ok = jule::Bool();
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			_11057_f=static_cast<jule::F32>(_1e2e4a829_F32FromBits(2147483648LLU));
		};
		_11065_ok = true;
		return std::make_tuple(_11057_f,_11065_ok);
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		_11057_f = 0LL;
		_11065_ok = false;
		return std::make_tuple(_11057_f,_11065_ok);
	};
	jule::I64 _1329_clz = _1e31804a9_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U64>(_1329_clz);
	;
	jule::U64 _13513_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1329_clz));;
	jule::U64 _13814_x_hi;;
	jule::U64 _13824_x_lo;;
	std::tie(_13814_x_hi,_13824_x_lo) = _1e318a00d_Mul64(_11022_man,_1e2b8c758_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
	if ((((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _14214_y_hi;;
		jule::U64 _14220_y_lo;;
		std::tie(_14214_y_hi,_14220_y_lo) = _1e318a00d_Mul64(_11022_man,_1e2b8c758_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
		jule::U64 _14318_merged_hi = _13814_x_hi;;
		jule::U64 _14329_merged_lo = (_13824_x_lo + _14214_y_hi);;
		std::tie(_14318_merged_hi,_14329_merged_lo) = std::make_tuple(_13814_x_hi,(_13824_x_lo + _14214_y_hi));
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		};
		if (((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11022_man) < _11022_man))) {
			_11057_f = 0LL;
			_11065_ok = false;
			return std::make_tuple(_11057_f,_11065_ok);
		};
		std::tie(_13814_x_hi,_13824_x_lo) = std::make_tuple(_14318_merged_hi,_14329_merged_lo);
	};
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);;
	jule::U64 _15513_retMantissa = (_13814_x_hi >> (_1549_msb + 38LLU));;
	_13513_retExp2-=(1LLU ^ _1549_msb);
	if ((((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_retMantissa & 3LLU) == 1LLU))) {
		_11057_f = 0LL;
		_11065_ok = false;
		return std::make_tuple(_11057_f,_11065_ok);
	};
	_15513_retMantissa+=(_15513_retMantissa & 1LLU);
	_15513_retMantissa>>=1LLU;
	if (((_15513_retMantissa >> 24LLU) > 0LLU)) {
		_15513_retMantissa>>=1LLU;
		_13513_retExp2+=1LLU;
	};
	if (((_13513_retExp2 - 1LLU) >= 254LLU)) {
		_11057_f = 0LL;
		_11065_ok = false;
		return std::make_tuple(_11057_f,_11065_ok);
	};
	jule::U64 _17813_retBits = ((_13513_retExp2 << 23LLU) | (_15513_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_17813_retBits|=2147483648LLU;
	};
	_11057_f = static_cast<jule::F32>(_1e2e4a829_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_retBits))));
	_11065_ok = true;
	return std::make_tuple(_11057_f,_11065_ok);
}



inline jule::I64 _1e2bc6a39_commonPrefixLenIgnoreCase(jule::Str _4530_s, jule::Str _4538_prefix) {
	jule::I64 _4613_n = _4538_prefix.len();;
	if ((_4613_n > _4530_s.len())) {
		_4613_n=static_cast<jule::I64>(_4530_s.len());
	};
	jule::I64 _5013_i = 0LL;;
	for (; (_5013_i < _4613_n); (_5013_i)++) {
		{
			jule::U8 _5217_c = _4530_s[_5013_i];;
			if ((('A' <= _5217_c) && (_5217_c <= 'Z'))) {
				_5217_c+=('a' - 'A');
			};
			if ((_5217_c != _4538_prefix[_5013_i])) {
				return _5013_i;
			};
		}
	_iter_next_1e52308dc:;
	}
	_iter_end_1e52308dc:;;
	return _4613_n;
}



inline std::tuple<jule::F64,jule::I64,jule::Bool> _1e2ce8331_special(jule::Str _6816_s) {
	jule::F64 _6826_f = jule::F64();
	jule::I64 _6834_n = jule::I64();
	jule::Bool _6842_ok = jule::Bool();
	if (_6816_s.empty()) {
		_6826_f = 0LL;
		_6834_n = 0LL;
		_6842_ok = false;
		return std::make_tuple(_6826_f,_6834_n,_6842_ok);
	};
	jule::I64 _7213_sign = 1LL;;
	jule::I64 _7313_nsign = 0LL;;
	{
		auto &_match_expr{ _6816_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1e52352e8:;
			{
				if ((_6816_s[0LL] == '-')) {
					_7213_sign=-1LL;
				};
				_7313_nsign=1LL;
				(_6816_s).mut_slice(1LL);;
				goto _case_begin_1e5235370;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1e5235370:;
			{
				jule::I64 _8317_caseN = _1e2bc6a39_commonPrefixLenIgnoreCase(_6816_s,jule::Str("infinity", 8));;
				if (((3LL < _8317_caseN) && (_8317_caseN < 8LL))) {
					_8317_caseN=3LL;
				};
				if (((_8317_caseN == 3LL) || (_8317_caseN == 8LL))) {
					_6826_f = static_cast<jule::F64>(_1e2eae9c0_Inf(_7213_sign));
					_6834_n = static_cast<jule::I64>((_7313_nsign + _6834_n));
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1e52353e7:;
			{
				if ((_1e2bc6a39_commonPrefixLenIgnoreCase(_6816_s,jule::Str("NaN", 3)) == 3LL)) {
					_6826_f = static_cast<jule::F64>(_1e2eac0e9_NaN());
					_6834_n = 3LL;
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				};
			}
		}
		_match_end_1e523522c:;
	};
	_6826_f = 0LL;
	_6834_n = 0LL;
	_6842_ok = false;
	return std::make_tuple(_6826_f,_6834_n,_6842_ok);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _1e2d6e000_readFloat(jule::Str _10314_s) {
	jule::U64 _10324_mantissa = jule::U64();
	jule::I64 _10339_exp = jule::I64();
	jule::Bool _10349_neg = jule::Bool();
	jule::Bool _10360_trunc = jule::Bool();
	jule::Bool _10373_hex = jule::Bool();
	jule::I64 _10384_i = jule::I64();
	jule::Bool _10392_ok = jule::Bool();
	if ((_10384_i >= _10314_s.len())) {
		return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
	};
	{
		
		if ((_10314_s[_10384_i] == '+')) {
			_case_begin_1e523b541:;
			{
				(_10384_i)++;
			}
		}
		else if ((_10314_s[_10384_i] == '-')) {
			_case_begin_1e523b5a7:;
			{
				_10349_neg=true;
				(_10384_i)++;
			}
		}
		_match_end_1e523b365:;
	};
	jule::U64 _11713_base = 10LLU;;
	jule::I64 _11813_maxMantDigits = 19LL;;
	jule::U8 _11913_expChar = 'e';;
	if (((((_10384_i + 2LL) < _10314_s.len()) && (_10314_s[_10384_i] == '0')) && (_1e2d2de49_lower(_10314_s[(_10384_i + 1LL)]) == 'x'))) {
		_11713_base=16LLU;
		_11813_maxMantDigits=16LL;
		_10384_i+=2LL;
		_11913_expChar='p';
		_10373_hex=true;
	};
	jule::Bool _12713_sawdot = false;;
	jule::Bool _12813_sawdigits = false;;
	jule::I64 _12913_nd = 0LL;;
	jule::I64 _13013_ndMant = 0LL;;
	jule::I64 _13113_dp = 0LL;;
	for (; (_10384_i < _10314_s.len()); (_10384_i)++) {
		{
			jule::U8 _13313_c = _10314_s[_10384_i];;
			{
				
				if ((_13313_c == '_')) {
					_case_begin_1e52429ba:;
					{
						goto _iter_next_1e5241db5;
					}
				}
				else if ((_13313_c == '.')) {
					_case_begin_1e5242a42:;
					{
						if (_12713_sawdot) {
							goto _julec_label_loop_end;
						};
						_12713_sawdot=true;
						_13113_dp=_12913_nd;
						goto _iter_next_1e5241db5;
					}
				}
				else if ((('0' <= _13313_c) && (_13313_c <= '9'))) {
					_case_begin_1e5242ab9:;
					{
						_12813_sawdigits=true;
						if (((_13313_c == '0') && (_12913_nd == 0LL))) {
							(_13113_dp)--;
							goto _iter_next_1e5241db5;
						};
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							_10324_mantissa*=_11713_base;
							_10324_mantissa+=static_cast<jule::U64>((_13313_c - '0'));
							(_13013_ndMant)++;
						} else if ((_13313_c != '0')) {
							_10360_trunc=true;
						};
						goto _iter_next_1e5241db5;
					}
				}
				else if ((((_11713_base == 16LLU) && ('a' <= _1e2d2de49_lower(_13313_c))) && (_1e2d2de49_lower(_13313_c) <= 'f'))) {
					_case_begin_1e5242b41:;
					{
						_12813_sawdigits=true;
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							_10324_mantissa*=16LLU;
							_10324_mantissa+=static_cast<jule::U64>(((_1e2d2de49_lower(_13313_c) - 'a') + 10LLU));
							(_13013_ndMant)++;
						} else {
							_10360_trunc=true;
						};
						goto _iter_next_1e5241db5;
					}
				}
				_match_end_1e52428dd:;
			};
			goto _iter_end_1e5241db5;
		}
	_iter_next_1e5241db5:;
	}
	_iter_end_1e5241db5:;;
	_julec_label_loop_end:;
	if ((!(_12813_sawdigits))) {
		return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
	};
	if ((!(_12713_sawdot))) {
		_13113_dp=_12913_nd;
	};
	if ((_11713_base == 16LLU)) {
		_13113_dp*=4LL;
		_13013_ndMant*=4LL;
	};
	if (((_10384_i < _10314_s.len()) && (_1e2d2de49_lower(_10314_s[_10384_i]) == _11913_expChar))) {
		(_10384_i)++;
		if ((_10384_i >= _10314_s.len())) {
			return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
		};
		jule::I64 _19617_esign = 1LL;;
		if ((_10314_s[_10384_i] == '+')) {
			(_10384_i)++;
		} else if ((_10314_s[_10384_i] == '-')) {
			(_10384_i)++;
			_19617_esign=-1LL;
		};
		if ((((_10384_i >= _10314_s.len()) || (_10314_s[_10384_i] < '0')) || (_10314_s[_10384_i] > '9'))) {
			return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
		};
		jule::I64 _20617_e = 0LL;;
		for (; ((_10384_i < _10314_s.len()) && ((('0' <= _10314_s[_10384_i]) && (_10314_s[_10384_i] <= '9')) || (_10314_s[_10384_i] == '_'))); (_10384_i)++) {
			{
				if ((_10314_s[_10384_i] == '_')) {
					goto _iter_next_1e524c5da;
				};
				if ((_20617_e < 10000LL)) {
					_20617_e=static_cast<jule::I64>((((_20617_e * 10LL) + static_cast<jule::I64>(_10314_s[_10384_i])) - '0'));
				};
			}
		_iter_next_1e524c5da:;
		}
		_iter_end_1e524c5da:;;
		_13113_dp+=(_20617_e * _19617_esign);
	} else if ((_11713_base == 16LLU)) {
		return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
	};
	if ((_10324_mantissa != 0LLU)) {
		_10339_exp=static_cast<jule::I64>((_13113_dp - _13013_ndMant));
	};
	_10392_ok=true;
	return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
}



inline std::tuple<jule::F64,jule::Bool> _1e2e3a693_atof64exact(jule::U64 _48116_mantissa, jule::I64 _48135_exp, jule::Bool _48145_neg) {
	jule::F64 _48158_f = jule::F64();
	jule::Bool _48166_ok = jule::Bool();
	if (((_48116_mantissa >> _1e2ae14d1_f64info._field_mantbits) != 0LLU)) {
		return std::make_tuple(_48158_f,_48166_ok);
	};
	_48158_f=static_cast<jule::F64>(static_cast<jule::F64>(_48116_mantissa));
	if (_48145_neg) {
		_48158_f=static_cast<jule::F64>((-(_48158_f)));
	};
	{
		
		if ((_48135_exp == 0LL)) {
			_case_begin_1e5257c77:;
			{
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if (((_48135_exp > 0LL) && (_48135_exp <= 37LL))) {
			_case_begin_1e5257cee:;
			{
				if ((_48135_exp > 22LL)) {
					_48158_f*=_1e2be6e00_f64pow10[(_48135_exp - 22LL)];
					_48135_exp=22LL;
				};
				if (((_48158_f > 1000000000000000LL) || (_48158_f < -1000000000000000LL))) {
					return std::make_tuple(_48158_f,_48166_ok);
				};
				_48158_f = static_cast<jule::F64>((_48158_f * _1e2be6e00_f64pow10[_48135_exp]));
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if (((_48135_exp < 0LL) && (_48135_exp >= -22LL))) {
			_case_begin_1e5257d76:;
			{
				_48158_f = static_cast<jule::F64>(jule::div(_48158_f,_1e2be6e00_f64pow10[(-(_48135_exp))]));
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		_match_end_1e5257bbc:;
	};
	return std::make_tuple(_48158_f,_48166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1e2b56876_atof32exact(jule::U64 _51516_mantissa, jule::I64 _51535_exp, jule::Bool _51549_neg) {
	jule::F32 _51562_f = jule::F32();
	jule::Bool _51570_ok = jule::Bool();
	if (((_51516_mantissa >> _1e281ea8e_f32info._field_mantbits) != 0LLU)) {
		return std::make_tuple(_51562_f,_51570_ok);
	};
	_51562_f=static_cast<jule::F32>(static_cast<jule::F32>(_51516_mantissa));
	if (_51549_neg) {
		_51562_f=static_cast<jule::F32>((-(_51562_f)));
	};
	{
		
		if ((_51535_exp == 0LL)) {
			_case_begin_1e525cd9d:;
			{
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if (((_51535_exp > 0LL) && (_51535_exp <= 17LL))) {
			_case_begin_1e525ce25:;
			{
				if ((_51535_exp > 10LL)) {
					_51562_f*=_1e2c5b86b_f32pow10[(_51535_exp - 10LL)];
					_51535_exp=10LL;
				};
				if (((_51562_f > 10000000LL) || (_51562_f < -10000000LL))) {
					return std::make_tuple(_51562_f,_51570_ok);
				};
				_51562_f = static_cast<jule::F32>((_51562_f * _1e2c5b86b_f32pow10[_51535_exp]));
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if (((_51535_exp < 0LL) && (_51535_exp >= -10LL))) {
			_case_begin_1e525ce9c:;
			{
				_51562_f = static_cast<jule::F32>(jule::div(_51562_f,_1e2c5b86b_f32pow10[(-(_51535_exp))]));
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		_match_end_1e525cce3:;
	};
	return std::make_tuple(_51562_f,_51570_ok);
}



inline std::tuple<jule::F64,jule::I64> _1e2c3866c_atofHex(jule::Str _55112_s, _1e2b90cab_floatInfo& _55121_flt, jule::U64 _55141_mantissa, jule::I64 _55160_exp, jule::Bool _55170_neg, jule::Bool _55181_trunc) {
	jule::I64 _5529_maxExp = ((static_cast<jule::I64>((1LL << _55121_flt._field_expbits)) + _55121_flt._field_bias) - 2LL);;
	jule::I64 _5539_minExp = (_55121_flt._field_bias + 1LL);;
	_55160_exp+=static_cast<jule::I64>(_55121_flt._field_mantbits);
	while (((_55141_mantissa != 0LLU) && ((_55141_mantissa >> (_55121_flt._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55141_mantissa<<=1LLU;
			(_55160_exp)--;
		}
	_iter_next_1e52638ed:;
	}
	_iter_end_1e52638ed:;;
	if (_55181_trunc) {
		_55141_mantissa|=1LLU;
	};
	while (((_55141_mantissa >> ((1LLU + _55121_flt._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_1e5263db5:;
	}
	_iter_end_1e5263db5:;;
	while (((_55141_mantissa > 1LLU) && (_55160_exp < (_5539_minExp - 2LL)))) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_1e52659ee:;
	}
	_iter_end_1e52659ee:;;
	jule::U64 _58313_round = (_55141_mantissa & 3LLU);;
	_55141_mantissa>>=2LLU;
	_58313_round|=(_55141_mantissa & 1LLU);
	_55160_exp+=2LL;
	if ((_58313_round == 3LLU)) {
		(_55141_mantissa)++;
		if ((_55141_mantissa == (1LLU << (1LLU + _55121_flt._field_mantbits)))) {
			_55141_mantissa>>=1LLU;
			(_55160_exp)++;
		};
	};
	if (((_55141_mantissa >> _55121_flt._field_mantbits) == 0LLU)) {
		_55160_exp=_55121_flt._field_bias;
	};
	jule::I64 _59813_err = static_cast<jule::I64>(0LL);;
	if ((_55160_exp > _5529_maxExp)) {
		_55141_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << _55121_flt._field_mantbits)));
		_55160_exp=static_cast<jule::I64>((_5529_maxExp + 1LL));
		_59813_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _60513_bits = (_55141_mantissa & ((1LLU << _55121_flt._field_mantbits) - 1LLU));;
	_60513_bits|=(static_cast<jule::U64>(((_55160_exp - _55121_flt._field_bias) & static_cast<jule::I64>(((1LL << _55121_flt._field_expbits) - 1LL)))) << _55121_flt._field_mantbits);
	if (_55170_neg) {
		_60513_bits|=((1LLU << _55121_flt._field_mantbits) << _55121_flt._field_expbits);
	};
	if ((_55121_flt == _1e281ea8e_f32info)) {
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_1e2e4a829_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_60513_bits))))),_59813_err);
	};
	return std::make_tuple(static_cast<jule::F64>(_1e2e4ade0_F64FromBits(_60513_bits)),_59813_err);
}



inline std::tuple<jule::F32,jule::I64,jule::I64> _1e2c758a7_atof32(jule::Str _61611_s) {
	jule::F32 _61621_f = jule::F32();
	jule::I64 _61629_n = jule::I64();
	jule::I64 _61637_err = 0LL;
	{
		jule::F64 _61814_val;;
		jule::I64 _61819__n;;
		jule::Bool _61823_ok;;
		std::tie(_61814_val,_61819__n,_61823_ok) = _1e2ce8331_special(_61611_s);
		if (_61823_ok) {
			_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_61814_val));
			_61629_n = _61819__n;
			_61637_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_61621_f,_61629_n,_61637_err);
		};
	};
	jule::U64 _62410_mantissa;;
	jule::I64 _62420_exp;;
	jule::Bool _62425_neg;;
	jule::Bool _62430_trunc;;
	jule::Bool _62437_hex;;
	jule::I64 _62442__n;;
	jule::Bool _62450_ok;;
	std::tie(_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc,_62437_hex,_62442__n,_62450_ok) = _1e2d6e000_readFloat(_61611_s);
	_61629_n=_62442__n;
	if ((!(_62450_ok))) {
		_61621_f = 0LL;
		_61637_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	if (_62437_hex) {
		jule::F64 _63117_ff = 0LL;;
		std::tie(_63117_ff,_61637_err) = _1e2c3866c_atofHex(_61611_s.slice(0LL,_61629_n),_1e281ea8e_f32info,_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc);
		_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_63117_ff));
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	{
		if ((!(_62430_trunc))) {
			std::tie(_61621_f,_62450_ok) = _1e2b56876_atof32exact(_62410_mantissa,_62420_exp,_62425_neg);
			if (_62450_ok) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
		};
		std::tie(_61621_f,_62450_ok) = _1e2b769ea_eiselLemire32(_62410_mantissa,_62420_exp,_62425_neg);
		if (_62450_ok) {
			if ((!(_62430_trunc))) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
			jule::F32 _65321_fUp = 0LL;;
			std::tie(_65321_fUp,_62450_ok) = _1e2b769ea_eiselLemire32(static_cast<jule::U64>((_62410_mantissa + 1LLU)),_62420_exp,_62425_neg);
			if ((_62450_ok && (_61621_f == _65321_fUp))) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
		};
	};
	_1e31c24a7_decimal _66213_d = _1e31c24a7_decimal{};;
	if ((!(_1e2dbe8e1_set(&_66213_d, _61611_s.slice(0LL,_61629_n))))) {
		_61621_f = 0LL;
		_61637_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	jule::U64 _66610_b;;
	jule::Bool _66613_ovf;;
	std::tie(_66610_b,_66613_ovf) = _1e2dd9565_floatBits(&_66213_d, _1e281ea8e_f32info);
	_61621_f=static_cast<jule::F32>(_1e2e4a829_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_66610_b))));
	if (_66613_ovf) {
		_61637_err=static_cast<jule::I64>(1LL);
	};
	return std::make_tuple(_61621_f,_61629_n,_61637_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _1e31c03b7_atof64(jule::Str _67411_s) {
	jule::F64 _67421_f = jule::F64();
	jule::I64 _67429_n = jule::I64();
	jule::I64 _67437_err = 0LL;
	{
		jule::F64 _67614_val;;
		jule::I64 _67619__n;;
		jule::Bool _67623_ok;;
		std::tie(_67614_val,_67619__n,_67623_ok) = _1e2ce8331_special(_67411_s);
		if (_67623_ok) {
			_67421_f = _67614_val;
			_67429_n = _67619__n;
			_67437_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_67421_f,_67429_n,_67437_err);
		};
	};
	jule::U64 _68210_mantissa;;
	jule::I64 _68220_exp;;
	jule::Bool _68225_neg;;
	jule::Bool _68230_trunc;;
	jule::Bool _68237_hex;;
	jule::I64 _68242__n;;
	jule::Bool _68250_ok;;
	std::tie(_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc,_68237_hex,_68242__n,_68250_ok) = _1e2d6e000_readFloat(_67411_s);
	_67429_n=_68242__n;
	if ((!(_68250_ok))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	if (_68237_hex) {
		std::tie(_67421_f,_67437_err) = _1e2c3866c_atofHex(_67411_s.slice(0LL,_67429_n),_1e2ae14d1_f64info,_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	{
		if ((!(_68230_trunc))) {
			std::tie(_67421_f,_68250_ok) = _1e2e3a693_atof64exact(_68210_mantissa,_68220_exp,_68225_neg);
			if (_68250_ok) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
		};
		std::tie(_67421_f,_68250_ok) = _1e2b32c3c_eiselLemire64(_68210_mantissa,_68220_exp,_68225_neg);
		if (_68250_ok) {
			if ((!(_68230_trunc))) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
			jule::F64 _71021_fUp = 0LL;;
			std::tie(_71021_fUp,_68250_ok) = _1e2b32c3c_eiselLemire64(static_cast<jule::U64>((_68210_mantissa + 1LLU)),_68220_exp,_68225_neg);
			if ((_68250_ok && (_67421_f == _71021_fUp))) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
		};
	};
	_1e31c24a7_decimal _71913_d = _1e31c24a7_decimal{};;
	if ((!(_1e2dbe8e1_set(&_71913_d, _67411_s.slice(0LL,_67429_n))))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	jule::U64 _72310_b;;
	jule::Bool _72313_ovf;;
	std::tie(_72310_b,_72313_ovf) = _1e2dd9565_floatBits(&_71913_d, _1e2ae14d1_f64info);
	_67421_f=static_cast<jule::F64>(_1e2e4ade0_F64FromBits(_72310_b));
	if (_72313_ovf) {
		_67437_err=static_cast<jule::I64>(1LL);
	};
	return std::make_tuple(_67421_f,_67429_n,_67437_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _1e31c04e9_parseFloatPrefix(jule::Str _73121_s, jule::I64 _73129_bit_size) {
	if ((_73129_bit_size == 32LL)) {
		jule::F32 _73314_f;;
		jule::I64 _73317_n;;
		jule::I64 _73320_err;;
		std::tie(_73314_f,_73317_n,_73320_err) = _1e2c758a7_atof32(_73121_s);
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_73314_f)),_73317_n,_73320_err);
	};
	jule::F64 _73710_f;;
	jule::I64 _73713_n;;
	jule::I64 _73716_err;;
	std::tie(_73710_f,_73713_n,_73716_err) = _1e31c03b7_atof64(_73121_s);
	return std::make_tuple(_73710_f,_73713_n,_73716_err);
}



inline jule::Exceptional<jule::F64> _1e31c062b_ParseFloat(jule::Str _76519_s, jule::I64 _76527_bit_size) {
	jule::F64 _76610_f;;
	jule::I64 _76613_n;;
	jule::I64 _76616_err;;
	std::tie(_76610_f,_76613_n,_76616_err) = _1e31c04e9_parseFloatPrefix(_76519_s,_76527_bit_size);
	if (((_76613_n != _76519_s.len()) && ((_76616_err == static_cast<jule::I64>(0LL)) || (_76616_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>(static_cast<jule::I64>(2LL));
	};
	if ((_76616_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>(_76616_err);
	};
	return jule::Exceptional<jule::F64>(jule::Any(),_76610_f);
}



inline void _1e31c0939_ryuFtoaFixed32(_1e2ba0628_decimalSlice& _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		std::tie(_4924_d._field_nd,_4924_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	jule::I64 _6213_e2 = _4956_exp;;
	jule::I64 _639_b = _1e3187923_Len32(_4945_mant);;
	if ((_639_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U64>((25LL - _639_b));
		_6213_e2+=(static_cast<jule::I64>(_639_b) - 25LL);
	};
	jule::I64 _749_q = (((-(_1e31c1088_mulByLog2Log10(static_cast<jule::I64>((_6213_e2 + 24LL))))) + _4966_prec) - 1LL);;
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));;
	jule::U32 _8114_di;;
	jule::I64 _8118_dexp2;;
	jule::Bool _8129_d0;;
	std::tie(_8114_di,_8118_dexp2,_8129_d0) = _1e31c1693_mult64bitPow10(_4945_mant,_6213_e2,_749_q);
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _1e31c1907_divisibleByPow5(static_cast<jule::U64>(static_cast<jule::U64>(_4945_mant)),static_cast<jule::I64>((-(_749_q)))))) {
		_7913_exact=true;
		_8129_d0=true;
	};
	jule::U64 _949_extra = static_cast<jule::U64>((-(_8118_dexp2)));;
	jule::U32 _959_extraMask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));;
	jule::U32 _9713_dfrac = 0LLU;;
	std::tie(_8114_di,_9713_dfrac) = std::make_tuple(static_cast<jule::U32>((_8114_di >> _949_extra)),static_cast<jule::U32>((_8114_di & _959_extraMask)));
	jule::Bool _9913_roundUp = false;;
	if (_7913_exact) {
		_9913_roundUp=(((_9713_dfrac > (1LLU << (_949_extra - 1LLU))) || ((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU)));
	} else {
		_9913_roundUp=((_9713_dfrac >> (_949_extra - 1LLU)) == 1LLU);
	};
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	};
	_1e31c0d24_formatDecimal(_4924_d,static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)),(!(_8129_d0)),_9913_roundUp,_4966_prec);
	_4924_d._field_dp-=_749_q;
}



inline void _1e31c0a6b_ryuFtoaFixed64(_1e2ba0628_decimalSlice& _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		std::tie(_12124_d._field_nd,_12124_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	jule::I64 _13113_e2 = _12156_exp;;
	jule::I64 _1329_b = _1e3187bba_Len64(_12145_mant);;
	if ((_1329_b < 55LL)) {
		_12145_mant=static_cast<jule::U64>((_12145_mant << static_cast<jule::U64>((55LL - _1329_b))));
		_13113_e2+=(static_cast<jule::I64>(_1329_b) - 55LL);
	};
	jule::I64 _1469_q = (((-(_1e31c1088_mulByLog2Log10(static_cast<jule::I64>((_13113_e2 + 54LL))))) + _12166_prec) - 1LL);;
	jule::Bool _15113_exact = ((_1469_q <= 55LL) && (_1469_q >= 0LL));;
	jule::U64 _15314_di;;
	jule::I64 _15318_dexp2;;
	jule::Bool _15329_d0;;
	std::tie(_15314_di,_15318_dexp2,_15329_d0) = _1e31c17c5_mult128bitPow10(_12145_mant,_13113_e2,_1469_q);
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1469_q < 0LL) && (_1469_q >= -22LL)) && _1e31c1907_divisibleByPow5(_12145_mant,static_cast<jule::I64>((-(_1469_q)))))) {
		_15113_exact=true;
		_15329_d0=true;
	};
	jule::U64 _1669_extra = static_cast<jule::U64>((-(_15318_dexp2)));;
	jule::U64 _1679_extraMask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));;
	jule::U64 _16913_dfrac = 0LLU;;
	std::tie(_15314_di,_16913_dfrac) = std::make_tuple(static_cast<jule::U64>((_15314_di >> _1669_extra)),static_cast<jule::U64>((_15314_di & _1679_extraMask)));
	jule::Bool _17113_roundUp = false;;
	if (_15113_exact) {
		_17113_roundUp=(((_16913_dfrac > (1LLU << (_1669_extra - 1LLU))) || ((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && (!(_15329_d0)))) || (((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU)));
	} else {
		_17113_roundUp=((_16913_dfrac >> (_1669_extra - 1LLU)) == 1LLU);
	};
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	};
	_1e31c0d24_formatDecimal(_12124_d,_15314_di,(!(_15329_d0)),_17113_roundUp,_12166_prec);
	_12124_d._field_dp-=_1469_q;
}



inline void _1e31c0d24_formatDecimal(_1e2ba0628_decimalSlice& _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2019_max = _1e2cd7562_u64pow10[_20088_prec];;
	jule::I64 _20213_trimmed = 0LL;;
	while ((_20044_m >= _2019_max)) {
		{
			jule::U64 _20414_a = (_20044_m / 10LLU);;
			jule::U64 _20417_b = (_20044_m % 10LL);;
			std::tie(_20414_a,_20417_b) = std::make_tuple((_20044_m / 10LLU),(_20044_m % 10LL));
			_20044_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20417_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20417_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1e529d5e7:;
	}
	_iter_end_1e529d5e7:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2019_max)) {
		_20044_m/=10LLU;
		(_20213_trimmed)++;
	};
	jule::U64 _22913_n = static_cast<jule::U64>(_20088_prec);;
	_20023_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20088_prec));
	jule::U64 _23113_v = _20044_m;;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;;
			jule::U64 _23417_v2 = 0LLU;;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU))),static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL))));
			} else {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>((_23113_v / 100LLU)),static_cast<jule::U64>((_23113_v % 100LL)));
			};
			_22913_n-=2LLU;
			_20023_d._field_d[static_cast<jule::I64>((_22913_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 1LLU))]);
			_20023_d._field_d[static_cast<jule::I64>((_22913_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 0LLU))]);
			_23113_v=_23317_v1;
		}
	_iter_next_1e52a20e0:;
	}
	_iter_end_1e52a20e0:;;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		_20023_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23113_v) + 1LLU))]);
	};
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		_20023_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((2LL * _23113_v))]);
	};
	while ((_20023_d._field_d[(_20023_d._field_nd - 1LL)] == '0')) {
		{
			(_20023_d._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_1e52a7733:;
	}
	_iter_end_1e52a7733:;;
	_20023_d._field_dp=static_cast<jule::I64>((_20023_d._field_nd + _20213_trimmed));
}



inline void _1e31c0e56_ryuFtoaShortest(_1e2ba0628_decimalSlice& _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1e2b90cab_floatInfo& _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		std::tie(_26125_d._field_nd,_26125_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1e318219d_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U64>((-(_26157_exp)));
		_1e31c142e_ryuDigits(_26125_d,_26146_mant,_26146_mant,_26146_mant,true,false);
		return;;
	};
	jule::U64 _27310_ml;;
	jule::U64 _27314_mc;;
	jule::U64 _27318_mu;;
	jule::I64 _27326_e2;;
	std::tie(_27310_ml,_27314_mc,_27318_mu,_27326_e2) = _1e31c12ec_computeBounds(_26146_mant,_26157_exp,_26168_flt);
	if ((_27326_e2 == 0LL)) {
		_1e31c142e_ryuDigits(_26125_d,_27310_ml,_27314_mc,_27318_mu,true,false);
		return;;
	};
	jule::I64 _2799_q = (_1e31c1088_mulByLog2Log10(static_cast<jule::I64>((-(_27326_e2)))) + 1LL);;
	jule::U64 _28313_dl = 0LLU;;
	jule::U64 _28413_dc = 0LLU;;
	jule::U64 _28513_du = 0LLU;;
	jule::Bool _28613_dl0 = false;;
	jule::Bool _28713_dc0 = false;;
	jule::Bool _28813_du0 = false;;
	if ((_26168_flt == _1e281ea8e_f32info)) {
		jule::U32 _29017_dl32 = 0LLU;;
		jule::U32 _29117_dc32 = 0LLU;;
		jule::U32 _29217_du32 = 0LLU;;
		std::tie(_29017_dl32,std::ignore,_28613_dl0) = _1e31c1693_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)),_27326_e2,_2799_q);
		std::tie(_29117_dc32,std::ignore,_28713_dc0) = _1e31c1693_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)),_27326_e2,_2799_q);
		std::tie(_29217_du32,_27326_e2,_28813_du0) = _1e31c1693_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)),_27326_e2,_2799_q);
		std::tie(_28313_dl,_28413_dc,_28513_du) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32)),static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32)),static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32)));
	} else {
		std::tie(_28313_dl,std::ignore,_28613_dl0) = _1e31c17c5_mult128bitPow10(_27310_ml,_27326_e2,_2799_q);
		std::tie(_28413_dc,std::ignore,_28713_dc0) = _1e31c17c5_mult128bitPow10(_27314_mc,_27326_e2,_2799_q);
		std::tie(_28513_du,_27326_e2,_28813_du0) = _1e31c17c5_mult128bitPow10(_27318_mu,_27326_e2,_2799_q);
	};
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2799_q > 55LL)) {
		std::tie(_28613_dl0,_28713_dc0,_28813_du0) = std::make_tuple(false,false,false);
	};
	if (((_2799_q < 0LL) && (_2799_q >= -24LL))) {
		if (_1e31c1907_divisibleByPow5(_27310_ml,static_cast<jule::I64>((-(_2799_q))))) {
			_28613_dl0=true;
		};
		if (_1e31c1907_divisibleByPow5(_27314_mc,static_cast<jule::I64>((-(_2799_q))))) {
			_28713_dc0=true;
		};
		if (_1e31c1907_divisibleByPow5(_27318_mu,static_cast<jule::I64>((-(_2799_q))))) {
			_28813_du0=true;
		};
	};
	jule::U64 _3259_extra = static_cast<jule::U64>((-(_27326_e2)));;
	jule::U64 _3269_extraMask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));;
	jule::U64 _32813_fracl = 0LLU;;
	std::tie(_28313_dl,_32813_fracl) = std::make_tuple(static_cast<jule::U64>((_28313_dl >> _3259_extra)),static_cast<jule::U64>((_28313_dl & _3269_extraMask)));
	jule::U64 _33013_fracc = 0LLU;;
	std::tie(_28413_dc,_33013_fracc) = std::make_tuple(static_cast<jule::U64>((_28413_dc >> _3259_extra)),static_cast<jule::U64>((_28413_dc & _3269_extraMask)));
	jule::U64 _33213_fracu = 0LLU;;
	std::tie(_28513_du,_33213_fracu) = std::make_tuple(static_cast<jule::U64>((_28513_du >> _3259_extra)),static_cast<jule::U64>((_28513_du & _3269_extraMask)));
	jule::Bool _33813_uok = ((!(_28813_du0)) || (_33213_fracu > 0LLU));;
	if ((_28813_du0 && (_33213_fracu == 0LLU))) {
		_33813_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_33813_uok))) {
		(_28513_du)--;
	};
	jule::Bool _34713_cup = false;;
	if (_28713_dc0) {
		_34713_cup=((_33013_fracc > (1LLU << (_3259_extra - 1LLU))) || ((_33013_fracc == (1LLU << (_3259_extra - 1LLU))) && ((_28413_dc & 1LLU) == 1LLU)));
	} else {
		_34713_cup=((_33013_fracc >> (_3259_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3619_lok = ((_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	};
	jule::Bool _3669_c0 = (_28713_dc0 && (_33013_fracc == 0LLU));;
	_1e31c142e_ryuDigits(_26125_d,_28313_dl,_28413_dc,_28513_du,_3669_c0,_34713_cup);
	_26125_d._field_dp-=_2799_q;
}



inline jule::I64 _1e31c1088_mulByLog2Log10(jule::I64 _37719_x) {
	return static_cast<jule::I64>(((_37719_x * 78913LL) >> 18LL));
}



inline jule::I64 _1e31c11ba_mulByLog10Log2(jule::I64 _38719_x) {
	return static_cast<jule::I64>(((_38719_x * 108853LL) >> 15LL));
}



inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _1e31c12ec_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1e2b90cab_floatInfo& _3966_flt) {
	jule::U64 _39624_lower = jule::U64();
	jule::U64 _39636_central = jule::U64();
	jule::U64 _39650_upper = jule::U64();
	jule::I64 _39662_e2 = jule::I64();
	if (((_39518_mant != (1LLU << _3966_flt._field_mantbits)) || (_39529_exp == ((_3966_flt._field_bias + 1LL) - static_cast<jule::I64>(_3966_flt._field_mantbits))))) {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>(((2LLU * _39518_mant) - 1LLU)),static_cast<jule::U64>((2LLU * _39518_mant)),static_cast<jule::U64>(((2LLU * _39518_mant) + 1LLU)));
		_39662_e2=static_cast<jule::I64>((_39529_exp - 1LL));
	} else {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>(((4LLU * _39518_mant) - 1LLU)),static_cast<jule::U64>((4LLU * _39518_mant)),static_cast<jule::U64>(((4LLU * _39518_mant) + 2LLU)));
		_39662_e2=static_cast<jule::I64>((_39529_exp - 2LL));
	};
	return std::make_tuple(_39624_lower,_39636_central,_39650_upper,_39662_e2);
}



inline void _1e31c142e_ryuDigits(_1e2ba0628_decimalSlice& _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _41014_lhi;;
	jule::U32 _41019_llo;;
	std::tie(_41014_lhi,_41019_llo) = _1e31c1a39_divmod1e9(_40936_lower);
	jule::U32 _41110_chi;;
	jule::U32 _41115_clo;;
	std::tie(_41110_chi,_41115_clo) = _1e31c1a39_divmod1e9(_40948_central);
	jule::U32 _41210_uhi;;
	jule::U32 _41215_ulo;;
	std::tie(_41210_uhi,_41215_ulo) = _1e31c1a39_divmod1e9(_40962_upper);
	if ((_41210_uhi == 0LLU)) {
		_1e31c1561_ryuDigits32(_40919_d,_41019_llo,_41115_clo,_41215_ulo,_40978_c0,_40992_cup,8LL);
	} else if ((_41014_lhi < _41210_uhi)) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41115_clo == 0LLU));
		_40992_cup=((_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40992_cup));
		_1e31c1561_ryuDigits32(_40919_d,_41014_lhi,_41110_chi,_41210_uhi,_40978_c0,_40992_cup,8LL);
		_40919_d._field_dp+=9LL;
	} else {
		_40919_d._field_nd=0LL;
		jule::U64 _42817_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42917_v = _41110_chi;;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = (_42917_v / 10LLU);;
				jule::U32 _43122_v2 = (_42917_v % 10LL);;
				std::tie(_43118_v1,_43122_v2) = std::make_tuple((_42917_v / 10LLU),(_42917_v % 10LL));
				_42917_v=_43118_v1;
				(_42817_n)--;
				_40919_d._field_d[static_cast<jule::I64>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43122_v2 + '0')));
			}
		_iter_next_1e52c7ec3:;
		}
		_iter_end_1e52c7ec3:;;
		_40919_d._field_d=_40919_d._field_d.slice(static_cast<jule::I64>(_42817_n));
		_40919_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42817_n)));
		_1e31c1561_ryuDigits32(_40919_d,_41019_llo,_41115_clo,_41215_ulo,_40978_c0,_40992_cup,static_cast<jule::I64>((_40919_d._field_nd + 8LL)));
	};
	while (((_40919_d._field_nd > 0LL) && (_40919_d._field_d[(_40919_d._field_nd - 1LL)] == '0'))) {
		{
			(_40919_d._field_nd)--;
		}
	_iter_next_1e52ca2b1:;
	}
	_iter_end_1e52ca2b1:;;
	while (((_40919_d._field_nd > 0LL) && (_40919_d._field_d[0LL] == '0'))) {
		{
			(_40919_d._field_nd)--;
			(_40919_d._field_dp)--;
			_40919_d._field_d=_40919_d._field_d.slice(1LL);
		}
	_iter_next_1e52c7c4d:;
	}
	_iter_end_1e52c7c4d:;;
}



inline void _1e31c1561_ryuDigits32(_1e2ba0628_decimalSlice& _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		_45421_d._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _46013_trimmed = 0LL;;
	jule::I64 _46313_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47118_c = (_45458_central / 10LLU);;
			jule::U32 _47125_cdigit = (_45458_central % 10LL);;
			std::tie(_47118_c,_47125_cdigit) = std::make_tuple((_45458_central / 10LLU),(_45458_central % 10LL));
			jule::U32 _47213_u = (_4559_upper / 10LLU);;
			if ((_47013_l > _47213_u)) {
				goto _iter_end_1e52cdb88;
			};
			if (((_47013_l == (_47118_c + 1LLU)) && (_47118_c < _47213_u))) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			};
			(_46013_trimmed)++;
			_45525_c0=(_45525_c0 && (_46313_cNextDigit == 0LL));
			_46313_cNextDigit=static_cast<jule::I64>(static_cast<jule::I64>(_47125_cdigit));
			std::tie(_45442_lower,_45458_central,_4559_upper) = std::make_tuple(_47013_l,_47118_c,_47213_u);
		}
	_iter_next_1e52cdb88:;
	}
	_iter_end_1e52cdb88:;;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=(((_46313_cNextDigit > 5LL) || ((_46313_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_46313_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45458_central;;
	jule::I64 _51013_n = _45554_endindex;;
	while ((_51013_n > _45421_d._field_nd)) {
		{
			jule::U32 _51214_v1 = (_50913_v / 100LLU);;
			jule::U32 _51218_v2 = (_50913_v % 100LL);;
			std::tie(_51214_v1,_51218_v2) = std::make_tuple((_50913_v / 100LLU),(_50913_v % 100LL));
			_45421_d._field_d[_51013_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 1LLU))]);
			_45421_d._field_d[(_51013_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 0LLU))]);
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_1e52d57b6:;
	}
	_iter_end_1e52d57b6:;;
	if ((_51013_n == _45421_d._field_nd)) {
		_45421_d._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>((_50913_v + '0')));
	};
	_45421_d._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	_45421_d._field_dp=static_cast<jule::I64>((_45421_d._field_nd + _46013_trimmed));
}



inline std::tuple<jule::U32,jule::I64,jule::Bool> _1e31c1693_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	jule::U32 _53450_resM = jule::U32();
	jule::I64 _53461_resE = jule::I64();
	jule::Bool _53472_exact = jule::Bool();
	if ((_53440_q == 0LL)) {
		_53450_resM = static_cast<jule::U32>((_53419_m << 6LLU));
		_53461_resE = static_cast<jule::I64>((_53431_e2 - 6LL));
		_53472_exact = true;
		return std::make_tuple(_53450_resM,_53461_resE,_53472_exact);
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _54313_pow = _1e2b8c758_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_54313_pow+=1LLU;
	};
	jule::U64 _54810_hi;;
	jule::U64 _54814_lo;;
	std::tie(_54810_hi,_54814_lo) = _1e318a00d_Mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53419_m)),_54313_pow);
	_53431_e2+=((_1e31c11ba_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	_53450_resM = static_cast<jule::U32>(static_cast<jule::U32>(((_54810_hi << 7LLU) | (_54814_lo >> 57LLU))));
	_53461_resE = _53431_e2;
	_53472_exact = ((_54814_lo << 7LLU) == 0LLU);
	return std::make_tuple(_53450_resM,_53461_resE,_53472_exact);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool> _1e31c17c5_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	jule::U64 _56251_resM = jule::U64();
	jule::I64 _56262_resE = jule::I64();
	jule::Bool _56273_exact = jule::Bool();
	if ((_56241_q == 0LL)) {
		_56251_resM = static_cast<jule::U64>((_56220_m << 8LLU));
		_56262_resE = static_cast<jule::I64>((_56232_e2 - 8LL));
		_56273_exact = true;
		return std::make_tuple(_56251_resM,_56262_resE,_56273_exact);
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _57113_pow = _1e2b8c758_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1e31c11ba_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _57910_l1;;
	jule::U64 _57914_l0;;
	std::tie(_57910_l1,_57914_l0) = _1e318a00d_Mul64(_56220_m,_57113_pow[0LL]);
	jule::U64 _58014_h1;;
	jule::U64 _58018_h0;;
	std::tie(_58014_h1,_58018_h0) = _1e318a00d_Mul64(_56220_m,_57113_pow[1LL]);
	jule::U64 _58110_mid;;
	jule::U64 _58115_carry;;
	std::tie(_58110_mid,_58115_carry) = _1e318887a_Add64(_57910_l1,_58018_h0,0LLU);
	_58014_h1+=_58115_carry;
	_56251_resM = static_cast<jule::U64>(((_58014_h1 << 9LLU) | (_58110_mid >> 55LLU)));
	_56262_resE = _56232_e2;
	_56273_exact = (((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU));
	return std::make_tuple(_56251_resM,_56262_resE,_56273_exact);
}



inline jule::Bool _1e31c1907_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;
	};
	jule::I64 _59013_i = 0LL;;
	for (; (_59013_i < _58632_k); (_59013_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;
			};
			_58624_m/=5LLU;
		}
	_iter_next_1e52e5254:;
	}
	_iter_end_1e52e5254:;;
	return true;
}



inline std::tuple<jule::U32,jule::U32> _1e31c1a39_divmod1e9(jule::U64 _60214_x) {
	{
		return std::make_tuple(static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL))),static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL))));
	};
}



inline void _1e31c3013_trim(_1e31c24a7_decimal& _45314_a) {
	while (((_45314_a._field_nd > 0LL) && (_45314_a._field_d[(_45314_a._field_nd - 1LL)] == '0'))) {
		{
			(_45314_a._field_nd)--;
		}
	_iter_next_1e52e9797:;
	}
	_iter_end_1e52e9797:;;
	if ((_45314_a._field_nd == 0LL)) {
		_45314_a._field_dp=0LL;
	};
}



inline void _1e31c3145_rightShift(_1e31c24a7_decimal& _46320_a, jule::U64 _46332_k) {
	jule::I64 _46413_r = 0LL;;
	jule::I64 _46513_w = 0LL;;
	jule::U64 _46813_n = 0LLU;;
	for (; ((_46813_n >> _46332_k) == 0LLU); (_46413_r)++) {
		{
			if ((_46413_r >= _46320_a._field_nd)) {
				if ((_46813_n == 0LLU)) {
					_46320_a._field_nd=0LL;
					return;;
				};
				while (((_46813_n >> _46332_k) == 0LLU)) {
					{
						_46813_n=static_cast<jule::U64>((_46813_n * 10LLU));
						(_46413_r)++;
					}
				_iter_next_1e52ecb41:;
				}
				_iter_end_1e52ecb41:;;
				goto _iter_end_1e52eb5bd;
			};
			jule::U64 _48213_c = static_cast<jule::U64>(_46320_a._field_d[_46413_r]);;
			_46813_n=static_cast<jule::U64>((((_46813_n * 10LLU) + _48213_c) - '0'));
		}
	_iter_next_1e52eb5bd:;
	}
	_iter_end_1e52eb5bd:;;
	_46320_a._field_dp-=(_46413_r - 1LL);
	jule::U64 _4879_mask = static_cast<jule::U64>((static_cast<jule::U64>((1LL << _46332_k)) - 1LLU));;
	for (; (_46413_r < _46320_a._field_nd); (_46413_r)++) {
		{
			jule::U64 _49113_c = static_cast<jule::U64>(_46320_a._field_d[_46413_r]);;
			jule::U64 _49213_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			_46320_a._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_49213_dig + '0')));
			(_46513_w)++;
			_46813_n=static_cast<jule::U64>((((_46813_n * 10LLU) + _49113_c) - '0'));
		}
	_iter_next_1e5300418:;
	}
	_iter_end_1e5300418:;;
	while ((_46813_n > 0LLU)) {
		{
			jule::U64 _50113_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			if ((_46513_w < 800LL)) {
				_46320_a._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_50113_dig + '0')));
				(_46513_w)++;
			} else if ((_50113_dig > 0LLU)) {
				_46320_a._field_trunc=true;
			};
			_46813_n=static_cast<jule::U64>((_46813_n * 10LLU));
		}
	_iter_next_1e5301073:;
	}
	_iter_end_1e5301073:;;
	_46320_a._field_nd=_46513_w;
	_1e31c3013_trim(_46320_a);
}



inline jule::Bool _1e31c3277_prefixIsLessThan(jule::Array<jule::U8,800> _51721_b, jule::I64 _51735_end, jule::Str _51745_s) {
	jule::I64 _51813_i = 0LL;;
	for (; (_51813_i < _51745_s.len()); (_51813_i)++) {
		{
			if ((_51813_i >= _51735_end)) {
				return true;
			};
			if ((_51721_b[_51813_i] != _51745_s[_51813_i])) {
				return (_51721_b[_51813_i] < _51745_s[_51813_i]);
			};
		}
	_iter_next_1e5304d9b:;
	}
	_iter_end_1e5304d9b:;;
	return false;
}



inline void _1e31c33a9_leftShift(_1e31c24a7_decimal& _53119_a, jule::U64 _53131_k) {
	jule::I64 _53213_delta = _1e2d79ec8_leftCheats[static_cast<jule::I64>(_53131_k)]._field_delta;;
	if (_1e31c3277_prefixIsLessThan(_53119_a._field_d,_53119_a._field_nd,_1e2d79ec8_leftCheats[static_cast<jule::I64>(_53131_k)]._field_cutoff)) {
		(_53213_delta)--;
	};
	jule::I64 _53713_r = _53119_a._field_nd;;
	jule::I64 _53813_w = (_53119_a._field_nd + _53213_delta);;
	jule::U64 _54113_n = 0LLU;;
	(_53713_r)--;
	for (; (_53713_r >= 0LL); (_53713_r)--) {
		{
			_54113_n+=((static_cast<jule::U64>(_53119_a._field_d[_53713_r]) - '0') << _53131_k);
			jule::U64 _54513_quo = (_54113_n / 10LLU);;
			jule::U64 _54613_rem = (_54113_n - (10LLU * _54513_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				_53119_a._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_54613_rem + '0')));
			} else if ((_54613_rem != 0LLU)) {
				_53119_a._field_trunc=true;
			};
			_54113_n=_54513_quo;
		}
	_iter_next_1e5308751:;
	}
	_iter_end_1e5308751:;;
	while ((_54113_n > 0LLU)) {
		{
			jule::U64 _55813_quo = (_54113_n / 10LLU);;
			jule::U64 _55913_rem = (_54113_n - (10LLU * _55813_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				_53119_a._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_55913_rem + '0')));
			} else if ((_55913_rem != 0LLU)) {
				_53119_a._field_trunc=true;
			};
			_54113_n=_55813_quo;
		}
	_iter_next_1e530ad6e:;
	}
	_iter_end_1e530ad6e:;;
	_53119_a._field_nd+=_53213_delta;
	if ((_53119_a._field_nd >= 800LL)) {
		_53119_a._field_nd=800LL;
	};
	_53119_a._field_dp+=_53213_delta;
	_1e31c3013_trim(_53119_a);
}



inline jule::Bool _1e31c3640_shouldRoundUp(_1e31c24a7_decimal& _57819_a, jule::I64 _57831_nd) {
	if (((_57831_nd < 0LL) || (_57831_nd >= _57819_a._field_nd))) {
		return false;
	};
	if (((_57819_a._field_d[_57831_nd] == '5') && ((_57831_nd + 1LL) == _57819_a._field_nd))) {
		if (_57819_a._field_trunc) {
			return true;
		};
		return ((_57831_nd > 0LL) && (((_57819_a._field_d[(_57831_nd - 1LL)] - '0') & 1LL) != 0LLU));
	};
	return (_57819_a._field_d[_57831_nd] >= '5');
}



inline jule::Str _1e31c4dc2_FmtUint(jule::U64 _6016_i, jule::I64 _6024_base) {
	if (((true && (_6016_i < 100LLU)) && (_6024_base == 10LL))) {
		return _1e31c581d_small(static_cast<jule::I64>(static_cast<jule::I64>(_6016_i)));
	};
	jule::Str _6413_s;;
	std::tie(std::ignore,_6413_s) = _1e31c60e3_fmtBits(nullptr,_6016_i,_6024_base,false,false);
	return _6413_s;
}



inline jule::Str _1e31c5257_FmtInt(jule::I64 _7115_i, jule::I64 _7123_base) {
	if ((((true && (0LL <= _7115_i)) && (_7115_i < 100LL)) && (_7123_base == 10LL))) {
		return _1e31c581d_small(static_cast<jule::I64>(static_cast<jule::I64>(_7115_i)));
	};
	jule::Str _7513_s;;
	std::tie(std::ignore,_7513_s) = _1e31c60e3_fmtBits(nullptr,static_cast<jule::U64>(static_cast<jule::U64>(_7115_i)),_7123_base,(_7115_i < 0LL),false);
	return _7513_s;
}



inline jule::Str _1e31c54ee_Itoa(jule::I64 _8013_i) {
	return _1e31c5257_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_8013_i)),10LL);
}



inline jule::Str _1e31c581d_small(jule::I64 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i,(_8510_i + 1LL));
	};
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU),((_8510_i << 1LLU) + 2LL));
}



inline jule::Bool _1e31c5ab5_isPowerOfTwo(jule::I64 _9217_x) {
	return ((_9217_x & (_9217_x - 1LL)) == 0LL);
}



inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1e31c60e3_fmtBits(jule::Slice<jule::U8> _10116_dst, jule::U64 _10133_u, jule::I64 _10141_base, jule::Bool _10152_neg, jule::Bool _10163_append_) {
	jule::Slice<jule::U8> _10180_d = jule::Slice<jule::U8>();
	jule::Str _10191_s = jule::Str();
	if (((_10141_base < 2LL) || (_10141_base > 36LL))) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL);;
	jule::I64 _10813_i = _10713_a.len();;
	if (_10152_neg) {
		_10133_u=static_cast<jule::U64>((-(_10133_u)));
	};
	if ((_10141_base == 10LL)) {
		;
		jule::U64 _14917_us = static_cast<jule::U64>(_10133_u);;
		while ((_14917_us >= 100LLU)) {
			{
				jule::U64 _15117_is = ((_14917_us % 100LL) << 1LLU);;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 1LLU))]);
				_10713_a[(_10813_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 0LLU))]);
			}
		_iter_next_1e53500b1:;
		}
		_iter_end_1e53500b1:;;
		jule::U64 _15913_is = (_14917_us << 1LLU);;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15913_is + 1LLU))]);
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_15913_is)]);
		};
	} else if (_1e31c5ab5_isPowerOfTwo(_10141_base)) {
		jule::U64 _17413_shift = (static_cast<jule::U64>(_1e3181510_TrailingZeros(static_cast<jule::U64>(static_cast<jule::U64>(_10141_base)))) & 7LLU);;
		jule::U64 _17513_b = static_cast<jule::U64>(_10141_base);;
		jule::U64 _17613_m = (static_cast<jule::U64>(_10141_base) - 1LLU);;
		while ((_10133_u >= _17513_b)) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>((static_cast<jule::U64>(_10133_u) & _17613_m))]);
				_10133_u>>=_17413_shift;
			}
		_iter_next_1e5358bd0:;
		}
		_iter_end_1e5358bd0:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10141_base);;
		while ((_10133_u >= _18713_b)) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10133_u,_18713_b);;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>((_10133_u - (_19317_q * _18713_b))))]);
				_10133_u=_19317_q;
			}
		_iter_next_1e535b96e:;
		}
		_iter_end_1e535b96e:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	};
	if (_10152_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	};
	if (_10163_append_) {
		_10180_d=jule::append(_10116_dst,_10713_a.slice(_10813_i));
		return std::make_tuple(_10180_d,_10191_s);
	};
	_10191_s=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return std::make_tuple(_10180_d,_10191_s);
}



inline jule::Str _1e27020d1_RealKindOf(jule::Str _4519_kind) {
	{
		auto &_match_expr{ _4519_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1e53772d6:;
			{
				return _1e26d06b9_SysInt;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1e537734c:;
			{
				return _1e2724c91_SysUint;
			}
		}
		else {
			_case_begin_1e53771b5:;
			{
				return _4519_kind;
			}
		}
		_match_end_1e537710a:;
	};
}



inline jule::I64 _1e2708813_BitsizeOf(jule::Str _5918_k) {
	{
		auto &_match_expr{ _5918_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1e5378a68:;
			{
				return 8LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_1e5378ace:;
			{
				return 16LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_1e53783c5:;
			{
				return 32LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_1e537843b:;
			{
				return 64LL;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3)) {
			_case_begin_1e53784a2:;
			{
				return _1e26d018b_BitSize;
			}
		}
		else {
			_case_begin_1e537835e:;
			{
				return -1LL;
			}
		}
		_match_end_1e53780b7:;
	};
}



inline jule::Str _1e272ca9b_IntFromBits(jule::I64 _8620_bits) {
	{
		auto &_match_expr{ _8620_bits };
		
		if (_match_expr == 8LL) {
			_case_begin_1e537a680:;
			{
				return jule::Str("i8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1e537a6e6:;
			{
				return jule::Str("i16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1e537a75c:;
			{
				return jule::Str("i32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1e537a86c:;
			{
				return jule::Str("i64", 3);
			}
		}
		else {
			_case_begin_1e5379a14:;
			{
				return jule::Str();
			}
		}
		_match_end_1e537a55e:;
	};
}



inline jule::Str _1e273e9ae_UintFromBits(jule::I64 _10421_bits) {
	{
		auto &_match_expr{ _10421_bits };
		
		if (_match_expr == 8LL) {
			_case_begin_1e537ba05:;
			{
				return jule::Str("u8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1e537ba6b:;
			{
				return jule::Str("u16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1e537bad2:;
			{
				return jule::Str("u32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1e537bdce:;
			{
				return jule::Str("u64", 3);
			}
		}
		else {
			_case_begin_1e537b076:;
			{
				return jule::Str();
			}
		}
		_match_end_1e537ae33:;
	};
}



inline jule::Str _1e27955c5_FloatFromBits(jule::I64 _12222_bits) {
	{
		auto &_match_expr{ _12222_bits };
		
		if (_match_expr == 32LL) {
			_case_begin_1e537cee0:;
			{
				return jule::Str("f32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1e537d056:;
			{
				return jule::Str("f64", 3);
			}
		}
		else {
			_case_begin_1e537c5b6:;
			{
				return jule::Str();
			}
		}
		_match_end_1e537c473:;
	};
}



inline jule::Bool _1e27d5505_CheckBitFloat(jule::Str _15022_val, jule::I64 _15032_bit) {
	({
		auto except = _1e31c062b_ParseFloat(_15022_val,_15032_bit);
		(except.ok()) ? (except.result) : ({{
			return false;
		} jule::F64();});
	});
	return true;
}



inline jule::I64 _1e27d6638_BitsizeOfFloat(jule::F64 _16023_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16023_x) && (_16023_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1e5381ac6:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1e53829c8:;
			{
				return 64LL;
			}
		}
		_match_end_1e5382d2a:;
	};
}



inline jule::I64 _1e27db792_BitsizeOfInt(jule::I64 _17621_x) {
	{
		
		if (((-128LL <= _17621_x) && (_17621_x <= 127LL))) {
			_case_begin_1e5383ed5:;
			{
				return 8LL;
			}
		}
		else if (((-32768LL <= _17621_x) && (_17621_x <= 32767LL))) {
			_case_begin_1e538404b:;
			{
				return 16LL;
			}
		}
		else if (((-2147483648LL <= _17621_x) && (_17621_x <= 2147483647LL))) {
			_case_begin_1e53840c3:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1e5383ca4:;
			{
				return 64LL;
			}
		}
		_match_end_1e5383bc7:;
	};
}



inline jule::I64 _1e27e18eb_BitsizeOfUint(jule::U64 _19622_x) {
	{
		
		if ((_19622_x <= 255LLU)) {
			_case_begin_1e5385d50:;
			{
				return 8LL;
			}
		}
		else if ((_19622_x <= 65535LLU)) {
			_case_begin_1e5385db6:;
			{
				return 16LL;
			}
		}
		else if ((_19622_x <= 4294967295LLU)) {
			_case_begin_1e5385e3d:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1e5385c95:;
			{
				return 64LL;
			}
		}
		_match_end_1e53863c2:;
	};
}



inline void _1e26d1412_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _20a375d08_Arch };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_1e5386cb8:;
				{
					_1e26d018b_BitSize=64LL;
					_1e26d06b9_SysInt=jule::Str("i64", 3);
					_1e2724c91_SysUint=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_1e53875d2:;
				{
					_1e26d018b_BitSize=32LL;
					_1e26d06b9_SysInt=jule::Str("i32", 3);
					_1e2724c91_SysUint=jule::Str("u32", 3);
				}
			}
			_match_end_1e5386bdb:;
		};
	};
}



inline void _1e2794e54_init(void) {
	_1e26d1412_UpdateTarget();
}



inline jule::F64 _1e31c8a74_Min(jule::Str _6116_k) {
	_6116_k=_1e27020d1_RealKindOf(_6116_k);
	{
		auto &_match_expr{ _6116_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1e538a42b:;
			{
				return -128LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1e538a492:;
			{
				return -32768LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1e5389dcb:;
			{
				return -2147483648LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1e5389e53:;
			{
				return jule::MIN_I64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1e5389eca:;
			{
				return -340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1e538a052:;
			{
				return jule::MIN_F64;
			}
		}
		else {
			_case_begin_1e5387e2e:;
			{
				return 0LL;
			}
		}
		_match_end_1e5387c42:;
	};
}



inline jule::F64 _1e31c8ba6_Max(jule::Str _8316_k) {
	_8316_k=_1e27020d1_RealKindOf(_8316_k);
	{
		auto &_match_expr{ _8316_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1e538a1c8:;
			{
				return 127LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1e538bb25:;
			{
				return 32767LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1e538bb8b:;
			{
				return 2147483647LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1e538bc02:;
			{
				return jule::MAX_I64;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1e538bc68:;
			{
				return 255LL;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1e538becc:;
			{
				return 65535LL;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1e538c043:;
			{
				return 4294967295LL;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1e538c0a9:;
			{
				return jule::MAX_U64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1e538c131:;
			{
				return 340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1e538c1a8:;
			{
				return jule::MAX_F64;
			}
		}
		else {
			_case_begin_1e538b98d:;
			{
				return 0LL;
			}
		}
		_match_end_1e538a8e3:;
	};
}



inline jule::Bool _1e31c8eb4_IsI8Compatible(jule::Str _627_k) {
	return (_627_k == jule::Str("i8", 2));
}



inline jule::Bool _1e31c90e6_IsI16Compatible(jule::Str _1128_k) {
	return ((_1128_k == jule::Str("i8", 2)) || (_1128_k == jule::Str("i16", 3)));
}



inline jule::Bool _1e31c9228_IsI32Compatible(jule::Str _1728_k) {
	return ((((_1728_k == jule::Str("i8", 2)) || (_1728_k == jule::Str("i16", 3))) || (_1728_k == jule::Str("i32", 3))) || (_1728_k == jule::Str("u8", 2)));
}



inline jule::Bool _1e31c935a_IsI64Compatible(jule::Str _2528_k) {
	return ((((_2528_k == jule::Str("i8", 2)) || (_2528_k == jule::Str("i16", 3))) || (_2528_k == jule::Str("i32", 3))) || (_2528_k == jule::Str("i64", 3)));
}



inline jule::Bool _1e31c948c_IsU8Compatible(jule::Str _3327_k) {
	return (_3327_k == jule::Str("u8", 2));
}



inline jule::Bool _1e31c95be_IsU16Compatible(jule::Str _3828_k) {
	return ((_3828_k == jule::Str("u8", 2)) || (_3828_k == jule::Str("u16", 3)));
}



inline jule::Bool _1e31c9701_IsU32Compatible(jule::Str _4328_k) {
	return (((_4328_k == jule::Str("u8", 2)) || (_4328_k == jule::Str("u16", 3))) || (_4328_k == jule::Str("u32", 3)));
}



inline jule::Bool _1e31c9833_IsU64Compatible(jule::Str _5028_k) {
	return ((((_5028_k == jule::Str("u8", 2)) || (_5028_k == jule::Str("u16", 3))) || (_5028_k == jule::Str("u32", 3))) || (_5028_k == jule::Str("u64", 3)));
}



inline jule::Bool _1e31c9965_IsF32Compatible(jule::Str _5828_k) {
	return (_5828_k == jule::Str("f32", 3));
}



inline jule::Bool _1e31c9b74_IsF64Compatible(jule::Str _6328_k) {
	return (_6328_k == jule::Str("f64", 3));
}



inline jule::Bool _1e31c9eb5_TypesAreCompatible(jule::Str _7031_k1, jule::Str _7040_k2) {
	{
		auto &_match_expr{ _7031_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1e539569a:;
			{
				return true;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1e539590e:;
			{
				return (_7040_k2 == jule::Str("int", 3));
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1e5395975:;
			{
				return (_7040_k2 == jule::Str("uintptr", 7));
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1e53959db:;
			{
				return (_7040_k2 == jule::Str("uint", 4));
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1e5395a52:;
			{
				return _1e31c8eb4_IsI8Compatible(_7040_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1e5395ab8:;
			{
				return _1e31c90e6_IsI16Compatible(_7040_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1e5395b2e:;
			{
				return _1e31c9228_IsI32Compatible(_7040_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1e5395b95:;
			{
				return _1e31c935a_IsI64Compatible(_7040_k2);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1e5395c1c:;
			{
				return _1e31c948c_IsU8Compatible(_7040_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1e5395c83:;
			{
				return _1e31c95be_IsU16Compatible(_7040_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1e5395d0a:;
			{
				return _1e31c9701_IsU32Compatible(_7040_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1e5395d82:;
			{
				return _1e31c9833_IsU64Compatible(_7040_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1e5395e09:;
			{
				return _1e31c9965_IsF32Compatible(_7040_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1e5395e81:;
			{
				return _1e31c9b74_IsF64Compatible(_7040_k2);
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1e5396008:;
			{
				return (_7040_k2 == jule::Str("bool", 4));
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1e5396080:;
			{
				return (_7040_k2 == jule::Str("str", 3));
			}
		}
		else {
			_case_begin_1e5395458:;
			{
				return false;
			}
		}
		_match_end_1e539538c:;
	};
}



inline jule::Bool _1e31ca25c_IsI16Greater(jule::Str _11025_k) {
	return (_11025_k == jule::Str("i8", 2));
}



inline jule::Bool _1e31ca504_IsI32Greater(jule::Str _11525_k) {
	return ((_11525_k == jule::Str("i8", 2)) || (_11525_k == jule::Str("i16", 3)));
}



inline jule::Bool _1e31ca79b_IsI64Greater(jule::Str _12025_k) {
	return (((_12025_k == jule::Str("i8", 2)) || (_12025_k == jule::Str("i16", 3))) || (_12025_k == jule::Str("i32", 3)));
}



inline jule::Bool _1e31caa43_IsU16Greater(jule::Str _12725_k) {
	return (_12725_k == jule::Str("u8", 2));
}



inline jule::Bool _1e31cae94_IsU32Greater(jule::Str _13225_k) {
	return ((_13225_k == jule::Str("u8", 2)) || (_13225_k == jule::Str("u16", 3)));
}



inline jule::Bool _1e31cb23b_IsU64Greater(jule::Str _13825_k) {
	return (((_13825_k == jule::Str("u8", 2)) || (_13825_k == jule::Str("u16", 3))) || (_13825_k == jule::Str("u32", 3)));
}



inline jule::Bool _1e31cb4d3_IsF32Greater(jule::Str _14521_k) {
	return (_14521_k != jule::Str("f64", 3));
}



inline jule::Bool _1e31cb77a_IsF64Greater(jule::Str _15021_k) {
	return true;
}



inline jule::Bool _1e31cbabb_IsGreater(jule::Str _15522_k1, jule::Str _15531_k2) {
	{
		auto &_match_expr{ _15522_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1e539de9a:;
			{
				return _1e31ccb00_IsSigInt(_15531_k2);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1e539e011:;
			{
				return _1e31ccddb_IsUnsigInt(_15531_k2);
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1e539e20e:;
			{
				return _1e31ccddb_IsUnsigInt(_15531_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1e539e275:;
			{
				return _1e31ca25c_IsI16Greater(_15531_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1e539e2db:;
			{
				return _1e31ca504_IsI32Greater(_15531_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1e539e363:;
			{
				return _1e31ca79b_IsI64Greater(_15531_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1e539e3da:;
			{
				return _1e31caa43_IsU16Greater(_15531_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1e539e462:;
			{
				return _1e31cae94_IsU32Greater(_15531_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1e539e53e:;
			{
				return _1e31cb23b_IsU64Greater(_15531_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1e539e5a5:;
			{
				return _1e31cb4d3_IsF32Greater(_15531_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1e539e61b:;
			{
				return _1e31cb77a_IsF64Greater(_15531_k2);
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1e539e682:;
			{
				return true;
			}
		}
		else {
			_case_begin_1e539dc58:;
			{
				return false;
			}
		}
		_match_end_1e539d63c:;
	};
}



inline jule::Bool _1e31ccb00_IsSigInt(jule::Str _2721_k) {
	return (((((_2721_k == jule::Str("i8", 2)) || (_2721_k == jule::Str("i16", 3))) || (_2721_k == jule::Str("i32", 3))) || (_2721_k == jule::Str("i64", 3))) || (_2721_k == jule::Str("int", 3)));
}



inline jule::Bool _1e31ccddb_IsUnsigInt(jule::Str _3623_k) {
	return ((((((_3623_k == jule::Str("u8", 2)) || (_3623_k == jule::Str("u16", 3))) || (_3623_k == jule::Str("u32", 3))) || (_3623_k == jule::Str("u64", 3))) || (_3623_k == jule::Str("uint", 4))) || (_3623_k == jule::Str("uintptr", 7)));
}



inline jule::Bool _1e31cd183_IsInt(jule::Str _4614_k) {
	return (_1e31ccb00_IsSigInt(_4614_k) || _1e31ccddb_IsUnsigInt(_4614_k));
}



inline jule::Bool _1e31cd4a2_IsFloat(jule::Str _5116_k) {
	return ((_5116_k == jule::Str("f32", 3)) || (_5116_k == jule::Str("f64", 3)));
}



inline jule::Bool _1e31cd749_IsNum(jule::Str _5614_k) {
	return (_1e31cd183_IsInt(_5614_k) || _1e31cd4a2_IsFloat(_5614_k));
}



inline jule::Bool _1e31cd9e1_IsSigNum(jule::Str _6117_k) {
	return (_1e31ccb00_IsSigInt(_6117_k) || _1e31cd4a2_IsFloat(_6117_k));
}



inline jule::Bool _1e30e18e3_IsAscii(jule::I32 _1016_r) {
	;
	return (_1016_r <= 127LL);
}



inline jule::I32 _1e30e1a25_ToRune(jule::Slice<jule::U8> _1815_bytes) {
	if ((_1815_bytes.len() == 0LL)) {
		return 0LL;
	};
	jule::I32 _2313_r = 0LL;;
	if (((_1815_bytes[0LL] == '\\') && (_1815_bytes.len() > 1LL))) {
		jule::I64 _2517_i = 0LL;;
		_2313_r=static_cast<jule::I32>(_1e30e251a_runeFromEsqSeq(_1815_bytes,_2517_i));
	} else {
		std::tie(_2313_r,std::ignore) = _2164948dd_DecodeRune(_1815_bytes);
	};
	return _2313_r;
}



inline jule::Str _1e30e1b9b_ToRawStr(jule::Slice<jule::U8> _3717_bytes) {
	return static_cast<jule::Str>(_3717_bytes);
}



inline jule::Str _1e30e1e65_ToStr(jule::Slice<jule::U8> _4214_bytes) {
	if ((_4214_bytes.len() == 0LL)) {
		return jule::Str();
	};
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL,_4214_bytes.len());;
	jule::I64 _4813_i = 0LL;;
	while ((_4813_i < _4214_bytes.len())) {
		{
			jule::U8 _5013_b = _4214_bytes[_4813_i];;
			if ((_5013_b == '\\')) {
				_4713_s=jule::append(_4713_s,_1e30e285b_strEsqSeq(_4214_bytes,_4813_i));
			} else {
				jule::I32 _5418_r;;
				jule::I64 _5421_size;;
				std::tie(_5418_r,_5421_size) = _2164948dd_DecodeRune(_4214_bytes.slice(_4813_i));
				_4813_i+=_5421_size;
				_4713_s=_216495c52_AppendRune(_4713_s,_5418_r);
			};
		}
	_iter_next_1e53ac1b7:;
	}
	_iter_end_1e53ac1b7:;;
	return static_cast<jule::Str>(_4713_s);
}



inline std::tuple<jule::U8,jule::Bool> _1e30e220c_tryBtoaCommonEsq(jule::Slice<jule::U8> _6221_bytes) {
	jule::U8 _6238_seq = jule::U8();
	jule::Bool _6249_ok = jule::Bool();
	if (((_6221_bytes.len() < 2LL) || (_6221_bytes[0LL] != '\\'))) {
		return std::make_tuple(_6238_seq,_6249_ok);
	};
	{
		auto &_match_expr{ _6221_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1e53b1cd2:;
			{
				_6238_seq='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1e53b1d48:;
			{
				_6238_seq='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1e53b1dae:;
			{
				_6238_seq='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1e53b1e25:;
			{
				_6238_seq='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1e53b1e9c:;
			{
				_6238_seq='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1e53b2024:;
			{
				_6238_seq='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1e53b209b:;
			{
				_6238_seq='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1e53b2123:;
			{
				_6238_seq='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1e53b219a:;
			{
				_6238_seq='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1e53b2222:;
			{
				_6238_seq='\v';
			}
		}
		_match_end_1e53b1bb1:;
	};
	_6249_ok=(_6238_seq != 0LLU);
	return std::make_tuple(_6238_seq,_6249_ok);
}



inline jule::I32 _1e30e251a_runeFromEsqSeq(jule::Slice<jule::U8> _9219_bytes, jule::I64& _9239_i) {
	jule::U8 _9310_b;;
	jule::Bool _9313_ok;;
	std::tie(_9310_b,_9313_ok) = _1e30e220c_tryBtoaCommonEsq(_9219_bytes.slice(_9239_i));
	(_9239_i)++;
	if (_9313_ok) {
		(_9239_i)++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9310_b));
	};
	{
		auto &_match_expr{ _9219_bytes[_9239_i] };
		
		if (_match_expr == 'u') {
			_case_begin_1e53b78a9:;
			{
				;
				jule::I32 _10313_r = static_cast<jule::I32>(({
					auto except = _1e2dd78c6_ParseUint(static_cast<jule::Str>(_9219_bytes.slice((_9239_i + 1LL),(_9239_i + 5LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:103:22"));
					(except.result);
				}));;
				_9239_i+=5LL;
				return _10313_r;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1e53b66bb:;
			{
				;
				jule::I32 _10813_r = static_cast<jule::I32>(({
					auto except = _1e2dd78c6_ParseUint(static_cast<jule::Str>(_9219_bytes.slice((_9239_i + 1LL),(_9239_i + 9LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:108:22"));
					(except.result);
				}));;
				_9239_i+=9LL;
				return _10813_r;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1e53b8190:;
			{
				;
				jule::Slice<jule::U8> _11313_seq = _9219_bytes.slice((_9239_i + 1LL),(_9239_i + 3LL));;
				_9239_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1e2dd78c6_ParseUint(static_cast<jule::Str>(_11313_seq),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:115:18"));
					(except.result);
				})));
			}
		}
		else {
			_case_begin_1e53b6886:;
			{
				;
				jule::Slice<jule::U8> _11813_seq = _9219_bytes.slice(_9239_i,(_9239_i + 3LL));;
				_9239_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1e2dd78c6_ParseUint(static_cast<jule::Str>(_11813_seq.slice(1LL)),8LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:120:18"));
					(except.result);
				})));
			}
		}
		_match_end_1e53b6831:;
	};
}



inline jule::Slice<jule::U8> _1e30e285b_strEsqSeq(jule::Slice<jule::U8> _12414_bytes, jule::I64& _12434_i) {
	jule::I32 _1259_r = _1e30e251a_runeFromEsqSeq(_12414_bytes,_12434_i);;
	if ((_1259_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1259_r))});
	};
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1259_r));
}



inline jule::I64 _1e328910c_findFormatPrefix(jule::Slice<jule::U8>& _922_bytes, jule::I64& _938_start) {
	jule::I64 _1013_i = _938_start;;
	while ((_1013_i < _922_bytes.len())) {
		{
			jule::I32 _1214_r;;
			jule::I64 _1217_size;;
			std::tie(_1214_r,_1217_size) = _2164948dd_DecodeRune(_922_bytes.slice(_1013_i));
			if ((_1214_r == '{')) {
				return _1013_i;
			};
			_1013_i+=_1217_size;
		}
	_iter_next_1e5408a4e:;
	}
	_iter_end_1e5408a4e:;;
	return -1LL;
}



inline jule::Slice<jule::U8> _1e32881a5_getFormatRange(jule::I64& _2624_i, jule::Slice<jule::U8>& _2637_bytes) {
	jule::I64 _279_start = _2624_i;;
	jule::I64 _2813_braces = 0LL;;
	while ((_2624_i < _2637_bytes.len())) {
		{
			jule::I32 _3014_r;;
			jule::I64 _3017_size;;
			std::tie(_3014_r,_3017_size) = _2164948dd_DecodeRune(_2637_bytes.slice(_2624_i));
			_2624_i+=_3017_size;
			{
				auto &_match_expr{ _3014_r };
				
				if (_match_expr == '{') {
					_case_begin_1e540b876:;
					{
						(_2813_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1e540b8ed:;
					{
						(_2813_braces)--;
						if ((_2813_braces == 0LL)) {
							return _2637_bytes.slice(_279_start,_2624_i);
						};
					}
				}
				_match_end_1e540b469:;
			};
		}
	_iter_next_1e540a9b8:;
	}
	_iter_end_1e540a9b8:;;
	return nullptr;
}



inline jule::Slice<jule::U8> _1e326c596_fmtByDefault(jule::Any& _4518_arg) {
	if ((_4518_arg == nullptr)) {
		return jule::Slice<jule::U8>::make({'<','n','i','l','>'});
	};
	{
		auto &_match_expr{ _4518_arg };
		
		if (_match_expr.type_is<jule::F32>()) {
			_case_begin_1e540d8bc:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e2aeb233_FmtFloat(static_cast<jule::F64>(static_cast<jule::F64>(_4518_arg.operator jule::F32())),'g',-1LL,32LL));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1e540d56a:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e2aeb233_FmtFloat(static_cast<jule::F64>(_4518_arg.operator jule::F64()),'g',-1LL,64LL));
			}
		}
		else if (_match_expr.type_is<jule::I8>()) {
			_case_begin_1e540bc83:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e31c5257_FmtInt(static_cast<jule::I64>(_4518_arg.operator jule::I8()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I16>()) {
			_case_begin_1e540bce9:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e31c5257_FmtInt(static_cast<jule::I64>(_4518_arg.operator jule::I16()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1e540d25c:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e31c5257_FmtInt(static_cast<jule::I64>(_4518_arg.operator jule::I32()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1e540d2c3:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e31c5257_FmtInt(static_cast<jule::I64>(_4518_arg.operator jule::I64()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1e540d339:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e31c4dc2_FmtUint(static_cast<jule::U64>(_4518_arg.operator jule::U8()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U16>()) {
			_case_begin_1e540d3a0:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e31c4dc2_FmtUint(static_cast<jule::U64>(_4518_arg.operator jule::U16()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U32>()) {
			_case_begin_1e540d416:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e31c4dc2_FmtUint(static_cast<jule::U64>(_4518_arg.operator jule::U32()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1e540d944:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e31c4dc2_FmtUint(static_cast<jule::U64>(_4518_arg.operator jule::U64()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1e540d9aa:;
			{
				return static_cast<jule::Slice<jule::U8>>(_4518_arg.operator jule::Str());
			}
		}
		else if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1e540da21:;
			{
				if (_4518_arg.operator jule::Bool()) {
					return jule::Slice<jule::U8>::make({'t','r','u','e'});
				};
				return jule::Slice<jule::U8>::make({'f','a','l','s','e'});
			}
		}
		else {
			_case_begin_1e540ab72:;
			{
				return static_cast<jule::Slice<jule::U8>>(jule::to_str(_4518_arg));
			}
		}
		_match_end_1e540ab1c:;
	};
}



inline jule::Slice<jule::U8> _1e3288abd_applyFmtByDefault(jule::I64& _8327_j, jule::Slice<jule::Any>& _8336_args) {
	jule::Any _849_arg = _8336_args[_8327_j];;
	(_8327_j)++;
	return _1e326c596_fmtByDefault(_849_arg);
}



inline jule::Slice<jule::U8> _1e328559d_applyFmt(jule::Slice<jule::U8>& _9118_fmt, jule::I64& _9136_j, jule::Slice<jule::Any>& _9145_args) {
	if ((_9118_fmt.len() == 2LL)) {
		return _1e3288abd_applyFmtByDefault(_9136_j,_9145_args);
	};
	if (((_9118_fmt.len() == 4LL) && (_9118_fmt == jule::Slice<jule::U8>::make({'{','{','}','}'})))) {
		return jule::Slice<jule::U8>::make({'{','}'});
	};
	return _9118_fmt;
}



inline jule::Slice<jule::U8> _1e3287e96_formatBytes(jule::Str _10516_fmt, jule::Slice<jule::Any> _10526_args) {
	jule::Slice<jule::U8> _10613_fmtBytes = static_cast<jule::Slice<jule::U8>>(_10516_fmt);;
	if ((_10526_args.len() == 0LL)) {
		return _10613_fmtBytes;
	};
	jule::Slice<jule::U8> _11213_bytes = jule::Slice<jule::U8>::alloc(0LL,_10516_fmt.len());;
	jule::I64 _11413_j = 0LL;;
	jule::I64 _11513_last = 0LL;;
	jule::I64 _11613_i = _1e328910c_findFormatPrefix(_10613_fmtBytes,_11513_last);;
	for (; (_11613_i != -1LL); _11613_i=static_cast<jule::I64>(_1e328910c_findFormatPrefix(_10613_fmtBytes,_11613_i))) {
		{
			_11213_bytes=jule::append(_11213_bytes,_10613_fmtBytes.slice(_11513_last,_11613_i));
			jule::Slice<jule::U8> _11917_format = _1e32881a5_getFormatRange(_11613_i,_10613_fmtBytes);;
			if ((_11917_format == nullptr)) {
				goto _iter_next_1e5418685;
			};
			_11213_bytes=jule::append(_11213_bytes,_1e328559d_applyFmt(_11917_format,_11413_j,_10526_args));
			if ((_11413_j >= _10526_args.len())) {
				_11213_bytes=jule::append(_11213_bytes,_10613_fmtBytes.slice(_11613_i));
				_11513_last=static_cast<jule::I64>(_10613_fmtBytes.len());
				goto _iter_end_1e5418685;
			};
			_11513_last=_11613_i;
		}
	_iter_next_1e5418685:;
	}
	_iter_end_1e5418685:;;
	if ((_11513_last < _10613_fmtBytes.len())) {
		_11213_bytes=jule::append(_11213_bytes,_10613_fmtBytes.slice(_11513_last));
	};
	return _11213_bytes;
}



inline jule::Str _1e3284c51_Format(jule::Str _16515_fmt, jule::Slice<jule::Any> _16525_args) {
	return static_cast<jule::Str>(_1e3287e96_formatBytes(_16515_fmt,jule::Any(_16525_args)));
}



inline jule::Bool _1e2591107_parameterUsesGenerics(jule::Ptr<_1e2589a07_Param>& _37427_p, jule::Slice<jule::Ptr<_1e2522c6a_GenericDecl>>& _37439_generics) {
	if (_1e258a134_IsSelf(_37427_p.ptr())) {
		return false;
	};
	return _1e314b6a6_kindUsesGenerics(_37427_p.get()._field_Kind.get()._field_Decl.get()._field_Kind,_37439_generics);
}



inline jule::Ptr<_1e3139012_TypeSymbol> _1e2593626_buildType(jule::Ptr<_1e2515686_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1e3139012_TypeSymbol>(_1e3139012_TypeSymbol{._field_Decl=_9418_t, });
}



inline jule::Ptr<_1e310a115_Value> _1e2593912_buildExpr(jule::Ptr<_1e2519ba7_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1e310a115_Value>(_1e310a115_Value{._field_Expr=_10318_expr, });
}



inline jule::Ptr<_1e31341b6_TypeAlias> _1e2593ba9_buildTypeAlias(jule::Ptr<_1e252bcda_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1e31341b6_TypeAlias>(_1e31341b6_TypeAlias{._field_Scope=_11223_decl.get()._field_Scope, ._field_Public=_11223_decl.get()._field_Public, ._field_CppLinked=_11223_decl.get()._field_CppLinked, ._field_Token=_11223_decl.get()._field_Token, ._field_Ident=_11223_decl.get()._field_Ident, ._field_Kind=_1e2593626_buildType(_11223_decl.get()._field_Kind), });
}



inline jule::Ptr<_1e24e8339_Field> _1e2593ec8_buildField(jule::Ptr<_1e25303c6_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1e24e8339_Field>(_1e24e8339_Field{._field_Token=_12319_decl.get()._field_Token, ._field_Public=_12319_decl.get()._field_Public, ._field_Mutable=_12319_decl.get()._field_Mutable, ._field_Ident=_12319_decl.get()._field_Ident, ._field_Kind=_1e2593626_buildType(_12319_decl.get()._field_Kind), ._field_Default=_12319_decl.get()._field_Default});
}



inline jule::Slice<jule::Ptr<_1e24e8339_Field>> _1e2594270_buildFields(jule::Slice<jule::Ptr<_1e25303c6_FieldDecl>>& _13421_decls) {
	jule::Slice<jule::Ptr<_1e24e8339_Field>> _13513_fields = jule::Slice<jule::Ptr<_1e24e8339_Field>>::alloc(0LL,_13421_decls.len());;
	{
		auto &expr = _13421_decls;
		auto it = expr.begin();
		_iter_begin_1e566b2bc:;
		if (it != expr.end()) {
			jule::Ptr<_1e25303c6_FieldDecl> _13617_decl = *it;
			{
				_13513_fields = jule::alloc_for_append(_13513_fields,1);_13513_fields.__push(_1e2593ec8_buildField(_13617_decl));;
			}
			_iter_next_1e566b2bc:;
			++it;
			goto _iter_begin_1e566b2bc;
		}
		_iter_end_1e566b2bc:;
	};
	return _13513_fields;
}



inline jule::Ptr<_1e2505d6e_Struct> _1e2594517_buildStruct(jule::Ptr<_1e2530c34_StructDecl> _14220_decl) {
	return jule::new_ptr<_1e2505d6e_Struct>(_1e2505d6e_Struct{._field_Token=_14220_decl.get()._field_Token, ._field_Ident=_14220_decl.get()._field_Ident, ._field_Fields=_1e2594270_buildFields(_14220_decl.get()._field_Fields), ._field_Public=_14220_decl.get()._field_Public, ._field_CppLinked=_14220_decl.get()._field_CppLinked, ._field_Directives=_14220_decl.get()._field_Directives, ._field_Generics=_14220_decl.get()._field_Generics, });
}



inline jule::Ptr<_1e2589a07_Param> _1e25947ae_buildParam(jule::Ptr<_1e252617a_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1e2589a07_Param>(_1e2589a07_Param{._field_Token=_15419_decl.get()._field_Token, ._field_Mutable=_15419_decl.get()._field_Mutable, ._field_Variadic=_15419_decl.get()._field_Variadic, ._field_Reference=_15419_decl.get()._field_Reference, ._field_Kind=_1e2593626_buildType(_15419_decl.get()._field_Kind), ._field_Ident=_15419_decl.get()._field_Ident});
}



inline jule::Slice<jule::Ptr<_1e2589a07_Param>> _1e2594b33_buildParams(jule::Slice<jule::Ptr<_1e252617a_ParamDecl>>& _16521_decls) {
	jule::Slice<jule::Ptr<_1e2589a07_Param>> _16613_params = jule::Slice<jule::Ptr<_1e2589a07_Param>>::alloc(0LL,_16521_decls.len());;
	{
		auto &expr = _16521_decls;
		auto it = expr.begin();
		_iter_begin_1e566e15a:;
		if (it != expr.end()) {
			jule::Ptr<_1e252617a_ParamDecl> _16717_decl = *it;
			{
				_16613_params = jule::alloc_for_append(_16613_params,1);_16613_params.__push(_1e25947ae_buildParam(_16717_decl));;
			}
			_iter_next_1e566e15a:;
			++it;
			goto _iter_begin_1e566e15a;
		}
		_iter_end_1e566e15a:;
	};
	return _16613_params;
}



inline jule::Ptr<_1e2589331_RetType> _1e2594dca_buildRetType(jule::Ptr<_1e2518799_RetTypeDecl> _17321_decl) {
	if (((_17321_decl.get()._field_Idents == nullptr) && (_17321_decl.get()._field_Kind == nullptr))) {
		return nullptr;
	};
	return jule::new_ptr<_1e2589331_RetType>(_1e2589331_RetType{._field_Kind=_1e2593626_buildType(_17321_decl.get()._field_Kind), ._field_Idents=_17321_decl.get()._field_Idents});
}



inline jule::Ptr<_1e258b344_Fn> _1e2595172_buildFn(jule::Ptr<_1e252749a_FnDecl> _18316_decl) {
	return jule::new_ptr<_1e258b344_Fn>(_1e258b344_Fn{._field_Token=_18316_decl.get()._field_Token, ._field_Global=_18316_decl.get()._field_Global, ._field_Unsafety=_18316_decl.get()._field_Unsafety, ._field_Public=_18316_decl.get()._field_Public, ._field_CppLinked=_18316_decl.get()._field_CppLinked, ._field_Statically=_18316_decl.get()._field_Statically, ._field_Exceptional=_18316_decl.get()._field_Exceptional, ._field_Ident=_18316_decl.get()._field_Ident, ._field_Directives=_18316_decl.get()._field_Directives, ._field_Scope=_18316_decl.get()._field_Scope, ._field_Generics=_18316_decl.get()._field_Generics, ._field_Result=_1e2594dca_buildRetType(_18316_decl.get()._field_Result), ._field_Params=_1e2594b33_buildParams(_18316_decl.get()._field_Params), });
}



inline jule::Slice<jule::Ptr<_1e258b344_Fn>> _1e2595419_buildMethods(jule::Slice<jule::Ptr<_1e252749a_FnDecl>>& _20122_decls) {
	jule::Slice<jule::Ptr<_1e258b344_Fn>> _20213_methods = jule::Slice<jule::Ptr<_1e258b344_Fn>>::alloc(0LL,_20122_decls.len());;
	{
		auto &expr = _20122_decls;
		auto it = expr.begin();
		_iter_begin_1e5672aed:;
		if (it != expr.end()) {
			jule::Ptr<_1e252749a_FnDecl> _20317_decl = *it;
			{
				_20213_methods = jule::alloc_for_append(_20213_methods,1);_20213_methods.__push(_1e2595172_buildFn(_20317_decl));;
			}
			_iter_next_1e5672aed:;
			++it;
			goto _iter_begin_1e5672aed;
		}
		_iter_end_1e5672aed:;
	};
	return _20213_methods;
}



inline jule::Ptr<_1e259d246_Trait> _1e25956b1_buildTrait(jule::Ptr<_1e253133e_TraitDecl> _20919_decl) {
	return jule::new_ptr<_1e259d246_Trait>(_1e259d246_Trait{._field_Token=_20919_decl.get()._field_Token, ._field_Ident=_20919_decl.get()._field_Ident, ._field_Public=_20919_decl.get()._field_Public, ._field_Methods=_1e2595419_buildMethods(_20919_decl.get()._field_Methods), });
}



inline jule::Ptr<_1e259e896_EnumItem> _1e2595958_buildEnumItem(jule::Ptr<_1e252d649_EnumItemDecl> _21822_decl) {
	return jule::new_ptr<_1e259e896_EnumItem>(_1e259e896_EnumItem{._field_Token=_21822_decl.get()._field_Token, ._field_Ident=_21822_decl.get()._field_Ident, ._field_Value=_1e2593912_buildExpr(_21822_decl.get()._field_Expr)});
}



inline jule::Slice<jule::Ptr<_1e259e896_EnumItem>> _1e2595c00_buildEnumItems(jule::Slice<jule::Ptr<_1e252d649_EnumItemDecl>>& _22624_decls) {
	jule::Slice<jule::Ptr<_1e259e896_EnumItem>> _22713_items = jule::Slice<jule::Ptr<_1e259e896_EnumItem>>::alloc(0LL,_22624_decls.len());;
	{
		auto &expr = _22624_decls;
		auto it = expr.begin();
		_iter_begin_1e5675183:;
		if (it != expr.end()) {
			jule::Ptr<_1e252d649_EnumItemDecl> _22817_decl = *it;
			{
				_22713_items = jule::alloc_for_append(_22713_items,1);_22713_items.__push(_1e2595958_buildEnumItem(_22817_decl));;
			}
			_iter_next_1e5675183:;
			++it;
			goto _iter_begin_1e5675183;
		}
		_iter_end_1e5675183:;
	};
	return _22713_items;
}



inline jule::Ptr<_1e25a038b_Enum> _1e2595e97_buildEnum(jule::Ptr<_1e252e172_EnumDecl> _23418_decl) {
	return jule::new_ptr<_1e25a038b_Enum>(_1e25a038b_Enum{._field_Token=_23418_decl.get()._field_Token, ._field_Public=_23418_decl.get()._field_Public, ._field_Ident=_23418_decl.get()._field_Ident, ._field_Kind=_1e2593626_buildType(_23418_decl.get()._field_Kind), ._field_Items=_1e2595c00_buildEnumItems(_23418_decl.get()._field_Items)});
}



inline jule::Ptr<_1e25a13c0_TypeEnumItem> _1e25963e8_buildTypeEnumItem(jule::Ptr<_1e252eb78_TypeEnumItemDecl> _24426_decl) {
	return jule::new_ptr<_1e25a13c0_TypeEnumItem>(_1e25a13c0_TypeEnumItem{._field_Token=_24426_decl.get()._field_Token, ._field_Ident=_24426_decl.get()._field_Ident, ._field_Kind=_1e2593626_buildType(_24426_decl.get()._field_Kind)});
}



inline jule::Slice<jule::Ptr<_1e25a13c0_TypeEnumItem>> _1e2596690_buildTypeEnumItems(jule::Slice<jule::Ptr<_1e252eb78_TypeEnumItemDecl>>& _25228_decls) {
	jule::Slice<jule::Ptr<_1e25a13c0_TypeEnumItem>> _25313_items = jule::Slice<jule::Ptr<_1e25a13c0_TypeEnumItem>>::alloc(0LL,_25228_decls.len());;
	{
		auto &expr = _25228_decls;
		auto it = expr.begin();
		_iter_begin_1e567795a:;
		if (it != expr.end()) {
			jule::Ptr<_1e252eb78_TypeEnumItemDecl> _25417_decl = *it;
			{
				_25313_items = jule::alloc_for_append(_25313_items,1);_25313_items.__push(_1e25963e8_buildTypeEnumItem(_25417_decl));;
			}
			_iter_next_1e567795a:;
			++it;
			goto _iter_begin_1e567795a;
		}
		_iter_end_1e567795a:;
	};
	return _25313_items;
}



inline jule::Ptr<_1e25a1986_TypeEnum> _1e2596937_buildTypeEnum(jule::Ptr<_1e252ed76_TypeEnumDecl> _26022_decl) {
	return jule::new_ptr<_1e25a1986_TypeEnum>(_1e25a1986_TypeEnum{._field_Token=_26022_decl.get()._field_Token, ._field_Public=_26022_decl.get()._field_Public, ._field_Ident=_26022_decl.get()._field_Ident, ._field_Items=_1e2596690_buildTypeEnumItems(_26022_decl.get()._field_Items)});
}



inline jule::Ptr<_1e322a147_Var> _1e2596bce_buildVar(jule::Ptr<_1e2528479_VarDecl> _26917_decl) {
	return jule::new_ptr<_1e322a147_Var>(_1e322a147_Var{._field_Token=_26917_decl.get()._field_Token, ._field_Ident=_26917_decl.get()._field_Ident, ._field_CppLinked=_26917_decl.get()._field_CppLinked, ._field_Constant=_26917_decl.get()._field_Constant, ._field_Mutable=_26917_decl.get()._field_Mutable, ._field_Public=_26917_decl.get()._field_Public, ._field_Statically=_26917_decl.get()._field_Statically, ._field_Reference=_26917_decl.get()._field_Reference, ._field_Kind=_1e2593626_buildType(_26917_decl.get()._field_Kind), ._field_Value=_1e2593912_buildExpr(_26917_decl.get()._field_Expr), ._field_Refers=static__1e25921e6_new(), ._field_Directives=_26917_decl.get()._field_Directives, });
}



inline jule::Slice<jule::Ptr<_1e322a147_Var>> _1e2596e76_buildVars(jule::Slice<jule::Ptr<_1e2528479_VarDecl>> _28618_decls) {
	jule::Slice<jule::Ptr<_1e322a147_Var>> _28713_vars = jule::Slice<jule::Ptr<_1e322a147_Var>>::alloc(0LL,_28618_decls.len());;
	{
		auto &expr = _28618_decls;
		auto it = expr.begin();
		_iter_begin_1e567ac16:;
		if (it != expr.end()) {
			jule::Ptr<_1e2528479_VarDecl> _28817_decl = *it;
			{
				_28713_vars = jule::alloc_for_append(_28713_vars,1);_28713_vars.__push(_1e2596bce_buildVar(_28817_decl));;
			}
			_iter_next_1e567ac16:;
			++it;
			goto _iter_begin_1e567ac16;
		}
		_iter_end_1e567ac16:;
	};
	return _28713_vars;
}



inline jule::Ptr<_1e31d1bd1_Impl> _1e259721d_buildImpl(jule::Ptr<_1e2531949_Impl> _29418_decl) {
	return jule::new_ptr<_1e31d1bd1_Impl>(_1e31d1bd1_Impl{._field_Base=_29418_decl.get()._field_Base, ._field_Dest=_29418_decl.get()._field_Dest, ._field_Methods=_1e2595419_buildMethods(_29418_decl.get()._field_Methods), ._field_Statics=_1e2596e76_buildVars(_29418_decl.get()._field_Statics)});
}



inline jule::Bool _1e31d0e44_matchConstraint(jule::Str& _14221_c, jule::Ptr<_1e3134da9_TypeKind>& _14234_g) {
	{
		auto &_match_expr{ _14221_c };
		
		if (_match_expr == jule::Str("signed", 6)) {
			_case_begin_1e56d6d3d:;
			{
				jule::Ptr<_1e3139881_Prim> _14513_prim = _1e3136ebb_Prim(_14234_g.ptr());;
				if ((_14513_prim == nullptr)) {
					return false;
				};
				return _1e31cd9e1_IsSigNum(_14513_prim.get()._field_Kind);
			}
		}
		else if (_match_expr == jule::Str("unsigned", 8)) {
			_case_begin_1e56d6da4:;
			{
				jule::Ptr<_1e3139881_Prim> _15113_prim = _1e3136ebb_Prim(_14234_g.ptr());;
				if ((_15113_prim == nullptr)) {
					return false;
				};
				return _1e31ccddb_IsUnsigInt(_15113_prim.get()._field_Kind);
			}
		}
		else if (_match_expr == jule::Str("float", 5)) {
			_case_begin_1e56d6ed6:;
			{
				jule::Ptr<_1e3139881_Prim> _15713_prim = _1e3136ebb_Prim(_14234_g.ptr());;
				if ((_15713_prim == nullptr)) {
					return false;
				};
				return _1e31cd4a2_IsFloat(_15713_prim.get()._field_Kind);
			}
		}
		else if (_match_expr == jule::Str("numeric", 7)) {
			_case_begin_1e56d704c:;
			{
				jule::Ptr<_1e3139881_Prim> _16313_prim = _1e3136ebb_Prim(_14234_g.ptr());;
				if ((_16313_prim == nullptr)) {
					return false;
				};
				return _1e31cd749_IsNum(_16313_prim.get()._field_Kind);
			}
		}
		else if (_match_expr == jule::Str("mutable", 7)) {
			_case_begin_1e56d70b3:;
			{
				return _1e31362a6_Mutable(_14234_g.ptr());
			}
		}
		else if (_match_expr == jule::Str("immutable", 9)) {
			_case_begin_1e56d7129:;
			{
				return (!(_1e31362a6_Mutable(_14234_g.ptr())));
			}
		}
		else if (_match_expr == jule::Str("comparable", 10)) {
			_case_begin_1e56d7190:;
			{
				return true;
			}
		}
		else if (_match_expr == jule::Str("ordered", 7)) {
			_case_begin_1e56d7206:;
			{
				jule::Ptr<_1e3139881_Prim> _17513_prim = _1e3136ebb_Prim(_14234_g.ptr());;
				if ((_17513_prim != nullptr)) {
					return (_1e31cd749_IsNum(_17513_prim.get()._field_Kind) || _1e313cab5_IsStr(_17513_prim.ptr()));
				};
				if ((_1e3137494_Ptr(_14234_g.ptr()) != nullptr)) {
					return true;
				};
				jule::Ptr<_1e253220d_StructIns> _18213_s = _1e313841d_Struct(_14234_g.ptr());;
				if ((_18213_s != nullptr)) {
					return ((((_18213_s.get()._field_Operators._field_Gt != nullptr) && (_18213_s.get()._field_Operators._field_GtEq != nullptr)) && (_18213_s.get()._field_Operators._field_Lt != nullptr)) && (_18213_s.get()._field_Operators._field_LtEq != nullptr));
				};
				jule::Ptr<_1e25a038b_Enum> _18913_enm = _1e3137708_Enum(_14234_g.ptr());;
				if ((_18913_enm != nullptr)) {
					return _1e31cd749_IsNum(_1e31352a5_Str(_18913_enm.get()._field_Kind.get()._field_Kind.ptr()));
				};
				return false;
			}
		}
		else {
			_case_begin_1e56d6a63:;
			{
				return false;
			}
		}
		_match_end_1e56d69a8:;
	};
}



inline jule::Bool _1e31d1230_isBuiltinConstraint(jule::Str& _19925_ident) {
	{
		auto &expr = _1e31ce3b5_builtinConstraints;
		auto it = expr.begin();
		_iter_begin_1e56dccbc:;
		if (it != expr.end()) {
			jule::Str &_20012_bc = *it;
			{
				if ((_19925_ident == _20012_bc)) {
					return true;
				};
			}
			_iter_next_1e56dccbc:;
			++it;
			goto _iter_begin_1e56dccbc;
		}
		_iter_end_1e56dccbc:;
	};
	return false;
}



inline jule::Ptr<_1e31dd89c_scopeChecker> _1e31d3c6b_newScopeCheckerBase(jule::Ptr<_1e320d768_Sema>& _5929_s, jule::Ptr<_1e258dee5_FnIns> _5943_owner) {
	return jule::new_ptr<_1e31dd89c_scopeChecker>(_1e31dd89c_scopeChecker{._field_s=_5929_s, ._field_owner=_5943_owner, ._field_table=jule::new_ptr<_1e310432e_SymbolTable>(), });
}



inline jule::Ptr<_1e31dd89c_scopeChecker> _1e31d4101_newScopeChecker(jule::Ptr<_1e320d768_Sema>& _6725_s, jule::Ptr<_1e258dee5_FnIns> _6739_owner) {
	jule::Ptr<_1e31dd89c_scopeChecker> _6813_base = _1e31d3c6b_newScopeCheckerBase(_6725_s,_6739_owner);;
	_6813_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1e31dc615_scopeLabel>>>(nullptr);
	_6813_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1e31dca88_scopeGoto>>>(nullptr);
	return _6813_base;
}



inline jule::Ptr<_1e31dc615_scopeLabel> _1e31d4442_findLabelParent(jule::Str _7720_ident, jule::Ptr<_1e31dd89c_scopeChecker> _7736_scope) {
	jule::Ptr<_1e31dc615_scopeLabel> _7813_label = _1e31e2340_findLabelScope(_7736_scope, _7720_ident);;
	while ((_7813_label == nullptr)) {
		{
			if (((_7736_scope.get()._field_parent == nullptr) || (_7736_scope.get()._field_owner != nullptr))) {
				return nullptr;
			};
			_7736_scope=_7736_scope.get()._field_parent;
			_7813_label=_1e31e2340_findLabelScope(_7736_scope, _7720_ident);
		}
	_iter_next_1e5706445:;
	}
	_iter_end_1e5706445:;;
	return _7813_label;
}



inline jule::Bool _1e31d47c7_modelIsGotoScope(jule::Any _9121_Model, jule::Ptr<_1e31d6c3b_Scope>& _9134_sc) {
	{
		auto &_match_expr{ _9121_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1e2584b01_FnCallExprModel>>()) {
			_case_begin_1e5708337:;
			{
				jule::Ptr<_1e2584b01_FnCallExprModel> _9413_fcem = _9121_Model.operator jule::Ptr<_1e2584b01_FnCallExprModel>();;
				if ((_9413_fcem.get()._field_Except == _9134_sc)) {
					return true;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e310908c_Data>>()) {
			_case_begin_1e57083ae:;
			{
				jule::Ptr<_1e310908c_Data> _9913_d = _9121_Model.operator jule::Ptr<_1e310908c_Data>();;
				return _1e31d47c7_modelIsGotoScope(jule::Any(_9913_d.get()._field_Model),_9134_sc);
			}
		}
		_match_end_1e5708227:;
	};
	return false;
}



inline jule::Bool _1e31d4b18_stmtIsGotoScope(jule::Any& _10521_stmt, jule::Ptr<_1e31d6c3b_Scope>& _10534_sc) {
	{
		auto &_match_expr{ _10521_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1e31d6c3b_Scope>>()) {
			_case_begin_1e570a504:;
			{
				return (_10521_stmt.operator jule::Ptr<_1e31d6c3b_Scope>() == _10534_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e31d7a83_InfIter>>()) {
			_case_begin_1e570a56a:;
			{
				return (_10521_stmt.operator jule::Ptr<_1e31d7a83_InfIter>().get()._field_Scope == _10534_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e31d88db_RangeIter>>()) {
			_case_begin_1e570a5d1:;
			{
				jule::Ptr<_1e31d88db_RangeIter> _11213_it = _10521_stmt.operator jule::Ptr<_1e31d88db_RangeIter>();;
				return ((_11213_it.get()._field_Scope == _10534_sc) || _1e31d47c7_modelIsGotoScope(jule::Any(_11213_it.get()._field_Expr.get()._field_Model),_10534_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e31d8006_WhileIter>>()) {
			_case_begin_1e570a6be:;
			{
				jule::Ptr<_1e31d8006_WhileIter> _11513_it = _10521_stmt.operator jule::Ptr<_1e31d8006_WhileIter>();;
				return (((_11513_it.get()._field_Scope == _10534_sc) || _1e31d47c7_modelIsGotoScope(jule::Any(_11513_it.get()._field_Expr),_10534_sc)) || _1e31d47c7_modelIsGotoScope(jule::Any(_11513_it.get()._field_Next),_10534_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e31da987_Match>>()) {
			_case_begin_1e570a746:;
			{
				jule::Ptr<_1e31da987_Match> _12013_m = _10521_stmt.operator jule::Ptr<_1e31da987_Match>();;
				{
					auto &expr = _12013_m.get()._field_Cases;
					auto it = expr.begin();
					_iter_begin_1e570e31b:;
					if (it != expr.end()) {
						jule::Ptr<_1e31db4d2_Case> &_12116_c = *it;
						{
							if ((_12116_c.get()._field_Scope == _10534_sc)) {
								return true;
							};
							{
								auto &expr = _12116_c.get()._field_Exprs;
								auto it = expr.begin();
								_iter_begin_1e57102d9:;
								if (it != expr.end()) {
									jule::Ptr<_1e310908c_Data> &_12520_expr = *it;
									{
										if (_1e31d47c7_modelIsGotoScope(jule::Any(_12520_expr.get()._field_Model),_10534_sc)) {
											return true;
										};
									}
									_iter_next_1e57102d9:;
									++it;
									goto _iter_begin_1e57102d9;
								}
								_iter_end_1e57102d9:;
							};
						}
						_iter_next_1e570e31b:;
						++it;
						goto _iter_begin_1e570e31b;
					}
					_iter_end_1e570e31b:;
				};
				return ((_12013_m.get()._field_Default != nullptr) && (_12013_m.get()._field_Default.get()._field_Scope == _10534_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e31d7797_Conditional>>()) {
			_case_begin_1e570a7bd:;
			{
				jule::Ptr<_1e31d7797_Conditional> _13313_c = _10521_stmt.operator jule::Ptr<_1e31d7797_Conditional>();;
				{
					auto &expr = _13313_c.get()._field_Elifs;
					auto it = expr.begin();
					_iter_begin_1e57118c3:;
					if (it != expr.end()) {
						jule::Ptr<_1e31d7137_If> &_13416_elif = *it;
						{
							if (((_13416_elif.get()._field_Scope == _10534_sc) || _1e31d47c7_modelIsGotoScope(jule::Any(_13416_elif.get()._field_Expr),_10534_sc))) {
								return true;
							};
						}
						_iter_next_1e57118c3:;
						++it;
						goto _iter_begin_1e57118c3;
					}
					_iter_end_1e57118c3:;
				};
				return ((_13313_c.get()._field_Default != nullptr) && (_13313_c.get()._field_Default.get()._field_Scope == _10534_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e310908c_Data>>()) {
			_case_begin_1e570a845:;
			{
				jule::Ptr<_1e310908c_Data> _14113_d = _10521_stmt.operator jule::Ptr<_1e310908c_Data>();;
				return _1e31d47c7_modelIsGotoScope(jule::Any(_14113_d.get()._field_Model),_10534_sc);
			}
		}
		else {
			_case_begin_1e57087dd:;
			{
				return false;
			}
		}
		_match_end_1e5708788:;
	};
}



inline jule::I64 _1e31d4e59_countMatchType(jule::Ptr<_1e31da987_Match>& _14820_m, jule::Ptr<_1e3134da9_TypeKind>& _14832_t) {
	jule::I64 _14913_n = 0LL;;
	jule::Str _1509_kind = _1e31352a5_Str(_14832_t.ptr());;
	_julec_label_loop:;
	{
		auto &expr = _14820_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1e57148e8:;
		if (it != expr.end()) {
			jule::Ptr<_1e31db4d2_Case> &_15212_c = *it;
			{
				if ((_15212_c == nullptr)) {
					goto _iter_next_1e57148e8;
				};
				{
					auto &expr = _15212_c.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_1e5715289:;
					if (it != expr.end()) {
						jule::Ptr<_1e310908c_Data> &_15716_expr = *it;
						{
							if ((_15716_expr == nullptr)) {
								goto _iter_end_1e57148e8;
							};
							if ((_1509_kind == _1e31352a5_Str(_15716_expr.get()._field_Model.operator jule::Ptr<_1e3134da9_TypeKind>().ptr()))) {
								(_14913_n)++;
							};
						}
						_iter_next_1e5715289:;
						++it;
						goto _iter_begin_1e5715289;
					}
					_iter_end_1e5715289:;
				};
			}
			_iter_next_1e57148e8:;
			++it;
			goto _iter_begin_1e57148e8;
		}
		_iter_end_1e57148e8:;
	};
	return _14913_n;
}



inline jule::Slice<jule::Ptr<_1e310908c_Data>> _1e31d5201_getDatasFromTupleData(jule::Ptr<_1e310908c_Data>& _17231_d) {
	if ((_1e3138b5a_Tup(_17231_d.get()._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _17231_d.get()._field_Model };
			
			if (_match_expr.type_is<jule::Ptr<_1e2586828_TupleExprModel>>()) {
				_case_begin_1e57194d0:;
				{
					return _17231_d.get()._field_Model.operator jule::Ptr<_1e2586828_TupleExprModel>().get()._field_Datas;
				}
			}
			else {
				_case_begin_1e5716dd4:;
				{
					jule::Ptr<_1e313e600_Tuple> _17821_t = _1e3138b5a_Tup(_17231_d.get()._field_Kind.ptr());;
					jule::Slice<jule::Ptr<_1e310908c_Data>> _17921_r = jule::Slice<jule::Ptr<_1e310908c_Data>>::alloc(0LL,_17821_t.get()._field_Types.len());;
					{
						auto &expr = _17821_t.get()._field_Types;
						auto it = expr.begin();
						_iter_begin_1e5718402:;
						if (it != expr.end()) {
							jule::Ptr<_1e3134da9_TypeKind> _18025_kind = *it;
							{
								_17921_r = jule::alloc_for_append(_17921_r,1);_17921_r.__push(jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=_18025_kind, ._field_Mutable=true, }));;
							}
							_iter_next_1e5718402:;
							++it;
							goto _iter_begin_1e5718402;
						}
						_iter_end_1e5718402:;
					};
					return _17921_r;
				}
			}
			_match_end_1e5716c5d:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1e310908c_Data>>::make({_17231_d});
	};
}



inline jule::Slice<jule::Any> _1e31d55a8_getExprModels(jule::Any& _19323_m) {
	{
		auto &_match_expr{ _19323_m };
		
		if (_match_expr.type_is<jule::Ptr<_1e251a834_TupleExpr>>()) {
			_case_begin_1e571990e:;
			{
				jule::Ptr<_1e251a834_TupleExpr> _19617_tup = _19323_m.operator jule::Ptr<_1e251a834_TupleExpr>();;
				jule::Slice<jule::Any> _19717_models = jule::Slice<jule::Any>::alloc(0LL,_19617_tup.get()._field_Expr.len());;
				{
					auto &expr = _19617_tup.get()._field_Expr;
					auto it = expr.begin();
					_iter_begin_1e571ae93:;
					if (it != expr.end()) {
						jule::Ptr<_1e2519ba7_Expr> _19821_expr = *it;
						{
							_19717_models = jule::alloc_for_append(_19717_models,1);_19717_models.__push(_19821_expr.get()._field_Kind);;
						}
						_iter_next_1e571ae93:;
						++it;
						goto _iter_begin_1e571ae93;
					}
					_iter_end_1e571ae93:;
				};
				return _19717_models;
			}
		}
		else {
			_case_begin_1e5716ed3:;
			{
				return jule::Slice<jule::Any>::make({_19323_m});
			}
		}
		_match_end_1e5719799:;
	};
}



inline jule::Bool _1e31d5a3c_checkMut(jule::Ptr<_1e320d768_Sema>& _20718_s, jule::Ptr<_1e310908c_Data>& _20729_left, jule::Ptr<_1e310908c_Data> _20746_right, jule::Ptr<_1d42b43cc_Token> _20760_op) {
	jule::Bool _20774_ok = jule::Bool();
	{
		
		if ((!(_20729_left.get()._field_Mutable))) {
			_case_begin_1e571c725:;
			{
				_1e321142a_pushErr(_20718_s.ptr(), _20760_op,jule::Str("cannot assign to immutable storage", 34),jule::Slice<jule::Any>());
				_20774_ok = false;
				return _20774_ok;
			}
		}
		else if ((((_20746_right != nullptr) && (!(_20746_right.get()._field_Mutable))) && _1e31362a6_Mutable(_20746_right.get()._field_Kind.ptr()))) {
			_case_begin_1e571c835:;
			{
				if (((_20760_op.get()._field_Kind != jule::Str("=", 1)) && (_1e313841d_Struct(_20746_right.get()._field_Kind.ptr()) != nullptr))) {
					_20774_ok = true;
					return _20774_ok;
				};
				_1e321142a_pushErr(_20718_s.ptr(), _20760_op,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_20746_right.get()._field_Kind.ptr()))}));
				_20774_ok = false;
				return _20774_ok;
			}
		}
		else {
			_case_begin_1e571c0e8:;
			{
				_20774_ok = true;
				return _20774_ok;
			}
		}
		_match_end_1e571b6ad:;
	};
}



inline jule::Bool _1e31d5ec1_checkAssign(jule::Ptr<_1e320d768_Sema>& _22621_s, jule::Ptr<_1e310908c_Data>& _22636_left, jule::Ptr<_1e310908c_Data> _22653_right, jule::Ptr<_1d42b43cc_Token> _22667_op) {
	jule::Bool _22681_ok = jule::Bool();
	jule::Ptr<_1e258dee5_FnIns> _2279_f = _1e31381a9_Fn(_22636_left.get()._field_Kind.ptr());;
	if ((((_2279_f != nullptr) && (_2279_f.get()._field_Decl != nullptr)) && _2279_f.get()._field_Decl.get()._field_Global)) {
		_1e321142a_pushErr(_22621_s.ptr(), _22667_op,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>());
		_22681_ok = false;
		return _22681_ok;
	};
	{
		
		if (_1e3109950_IsConst(_22636_left.ptr())) {
			_case_begin_1e572273b:;
			{
				_1e321142a_pushErr(_22621_s.ptr(), _22667_op,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>());
				_1e3211749_pushSugggestion(_22621_s.ptr(), jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>());
				_22681_ok = false;
				return _22681_ok;
			}
		}
		else if ((!(_22636_left.get()._field_Lvalue))) {
			_case_begin_1e5722818:;
			{
				_1e321142a_pushErr(_22621_s.ptr(), _22667_op,jule::Str("invalid expression: expected lvalue for assignment", 50),jule::Slice<jule::Any>());
				_22681_ok = false;
				return _22681_ok;
			}
		}
		else if ((!(_1e31d5a3c_checkMut(_22621_s,_22636_left,_22653_right,_22667_op)))) {
			_case_begin_1e5722890:;
			{
				_22681_ok = false;
				return _22681_ok;
			}
		}
		else {
			_case_begin_1e57220dc:;
			{
				_22681_ok = true;
				return _22681_ok;
			}
		}
		_match_end_1e5721e88:;
	};
}



inline jule::Bool _1e31d6268_isValidAstStForNextSt(jule::Any& _24831_n) {
	{
		auto &_match_expr{ _24831_n };
		
		if (_match_expr.type_is<jule::Ptr<_1e252440e_AssignSt>>()) {
			_case_begin_1e572294a:;
			{
				return (!(_24831_n.operator jule::Ptr<_1e252440e_AssignSt>().get()._field_Declarative));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2519ba7_Expr>>()) {
			_case_begin_1e57229b1:;
			{
				return true;
			}
		}
		else {
			_case_begin_1e5724232:;
			{
				return false;
			}
		}
		_match_end_1e572451d:;
	};
}



inline jule::Bool _1e31d6510_isValidStForNextSt(jule::Any& _25924_st) {
	{
		auto &_match_expr{ _25924_st };
		
		if (_match_expr.type_is<jule::Ptr<_1e31d9b1d_Postfix>>() || _match_expr.type_is<jule::Ptr<_1e31da091_Assign>>() || _match_expr.type_is<jule::Ptr<_1e31da448_MultiAssign>>()) {
			_case_begin_1e5725387:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e310908c_Data>>()) {
			_case_begin_1e57253ed:;
			{
				{
					auto &_match_expr{ _25924_st.operator jule::Ptr<_1e310908c_Data>().get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_1e2584b01_FnCallExprModel>>()) {
						_case_begin_1e57267d9:;
						{
							return true;
						}
					}
					else {
						_case_begin_1e5726773:;
						{
							return false;
						}
					}
					_match_end_1e572650e:;
				};
			}
		}
		else {
			_case_begin_1e5724c9e:;
			{
				return false;
			}
		}
		_match_end_1e5724bb1:;
	};
}



inline jule::Bool _1e31d67a7_stmtIsDef(jule::Any& _27715_st) {
	{
		auto &_match_expr{ _27715_st };
		
		if (_match_expr.type_is<jule::Ptr<_1e322a147_Var>>()) {
			_case_begin_1e5727477:;
			{
				return true;
			}
		}
		else {
			_case_begin_1e5726410:;
			{
				return false;
			}
		}
		_match_end_1e57263aa:;
	};
}



inline jule::Ptr<_1e322a147_Var> _1e320321e_findVarInPackage(jule::Slice<jule::Ptr<_1e310432e_SymbolTable>>& _4626_files, jule::Str _4649_ident, jule::Bool _4661_cpp_linked) {
	{
		auto &expr = _4626_files;
		auto it = expr.begin();
		_iter_begin_1e58875b5:;
		if (it != expr.end()) {
			jule::Ptr<_1e310432e_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1e322a147_Var> _4817_v = _1e3105011_FindVar(_4717_f.ptr(), _4649_ident,_4661_cpp_linked);;
				if ((_4817_v != nullptr)) {
					return _4817_v;
				};
			}
			_iter_next_1e58875b5:;
			++it;
			goto _iter_begin_1e58875b5;
		}
		_iter_end_1e58875b5:;
	};
	return nullptr;
}



inline jule::Ptr<_1e31341b6_TypeAlias> _1e320364d_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1e310432e_SymbolTable>>& _5832_files, jule::Str _5855_ident, jule::Bool _5867_cpp_linked) {
	{
		auto &expr = _5832_files;
		auto it = expr.begin();
		_iter_begin_1e5888b6b:;
		if (it != expr.end()) {
			jule::Ptr<_1e310432e_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1e31341b6_TypeAlias> _6017_ta = _1e31053b8_FindTypeAlias(_5917_f.ptr(), _5855_ident,_5867_cpp_linked);;
				if ((_6017_ta != nullptr)) {
					return _6017_ta;
				};
			}
			_iter_next_1e5888b6b:;
			++it;
			goto _iter_begin_1e5888b6b;
		}
		_iter_end_1e5888b6b:;
	};
	return nullptr;
}



inline jule::Ptr<_1e2505d6e_Struct> _1e3203a38_findStructInPackage(jule::Slice<jule::Ptr<_1e310432e_SymbolTable>>& _7029_files, jule::Str _7052_ident, jule::Bool _7064_cpp_linked) {
	{
		auto &expr = _7029_files;
		auto it = expr.begin();
		_iter_begin_1e588a211:;
		if (it != expr.end()) {
			jule::Ptr<_1e310432e_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1e2505d6e_Struct> _7217_s = _1e3105770_FindStruct(_7117_f.ptr(), _7052_ident,_7064_cpp_linked);;
				if ((_7217_s != nullptr)) {
					return _7217_s;
				};
			}
			_iter_next_1e588a211:;
			++it;
			goto _iter_begin_1e588a211;
		}
		_iter_end_1e588a211:;
	};
	return nullptr;
}



inline jule::Ptr<_1e258b344_Fn> _1e3203e9a_findFnInPackage(jule::Slice<jule::Ptr<_1e310432e_SymbolTable>>& _8225_files, jule::Str _8248_ident, jule::Bool _8260_cpp_linked) {
	{
		auto &expr = _8225_files;
		auto it = expr.begin();
		_iter_begin_1e588b7a6:;
		if (it != expr.end()) {
			jule::Ptr<_1e310432e_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1e258b344_Fn> _8417_f = _1e3105b27_FindFn(_8317_file.ptr(), _8248_ident,_8260_cpp_linked);;
				if ((_8417_f != nullptr)) {
					return _8417_f;
				};
			}
			_iter_next_1e588b7a6:;
			++it;
			goto _iter_begin_1e588b7a6;
		}
		_iter_end_1e588b7a6:;
	};
	return nullptr;
}



inline jule::Ptr<_1e259d246_Trait> _1e32042a8_findTraitInPackage(jule::Slice<jule::Ptr<_1e310432e_SymbolTable>>& _9428_files, jule::Str _9451_ident) {
	{
		auto &expr = _9428_files;
		auto it = expr.begin();
		_iter_begin_1e588bda0:;
		if (it != expr.end()) {
			jule::Ptr<_1e310432e_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1e259d246_Trait> _9617_t = _1e3105e35_FindTrait(_9517_f.ptr(), _9451_ident);;
				if ((_9617_t != nullptr)) {
					return _9617_t;
				};
			}
			_iter_next_1e588bda0:;
			++it;
			goto _iter_begin_1e588bda0;
		}
		_iter_end_1e588bda0:;
	};
	return nullptr;
}



inline jule::Ptr<_1e25a038b_Enum> _1e32045e9_findEnumInPackage(jule::Slice<jule::Ptr<_1e310432e_SymbolTable>>& _10627_files, jule::Str _10650_ident) {
	{
		auto &expr = _10627_files;
		auto it = expr.begin();
		_iter_begin_1e588d258:;
		if (it != expr.end()) {
			jule::Ptr<_1e310432e_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1e25a038b_Enum> _10817_e = _1e3106243_FindEnum(_10717_f.ptr(), _10650_ident);;
				if ((_10817_e != nullptr)) {
					return _10817_e;
				};
			}
			_iter_next_1e588d258:;
			++it;
			goto _iter_begin_1e588d258;
		}
		_iter_end_1e588d258:;
	};
	return nullptr;
}



inline jule::Ptr<_1e25a1986_TypeEnum> _1e320493a_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1e310432e_SymbolTable>>& _11831_files, jule::Str _11854_ident) {
	{
		auto &expr = _11831_files;
		auto it = expr.begin();
		_iter_begin_1e588e622:;
		if (it != expr.end()) {
			jule::Ptr<_1e310432e_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_1e25a1986_TypeEnum> _12017_e = _1e3106551_FindTypeEnum(_11917_f.ptr(), _11854_ident);;
				if ((_12017_e != nullptr)) {
					return _12017_e;
				};
			}
			_iter_next_1e588e622:;
			++it;
			goto _iter_begin_1e588e622;
		}
		_iter_end_1e588e622:;
	};
	return nullptr;
}



inline jule::Bool _1e320ab50_isStdPackage(jule::Str _35017_f, jule::Str _35025_p) {
	return _20a119ae1_HasPrefix(_35017_f,_20a1b122b_Join(jule::Slice<jule::Str>::make({_20a3768ec_PathStdlib,_35025_p})));
}



inline jule::Bool _1e320b8a9_isValidModelForRef(jule::Any& _1228_m) {
	{
		auto &_match_expr{ _1228_m };
		
		if (_match_expr.type_is<jule::Ptr<_1e322a147_Var>>()) {
			_case_begin_1e58a1854:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2585d88_StructSubIdentExprModel>>()) {
			_case_begin_1e58a18ba:;
			{
				jule::Ptr<_1e2585d88_StructSubIdentExprModel> _1717_model = _1228_m.operator jule::Ptr<_1e2585d88_StructSubIdentExprModel>();;
				return _1e320b8a9_isValidModelForRef(_1717_model.get()._field_Expr.get()._field_Model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e258596a_TraitSubIdentExprModel>>()) {
			_case_begin_1e58a1931:;
			{
				jule::Ptr<_1e258596a_TraitSubIdentExprModel> _2017_model = _1228_m.operator jule::Ptr<_1e258596a_TraitSubIdentExprModel>();;
				return _1e320b8a9_isValidModelForRef(_2017_model.get()._field_Expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2584161_UnaryExprModel>>()) {
			_case_begin_1e58a1aa7:;
			{
				jule::Ptr<_1e2584161_UnaryExprModel> _2317_unary = _1228_m.operator jule::Ptr<_1e2584161_UnaryExprModel>();;
				if ((_2317_unary.get()._field_Op.get()._field_Kind != jule::Str("*", 1))) {
					return false;
				};
				if ((_1e3137494_Ptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
					return true;
				};
				if ((_1e3137230_Sptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) == nullptr)) {
					return false;
				};
				return _1e320b8a9_isValidModelForRef(_2317_unary.get()._field_Expr.get()._field_Model);
			}
		}
		else {
			_case_begin_1e58a115b:;
			{
				return false;
			}
		}
		_match_end_1e58a1106:;
	};
}



inline _20a35491e_Log _1e320bd4e_compilerErr(jule::Ptr<_1d42b43cc_Token>& _4117_token, jule::Bool _4132_line, jule::Str _4144_fmt, jule::Slice<jule::Any> _4157_args) {
	_20a35491e_Log _4213_log = _20a35491e_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_4117_token.get()._field_Row, ._field_Column=_4117_token.get()._field_Column, ._field_Path=_4117_token.get()._field_File.get()._field_Path, ._field_Text=_20a354d5e_Logf(_4144_fmt,jule::Any(_4157_args)), };;
	if (_4132_line) {
		_4213_log._field_Line=_1d42ba944_GetRow(_4117_token.get()._field_File.ptr(), _4117_token.get()._field_Row);
	};
	return _4213_log;
}



inline jule::Bool _1e320c190_impIsLookupable(jule::Ptr<_1e320561c_ImportInfo>& _5521_i, jule::Str _5537_ident) {
	if (_5521_i.get()._field_CppLinked) {
		return false;
	};
	if ((!(_5521_i.get()._field_ImportAll))) {
		if ((_5521_i.get()._field_Selected.len() > 0LL)) {
			return _1e3207ee3_existIdent(_5521_i.ptr(), _5537_ident);
		};
	};
	return _5521_i.get()._field_ImportAll;
}



inline void _1e320c48c_appendRetVars(jule::Slice<jule::Ptr<_1e322a147_Var>>& _6723_dest, jule::Ptr<_1e258dee5_FnIns>& _6742_f) {
	if ((_1e258b7a6_IsVoid(_6742_f.get()._field_Decl.ptr()) || (_6742_f.get()._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1e3134da9_TypeKind>> _7213_types = _1e2590117_Types(_6742_f.ptr());;
	{
		auto &expr = _6742_f.get()._field_Decl.get()._field_Result.get()._field_Idents;
		auto it = expr.begin();
		_iter_begin_1e58b00b0:;
		if (it != expr.end()) {
			jule::I64 _7310_i = it - expr.begin();
			jule::Ptr<_1d42b43cc_Token> _7317_ident = *it;
			{
				if ((_1d42b6b71_IsIgnoreIdent(_7317_ident.get()._field_Kind) || _1d42b6e18_IsAnonIdent(_7317_ident.get()._field_Kind))) {
					goto _iter_next_1e58b00b0;
				};
				_6723_dest = jule::alloc_for_append(_6723_dest,1);_6723_dest.__push(jule::new_ptr<_1e322a147_Var>(_1e322a147_Var{._field_Scope=_6742_f.get()._field_Scope, ._field_Token=_7317_ident, ._field_Ident=_7317_ident.get()._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_1e3139012_TypeSymbol>(_1e3139012_TypeSymbol{._field_Kind=_7213_types[_7310_i]}), ._field_Value=jule::new_ptr<_1e310a115_Value>(_1e310a115_Value{._field_Data=jule::new_ptr<_1e310908c_Data>()}), }));;
			}
			_iter_next_1e58b00b0:;
			++it;
			_7310_i++;
			goto _iter_begin_1e58b00b0;
		}
		_iter_end_1e58b00b0:;
	};
}



inline void _1e320c745_appendParamVars(jule::Slice<jule::Ptr<_1e322a147_Var>>& _9325_dest, jule::Ptr<_1e258dee5_FnIns>& _9344_f) {
	if ((_9344_f.get()._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _9344_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1e58b1743:;
		if (it != expr.end()) {
			jule::Ptr<_1e258d126_ParamIns> _9817_p = *it;
			{
				if ((_1d42b6b71_IsIgnoreIdent(_9817_p.get()._field_Decl.get()._field_Ident) || _1d42b6e18_IsAnonIdent(_9817_p.get()._field_Decl.get()._field_Ident))) {
					goto _iter_next_1e58b1743;
				};
				jule::Ptr<_1e322a147_Var> _10317_v = jule::new_ptr<_1e322a147_Var>(_1e322a147_Var{._field_Scope=_9344_f.get()._field_Scope, ._field_Token=_9817_p.get()._field_Decl.get()._field_Token, ._field_Ident=_9817_p.get()._field_Decl.get()._field_Ident, ._field_Mutable=_9817_p.get()._field_Decl.get()._field_Mutable, ._field_Used=true, ._field_Reference=_9817_p.get()._field_Decl.get()._field_Reference, ._field_Kind=jule::new_ptr<_1e3139012_TypeSymbol>(), ._field_Value=jule::new_ptr<_1e310a115_Value>(_1e310a115_Value{._field_Data=jule::new_ptr<_1e310908c_Data>()}), });;
				{
					
					if (_1e258a134_IsSelf(_9817_p.get()._field_Decl.ptr())) {
						_case_begin_1e58b5516:;
						{
							_10317_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1e313497a_Kind>(_9344_f.get()._field_Owner, 0)});
							_10317_v.get()._field_Reference=(!(_1e258a398_IsRef(_9817_p.get()._field_Decl.ptr())));
							if (_1e258a398_IsRef(_9817_p.get()._field_Decl.ptr())) {
								_10317_v.get()._field_Ident=_10317_v.get()._field_Ident.slice(1LL);
								_10317_v.get()._field_Kind.get()._field_Kind.get()._field_Kind=jule::Trait<_1e313497a_Kind>(jule::new_ptr<_1e313d115_Sptr>(_1e313d115_Sptr{._field_Elem=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_CppIdent=_10317_v.get()._field_Kind.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_10317_v.get()._field_Kind.get()._field_Kind.get()._field_Kind})}), 7);
							};
						}
					}
					else if (_9817_p.get()._field_Decl.get()._field_Variadic) {
						_case_begin_1e58b5208:;
						{
							_10317_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1e313497a_Kind>(jule::new_ptr<_1e313da72_Slc>(_1e313da72_Slc{._field_Elem=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_CppIdent=_9817_p.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_9817_p.get()._field_Kind.get()._field_Kind})}), 8)});
						}
					}
					else {
						_case_begin_1e58b3d72:;
						{
							_10317_v.get()._field_Kind.get()._field_Kind=_9817_p.get()._field_Kind;
						}
					}
					_match_end_1e58b50a4:;
				};
				_9325_dest = jule::alloc_for_append(_9325_dest,1);_9325_dest.__push(_10317_v);;
			}
			_iter_next_1e58b1743:;
			++it;
			goto _iter_begin_1e58b1743;
		}
		_iter_end_1e58b1743:;
	};
}



inline void _1e320ca20_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1e31341b6_TypeAlias>>& _15334_dest, jule::Ptr<_1e258dee5_FnIns>& _15359_f) {
	jule::I64 _15413_size = _15359_f.get()._field_Generics.len();;
	if ((_15359_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_15413_size+=_15359_f.get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	if ((_15413_size == 0LL)) {
		return;;
	};
	{
		auto &expr = _15359_f.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1e58ba6d6:;
		if (it != expr.end()) {
			jule::I64 _16310_i = it - expr.begin();
			jule::Ptr<_1e313367c_InsGeneric> _16317_g = *it;
			{
				jule::Ptr<_1e2522c6a_GenericDecl> _16417_decl = _15359_f.get()._field_Decl.get()._field_Generics[_16310_i];;
				_15334_dest = jule::alloc_for_append(_15334_dest,1);_15334_dest.__push(jule::new_ptr<_1e31341b6_TypeAlias>(_1e31341b6_TypeAlias{._field_Scope=_15359_f.get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_16417_decl.get()._field_Token, ._field_Ident=_16417_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1e3139012_TypeSymbol>(_1e3139012_TypeSymbol{._field_Kind=_16317_g.get()._field_Kind}), }));;
			}
			_iter_next_1e58ba6d6:;
			++it;
			_16310_i++;
			goto _iter_begin_1e58ba6d6;
		}
		_iter_end_1e58ba6d6:;
	};
	if ((_15359_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		jule::Ptr<_1e253220d_StructIns> _17617_owner = _15359_f.get()._field_Owner;;
		{
			auto &expr = _17617_owner.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1e58bc056:;
			if (it != expr.end()) {
				jule::I64 _17714_i = it - expr.begin();
				jule::Ptr<_1e313367c_InsGeneric> _17721_g = *it;
				{
					jule::Ptr<_1e2522c6a_GenericDecl> _17821_decl = _17617_owner.get()._field_Decl.get()._field_Generics[_17714_i];;
					_15334_dest = jule::alloc_for_append(_15334_dest,1);_15334_dest.__push(jule::new_ptr<_1e31341b6_TypeAlias>(_1e31341b6_TypeAlias{._field_Scope=_15359_f.get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_17821_decl.get()._field_Token, ._field_Ident=_17821_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1e3139012_TypeSymbol>(_1e3139012_TypeSymbol{._field_Kind=_17721_g.get()._field_Kind}), }));;
				}
				_iter_next_1e58bc056:;
				++it;
				_17714_i++;
				goto _iter_begin_1e58bc056;
			}
			_iter_end_1e58bc056:;
		};
	};
}



inline jule::Ptr<_1e310432e_SymbolTable> _1e320cd72_findFile(jule::Slice<jule::Ptr<_1e310432e_SymbolTable>>& _19118_files, jule::Ptr<_1d42b9767_File>& _19142_handler) {
	{
		auto &expr = _19118_files;
		auto it = expr.begin();
		_iter_begin_1e58bb044:;
		if (it != expr.end()) {
			jule::Ptr<_1e310432e_SymbolTable> _19217_fl = *it;
			{
				if ((_19217_fl.get()._field_File == _19142_handler)) {
					return _19217_fl;
				};
			}
			_iter_next_1e58bb044:;
			++it;
			goto _iter_begin_1e58bb044;
		}
		_iter_end_1e58bb044:;
	};
	return nullptr;
}



inline void _1e320d2d4_pushSugggestion(_20a35491e_Log* _20031_log, jule::Str _20042_fmt, jule::Slice<jule::Any> _20055_args) {
	_20031_log->_field_Suggestion=_20a354d5e_Logf(_20042_fmt,jule::Any(_20055_args));
}



inline jule::Bool _1e30e15d5_traitHasReferenceReceiver(jule::Ptr<_1e259d246_Trait>& _2631_t) {
	{
		auto &expr = _2631_t.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1e5ab0e92:;
		if (it != expr.end()) {
			jule::Ptr<_1e258b344_Fn> &_2712_f = *it;
			{
				if (_2712_f.get()._field_Statically) {
					goto _iter_next_1e5ab0e92;
				};
				jule::Ptr<_1e2589a07_Param> _3313_p = _2712_f.get()._field_Params[0LL];;
				if ((_1e258a398_IsRef(_3313_p.ptr()) && _1e258a134_IsSelf(_3313_p.ptr()))) {
					return true;
				};
			}
			_iter_next_1e5ab0e92:;
			++it;
			goto _iter_begin_1e5ab0e92;
		}
		_iter_end_1e5ab0e92:;
	};
	return false;
}



inline jule::Bool _1e30e1717_floatAssignable(jule::Str _4120_kind, jule::Ptr<_1e310908c_Data>& _4132_d) {
	jule::Str _429_value = _1e2aeb233_FmtFloat(static_cast<jule::F64>(_1e257cad8_AsF64(_4132_d.get()._field_Constant.ptr())),'g',-1LL,64LL);;
	return _1e27d5505_CheckBitFloat(_429_value,static_cast<jule::I64>(_1e2708813_BitsizeOf(_4120_kind)));
}



inline jule::Bool _1e30e2aae_sigAssignable(jule::Str _4618_kind, jule::Ptr<_1e310908c_Data>& _4630_d) {
	jule::F64 _479_min = _1e31c8a74_Min(_4618_kind);;
	jule::F64 _489_max = _1e31c8ba6_Max(_4618_kind);;
	{
		
		if (_1e257e744_IsF64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_1e5ab7bad:;
			{
				jule::F64 _5113_x = _1e257c39b_ReadF64(_4630_d.get()._field_Constant.ptr());;
				jule::F64 _5214_i;;
				jule::F64 _5217_frac;;
				std::tie(_5214_i,_5217_frac) = _1e3193b60_Modf(_5113_x);
				if ((_5217_frac != 0LL)) {
					return false;
				};
				return ((_5214_i >= _479_min) && (_5214_i <= _489_max));
			}
		}
		else if (_1e257e007_IsU64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_1e5ab7c24:;
			{
				jule::F64 _5813_x = _1e257cad8_AsF64(_4630_d.get()._field_Constant.ptr());;
				if ((_5813_x <= _489_max)) {
					return true;
				};
			}
		}
		else if (_1e257dc93_IsI64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_1e5ab7c8a:;
			{
				jule::F64 _6313_x = _1e257cad8_AsF64(_4630_d.get()._field_Constant.ptr());;
				return ((_479_min <= _6313_x) && (_6313_x <= _489_max));
			}
		}
		_match_end_1e5ab7a6a:;
	};
	return false;
}



inline jule::Bool _1e30e2be1_unsigAssignable(jule::Str _6920_kind, jule::Ptr<_1e310908c_Data>& _6932_d) {
	jule::F64 _709_max = _1e31c8ba6_Max(_6920_kind);;
	if ((_6932_d.get()._field_IsRune && (_6920_kind == jule::Str("u8", 2)))) {
		return _1e30e18e3_IsAscii(static_cast<jule::I32>(static_cast<jule::I32>(_1e257b8ea_ReadI64(_6932_d.get()._field_Constant.ptr()))));
	};
	{
		
		if (_1e257e744_IsF64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_1e5abc377:;
			{
				jule::F64 _7713_x = _1e257c39b_ReadF64(_6932_d.get()._field_Constant.ptr());;
				if ((_7713_x < 0LL)) {
					return false;
				};
				jule::F64 _8114_i;;
				jule::F64 _8117_frac;;
				std::tie(_8114_i,_8117_frac) = _1e3193b60_Modf(_7713_x);
				if ((_8117_frac != 0LL)) {
					return false;
				};
				return (_8114_i <= _709_max);
			}
		}
		else if (_1e257e007_IsU64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_1e5abce16:;
			{
				jule::F64 _8713_x = _1e257cad8_AsF64(_6932_d.get()._field_Constant.ptr());;
				if ((_8713_x <= _709_max)) {
					return true;
				};
			}
		}
		else if (_1e257dc93_IsI64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_1e5abce8d:;
			{
				jule::F64 _9213_x = _1e257cad8_AsF64(_6932_d.get()._field_Constant.ptr());;
				return ((0LL <= _9213_x) && (_9213_x <= _709_max));
			}
		}
		_match_end_1e5abc2cd:;
	};
	return false;
}



inline jule::Bool _1e30e2d23_intAssignable(jule::Str _9818_kind, jule::Ptr<_1e310908c_Data>& _9830_d) {
	{
		
		if (_1e31ccb00_IsSigInt(_9818_kind)) {
			_case_begin_1e5ac2943:;
			{
				return _1e30e2aae_sigAssignable(_9818_kind,_9830_d);
			}
		}
		else if (_1e31ccddb_IsUnsigInt(_9818_kind)) {
			_case_begin_1e5ac22b1:;
			{
				return _1e30e2be1_unsigAssignable(_9818_kind,_9830_d);
			}
		}
		else {
			_case_begin_1e5abd5ed:;
			{
				return false;
			}
		}
		_match_end_1e5abd521:;
	};
}



inline jule::Ptr<_1e24d1e8d_Directive> _1e312e601_findDirective(jule::Slice<jule::Ptr<_1e24d1e8d_Directive>>& _419323_directives, jule::Str _419354_d) {
	{
		auto &expr = _419323_directives;
		auto it = expr.begin();
		_iter_begin_1e5bdab16:;
		if (it != expr.end()) {
			jule::Ptr<_1e24d1e8d_Directive> _419417_dr = *it;
			{
				if ((_419417_dr.get()._field_Tag.get()._field_Kind == _419354_d)) {
					return _419417_dr;
				};
			}
			_iter_next_1e5bdab16:;
			++it;
			goto _iter_begin_1e5bdab16;
		}
		_iter_end_1e5bdab16:;
	};
	return nullptr;
}



inline jule::Any _1e312e986_findBuiltinsImport(jule::Str _420223_ident, jule::Ptr<_1e320561c_ImportInfo> _420235_imp) {
	return jule::Any(_1e3263aa9_findPackageBuiltinDef(_420235_imp.get()._field_LinkPath,_420223_ident));
}



inline void _1e312eb95_fitBitsize(jule::Ptr<_1e310908c_Data>& _420920_d) {
	jule::Ptr<_1e3139881_Prim> _421013_prim = _1e3136ebb_Prim(_420920_d.get()._field_Kind.ptr());;
	jule::I64 _42119_z = _1e2708813_BitsizeOf(_1e3139be4_Str(_421013_prim.ptr()));;
	if ((_42119_z == 64LL)) {
		return;;
	};
	jule::I64 _421613_k = 0LL;;
	{
		
		if (_1e257dc93_IsI64(_420920_d.get()._field_Constant.ptr())) {
			_case_begin_1e5bdd9c6:;
			{
				_421613_k=static_cast<jule::I64>(_1e27db792_BitsizeOfInt(static_cast<jule::I64>(_1e257b8ea_ReadI64(_420920_d.get()._field_Constant.ptr()))));
				if ((_421613_k > _42119_z)) {
					_421013_prim.get()._field_Kind=_1e272ca9b_IntFromBits(_421613_k);
				};
			}
		}
		else if (_1e257e007_IsU64(_420920_d.get()._field_Constant.ptr())) {
			_case_begin_1e5bdda4d:;
			{
				_421613_k=static_cast<jule::I64>(_1e27e18eb_BitsizeOfUint(static_cast<jule::U64>(_1e257bb5e_ReadU64(_420920_d.get()._field_Constant.ptr()))));
				if ((_421613_k > _42119_z)) {
					_421013_prim.get()._field_Kind=_1e273e9ae_UintFromBits(_421613_k);
				};
			}
		}
		else if (_1e257e744_IsF64(_420920_d.get()._field_Constant.ptr())) {
			_case_begin_1e5bddac5:;
			{
				_421613_k=static_cast<jule::I64>(_1e27d6638_BitsizeOfFloat(static_cast<jule::F64>(_1e257c39b_ReadF64(_420920_d.get()._field_Constant.ptr()))));
				if ((_421613_k > _42119_z)) {
					_421013_prim.get()._field_Kind=_1e27955c5_FloatFromBits(_421613_k);
				};
			}
		}
		_match_end_1e5bdd90a:;
	};
}



inline void _1e312ee92_makeStructLitAlloc(jule::Ptr<_1e310908c_Data>& _423628_d, jule::Ptr<_1e258453a_StructLitExprModel>& _423643_lit) {
	_423628_d.get()._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(jule::new_ptr<_1e313d115_Sptr>(_1e313d115_Sptr{._field_Elem=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_423643_lit.get()._field_Strct, 0)})}), 7)});
	_423628_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e2584727_AllocStructLitExprModel>(_1e2584727_AllocStructLitExprModel{._field_Lit=_423643_lit}));
}



inline jule::Ptr<_1e322a147_Var> _1e31302d3_buildErrorVar(jule::Ptr<_1e31d6c3b_Scope>& _424723_s, jule::Ptr<_1e251de75_FnCallExpr>& _424739_fc) {
	return jule::new_ptr<_1e322a147_Var>(_1e322a147_Var{._field_Scope=_424723_s, ._field_Token=_424739_fc.get()._field_Token, ._field_Ident=jule::Str("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=jule::new_ptr<_1e3139012_TypeSymbol>(_1e3139012_TypeSymbol{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("any", 3)), 6)})}), ._field_Value=jule::new_ptr<_1e310a115_Value>(_1e310a115_Value{._field_Data=jule::new_ptr<_1e310908c_Data>()}), });
}



inline jule::Any _1e3130624_findBuiltinsSema(jule::Str _426621_ident, jule::Ptr<_1e320d768_Sema> _426637_s) {
	{
		auto &expr = _426637_s.get()._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1e5be4427:;
		if (it != expr.end()) {
			jule::Ptr<_1e320561c_ImportInfo> _426717_imp = *it;
			{
				if ((_426717_imp.get()._field_ImportAll || _1e3207ee3_existIdent(_426717_imp.ptr(), _426621_ident))) {
					jule::Any _426921_def = _1e312e986_findBuiltinsImport(_426621_ident,_426717_imp);;
					if ((_426921_def != nullptr)) {
						return jule::Any(_426921_def);
					};
				};
			}
			_iter_next_1e5be4427:;
			++it;
			goto _iter_begin_1e5be4427;
		}
		_iter_end_1e5be4427:;
	};
	jule::Str _427713_ppath = _1d42ba15d_Dir(_426637_s.get()._field_file.get()._field_File.ptr());;
	if (_20a119ae1_HasPrefix(_427713_ppath,_20a3768ec_PathStdlib)) {
		(_427713_ppath).mut_slice(_20a3768ec_PathStdlib.len());;
		_427713_ppath=(jule::Str("std", 3) + _20a1ae79b_Replace(_427713_ppath,static_cast<jule::Str>(92LL),jule::Str("::", 2),-1LL));
		return jule::Any(_1e3263aa9_findPackageBuiltinDef(_427713_ppath,_426621_ident));
	};
	return nullptr;
}



inline jule::Bool _1e31308bb_isOkForShifting(jule::Ptr<_1e310908c_Data>& _429125_d) {
	if (_1e3109950_IsConst(_429125_d.ptr())) {
		{
			
			if (_1e257dc93_IsI64(_429125_d.get()._field_Constant.ptr())) {
				_case_begin_1e5be81b7:;
				{
					return (_1e257b8ea_ReadI64(_429125_d.get()._field_Constant.ptr()) >= 0LL);
				}
			}
			else if (_1e257e007_IsU64(_429125_d.get()._field_Constant.ptr())) {
				_case_begin_1e5be797a:;
				{
					return true;
				}
			}
			else if (_1e257e744_IsF64(_429125_d.get()._field_Constant.ptr())) {
				_case_begin_1e5be79e1:;
				{
					return (_1e257c39b_ReadF64(_429125_d.get()._field_Constant.ptr()) >= 0LL);
				}
			}
			else {
				_case_begin_1e5be7914:;
				{
					return false;
				}
			}
			_match_end_1e5be7837:;
		};
	};
	jule::Ptr<_1e3139881_Prim> _43049_prim = _1e3136ebb_Prim(_429125_d.get()._field_Kind.ptr());;
	return ((_43049_prim != nullptr) && _1e31cd183_IsInt(_1e3139be4_Str(_43049_prim.ptr())));
}



inline jule::Bool _1e3130c73_isInstancedStruct(jule::Ptr<_1e253220d_StructIns> _430822_s) {
	return (_430822_s.get()._field_Decl.get()._field_Generics.len() == _430822_s.get()._field_Generics.len());
}



inline jule::Bool _1e313103c_isPtrArithmeticCompatibleInt(jule::Ptr<_1e310908c_Data>& _431238_d) {
	if (_1e3109950_IsConst(_431238_d.ptr())) {
		return _1e30e2d23_intAssignable(jule::Str("int", 3),_431238_d);
	};
	_1e30e2e55_typeCompatibilityChecker _431613_tcc = _1e30e2e55_typeCompatibilityChecker{._field_dest=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("int", 3)), 6)}), ._field_src=_431238_d.get()._field_Kind, };;
	return _1e30e441d_check(&_431613_tcc);
}



inline void _1e313127e_applyCastKindModel(jule::Ptr<_1e310908c_Data>& _432528_d, jule::Ptr<_1e3134da9_TypeKind>& _432543_t) {
	_432528_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e2584914_CastingExprModel>(_1e2584914_CastingExprModel{._field_Expr=_432528_d.get()._field_Model, ._field_Kind=_432543_t, ._field_ExprKind=_432528_d.get()._field_Kind}));
}



inline void _1e3131537_applyCastKind(jule::Ptr<_1e310908c_Data>& _433323_d, jule::Ptr<_1e3134da9_TypeKind>& _433338_t) {
	_1e313127e_applyCastKindModel(_433323_d,_433338_t);
	_433323_d.get()._field_Kind=_433338_t;
}



inline jule::Ptr<_1e310908c_Data> _1e3131735_buildVoidData(void) {
	return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("void", 4)), 6)}), });
}



inline jule::Str _1e31319ee_checkDataForIntegerIndexing(jule::Ptr<_1e310908c_Data>& _434637_d) {
	jule::Str _434649_err_fmt = jule::Str();
	if ((_434637_d == nullptr)) {
		_434649_err_fmt = jule::Str();
		return _434649_err_fmt;
	};
	{
		
		if ((_1e3136ebb_Prim(_434637_d.get()._field_Kind.ptr()) == nullptr)) {
			_case_begin_1e5bedd05:;
			{
				_434649_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _434649_err_fmt;
			}
		}
		else if ((!(_1e31cd183_IsInt(_1e3139be4_Str(_1e3136ebb_Prim(_434637_d.get()._field_Kind.ptr()).ptr()))))) {
			_case_begin_1e5bedd6b:;
			{
				_434649_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _434649_err_fmt;
			}
		}
		else if (_1e3109950_IsConst(_434637_d.ptr())) {
			_case_begin_1e5beddd2:;
			{
				if ((_1e257cad8_AsF64(_434637_d.get()._field_Constant.ptr()) < 0LL)) {
					_434649_err_fmt = jule::Str("overflow the limit of data-type", 31);
					return _434649_err_fmt;
				};
			}
		}
		else if ((_1e3136ebb_Prim(_434637_d.get()._field_Kind.ptr()) == nullptr) || _1e3109950_IsConst(_434637_d.ptr()) || (_1e27020d1_RealKindOf(_1e3139be4_Str(_1e3136ebb_Prim(_434637_d.get()._field_Kind.ptr()).ptr())) != _1e27020d1_RealKindOf(jule::Str("int", 3)))) {
			_case_begin_1e5bede48:;
			{
				jule::Ptr<_1e3134da9_TypeKind> _436317_t = jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("int", 3)), 6)});;
				_1e3131537_applyCastKind(_434637_d,_436317_t);
			}
		}
		_match_end_1e5bee3cc:;
	};
	_434649_err_fmt = jule::Str();
	return _434649_err_fmt;
}



inline void _1e3131cb8_applyCastModelByEnum(jule::Ptr<_1e310908c_Data>& _437230_d, jule::Ptr<_1e25a038b_Enum> _437244_e) {
	if ((_437244_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1e3139881_Prim> _43769_p = _1e3136ebb_Prim(_437244_e.get()._field_Kind.get()._field_Kind.ptr());;
	if (_1e313cab5_IsStr(_43769_p.ptr())) {
		return;;
	};
	_1e313127e_applyCastKindModel(_437230_d,_437244_e.get()._field_Kind.get()._field_Kind);
}



inline void _1e3132071_castConstByType(jule::Str& _438321_t, jule::Ptr<_1e310908c_Data>& _438334_d) {
	{
		
		if (_1e31ccb00_IsSigInt(_438321_t)) {
			_case_begin_1e5c04bc9:;
			{
				{
					auto _match_expr{ _1e2708813_BitsizeOf(_1e27020d1_RealKindOf(_438321_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1e5c058cd:;
						{
							_1e257cd5d_SetI64(_438334_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1e257c610_AsI64(_438334_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1e5c05944:;
						{
							_1e257cd5d_SetI64(_438334_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_1e257c610_AsI64(_438334_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LL) {
						_case_begin_1e5c059aa:;
						{
							_1e257cd5d_SetI64(_438334_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_1e257c610_AsI64(_438334_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LL) {
						_case_begin_1e5c05a21:;
						{
							_1e257cd5d_SetI64(_438334_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_1e257c610_AsI64(_438334_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_1e5c05878:;
				};
			}
		}
		else if (_1e31ccddb_IsUnsigInt(_438321_t)) {
			_case_begin_1e5c04c51:;
			{
				{
					auto _match_expr{ _1e2708813_BitsizeOf(_1e27020d1_RealKindOf(_438321_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1e5c08eec:;
						{
							_1e257d0d3_SetU64(_438334_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1e257c874_AsU64(_438334_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1e5c09063:;
						{
							_1e257d0d3_SetU64(_438334_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_1e257c874_AsU64(_438334_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LL) {
						_case_begin_1e5c090c9:;
						{
							_1e257d0d3_SetU64(_438334_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_1e257c874_AsU64(_438334_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LL) {
						_case_begin_1e5c09140:;
						{
							_1e257d0d3_SetU64(_438334_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_1e257c874_AsU64(_438334_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_1e5c0856d:;
				};
			}
		}
		else if (_1e31cd4a2_IsFloat(_438321_t)) {
			_case_begin_1e5c04cc8:;
			{
				{
					auto _match_expr{ _1e2708813_BitsizeOf(_1e27020d1_RealKindOf(_438321_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1e5c0c40c:;
						{
							_1e257d853_SetF64(_438334_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1e257cad8_AsF64(_438334_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1e5c0c660:;
						{
							_1e257d853_SetF64(_438334_d.get()._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_1e257cad8_AsF64(_438334_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_1e5c0bb9d:;
				};
			}
		}
		_match_end_1e5c04a97:;
	};
}



inline void _1e313257c_updateModelToGenericIns(jule::Any& _441733_m, jule::Ptr<_1e258dee5_FnIns>& _441752_f) {
	{
		auto &_match_expr{ _441733_m };
		
		if (_match_expr.type_is<jule::Ptr<_1e258dee5_FnIns>>()) {
			_case_begin_1e5c0d6c7:;
			{
				_441733_m=static_cast<jule::Any>(_441752_f);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2585d88_StructSubIdentExprModel>>()) {
			_case_begin_1e5c0caa0:;
			{
				_441733_m.operator jule::Ptr<_1e2585d88_StructSubIdentExprModel>().get()._field_Method=_441752_f;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2586075_StructStaticIdentExprModel>>()) {
			_case_begin_1e5c0cb16:;
			{
				_441733_m.operator jule::Ptr<_1e2586075_StructStaticIdentExprModel>().get()._field_Method=_441752_f;
			}
		}
		_match_end_1e5c06a33:;
	};
}



inline jule::Bool _1e31327be_pushSubIdentFromExpr(jule::Any _442829_expr, jule::Ptr<_1e251639b_SubIdentTypeDecl>& _442850_t) {
	{
		auto &_match_expr{ _442829_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1e251bc20_IdentExpr>>()) {
			_case_begin_1e5c1083e:;
			{
				jule::Ptr<_1e251bc20_IdentExpr> _443117_e = _442829_expr.operator jule::Ptr<_1e251bc20_IdentExpr>();;
				_442850_t.get()._field_Idents = jule::alloc_for_append(_442850_t.get()._field_Idents,1);_442850_t.get()._field_Idents.__push(jule::new_ptr<_1e2515c4c_IdentTypeDecl>(_1e2515c4c_IdentTypeDecl{._field_Token=_443117_e.get()._field_Token, ._field_Ident=_443117_e.get()._field_Ident, }));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e251d4b3_SubIdentExpr>>()) {
			_case_begin_1e5c108a5:;
			{
				jule::Ptr<_1e251d4b3_SubIdentExpr> _443717_e = _442829_expr.operator jule::Ptr<_1e251d4b3_SubIdentExpr>();;
				if ((!(_1e31327be_pushSubIdentFromExpr(_443717_e.get()._field_Expr.get()._field_Kind,_442850_t)))) {
					return false;
				};
				_442850_t.get()._field_Idents = jule::alloc_for_append(_442850_t.get()._field_Idents,1);_442850_t.get()._field_Idents.__push(jule::new_ptr<_1e2515c4c_IdentTypeDecl>(_1e2515c4c_IdentTypeDecl{._field_Token=_443717_e.get()._field_Ident, ._field_Ident=_443717_e.get()._field_Ident.get()._field_Kind, }));;
			}
		}
		else {
			_case_begin_1e5c10773:;
			{
				return false;
			}
		}
		_match_end_1e5c1071d:;
	};
	return true;
}



inline jule::Bool _1e314b6a6_kindUsesGenerics(jule::Any& _156422_k, jule::Slice<jule::Ptr<_1e2522c6a_GenericDecl>>& _156440_generics) {
	{
		auto &expr = _156440_generics;
		auto it = expr.begin();
		_iter_begin_1e6024c96:;
		if (it != expr.end()) {
			jule::Ptr<_1e2522c6a_GenericDecl> &_156512_g = *it;
			{
				if (static__1e314b2aa_exist(_156512_g.get()._field_Ident,_156422_k)) {
					return true;
				};
			}
			_iter_next_1e6024c96:;
			++it;
			goto _iter_begin_1e6024c96;
		}
		_iter_end_1e6024c96:;
	};
	return false;
}



inline jule::Bool _1e314ba3b_hasDirective(jule::Slice<jule::Ptr<_1e24d1e8d_Directive>>& _157422_directives, jule::Str _157453_tag) {
	{
		auto &expr = _157422_directives;
		auto it = expr.begin();
		_iter_begin_1e6025dda:;
		if (it != expr.end()) {
			jule::Ptr<_1e24d1e8d_Directive> _157517_dr = *it;
			{
				if ((_157517_dr.get()._field_Tag.get()._field_Kind == _157453_tag)) {
					return true;
				};
			}
			_iter_next_1e6025dda:;
			++it;
			goto _iter_begin_1e6025dda;
		}
		_iter_end_1e6025dda:;
	};
	return false;
}



inline jule::Bool _1e314bcd3_canGetPtr(jule::Ptr<_1e310908c_Data>& _158319_d) {
	if (((!(_158319_d.get()._field_Lvalue)) || _1e3109950_IsConst(_158319_d.ptr()))) {
		return false;
	};
	{
		
		if (((_1e31381a9_Fn(_158319_d.get()._field_Kind.ptr()) != nullptr) || (_1e3137708_Enum(_158319_d.get()._field_Kind.ptr()) != nullptr))) {
			_case_begin_1e6027a46:;
			{
				return false;
			}
		}
		else {
			_case_begin_1e6027309:;
			{
				return true;
			}
		}
		_match_end_1e60271e9:;
	};
}



inline jule::Bool _1e314c102_isValidForSptrType(jule::Ptr<_1e3134da9_TypeKind>& _159628_t) {
	jule::Ptr<_1e253220d_StructIns> _159713_s = _1e313841d_Struct(_159628_t.ptr());;
	if ((((_159713_s != nullptr) && (_159713_s.get()._field_Decl != nullptr)) && _159713_s.get()._field_Decl.get()._field_CppLinked)) {
		return false;
	};
	return true;
}



inline jule::Bool _1e314c399_isValidForRef(jule::Ptr<_1e3134da9_TypeKind>& _160523_t) {
	return (_1e31381a9_Fn(_160523_t.ptr()) == nullptr);
}



inline jule::Bool _1e314c663_isBuiltinStrConvertable(jule::Ptr<_1e3134da9_TypeKind>& _160833_t) {
	return (((!(_1e3136042_Void(_160833_t.ptr()))) && (_1e31381a9_Fn(_160833_t.ptr()) == nullptr)) && (_1e3138b5a_Tup(_160833_t.ptr()) == nullptr));
}



inline jule::Str _1e314c8d8_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _161227_tokens) {
	jule::Str _161313_s = _161227_tokens[0LL].get()._field_Kind;;
	{
		auto expr = _161227_tokens.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1e602b7a3:;
		if (it != expr.end()) {
			jule::Ptr<_1d42b43cc_Token> &_161412_token = *it;
			{
				_161313_s+=jule::Str("::", 2);
				_161313_s+=_161412_token.get()._field_Kind;
			}
			_iter_next_1e602b7a3:;
			++it;
			goto _iter_begin_1e602b7a3;
		}
		_iter_end_1e602b7a3:;
	};
	return _161313_s;
}



inline jule::Ptr<_1e3139881_Prim> _1e314cc90_buildPrimType(jule::Str _162118_kind) {
	return jule::new_ptr<_1e3139881_Prim>(_1e3139881_Prim{._field_Kind=_162118_kind});
}



inline jule::Ptr<_1e2505d6e_Struct> _1e314d037_getStructFromKind(jule::Ptr<_1e3134da9_TypeKind> _162726_k) {
	{
		
		if ((_162726_k == nullptr)) {
			_case_begin_1e602ca90:;
			{
				return nullptr;
			}
		}
		else if ((_1e313841d_Struct(_162726_k.ptr()) != nullptr)) {
			_case_begin_1e602cb06:;
			{
				return _1e313841d_Struct(_162726_k.ptr()).get()._field_Decl;
			}
		}
		else if ((_1e3137230_Sptr(_162726_k.ptr()) != nullptr)) {
			_case_begin_1e602cb6c:;
			{
				return _1e314d037_getStructFromKind(_1e3137230_Sptr(_162726_k.ptr()).get()._field_Elem);
			}
		}
		else if ((_1e3137e45_Slc(_162726_k.ptr()) != nullptr)) {
			_case_begin_1e602cbd3:;
			{
				return _1e314d037_getStructFromKind(_1e3137e45_Slc(_162726_k.ptr()).get()._field_Elem);
			}
		}
		else if ((_1e3137bd1_Arr(_162726_k.ptr()) != nullptr)) {
			_case_begin_1e602ce8b:;
			{
				return _1e314d037_getStructFromKind(_1e3137bd1_Arr(_162726_k.ptr()).get()._field_Elem);
			}
		}
		else if ((_1e3137494_Ptr(_162726_k.ptr()) != nullptr)) {
			_case_begin_1e602d002:;
			{
				return nullptr;
			}
		}
		else {
			_case_begin_1e602ca29:;
			{
				return nullptr;
			}
		}
		_match_end_1e5ebaac7:;
	};
}



inline jule::Bool _1e314d2ce_isPrim(jule::Str _165011_kind) {
	return ((((((((((((((((_165011_kind == jule::Str("i8", 2)) || (_165011_kind == jule::Str("i16", 3))) || (_165011_kind == jule::Str("i32", 3))) || (_165011_kind == jule::Str("i64", 3))) || (_165011_kind == jule::Str("u8", 2))) || (_165011_kind == jule::Str("u16", 3))) || (_165011_kind == jule::Str("u32", 3))) || (_165011_kind == jule::Str("u64", 3))) || (_165011_kind == jule::Str("f32", 3))) || (_165011_kind == jule::Str("f64", 3))) || (_165011_kind == jule::Str("int", 3))) || (_165011_kind == jule::Str("uint", 4))) || (_165011_kind == jule::Str("uintptr", 7))) || (_165011_kind == jule::Str("bool", 4))) || (_165011_kind == jule::Str("str", 3))) || (_165011_kind == jule::Str("any", 3)));
}



inline void _1e314d587_applyImplicitCast(jule::Ptr<_1e3134da9_TypeKind>& _166927_dest, jule::Ptr<_1e310908c_Data>& _166949_d) {
	if (_1e3135ccd_IsNil(_166949_d.get()._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1e3139881_Prim> _16739_destPrim = _1e3136ebb_Prim(_166927_dest.ptr());;
	jule::Ptr<_1e3139881_Prim> _16749_prim = _1e3136ebb_Prim(_166949_d.get()._field_Kind.ptr());;
	if ((_16739_destPrim != nullptr)) {
		if (_1e313cd29_IsAny(_16739_destPrim.ptr())) {
			_1e3131537_applyCastKind(_166949_d,_166927_dest);
			return;;
		};
		if (((((((!(_1e3135a69_CppLinked(_166949_d.get()._field_Kind.ptr()))) && (!(_166949_d.get()._field_Kind.get()._field_Variadic))) && (!(_166949_d.get()._field_Lvalue))) && (!(_1e3109950_IsConst(_166949_d.ptr())))) && (_16749_prim != nullptr)) && _1e31cd749_IsNum(_16749_prim.get()._field_Kind))) {
			_1e3131537_applyCastKind(_166949_d,_166927_dest);
		};
		return;;
	};
	if (((_1e3138682_Trait(_166927_dest.ptr()) != nullptr) && (_1e3138682_Trait(_166949_d.get()._field_Kind.ptr()) == nullptr))) {
		_1e313127e_applyCastKindModel(_166949_d,_166927_dest);
		return;;
	};
	if (((_1e313796c_TypeEnum(_166927_dest.ptr()) != nullptr) && (_1e313796c_TypeEnum(_166949_d.get()._field_Kind.ptr()) == nullptr))) {
		_1e313127e_applyCastKindModel(_166949_d,_166927_dest);
		return;;
	};
}



inline std::tuple<jule::Ptr<_1e310432e_SymbolTable>,jule::Slice<_20a35491e_Log>> _1e315147a_buildSymbols(jule::Ptr<_1e24d0d9e_Ast>& _1522_ast, jule::Trait<_1e3202d89_Importer>& _1538_importer, jule::Ptr<_1e259776d_symbolBuilder> _1562_owner) {
	jule::Ptr<_1e259776d_symbolBuilder> _1613_sb = jule::new_ptr<_1e259776d_symbolBuilder>(_1e259776d_symbolBuilder{._field_owner=_1562_owner, ._field_importer=_1538_importer, ._field_ast=_1522_ast, });;
	_1e259c71d_build(_1613_sb);
	if ((_1613_sb.get()._field_errors.len() == 0LL)) {
		return std::make_tuple(_1613_sb.get()._field_table,nullptr);
	};
	return std::make_tuple(nullptr,_1613_sb.get()._field_errors);
}



inline std::tuple<jule::Ptr<_1e3208576_Package>,jule::Slice<_20a35491e_Log>> _1e31518a9_analyzePackage(jule::Slice<jule::Ptr<_1e24d0d9e_Ast>>& _2924_files, jule::Trait<_1e3202d89_Importer>& _2944_importer, jule::I64& _2965_flags) {
	jule::Slice<jule::Ptr<_1e310432e_SymbolTable>> _3113_tables = jule::Slice<jule::Ptr<_1e310432e_SymbolTable>>::alloc(0LL,_2924_files.len());;
	{
		auto &expr = _2924_files;
		auto it = expr.begin();
		_iter_begin_1e61332b1:;
		if (it != expr.end()) {
			jule::Ptr<_1e24d0d9e_Ast> _3217_f = *it;
			{
				jule::Ptr<_1e310432e_SymbolTable> _3318_table;;
				jule::Slice<_20a35491e_Log> _3329_errors;;
				std::tie(_3318_table,_3329_errors) = _1e315147a_buildSymbols(_3217_f,_2944_importer,nullptr);
				if ((_3329_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_3329_errors);
				};
				_3113_tables = jule::alloc_for_append(_3113_tables,1);_3113_tables.__push(_3318_table);;
			}
			_iter_next_1e61332b1:;
			++it;
			goto _iter_begin_1e61332b1;
		}
		_iter_end_1e61332b1:;
	};
	jule::Ptr<_1e320d768_Sema> _4013_sema = jule::new_ptr<_1e320d768_Sema>(_1e320d768_Sema{._field_flags=_2965_flags});;
	_1e3227166_check(_4013_sema, _3113_tables);
	if ((_4013_sema.get()._field_errors.len() > 0LL)) {
		return std::make_tuple(nullptr,_4013_sema.get()._field_errors);
	};
	jule::Ptr<_1e3208576_Package> _4813_pkg = jule::new_ptr<_1e3208576_Package>(_1e3208576_Package{._field_Files=_4013_sema.get()._field_files});;
	return std::make_tuple(_4813_pkg,nullptr);
}



inline std::tuple<jule::Ptr<_1e3208576_Package>,jule::Slice<_20a35491e_Log>> _1e3151c94_AnalyzePackage(jule::Slice<jule::Ptr<_1e24d0d9e_Ast>> _7227_files, jule::Trait<_1e3202d89_Importer> _7246_importer, jule::I64 _7266_flags) {
	if ((_7227_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Ptr<_1e3208576_Package> _7614_package;;
	jule::Slice<_20a35491e_Log> _7627_logs;;
	std::tie(_7614_package,_7627_logs) = _1e31518a9_analyzePackage(_7227_files,_7246_importer,_7266_flags);
	return std::make_tuple(_7614_package,_7627_logs);
}



inline jule::Ptr<_1e258dee5_FnIns> _1e3277cbb_findBuiltinFn(jule::Str _2218_ident) {
	{
		auto &_match_expr{ _2218_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1e613adce:;
			{
				static jule::Ptr<_1e258dee5_FnIns> _2520_f = jule::new_ptr<_1e258dee5_FnIns>(_1e258dee5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e310908c_Data>(jule::Ptr<_1e310ab0a_Eval>&,jule::Ptr<_1e251de75_FnCallExpr>&,jule::Ptr<_1e310908c_Data>&)>(_1e32987c0_builtinCallerOut), });;
				return _2520_f;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1e613ae45:;
			{
				static jule::Ptr<_1e258dee5_FnIns> _2820_f = jule::new_ptr<_1e258dee5_FnIns>(_1e258dee5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e310908c_Data>(jule::Ptr<_1e310ab0a_Eval>&,jule::Ptr<_1e251de75_FnCallExpr>&,jule::Ptr<_1e310908c_Data>&)>(_1e3298baa_builtinCallerOutln), });;
				return _2820_f;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_1e613b154:;
			{
				static jule::Ptr<_1e258dee5_FnIns> _3120_f = jule::new_ptr<_1e258dee5_FnIns>(_1e258dee5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e310908c_Data>(jule::Ptr<_1e310ab0a_Eval>&,jule::Ptr<_1e251de75_FnCallExpr>&,jule::Ptr<_1e310908c_Data>&)>(_1e3299095_builtinCallerNew), });;
				return _3120_f;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_1e613b1ba:;
			{
				static jule::Ptr<_1e258dee5_FnIns> _3420_f = jule::new_ptr<_1e258dee5_FnIns>(_1e258dee5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e310908c_Data>(jule::Ptr<_1e310ab0a_Eval>&,jule::Ptr<_1e251de75_FnCallExpr>&,jule::Ptr<_1e310908c_Data>&)>(_1e3299480_builtinCallerPanic), });;
				return _3420_f;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_1e613b231:;
			{
				static jule::Ptr<_1e258dee5_FnIns> _3720_f = jule::new_ptr<_1e258dee5_FnIns>(_1e258dee5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e310908c_Data>(jule::Ptr<_1e310ab0a_Eval>&,jule::Ptr<_1e251de75_FnCallExpr>&,jule::Ptr<_1e310908c_Data>&)>(_1e3299a9b_builtinCallerMake), });;
				return _3720_f;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_1e613b297:;
			{
				static jule::Ptr<_1e258dee5_FnIns> _4020_f = jule::new_ptr<_1e258dee5_FnIns>(_1e258dee5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e310908c_Data>(jule::Ptr<_1e310ab0a_Eval>&,jule::Ptr<_1e251de75_FnCallExpr>&,jule::Ptr<_1e310908c_Data>&)>(_1e3299e86_builtinCallerAppend), });;
				return _4020_f;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_1e613b30d:;
			{
				static jule::Ptr<_1e258dee5_FnIns> _4320_f = jule::new_ptr<_1e258dee5_FnIns>(_1e258dee5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e310908c_Data>(jule::Ptr<_1e310ab0a_Eval>&,jule::Ptr<_1e251de75_FnCallExpr>&,jule::Ptr<_1e310908c_Data>&)>(_1e329ac89_builtinCallerCopy), });;
				return _4320_f;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_1e613b374:;
			{
				static jule::Ptr<_1e258dee5_FnIns> _4620_f = jule::new_ptr<_1e258dee5_FnIns>(_1e258dee5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e310908c_Data>(jule::Ptr<_1e310ab0a_Eval>&,jule::Ptr<_1e251de75_FnCallExpr>&,jule::Ptr<_1e310908c_Data>&)>(_1e329b174_builtinCallerClone), });;
				return _4620_f;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_1e613b440:;
			{
				static jule::Ptr<_1e258dee5_FnIns> _4920_f = jule::new_ptr<_1e258dee5_FnIns>(_1e258dee5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e310908c_Data>(jule::Ptr<_1e310ab0a_Eval>&,jule::Ptr<_1e251de75_FnCallExpr>&,jule::Ptr<_1e310908c_Data>&)>(_1e329b55e_builtinCallerAssert), });;
				return _4920_f;
			}
		}
		else {
			_case_begin_1e613abc0:;
			{
				return nullptr;
			}
		}
		_match_end_1e613a62b:;
	};
}



inline jule::Ptr<_1e31341b6_TypeAlias> _1e3259d8b_findBuiltinTypeAlias(jule::Str _5625_ident) {
	{
		auto &_match_expr{ _5625_ident };
		
		if (_match_expr == jule::Str("byte", 4)) {
			_case_begin_1e6141ba4:;
			{
				static jule::Ptr<_1e31341b6_TypeAlias> _5920_t = jule::new_ptr<_1e31341b6_TypeAlias>(_1e31341b6_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1e3139012_TypeSymbol>(_1e3139012_TypeSymbol{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("u8", 2)), 6)})}), });;
				return _5920_t;
			}
		}
		else if (_match_expr == jule::Str("rune", 4)) {
			_case_begin_1e6141c1a:;
			{
				static jule::Ptr<_1e31341b6_TypeAlias> _6920_t = jule::new_ptr<_1e31341b6_TypeAlias>(_1e31341b6_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1e3139012_TypeSymbol>(_1e3139012_TypeSymbol{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("i32", 3)), 6)})}), });;
				return _6920_t;
			}
		}
		else {
			_case_begin_1e6141346:;
			{
				return nullptr;
			}
		}
		_match_end_1e613b7d6:;
	};
}



inline jule::Any _1e3247dbd_findBuiltinDef(jule::Str _8319_ident) {
	jule::Ptr<_1e258dee5_FnIns> _8413_f = _1e3277cbb_findBuiltinFn(_8319_ident);;
	if ((_8413_f != nullptr)) {
		return jule::Any(_8413_f);
	};
	jule::Ptr<_1e31341b6_TypeAlias> _8813_ta = _1e3259d8b_findBuiltinTypeAlias(_8319_ident);;
	if ((_8813_ta != nullptr)) {
		return jule::Any(_8813_ta);
	};
	return nullptr;
}



inline jule::Any _1e3247692_findBuiltinDefStdDebug(jule::Str _9527_ident) {
	{
		auto &_match_expr{ _9527_ident };
		
		if (_match_expr == jule::Str("Out", 3)) {
			_case_begin_1e6145658:;
			{
				static jule::Ptr<_1e258dee5_FnIns> _9820_f = jule::new_ptr<_1e258dee5_FnIns>(_1e258dee5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e310908c_Data>(jule::Ptr<_1e310ab0a_Eval>&,jule::Ptr<_1e251de75_FnCallExpr>&,jule::Ptr<_1e310908c_Data>&)>(_1e329ce34_builtinCallerStdDebugOut), });;
				return jule::Any(_9820_f);
			}
		}
		else if (_match_expr == jule::Str("Outln", 5)) {
			_case_begin_1e61456be:;
			{
				static jule::Ptr<_1e258dee5_FnIns> _10120_f = jule::new_ptr<_1e258dee5_FnIns>(_1e258dee5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e310908c_Data>(jule::Ptr<_1e310ab0a_Eval>&,jule::Ptr<_1e251de75_FnCallExpr>&,jule::Ptr<_1e310908c_Data>&)>(_1e329d31e_builtinCallerStdDebugOutln), });;
				return jule::Any(_10120_f);
			}
		}
		else {
			_case_begin_1e614524b:;
			{
				return nullptr;
			}
		}
		_match_end_1e6145108:;
	};
}



inline jule::Any _1e32477c4_findBuiltinDefStdMem(jule::Str _10825_ident) {
	{
		auto &_match_expr{ _10825_ident };
		
		if (_match_expr == jule::Str("SizeOf", 6)) {
			_case_begin_1e6145aa9:;
			{
				static jule::Ptr<_1e258dee5_FnIns> _11120_f = jule::new_ptr<_1e258dee5_FnIns>(_1e258dee5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e310908c_Data>(jule::Ptr<_1e310ab0a_Eval>&,jule::Ptr<_1e251de75_FnCallExpr>&,jule::Ptr<_1e310908c_Data>&)>(_1e329b96b_builtinCallerStdMemSizeOf), });;
				return jule::Any(_11120_f);
			}
		}
		else if (_match_expr == jule::Str("AlignOf", 7)) {
			_case_begin_1e6145b20:;
			{
				static jule::Ptr<_1e258dee5_FnIns> _11420_f = jule::new_ptr<_1e258dee5_FnIns>(_1e258dee5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e310908c_Data>(jule::Ptr<_1e310ab0a_Eval>&,jule::Ptr<_1e251de75_FnCallExpr>&,jule::Ptr<_1e310908c_Data>&)>(_1e329bc79_builtinCallerStdMemAlignOf), });;
				return jule::Any(_11420_f);
			}
		}
		else if (_match_expr == jule::Str("Free", 4)) {
			_case_begin_1e6145b86:;
			{
				static jule::Ptr<_1e258dee5_FnIns> _11720_f = jule::new_ptr<_1e258dee5_FnIns>(_1e258dee5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e310908c_Data>(jule::Ptr<_1e310ab0a_Eval>&,jule::Ptr<_1e251de75_FnCallExpr>&,jule::Ptr<_1e310908c_Data>&)>(_1e329c197_builtinCallerStdMemFree), });;
				return jule::Any(_11720_f);
			}
		}
		else {
			_case_begin_1e6146648:;
			{
				return nullptr;
			}
		}
		_match_end_1e61471b5:;
	};
}



inline jule::Any _1e3263977_findBuiltinDefStdJuleIntegrated(jule::Str _12436_ident) {
	{
		auto &_match_expr{ _12436_ident };
		
		if (_match_expr == jule::Str("ToStr", 5)) {
			_case_begin_1e614758e:;
			{
				static jule::Ptr<_1e258dee5_FnIns> _12720_f = jule::new_ptr<_1e258dee5_FnIns>(_1e258dee5_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e310908c_Data>(jule::Ptr<_1e310ab0a_Eval>&,jule::Ptr<_1e251de75_FnCallExpr>&,jule::Ptr<_1e310908c_Data>&)>(_1e329c5c6_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_12720_f);
			}
		}
		else if (_match_expr == jule::Str("Emit", 4)) {
			_case_begin_1e6147605:;
			{
				static jule::Ptr<_1e258dee5_FnIns> _13020_f = jule::new_ptr<_1e258dee5_FnIns>(_1e258dee5_FnIns{._field_Decl=jule::new_ptr<_1e258b344_Fn>(_1e258b344_Fn{._field_Generics=jule::Slice<jule::Ptr<_1e2522c6a_GenericDecl>>::alloc(1LL), }), ._field_caller=jule::Fn<jule::Ptr<_1e310908c_Data>(jule::Ptr<_1e310ab0a_Eval>&,jule::Ptr<_1e251de75_FnCallExpr>&,jule::Ptr<_1e310908c_Data>&)>(_1e329c9e4_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_13020_f);
			}
		}
		else {
			_case_begin_1e614977d:;
			{
				return nullptr;
			}
		}
		_match_end_1e614963a:;
	};
}



inline jule::Any _1e3263aa9_findPackageBuiltinDef(jule::Str _14226_link_path, jule::Str _14242_ident) {
	{
		auto &_match_expr{ _14226_link_path };
		
		if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_1e614b780:;
			{
				return jule::Any(_1e3247692_findBuiltinDefStdDebug(_14242_ident));
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_1e614b7e6:;
			{
				return jule::Any(_1e32477c4_findBuiltinDefStdMem(_14242_ident));
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_1e614b85c:;
			{
				return jule::Any(_1e3263977_findBuiltinDefStdJuleIntegrated(_14242_ident));
			}
		}
		else {
			_case_begin_1e614997b:;
			{
				return nullptr;
			}
		}
		_match_end_1e614a581:;
	};
}



inline jule::Ptr<_1e310908c_Data> _1e3297868_builtinCallerCommonPlain(jule::Ptr<_1e310ab0a_Eval>& _15534_e, jule::Ptr<_1e251de75_FnCallExpr>& _15549_fc, jule::Ptr<_1e310908c_Data>& _15571_d) {
	jule::Ptr<_1e258dee5_FnIns> _15613_f = _1e31381a9_Fn(_15571_d.get()._field_Kind.ptr());;
	_1e30eab72_fnCallArgChecker _15813_fcac = _1e30eab72_fnCallArgChecker{._field_e=_15534_e, ._field_args=_15549_fc.get()._field_Args, ._field_errorToken=_15549_fc.get()._field_Token, ._field_f=_15613_f, ._field_dynamicAnnotation=false, };;
	if ((!(_1e30ed03c_check(&_15813_fcac)))) {
		return nullptr;
	};
	jule::Ptr<_1e2584b01_FnCallExprModel> _16913_model = jule::new_ptr<_1e2584b01_FnCallExprModel>(_1e2584b01_FnCallExprModel{._field_Token=_15549_fc.get()._field_Token, ._field_Func=_15613_f, ._field_Expr=_15571_d.get()._field_Model, ._field_Args=_15813_fcac._field_argModels, });;
	if ((_15613_f.get()._field_Result == nullptr)) {
		_15571_d=_1e3131735_buildVoidData();
	} else {
		_15571_d=jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=_15613_f.get()._field_Result, });
	};
	_15571_d.get()._field_Model=static_cast<jule::Any>(_16913_model);
	return _15571_d;
}



inline jule::Ptr<_1e310908c_Data> _1e3297ba9_builtinCallerCommon(jule::Ptr<_1e310ab0a_Eval>& _18829_e, jule::Ptr<_1e251de75_FnCallExpr>& _18844_fc, jule::Ptr<_1e310908c_Data>& _18866_d) {
	return _1e3297868_builtinCallerCommonPlain(_18829_e,_18844_fc,_18866_d);
}



inline jule::Ptr<_1e310908c_Data> _1e3298094_builtinCallerCommonMut(jule::Ptr<_1e310ab0a_Eval>& _19232_e, jule::Ptr<_1e251de75_FnCallExpr>& _19247_fc, jule::Ptr<_1e310908c_Data>& _19269_d) {
	if ((!(_19269_d.get()._field_Mutable))) {
		_1e310b116_pushErr(_19232_e.ptr(), _19247_fc.get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	return _1e3297ba9_builtinCallerCommon(_19232_e,_19247_fc,_19269_d);
}



inline jule::Ptr<_1e310908c_Data> _1e32983d5_builtinCallerError(jule::Ptr<_1e310ab0a_Eval>& _19928_e, jule::Ptr<_1e251de75_FnCallExpr>& _19943_fc) {
	if ((_19943_fc.get()._field_Args.len() < 1LL)) {
		_1e310b116_pushErr(_19928_e.ptr(), _19943_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("err", 3))}));
		return nullptr;
	};
	if ((_19943_fc.get()._field_Args.len() > 1LL)) {
		_1e310b116_pushErr(_19928_e.ptr(), _19943_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e310908c_Data> _20713_expr = _1e312664d_evalExpr(_19928_e, _19943_fc.get()._field_Args[0LL]);;
	if ((_20713_expr == nullptr)) {
		return nullptr;
	};
	if (_1e3109477_IsNil(_20713_expr.ptr())) {
		_1e310b116_pushErr(_19928_e.ptr(), _19943_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("you cannot call error function with nil", 39),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e310908c_Data> _21613_d = _1e3131735_buildVoidData();;
	_21613_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e2587c58_BuiltinErrorCallExprModel>(_1e2587c58_BuiltinErrorCallExprModel{._field_Err=_20713_expr.get()._field_Model}));
	return _21613_d;
}



inline jule::Ptr<_1e310908c_Data> _1e32987c0_builtinCallerOut(jule::Ptr<_1e310ab0a_Eval>& _22426_e, jule::Ptr<_1e251de75_FnCallExpr>& _22441_fc, jule::Ptr<_1e310908c_Data>& ) {
	if ((_22441_fc.get()._field_Args.len() < 1LL)) {
		_1e310b116_pushErr(_22426_e.ptr(), _22441_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1))}));
		return nullptr;
	};
	if ((_22441_fc.get()._field_Args.len() > 1LL)) {
		_1e310b116_pushErr(_22426_e.ptr(), _22441_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e310908c_Data> _23313_expr = _1e312664d_evalExpr(_22426_e, _22441_fc.get()._field_Args[0LL]);;
	if ((_23313_expr == nullptr)) {
		return nullptr;
	};
	if ((!(_1e314c663_isBuiltinStrConvertable(_23313_expr.get()._field_Kind)))) {
		_1e310b116_pushErr(_22426_e.ptr(), _22441_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e310908c_Data> _24313_d = _1e3131735_buildVoidData();;
	_24313_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e2586a15_BuiltinOutCallExprModel>(_1e2586a15_BuiltinOutCallExprModel{._field_Expr=_23313_expr.get()._field_Model, }));
	return _24313_d;
}



inline jule::Ptr<_1e310908c_Data> _1e3298baa_builtinCallerOutln(jule::Ptr<_1e310ab0a_Eval>& _24828_e, jule::Ptr<_1e251de75_FnCallExpr>& _24843_fc, jule::Ptr<_1e310908c_Data>& _24865_d) {
	_24865_d=_1e32987c0_builtinCallerOut(_24828_e,_24843_fc,_24865_d);
	if ((_24865_d == nullptr)) {
		return nullptr;
	};
	_24865_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e2586c02_BuiltinOutlnCallExprModel>(_1e2586c02_BuiltinOutlnCallExprModel{._field_Expr=_24865_d.get()._field_Model.operator jule::Ptr<_1e2586a15_BuiltinOutCallExprModel>().get()._field_Expr, }));
	return _24865_d;
}



inline jule::Ptr<_1e310908c_Data> _1e3299095_builtinCallerNew(jule::Ptr<_1e310ab0a_Eval>& _26026_e, jule::Ptr<_1e251de75_FnCallExpr>& _26041_fc, jule::Ptr<_1e310908c_Data>& _26063_d) {
	if ((_26041_fc.get()._field_Args.len() < 1LL)) {
		_1e310b116_pushErr(_26026_e.ptr(), _26041_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4))}));
		return nullptr;
	};
	if ((_26041_fc.get()._field_Args.len() > 2LL)) {
		_1e310b116_pushErr(_26026_e.ptr(), _26041_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e310908c_Data> _26913_t = _1e3126032_evalExprKind(_26026_e, _26041_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_26913_t == nullptr)) {
		return nullptr;
	};
	if ((!(_26913_t.get()._field_Decl))) {
		_1e310b116_pushErr(_26026_e.ptr(), _26041_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((!(_1e314c102_isValidForSptrType(_26913_t.get()._field_Kind)))) {
		jule::Ptr<_1e253220d_StructIns> _28017_s = _1e313841d_Struct(_26913_t.get()._field_Kind.ptr());;
		if ((((_28017_s != nullptr) && (_28017_s.get()._field_Decl != nullptr)) && _28017_s.get()._field_Decl.get()._field_CppLinked)) {
			_1e310b116_pushErr(_26026_e.ptr(), _26041_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
		};
		return nullptr;
	};
	_26063_d.get()._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(jule::new_ptr<_1e313d115_Sptr>(_1e313d115_Sptr{._field_Elem=_26913_t.get()._field_Kind}), 7)});
	if ((_26041_fc.get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1e3134da9_TypeKind> _29417_old = _26026_e.get()._field_prefix;;
		_26026_e.get()._field_prefix=_26913_t.get()._field_Kind;
		jule::Ptr<_1e310908c_Data> _29717_init = _1e312664d_evalExpr(_26026_e, _26041_fc.get()._field_Args[1LL]);;
		_26026_e.get()._field_prefix=_29417_old;
		if ((_29717_init != nullptr)) {
			jule::Ptr<_1d42b43cc_Token> _30221_token = _26041_fc.get()._field_Args[1LL].get()._field_Token;;
			;
			_1e3219bc5_checkValidityForInitExpr(_26026_e.get()._field_s, (!(_26026_e.get()._field_immutable)),false,_26913_t.get()._field_Kind,_29717_init,_30221_token);
			_1e3216e8b_checkAssignType(_26026_e.get()._field_s, false,_26913_t.get()._field_Kind,_29717_init,_30221_token);
			_26063_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e25870cb_BuiltinNewCallExprModel>(_1e25870cb_BuiltinNewCallExprModel{._field_Kind=_26913_t.get()._field_Kind, ._field_Init=_29717_init.get()._field_Model}));
		};
	} else {
		_26063_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e25870cb_BuiltinNewCallExprModel>(_1e25870cb_BuiltinNewCallExprModel{._field_Kind=_26913_t.get()._field_Kind, }));
	};
	return _26063_d;
}



inline jule::Ptr<_1e310908c_Data> _1e3299480_builtinCallerPanic(jule::Ptr<_1e310ab0a_Eval>& _32228_e, jule::Ptr<_1e251de75_FnCallExpr>& _32243_fc, jule::Ptr<_1e310908c_Data>& ) {
	if ((_32243_fc.get()._field_Args.len() < 1LL)) {
		_1e310b116_pushErr(_32228_e.ptr(), _32243_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("message", 7))}));
		return nullptr;
	};
	if ((_32243_fc.get()._field_Args.len() > 1LL)) {
		_1e310b116_pushErr(_32228_e.ptr(), _32243_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e310908c_Data> _33113_expr = _1e312664d_evalExpr(_32228_e, _32243_fc.get()._field_Args[0LL]);;
	if ((_33113_expr == nullptr)) {
		return nullptr;
	};
	if (((_1e3136ebb_Prim(_33113_expr.get()._field_Kind.ptr()) == nullptr) || (!(_1e313cab5_IsStr(_1e3136ebb_Prim(_33113_expr.get()._field_Kind.ptr()).ptr()))))) {
		_1e310b116_pushErr(_32228_e.ptr(), _32243_fc.get()._field_Token,jule::Str("panic function only accepts strings", 35),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e310908c_Data> _34013_d = _1e3131735_buildVoidData();;
	_34013_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e25872b8_BuiltinPanicCallExprModel>(_1e25872b8_BuiltinPanicCallExprModel{._field_Token=_32243_fc.get()._field_Token, ._field_Expr=_33113_expr.get()._field_Model}));
	return _34013_d;
}



inline jule::Ptr<_1e310908c_Data> _1e3299a9b_builtinCallerMake(jule::Ptr<_1e310ab0a_Eval>& _34827_e, jule::Ptr<_1e251de75_FnCallExpr>& _34842_fc, jule::Ptr<_1e310908c_Data>& _34864_d) {
	if ((_34842_fc.get()._field_Args.len() < 2LL)) {
		if ((_34842_fc.get()._field_Args.len() == 1LL)) {
			_1e310b116_pushErr(_34827_e.ptr(), _34842_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("size", 4))}));
			return nullptr;
		};
		_1e310b116_pushErr(_34827_e.ptr(), _34842_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type, size", 10))}));
		return nullptr;
	};
	jule::Ptr<_1e310908c_Data> _35813_t = _1e3126032_evalExprKind(_34827_e, _34842_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_35813_t == nullptr)) {
		return nullptr;
	};
	{
		
		if ((!(_35813_t.get()._field_Decl))) {
			_case_begin_1e61713a9:;
			{
				goto _match_end_1e6171695;
			}
		}
		else if ((_1e3137e45_Slc(_35813_t.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6171420:;
			{
				if ((_34842_fc.get()._field_Args.len() > 3LL)) {
					_1e310b116_pushErr(_34827_e.ptr(), _34842_fc.get()._field_Args[3LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				};
				goto _julec_label_cont;
			}
		}
		else if (((_1e3136ebb_Prim(_35813_t.get()._field_Kind.ptr()) != nullptr) && _1e313cab5_IsStr(_1e3136ebb_Prim(_35813_t.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1e6171486:;
			{
				if ((_34842_fc.get()._field_Args.len() > 2LL)) {
					_1e310b116_pushErr(_34827_e.ptr(), _34842_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				};
				goto _julec_label_cont;
			}
		}
		_match_end_1e6171695:;
	};
	_1e310b116_pushErr(_34827_e.ptr(), _34842_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	return nullptr;
	_julec_label_cont:;
	_34864_d.get()._field_Kind=_35813_t.get()._field_Kind;
	jule::Ptr<_1e310908c_Data> _38213_len = _1e312664d_evalExpr(_1e3216683_evalp(_34827_e.get()._field_s, _34827_e.get()._field_lookup,_35813_t.get()._field_Kind), _34842_fc.get()._field_Args[1LL]);;
	if ((_38213_len == nullptr)) {
		return nullptr;
	};
	_1e3114707_checkIntegerIndexingByData(_34827_e.ptr(), _38213_len,_34842_fc.get()._field_Args[1LL].get()._field_Token);
	jule::Ptr<_1e2587692_BuiltinMakeCallExprModel> _38913_model = jule::new_ptr<_1e2587692_BuiltinMakeCallExprModel>(_1e2587692_BuiltinMakeCallExprModel{._field_Kind=_35813_t.get()._field_Kind, ._field_Len=_38213_len.get()._field_Model, });;
	_34864_d.get()._field_Model=static_cast<jule::Any>(_38913_model);
	if ((_34842_fc.get()._field_Args.len() == 3LL)) {
		jule::Ptr<_1e310908c_Data> _39517_cap = _1e312664d_evalExpr(_1e3216683_evalp(_34827_e.get()._field_s, _34827_e.get()._field_lookup,_35813_t.get()._field_Kind), _34842_fc.get()._field_Args[2LL]);;
		if ((_39517_cap == nullptr)) {
			return _34864_d;
		};
		_1e3114707_checkIntegerIndexingByData(_34827_e.ptr(), _39517_cap,_34842_fc.get()._field_Args[2LL].get()._field_Token);
		_38913_model.get()._field_Cap=_39517_cap.get()._field_Model;
	};
	return _34864_d;
}



inline jule::Ptr<_1e310908c_Data> _1e3299e86_builtinCallerAppend(jule::Ptr<_1e310ab0a_Eval>& _40529_e, jule::Ptr<_1e251de75_FnCallExpr>& _40544_fc, jule::Ptr<_1e310908c_Data>& _40566_d) {
	if ((_40544_fc.get()._field_Args.len() < 2LL)) {
		if ((_40544_fc.get()._field_Args.len() == 1LL)) {
			_1e310b116_pushErr(_40529_e.ptr(), _40544_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		};
		_1e310b116_pushErr(_40529_e.ptr(), _40544_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	};
	jule::Ptr<_1e310908c_Data> _41513_t = _1e312664d_evalExpr(_40529_e, _40544_fc.get()._field_Args[0LL]);;
	if ((_41513_t == nullptr)) {
		return nullptr;
	};
	if ((_1e3137e45_Slc(_41513_t.get()._field_Kind.ptr()) == nullptr)) {
		_1e310b116_pushErr(_40529_e.ptr(), _40544_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e258dee5_FnIns> _42513_f = jule::new_ptr<_1e258dee5_FnIns>(_1e258dee5_FnIns{._field_Params=jule::Slice<jule::Ptr<_1e258d126_ParamIns>>::make({jule::new_ptr<_1e258d126_ParamIns>(_1e258d126_ParamIns{._field_Decl=jule::new_ptr<_1e2589a07_Param>(_1e2589a07_Param{._field_Mutable=true, }), ._field_Kind=_41513_t.get()._field_Kind}),jule::new_ptr<_1e258d126_ParamIns>(_1e258d126_ParamIns{._field_Decl=jule::new_ptr<_1e2589a07_Param>(_1e2589a07_Param{._field_Mutable=true, ._field_Variadic=true, }), ._field_Kind=_1e3137e45_Slc(_41513_t.get()._field_Kind.ptr()).get()._field_Elem})}), ._field_Result=_41513_t.get()._field_Kind, ._field_caller=jule::Fn<jule::Ptr<_1e310908c_Data>(jule::Ptr<_1e310ab0a_Eval>&,jule::Ptr<_1e251de75_FnCallExpr>&,jule::Ptr<_1e310908c_Data>&)>(_1e3297868_builtinCallerCommonPlain), });;
	_40566_d.get()._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_42513_f, 1)});
	_40566_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e258644e_CommonIdentExprModel>(_1e258644e_CommonIdentExprModel{._field_Ident=jule::Str("append", 6)}));
	_40566_d=_1e3297868_builtinCallerCommonPlain(_40529_e,_40544_fc,_40566_d);
	if ((_40566_d != nullptr)) {
		jule::Ptr<_1e2584b01_FnCallExprModel> _45317_model = _40566_d.get()._field_Model.operator jule::Ptr<_1e2584b01_FnCallExprModel>();;
		_40566_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e258787e_BuiltinAppendCallExprModel>(_1e258787e_BuiltinAppendCallExprModel{._field_Dest=_45317_model.get()._field_Args[0LL], ._field_Elements=_45317_model.get()._field_Args[1LL]}));
	};
	return _40566_d;
}



inline jule::Ptr<_1e310908c_Data> _1e329a41a_callerCopySlice(jule::Ptr<_1e310908c_Data>& _46225_dest, jule::Ptr<_1e310ab0a_Eval>& _46243_e, jule::Ptr<_1e251de75_FnCallExpr>& _46258_fc, jule::Ptr<_1e310908c_Data>& _46280_d) {
	if ((!(_46225_dest.get()._field_Mutable))) {
		_1e310b116_pushErr(_46243_e.ptr(), _46258_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e310908c_Data> _46713_src = _1e312664d_evalExpr(_46243_e, _46258_fc.get()._field_Args[1LL]);;
	if ((_46713_src == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1e313da72_Slc> _47113_slc = _1e3137e45_Slc(_46713_src.get()._field_Kind.ptr());;
	if ((_47113_slc != nullptr)) {
		if (((!(_46713_src.get()._field_Mutable)) && _1e31362a6_Mutable(_47113_slc.get()._field_Elem.ptr()))) {
			_1e310b116_pushErr(_46243_e.ptr(), _46258_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
		};
		if ((!(_1e31355b3_Equals(_46225_dest.get()._field_Kind, _46713_src.get()._field_Kind)))) {
			_1e310b116_pushErr(_46243_e.ptr(), _46258_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_46225_dest.get()._field_Kind.ptr())),jule::Any(_1e31352a5_Str(_46713_src.get()._field_Kind.ptr()))}));
		};
	} else {
		jule::Ptr<_1e3139881_Prim> _48113_dest_prim = _1e3136ebb_Prim(_1e3137e45_Slc(_46225_dest.get()._field_Kind.ptr()).get()._field_Elem.ptr());;
		jule::Ptr<_1e3139881_Prim> _48213_prim = _1e3136ebb_Prim(_46713_src.get()._field_Kind.ptr());;
		if (((((_48113_dest_prim == nullptr) || (_48213_prim == nullptr)) || (!(_1e313cab5_IsStr(_48213_prim.ptr())))) || (!(_1e313b18a_IsU8(_48113_dest_prim.ptr()))))) {
			_1e310b116_pushErr(_46243_e.ptr(), _46258_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_46225_dest.get()._field_Kind.ptr())),jule::Any(_1e31352a5_Str(_46713_src.get()._field_Kind.ptr()))}));
		};
	};
	_46280_d.get()._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("int", 3)), 6)});
	_46280_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e2587a6b_BuiltinCopyCallExprModel>(_1e2587a6b_BuiltinCopyCallExprModel{._field_Dest=_46225_dest, ._field_Src=_46713_src}));
	return _46280_d;
}



inline jule::Ptr<_1e310908c_Data> _1e329a89e_callerCopyStr(jule::Ptr<_1e310908c_Data>& _49623_dest, jule::Ptr<_1e310ab0a_Eval>& _49641_e, jule::Ptr<_1e251de75_FnCallExpr>& _49656_fc, jule::Ptr<_1e310908c_Data>& _49678_d) {
	if ((!(_49623_dest.get()._field_Mutable))) {
		_1e310b116_pushErr(_49641_e.ptr(), _49656_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e310908c_Data> _50113_src = _1e312664d_evalExpr(_49641_e, _49656_fc.get()._field_Args[1LL]);;
	if ((_50113_src == nullptr)) {
		return nullptr;
	};
	{
		
		if ((_1e3136ebb_Prim(_50113_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e618e581:;
			{
				if (_1e313cab5_IsStr(_1e3136ebb_Prim(_50113_src.get()._field_Kind.ptr()).ptr())) {
					goto _julec_label_end;
				};
			}
		}
		else if ((_1e3137e45_Slc(_50113_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e618e5e7:;
			{
				jule::Ptr<_1e313da72_Slc> _51117_slc = _1e3137e45_Slc(_50113_src.get()._field_Kind.ptr());;
				if (((_1e3136ebb_Prim(_51117_slc.get()._field_Elem.ptr()) != nullptr) && _1e313b18a_IsU8(_1e3136ebb_Prim(_51117_slc.get()._field_Elem.ptr()).ptr()))) {
					goto _julec_label_end;
				};
			}
		}
		_match_end_1e618ea15:;
	};
	_1e310b116_pushErr(_49641_e.ptr(), _49656_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_49623_dest.get()._field_Kind.ptr())),jule::Any(_1e31352a5_Str(_50113_src.get()._field_Kind.ptr()))}));
	_julec_label_end:;
	_49678_d.get()._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("int", 3)), 6)});
	_49678_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e2587a6b_BuiltinCopyCallExprModel>(_1e2587a6b_BuiltinCopyCallExprModel{._field_Dest=_49623_dest, ._field_Src=_50113_src}));
	return _49678_d;
}



inline jule::Ptr<_1e310908c_Data> _1e329ac89_builtinCallerCopy(jule::Ptr<_1e310ab0a_Eval>& _52627_e, jule::Ptr<_1e251de75_FnCallExpr>& _52642_fc, jule::Ptr<_1e310908c_Data>& _52664_d) {
	if ((_52642_fc.get()._field_Args.len() < 2LL)) {
		if ((_52642_fc.get()._field_Args.len() == 1LL)) {
			_1e310b116_pushErr(_52627_e.ptr(), _52642_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		};
		_1e310b116_pushErr(_52627_e.ptr(), _52642_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	};
	if ((_52642_fc.get()._field_Args.len() > 2LL)) {
		_1e310b116_pushErr(_52627_e.ptr(), _52642_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e310908c_Data> _53913_dest = _1e312664d_evalExpr(_52627_e, _52642_fc.get()._field_Args[0LL]);;
	{
		
		if ((_53913_dest == nullptr)) {
			_case_begin_1e6198c61:;
			{
				return nullptr;
			}
		}
		else if ((_1e3137e45_Slc(_53913_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1e6198cc7:;
			{
				return _1e329a41a_callerCopySlice(_53913_dest,_52627_e,_52642_fc,_52664_d);
			}
		}
		else if (((_1e3136ebb_Prim(_53913_dest.get()._field_Kind.ptr()) != nullptr) && _1e313cab5_IsStr(_1e3136ebb_Prim(_53913_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1e6198d3d:;
			{
				return _1e329a89e_callerCopyStr(_53913_dest,_52627_e,_52642_fc,_52664_d);
			}
		}
		else {
			_case_begin_1e6198bea:;
			{
				_1e310b116_pushErr(_52627_e.ptr(), _52642_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1e6198b95:;
	};
}



inline jule::Ptr<_1e310908c_Data> _1e329b174_builtinCallerClone(jule::Ptr<_1e310ab0a_Eval>& _55328_e, jule::Ptr<_1e251de75_FnCallExpr>& _55343_fc, jule::Ptr<_1e310908c_Data>& ) {
	if ((_55343_fc.get()._field_Args.len() < 1LL)) {
		_1e310b116_pushErr(_55328_e.ptr(), _55343_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_55343_fc.get()._field_Args.len() > 1LL)) {
		_1e310b116_pushErr(_55328_e.ptr(), _55343_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e310908c_Data> _56213_d = _1e3126032_evalExprKind(_55328_e, _55343_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_56213_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1e31369e3_SupportsCloning(_56213_d.get()._field_Kind.ptr())))) {
		{
			
			if ((_1e3137e45_Slc(_56213_d.get()._field_Kind.ptr()) != nullptr) || (_1e31388e6_Map(_56213_d.get()._field_Kind.ptr()) != nullptr) || (_1e3137bd1_Arr(_56213_d.get()._field_Kind.ptr()) != nullptr) || (_1e3137230_Sptr(_56213_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1e619e9c0:;
				{
					{
						_1e310b116_pushErr(_55328_e.ptr(), _55343_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ has internally types which is not supports cloning", 57),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_56213_d.get()._field_Kind.ptr()))}));
					};
				}
			}
			else if ((_1e313841d_Struct(_56213_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1e619ea36:;
				{
					{
						_1e310b116_pushErr(_55328_e.ptr(), _55343_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ is not derives @", 23),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_56213_d.get()._field_Kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					};
				}
			}
			else {
				_case_begin_1e619e959:;
				{
					{
						_1e310b116_pushErr(_55328_e.ptr(), _55343_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ is not support cloning", 29),jule::Slice<jule::Any>::make({jule::Any(_1e31352a5_Str(_56213_d.get()._field_Kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					};
				}
			}
			_match_end_1e619e591:;
		};
	};
	_56213_d.get()._field_Mutable=true;
	_56213_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e2586dde_BuiltinCloneCallExprModel>(_1e2586dde_BuiltinCloneCallExprModel{._field_Expr=_56213_d.get()._field_Model}));
	return _56213_d;
}



inline jule::Ptr<_1e310908c_Data> _1e329b55e_builtinCallerAssert(jule::Ptr<_1e310ab0a_Eval>& _59529_e, jule::Ptr<_1e251de75_FnCallExpr>& _59544_fc, jule::Ptr<_1e310908c_Data>& ) {
	if ((_59544_fc.get()._field_Args.len() < 1LL)) {
		_1e310b116_pushErr(_59529_e.ptr(), _59544_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_59544_fc.get()._field_Args.len() > 2LL)) {
		_1e310b116_pushErr(_59529_e.ptr(), _59544_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e310908c_Data> _60413_expr = _1e312664d_evalExpr(_59529_e, _59544_fc.get()._field_Args[0LL]);;
	if ((_60413_expr == nullptr)) {
		return nullptr;
	};
	if (((_1e3136ebb_Prim(_60413_expr.get()._field_Kind.ptr()) == nullptr) || (!(_1e313c851_IsBool(_1e3136ebb_Prim(_60413_expr.get()._field_Kind.ptr()).ptr()))))) {
		_1e310b116_pushErr(_59529_e.ptr(), _59544_fc.get()._field_Token,jule::Str("assertion requires boolean expression", 37),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e25874a5_BuiltinAssertCallExprModel> _61313_model = jule::new_ptr<_1e25874a5_BuiltinAssertCallExprModel>(_1e25874a5_BuiltinAssertCallExprModel{._field_Token=_59544_fc.get()._field_Token, ._field_Expr=_60413_expr.get()._field_Model, ._field_Log=jule::Str("assertion failed", 16)});;
	if ((_59544_fc.get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1e310908c_Data> _62117_log = _1e312664d_evalExpr(_59529_e, _59544_fc.get()._field_Args[1LL]);;
		if ((_62117_log == nullptr)) {
			return nullptr;
		};
		if ((((!(_1e3109950_IsConst(_62117_log.ptr()))) || (_1e3136ebb_Prim(_62117_log.get()._field_Kind.ptr()) == nullptr)) || (!(_1e313cab5_IsStr(_1e3136ebb_Prim(_62117_log.get()._field_Kind.ptr()).ptr()))))) {
			_1e310b116_pushErr(_59529_e.ptr(), _59544_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("const str", 9)),jule::Any(_1e31352a5_Str(_62117_log.get()._field_Kind.ptr()))}));
			return nullptr;
		};
		_61313_model.get()._field_Log=_1e257c137_ReadStr(_62117_log.get()._field_Constant.ptr());
	};
	jule::Ptr<_1e310908c_Data> _63413_d = _1e3131735_buildVoidData();;
	_63413_d.get()._field_Model=static_cast<jule::Any>(_61313_model);
	return _63413_d;
}



inline jule::Ptr<_1e310908c_Data> _1e329b96b_builtinCallerStdMemSizeOf(jule::Ptr<_1e310ab0a_Eval>& _63935_e, jule::Ptr<_1e251de75_FnCallExpr>& _63950_fc, jule::Ptr<_1e310908c_Data>& ) {
	jule::Ptr<_1e310908c_Data> _64013_result = jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("uint", 4)), 6)}), });;
	if ((_63950_fc.get()._field_Args.len() < 1LL)) {
		_1e310b116_pushErr(_63935_e.ptr(), _63950_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9))}));
		return _64013_result;
	};
	if ((_63950_fc.get()._field_Args.len() > 1LL)) {
		_1e310b116_pushErr(_63935_e.ptr(), _63950_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e310908c_Data> _65213_d = _1e3126032_evalExprKind(_63935_e, _63950_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_65213_d == nullptr)) {
		return _64013_result;
	};
	_64013_result.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e2585b57_SizeofExprModel>(_1e2585b57_SizeofExprModel{._field_Expr=_65213_d.get()._field_Model}));
	return _64013_result;
}



inline jule::Ptr<_1e310908c_Data> _1e329bc79_builtinCallerStdMemAlignOf(jule::Ptr<_1e310ab0a_Eval>& _66136_e, jule::Ptr<_1e251de75_FnCallExpr>& _66151_fc, jule::Ptr<_1e310908c_Data>& ) {
	jule::Ptr<_1e310908c_Data> _66213_result = jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("uint", 4)), 6)}), });;
	if ((_66151_fc.get()._field_Args.len() < 1LL)) {
		_1e310b116_pushErr(_66136_e.ptr(), _66151_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9))}));
		return _66213_result;
	};
	if ((_66151_fc.get()._field_Args.len() > 1LL)) {
		_1e310b116_pushErr(_66136_e.ptr(), _66151_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e310908c_Data> _67413_d = _1e3126032_evalExprKind(_66136_e, _66151_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_67413_d == nullptr)) {
		return _66213_result;
	};
	_66213_result.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e25883b8_AlignofExprModel>(_1e25883b8_AlignofExprModel{._field_Expr=_67413_d.get()._field_Model}));
	return _66213_result;
}



inline jule::Ptr<_1e310908c_Data> _1e329c197_builtinCallerStdMemFree(jule::Ptr<_1e310ab0a_Eval>& _68333_e, jule::Ptr<_1e251de75_FnCallExpr>& _68348_fc, jule::Ptr<_1e310908c_Data>& ) {
	if ((_68348_fc.get()._field_Args.len() < 1LL)) {
		_1e310b116_pushErr(_68333_e.ptr(), _68348_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("h", 1))}));
		return nullptr;
	};
	if ((_68348_fc.get()._field_Args.len() > 1LL)) {
		_1e310b116_pushErr(_68333_e.ptr(), _68348_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e310908c_Data> _69213_d = _1e3126032_evalExprKind(_68333_e, _68348_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_69213_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1e313677e_PerformsRC(_69213_d.get()._field_Kind.ptr())))) {
		_1e310b116_pushErr(_68333_e.ptr(), _68348_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e310908c_Data> _70113_result = _1e3131735_buildVoidData();;
	_70113_result.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e2588b6b_FreeExprModel>(_1e2588b6b_FreeExprModel{._field_Expr=_69213_d.get()._field_Model}));
	return _70113_result;
}



inline jule::Ptr<_1e310908c_Data> _1e329c5c6_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1e310ab0a_Eval>& _70645_e, jule::Ptr<_1e251de75_FnCallExpr>& _70660_fc, jule::Ptr<_1e310908c_Data>& ) {
	if ((_70660_fc.get()._field_Args.len() < 1LL)) {
		_1e310b116_pushErr(_70645_e.ptr(), _70660_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_70660_fc.get()._field_Args.len() > 1LL)) {
		_1e310b116_pushErr(_70645_e.ptr(), _70660_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e310908c_Data> _71513_d = _1e3126032_evalExprKind(_70645_e, _70660_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_71513_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1e314c663_isBuiltinStrConvertable(_71513_d.get()._field_Kind)))) {
		_1e310b116_pushErr(_70645_e.ptr(), _70660_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1e310908c_Data>(_1e310908c_Data{._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(_1e314cc90_buildPrimType(jule::Str("str", 3)), 6)}), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1e2588792_IntegratedToStrExprModel>(_1e2588792_IntegratedToStrExprModel{._field_Expr=_71513_d.get()._field_Model})), });
}



inline jule::Ptr<_1e310908c_Data> _1e329c9e4_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1e310ab0a_Eval>& _73344_e, jule::Ptr<_1e251de75_FnCallExpr>& _73359_fc, jule::Ptr<_1e310908c_Data>& _73381_d) {
	if ((!(_1e310ba51_isUnsafe(_73344_e.ptr())))) {
		_1e310b116_pushErr(_73344_e.ptr(), _73359_fc.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	if ((_73359_fc.get()._field_Args.len() < 1LL)) {
		_1e310b116_pushErr(_73344_e.ptr(), _73359_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("code", 4))}));
		return nullptr;
	};
	jule::Ptr<_1e310908c_Data> _74313_argd = _1e312664d_evalExpr(_73344_e, _73359_fc.get()._field_Args[0LL]);;
	if ((_74313_argd == nullptr)) {
		return nullptr;
	};
	if (((_1e3136ebb_Prim(_74313_argd.get()._field_Kind.ptr()) == nullptr) || (!(_1e313cab5_IsStr(_1e3136ebb_Prim(_74313_argd.get()._field_Kind.ptr()).ptr()))))) {
		_1e310b116_pushErr(_73344_e.ptr(), _73359_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1e31352a5_Str(_74313_argd.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	if (((!(_1e3109950_IsConst(_74313_argd.ptr()))) || (!(_1e257e4d0_IsStr(_74313_argd.get()._field_Constant.ptr()))))) {
		_1e310b116_pushErr(_73344_e.ptr(), _73359_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e310908c_Data> _75813_r = _1e3131735_buildVoidData();;
	jule::Ptr<_1e258dee5_FnIns> _76013_f = _1e31381a9_Fn(_73381_d.get()._field_Kind.ptr());;
	if ((_76013_f.get()._field_Generics.len() > 0LL)) {
		_75813_r.get()._field_Kind=_76013_f.get()._field_Generics[0LL].get()._field_Kind;
	};
	jule::Ptr<_1e258897e_BackendEmitExprModel> _76513_model = jule::new_ptr<_1e258897e_BackendEmitExprModel>(_1e258897e_BackendEmitExprModel{._field_Code=_1e257c137_ReadStr(_74313_argd.get()._field_Constant.ptr()), });;
	if ((_73359_fc.get()._field_Args.len() > 1LL)) {
		_76513_model.get()._field_Exprs=jule::Slice<jule::Any>::alloc(0LL,(_73359_fc.get()._field_Args.len() - 1LL));
		{
			auto expr = _73359_fc.get()._field_Args.slice(1LL);
			auto it = expr.begin();
			_iter_begin_1e61c8ec2:;
			if (it != expr.end()) {
				jule::Ptr<_1e2519ba7_Expr> _77121_arg = *it;
				{
					_74313_argd=_1e3126032_evalExprKind(_73344_e, _77121_arg.get()._field_Kind);
					if ((_74313_argd == nullptr)) {
						return nullptr;
					};
					_76513_model.get()._field_Exprs = jule::alloc_for_append(_76513_model.get()._field_Exprs,1);_76513_model.get()._field_Exprs.__push(_74313_argd.get()._field_Model);;
				}
				_iter_next_1e61c8ec2:;
				++it;
				goto _iter_begin_1e61c8ec2;
			}
			_iter_end_1e61c8ec2:;
		};
	};
	_75813_r.get()._field_Model=static_cast<jule::Any>(_76513_model);
	return _75813_r;
}



inline jule::Ptr<_1e310908c_Data> _1e329ce34_builtinCallerStdDebugOut(jule::Ptr<_1e310ab0a_Eval>& _78434_e, jule::Ptr<_1e251de75_FnCallExpr>& _78449_fc, jule::Ptr<_1e310908c_Data>& _78471_d) {
	_78471_d=_1e32987c0_builtinCallerOut(_78434_e,_78449_fc,_78471_d);
	if ((_78471_d == nullptr)) {
		return nullptr;
	};
	_78471_d.get()._field_Model.operator jule::Ptr<_1e2586a15_BuiltinOutCallExprModel>().get()._field_Debug=true;
	return _78471_d;
}



inline jule::Ptr<_1e310908c_Data> _1e329d31e_builtinCallerStdDebugOutln(jule::Ptr<_1e310ab0a_Eval>& _79336_e, jule::Ptr<_1e251de75_FnCallExpr>& _79351_fc, jule::Ptr<_1e310908c_Data>& _79373_d) {
	_79373_d=_1e3298baa_builtinCallerOutln(_79336_e,_79351_fc,_79373_d);
	if ((_79373_d == nullptr)) {
		return nullptr;
	};
	_79373_d.get()._field_Model.operator jule::Ptr<_1e2586c02_BuiltinOutlnCallExprModel>().get()._field_Debug=true;
	return _79373_d;
}



inline jule::Bool _1e3328a92_FindModuleFile(jule::Slice<jule::Ptr<_2162e43ca_DirEntry>>& _1224_dirents) {
	{
		auto &expr = _1224_dirents;
		auto it = expr.begin();
		_iter_begin_1e61ce3a1:;
		if (it != expr.end()) {
			jule::Ptr<_2162e43ca_DirEntry> &_1312_d = *it;
			{
				if (((!(_2162d1a05_IsDir(_1312_d.get()._field_Stat.ptr()))) && (_1312_d.get()._field_Name == jule::Str("jule.mod", 8)))) {
					return true;
				};
			}
			_iter_next_1e61ce3a1:;
			++it;
			goto _iter_begin_1e61ce3a1;
		}
		_iter_end_1e61ce3a1:;
	};
	return false;
}



inline jule::Str _1e3328c90_FindModuleFileDeep(jule::Str _2431_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_2162e43ca_DirEntry>> _2617_dirents = ({
				auto except = static__20a1b1968_Read(_2431_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1e61ce659;
				} jule::Slice<jule::Ptr<_2162e43ca_DirEntry>>();});
			});;
			jule::Bool _3013_exist = _1e3328a92_FindModuleFile(_2617_dirents);;
			if (_3013_exist) {
				return _2431_path;
			};
			jule::I64 _3513_n = _2431_path.len();;
			_2431_path=_20a1b1704_Dir(_2431_path);
			if ((_2431_path.len() == _3513_n)) {
				goto _iter_end_1e61ce659;
			};
		}
	_iter_next_1e61ce659:;
	}
	_iter_end_1e61ce659:;;
	return jule::Str();
}



inline jule::Slice<_20a35491e_Log> _1e3329037_CheckModuleFile(jule::Str _4624_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__2162cbdda_Read(_20a1b122b_Join(jule::Slice<jule::Str>::make({_4624_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_20a35491e_Log>::make({_20a35491e_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file could not checked because of a problem", 50), }});
		} jule::Slice<jule::U8>();});
	});;
	jule::Str _539_s = _20a1b058d_Trim(static_cast<jule::Str>(_479_bytes),jule::Str(" \n\r\t\v", 5));;
	if ((_539_s.len() != 0LL)) {
		return jule::Slice<_20a35491e_Log>::make({_20a35491e_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file has syntax error(s)", 31), }});
	};
	return nullptr;
}



inline jule::Ptr<_1e337e39a_FileInfo> _1e3386050_ParseFile(jule::Ptr<_1d42b9767_File> _2322_f) {
	if ((_2322_f == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1e337e39a_FileInfo> _2713_finf = jule::new_ptr<_1e337e39a_FileInfo>();;
	std::tie(_2713_finf.get()._field_Ast,_2713_finf.get()._field_Errors) = _1e33cc5b3_parseFileset(_2322_f);
	if ((_2713_finf.get()._field_Errors.len() > 0LL)) {
		_2713_finf.get()._field_Ast=nullptr;
	};
	return _2713_finf;
}



inline std::tuple<jule::Ptr<_1e24d0d9e_Ast>,jule::Slice<_20a35491e_Log>> _1e33cc5b3_parseFileset(jule::Ptr<_1d42b9767_File> _5521_f) {
	jule::Ptr<_1e33ea603_parser> _5613_p = jule::new_ptr<_1e33ea603_parser>();;
	_1e340a3d2_parse(_5613_p, _5521_f);
	return std::make_tuple(_5613_p.get()._field_ast,_5613_p.get()._field_errors);
}



inline jule::Ptr<_1e25259a4_ScopeTree> _1e33cceba_newScope(void) {
	return jule::new_ptr<_1e25259a4_ScopeTree>();
}



inline std::tuple<jule::Bool,jule::Bool> _1e33cd2c8_isSt(jule::Ptr<_1d42b43cc_Token> _509_current, jule::Ptr<_1d42b43cc_Token> _5026_prev) {
	jule::Bool _5042_ok = jule::Bool();
	jule::Bool _5052_terminated = jule::Bool();
	_5042_ok=((_509_current.get()._field_Id == static_cast<jule::U64>(5LLU)) || (_5026_prev.get()._field_Row < _509_current.get()._field_Row));
	_5052_terminated=(_509_current.get()._field_Id == static_cast<jule::U64>(5LLU));
	return std::make_tuple(_5042_ok,_5052_terminated);
}



inline jule::Bool _1e33cd619_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _5626_tokens, jule::I64& _5645_i) {
	if (((_5645_i > 1LL) && (_5626_tokens[(_5645_i - 2LL)].get()._field_Id == static_cast<jule::U64>(23LLU)))) {
		return false;
	};
	{
		jule::Ptr<_1d42b43cc_Token> _6213_prev = _5626_tokens[(_5645_i - 1LL)];;
		return ((_6213_prev.get()._field_Id == static_cast<jule::U64>(20LLU)) || (((_6213_prev.get()._field_Id == static_cast<jule::U64>(7LLU)) && _1d42b4dc2_IsBinOp(_6213_prev.get()._field_Kind)) && (_6213_prev.get()._field_Row < _5626_tokens[_5645_i].get()._field_Row)));
	};
}



inline std::tuple<jule::I64,jule::Bool> _1e33cd99e_nextStPos(jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _7115_tokens, jule::I64 _7133_start) {
	jule::I64 _7213_braceN = 0LL;;
	jule::I64 _7313_i = _7133_start;;
	for (; (_7313_i < _7115_tokens.len()); (_7313_i)++) {
		{
			jule::Bool _7517_ok = false;;
			jule::Bool _7617_terminated = false;;
			jule::Ptr<_1d42b43cc_Token> _7713_tok = _7115_tokens[_7313_i];;
			{
				auto &_match_expr{ _7713_tok.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(3LLU)) {
					_case_begin_1e6269815:;
					{
						{
							auto &_match_expr{ _7713_tok.get()._field_Kind };
							
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_1e626b4b5:;
								{
									if (((_7213_braceN == 0LL) && (_7313_i > _7133_start))) {
										if ((!(_1e33cd619_prevIsIncompleteExpr(_7115_tokens,_7313_i)))) {
											std::tie(_7517_ok,_7617_terminated) = _1e33cd2c8_isSt(_7713_tok,_7115_tokens[(_7313_i - 1LL)]);
											if (_7517_ok) {
												goto _julec_label_return;
											};
										};
									};
									(_7213_braceN)++;
								}
							}
							else {
								_case_begin_1e626a140:;
								{
									(_7213_braceN)--;
									if (((_7213_braceN == 0LL) && ((_7313_i + 1LL) < _7115_tokens.len()))) {
										std::tie(_7517_ok,_7617_terminated) = _1e33cd2c8_isSt(_7115_tokens[(_7313_i + 1LL)],_7713_tok);
										if (_7517_ok) {
											(_7313_i)++;
											goto _julec_label_return;
										};
									};
								}
							}
							_match_end_1e6269e75:;
						};
						goto _iter_next_1e6267e51;
					}
				}
				_match_end_1e62697b0:;
			};
			if ((_7213_braceN != 0LL)) {
				goto _iter_next_1e6267e51;
			};
			if ((_7313_i > _7133_start)) {
				if (_1e33cd619_prevIsIncompleteExpr(_7115_tokens,_7313_i)) {
					goto _iter_next_1e6267e51;
				};
				std::tie(_7517_ok,_7617_terminated) = _1e33cd2c8_isSt(_7713_tok,_7115_tokens[(_7313_i - 1LL)]);
			} else {
				std::tie(_7517_ok,_7617_terminated) = _1e33cd2c8_isSt(_7713_tok,_7713_tok);
			};
			if ((!(_7517_ok))) {
				goto _iter_next_1e6267e51;
			};
			_julec_label_return:;
			if (_7617_terminated) {
				(_7313_i)++;
			};
			return std::make_tuple(_7313_i,_7617_terminated);
		}
	_iter_next_1e6267e51:;
	}
	_iter_end_1e6267e51:;;
	return std::make_tuple(_7313_i,false);
}



inline std::tuple<jule::Slice<jule::Ptr<_1d42b43cc_Token>>,jule::Bool> _1e33cdce0_skipSt(jule::I64& _13316_i, jule::Slice<jule::Ptr<_1d42b43cc_Token>> _13328_tokens) {
	jule::I64 _1349_start = _13316_i;;
	jule::Bool _13513_terminated = false;;
	std::tie(_13316_i,_13513_terminated) = _1e33cd99e_nextStPos(_13328_tokens,_1349_start);
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _13713_stTokens = _13328_tokens.slice(_1349_start,_13316_i);;
	if (_13513_terminated) {
		if ((_13713_stTokens.len() == 1LL)) {
			std::tie(_13713_stTokens,_13513_terminated) = _1e33cdce0_skipSt(_13316_i,_13328_tokens);
			return std::make_tuple(_13713_stTokens,_13513_terminated);
		};
		_13713_stTokens=_13713_stTokens.slice(0LL,(_13713_stTokens.len() - 1LL));
	};
	return std::make_tuple(_13713_stTokens,_13513_terminated);
}



inline jule::Slice<jule::Ptr<_1e33ce0dc_stmt>> _1e33ce483_splitStmts(jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _15520_tokens) {
	jule::Slice<jule::Ptr<_1e33ce0dc_stmt>> _15613_stmts = jule::Slice<jule::Ptr<_1e33ce0dc_stmt>>::alloc(0LL,20LL);;
	jule::I64 _15713_pos = 0LL;;
	while ((_15713_pos < _15520_tokens.len())) {
		{
			jule::Slice<jule::Ptr<_1d42b43cc_Token>> _15918_stmt;;
			jule::Bool _15924_terminated;;
			std::tie(_15918_stmt,_15924_terminated) = _1e33cdce0_skipSt(_15713_pos,_15520_tokens);
			_15613_stmts = jule::alloc_for_append(_15613_stmts,1);_15613_stmts.__push(jule::new_ptr<_1e33ce0dc_stmt>(_1e33ce0dc_stmt{._field_tokens=_15918_stmt, ._field_terminated=_15924_terminated}));;
		}
	_iter_next_1e627405b:;
	}
	_iter_end_1e627405b:;;
	return _15613_stmts;
}



inline jule::Slice<jule::Ptr<_1d42b43cc_Token>> _1e33dad85_getBlockExpr(jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _4022_tokens) {
	jule::I64 _4113_braceN = 0LL;;
	jule::I64 _4213_skipToNextBraceClose = 0LL;;
	{
		auto &expr = _4022_tokens;
		auto it = expr.begin();
		_iter_begin_1e6330e5e:;
		if (it != expr.end()) {
			jule::I64 _439_i = it - expr.begin();
			jule::Ptr<_1d42b43cc_Token> _4312_tok = *it;
			{
				{
					auto &_match_expr{ _4312_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(16LLU) || _match_expr == static_cast<jule::U64>(17LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1e6331cea:;
						{
							(_4213_skipToNextBraceClose)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1e6331d72:;
						{
							{
								auto &_match_expr{ _4312_tok.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1e6332acb:;
									{
										if (((_4113_braceN > 0LL) || (_4213_skipToNextBraceClose > 0LL))) {
											if ((_4213_skipToNextBraceClose > 0LL)) {
												(_4213_skipToNextBraceClose)--;
											};
											(_4113_braceN)++;
											goto _match_end_1e6332c0d;
										};
										return _4022_tokens.slice(0LL,_439_i);
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1e6333280:;
									{
										(_4113_braceN)++;
									}
								}
								else {
									_case_begin_1e6332d1d:;
									{
										(_4113_braceN)--;
									}
								}
								_match_end_1e6332c0d:;
							};
						}
					}
					_match_end_1e6331b1e:;
				};
			}
			_iter_next_1e6330e5e:;
			++it;
			_439_i++;
			goto _iter_begin_1e6330e5e;
		}
		_iter_end_1e6330e5e:;
	};
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_1d42b43cc_Token>>,jule::Slice<jule::Ptr<_1d42b43cc_Token>>> _1e33db1d7_splitDelim(jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _7120_tokens, jule::U64 _7138_delim) {
	jule::I64 _7213_rangeN = 0LL;;
	{
		auto &expr = _7120_tokens;
		auto it = expr.begin();
		_iter_begin_1e63349e0:;
		if (it != expr.end()) {
			jule::I64 _739_i = it - expr.begin();
			jule::Ptr<_1d42b43cc_Token> _7312_token = *it;
			{
				{
					auto &_match_expr{ _7312_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1e63355c3:;
						{
							{
								auto &_match_expr{ _7312_token.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1e6335c22:;
									{
										(_7213_rangeN)++;
										goto _iter_next_1e63349e0;
									}
								}
								else {
									_case_begin_1e6335ea8:;
									{
										(_7213_rangeN)--;
									}
								}
								_match_end_1e6335cdd:;
							};
						}
					}
					else if (_match_expr == _7138_delim) {
						_case_begin_1e633564a:;
						{
							if ((_7213_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_1d42b43cc_Token>> _8725_l = _7120_tokens.slice(0LL,_739_i);;
								jule::Slice<jule::Ptr<_1d42b43cc_Token>> _8825_r = _7120_tokens.slice((_739_i + 1LL));;
								return std::make_tuple(_8725_l,_8825_r);
							};
						}
					}
					_match_end_1e6335392:;
				};
			}
			_iter_next_1e63349e0:;
			++it;
			_739_i++;
			goto _iter_begin_1e63349e0;
		}
		_iter_end_1e63349e0:;
	};
	return std::make_tuple(nullptr,nullptr);
}



inline jule::I64 _1e33db47e_findLowestPrecOp(jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _9822_tokens) {
	jule::U8 _10313_prec = 255LLU;;
	jule::I64 _10413_precPos = -1LL;;
	jule::I64 _10613_braceN = 0LL;;
	jule::Bool _10713_skipToNextBraceOpen = false;;
	{
		auto &expr = _9822_tokens;
		auto it = expr.begin();
		_iter_begin_1e6338dac:;
		if (it != expr.end()) {
			jule::I64 _1089_i = it - expr.begin();
			jule::Ptr<_1d42b43cc_Token> &_10812_token = *it;
			{
				{
					
					if ((_10812_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
						_case_begin_1e6339bc1:;
						{
							{
								auto &_match_expr{ _10812_token.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1e633a809:;
									{
										_10713_skipToNextBraceOpen=false;
										goto _case_begin_1e633b046;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_1e633b046:;
									{
										(_10613_braceN)++;
									}
								}
								else {
									_case_begin_1e633aa90:;
									{
										(_10613_braceN)--;
									}
								}
								_match_end_1e633a8c5:;
							};
							goto _iter_next_1e6338dac;
						}
					}
					else if (_10713_skipToNextBraceOpen) {
						_case_begin_1e6339c48:;
						{
							goto _iter_next_1e6338dac;
						}
					}
					else if ((_10812_token.get()._field_Id == static_cast<jule::U64>(16LLU))) {
						_case_begin_1e6339cc0:;
						{
							_10713_skipToNextBraceOpen=true;
							goto _iter_next_1e6338dac;
						}
					}
					else if ((_1089_i == 0LL)) {
						_case_begin_1e6339d47:;
						{
							goto _iter_next_1e6338dac;
						}
					}
					else if ((_10812_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
						_case_begin_1e6339dbe:;
						{
							goto _iter_next_1e6338dac;
						}
					}
					else if ((_10613_braceN > 0LL)) {
						_case_begin_1e6339e46:;
						{
							goto _iter_next_1e6338dac;
						}
					}
					_match_end_1e6339a5b:;
				};
				jule::Ptr<_1d42b43cc_Token> _13513_left = _9822_tokens[(_1089_i - 1LL)];;
				if (((_13513_left.get()._field_Id == static_cast<jule::U64>(7LLU)) || (_13513_left.get()._field_Id == static_cast<jule::U64>(11LLU)))) {
					goto _iter_next_1e6338dac;
				};
				if ((((_1089_i > 1LL) && (_13513_left.get()._field_Id == static_cast<jule::U64>(3LLU))) && (_13513_left.get()._field_Kind == jule::Str("]", 1)))) {
					jule::Ptr<_1d42b43cc_Token> _14317_lleft = _9822_tokens[(_1089_i - 2LL)];;
					if (((_14317_lleft.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_14317_lleft.get()._field_Kind == jule::Str("[", 1)))) {
						if (((_10812_token.get()._field_Kind == jule::Str("&", 1)) || (_10812_token.get()._field_Kind == jule::Str("*", 1)))) {
							goto _iter_next_1e6338dac;
						};
					};
				};
				jule::U8 _15213_p = _1d42b4784_Prec(_10812_token.ptr());;
				if (((_15213_p != 0LLU) && (_15213_p <= _10313_prec))) {
					_10313_prec=_15213_p;
					_10413_precPos=_1089_i;
				};
			}
			_iter_next_1e6338dac:;
			++it;
			_1089_i++;
			goto _iter_begin_1e6338dac;
		}
		_iter_end_1e6338dac:;
	};
	return _10413_precPos;
}



inline jule::Ptr<_1e251bc20_IdentExpr> _1e33db79d_buildIdentExpr(jule::Ptr<_1d42b43cc_Token>& _16124_token) {
	return jule::new_ptr<_1e251bc20_IdentExpr>(_1e251bc20_IdentExpr{._field_Token=_16124_token, ._field_Ident=_16124_token.get()._field_Kind, ._field_CppLinked=false});
}



inline std::tuple<jule::Slice<jule::Ptr<_1d42b43cc_Token>>,jule::I64> _1e33dba45_getRangeExprTokens(jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _16928_tokens) {
	jule::I64 _17013_rangeN = 0LL;;
	jule::I64 _17113_i = (_16928_tokens.len() - 1LL);;
	for (; (_17113_i >= 0LL); (_17113_i)--) {
		{
			jule::Ptr<_1d42b43cc_Token> _17313_tok = _16928_tokens[_17113_i];;
			if ((_17313_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _17313_tok.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1e6343812:;
						{
							(_17013_rangeN)++;
						}
					}
					else {
						_case_begin_1e63441c5:;
						{
							(_17013_rangeN)--;
						}
					}
					_match_end_1e6343eb6:;
				};
			};
			if ((_17013_rangeN == 0LL)) {
				return std::make_tuple(_16928_tokens.slice(0LL,_17113_i),_17013_rangeN);
			};
		}
	_iter_next_1e6343119:;
	}
	_iter_end_1e6343119:;;
	return std::make_tuple(nullptr,_17013_rangeN);
}



inline jule::Bool _1e33e7457_checkAssignTokens(jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _1623_tokens) {
	if (((_1623_tokens.len() == 0LL) || (!(_1d42b8975_IsAssign(_1623_tokens[0LL].get()._field_Id))))) {
		return false;
	};
	jule::I64 _2013_braceN = 0LL;;
	{
		auto &expr = _1623_tokens;
		auto it = expr.begin();
		_iter_begin_1e63dc548:;
		if (it != expr.end()) {
			jule::Ptr<_1d42b43cc_Token> &_2112_t = *it;
			{
				if ((_2112_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _2112_t.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1e63dd170:;
							{
								(_2013_braceN)++;
							}
						}
						else {
							_case_begin_1e63dd44a:;
							{
								(_2013_braceN)--;
							}
						}
						_match_end_1e63dd23b:;
					};
				};
				if ((_2013_braceN < 0LL)) {
					return false;
				} else if ((_2013_braceN > 0LL)) {
					goto _iter_next_1e63dc548;
				} else if (((_2112_t.get()._field_Id == static_cast<jule::U64>(7LLU)) && _1d42b8eb4_IsAssignOp(_2112_t.get()._field_Kind))) {
					return true;
				};
			}
			_iter_next_1e63dc548:;
			++it;
			goto _iter_begin_1e63dc548;
		}
		_iter_end_1e63dc548:;
	};
	return false;
}



inline _20a35491e_Log _1e33e8348_makeErr(jule::I64 _5012_row, jule::I64 _5022_col, jule::Ptr<_1d42b9767_File>& _5033_f, jule::Str _5043_fmt, jule::Slice<jule::Any> _5056_args) {
	return _20a35491e_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5012_row, ._field_Column=_5022_col, ._field_Path=_5033_f.get()._field_Path, ._field_Text=_20a354d5e_Logf(_5043_fmt,jule::Any(_5056_args)), };
}



inline jule::Slice<jule::Ptr<_1d42b43cc_Token>> _1e33e87dd_range(jule::I64& _6915_i, jule::Str _6923_open, jule::Str _6940_close, jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _6963_tokens) {
	if ((_6915_i >= _6963_tokens.len())) {
		return nullptr;
	};
	jule::Ptr<_1d42b43cc_Token> _749_tok = _6963_tokens[_6915_i];;
	if (((_749_tok.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_749_tok.get()._field_Kind != _6923_open))) {
		return nullptr;
	};
	(_6915_i)++;
	jule::I64 _8013_rangeN = 1LL;;
	jule::I64 _819_start = _6915_i;;
	for (; ((_8013_rangeN != 0LL) && (_6915_i < _6963_tokens.len())); (_6915_i)++) {
		{
			jule::Ptr<_1d42b43cc_Token> _8313_token = _6963_tokens[_6915_i];;
			if ((_8313_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _8313_token.get()._field_Kind };
					
					if (_match_expr == _6923_open) {
						_case_begin_1e63e4473:;
						{
							(_8013_rangeN)++;
						}
					}
					else if (_match_expr == _6940_close) {
						_case_begin_1e63e44ea:;
						{
							(_8013_rangeN)--;
						}
					}
					_match_end_1e63e4242:;
				};
			};
		}
	_iter_next_1e63e2c35:;
	}
	_iter_end_1e63e2c35:;;
	return _6963_tokens.slice(_819_start,(_6915_i - 1LL));
}



inline std::tuple<jule::Slice<jule::Ptr<_1d42b43cc_Token>>,jule::Slice<jule::Ptr<_1d42b43cc_Token>>> _1e33e8a85_rangeLast(jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _10419_tokens) {
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _10439_cutted = jule::Slice<jule::Ptr<_1d42b43cc_Token>>();
	jule::Slice<jule::Ptr<_1d42b43cc_Token>> _10457_cut = jule::Slice<jule::Ptr<_1d42b43cc_Token>>();
	if ((_10419_tokens.len() == 0LL)) {
		_10439_cutted = _10419_tokens;
		_10457_cut = nullptr;
		return std::make_tuple(_10439_cutted,_10457_cut);
	} else if ((_10419_tokens[(_10419_tokens.len() - 1LL)].get()._field_Id != static_cast<jule::U64>(3LLU))) {
		_10439_cutted = _10419_tokens;
		_10457_cut = nullptr;
		return std::make_tuple(_10439_cutted,_10457_cut);
	};
	jule::I64 _11113_braceN = 0LL;;
	jule::I64 _11213_i = (_10419_tokens.len() - 1LL);;
	for (; (_11213_i >= 0LL); (_11213_i)--) {
		{
			jule::Ptr<_1d42b43cc_Token> _11413_token = _10419_tokens[_11213_i];;
			if ((_11413_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _11413_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1e63e7b2a:;
						{
							(_11113_braceN)++;
							goto _iter_next_1e63e54c9;
						}
					}
					else {
						_case_begin_1e63e8532:;
						{
							(_11113_braceN)--;
						}
					}
					_match_end_1e63e8323:;
				};
			};
			if ((_11113_braceN == 0LL)) {
				_10439_cutted = _10419_tokens.slice(0LL,_11213_i);
				_10457_cut = _10419_tokens.slice(_11213_i);
				return std::make_tuple(_10439_cutted,_10457_cut);
			};
		}
	_iter_next_1e63e54c9:;
	}
	_iter_end_1e63e54c9:;;
	_10439_cutted = _10419_tokens;
	_10457_cut = nullptr;
	return std::make_tuple(_10439_cutted,_10457_cut);
}



inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>>,jule::Slice<_20a35491e_Log>> _1e33e8ee7_partsKind(jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _13619_tokens, jule::Str _13637_kind, jule::Bool _13654_expr_must) {
	if ((_13619_tokens.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>> _14113_parts = nullptr;;
	jule::Slice<_20a35491e_Log> _14213_errors = nullptr;;
	jule::I64 _14413_rangeN = 0LL;;
	jule::I64 _14513_last = 0LL;;
	{
		auto &expr = _13619_tokens;
		auto it = expr.begin();
		_iter_begin_1e63ebc1c:;
		if (it != expr.end()) {
			jule::I64 _1469_i = it - expr.begin();
			jule::Ptr<_1d42b43cc_Token> _14612_token = *it;
			{
				if ((_14612_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _14612_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1e63ecc62:;
							{
								(_14413_rangeN)++;
								goto _iter_next_1e63ebc1c;
							}
						}
						else {
							_case_begin_1e63ed03c:;
							{
								(_14413_rangeN)--;
							}
						}
						_match_end_1e63ecd2d:;
					};
				};
				if ((_14413_rangeN > 0LL)) {
					goto _iter_next_1e63ebc1c;
				};
				if ((_14612_token.get()._field_Kind == _13637_kind)) {
					if ((_13654_expr_must && ((_1469_i - _14513_last) <= 0LL))) {
						_20a35491e_Log _16521_err = _1e33e8348_makeErr(_14612_token.get()._field_Row,_14612_token.get()._field_Column,_14612_token.get()._field_File,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_14213_errors = jule::alloc_for_append(_14213_errors,1);_14213_errors.__push(_16521_err);;
					};
					_14113_parts = jule::alloc_for_append(_14113_parts,1);_14113_parts.__push(_13619_tokens.slice(_14513_last,_1469_i));;
					_14513_last=static_cast<jule::I64>((_1469_i + 1LL));
				};
			}
			_iter_next_1e63ebc1c:;
			++it;
			_1469_i++;
			goto _iter_begin_1e63ebc1c;
		}
		_iter_end_1e63ebc1c:;
	};
	if ((_14513_last < _13619_tokens.len())) {
		_14113_parts = jule::alloc_for_append(_14113_parts,1);_14113_parts.__push(_13619_tokens.slice(_14513_last));;
	} else if ((!(_13654_expr_must))) {
		_14113_parts = jule::alloc_for_append(_14113_parts,1);_14113_parts.__push(jule::Slice<jule::Ptr<_1d42b43cc_Token>>());;
	};
	return std::make_tuple(_14113_parts,_14213_errors);
}



inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>>,jule::Slice<_20a35491e_Log>> _1e33e93d2_parts(jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _18815_tokens, jule::U64 _18833_id, jule::Bool _18846_expr_must) {
	if ((_18815_tokens.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Slice<jule::Slice<jule::Ptr<_1d42b43cc_Token>>> _19313_parts = nullptr;;
	jule::Slice<_20a35491e_Log> _19413_errors = nullptr;;
	jule::I64 _19613_rangeN = 0LL;;
	jule::I64 _19713_last = 0LL;;
	{
		auto &expr = _18815_tokens;
		auto it = expr.begin();
		_iter_begin_1e640373a:;
		if (it != expr.end()) {
			jule::I64 _1989_i = it - expr.begin();
			jule::Ptr<_1d42b43cc_Token> _19812_token = *it;
			{
				if ((_19812_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _19812_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1e6404780:;
							{
								(_19613_rangeN)++;
								goto _iter_next_1e640373a;
							}
						}
						else {
							_case_begin_1e6404a5a:;
							{
								(_19613_rangeN)--;
							}
						}
						_match_end_1e640484b:;
					};
				};
				if ((_19613_rangeN > 0LL)) {
					goto _iter_next_1e640373a;
				};
				if ((_19812_token.get()._field_Id == _18833_id)) {
					if ((_18846_expr_must && ((_1989_i - _19713_last) <= 0LL))) {
						_20a35491e_Log _21721_err = _1e33e8348_makeErr(_19812_token.get()._field_Row,_19812_token.get()._field_Column,_19812_token.get()._field_File,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_19413_errors = jule::alloc_for_append(_19413_errors,1);_19413_errors.__push(_21721_err);;
					};
					_19313_parts = jule::alloc_for_append(_19313_parts,1);_19313_parts.__push(_18815_tokens.slice(_19713_last,_1989_i));;
					_19713_last=static_cast<jule::I64>((_1989_i + 1LL));
				};
			}
			_iter_next_1e640373a:;
			++it;
			_1989_i++;
			goto _iter_begin_1e640373a;
		}
		_iter_end_1e640373a:;
	};
	if ((_19713_last < _18815_tokens.len())) {
		_19313_parts = jule::alloc_for_append(_19313_parts,1);_19313_parts.__push(_18815_tokens.slice(_19713_last));;
	} else if ((!(_18846_expr_must))) {
		_19313_parts = jule::alloc_for_append(_19313_parts,1);_19313_parts.__push(jule::Slice<jule::Ptr<_1d42b43cc_Token>>());;
	};
	return std::make_tuple(_19313_parts,_19413_errors);
}



inline jule::Str _1e33e9679_getCloseKindOfBrace(jule::Str _23424_left) {
	{
		auto &_match_expr{ _23424_left };
		
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_1e640829a:;
			{
				return jule::Str("(", 1);
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_1e6408311:;
			{
				return jule::Str("{", 1);
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_1e6408377:;
			{
				return jule::Str("[", 1);
			}
		}
		else {
			_case_begin_1e6407c5b:;
			{
				return jule::Str();
			}
		}
		_match_end_1e6407ba1:;
	};
}



inline _20a35491e_Log _1e33e9a64_compilerErr(jule::Ptr<_1d42b43cc_Token>& _24717_token, jule::Str& _24733_fmt, jule::Slice<jule::Any> _24746_args) {
	return _20a35491e_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_24717_token.get()._field_Row, ._field_Column=_24717_token.get()._field_Column, ._field_Path=_24717_token.get()._field_File.get()._field_Path, ._field_Text=_20a354d5e_Logf(_24733_fmt,jule::Any(_24746_args)), ._field_Line=_1d42ba944_GetRow(_24717_token.get()._field_File.ptr(), _24717_token.get()._field_Row), };
}



inline void _1e33e9e93_pushSuggestion(_20a35491e_Log* _25830_log, jule::Str _25841_fmt, jule::Slice<jule::Any> _25854_args) {
	_25830_log->_field_Suggestion=_20a354d5e_Logf(_25841_fmt,jule::Any(_25854_args));
}



inline jule::Str _1e33ea23a_tokstoa(jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _26213_tokens) {
	jule::I64 _26313_n = 0LL;;
	{
		auto &expr = _26213_tokens;
		auto it = expr.begin();
		_iter_begin_1e640b523:;
		if (it != expr.end()) {
			jule::Ptr<_1d42b43cc_Token> &_26412_token = *it;
			{
				_26313_n+=_26412_token.get()._field_Kind.len();
			}
			_iter_next_1e640b523:;
			++it;
			goto _iter_begin_1e640b523;
		}
		_iter_end_1e640b523:;
	};
	jule::Str _26713_s = jule::Str::alloc(_26313_n);;
	{
		auto &expr = _26213_tokens;
		auto it = expr.begin();
		_iter_begin_1e640c1e4:;
		if (it != expr.end()) {
			jule::Ptr<_1d42b43cc_Token> &_26812_token = *it;
			{
				_26713_s+=_26812_token.get()._field_Kind;
			}
			_iter_next_1e640c1e4:;
			++it;
			goto _iter_begin_1e640c1e4;
		}
		_iter_end_1e640c1e4:;
	};
	return _26713_s;
}



inline jule::Ptr<_1e2515686_TypeDecl> _1e340ad0b_buildVoidType(void) {
	return jule::new_ptr<_1e2515686_TypeDecl>();
}



inline jule::Ptr<_1e2515686_TypeDecl> _1e340b070_buildPrimType(jule::Ptr<_1d42b43cc_Token> _2322_t) {
	return jule::new_ptr<_1e2515686_TypeDecl>(_1e2515686_TypeDecl{._field_Token=_2322_t, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1e2515c4c_IdentTypeDecl>(_1e2515c4c_IdentTypeDecl{._field_Token=_2322_t, ._field_Ident=_2322_t.get()._field_Kind, }))});
}



inline jule::I64 _1e340b3b1_mapColon(jule::Slice<jule::Ptr<_1d42b43cc_Token>>& _3618_tokens, jule::I64& _3641_i) {
	jule::I64 _3651_delim = jule::I64();
	_3651_delim=-1LL;
	jule::I64 _3813_rangeN = 0LL;;
	for (; (_3641_i < _3618_tokens.len()); (_3641_i)++) {
		{
			jule::Ptr<_1d42b43cc_Token> _4013_token = _3618_tokens[_3641_i];;
			if ((_4013_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4013_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1e6570434:;
						{
							(_3813_rangeN)++;
							goto _iter_next_1e656ec2a;
						}
					}
					else {
						_case_begin_1e6570ce7:;
						{
							(_3813_rangeN)--;
						}
					}
					_match_end_1e6570ad8:;
				};
			};
			if ((_3813_rangeN == 0LL)) {
				if (((_3618_tokens.len() - _3641_i) == 1LL)) {
					return _3651_delim;
				};
				if ((_3618_tokens[(_3641_i + 1LL)].get()._field_Id == static_cast<jule::U64>(11LLU))) {
					_3651_delim = static_cast<jule::I64>((_3641_i + 1LL));
					return _3651_delim;
				};
				goto _iter_end_1e656ec2a;
			};
		}
	_iter_next_1e656ec2a:;
	}
	_iter_end_1e656ec2a:;;
	return _3651_delim;
}



inline std::tuple<jule::Bool,jule::Bool> _1e32ed5c2_checkOs(jule::Str _912_arg) {
	jule::Bool _924_ok = jule::Bool();
	jule::Bool _934_exist = jule::Bool();
	_924_ok=false;
	_934_exist=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_1e65c40d1:;
			{
				_924_ok=_20a357c74_IsWindows(_20a39262c_Os);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_1e65c3bd5:;
			{
				_924_ok=_20a35802c_IsDarwin(_20a39262c_Os);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_1e65c39b5:;
			{
				_924_ok=_20a3582c4_IsLinux(_20a39262c_Os);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_1e65c3a2b:;
			{
				_924_ok=_20a358dc9_IsUnix(_20a39262c_Os);
			}
		}
		else {
			_case_begin_1e65c3289:;
			{
				_924_ok=true;
				_934_exist=false;
			}
		}
		_match_end_1e65c3696:;
	};
	return std::make_tuple(_924_ok,_934_exist);
}



inline std::tuple<jule::Bool,jule::Bool> _1e32ed704_checkArch(jule::Str _2814_arg) {
	jule::Bool _2826_ok = jule::Bool();
	jule::Bool _2836_exist = jule::Bool();
	_2826_ok=false;
	_2836_exist=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_1e65c6259:;
			{
				_2826_ok=_20a3585e3_IsI386(_20a375d08_Arch);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_1e65c6039:;
			{
				_2826_ok=_20a35888a_IsAmd64(_20a375d08_Arch);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_1e65c60a0:;
			{
				_2826_ok=_20a358b32_IsArm64(_20a375d08_Arch);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_1e65c6116:;
			{
				_2826_ok=_20a3594e5_Is64Bit(_20a375d08_Arch);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_1e65c617c:;
			{
				_2826_ok=_20a35924d_Is32Bit(_20a375d08_Arch);
			}
		}
		else {
			_case_begin_1e65c580d:;
			{
				_2826_ok=true;
				_2836_exist=false;
			}
		}
		_match_end_1e65c5c1a:;
	};
	return std::make_tuple(_2826_ok,_2836_exist);
}



inline jule::Bool _1e32ed836_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_20a1b15c2_Base(_5029_p);
	jule::I64 _529_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL,(_529_n - _20a1b135d_Ext(_5029_p).len()));;
	jule::Str _5813_a1 = jule::Str();;
	jule::Str _6113_a2 = jule::Str();;
	jule::I64 _6413_i = _20a1ad822_FindLastByte(_5029_p,'_');;
	if ((_6413_i == -1LL)) {
		jule::Bool _6718_ok;;
		jule::Bool _6726_exist;;
		std::tie(_6718_ok,_6726_exist) = _1e32ed5c2_checkOs(_5029_p);
		if (_6726_exist) {
			return _6718_ok;
		};
		std::tie(_6718_ok,_6726_exist) = _1e32ed704_checkArch(_5029_p);
		return ((!(_6726_exist)) || _6718_ok);
	};
	if (((_6413_i + 1LL) >= _529_n)) {
		return true;
	};
	_5813_a1=_5029_p.slice((_6413_i + 1LL));
	(_5029_p).mut_slice(0LL,_6413_i);;
	_6413_i=static_cast<jule::I64>(_20a1ad822_FindLastByte(_5029_p,'_'));
	if ((_6413_i != -1LL)) {
		_6113_a2=_5029_p.slice((_6413_i + 1LL));
	};
	if (_6113_a2.empty()) {
		jule::Bool _8818_ok;;
		jule::Bool _8826_exist;;
		std::tie(_8818_ok,_8826_exist) = _1e32ed5c2_checkOs(_5813_a1);
		if (_8826_exist) {
			return _8818_ok;
		};
		std::tie(_8818_ok,_8826_exist) = _1e32ed704_checkArch(_5813_a1);
		return ((!(_8826_exist)) || _8818_ok);
	};
	jule::Bool _9614_ok;;
	jule::Bool _9622_exist;;
	std::tie(_9614_ok,_9622_exist) = _1e32ed704_checkArch(_5813_a1);
	if (_9622_exist) {
		if ((!(_9614_ok))) {
			return false;
		};
		std::tie(_9614_ok,_9622_exist) = _1e32ed5c2_checkOs(_6113_a2);
		return ((!(_9622_exist)) || _9614_ok);
	};
	std::tie(_9614_ok,_9622_exist) = _1e32ed5c2_checkOs(_5813_a1);
	return ((!(_9622_exist)) || _9614_ok);
}



inline void _1e3317d39_setOsVars(jule::Slice<jule::Str>& _3619_vars) {
	_3619_vars = jule::alloc_for_append(_3619_vars,1);_3619_vars.__push(_20a39262c_Os);;
	if (_20a358dc9_IsUnix(_20a39262c_Os)) {
		_3619_vars = jule::alloc_for_append(_3619_vars,1);_3619_vars.__push(jule::Str("unix", 4));;
	};
}



inline void _1e331808c_setArchVars(jule::Slice<jule::Str>& _4421_vars) {
	_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(_20a375d08_Arch);;
	if (_20a3594e5_Is64Bit(_20a375d08_Arch)) {
		_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(jule::Str("x64", 3));;
	};
	if (_20a35924d_Is32Bit(_20a375d08_Arch)) {
		_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(jule::Str("x32", 3));;
	};
}



inline void _1e3318345_initVars(jule::Slice<jule::Str>& _5518_vars, _1e3317a2b_CompileInfo& _5532_info) {
	_1e3317d39_setOsVars(_5518_vars);
	_1e331808c_setArchVars(_5518_vars);
	if (_5532_info._field_Prod) {
		_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("production", 10));;
	};
	if (_5532_info._field_Test) {
		_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("test", 4));;
	};
	{
		auto &_match_expr{ _5532_info._field_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1e65d21aa:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("clang", 5));;
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1e65d23a8:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("gcc", 3));;
			}
		}
		_match_end_1e65d2c6b:;
	};
	{
		auto &_match_expr{ _5532_info._field_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1e65d3bd4:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp14", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1e65d392b:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp17", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1e65d3992:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp20", 5));;
			}
		}
		_match_end_1e65d3b7e:;
	};
}



inline jule::Slice<jule::U8> _1e338070e_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__2162cbdda_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			;
			_20a3a44da_Exit(1LL);
			return nullptr;
		} jule::Slice<jule::U8>();});
	});
}



inline _20a35491e_Log _1e3386dca_flatCompilerErr(jule::Str _4120_text) {
	return _20a35491e_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Text=_4120_text, };
}



inline void _1e3301592_pushPasses(jule::Ptr<_1e3208576_Package>& _11120_p, jule::Slice<jule::Str>& _11144_passes) {
	{
		auto &expr = _11120_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1e6616145:;
		if (it != expr.end()) {
			jule::Ptr<_1e310432e_SymbolTable> _11217_f = *it;
			{
				_julec_label_push:;
				{
					auto &expr = _11217_f.get()._field_Passes;
					auto it = expr.begin();
					_iter_begin_1e6616b29:;
					if (it != expr.end()) {
						_1e25932c4_Pass _11416_pass = *it;
						{
							if (_11416_pass._field_Text.empty()) {
								goto _iter_next_1e6616b29;
							};
							{
								auto &expr = _11144_passes;
								auto it = expr.begin();
								_iter_begin_1e6617971:;
								if (it != expr.end()) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_1e6616b29;
										};
									}
									_iter_next_1e6617971:;
									++it;
									goto _iter_begin_1e6617971;
								}
								_iter_end_1e6617971:;
							};
							_11144_passes = jule::alloc_for_append(_11144_passes,1);_11144_passes.__push(_11416_pass._field_Text);;
						}
						_iter_next_1e6616b29:;
						++it;
						goto _iter_begin_1e6616b29;
					}
					_iter_end_1e6616b29:;
				};
			}
			_iter_next_1e6616145:;
			++it;
			goto _iter_begin_1e6616145;
		}
		_iter_end_1e6616145:;
	};
}



inline jule::Slice<jule::Str> _1e3302087_getAllUniquePasses(jule::Ptr<_1e3208576_Package>& _12828_pkg, jule::Slice<jule::Ptr<_1e320561c_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_1e3301592_pushPasses(_12828_pkg,_12913_passes);
	{
		auto &expr = _12853_uses;
		auto it = expr.begin();
		_iter_begin_1e6618dc3:;
		if (it != expr.end()) {
			jule::Ptr<_1e320561c_ImportInfo> _13217_u = *it;
			{
				if ((!(_13217_u.get()._field_CppLinked))) {
					_1e3301592_pushPasses(_13217_u.get()._field_Package,_12913_passes);
				};
			}
			_iter_next_1e6618dc3:;
			++it;
			goto _iter_begin_1e6618dc3;
		}
		_iter_end_1e6618dc3:;
	};
	return _12913_passes;
}



inline _1e3317a2b_CompileInfo _1e3304d37_buildCompileInfo(void) {
	_1e3317a2b_CompileInfo _14213_info = _1e3317a2b_CompileInfo{._field_Prod=_22eb614e2_Production, ._field_Test=_22eb609a8_Test, };;
	{
		auto &_match_expr{ _22eaa1c18_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1e661a6cc:;
			{
				_14213_info._field_Compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1e661a754:;
			{
				_14213_info._field_Compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_1e661a655:;
	};
	{
		auto &_match_expr{ _22eb6015b_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1e66190c1:;
			{
				_14213_info._field_Compiler=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1e661ab2d:;
			{
				_14213_info._field_Compiler=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1e661ab94:;
			{
				_14213_info._field_Compiler=jule::Str("cpp20", 5);
			}
		}
		_match_end_1e661a9eb:;
	};
	return _14213_info;
}



inline void _1e3c150e8_EliminateDefines(jule::Ptr<_1e3381952_IR>& _28530_ir) {
	jule::Ptr<_1e3bd4c11_ObjectDeadCode> _28613_ocd = static__1e3bd5162_new(_28530_ir);;
	_1e3c14d2e_elimanate(_28613_ocd);
}



inline jule::Ptr<_1e24d1e8d_Directive> _1e3c1547d_findDirective(jule::Slice<jule::Ptr<_1e24d1e8d_Directive>>& _29123_directives, jule::Str _29154_tag) {
	{
		auto &expr = _29123_directives;
		auto it = expr.begin();
		_iter_begin_1e6662adc:;
		if (it != expr.end()) {
			jule::Ptr<_1e24d1e8d_Directive> _29217_dr = *it;
			{
				if ((_29217_dr.get()._field_Tag.get()._field_Kind == _29154_tag)) {
					return _29217_dr;
				};
			}
			_iter_next_1e6662adc:;
			++it;
			goto _iter_begin_1e6662adc;
		}
		_iter_end_1e6662adc:;
	};
	return nullptr;
}



inline jule::Bool _1e3c157be_hasDirective(jule::Slice<jule::Ptr<_1e24d1e8d_Directive>>& _30118_directives, jule::Str _30149_tag) {
	return (_1e3c1547d_findDirective(_30118_directives,_30149_tag) != nullptr);
}



inline void _1e3c1941b_eliminateDeadCodeOfScope(jule::Ptr<_1e31d6c3b_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_1e31d947a_Label>> _2429_labels = jule::Slice<jule::Ptr<_1e31d947a_Label>>::alloc(0LL,16LL);;
	jule::Slice<jule::Ptr<_1e31d9766_GotoSt>> _2439_gotos = jule::Slice<jule::Ptr<_1e31d9766_GotoSt>>::alloc(0LL,16LL);;
	jule::Ptr<_1e3c16517_scopeDeadCode> _24413_sdc = jule::new_ptr<_1e3c16517_scopeDeadCode>(_1e3c16517_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&(_24133_s.get()._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1e31d947a_Label>>>)((&(_2429_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1e31d9766_GotoSt>>>)((&(_2439_gotos)))), });;
	{
		_1e3c19130_optimizeStmts(_24413_sdc);
	};
}



inline void _1e3c196a2_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1e258b344_Fn>>& _25433_funcs) {
	{
		auto &expr = _25433_funcs;
		auto it = expr.begin();
		_iter_begin_1e66a5d94:;
		if (it != expr.end()) {
			jule::Ptr<_1e258b344_Fn> _25517_func = *it;
			{
				{
					auto &expr = _25517_func.get()._field_Instances;
					auto it = expr.begin();
					_iter_begin_1e66a649e:;
					if (it != expr.end()) {
						jule::Ptr<_1e258dee5_FnIns> _25621_ins = *it;
						{
							_1e3c1941b_eliminateDeadCodeOfScope(_25621_ins.get()._field_Scope);
						}
						_iter_next_1e66a649e:;
						++it;
						goto _iter_begin_1e66a649e;
					}
					_iter_end_1e66a649e:;
				};
			}
			_iter_next_1e66a5d94:;
			++it;
			goto _iter_begin_1e66a5d94;
		}
		_iter_end_1e66a5d94:;
	};
}



inline void _1e3c198e4_eliminateFunctionsScopePackage(jule::Ptr<_1e3208576_Package>& _26240_pkg) {
	{
		auto &expr = _26240_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1e66a6966:;
		if (it != expr.end()) {
			jule::Ptr<_1e310432e_SymbolTable> _26317_f = *it;
			{
				_1e3c196a2_eliminateScopeFunctions(_26317_f.get()._field_Funcs);
			}
			_iter_next_1e66a6966:;
			++it;
			goto _iter_begin_1e66a6966;
		}
		_iter_end_1e66a6966:;
	};
}



inline void _1e3c19b8b_eliminateScopePackage(jule::Ptr<_1e3208576_Package>& _26831_pkg) {
	_1e3c198e4_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _1e3c19d9a_EliminateScopes(jule::Ptr<_1e3381952_IR>& _27329_ir) {
	jule::I64 _27413_i = (_27329_ir.get()._field_Used.len() - 1LL);;
	for (; (_27413_i >= 0LL); (_27413_i)--) {
		{
			jule::Ptr<_1e320561c_ImportInfo> _27617_u = _27329_ir.get()._field_Used[_27413_i];;
			if ((!(_27617_u.get()._field_CppLinked))) {
				_1e3c19b8b_eliminateScopePackage(_27617_u.get()._field_Package);
			};
		}
	_iter_next_1e66a8539:;
	}
	_iter_end_1e66a8539:;;
	_1e3c19b8b_eliminateScopePackage(_27329_ir.get()._field_Main);
}



inline jule::Bool _1e1066309_isStdPackage(jule::Str _39917_f, jule::Str _39925_p) {
	return _20a119ae1_HasPrefix(_39917_f,_20a1b122b_Join(jule::Slice<jule::Str>::make({_20a3768ec_PathStdlib,_39925_p})));
}



inline jule::Bool _1e1069a5a_isConstantValidConditionalCase(jule::Ptr<_1e31d7137_If>& _40336_i) {
	{
		auto &_match_expr{ _40336_i.get()._field_Expr };
		
		if (_match_expr.type_is<jule::Ptr<_1e23b4a96_Const>>()) {
			_case_begin_1e6729357:;
			{
				jule::Ptr<_1e23b4a96_Const> _40613_c = _40336_i.get()._field_Expr.operator jule::Ptr<_1e23b4a96_Const>();;
				return (_1e257e26b_IsBool(_40613_c.ptr()) && _1e257bdc3_ReadBool(_40613_c.ptr()));
			}
		}
		_match_end_1e672919d:;
	};
	return false;
}



inline jule::Bool _1e106a41d_isUnreachableExpr(jule::Any& _41223_expr) {
	{
		auto &_match_expr{ _41223_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1e23b4a96_Const>>()) {
			_case_begin_1e6729c70:;
			{
				jule::Ptr<_1e23b4a96_Const> _41513_c = _41223_expr.operator jule::Ptr<_1e23b4a96_Const>();;
				return (_1e257e26b_IsBool(_41513_c.ptr()) && (!(_1e257bdc3_ReadBool(_41513_c.ptr()))));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e2583e74_BinopExprModel>>()) {
			_case_begin_1e6729cd6:;
			{
				jule::Ptr<_1e2583e74_BinopExprModel> _41813_m = _41223_expr.operator jule::Ptr<_1e2583e74_BinopExprModel>();;
				if ((_41813_m.get()._field_Op.get()._field_Kind == jule::Str("&&", 2))) {
					return (_1e106a41d_isUnreachableExpr(_41813_m.get()._field_Left.get()._field_Model) || _1e106a41d_isUnreachableExpr(_41813_m.get()._field_Right.get()._field_Model));
				};
			}
		}
		_match_end_1e672a26a:;
	};
	return false;
}



inline jule::Bool _1e107205c_isConstantValidMatchCase(jule::Ptr<_1e31db4d2_Case>& _42730_case) {
	{
		auto &expr = _42730_case.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1e672ccb7:;
		if (it != expr.end()) {
			jule::Ptr<_1e310908c_Data> &_42812_expr = *it;
			{
				if (((_1e3109950_IsConst(_42812_expr.ptr()) && _1e257e26b_IsBool(_42812_expr.get()._field_Constant.ptr())) && _1e257bdc3_ReadBool(_42812_expr.get()._field_Constant.ptr()))) {
					return true;
				};
			}
			_iter_next_1e672ccb7:;
			++it;
			goto _iter_begin_1e672ccb7;
		}
		_iter_end_1e672ccb7:;
	};
	return false;
}



inline jule::Bool _1e1079938_isUnreachableConditionalCase(jule::Ptr<_1e31d7137_If>& _43634_i) {
	return _1e106a41d_isUnreachableExpr(_43634_i.get()._field_Expr);
}



inline jule::Bool _1e107b132_isUnreachableMatchCase(jule::Ptr<_1e31db4d2_Case>& _44028_case) {
	{
		auto &expr = _44028_case.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1e672e9bc:;
		if (it != expr.end()) {
			jule::Ptr<_1e310908c_Data> &_44112_expr = *it;
			{
				if ((!(_1e106a41d_isUnreachableExpr(_44112_expr.get()._field_Model)))) {
					return false;
				};
			}
			_iter_next_1e672e9bc:;
			++it;
			goto _iter_begin_1e672e9bc;
		}
		_iter_end_1e672e9bc:;
	};
	return true;
}



inline std::tuple<jule::Bool,jule::U64> _1e15d9b57_checkForBitShiftOpt(jule::Ptr<_1e2583c87_OperandExprModel>& _42725_l, jule::Ptr<_1e2583c87_OperandExprModel>& _42748_r) {
	jule::Bool _42772_ok = jule::Bool();
	jule::U64 _42782_x = jule::U64();
	if (((!(_1e31cd183_IsInt(_1e31352a5_Str(_42725_l.get()._field_Kind.ptr())))) || (!(_1e31cd183_IsInt(_1e31352a5_Str(_42748_r.get()._field_Kind.ptr())))))) {
		_42772_ok = false;
		_42782_x = 0LLU;
		return std::make_tuple(_42772_ok,_42782_x);
	};
	{
		auto &_match_expr{ _42748_r.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1e23b4a96_Const>>()) {
			_case_begin_1e676861b:;
			{
				goto _match_end_1e67690de;
			}
		}
		else {
			_case_begin_1e6769232:;
			{
				_42772_ok = false;
				_42782_x = 0LLU;
				return std::make_tuple(_42772_ok,_42782_x);
			}
		}
		_match_end_1e67690de:;
	};
	_42782_x=static_cast<jule::U64>(_1e257c874_AsU64(_42748_r.get()._field_Model.operator jule::Ptr<_1e23b4a96_Const>().ptr()));
	if (((_42782_x == 0LLU) || ((_42782_x & 1LL) != 0LLU))) {
		_42772_ok = false;
		_42782_x = 0LLU;
		return std::make_tuple(_42772_ok,_42782_x);
	};
	jule::F64 _4419_j = _1e3194424_Log2(static_cast<jule::F64>(static_cast<jule::F64>(_42782_x)));;
	jule::U64 _4429_z = static_cast<jule::U64>(_4419_j);;
	if ((static_cast<jule::F64>(_4429_z) != _4419_j)) {
		_42772_ok = false;
		_42782_x = 0LLU;
		return std::make_tuple(_42772_ok,_42782_x);
	};
	_42772_ok = true;
	_42782_x = _4429_z;
	return std::make_tuple(_42772_ok,_42782_x);
}



inline void _1e15db153_PushOptLevel(jule::I64 _3221_level) {
	_1d42c9c1c_Copy=(_3221_level >= static_cast<jule::I64>(1LL));
	_1d42d241c_Deadcode=(_3221_level >= static_cast<jule::I64>(1LL));
	_1d42d53dc_Append=(_3221_level >= static_cast<jule::I64>(1LL));
	_1d42d580a_Math=(_3221_level >= static_cast<jule::I64>(1LL));
	_1d42d618a_Access=(_3221_level >= static_cast<jule::I64>(1LL));
	_1d42d78c8_Inline=(_3221_level >= static_cast<jule::I64>(1LL));
	_1e1023629_Ptr=(_3221_level >= static_cast<jule::I64>(1LL));
	_1e102377d_Cond=(_3221_level >= static_cast<jule::I64>(1LL));
}



inline void _1e3baaa1c_detectEnabled(void) {
	_1e3b26aa9_exprEnabled=(((_1e1023629_Ptr || _1d42d580a_Math) || _1d42d618a_Access) || _1e102377d_Cond);
	_1e3b27c0e_scopeEnabled=((_1e102377d_Cond || _1d42d53dc_Append) || _1d42c9c1c_Copy);
}



inline void _20a41ad7b_Throw(jule::Str _914_msg) {
	jule::outln(_914_msg);
	_20a3a44da_Exit(1LL);
}



inline jule::U64 _1e42a924c_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));
}



inline jule::U64 _1e42a958d_unixYearToSeconds(jule::U64 _26222_y, jule::Bool& _26240_leap) {
	if (((_26222_y - 2LLU) <= 136LLU)) {
		jule::U64 _26417_leaps = ((_26222_y - 68LLU) >> 2LLU);;
		_26240_leap=(((_26222_y - 68LLU) & 3LLU) == 0LLU);
		if (_26240_leap) {
			(_26417_leaps)--;
		};
		return static_cast<jule::U64>(((31536000LLU * (_26222_y - 70LLU)) + (86400LLU * _26417_leaps)));
	};
	jule::U64 _27213_leaps = 0LLU;;
	jule::U64 _27313_centuries = 0LLU;;
	jule::U64 _27413_cycles = ((_26222_y - 100LLU) / 400LLU);;
	jule::U64 _27513_rem = ((_26222_y - 100LLU) % 400LL);;
	if ((_27513_rem < 0LLU)) {
		(_27413_cycles)--;
		_27513_rem+=400LLU;
	};
	if ((_27513_rem == 0LLU)) {
		_26240_leap=true;
		_27313_centuries=0LLU;
		_27213_leaps=0LLU;
	} else {
		if ((_27513_rem >= 200LLU)) {
			if ((_27513_rem >= 300LLU)) {
				_27313_centuries=3LLU;
				_27513_rem-=300LLU;
			} else {
				_27313_centuries=2LLU;
				_27513_rem-=200LLU;
			};
		} else {
			if ((_27513_rem >= 100LLU)) {
				_27313_centuries=1LLU;
				_27513_rem-=100LLU;
			} else {
				_27313_centuries=0LLU;
			};
		};
		if ((_27513_rem == 0LLU)) {
			_26240_leap=false;
			_27213_leaps=0LLU;
		} else {
			_27213_leaps=static_cast<jule::U64>((_27513_rem >> 2LLU));
			_27513_rem%=4LL;
			_26240_leap=(_27513_rem == 0LLU);
		};
	};
	_27213_leaps+=((97LLU * _27413_cycles) + (24LLU * _27313_centuries));
	if (_26240_leap) {
		(_27213_leaps)++;
	};
	return static_cast<jule::U64>((((((_26222_y - 100LLU) * 31536000LLU) + (_27213_leaps * 86400LLU)) + 946684800LLU) + 86400LLU));
}



inline jule::U64 _1e42a9923_unixMonthToSeconds(jule::U64 _31923_m, jule::Bool _31936_leap) {
	jule::U64 _32113_t = 0LLU;;
	{
		auto &_match_expr{ _31923_m };
		
		if (_match_expr == 1LL) {
			_case_begin_1e67eabdc:;
			{
				_32113_t=2678400LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1e67ead41:;
			{
				_32113_t=5097600LLU;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1e67eada7:;
			{
				_32113_t=7776000LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1e67eae1d:;
			{
				_32113_t=10368000LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1e67eae84:;
			{
				_32113_t=13046400LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1e67eaeea:;
			{
				_32113_t=15638400LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1e67eb061:;
			{
				_32113_t=18316800LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1e67eb0c7:;
			{
				_32113_t=20995200LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1e67eb13d:;
			{
				_32113_t=23587200LLU;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_1e67eb1a4:;
			{
				_32113_t=26265600LLU;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1e67eb22b:;
			{
				_32113_t=28857600LLU;
			}
		}
		_match_end_1e67eab87:;
	};
	if ((_31936_leap && (_31923_m >= 2LLU))) {
		_32113_t+=86400LLU;
	};
	return _32113_t;
}



inline jule::Bool _1e423388b_isCopyOptimizable(jule::Ptr<_1e310908c_Data>& _74123_expr) {
	if ((!(_74123_expr.get()._field_Lvalue))) {
		return false;
	};
	{
		auto &_match_expr{ _74123_expr.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1e258577d_SlicingExprModel>>()) {
			_case_begin_1e687a783:;
			{
				return false;
			}
		}
		_match_end_1e687aca0:;
	};
	return true;
}



inline jule::Bool _1e4233c21_isIterCopyOptimizable(jule::Ptr<_1e310908c_Data>& _75227_expr, jule::Ptr<_1e322a147_Var>& _75241_v) {
	if (((!(_75227_expr.get()._field_Lvalue)) && (!(_1e31362a6_Mutable(_75227_expr.get()._field_Kind.ptr()))))) {
		return true;
	};
	return ((!(_75241_v.get()._field_Mutable)) && (!(_75227_expr.get()._field_Mutable)));
}



inline jule::Str _1e4241d1c_decomposeCommonEsq(jule::U8 _114123_b) {
	{
		auto &_match_expr{ _114123_b };
		
		if (_match_expr == '\\') {
			_case_begin_1e69315d6:;
			{
				return jule::Str("\\\\", 2);
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1e693164c:;
			{
				return jule::Str("'", 1);
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1e69318a0:;
			{
				return jule::Str("\\\"", 2);
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1e6931916:;
			{
				return jule::Str("\\a", 2);
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1e693197c:;
			{
				return jule::Str("\\b", 2);
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1e69319e3:;
			{
				return jule::Str("\\f", 2);
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1e6931a6a:;
			{
				return jule::Str("\\n", 2);
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1e6931ae2:;
			{
				return jule::Str("\\r", 2);
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1e6931b69:;
			{
				return jule::Str("\\t", 2);
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1e6931be1:;
			{
				return jule::Str("\\v", 2);
			}
		}
		else {
			_case_begin_1e6931471:;
			{
				return jule::Str();
			}
		}
		_match_end_1e69313b6:;
	};
}



inline jule::Str _1e4242108_sbtoa(jule::U8 _116810_b) {
	if ((_116810_b == 0LLU)) {
		return jule::Str("\\x00", 4);
	};
	if ((_116810_b < 128LLU)) {
		jule::Str _117313_seq = _1e4241d1c_decomposeCommonEsq(_116810_b);;
		if ((!(_117313_seq.empty()))) {
			return _117313_seq;
		};
		if (((32LL <= _116810_b) && (_116810_b <= 126LLU))) {
			return static_cast<jule::Str>(_116810_b);
		};
	};
	jule::Str _11819_seq = _1e31c4dc2_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_116810_b)),8LL);;
	if ((_11819_seq.len() == 2LL)) {
		return (jule::Str("\\0", 2) + _11819_seq);
	};
	return (jule::Str("\\", 1) + _11819_seq);
}



inline jule::Str _1e42423a0_cstrBytes(jule::Slice<jule::U8> _118814_bytes) {
	jule::Str _118913_lit = jule::Str::alloc(_118814_bytes.len());;
	{
		auto &expr = _118814_bytes;
		auto it = expr.begin();
		_iter_begin_1e6937279:;
		if (it != expr.end()) {
			jule::U8 &_119012_b = *it;
			{
				_118913_lit+=_1e4242108_sbtoa(_119012_b);
			}
			_iter_next_1e6937279:;
			++it;
			goto _iter_begin_1e6937279;
		}
		_iter_end_1e6937279:;
	};
	return _118913_lit;
}



inline jule::Str _1e42426be_cstrLit(jule::Slice<jule::U8> _119612_bytes) {
	return ((jule::Str("\"", 1) + _1e42423a0_cstrBytes(_119612_bytes)) + jule::Str("\"", 1));
}



inline jule::Str _1e42429cc_ftoa(jule::F64 _12009_f, jule::I64 _120017_bitsize) {
	if ((_120017_bitsize != 32LL)) {
		if ((_12009_f == static_cast<jule::F64>(static_cast<jule::I64>(_12009_f)))) {
			return _1e4242c74_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_12009_f)));
		};
		if ((_12009_f == static_cast<jule::F64>(static_cast<jule::U64>(_12009_f)))) {
			return _1e424301b_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_12009_f)));
		};
	};
	jule::Str _120913_m = _1e2aeb233_FmtFloat(_12009_f,'f',-1LL,_120017_bitsize);;
	if ((!(_20a1ae191_Contains(_120913_m,jule::Str(".", 1))))) {
		_120913_m+=jule::Str(".0", 2);
	};
	return _120913_m;
}



inline jule::Str _1e4242c74_itoa(jule::I64 _12169_x) {
	{
		
		if ((_12169_x == jule::MAX_I64)) {
			_case_begin_1e693b3e3:;
			{
				return jule::Str("jule::MAX_I64", 13);
			}
		}
		else if ((_12169_x == jule::MIN_I64)) {
			_case_begin_1e693b47b:;
			{
				return jule::Str("jule::MIN_I64", 13);
			}
		}
		_match_end_1e693b2c2:;
	};
	jule::Str _12249_fmt = _1e31c5257_FmtInt(_12169_x,10LL);;
	if (_20a3594e5_Is64Bit(jule::Str("amd64", 5))) {
		return (_12249_fmt + jule::Str("LL", 2));
	};
	return (_12249_fmt + jule::Str("L", 1));
}



inline jule::Str _1e424301b_utoa(jule::U64 _12319_x) {
	{
		
		if ((_12319_x == jule::MAX_U64)) {
			_case_begin_1e693d219:;
			{
				return jule::Str("jule::MAX_U64", 13);
			}
		}
		_match_end_1e693d109:;
	};
	jule::Str _12379_fmt = _1e31c4dc2_FmtUint(_12319_x,10LL);;
	if (_20a3594e5_Is64Bit(jule::Str("amd64", 5))) {
		return (_12379_fmt + jule::Str("LLU", 3));
	};
	return (_12379_fmt + jule::Str("LU", 2));
}



inline jule::Bool _1e42433c3_isForwarded(jule::Ptr<_1e31d6c3b_Scope>& _124417_s) {
	jule::Any _12459_last = _124417_s.get()._field_Stmts[(_124417_s.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _12459_last };
		
		if (_match_expr.type_is<jule::Ptr<_1e310908c_Data>>()) {
			_case_begin_1e69404e6:;
			{
				{
					auto &_match_expr{ _12459_last.operator jule::Ptr<_1e310908c_Data>().get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_1e2587c58_BuiltinErrorCallExprModel>>()) {
						_case_begin_1e694110c:;
						{
							return true;
						}
					}
					else {
						_case_begin_1e6941096:;
						{
							return false;
						}
					}
					_match_end_1e6940ccc:;
				};
			}
		}
		else {
			_case_begin_1e694043b:;
			{
				return true;
			}
		}
		_match_end_1e69403d6:;
	};
}



inline jule::Bool _1e424368c_isBuiltinCallHasDebuginf(jule::Ptr<_1e2584b01_FnCallExprModel>& _125930_m) {
	if ((!(_1e259037b_IsBuiltin(_125930_m.get()._field_Func.ptr())))) {
		return false;
	};
	{
		auto &_match_expr{ _125930_m.get()._field_Expr };
		
		if (_match_expr.type_is<jule::Ptr<_1e258663b_CommonSubIdentExprModel>>()) {
			_case_begin_1e6941d99:;
			{
				jule::Ptr<_1e258663b_CommonSubIdentExprModel> _126513_csie = _125930_m.get()._field_Expr.operator jule::Ptr<_1e258663b_CommonSubIdentExprModel>();;
				return (_126513_csie.get()._field_Ident == jule::Str("swap", 4));
			}
		}
		else {
			_case_begin_1e6940a79:;
			{
				return false;
			}
		}
		_match_end_1e6940a24:;
	};
}



inline void _1e42ae791_iterFiles(jule::Ptr<_1e3208576_Package>& _100219_pkg, jule::Fn<void(jule::Ptr<_1e310432e_SymbolTable>&)> _100234_f) {
	{
		auto &expr = _100219_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1e6a7c446:;
		if (it != expr.end()) {
			jule::Ptr<_1e310432e_SymbolTable> _100317_file = *it;
			{
				_100234_f(_100317_file);
			}
			_iter_next_1e6a7c446:;
			++it;
			goto _iter_begin_1e6a7c446;
		}
		_iter_end_1e6a7c446:;
	};
}



inline void _1e42ae9e4_prepareStructure(jule::Ptr<_1e2505d6e_Struct>& _100826_s) {
	{
		auto &expr = _100826_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1e6a7d05c:;
		if (it != expr.end()) {
			jule::Ptr<_1e253220d_StructIns> _100917_ins = *it;
			{
				{
					auto &expr = _100917_ins.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1e6a7d777:;
					if (it != expr.end()) {
						jule::Ptr<_1e258b344_Fn> _101021_m = *it;
						{
							if (_101021_m.get()._field_Statically) {
								goto _iter_next_1e6a7d777;
							};
							{
								auto &expr = _101021_m.get()._field_Instances;
								auto it = expr.begin();
								_iter_begin_1e6a7e558:;
								if (it != expr.end()) {
									jule::Ptr<_1e258dee5_FnIns> _101425_mins = *it;
									{
										jule::Ptr<_1e258d126_ParamIns> _101525_p = _101425_mins.get()._field_Params[0LL];;
										if ((!(_1e258a398_IsRef(_101525_p.get()._field_Decl.ptr())))) {
											_101525_p.get()._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(jule::new_ptr<_1e42b09a1_customType>(_1e42b09a1_customType{._field_kind=static__1e42b2354_asPtr(static__1e42b5852_kind(_101525_p.get()._field_Kind))}), 13)});
										} else {
											_101525_p.get()._field_Kind=jule::new_ptr<_1e3134da9_TypeKind>(_1e3134da9_TypeKind{._field_Kind=jule::Trait<_1e313497a_Kind>(jule::new_ptr<_1e42b09a1_customType>(_1e42b09a1_customType{._field_kind=static__1e42b5852_kind(_101525_p.get()._field_Kind)}), 13)});
										};
									}
									_iter_next_1e6a7e558:;
									++it;
									goto _iter_begin_1e6a7e558;
								}
								_iter_end_1e6a7e558:;
							};
						}
						_iter_next_1e6a7d777:;
						++it;
						goto _iter_begin_1e6a7d777;
					}
					_iter_end_1e6a7d777:;
				};
			}
			_iter_next_1e6a7d05c:;
			++it;
			goto _iter_begin_1e6a7d05c;
		}
		_iter_end_1e6a7d05c:;
	};
}



inline jule::Str _1e42aec8b_concatAllParts(jule::Slice<jule::Ptr<_1d42b43cc_Token>> _103519_parts) {
	jule::I64 _103613_n = 0LL;;
	{
		auto &expr = _103519_parts;
		auto it = expr.begin();
		_iter_begin_1e6a7d579:;
		if (it != expr.end()) {
			jule::Ptr<_1d42b43cc_Token> &_103712_part = *it;
			{
				_103613_n+=_103712_part.get()._field_Kind.len();
			}
			_iter_next_1e6a7d579:;
			++it;
			goto _iter_begin_1e6a7d579;
		}
		_iter_end_1e6a7d579:;
	};
	if ((_103613_n == 0LL)) {
		return jule::Str();
	};
	jule::Str _104313_s = jule::Str::alloc(_103613_n);;
	{
		auto &expr = _103519_parts;
		auto it = expr.begin();
		_iter_begin_1e6a8301d:;
		if (it != expr.end()) {
			jule::Ptr<_1d42b43cc_Token> &_104412_p = *it;
			{
				_104313_s+=_104412_p.get()._field_Kind;
			}
			_iter_next_1e6a8301d:;
			++it;
			goto _iter_begin_1e6a8301d;
		}
		_iter_end_1e6a8301d:;
	};
	return _104313_s;
}



inline jule::Ptr<_1e24d1e8d_Directive> _1e42b81b2_findDirective(jule::Slice<jule::Ptr<_1e24d1e8d_Directive>>& _32923_directives, jule::Str _32954_tag) {
	{
		auto &expr = _32923_directives;
		auto it = expr.begin();
		_iter_begin_1e6b4bd40:;
		if (it != expr.end()) {
			jule::Ptr<_1e24d1e8d_Directive> _33017_dr = *it;
			{
				if ((_33017_dr.get()._field_Tag.get()._field_Kind == _32954_tag)) {
					return _33017_dr;
				};
			}
			_iter_next_1e6b4bd40:;
			++it;
			goto _iter_begin_1e6b4bd40;
		}
		_iter_end_1e6b4bd40:;
	};
	return nullptr;
}



inline jule::Bool _1e42b8547_hasDirective(jule::Slice<jule::Ptr<_1e24d1e8d_Directive>>& _33918_directives, jule::Str _33949_tag) {
	return (_1e42b81b2_findDirective(_33918_directives,_33949_tag) != nullptr);
}



inline void _20a323190_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _20a336d74_help(jule::Slice<jule::Str>& _3510_args) {
	if ((_3510_args.len() > 2LL)) {
		_20a323190_printErrorMessage((jule::Str("invalid command: ", 17) + _3510_args[2LL]));
		return;;
	};
	jule::I64 _4113_max = _20a336208_HelpMap[0LL][0LL].len();;
	{
		auto &expr = _20a336208_HelpMap;
		auto it = expr.begin();
		_iter_begin_1e6bc9340:;
		if (it != expr.end()) {
			jule::Array<jule::Str,2> &_4212_k = *it;
			{
				jule::I64 _4313_n = _4212_k[0LL].len();;
				if ((_4313_n > _4113_max)) {
					_4113_max=_4313_n;
				};
			}
			_iter_next_1e6bc9340:;
			++it;
			goto _iter_begin_1e6bc9340;
		}
		_iter_end_1e6bc9340:;
	};
	jule::Str _4913_s = jule::Str();;
	;
	{
		auto &expr = _20a336208_HelpMap;
		auto it = expr.begin();
		_iter_begin_1e6bcaeac:;
		if (it != expr.end()) {
			jule::I64 _519_i = it - expr.begin();
			jule::Array<jule::Str,2> &_5112_part = *it;
			{
				_4913_s+=_5112_part[0LL];
				_4913_s+=_20a110026_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(((_4113_max - _5112_part[0LL].len()) + 5LL)));
				_4913_s+=_5112_part[1LL];
				if (((_519_i + 1LL) < 5LL)) {
					_4913_s+=jule::Str("\n", 1);
				};
			}
			_iter_next_1e6bcaeac:;
			++it;
			_519_i++;
			goto _iter_begin_1e6bcaeac;
		}
		_iter_end_1e6bcaeac:;
	};
	jule::outln(_4913_s);
}



inline void _20a3375c2_version(jule::Slice<jule::Str>& _6313_args) {
	if ((_6313_args.len() > 2LL)) {
		_20a323190_printErrorMessage((jule::Str("invalid command: ", 17) + _6313_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("jule0.0.12 @master", 18));
}



inline void _20a338e75_toolDistos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	jule::out(jule::Str("windows", 7));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("linux", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("darwin", 6));
	jule::outln(jule::Str());
}



inline void _20a3396c3_toolDistarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	jule::out(jule::Str("amd64", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("i386", 4));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("arm64", 5));
	jule::outln(jule::Str());
}



inline void _20a339e21_tool(jule::Slice<jule::Str>& _9410_args) {
	if ((_9410_args.len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if ((_9410_args.len() > 3LL)) {
		_20a323190_printErrorMessage((jule::Str("invalid command: ", 17) + _9410_args[3LL]));
		return;;
	};
	jule::Str _1059_cmd = _9410_args[2LL];;
	{
		auto &_match_expr{ _1059_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_1e6bd31a1:;
			{
				_20a338e75_toolDistos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_1e6bd2d93:;
			{
				_20a3396c3_toolDistarch();
			}
		}
		else {
			_case_begin_1e6bd1666:;
			{
				_20a323190_printErrorMessage((jule::Str("undefined command: ", 19) + _1059_cmd));
			}
		}
		_match_end_1e6bd2bc8:;
	};
}



inline void _20a324092_julenv(jule::Slice<jule::Str>& _11712_args) {
	if ((_11712_args.len() > 2LL)) {
		_20a323190_printErrorMessage((jule::Str("invalid command: ", 17) + _11712_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("julec version: jule0.0.12 @master", 33));
	jule::outln(jule::Str("architecture: amd64", 19));
	jule::outln(jule::Str("operating system: windows", 25));
	jule::outln((jule::Str("default compiler: ", 18) + _22eaa1c18_Compiler));
	jule::outln((jule::Str("default C++ standard: ", 22) + _22eb6015b_CppStd));
}



inline void _20a346c85_mod(jule::Slice<jule::Str>& _1309_args) {
	if ((_1309_args.len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;;
	};
	if ((_1309_args.len() > 3LL)) {
		_20a323190_printErrorMessage((jule::Str("invalid command: ", 17) + _1309_args[3LL]));
		return;;
	};
	{
		auto &_match_expr{ _1309_args[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_1e6bd7716:;
			{
				({
					auto except = static__2162cc8be_Write(jule::Str("jule.mod", 8),jule::Slice<jule::U8>(),432LL);
					if (!except.ok()) {
						_20a323190_printErrorMessage(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1e6bd603e:;
			{
				_20a323190_printErrorMessage((jule::Str("invalid command: ", 17) + _1309_args[2LL]));
			}
		}
		_match_end_1e6bd72a4:;
	};
}



inline jule::Bool _20a33a95a_processCommand(jule::Slice<jule::Str>& _15320_args) {
	{
		auto &_match_expr{ _15320_args[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_1e6bd896a:;
			{
				_20a336d74_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_1e6bd89d1:;
			{
				_20a3375c2_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_1e6bd8a47:;
			{
				_20a339e21_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_1e6bd922e:;
			{
				_20a324092_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_1e6bd9295:;
			{
				_20a346c85_mod(_15320_args);
			}
		}
		else {
			_case_begin_1e6bd888d:;
			{
				return false;
			}
		}
		_match_end_1e6bd87c2:;
	};
	return true;
}



inline void _20a322cc7_showInfo(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help,\n    version       Show version,\n    tool          Tools for effective Jule,\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 310));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18913_args = _2232079c9_Args();;
	if ((_18913_args.len() < 2LL)) {
		_20a322cc7_showInfo();
		return;;
	};
	if (_20a33a95a_processCommand(_18913_args)) {
		return;;
	};
	_1e4303829_compileCommand(_18913_args);
}



inline void _20a32d0ce_enableVtp(void) {
	jule::Uintptr _199_hOut = _2163ae93a_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551605LLU));;
	if ((_199_hOut == jule::MAX_U64)) {
		return;;
	};
	jule::I64 _2413_dwMode = 0LL;;
	if ((!(_2163b2641_GetConsoleMode(_199_hOut,_2413_dwMode)))) {
		return;;
	};
	_2413_dwMode|=4LL;
	_2163b2982_SetConsoleMode(_199_hOut,_2413_dwMode);
}



inline void _20a32a175_init(void) {
	_20a32d0ce_enableVtp();
}



inline void _1e42be86c_init(void) {
	_22eaa1c18_Compiler=jule::Str("clang", 5);
}



inline jule::Ptr<_2163c2bb2_File> _1e42c141d_openOutput(jule::Str& _4316_path) {
	jule::Str _449_dir = _20a1b1704_Dir(_4316_path);;
	({
		auto except = static__20a1b1eda_Of(_449_dir);
		if (!except.ok()) {
			({
				auto except = static__20a1b1a9a_Create(_449_dir);
				if (!except.ok()) {
					_20a41ad7b_Throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__2162cb35c_Create(_4316_path);
		(except.ok()) ? (except.result) : ({
			_20a41ad7b_Throw(jule::Str("a problem occurs when code generation", 37));
			nullptr;
		});
	});
}



inline void _1e42cc605_clearObjects(void) {
	({
		auto except = static__21642c403_Remove(_1e42e12d9_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__20a1b1bcc_Remove(_1e42c1ad3_OutDir);
}



inline void _1e416dd6a_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_20a3939e6_Cmd> _7313_cmd = static__20a393e25_New(_7214_compiler);;
	_7313_cmd.get()._field_Args=jule::Slice<jule::Str>::make({_7214_compiler});
	_7313_cmd.get()._field_Args=jule::append(_7313_cmd.get()._field_Args,_20a1ae05e_Split(_7229_compilerCmd,jule::Str(" ", 1),-1LL));
	jule::I64 _769_status = ({
		auto except = _20a394189_Spawn(_7313_cmd.ptr());
		(except.ok()) ? (except.result) : ({
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(12LL)) == _match_expr) {
					_case_begin_1e6be3689:;
					{
						static__20a4081cb_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of fork problem", 56));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(3LL)) == _match_expr) {
					_case_begin_1e6be2e5d:;
					{
						static__20a4081cb_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(9LL)) == _match_expr) {
					_case_begin_1e6be31c2:;
					{
						static__20a4081cb_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not in the proper format", 85));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL)) == _match_expr) {
					_case_begin_1e6be3238:;
					{
						static__20a4081cb_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1e6be30a1:;
					{
						static__20a4081cb_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of unkown problem", 58));
					}
				}
				_match_end_1e6be2ee6:;
			};
			_20a41ad7b_Throw(jule::Str());
			0LL;
		});
	});;
	if ((_769_status != 0LL)) {
		jule::Str _9313_errorMessage = ((jule::Str("\n>>> your backend compiler (", 28) + _22eaa1c18_Compiler) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__20a4081cb_Print(jule::Str("\033[31m", 5),_9313_errorMessage);
		_20a41ad7b_Throw(jule::Str());
	};
	_1e42cc605_clearObjects();
}



inline jule::Bool _1e42b8a53_isCppSourceFile(jule::Str _10420_path) {
	jule::I64 _1059_offset = _20a1ad822_FindLastByte(_10420_path,'.');;
	if ((_1059_offset == -1LL)) {
		return false;
	};
	return _20a34824d_IsValidCppExt(_10420_path.slice(_1059_offset));
}



inline void _1e416e156_pushCompCmdClang(jule::Str& _11226_cmd) {
	_11226_cmd+=jule::Str("-Wno-everything ", 16);
	_11226_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _22eb6015b_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1e6be8095:;
			{
				_11226_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1e6be810b:;
			{
				_11226_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1e6be8260:;
			{
				_11226_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1e6be7e52:;
	};
	_11226_cmd+=jule::Str(" ", 1);
	if (_22eb614e2_Production) {
		_11226_cmd+=jule::Str("-O3 ", 4);
		_11226_cmd+=jule::Str("-flto ", 6);
		_11226_cmd+=jule::Str("-DNDEBUG ", 9);
		_11226_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_11226_cmd+=jule::Str("-O0 ", 4);
	};
}



inline void _1e42bcbcd_pushCompCmdGcc(jule::Str& _13824_cmd) {
	_13824_cmd+=jule::Str("-w ", 3);
	_13824_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _22eb6015b_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1e6bea7d4:;
			{
				_13824_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1e6bea84a:;
			{
				_13824_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1e6bea99e:;
			{
				_13824_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1e6bea691:;
	};
	_13824_cmd+=jule::Str(" ", 1);
	if (_22eb614e2_Production) {
		_13824_cmd+=jule::Str("-O3 ", 4);
		_13824_cmd+=jule::Str("-DNDEBUG ", 9);
		_13824_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_13824_cmd+=jule::Str("-O0 ", 4);
	};
}



inline std::tuple<jule::Str,jule::Str> _1e42bada7_genCompileCmd(jule::Str _16418_sourcePath, jule::Ptr<_1e3381952_IR>& _16436_ir) {
	jule::Str &_16510_compiler = _22eb5ede7_CompilerPath;;
	jule::Str _16613_cmd = jule::Str::alloc(64LL);;
	{
		auto &_match_expr{ _22eaa1c18_Compiler };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1e6bed1dd:;
			{
				_1e42bcbcd_pushCompCmdGcc(_16613_cmd);
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1e6bed73d:;
			{
				_1e416e156_pushCompCmdClang(_16613_cmd);
			}
		}
		_match_end_1e6bed4c9:;
	};
	{
		auto &expr = _16436_ir.get()._field_Passes;
		auto it = expr.begin();
		_iter_begin_1e6beda7e:;
		if (it != expr.end()) {
			jule::Str &_17612_pass = *it;
			{
				_16613_cmd+=_17612_pass;
				_16613_cmd+=jule::Str(" ", 1);
			}
			_iter_next_1e6beda7e:;
			++it;
			goto _iter_begin_1e6beda7e;
		}
		_iter_end_1e6beda7e:;
	};
	{
		auto &expr = _16436_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1e6beee59:;
		if (it != expr.end()) {
			jule::Ptr<_1e320561c_ImportInfo> &_18212_u = *it;
			{
				if ((_18212_u.get()._field_CppLinked && _1e42b8a53_isCppSourceFile(_18212_u.get()._field_Path))) {
					_16613_cmd+=_18212_u.get()._field_Path;
					_16613_cmd+=jule::Str(" ", 1);
				};
			}
			_iter_next_1e6beee59:;
			++it;
			goto _iter_begin_1e6beee59;
		}
		_iter_end_1e6beee59:;
	};
	if ((!(_1e42c4234_Out.empty()))) {
		_16613_cmd+=jule::Str("-o ", 3);
		_16613_cmd+=_1e42c4234_Out;
		_16613_cmd+=jule::Str(" ", 1);
	};
	_16613_cmd+=_16418_sourcePath;
	return std::make_tuple(_16510_compiler,_16613_cmd);
}



inline jule::Str _1e42e12d9_getCompilePath(void) {
	return _20a1b122b_Join(jule::Slice<jule::Str>::make({_1e42c1ad3_OutDir,_1e42c35c9_OutName}));
}



inline void _1e42ba33a_applyTargetIndependentOptimizations(jule::Ptr<_1e3381952_IR>& _20545_ir) {
	jule::Ptr<_1e3bdecc6_Optimizer> _20713_opt = static__1e3b53564_New(_20545_ir);;
	_1e3ba92e0_Optimize(_20713_opt.ptr());
}



inline void _1e42ba8bd_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _22eaa1c18_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1e6c01e17:;
			{
				_20a41ad7b_Throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1e6c02665:;
			{
				if (_22eb5ede7_CompilerPath.empty()) {
					_22eb5ede7_CompilerPath=jule::Str("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1e6c026cb:;
			{
				if (_22eb5ede7_CompilerPath.empty()) {
					_22eb5ede7_CompilerPath=jule::Str("g++", 3);
				};
			}
		}
		else {
			_case_begin_1e6c025ee:;
			{
				_20a41ad7b_Throw((jule::Str("invalid option value for --compiler: ", 37) + _22eaa1c18_Compiler));
			}
		}
		_match_end_1e6c02335:;
	};
}



inline void _1e42c83ae_checkTargetArch(jule::Str _22820_arch) {
	if ((((_22820_arch != jule::Str("amd64", 5)) && (_22820_arch != jule::Str("arm64", 5))) && (_22820_arch != jule::Str("i386", 4)))) {
		_20a41ad7b_Throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _22820_arch));
	};
}



inline void _1e42bbe30_checkTargetOs(jule::Str _23618_os) {
	if ((((_23618_os != jule::Str("windows", 7)) && (_23618_os != jule::Str("linux", 5))) && (_23618_os != jule::Str("darwin", 6)))) {
		_20a41ad7b_Throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _23618_os));
	};
}



inline void _1e42bc062_checkTargetFlag(jule::Str& _24421_target) {
	if (_24421_target.empty()) {
		_20a41ad7b_Throw(jule::Str("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2499_parts = _20a1ae05e_Split(_24421_target,jule::Str("-", 1),-1LL);;
	if ((_2499_parts.len() != 2LL)) {
		_20a41ad7b_Throw((jule::Str("--target: undefined platform target format: ", 44) + _24421_target));
	};
	jule::Str _25410_os = _2499_parts[0LL];;
	jule::Str _25414_arch = _2499_parts[1LL];;
	std::tie(_25410_os,_25414_arch) = std::make_tuple(_2499_parts[0LL],_2499_parts[1LL]);
	if ((_25410_os != jule::Str("native", 6))) {
		_1e42bbe30_checkTargetOs(_25410_os);
		_20a39262c_Os=_25410_os;
	};
	if ((_25414_arch != jule::Str("native", 6))) {
		_1e42c83ae_checkTargetArch(_25414_arch);
		_20a375d08_Arch=_25414_arch;
	};
	_1e26d1412_UpdateTarget();
}



inline void _1e4302edd_checkOptFlag(jule::Str& _26718_opt) {
	if (_26718_opt.empty()) {
		_20a41ad7b_Throw(jule::Str("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ _26718_opt };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_1e6c0a283:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_1e6c0a7d3:;
			{
				_1e15db153_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1e6c0a063:;
			{
				_20a41ad7b_Throw((jule::Str("--opt: invalid optimization level: ", 35) + _26718_opt));
			}
		}
		_match_end_1e6c0a00d:;
	};
}



inline void _1e4303351_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _22eb6015b_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1e6c0a849:;
			{
				goto _match_end_1e6c0b64c;
			}
		}
		else {
			_case_begin_1e6c0b262:;
			{
				_20a41ad7b_Throw((jule::Str("--cppstd: invalid optimization level: ", 38) + _22eb6015b_CppStd));
			}
		}
		_match_end_1e6c0b64c:;
	};
}



inline jule::Slice<jule::Str> _1e4303483_checkFlags(jule::Slice<jule::Str>& _29216_args) {
	jule::Str _29313_opt = jule::Str("L0", 2);;
	jule::Str _29413_target = jule::Str("native-native", 13);;
	jule::Ptr<_1e42e927b_FlagSet> _29613_fs = static__1e42e9567_new();;
	_1e6c0dc26_add_var(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29313_opt)))),jule::Str("opt", 3),0LL,jule::Str("Optimization level", 18));
	_1e6c0dc26_add_var(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29413_target)))),jule::Str("target", 6),0LL,jule::Str("Target system", 13));
	_1e6c0dc26_add_var(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1e42c4234_Out)))),jule::Str("out", 3),'o',jule::Str("Output identifier", 17));
	_1e6c17856_add_var(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_22eb603c0_Shadowing)))),jule::Str("shadowing", 9),0LL,jule::Str("Allow shadowing", 15));
	_1e6c17856_add_var(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_22eb6069a_Transpilation)))),jule::Str("transpile", 9),'t',jule::Str("Transpile code", 14));
	_1e6c0dc26_add_var(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_22eaa1c18_Compiler)))),jule::Str("compiler", 8),0LL,jule::Str("Backend compiler", 16));
	_1e6c0dc26_add_var(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_22eb5ede7_CompilerPath)))),jule::Str("compiler-path", 13),0LL,jule::Str("Path of backend compiler", 24));
	_1e6c17856_add_var(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_22eb614e2_Production)))),jule::Str("production", 10),'p',jule::Str("Compile for production", 22));
	_1e6c17856_add_var(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_22eb60cb6_RC)))),jule::Str("disable-rc", 10),0LL,jule::Str("Disable reference counting", 26));
	_1e6c17856_add_var(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_22eb611d4_Safety)))),jule::Str("disable-safety", 14),0LL,jule::Str("Disable safety", 14));
	_1e6c0dc26_add_var(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_22eb6015b_CppStd)))),jule::Str("cppstd", 6),0LL,jule::Str("C++ standard", 12));
	_1e6c17856_add_var(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d42c9c1c_Copy)))),jule::Str("opt-copy", 8),0LL,jule::Str("Copy optimization", 17));
	_1e6c17856_add_var(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d42d241c_Deadcode)))),jule::Str("opt-deadcode", 12),0LL,jule::Str("Deadcode optimization", 21));
	_1e6c17856_add_var(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d42d53dc_Append)))),jule::Str("opt-append", 10),0LL,jule::Str("Append optimization", 19));
	_1e6c17856_add_var(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d42d580a_Math)))),jule::Str("opt-math", 8),0LL,jule::Str("Math optimization", 17));
	_1e6c17856_add_var(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d42d618a_Access)))),jule::Str("opt-access", 10),0LL,jule::Str("Access optimization", 19));
	_1e6c17856_add_var(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d42d78c8_Inline)))),jule::Str("opt-inline", 10),0LL,jule::Str("Inline optimization", 19));
	_1e6c17856_add_var(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e1023629_Ptr)))),jule::Str("opt-ptr", 7),0LL,jule::Str("Pointer optimizations", 21));
	_1e6c17856_add_var(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e102377d_Cond)))),jule::Str("opt-cond", 8),0LL,jule::Str("Conditional optimizations", 25));
	jule::Slice<jule::Str> _31813_content = ({
		auto except = _1e42ea37b_parse(_29613_fs.ptr(), _29216_args);
		(except.ok()) ? (except.result) : ({
			_20a41ad7b_Throw(except.error.operator jule::Str());
			nullptr;
		});
	});;
	_1e42ba8bd_checkCompilerFlag();
	_1e4303351_checkCppStdFlag();
	_1e42bc062_checkTargetFlag(_29413_target);
	_1e4302edd_checkOptFlag(_29313_opt);
	return _31813_content;
}



inline void _1e43035b5_setupSemaFlags(jule::I64& _33124_flags) {
	if (_22eb603c0_Shadowing) {
		_33124_flags|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1e3381952_IR> _1e43036e7_buildIr(jule::Slice<jule::Str>& _33713_args) {
	jule::Slice<jule::Str> _3389_content = _1e4303483_checkFlags(_33713_args);;
	jule::I64 _34013_semaFlags = static_cast<jule::I64>(0LL);;
	_1e43035b5_setupSemaFlags(_34013_semaFlags);
	if ((_3389_content.len() == 0LL)) {
		_20a41ad7b_Throw(_20a354d5e_Logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>()));
	} else if ((_3389_content.len() > 1LL)) {
		_20a41ad7b_Throw((jule::Str("undefined content: ", 19) + _3389_content[1LL]));
	};
	jule::Str _34814_path;;
	jule::Bool _34820_ok;;
	std::tie(_34814_path,_34820_ok) = _20a1b1490_Abs(_3389_content[0LL]);
	if ((!(_34820_ok))) {
		_20a41ad7b_Throw(jule::Str("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_2163c2d9e_Status> _3549_inf = ({
		auto except = static__20a1b1eda_Of(_20a3768ec_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_20a41ad7b_Throw(_20a354d5e_Logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
			return nullptr;
		} jule::Ptr<_2163c2d9e_Status>();});
	});;
	if ((!(_2162d1a05_IsDir(_3549_inf.ptr())))) {
		_20a41ad7b_Throw(_20a354d5e_Logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1e3381952_IR> _36214_ir;;
	jule::Slice<_20a35491e_Log> _36218_logs;;
	std::tie(_36214_ir,_36218_logs) = static__1e1d4c8c5_Build(_34814_path,_34013_semaFlags);
	if (((_36214_ir == nullptr) && (_36218_logs == nullptr))) {
		_20a41ad7b_Throw(_20a354d5e_Logf(jule::Str("there is no Jule source code in package: @", 42),jule::Slice<jule::Any>::make({jule::Any(_34814_path)})));
	};
	if ((_36218_logs != nullptr)) {
		static__20a41a199_PrintLogs(_36218_logs);
		_20a41ad7b_Throw(jule::Str());
	};
	return _36214_ir;
}



inline void _1e4303829_compileCommand(jule::Slice<jule::Str>& _37724_args) {
	_37724_args=_37724_args.slice(1LL);
	if ((_37724_args[0LL] == jule::Str("test", 4))) {
		_22eb609a8_Test=true;
		_37724_args=_37724_args.slice(1LL);
	};
	jule::Ptr<_1e3381952_IR> _38313_ir = _1e43036e7_buildIr(_37724_args);;
	;
	if ((!(_22eb609a8_Test))) {
		jule::Ptr<_1e258b344_Fn> _38817_main = _1e3209d2a_FindFn(_38313_ir.get()._field_Main.ptr(), jule::Str("main", 4),false);;
		if ((_38817_main == nullptr)) {
			_20a41ad7b_Throw(_20a354d5e_Logf(jule::Str("missing entry point: entry point (main) function is not defined", 63),jule::Slice<jule::Any>()));
		};
	};
	_1e42ba33a_applyTargetIndependentOptimizations(_38313_ir);
	_1e18062b3_Order(_38313_ir.ptr());
	jule::Str _39910_compiler;;
	jule::Str _39920_compilerCmd;;
	std::tie(_39910_compiler,_39920_compilerCmd) = _1e42bada7_genCompileCmd(_1e42e12d9_getCompilePath(),_38313_ir);
	jule::Ptr<_1e42a9e62_ObjectCoder> _40113_oc = static__1e428ce89_New(_38313_ir,_1e42a9a88_SerializationInfo{._field_Compiler=_39910_compiler, ._field_CompilerCommand=_39920_compilerCmd});;
	if (_22eb609a8_Test) {
		jule::Ptr<_1e42451a5_TestCoder> _40617_tc = static__1e4245628_New(_40113_oc);;
		_1e424685a_Serialize(_40617_tc);
	} else {
		_1e42ae42d_Serialize(_40113_oc);
	};
	jule::Str _4129_path = _1e42e12d9_getCompilePath();;
	jule::Ptr<_2163c2bb2_File> _41313_file = _1e42c141d_openOutput(_4129_path);;
	({
		auto except = _216456b69_Write(_41313_file.ptr(), static_cast<jule::Slice<jule::U8>>(_40113_oc.get()._field_Obj));
		if (!except.ok()) {
			_20a41ad7b_Throw(jule::Str("object code could not write", 27));
		}
	});
	({
		auto except = _2162ce97b_Close(_41313_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:417:5"));
	});
	if ((!(_22eb6069a_Transpilation))) {
		_1e416dd6a_compileIr(_39910_compiler,_39920_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_20a3668a9_init();
	_1e2794e54_init();
	_20a32a175_init();
	_1e42be86c_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}