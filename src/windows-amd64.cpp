// Auto generated by JuleC.
// JuleC version: jule0.0.15 @master
// Date: 4/8/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp -lws2_32 -lshell32 -lshell32

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <winsock2.h>
#include <ws2ipdef.h>
#include <windows.h>
#include <fcntl.h>
#include <io.h>
#include <cstdio>
#include <sys/stat.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _20d3bbea0_comptimeRangeKind{};
struct _20d411e7e_Importer{};
struct _20d4ddcd6_Kind{};
struct _20d50e06a_Lookup{};
struct _20ec7d61d_CommonFlag{};
struct _223ee6da0_acceptRange;
struct _2240a0ad5_StrBuilder;
struct _22486880e_Range16;
struct _224868d3c_Range32;
struct _2248692e3_RangeTable;
struct _2272689c0_lazyBuff;
struct _223dd0706_DirEntry;
struct _223dd096a_Directory;
struct _223ddac3e_File;
struct _223ddd57c_Status;
struct _2273ba072_cmdAttrs;
struct _22730be5e_Log;
struct _20b037557_floatInfo;
struct _20b038206_decimalSlice;
struct _20b05032d_leftCheat;
struct _20b050d56_decimal;
struct _20b0655eb_Const;
struct _20d3510bb_Token;
struct _20d356885_File;
struct _20d3589a8_kindPair;
struct _20d36492b_lex;
struct _20d3699ec_Ast;
struct _20d36a998_Node;
struct _20d36adb6_Directive;
struct _20d36b999_TypeDecl;
struct _20d36c0a4_IdentTypeDecl;
struct _20d36c3a1_SubIdentTypeDecl;
struct _20d36c747_NamespaceTypeDecl;
struct _20d36ca44_SptrTypeDecl;
struct _20d36cdc9_SlcTypeDecl;
struct _20d36d1c6_TupleTypeDecl;
struct _20d36d4c3_PtrTypeDecl;
struct _20d36dc65_ArrTypeDecl;
struct _20d36e4b3_MapTypeDecl;
struct _20d36e88c_RetTypeDecl;
struct _20d370ccd_Expr;
struct _20d3710ca_RangeExpr;
struct _20d3716a2_UseExpr;
struct _20d37199e_TupleExpr;
struct _20d371d78_LitExpr;
struct _20d372252_UnsafeExpr;
struct _20d372708_IdentExpr;
struct _20d372d8a_UnaryExpr;
struct _20d373264_VariadicExpr;
struct _20d37363d_CastExpr;
struct _20d373a17_NsSelectionExpr;
struct _20d373de1_SubIdentExpr;
struct _20d374397_BinopExpr;
struct _20d374a07_FnCallExpr;
struct _20d3754ec_FieldExprPair;
struct _20d375d27_StructLit;
struct _20d3762cd_BraceLit;
struct _20d376b08_KeyValPair;
struct _20d377301_SliceExpr;
struct _20d377c91_IndexingExpr;
struct _20d378401_SlicingExpr;
struct _20d3786ed_Constraint;
struct _20d378ba4_GenericDecl;
struct _20d37907d_LabelSt;
struct _20d379457_GotoSt;
struct _20d379754_FallSt;
struct _20d379db4_AssignLeft;
struct _20d37a447_AssignSt;
struct _20d37b35a_Stmt;
struct _20d37b9ba_ScopeTree;
struct _20d37c207_ParamDecl;
struct _20d37d659_FnDecl;
struct _20d37e737_VarDecl;
struct _20d37eb11_RetSt;
struct _20d3802a4_Iter;
struct _20d380ace_WhileKind;
struct _20d3814d6_RangeKind;
struct _20d3818b0_BreakSt;
struct _20d381c89_ContSt;
struct _20d382240_If;
struct _20d382619_Else;
struct _20d382ac0_Conditional;
struct _20d38330c_TypeAliasDecl;
struct _20d3837b3_Case;
struct _20d384000_MatchCase;
struct _20d384819_UseDecl;
struct _20d384cc0_EnumItemDecl;
struct _20d385881_EnumDecl;
struct _20d3861ab_TypeEnumItemDecl;
struct _20d38681b_TypeEnumDecl;
struct _20d386ad5_FieldDecl;
struct _20d3874cb_StructDecl;
struct _20d387c18_TraitDecl;
struct _20d388378_Impl;
struct _20d389698_Field;
struct _20d38b678_Operators;
struct _20d38c58b_Struct;
struct _20d38eabb_FieldIns;
struct _20d394609_OperandExprModel;
struct _20d394b04_BinopExprModel;
struct _20d394ecd_UnaryExprModel;
struct _20d39550b_StructArgExprModel;
struct _20d3958a2_StructLitExprModel;
struct _20d395b9e_AllocStructLitExprModel;
struct _20d396232_CastingExprModel;
struct _20d396ad4_FnCallExprModel;
struct _20d396ead_SliceExprModel;
struct _20d397464_IndexingExprModel;
struct _20d39783d_AnonFnExprModel;
struct _20d397c17_KeyValPairExprModel;
struct _20d3981bd_MapExprModel;
struct _20d398751_SlicingExprModel;
struct _20d398cd4_TraitSubIdentExprModel;
struct _20d399675_StructSubIdentExprModel;
struct _20d399b2b_StructStaticIdentExprModel;
struct _20d39a005_ArrayExprModel;
struct _20d39a302_TupleExprModel;
struct _20d39a6cb_BuiltinOutCallExprModel;
struct _20d39aaa5_BuiltinOutlnCallExprModel;
struct _20d39ada2_BuiltinCloneCallExprModel;
struct _20d39b27b_BuiltinNewCallExprModel;
struct _20d39b655_BuiltinPanicCallExprModel;
struct _20d39bb0b_BuiltinAssertCallExprModel;
struct _20d39c0b2_BuiltinMakeCallExprModel;
struct _20d39c48b_BuiltinAppendCallExprModel;
struct _20d39c788_BuiltinLenCallExprModel;
struct _20d39ca85_BuiltinCapCallExprModel;
struct _20d39ce5e_BuiltinDeleteCallExprModel;
struct _20d39d338_BuiltinCopyCallExprModel;
struct _20d39d9a9_BuiltinErrorCallExprModel;
struct _20d39db96_SizeofExprModel;
struct _20d39de3d_AlignofExprModel;
struct _20d39e23a_RuneExprModel;
struct _20d39e537_IntegratedToStrExprModel;
struct _20d39e911_BackendEmitExprModel;
struct _20d39ec0d_FreeExprModel;
struct _20d3a08e0_RetType;
struct _20d3a1171_Param;
struct _20d3a2b45_Fn;
struct _20d3a4a9d_ParamIns;
struct _20d3a5a49_FnIns;
struct _20d3a8be5_ReferenceStack;
struct _20d3aa213_Pass;
struct _20d3aecc8_symbolBuilder;
struct _20d3b5dde_Trait;
struct _20d3b7a6c_EnumItem;
struct _20d3b85d9_Enum;
struct _20d3b971c_TypeEnumItem;
struct _20d3b9ce4_TypeEnum;
struct _20d3bc18c_comptimeRange;
struct _20d3bcbe8_comptimeStructField;
struct _20d3be898_comptimeStructFields;
struct _20d3c0ea4_comptimeStatic;
struct _20d3c2b65_comptimeStatics;
struct _20d3c4260_comptimeEnumField;
struct _20d3c556e_comptimeEnumFields;
struct _20d3c6c02_comptimeParam;
struct _20d3c8e68_comptimeParams;
struct _20d3ca563_comptimeTypeInfos;
struct _20d3cbb5d_comptimeTypeInfo;
struct _20d3d3170_comptimeValue;
struct _20d3d59be_comptimeFiles;
struct _20d3d70b9_comptimeFile;
struct _20d3db233_constraintChecker;
struct _20d3dd268_Impl;
struct _20d3e369c_Scope;
struct _20d3e3aba_If;
struct _20d3e3db7_Else;
struct _20d3e42d5_Conditional;
struct _20d3e45d2_InfIter;
struct _20d3e4a88_WhileIter;
struct _20d3e54d4_RangeIter;
struct _20d3e5869_ContSt;
struct _20d3e5c43_BreakSt;
struct _20d3e6040_Label;
struct _20d3e6419_GotoSt;
struct _20d3e67e3_Postfix;
struct _20d3e6c99_Assign;
struct _20d3e7173_MultiAssign;
struct _20d3e77d3_Match;
struct _20d3e841b_Case;
struct _20d3e8a15_FallSt;
struct _20d3e8d9a_RetSt;
struct _20d3e950a_scopeLabel;
struct _20d3e9a8d_scopeGoto;
struct _20d3ea9a1_scopeChecker;
struct _20d40d651_directiveChecker;
struct _20d414d94_ImportInfo;
struct _20d417cba_Package;
struct _20d4352c1_commonSemaMeta;
struct _20d435de8_Sema;
struct _20d455533_missingRetChecker;
struct _20d457920_IterRelation;
struct _20d458aca_Var;
struct _20d4598de_FuncPattern;
struct _20d06ddd8_typeCompatibilityChecker;
struct _20d070b87_assignTypeChecker;
struct _20d072804_dynamicTypeAnnotation;
struct _20d077661_fnCallArgChecker;
struct _20d07a598_structLitChecker;
struct _20d07c37a_rangeChecker;
struct _20d07eadb_retTypeChecker;
struct _20d081e40_SymbolTable;
struct _20d087165_Data;
struct _20d0882a9_Value;
struct _20d088d59_Eval;
struct _20d4ce25a_unaryEval;
struct _20d4d11e6_binaryEval;
struct _20d4dc8a6_InsGeneric;
struct _20d4dd49a_TypeAlias;
struct _20d4de28c_TypeKind;
struct _20d4e6706_TypeSymbol;
struct _20d4e710d_Prim;
struct _20d4eab39_Sptr;
struct _20d4eb60c_Slc;
struct _20d4ec201_Tuple;
struct _20d4ecca1_Map;
struct _20d4ed92d_Arr;
struct _20d4ee401_Ptr;
struct _20d500402_referencer;
struct _20d5013e2_typeChecker;
struct _20d509076_identTypeLookup;
struct _20de98bad_FileInfo;
struct _20dee071b_stmt;
struct _20dee10ac_scopeParser;
struct _20deed680_exprBuilder;
struct _20e00aadd_assignInfo;
struct _20e00e284_parser;
struct _20e0210ed_typeBuilder;
struct _20d7b9589_CompileInfo;
struct _20d7baa41_directiveEval;
struct _20e025234_JuleImporter;
struct _20e02a448_OrderedDefines;
struct _20e02a6ac_defineOrderer;
struct _20db39d7c_liveTable;
struct _20db70ec3_scopeDeadCode;
struct _20db7522a_exprDeadCode;
struct _20d57491b_SwapExprModel;
struct _20d574ce5_EmptyCompareExprModel;
struct _20d5750e2_RefExprModel;
struct _20d575620_StrCompExprModel;
struct _20d575ba3_MutSlicingExprModel;
struct _20d575ea0_UnsafeBinopExprModel;
struct _20d57629c_UnsafeIndexingExprModel;
struct _20d5766cb_PushToSliceExprModel;
struct _20d576aa5_AppendToSliceExprModel;
struct _20d576da2_InlineStdInternalNosafeStobs;
struct _20d57804b_scopeOptimizer;
struct _20d57e22d_exprOptimizer;
struct _20e02c04e_stdCacheData;
struct _20db7c96e_Optimizer;
struct _20e2383d1_AnsiEscape;
struct _20e239a0e_Logger;
struct _20ebe0508_AbsTime;
struct _20ebe0bce_Time;
struct _20ea1a586_scopeCoder;
struct _20ea2479e_exprCoder;
struct _20ea34d0e_deriveCoder;
struct _20ea368c1_TestCoder;
struct _20ea39561_identCoder;
struct _20ebe86dc_SerializationInfo;
struct _20ebe8cb4_traitHash;
struct _20ebe918d_traitCast;
struct _20ec099ea_customType;
struct _20ec0a600_typeCoder;
struct _20ec133c7_resultCoder;
struct _2249720ee_Flag;
struct _224975960_Flag;
struct _22497915b_Flag;
struct _22497c89b_Flag;
struct _224981097_Flag;
struct _20ec801be_FlagSet;
struct _20ec82b50_argParser;
struct _20ebea2d2_ObjectCoder;
struct _20db6b7d7_ObjectDeadCode;
struct _20e027be8_IR;
struct _20d39066b_StructIns;
struct _2273b5cd7_Cmd;
struct _223ee6da0_acceptRange {
	jule::U8 _field_lo = 0;
	jule::U8 _field_hi = 0;
	

	inline bool operator==(_223ee6da0_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_223ee6da0_acceptRange _other) { return !this->operator==(_other); }


};
struct _2240a0ad5_StrBuilder {
	jule::Slice<jule::U8> _field_buf;
	


};
struct _22486880e_Range16 {
	jule::U16 _field_Lo = 0;
	jule::U16 _field_Hi = 0;
	jule::U16 _field_Stride = 0;
	

	inline bool operator==(_22486880e_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_22486880e_Range16 _other) { return !this->operator==(_other); }


};
struct _224868d3c_Range32 {
	jule::U32 _field_Lo = 0;
	jule::U32 _field_Hi = 0;
	jule::U32 _field_Stride = 0;
	

	inline bool operator==(_224868d3c_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_224868d3c_Range32 _other) { return !this->operator==(_other); }


};
struct _2248692e3_RangeTable {
	jule::Slice<_22486880e_Range16> _field_R16;
	jule::Slice<_224868d3c_Range32> _field_R32;
	jule::I64 _field_LatinOffset = 0;
	


};
struct _2272689c0_lazyBuff {
	jule::Slice<jule::U8> _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I64 _field_w = 0;
	jule::Str _field_volAndPath;
	jule::I64 _field_volLen = 0;
	


};
struct _223dd0706_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_223ddd57c_Status> _field_Stat;
	

	inline bool operator==(_223dd0706_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_223dd0706_DirEntry _other) { return !this->operator==(_other); }


};
struct _223dd096a_Directory {
	

	inline bool operator==(_223dd096a_Directory _other) { return true; }

	inline bool operator!=(_223dd096a_Directory _other) { return !this->operator==(_other); }


};
struct _223ddac3e_File {
	jule::Uintptr _field_handle = 0;
	

	inline bool operator==(_223ddac3e_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_223ddac3e_File _other) { return !this->operator==(_other); }


};
struct _223ddd57c_Status {
	jule::I64 _field_mode = 0LL;
	jule::U64 _field_size = 0;
	

	inline bool operator==(_223ddd57c_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_223ddd57c_Status _other) { return !this->operator==(_other); }


};
struct _2273ba072_cmdAttrs {
	HANDLE _field_hProcess = nullptr;
	HANDLE _field_hThread = nullptr;
	

	inline bool operator==(_2273ba072_cmdAttrs _other) {
		return 
			this->_field_hProcess == _other._field_hProcess &&
			this->_field_hThread == _other._field_hThread;
	}

	inline bool operator!=(_2273ba072_cmdAttrs _other) { return !this->operator==(_other); }


};
struct _22730be5e_Log {
	jule::I64 _field_Kind = 0LL;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

	inline bool operator==(_22730be5e_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_22730be5e_Log _other) { return !this->operator==(_other); }


};
struct _20b037557_floatInfo {
	jule::U64 _field_mantbits = 0;
	jule::U64 _field_expbits = 0;
	jule::I64 _field_bias = 0;
	

	inline bool operator==(_20b037557_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_20b037557_floatInfo _other) { return !this->operator==(_other); }


};
struct _20b038206_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	


};
struct _20b05032d_leftCheat {
	jule::I64 _field_delta = 0;
	jule::Str _field_cutoff;
	

	inline bool operator==(_20b05032d_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_20b05032d_leftCheat _other) { return !this->operator==(_other); }


};
struct _20b050d56_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>(0);
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	jule::Bool _field_trunc = false;
	

	inline bool operator==(_20b050d56_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_20b050d56_decimal _other) { return !this->operator==(_other); }


};
inline jule::Bool _20b06b1a1_Eq(_20b0655eb_Const*, _20b0655eb_Const);
inline jule::Bool _20b06b4e2_Lt(_20b0655eb_Const*, _20b0655eb_Const);
inline jule::Bool _20b06b833_LtEq(_20b0655eb_Const*, _20b0655eb_Const);
inline jule::Bool _20b06bb74_Gt(_20b0655eb_Const*, _20b0655eb_Const);
inline jule::Bool _20b06beb5_GtEq(_20b0655eb_Const*, _20b0655eb_Const);
struct _20b0655eb_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

	inline jule::Bool operator==(_20b0655eb_Const _other) { return _20b06b1a1_Eq(this, _other); }

	inline bool operator!=(_20b0655eb_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_20b0655eb_Const _other) { return _20b06bb74_Gt(this, _other); }

	inline jule::Bool operator>=(_20b0655eb_Const _other) { return _20b06beb5_GtEq(this, _other); }

	inline jule::Bool operator<(_20b0655eb_Const _other) { return _20b06b4e2_Lt(this, _other); }

	inline jule::Bool operator<=(_20b0655eb_Const _other) { return _20b06b833_LtEq(this, _other); }


};
struct _20d3510bb_Token {
	jule::Ptr<_20d356885_File> _field_File;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Kind;
	jule::U64 _field_Id = 0LLU;
	

	inline bool operator==(_20d3510bb_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_20d3510bb_Token _other) { return !this->operator==(_other); }


};
struct _20d356885_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _field_Tokens;
	


};
struct _20d3589a8_kindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U64 _field_id = 0LLU;
	

	inline bool operator==(_20d3589a8_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_20d3589a8_kindPair _other) { return !this->operator==(_other); }


};
struct _20d36492b_lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _field_tokens;
	jule::Ptr<_20d356885_File> _field_file;
	jule::I64 _field_pos = 0;
	jule::I64 _field_column = 0;
	jule::I64 _field_row = 0;
	jule::Slice<_22730be5e_Log> _field_errors;
	


};
struct _20d3699ec_Ast {
	jule::Ptr<_20d356885_File> _field_File;
	jule::Slice<jule::Ptr<_20d36adb6_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_20d384819_UseDecl>> _field_UseDecls;
	jule::Slice<_20d36a998_Node> _field_Nodes;
	


};
struct _20d36a998_Node {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_20d36a998_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_20d36a998_Node _other) { return !this->operator==(_other); }


};
struct _20d36adb6_Directive {
	jule::Ptr<_20d3510bb_Token> _field_Tag;
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _field_Args;
	


};
struct _20d36b999_TypeDecl {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_20d36b999_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_20d36b999_TypeDecl _other) { return !this->operator==(_other); }


};
struct _20d36c0a4_IdentTypeDecl {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_20d36b999_TypeDecl>> _field_Generics;
	


};
struct _20d36c3a1_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_20d36c0a4_IdentTypeDecl>> _field_Idents;
	


};
struct _20d36c747_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _field_Idents;
	jule::Ptr<_20d36b999_TypeDecl> _field_Kind;
	


};
struct _20d36ca44_SptrTypeDecl {
	jule::Ptr<_20d36b999_TypeDecl> _field_Elem;
	

	inline bool operator==(_20d36ca44_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_20d36ca44_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _20d36cdc9_SlcTypeDecl {
	jule::Ptr<_20d36b999_TypeDecl> _field_Elem;
	

	inline bool operator==(_20d36cdc9_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_20d36cdc9_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _20d36d1c6_TupleTypeDecl {
	jule::Slice<jule::Ptr<_20d36b999_TypeDecl>> _field_Types;
	


};
struct _20d36d4c3_PtrTypeDecl {
	jule::Ptr<_20d36b999_TypeDecl> _field_Elem;
	

	inline bool operator==(_20d36d4c3_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_20d36d4c3_PtrTypeDecl _other) { return !this->operator==(_other); }


};
struct _20d36dc65_ArrTypeDecl {
	jule::Ptr<_20d36b999_TypeDecl> _field_Elem;
	jule::Ptr<_20d370ccd_Expr> _field_Size;
	

	inline bool operator==(_20d36dc65_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_20d36dc65_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _20d36e4b3_MapTypeDecl {
	jule::Ptr<_20d36b999_TypeDecl> _field_Key;
	jule::Ptr<_20d36b999_TypeDecl> _field_Val;
	

	inline bool operator==(_20d36e4b3_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_20d36e4b3_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _20d36e88c_RetTypeDecl {
	jule::Ptr<_20d36b999_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _field_Idents;
	


};
struct _20d370ccd_Expr {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Ptr<_20d3510bb_Token> _field_End;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_20d370ccd_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_20d370ccd_Expr _other) { return !this->operator==(_other); }


};
struct _20d3710ca_RangeExpr {
	jule::Ptr<_20d370ccd_Expr> _field_Expr;
	

	inline bool operator==(_20d3710ca_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20d3710ca_RangeExpr _other) { return !this->operator==(_other); }


};
struct _20d3716a2_UseExpr {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Ptr<_20d370ccd_Expr> _field_Expr;
	

	inline bool operator==(_20d3716a2_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20d3716a2_UseExpr _other) { return !this->operator==(_other); }


};
struct _20d37199e_TupleExpr {
	jule::Slice<jule::Ptr<_20d370ccd_Expr>> _field_Expr;
	


};
struct _20d371d78_LitExpr {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Str _field_Value;
	

	inline bool operator==(_20d371d78_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_20d371d78_LitExpr _other) { return !this->operator==(_other); }


};
struct _20d372252_UnsafeExpr {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Ptr<_20d370ccd_Expr> _field_Expr;
	

	inline bool operator==(_20d372252_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20d372252_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _20d372708_IdentExpr {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	

	inline bool operator==(_20d372708_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Binded == _other._field_Binded;
	}

	inline bool operator!=(_20d372708_IdentExpr _other) { return !this->operator==(_other); }


};
struct _20d372d8a_UnaryExpr {
	jule::Ptr<_20d3510bb_Token> _field_Op;
	jule::Ptr<_20d370ccd_Expr> _field_Expr;
	

	inline bool operator==(_20d372d8a_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20d372d8a_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _20d373264_VariadicExpr {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Ptr<_20d370ccd_Expr> _field_Expr;
	

	inline bool operator==(_20d373264_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20d373264_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _20d37363d_CastExpr {
	jule::Ptr<_20d36b999_TypeDecl> _field_Kind;
	jule::Ptr<_20d370ccd_Expr> _field_Expr;
	

	inline bool operator==(_20d37363d_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20d37363d_CastExpr _other) { return !this->operator==(_other); }


};
struct _20d373a17_NsSelectionExpr {
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _field_Ns;
	jule::Ptr<_20d3510bb_Token> _field_Ident;
	


};
struct _20d373de1_SubIdentExpr {
	jule::Ptr<_20d370ccd_Expr> _field_Expr;
	jule::Ptr<_20d3510bb_Token> _field_Ident;
	

	inline bool operator==(_20d373de1_SubIdentExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_20d373de1_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _20d374397_BinopExpr {
	jule::Ptr<_20d370ccd_Expr> _field_Left;
	jule::Ptr<_20d370ccd_Expr> _field_Right;
	jule::Ptr<_20d3510bb_Token> _field_Op;
	

	inline bool operator==(_20d374397_BinopExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_20d374397_BinopExpr _other) { return !this->operator==(_other); }


};
struct _20d374a07_FnCallExpr {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Ptr<_20d370ccd_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_20d370ccd_Expr>> _field_Args;
	jule::Ptr<_20d37b9ba_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo = false;
	


};
struct _20d3754ec_FieldExprPair {
	jule::Ptr<_20d3510bb_Token> _field_Field;
	jule::Ptr<_20d370ccd_Expr> _field_Expr;
	

	inline bool operator==(_20d3754ec_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20d3754ec_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _20d375d27_StructLit {
	jule::Ptr<_20d3510bb_Token> _field_End;
	jule::Ptr<_20d36b999_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_20d370ccd_Expr>> _field_Exprs;
	


};
struct _20d3762cd_BraceLit {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Ptr<_20d3510bb_Token> _field_End;
	jule::Slice<jule::Ptr<_20d370ccd_Expr>> _field_Exprs;
	


};
struct _20d376b08_KeyValPair {
	jule::Ptr<_20d370ccd_Expr> _field_Key;
	jule::Ptr<_20d370ccd_Expr> _field_Val;
	jule::Ptr<_20d3510bb_Token> _field_Colon;
	

	inline bool operator==(_20d376b08_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_20d376b08_KeyValPair _other) { return !this->operator==(_other); }


};
struct _20d377301_SliceExpr {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Ptr<_20d3510bb_Token> _field_End;
	jule::Slice<jule::Ptr<_20d370ccd_Expr>> _field_Exprs;
	


};
struct _20d377c91_IndexingExpr {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Ptr<_20d3510bb_Token> _field_End;
	jule::Ptr<_20d370ccd_Expr> _field_Expr;
	jule::Ptr<_20d370ccd_Expr> _field_Index;
	

	inline bool operator==(_20d377c91_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_20d377c91_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _20d378401_SlicingExpr {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Ptr<_20d3510bb_Token> _field_End;
	jule::Ptr<_20d370ccd_Expr> _field_Expr;
	jule::Ptr<_20d370ccd_Expr> _field_Start;
	jule::Ptr<_20d370ccd_Expr> _field_To;
	

	inline bool operator==(_20d378401_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_20d378401_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _20d3786ed_Constraint {
	jule::Slice<jule::Ptr<_20d36b999_TypeDecl>> _field_Mask;
	


};
struct _20d378ba4_GenericDecl {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_20d3786ed_Constraint> _field_Constraint;
	

	inline bool operator==(_20d378ba4_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_20d378ba4_GenericDecl _other) { return !this->operator==(_other); }


};
struct _20d37907d_LabelSt {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Str _field_Ident;
	

	inline bool operator==(_20d37907d_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_20d37907d_LabelSt _other) { return !this->operator==(_other); }


};
struct _20d379457_GotoSt {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Ptr<_20d3510bb_Token> _field_Label;
	

	inline bool operator==(_20d379457_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_20d379457_GotoSt _other) { return !this->operator==(_other); }


};
struct _20d379754_FallSt {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	

	inline bool operator==(_20d379754_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_20d379754_FallSt _other) { return !this->operator==(_other); }


};
struct _20d379db4_AssignLeft {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Str _field_Ident;
	jule::Ptr<_20d370ccd_Expr> _field_Expr;
	

	inline bool operator==(_20d379db4_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20d379db4_AssignLeft _other) { return !this->operator==(_other); }


};
struct _20d37a447_AssignSt {
	jule::Bool _field_Declarative = false;
	jule::Ptr<_20d3510bb_Token> _field_Setter;
	jule::Slice<jule::Ptr<_20d379db4_AssignLeft>> _field_Left;
	jule::Ptr<_20d370ccd_Expr> _field_Right;
	


};
struct _20d37b35a_Stmt {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_20d37b35a_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_20d37b35a_Stmt _other) { return !this->operator==(_other); }


};
struct _20d37b9ba_ScopeTree {
	jule::Ptr<_20d37b9ba_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<_20d37b35a_Stmt> _field_Stmts;
	jule::Ptr<_20d3510bb_Token> _field_End;
	


};
struct _20d37c207_ParamDecl {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_20d36b999_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_20d37c207_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_20d37c207_ParamDecl _other) { return !this->operator==(_other); }


};
struct _20d37d659_FnDecl {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_20d36adb6_Directive>> _field_Directives;
	jule::Ptr<_20d37b9ba_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_20d378ba4_GenericDecl>> _field_Generics;
	jule::Ptr<_20d36e88c_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_20d37c207_ParamDecl>> _field_Params;
	


};
struct _20d37e737_VarDecl {
	jule::Ptr<_20d37b9ba_ScopeTree> _field_Scope;
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Slice<jule::Ptr<_20d36adb6_Directive>> _field_Directives;
	jule::Ptr<_20d36b999_TypeDecl> _field_Kind;
	jule::Ptr<_20d370ccd_Expr> _field_Expr;
	


};
struct _20d37eb11_RetSt {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Ptr<_20d370ccd_Expr> _field_Expr;
	

	inline bool operator==(_20d37eb11_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20d37eb11_RetSt _other) { return !this->operator==(_other); }


};
struct _20d3802a4_Iter {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	jule::Ptr<_20d37b9ba_ScopeTree> _field_Scope;
	

	inline bool operator==(_20d3802a4_Iter _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_20d3802a4_Iter _other) { return !this->operator==(_other); }


};
struct _20d380ace_WhileKind {
	jule::Ptr<_20d370ccd_Expr> _field_Expr;
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_20d3510bb_Token> _field_NextToken;
	

	inline bool operator==(_20d380ace_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_20d380ace_WhileKind _other) { return !this->operator==(_other); }


};
struct _20d3814d6_RangeKind {
	jule::Ptr<_20d3510bb_Token> _field_InToken;
	jule::Ptr<_20d370ccd_Expr> _field_Expr;
	jule::Ptr<_20d37e737_VarDecl> _field_KeyA;
	jule::Ptr<_20d37e737_VarDecl> _field_KeyB;
	

	inline bool operator==(_20d3814d6_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_20d3814d6_RangeKind _other) { return !this->operator==(_other); }


};
struct _20d3818b0_BreakSt {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Ptr<_20d3510bb_Token> _field_Label;
	

	inline bool operator==(_20d3818b0_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_20d3818b0_BreakSt _other) { return !this->operator==(_other); }


};
struct _20d381c89_ContSt {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Ptr<_20d3510bb_Token> _field_Label;
	

	inline bool operator==(_20d381c89_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_20d381c89_ContSt _other) { return !this->operator==(_other); }


};
struct _20d382240_If {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Ptr<_20d370ccd_Expr> _field_Expr;
	jule::Ptr<_20d37b9ba_ScopeTree> _field_Scope;
	

	inline bool operator==(_20d382240_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_20d382240_If _other) { return !this->operator==(_other); }


};
struct _20d382619_Else {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Ptr<_20d37b9ba_ScopeTree> _field_Scope;
	

	inline bool operator==(_20d382619_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_20d382619_Else _other) { return !this->operator==(_other); }


};
struct _20d382ac0_Conditional {
	jule::Ptr<_20d382240_If> _field_Head;
	jule::Slice<jule::Ptr<_20d382240_If>> _field_Tail;
	jule::Ptr<_20d382619_Else> _field_Default;
	


};
struct _20d38330c_TypeAliasDecl {
	jule::Ptr<_20d37b9ba_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_20d36b999_TypeDecl> _field_Kind;
	

	inline bool operator==(_20d38330c_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_Binded == _other._field_Binded &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_20d38330c_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _20d3837b3_Case {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Ptr<_20d37b9ba_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_20d370ccd_Expr>> _field_Exprs;
	


};
struct _20d384000_MatchCase {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Ptr<_20d3510bb_Token> _field_End;
	jule::Bool _field_TypeMatch = false;
	jule::Ptr<_20d370ccd_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_20d3837b3_Case>> _field_Cases;
	jule::Ptr<_20d382619_Else> _field_Default;
	


};
struct _20d384819_UseDecl {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full = false;
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _field_Selected;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	


};
struct _20d384cc0_EnumItemDecl {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_20d370ccd_Expr> _field_Expr;
	

	inline bool operator==(_20d384cc0_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20d384cc0_EnumItemDecl _other) { return !this->operator==(_other); }


};
struct _20d385881_EnumDecl {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_20d36b999_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_20d384cc0_EnumItemDecl>> _field_Items;
	jule::Ptr<_20d3510bb_Token> _field_End;
	


};
struct _20d3861ab_TypeEnumItemDecl {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_20d36b999_TypeDecl> _field_Kind;
	

	inline bool operator==(_20d3861ab_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_20d3861ab_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _20d38681b_TypeEnumDecl {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_20d3861ab_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_20d3510bb_Token> _field_End;
	


};
struct _20d386ad5_FieldDecl {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_20d36b999_TypeDecl> _field_Kind;
	jule::Ptr<_20d370ccd_Expr> _field_Default;
	

	inline bool operator==(_20d386ad5_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_20d386ad5_FieldDecl _other) { return !this->operator==(_other); }


};
struct _20d3874cb_StructDecl {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Ptr<_20d3510bb_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_20d386ad5_FieldDecl>> _field_Fields;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_20d36adb6_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_20d378ba4_GenericDecl>> _field_Generics;
	


};
struct _20d387c18_TraitDecl {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Ptr<_20d3510bb_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_20d36b999_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_20d37d659_FnDecl>> _field_Methods;
	


};
struct _20d388378_Impl {
	jule::Ptr<_20d3510bb_Token> _field_End;
	jule::Ptr<_20d36b999_TypeDecl> _field_Base;
	jule::Ptr<_20d36b999_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_20d37d659_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_20d37e737_VarDecl>> _field_Statics;
	


};
struct _20d389698_Field {
	jule::Ptr<_20d38c58b_Struct> _field_Owner;
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_20d4e6706_TypeSymbol> _field_Kind;
	jule::Ptr<_20d370ccd_Expr> _field_Default;
	

	inline bool operator==(_20d389698_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_20d389698_Field _other) { return !this->operator==(_other); }


};
struct _20d38b678_Operators {
	jule::Ptr<_20d3a5a49_FnIns> _field_Eq;
	jule::Ptr<_20d3a5a49_FnIns> _field_Gt;
	jule::Ptr<_20d3a5a49_FnIns> _field_GtEq;
	jule::Ptr<_20d3a5a49_FnIns> _field_Lt;
	jule::Ptr<_20d3a5a49_FnIns> _field_LtEq;
	jule::Ptr<_20d3a5a49_FnIns> _field_Shl;
	jule::Ptr<_20d3a5a49_FnIns> _field_Shr;
	jule::Ptr<_20d3a5a49_FnIns> _field_Add;
	jule::Ptr<_20d3a5a49_FnIns> _field_Sub;
	jule::Ptr<_20d3a5a49_FnIns> _field_Div;
	jule::Ptr<_20d3a5a49_FnIns> _field_Mul;
	jule::Ptr<_20d3a5a49_FnIns> _field_Mod;
	jule::Ptr<_20d3a5a49_FnIns> _field_BitAnd;
	jule::Ptr<_20d3a5a49_FnIns> _field_BitOr;
	jule::Ptr<_20d3a5a49_FnIns> _field_BitXor;
	jule::Ptr<_20d3a5a49_FnIns> _field_Neg;
	jule::Ptr<_20d3a5a49_FnIns> _field_Pos;
	jule::Ptr<_20d3a5a49_FnIns> _field_BitNot;
	jule::Ptr<_20d3a5a49_FnIns> _field_AddAssign;
	jule::Ptr<_20d3a5a49_FnIns> _field_SubAssign;
	jule::Ptr<_20d3a5a49_FnIns> _field_DivAssign;
	jule::Ptr<_20d3a5a49_FnIns> _field_MulAssign;
	jule::Ptr<_20d3a5a49_FnIns> _field_ModAssign;
	jule::Ptr<_20d3a5a49_FnIns> _field_ShlAssign;
	jule::Ptr<_20d3a5a49_FnIns> _field_ShrAssign;
	jule::Ptr<_20d3a5a49_FnIns> _field_BitOrAssign;
	jule::Ptr<_20d3a5a49_FnIns> _field_BitAndAssign;
	jule::Ptr<_20d3a5a49_FnIns> _field_BitXorAssign;
	

	inline bool operator==(_20d38b678_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_20d38b678_Operators _other) { return !this->operator==(_other); }


};
struct _20d38c58b_Struct {
	jule::Ptr<_20d435de8_Sema> _field_sema;
	jule::Slice<jule::Ptr<_20d38c58b_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_20d38c58b_Struct>> _field_Uses;
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_20d389698_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_20d3a2b45_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_20d458aca_Var>> _field_Statics;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_20d36adb6_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_20d378ba4_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_20d3b5dde_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_20d39066b_StructIns>> _field_Instances;
	


};
struct _20d38eabb_FieldIns {
	jule::Ptr<_20d389698_Field> _field_Decl;
	jule::Ptr<_20d4de28c_TypeKind> _field_Kind;
	jule::Ptr<_20d087165_Data> _field_Default;
	

	inline bool operator==(_20d38eabb_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_20d38eabb_FieldIns _other) { return !this->operator==(_other); }


};
struct _20d394609_OperandExprModel {
	jule::Ptr<_20d4de28c_TypeKind> _field_Kind;
	jule::Any _field_Model = jule::Any(nullptr);
	

	inline bool operator==(_20d394609_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_20d394609_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _20d394b04_BinopExprModel {
	jule::Ptr<_20d394609_OperandExprModel> _field_Left;
	jule::Ptr<_20d394609_OperandExprModel> _field_Right;
	jule::Ptr<_20d3510bb_Token> _field_Op;
	

	inline bool operator==(_20d394b04_BinopExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_20d394b04_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _20d394ecd_UnaryExprModel {
	jule::Ptr<_20d087165_Data> _field_Expr;
	jule::Ptr<_20d3510bb_Token> _field_Op;
	

	inline bool operator==(_20d394ecd_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_20d394ecd_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _20d39550b_StructArgExprModel {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Ptr<_20d38eabb_FieldIns> _field_Field;
	jule::Ptr<_20d087165_Data> _field_Expr;
	

	inline bool operator==(_20d39550b_StructArgExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20d39550b_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _20d3958a2_StructLitExprModel {
	jule::Ptr<_20d39066b_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_20d39550b_StructArgExprModel>> _field_Args;
	


};
struct _20d395b9e_AllocStructLitExprModel {
	jule::Ptr<_20d3958a2_StructLitExprModel> _field_Lit;
	

	inline bool operator==(_20d395b9e_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_20d395b9e_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _20d396232_CastingExprModel {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_20d4de28c_TypeKind> _field_Kind;
	jule::Ptr<_20d4de28c_TypeKind> _field_ExprKind;
	

	inline bool operator==(_20d396232_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_20d396232_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _20d396ad4_FnCallExprModel {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Ptr<_20d3a5a49_FnIns> _field_Func;
	jule::Bool _field_IsCo = false;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_20d3e369c_Scope> _field_Except;
	jule::Bool _field_Assigned = false;
	


};
struct _20d396ead_SliceExprModel {
	jule::Ptr<_20d4de28c_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _20d397464_IndexingExprModel {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Ptr<_20d087165_Data> _field_Expr;
	jule::Ptr<_20d087165_Data> _field_Index;
	

	inline bool operator==(_20d397464_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_20d397464_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _20d39783d_AnonFnExprModel {
	jule::Ptr<_20d3a5a49_FnIns> _field_Func;
	jule::Bool _field_Global = false;
	

	inline bool operator==(_20d39783d_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_20d39783d_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _20d397c17_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any(nullptr);
	jule::Any _field_Val = jule::Any(nullptr);
	

	inline bool operator==(_20d397c17_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_20d397c17_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _20d3981bd_MapExprModel {
	jule::Ptr<_20d4de28c_TypeKind> _field_KeyKind;
	jule::Ptr<_20d4de28c_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_20d397c17_KeyValPairExprModel>> _field_Entries;
	


};
struct _20d398751_SlicingExprModel {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_20d398751_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_20d398751_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _20d398cd4_TraitSubIdentExprModel {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_20d3a2b45_Fn> _field_Method;
	jule::Ptr<_20d3b5dde_Trait> _field_Trt;
	

	inline bool operator==(_20d398cd4_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_20d398cd4_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _20d399675_StructSubIdentExprModel {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Ptr<_20d087165_Data> _field_Expr;
	jule::Ptr<_20d3a5a49_FnIns> _field_Method;
	jule::Ptr<_20d38eabb_FieldIns> _field_Field;
	jule::Ptr<_20d39066b_StructIns> _field_Owner;
	

	inline bool operator==(_20d399675_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_20d399675_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _20d399b2b_StructStaticIdentExprModel {
	jule::Ptr<_20d39066b_StructIns> _field_Structure;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_20d3a5a49_FnIns> _field_Method;
	

	inline bool operator==(_20d399b2b_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_20d399b2b_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _20d39a005_ArrayExprModel {
	jule::Ptr<_20d4ed92d_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _20d39a302_TupleExprModel {
	jule::Slice<jule::Ptr<_20d087165_Data>> _field_Datas;
	


};
struct _20d39a6cb_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_20d39a6cb_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_20d39a6cb_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _20d39aaa5_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_20d39aaa5_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_20d39aaa5_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _20d39ada2_BuiltinCloneCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_20d39ada2_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20d39ada2_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _20d39b27b_BuiltinNewCallExprModel {
	jule::Ptr<_20d4de28c_TypeKind> _field_Kind;
	jule::Any _field_Init = jule::Any(nullptr);
	

	inline bool operator==(_20d39b27b_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_20d39b27b_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _20d39b655_BuiltinPanicCallExprModel {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_20d39b655_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20d39b655_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _20d39bb0b_BuiltinAssertCallExprModel {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Log;
	

	inline bool operator==(_20d39bb0b_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_20d39bb0b_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _20d39c0b2_BuiltinMakeCallExprModel {
	jule::Ptr<_20d4de28c_TypeKind> _field_Kind;
	jule::Any _field_Len = jule::Any(nullptr);
	jule::Any _field_Cap = jule::Any(nullptr);
	

	inline bool operator==(_20d39c0b2_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_20d39c0b2_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _20d39c48b_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Elements = jule::Any(nullptr);
	

	inline bool operator==(_20d39c48b_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_20d39c48b_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _20d39c788_BuiltinLenCallExprModel {
	jule::Ptr<_20d087165_Data> _field_Expr;
	

	inline bool operator==(_20d39c788_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20d39c788_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _20d39ca85_BuiltinCapCallExprModel {
	jule::Ptr<_20d087165_Data> _field_Expr;
	

	inline bool operator==(_20d39ca85_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20d39ca85_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _20d39ce5e_BuiltinDeleteCallExprModel {
	jule::Ptr<_20d087165_Data> _field_Dest;
	jule::Ptr<_20d087165_Data> _field_Key;
	

	inline bool operator==(_20d39ce5e_BuiltinDeleteCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Key == _other._field_Key;
	}

	inline bool operator!=(_20d39ce5e_BuiltinDeleteCallExprModel _other) { return !this->operator==(_other); }


};
struct _20d39d338_BuiltinCopyCallExprModel {
	jule::Ptr<_20d087165_Data> _field_Dest;
	jule::Ptr<_20d087165_Data> _field_Src;
	

	inline bool operator==(_20d39d338_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_20d39d338_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _20d39d9a9_BuiltinErrorCallExprModel {
	jule::Ptr<_20d3a5a49_FnIns> _field_Func;
	jule::Ptr<_20d087165_Data> _field_Err;
	

	inline bool operator==(_20d39d9a9_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_20d39d9a9_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _20d39db96_SizeofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_20d39db96_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20d39db96_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _20d39de3d_AlignofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_20d39de3d_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20d39de3d_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _20d39e23a_RuneExprModel {
	jule::I32 _field_Code = 0;
	

	inline bool operator==(_20d39e23a_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_20d39e23a_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _20d39e537_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_20d39e537_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20d39e537_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _20d39e911_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	


};
struct _20d39ec0d_FreeExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_20d39ec0d_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20d39ec0d_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _20d3a08e0_RetType {
	jule::Ptr<_20d4e6706_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _field_Idents;
	


};
struct _20d3a1171_Param {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_20d4e6706_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_20d3a1171_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_20d3a1171_Param _other) { return !this->operator==(_other); }


};
struct _20d3a2b45_Fn {
	jule::Ptr<_20d435de8_Sema> _field_sema;
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_20d36adb6_Directive>> _field_Directives;
	jule::Ptr<_20d37b9ba_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_20d378ba4_GenericDecl>> _field_Generics;
	jule::Ptr<_20d3a08e0_RetType> _field_Result;
	jule::Slice<jule::Ptr<_20d3a1171_Param>> _field_Params;
	jule::Ptr<_20d38c58b_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_20d3a5a49_FnIns>> _field_Instances;
	


};
struct _20d3a4a9d_ParamIns {
	jule::Ptr<_20d3a1171_Param> _field_Decl;
	jule::Ptr<_20d4de28c_TypeKind> _field_Kind;
	

	inline bool operator==(_20d3a4a9d_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_20d3a4a9d_ParamIns _other) { return !this->operator==(_other); }


};
struct _20d3a5a49_FnIns {
	jule::Ptr<_20d39066b_StructIns> _field_Owner;
	jule::Ptr<_20d3a2b45_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_20d4dc8a6_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_20d3a4a9d_ParamIns>> _field_Params;
	jule::Ptr<_20d4de28c_TypeKind> _field_Result;
	jule::Ptr<_20d3e369c_Scope> _field_Scope;
	jule::Ptr<_20d3a8be5_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon = false;
	jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)> _field_caller;
	jule::Bool _field_reloaded = false;
	


};
struct _20d3a8be5_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	


};
struct _20d3aa213_Pass {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Str _field_Text;
	

	inline bool operator==(_20d3aa213_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_20d3aa213_Pass _other) { return !this->operator==(_other); }


};
struct _20d3aecc8_symbolBuilder {
	jule::Ptr<_20d3aecc8_symbolBuilder> _field_owner;
	jule::Trait<_20d411e7e_Importer> _field_importer;
	jule::Slice<_22730be5e_Log> _field_errors;
	jule::Ptr<_20d3699ec_Ast> _field_ast;
	jule::Ptr<_20d081e40_SymbolTable> _field_table;
	


};
struct _20d3b5dde_Trait {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_20d4e6706_TypeSymbol>> _field_Inherits;
	jule::Slice<jule::Ptr<_20d3a2b45_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_20d38c58b_Struct>> _field_Implemented;
	


};
struct _20d3b7a6c_EnumItem {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_20d0882a9_Value> _field_Value;
	

	inline bool operator==(_20d3b7a6c_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_20d3b7a6c_EnumItem _other) { return !this->operator==(_other); }


};
struct _20d3b85d9_Enum {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_20d4e6706_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_20d3b7a6c_EnumItem>> _field_Items;
	


};
struct _20d3b971c_TypeEnumItem {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_20d4e6706_TypeSymbol> _field_Kind;
	

	inline bool operator==(_20d3b971c_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_20d3b971c_TypeEnumItem _other) { return !this->operator==(_other); }


};
struct _20d3b9ce4_TypeEnum {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_20d3b971c_TypeEnumItem>> _field_Items;
	


};
struct _20d3bc18c_comptimeRange {
	jule::Trait<_20d3bbea0_comptimeRangeKind> _field_kind;
	

	inline bool operator==(_20d3bc18c_comptimeRange _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_20d3bc18c_comptimeRange _other) { return !this->operator==(_other); }


};
struct _20d3bcbe8_comptimeStructField {
	jule::Ptr<_20d38eabb_FieldIns> _field_field;
	

	inline bool operator==(_20d3bcbe8_comptimeStructField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_20d3bcbe8_comptimeStructField _other) { return !this->operator==(_other); }


};
struct _20d3be898_comptimeStructFields {
	jule::Slice<jule::Ptr<_20d38eabb_FieldIns>> _field_fields;
	


};
struct _20d3c0ea4_comptimeStatic {
	jule::Ptr<_20d458aca_Var> _field_field;
	

	inline bool operator==(_20d3c0ea4_comptimeStatic _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_20d3c0ea4_comptimeStatic _other) { return !this->operator==(_other); }


};
struct _20d3c2b65_comptimeStatics {
	jule::Slice<jule::Ptr<_20d458aca_Var>> _field_fields;
	


};
struct _20d3c4260_comptimeEnumField {
	jule::Ptr<_20d3b7a6c_EnumItem> _field_field;
	

	inline bool operator==(_20d3c4260_comptimeEnumField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_20d3c4260_comptimeEnumField _other) { return !this->operator==(_other); }


};
struct _20d3c556e_comptimeEnumFields {
	jule::Slice<jule::Ptr<_20d3b7a6c_EnumItem>> _field_fields;
	


};
struct _20d3c6c02_comptimeParam {
	jule::Ptr<_20d3a4a9d_ParamIns> _field_param;
	

	inline bool operator==(_20d3c6c02_comptimeParam _other) {
		return 
			this->_field_param == _other._field_param;
	}

	inline bool operator!=(_20d3c6c02_comptimeParam _other) { return !this->operator==(_other); }


};
struct _20d3c8e68_comptimeParams {
	jule::Slice<jule::Ptr<_20d3a4a9d_ParamIns>> _field_params;
	


};
struct _20d3ca563_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_20d3cbb5d_comptimeTypeInfo>> _field_types;
	


};
struct _20d3cbb5d_comptimeTypeInfo {
	jule::Ptr<_20d4de28c_TypeKind> _field_base;
	

	inline bool operator==(_20d3cbb5d_comptimeTypeInfo _other) {
		return 
			this->_field_base == _other._field_base;
	}

	inline bool operator!=(_20d3cbb5d_comptimeTypeInfo _other) { return !this->operator==(_other); }


};
struct _20d3d3170_comptimeValue {
	jule::Ptr<_20d087165_Data> _field_data;
	

	inline bool operator==(_20d3d3170_comptimeValue _other) {
		return 
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_20d3d3170_comptimeValue _other) { return !this->operator==(_other); }


};
struct _20d3d59be_comptimeFiles {
	jule::Slice<jule::Ptr<_20d081e40_SymbolTable>> _field_files;
	


};
struct _20d3d70b9_comptimeFile {
	jule::Ptr<_20d081e40_SymbolTable> _field_file;
	

	inline bool operator==(_20d3d70b9_comptimeFile _other) {
		return 
			this->_field_file == _other._field_file;
	}

	inline bool operator!=(_20d3d70b9_comptimeFile _other) { return !this->operator==(_other); }


};
struct _20d3db233_constraintChecker {
	jule::Ptr<_20d435de8_Sema> _field_s;
	jule::Slice<jule::Ptr<_20d378ba4_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_20d4dc8a6_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_20d4dd49a_TypeAlias>> _field_genericsA;
	jule::Ptr<_20d3a5a49_FnIns> _field_fi;
	jule::Ptr<_20d39066b_StructIns> _field_si;
	jule::Ptr<_20d3510bb_Token> _field_et;
	jule::Bool _field_uniq = false;
	


};
struct _20d3dd268_Impl {
	jule::Ptr<_20d36b999_TypeDecl> _field_Base;
	jule::Ptr<_20d36b999_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_20d3a2b45_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_20d458aca_Var>> _field_Statics;
	


};
struct _20d3e369c_Scope {
	jule::Ptr<_20d3e369c_Scope> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<jule::Any> _field_Stmts;
	


};
struct _20d3e3aba_If {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_20d3e369c_Scope> _field_Scope;
	

	inline bool operator==(_20d3e3aba_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_20d3e3aba_If _other) { return !this->operator==(_other); }


};
struct _20d3e3db7_Else {
	jule::Ptr<_20d3e369c_Scope> _field_Scope;
	

	inline bool operator==(_20d3e3db7_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_20d3e3db7_Else _other) { return !this->operator==(_other); }


};
struct _20d3e42d5_Conditional {
	jule::Slice<jule::Ptr<_20d3e3aba_If>> _field_Elifs;
	jule::Ptr<_20d3e3db7_Else> _field_Default;
	


};
struct _20d3e45d2_InfIter {
	jule::Ptr<_20d3e369c_Scope> _field_Scope;
	

	inline bool operator==(_20d3e45d2_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_20d3e45d2_InfIter _other) { return !this->operator==(_other); }


};
struct _20d3e4a88_WhileIter {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_20d3e369c_Scope> _field_Scope;
	

	inline bool operator==(_20d3e4a88_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_20d3e4a88_WhileIter _other) { return !this->operator==(_other); }


};
struct _20d3e54d4_RangeIter {
	jule::Ptr<_20d087165_Data> _field_Expr;
	jule::Ptr<_20d3e369c_Scope> _field_Scope;
	jule::Ptr<_20d458aca_Var> _field_KeyA;
	jule::Ptr<_20d458aca_Var> _field_KeyB;
	

	inline bool operator==(_20d3e54d4_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_20d3e54d4_RangeIter _other) { return !this->operator==(_other); }


};
struct _20d3e5869_ContSt {
	jule::Uintptr _field_It = 0;
	

	inline bool operator==(_20d3e5869_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_20d3e5869_ContSt _other) { return !this->operator==(_other); }


};
struct _20d3e5c43_BreakSt {
	jule::Uintptr _field_It = 0;
	jule::Uintptr _field_Mtch = 0;
	

	inline bool operator==(_20d3e5c43_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_20d3e5c43_BreakSt _other) { return !this->operator==(_other); }


};
struct _20d3e6040_Label {
	jule::Str _field_Ident;
	

	inline bool operator==(_20d3e6040_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_20d3e6040_Label _other) { return !this->operator==(_other); }


};
struct _20d3e6419_GotoSt {
	jule::Str _field_Ident;
	jule::Ptr<_20d3e6040_Label> _field_Label;
	

	inline bool operator==(_20d3e6419_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_20d3e6419_GotoSt _other) { return !this->operator==(_other); }


};
struct _20d3e67e3_Postfix {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Op;
	

	inline bool operator==(_20d3e67e3_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_20d3e67e3_Postfix _other) { return !this->operator==(_other); }


};
struct _20d3e6c99_Assign {
	jule::Ptr<_20d394609_OperandExprModel> _field_L;
	jule::Ptr<_20d394609_OperandExprModel> _field_R;
	jule::Ptr<_20d3510bb_Token> _field_Op;
	

	inline bool operator==(_20d3e6c99_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_20d3e6c99_Assign _other) { return !this->operator==(_other); }


};
struct _20d3e7173_MultiAssign {
	jule::Slice<jule::Ptr<_20d087165_Data>> _field_L;
	jule::Any _field_R = jule::Any(nullptr);
	


};
struct _20d3e77d3_Match {
	jule::Ptr<_20d087165_Data> _field_Expr;
	jule::Bool _field_TypeMatch = false;
	jule::Bool _field_Comptime = false;
	jule::Slice<jule::Ptr<_20d3e841b_Case>> _field_Cases;
	jule::Ptr<_20d3e841b_Case> _field_Default;
	


};
struct _20d3e841b_Case {
	jule::Ptr<_20d3e77d3_Match> _field_Owner;
	jule::Ptr<_20d3e369c_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_20d087165_Data>> _field_Exprs;
	jule::Ptr<_20d3e841b_Case> _field_Next;
	


};
struct _20d3e8a15_FallSt {
	jule::Uintptr _field_DestCase = 0;
	

	inline bool operator==(_20d3e8a15_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_20d3e8a15_FallSt _other) { return !this->operator==(_other); }


};
struct _20d3e8d9a_RetSt {
	jule::Ptr<_20d3a5a49_FnIns> _field_Func;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_20d3e8d9a_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20d3e8d9a_RetSt _other) { return !this->operator==(_other); }


};
struct _20d3e950a_scopeLabel {
	jule::Ptr<_20d3510bb_Token> _field_token;
	jule::Ptr<_20d3e6040_Label> _field_label;
	jule::I64 _field_pos = 0;
	jule::Ptr<_20d3ea9a1_scopeChecker> _field_scope;
	jule::Bool _field_used = false;
	

	inline bool operator==(_20d3e950a_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_20d3e950a_scopeLabel _other) { return !this->operator==(_other); }


};
struct _20d3e9a8d_scopeGoto {
	jule::Ptr<_20d3e6419_GotoSt> _field_st;
	jule::Ptr<_20d379457_GotoSt> _field_gt;
	jule::Ptr<_20d3ea9a1_scopeChecker> _field_scope;
	jule::I64 _field_pos = 0;
	

	inline bool operator==(_20d3e9a8d_scopeGoto _other) {
		return 
			this->_field_st == _other._field_st &&
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_20d3e9a8d_scopeGoto _other) { return !this->operator==(_other); }


};
struct _20d3ea9a1_scopeChecker {
	jule::Ptr<_20d3510bb_Token> _field_calledFrom;
	jule::Ptr<_20d435de8_Sema> _field_s;
	jule::Ptr<_20d3a5a49_FnIns> _field_owner;
	jule::Ptr<_20d3ea9a1_scopeChecker> _field_parent;
	jule::I64 _field_childIndex = 0;
	jule::Ptr<_20d081e40_SymbolTable> _field_table;
	jule::Ptr<_20d3e369c_Scope> _field_scope;
	jule::Ptr<_20d37b9ba_ScopeTree> _field_tree;
	jule::Ptr<_20d3a5a49_FnIns> _field_result;
	jule::Uintptr _field_it = 0;
	jule::Uintptr _field_cse = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_20d3e950a_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_20d3e9a8d_scopeGoto>>> _field_gotos;
	jule::I64 _field_i = 0;
	

	inline bool operator==(_20d3ea9a1_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_20d3ea9a1_scopeChecker _other) { return !this->operator==(_other); }


};
struct _20d40d651_directiveChecker {
	jule::Ptr<_20d435de8_Sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_20d36adb6_Directive>>> _field_d;
	jule::Any _field_o;
	

	inline bool operator==(_20d40d651_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_20d40d651_directiveChecker _other) { return !this->operator==(_other); }


};
struct _20d414d94_ImportInfo {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	jule::Bool _field_ImportAll = false;
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _field_Selected;
	jule::Ptr<_20d417cba_Package> _field_Package;
	jule::I64 _field_ModId = 0;
	


};
struct _20d417cba_Package {
	jule::Slice<jule::Ptr<_20d081e40_SymbolTable>> _field_Files;
	


};
struct _20d4352c1_commonSemaMeta {
	jule::Slice<jule::Ptr<_20d3cbb5d_comptimeTypeInfo>> _field_comptimeTypeInfos;
	


};
struct _20d435de8_Sema {
	jule::Slice<_22730be5e_Log> _field_errors;
	jule::Slice<jule::Ptr<_20d081e40_SymbolTable>> _field_files;
	jule::Ptr<_20d081e40_SymbolTable> _field_file;
	jule::I64 _field_flags = 0LL;
	jule::Ptr<_20d4352c1_commonSemaMeta> _field_meta;
	


};
struct _20d455533_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled = false;
	


};
struct _20d457920_IterRelation {
	jule::Ptr<_20d458aca_Var> _field_Range;
	

	inline bool operator==(_20d457920_IterRelation _other) {
		return 
			this->_field_Range == _other._field_Range;
	}

	inline bool operator!=(_20d457920_IterRelation _other) { return !this->operator==(_other); }


};
struct _20d458aca_Var {
	jule::Ptr<_20d3e369c_Scope> _field_Scope;
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_20d4e6706_TypeSymbol> _field_Kind;
	jule::Ptr<_20d0882a9_Value> _field_Value;
	jule::Ptr<_20d3a8be5_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_20d36adb6_Directive>> _field_Directives;
	jule::Ptr<_20d457920_IterRelation> _field_IterRelation;
	jule::I64 _field_RetOrder = -2LL;
	jule::Slice<jule::Ptr<_20d458aca_Var>> _field_Depends;
	


};
struct _20d4598de_FuncPattern {
	


};
struct _20d06ddd8_typeCompatibilityChecker {
	jule::Ptr<_20d435de8_Sema> _field_s;
	jule::Ptr<_20d4de28c_TypeKind> _field_dest;
	jule::Ptr<_20d4de28c_TypeKind> _field_src;
	jule::Ptr<_20d3510bb_Token> _field_errorToken;
	

	inline bool operator==(_20d06ddd8_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_20d06ddd8_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
struct _20d070b87_assignTypeChecker {
	jule::Ptr<_20d435de8_Sema> _field_s;
	jule::Ptr<_20d4de28c_TypeKind> _field_dest;
	jule::Ptr<_20d087165_Data> _field_d;
	jule::Ptr<_20d3510bb_Token> _field_errorToken;
	

	inline bool operator==(_20d070b87_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_20d070b87_assignTypeChecker _other) { return !this->operator==(_other); }


};
struct _20d072804_dynamicTypeAnnotation {
	jule::Ptr<_20d088d59_Eval> _field_e;
	jule::Ptr<_20d3a5a49_FnIns> _field_f;
	jule::Ptr<_20d3a4a9d_ParamIns> _field_p;
	jule::Ptr<_20d087165_Data> _field_a;
	jule::Ptr<_20d3510bb_Token> _field_errorToken;
	jule::Ptr<_20d4de28c_TypeKind>* _field_k = nullptr;
	jule::Ptr<_20d36b999_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_20d4de28c_TypeKind>> _field_ignored;
	


};
struct _20d077661_fnCallArgChecker {
	jule::Ptr<_20d088d59_Eval> _field_e;
	jule::Slice<jule::Ptr<_20d370ccd_Expr>> _field_args;
	jule::Ptr<_20d3510bb_Token> _field_errorToken;
	jule::Ptr<_20d3a5a49_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation = false;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_20d4de28c_TypeKind>> _field_ignored;
	


};
struct _20d07a598_structLitChecker {
	jule::Ptr<_20d088d59_Eval> _field_e;
	jule::Ptr<_20d3510bb_Token> _field_errorToken;
	jule::Ptr<_20d39066b_StructIns> _field_s;
	jule::Slice<jule::Ptr<_20d39550b_StructArgExprModel>> _field_args;
	


};
struct _20d07c37a_rangeChecker {
	jule::Ptr<_20d3ea9a1_scopeChecker> _field_sc;
	jule::Ptr<_20d3814d6_RangeKind> _field_rang;
	jule::Ptr<_20d3e54d4_RangeIter> _field_Kind;
	jule::Ptr<_20d087165_Data> _field_d;
	

	inline bool operator==(_20d07c37a_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_20d07c37a_rangeChecker _other) { return !this->operator==(_other); }


};
struct _20d07eadb_retTypeChecker {
	jule::Ptr<_20d3ea9a1_scopeChecker> _field_sc;
	jule::Ptr<_20d3a5a49_FnIns> _field_f;
	jule::Slice<jule::Ptr<_20d4de28c_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_20d370ccd_Expr>> _field_exprs;
	jule::Ptr<_20d3510bb_Token> _field_errorToken;
	jule::Any _field_model = jule::Any(nullptr);
	


};
struct _20d081e40_SymbolTable {
	jule::Ptr<_20d356885_File> _field_File;
	jule::Slice<_20d3aa213_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_20d414d94_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_20d458aca_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_20d4dd49a_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_20d38c58b_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_20d3a2b45_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_20d3b5dde_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_20d3b85d9_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_20d3b9ce4_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_20d3dd268_Impl>> _field_Impls;
	


};
struct _20d087165_Data {
	jule::Bool _field_untyped = false;
	jule::Ptr<_20d4de28c_TypeKind> _field_Kind;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Bool _field_Lvalue = false;
	jule::Bool _field_IsRune = false;
	jule::Any _field_Model = jule::Any(nullptr);
	jule::Bool _field_Decl = false;
	jule::Ptr<_20b0655eb_Const> _field_Constant;
	

	inline bool operator==(_20d087165_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_20d087165_Data _other) { return !this->operator==(_other); }


};
struct _20d0882a9_Value {
	jule::Ptr<_20d370ccd_Expr> _field_Expr;
	jule::Ptr<_20d087165_Data> _field_Data;
	

	inline bool operator==(_20d0882a9_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_20d0882a9_Value _other) { return !this->operator==(_other); }


};
struct _20d088d59_Eval {
	jule::Ptr<_20d435de8_Sema> _field_s;
	jule::Trait<_20d50e06a_Lookup> _field_lookup;
	jule::Ptr<_20d4de28c_TypeKind> _field_prefix;
	jule::Bool _field_unsafety = false;
	jule::Bool _field_immutable = false;
	jule::Bool _field_ignored = false;
	jule::Bool _field_disBuiltin = false;
	jule::Ptr<_20d458aca_Var> _field_owner;
	jule::Ptr<_20d38eabb_FieldIns> _field_field;
	jule::Bool _field_arg = false;
	

	inline bool operator==(_20d088d59_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_20d088d59_Eval _other) { return !this->operator==(_other); }


};
struct _20d4ce25a_unaryEval {
	jule::Ptr<_20d088d59_Eval> _field_e;
	jule::Ptr<_20d087165_Data> _field_d;
	jule::Ptr<_20d372d8a_UnaryExpr> _field_u;
	

	inline bool operator==(_20d4ce25a_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_20d4ce25a_unaryEval _other) { return !this->operator==(_other); }


};
struct _20d4d11e6_binaryEval {
	jule::Ptr<_20d088d59_Eval> _field_e;
	jule::Ptr<_20d087165_Data> _field_l;
	jule::Ptr<_20d087165_Data> _field_r;
	jule::Ptr<_20d3510bb_Token> _field_op;
	

	inline bool operator==(_20d4d11e6_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_20d4d11e6_binaryEval _other) { return !this->operator==(_other); }


};
struct _20d4dc8a6_InsGeneric {
	jule::Ptr<_20d4de28c_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_20d4de28c_TypeKind>> _field_Constraint;
	


};
struct _20d4dd49a_TypeAlias {
	jule::Ptr<_20d37b9ba_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Generic = false;
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_20d4e6706_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_20d4dd49a_TypeAlias>> _field_Generics;
	


};
struct _20d4de28c_TypeKind {
	jule::Str _field_BindIdent;
	jule::Bool _field_Generic = false;
	jule::Bool _field_Variadic = false;
	jule::Trait<_20d4ddcd6_Kind> _field_Kind;
	

	inline bool operator==(_20d4de28c_TypeKind _other) {
		return 
			this->_field_BindIdent == _other._field_BindIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_20d4de28c_TypeKind _other) { return !this->operator==(_other); }


};
struct _20d4e6706_TypeSymbol {
	jule::Ptr<_20d36b999_TypeDecl> _field_Decl;
	jule::Ptr<_20d4de28c_TypeKind> _field_Kind;
	

	inline bool operator==(_20d4e6706_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_20d4e6706_TypeSymbol _other) { return !this->operator==(_other); }


};
struct _20d4e710d_Prim {
	jule::Str _field_Kind;
	

	inline bool operator==(_20d4e710d_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_20d4e710d_Prim _other) { return !this->operator==(_other); }


};
struct _20d4eab39_Sptr {
	jule::Ptr<_20d4de28c_TypeKind> _field_Elem;
	

	inline bool operator==(_20d4eab39_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_20d4eab39_Sptr _other) { return !this->operator==(_other); }


};
struct _20d4eb60c_Slc {
	jule::Ptr<_20d4de28c_TypeKind> _field_Elem;
	

	inline bool operator==(_20d4eb60c_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_20d4eb60c_Slc _other) { return !this->operator==(_other); }


};
struct _20d4ec201_Tuple {
	jule::Slice<jule::Ptr<_20d4de28c_TypeKind>> _field_Types;
	


};
struct _20d4ecca1_Map {
	jule::Ptr<_20d4de28c_TypeKind> _field_Key;
	jule::Ptr<_20d4de28c_TypeKind> _field_Val;
	

	inline bool operator==(_20d4ecca1_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_20d4ecca1_Map _other) { return !this->operator==(_other); }


};
struct _20d4ed92d_Arr {
	jule::Bool _field_Auto = false;
	jule::I64 _field_N = 0;
	jule::Ptr<_20d4de28c_TypeKind> _field_Elem;
	

	inline bool operator==(_20d4ed92d_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_20d4ed92d_Arr _other) { return !this->operator==(_other); }


};
struct _20d4ee401_Ptr {
	jule::Ptr<_20d4de28c_TypeKind> _field_Elem;
	

	inline bool operator==(_20d4ee401_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_20d4ee401_Ptr _other) { return !this->operator==(_other); }


};
struct _20d500402_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	inline bool operator==(_20d500402_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_20d500402_referencer _other) { return !this->operator==(_other); }


};
struct _20d5013e2_typeChecker {
	jule::Ptr<_20d435de8_Sema> _field_s;
	jule::Trait<_20d50e06a_Lookup> _field_rootLookup;
	jule::Trait<_20d50e06a_Lookup> _field_lookup;
	jule::Ptr<_20d500402_referencer> _field_referencer;
	jule::Ptr<_20d3a8be5_ReferenceStack> _field_refers;
	jule::Ptr<_20d3510bb_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_20d378ba4_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_20d4de28c_TypeKind>>* _field_ignoredGenerics = nullptr;
	jule::Slice<jule::Ptr<_20d4dd49a_TypeAlias>> _field_useGenerics;
	jule::Bool _field_cycleRisk = true;
	jule::Bool _field_disBuiltin = false;
	jule::Bool _field_selection = false;
	jule::Ptr<_20d4dd49a_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_20d4dd49a_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch = false;
	


};
struct _20d509076_identTypeLookup {
	

	inline bool operator==(_20d509076_identTypeLookup _other) { return true; }

	inline bool operator!=(_20d509076_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _20de98bad_FileInfo {
	jule::Ptr<_20d3699ec_Ast> _field_Ast;
	jule::Slice<_22730be5e_Log> _field_Errors;
	


};
struct _20dee071b_stmt {
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _field_tokens;
	jule::Bool _field_terminated = false;
	


};
struct _20dee10ac_scopeParser {
	jule::Ptr<_20e00e284_parser> _field_p;
	jule::Ptr<_20d37b9ba_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_20dee071b_stmt>> _field_stmts;
	jule::I64 _field_pos = 0;
	


};
struct _20deed680_exprBuilder {
	jule::Ptr<_20e00e284_parser> _field_p;
	

	inline bool operator==(_20deed680_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_20deed680_exprBuilder _other) { return !this->operator==(_other); }


};
struct _20e00aadd_assignInfo {
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _field_l;
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _field_r;
	jule::Ptr<_20d3510bb_Token> _field_setter;
	jule::Bool _field_ok = false;
	


};
struct _20e00e284_parser {
	jule::Ptr<_20d3699ec_Ast> _field_ast;
	jule::Slice<jule::Ptr<_20d36adb6_Directive>> _field_directives;
	jule::Slice<_22730be5e_Log> _field_errors;
	jule::Ptr<_20deed680_exprBuilder> _field_ep;
	


};
struct _20e0210ed_typeBuilder {
	jule::Ptr<_20e00e284_parser> _field_p;
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _field_tokens;
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = false;
	


};
struct _20d7b9589_CompileInfo {
	jule::Bool _field_Prod = false;
	jule::Bool _field_Test = false;
	jule::Str _field_Compiler = jule::Str("clang", 5);
	jule::Str _field_CppStd = jule::Str("cpp14", 5);
	

	inline bool operator==(_20d7b9589_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_20d7b9589_CompileInfo _other) { return !this->operator==(_other); }


};
struct _20d7baa41_directiveEval {
	jule::Slice<_22730be5e_Log> _field_logs;
	jule::Ptr<_20d36adb6_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _20e025234_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_20d414d94_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _20e02a448_OrderedDefines {
	jule::Slice<jule::Ptr<_20d38c58b_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_20d458aca_Var>> _field_Globals;
	


};
struct _20e02a6ac_defineOrderer {
	

	inline bool operator==(_20e02a6ac_defineOrderer _other) { return true; }

	inline bool operator!=(_20e02a6ac_defineOrderer _other) { return !this->operator==(_other); }


};
struct _20db39d7c_liveTable {
	jule::Slice<jule::Ptr<_20d458aca_Var>> _field_vars;
	jule::Slice<jule::Ptr<_20d3a5a49_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_20d39066b_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_20d3b5dde_Trait>> _field_traits;
	


};
struct _20db70ec3_scopeDeadCode {
	jule::Ptr<_20db70ec3_scopeDeadCode> _field_parent;
	jule::Ptr<_20d3e369c_Scope> _field_s;
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_20d3e6040_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_20d3e6419_GotoSt>>> _field_gotos;
	jule::Bool _field_except = false;
	

	inline bool operator==(_20db70ec3_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_20db70ec3_scopeDeadCode _other) { return !this->operator==(_other); }


};
struct _20db7522a_exprDeadCode {
	jule::Ptr<_20db70ec3_scopeDeadCode> _field_s;
	

	inline bool operator==(_20db7522a_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_20db7522a_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _20d57491b_SwapExprModel {
	jule::Ptr<_20d087165_Data> _field_Left;
	jule::Ptr<_20d087165_Data> _field_Right;
	

	inline bool operator==(_20d57491b_SwapExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_20d57491b_SwapExprModel _other) { return !this->operator==(_other); }


};
struct _20d574ce5_EmptyCompareExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Neg = false;
	

	inline bool operator==(_20d574ce5_EmptyCompareExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Neg == _other._field_Neg;
	}

	inline bool operator!=(_20d574ce5_EmptyCompareExprModel _other) { return !this->operator==(_other); }


};
struct _20d5750e2_RefExprModel {
	jule::Ptr<_20d458aca_Var> _field_Var;
	

	inline bool operator==(_20d5750e2_RefExprModel _other) {
		return 
			this->_field_Var == _other._field_Var;
	}

	inline bool operator!=(_20d5750e2_RefExprModel _other) { return !this->operator==(_other); }


};
struct _20d575620_StrCompExprModel {
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Ptr<_20b0655eb_Const> _field_Right;
	jule::Bool _field_NotEq = false;
	

	inline bool operator==(_20d575620_StrCompExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_NotEq == _other._field_NotEq;
	}

	inline bool operator!=(_20d575620_StrCompExprModel _other) { return !this->operator==(_other); }


};
struct _20d575ba3_MutSlicingExprModel {
	jule::Ptr<_20d3510bb_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_20d575ba3_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_20d575ba3_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _20d575ea0_UnsafeBinopExprModel {
	jule::Ptr<_20d394b04_BinopExprModel> _field_Node;
	

	inline bool operator==(_20d575ea0_UnsafeBinopExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_20d575ea0_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _20d57629c_UnsafeIndexingExprModel {
	jule::Ptr<_20d397464_IndexingExprModel> _field_Node;
	

	inline bool operator==(_20d57629c_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_20d57629c_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _20d5766cb_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Ptr<_20d396ead_SliceExprModel> _field_Elems;
	

	inline bool operator==(_20d5766cb_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_20d5766cb_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _20d576aa5_AppendToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Slice = jule::Any(nullptr);
	

	inline bool operator==(_20d576aa5_AppendToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Slice == _other._field_Slice;
	}

	inline bool operator!=(_20d576aa5_AppendToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _20d576da2_InlineStdInternalNosafeStobs {
	jule::Any _field_Str = jule::Any(nullptr);
	

	inline bool operator==(_20d576da2_InlineStdInternalNosafeStobs _other) {
		return 
			this->_field_Str == _other._field_Str;
	}

	inline bool operator!=(_20d576da2_InlineStdInternalNosafeStobs _other) { return !this->operator==(_other); }


};
struct _20d57804b_scopeOptimizer {
	jule::I64 _field_i = 0;
	jule::Ptr<_20d3e369c_Scope> _field_scope;
	

	inline bool operator==(_20d57804b_scopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_20d57804b_scopeOptimizer _other) { return !this->operator==(_other); }


};
struct _20d57e22d_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	

	inline bool operator==(_20d57e22d_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_20d57e22d_exprOptimizer _other) { return !this->operator==(_other); }


};
struct _20e02c04e_stdCacheData {
	jule::Ptr<_20d3a5a49_FnIns> _field_f;
	jule::Fn<void(_20d57e22d_exprOptimizer*,_20e02c04e_stdCacheData*,jule::Ptr<_20d396ad4_FnCallExprModel>*)> _field_do;
	


};
struct _20db7c96e_Optimizer {
	jule::Ptr<_20e027be8_IR> _field_ir;
	

	inline bool operator==(_20db7c96e_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_20db7c96e_Optimizer _other) { return !this->operator==(_other); }


};
struct _20e2383d1_AnsiEscape {
	

	inline bool operator==(_20e2383d1_AnsiEscape _other) { return true; }

	inline bool operator!=(_20e2383d1_AnsiEscape _other) { return !this->operator==(_other); }


};
struct _20e239a0e_Logger {
	

	inline bool operator==(_20e239a0e_Logger _other) { return true; }

	inline bool operator!=(_20e239a0e_Logger _other) { return !this->operator==(_other); }


};
struct _20ebe0508_AbsTime {
	jule::U64 _field_Day = 0;
	jule::U64 _field_WeekDay = 0;
	jule::U64 _field_YearDay = 0;
	jule::U64 _field_Month = 0;
	jule::U64 _field_Year = 0;
	jule::U64 _field_Second = 0;
	jule::U64 _field_Minute = 0;
	jule::U64 _field_Hour = 0;
	

	inline bool operator==(_20ebe0508_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_20ebe0508_AbsTime _other) { return !this->operator==(_other); }


};
struct _20ebe0bce_Time {
	jule::U64 _field_sec = 0;
	

	inline bool operator==(_20ebe0bce_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_20ebe0bce_Time _other) { return !this->operator==(_other); }


};
struct _20ea1a586_scopeCoder {
	jule::Ptr<_20ebea2d2_ObjectCoder> _field_oc;
	

	inline bool operator==(_20ea1a586_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_20ea1a586_scopeCoder _other) { return !this->operator==(_other); }


};
struct _20ea2479e_exprCoder {
	jule::Ptr<_20ebea2d2_ObjectCoder> _field_oc;
	

	inline bool operator==(_20ea2479e_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_20ea2479e_exprCoder _other) { return !this->operator==(_other); }


};
struct _20ea34d0e_deriveCoder {
	jule::Ptr<_20ebea2d2_ObjectCoder> _field_oc;
	

	inline bool operator==(_20ea34d0e_deriveCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_20ea34d0e_deriveCoder _other) { return !this->operator==(_other); }


};
struct _20ea368c1_TestCoder {
	jule::Ptr<_20d39066b_StructIns> _field_t;
	jule::Ptr<_20d3a2b45_Fn> _field_tmReset;
	jule::Ptr<_20d3a2b45_Fn> _field_tmFailed;
	jule::Ptr<_20d3a2b45_Fn> _field_tmSkipped;
	jule::Ptr<_20ebea2d2_ObjectCoder> _field_oc;
	

	inline bool operator==(_20ea368c1_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_20ea368c1_TestCoder _other) { return !this->operator==(_other); }


};
struct _20ea39561_identCoder {
	

	inline bool operator==(_20ea39561_identCoder _other) { return true; }

	inline bool operator!=(_20ea39561_identCoder _other) { return !this->operator==(_other); }


};
struct _20ebe86dc_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

	inline bool operator==(_20ebe86dc_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_20ebe86dc_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _20ebe8cb4_traitHash {
	jule::Ptr<_20d3b5dde_Trait> _field_t;
	jule::Str _field_ti;
	jule::Ptr<_20d39066b_StructIns> _field_s;
	jule::I64 _field_i = 0;
	

	inline bool operator==(_20ebe8cb4_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_ti == _other._field_ti &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_20ebe8cb4_traitHash _other) { return !this->operator==(_other); }


};
struct _20ebe918d_traitCast {
	jule::Ptr<_20d3b5dde_Trait> _field_t1;
	jule::Ptr<_20d3b5dde_Trait> _field_t2;
	

	inline bool operator==(_20ebe918d_traitCast _other) {
		return 
			this->_field_t1 == _other._field_t1 &&
			this->_field_t2 == _other._field_t2;
	}

	inline bool operator!=(_20ebe918d_traitCast _other) { return !this->operator==(_other); }


};
struct _20ec099ea_customType {
	jule::Str _field_kind;
	

	inline bool operator==(_20ec099ea_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_20ec099ea_customType _other) { return !this->operator==(_other); }


};
struct _20ec0a600_typeCoder {
	jule::Ptr<_20ebea2d2_ObjectCoder> _field_oc;
	jule::Ptr<_20ec133c7_resultCoder> _field_rc;
	

	inline bool operator==(_20ec0a600_typeCoder _other) {
		return 
			this->_field_oc == _other._field_oc &&
			this->_field_rc == _other._field_rc;
	}

	inline bool operator!=(_20ec0a600_typeCoder _other) { return !this->operator==(_other); }


};
struct _20ec133c7_resultCoder {
	jule::Ptr<_20ec0a600_typeCoder> _field_tc;
	

	inline bool operator==(_20ec133c7_resultCoder _other) {
		return 
			this->_field_tc == _other._field_tc;
	}

	inline bool operator!=(_20ec133c7_resultCoder _other) { return !this->operator==(_other); }


};
struct _2249720ee_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::I64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

	inline bool operator==(_2249720ee_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_2249720ee_Flag _other) { return !this->operator==(_other); }


};struct _224975960_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::U64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

	inline bool operator==(_224975960_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_224975960_Flag _other) { return !this->operator==(_other); }


};struct _22497915b_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::F64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

	inline bool operator==(_22497915b_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_22497915b_Flag _other) { return !this->operator==(_other); }


};struct _22497c89b_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Bool _field_default = false;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

	inline bool operator==(_22497c89b_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_22497c89b_Flag _other) { return !this->operator==(_other); }


};struct _224981097_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

	inline bool operator==(_224981097_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_224981097_Flag _other) { return !this->operator==(_other); }


};
struct _20ec801be_FlagSet {
	jule::Slice<jule::Trait<_20ec7d61d_CommonFlag>> _field_flags;
	


};
struct _20ec82b50_argParser {
	_20ec801be_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I64 _field_i = 0;
	


};
struct _20ebea2d2_ObjectCoder {
	_2240a0ad5_StrBuilder _field_Obj;
	_2240a0ad5_StrBuilder _field_resultDecls;
	_2240a0ad5_StrBuilder _field_anyObj;
	jule::Ptr<_20e027be8_IR> _field_ir;
	_20ebe86dc_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_20ebe8cb4_traitHash>> _field_tmap;
	jule::Slice<jule::U8> _field_indentBuffer;
	jule::Map<jule::Str,jule::Bool> _field_resultMap;
	jule::Slice<jule::Ptr<_20d4de28c_TypeKind>> _field_anyTypeMap;
	jule::Slice<_20ebe918d_traitCast> _field_traitCastMap;
	jule::Ptr<_20ea2479e_exprCoder> _field_ec;
	jule::Ptr<_20ea1a586_scopeCoder> _field_sc;
	jule::Ptr<_20ec0a600_typeCoder> _field_tc;
	jule::Ptr<_20ea34d0e_deriveCoder> _field_dc;
	jule::I64 _field_headPos = 0;
	jule::I64 _field_declPos = 0;
	


};
struct _20db6b7d7_ObjectDeadCode {
	_20db39d7c_liveTable _field_live;
	jule::Ptr<_20e027be8_IR> _field_ir;
	


};
struct _20e027be8_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_20d417cba_Package> _field_Main;
	jule::Slice<jule::Ptr<_20d414d94_ImportInfo>> _field_Used;
	_20e02a448_OrderedDefines _field_Ordered;
	


};
struct _20d39066b_StructIns {
	jule::Bool _field_Checked = false;
	jule::Ptr<_20d38c58b_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_20d4dc8a6_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_20d38eabb_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_20d458aca_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_20d3a2b45_Fn>> _field_Methods;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Comparable = false;
	jule::Ptr<_20d3a8be5_ReferenceStack> _field_Refers;
	_20d38b678_Operators _field_Operators;
	


};
struct _2273b5cd7_Cmd {
	_2273ba072_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	


};
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_20d087165_Data__jule_tuple_x_20d087165_Data {
	jule::Ptr<_20d087165_Data> __jule_result_arg0;
	jule::Ptr<_20d087165_Data> __jule_result_arg1;
};
struct __jule_tuple_x_20d087165_Data__jule_tuple_bool {
	jule::Ptr<_20d087165_Data> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_20d3837b3_Case__jule_tuple_bool {
	jule::Ptr<_20d3837b3_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_20d3837b3_Case__jule_tuple_x_20d382619_Else {
	jule::Slice<jule::Ptr<_20d3837b3_Case>> __jule_result_arg0;
	jule::Ptr<_20d382619_Else> __jule_result_arg1;
};
struct __jule_tuple__20d37b107_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_20d37a447_AssignSt__jule_tuple_bool {
	jule::Ptr<_20d37a447_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_20d36b999_TypeDecl__jule_tuple_bool {
	jule::Ptr<_20d36b999_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_20d36e88c_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_20d36e88c_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_20d3699ec_Ast__jule_tuple_s_22730be5e_Log {
	jule::Slice<jule::Ptr<_20d3699ec_Ast>> __jule_result_arg0;
	jule::Slice<_22730be5e_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_22730be5e_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_22730be5e_Log> __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_20e027be8_IR__jule_tuple_s_22730be5e_Log {
	jule::Ptr<_20e027be8_IR> __jule_result_arg0;
	jule::Slice<_22730be5e_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_i32 {
	jule::I32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__20a83d930_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I64 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__20a83d930_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__20a83d930_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__20a83d930_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I64 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_20d081e40_SymbolTable__jule_tuple_s_22730be5e_Log {
	jule::Ptr<_20d081e40_SymbolTable> __jule_result_arg0;
	jule::Slice<_22730be5e_Log> __jule_result_arg1;
};
struct __jule_tuple_x_20d417cba_Package__jule_tuple_s_22730be5e_Log {
	jule::Ptr<_20d417cba_Package> __jule_result_arg0;
	jule::Slice<_22730be5e_Log> __jule_result_arg1;
};
struct __jule_tuple_x_20d3699ec_Ast__jule_tuple_s_22730be5e_Log {
	jule::Ptr<_20d3699ec_Ast> __jule_result_arg0;
	jule::Slice<_22730be5e_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_20d3510bb_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_20d3510bb_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_20d3510bb_Token__jule_tuple_sx_20d3510bb_Token {
	jule::Slice<jule::Ptr<_20d3510bb_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_20d3510bb_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_20d3510bb_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_20d3510bb_Token>> __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_ssx_20d3510bb_Token__jule_tuple_s_22730be5e_Log {
	jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>> __jule_result_arg0;
	jule::Slice<_22730be5e_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline _2240a0ad5_StrBuilder static__2240a0e04_New(jule::I64);
inline void _2240a95e4_Write(_2240a0ad5_StrBuilder*, jule::Slice<jule::U8>);
inline void _2240a989c_WriteStr(_2240a0ad5_StrBuilder*, jule::Str);
inline void _2240a9b55_WriteByte(_2240a0ad5_StrBuilder*, jule::U8);
inline jule::Str _2240aa194_Str(_2240a0ad5_StrBuilder*);
inline void _2240aa392_Clear(_2240a0ad5_StrBuilder*);
inline jule::I64 _2240aa628_Len(_2240a0ad5_StrBuilder*);
inline jule::Slice<jule::U8> _2240aab45_Buf(_2240a0ad5_StrBuilder*);
inline void _2240aaded_SetBuf(_2240a0ad5_StrBuilder*, jule::Slice<jule::U8>);
inline jule::U8 _227268e21_index(_2272689c0_lazyBuff*, jule::I64);
inline void _2272691c9_append(_2272689c0_lazyBuff*, jule::U8);
inline jule::Str _227269460_string(_2272689c0_lazyBuff*);
inline jule::Exceptional<jule::Slice<jule::Ptr<_223dd0706_DirEntry>>> static__22726b709_Read(jule::Str);
inline jule::VoidExceptional static__22726b93a_Create(jule::Str);
inline jule::VoidExceptional static__22726bb6b_Remove(jule::Str);
inline jule::Ptr<_223ddac3e_File> static__223ddb16d_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_223ddac3e_File>> static__223ddb437_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__223ddb701_Read(jule::Str);
inline jule::VoidExceptional static__223ddba97_Write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::VoidExceptional _223ddc9cc_Close(_223ddac3e_File*);
inline jule::Exceptional<jule::Ptr<_223ddac3e_File>> static__223eeab84_Open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__223eeadb5_Remove(jule::Str);
inline jule::Exceptional<jule::I64> _223eeb349_Write(_223ddac3e_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _223eeb68a_Read(_223ddac3e_File*, jule::Slice<jule::U8>);
inline jule::Bool _223ddd956_IsDir(_223ddd57c_Status*);
inline jule::Bool _223dddbdc_IsReg(_223ddd57c_Status*);
inline jule::U64 _223ddde73_Size(_223ddd57c_Status*);
inline jule::Exceptional<jule::Ptr<_223ddd57c_Status>> static__22726c562_Of(jule::Str);
inline jule::Bool _20b047721_set(_20b050d56_decimal*, jule::Slice<jule::U8>);
inline __jule_tuple_u64__jule_tuple_bool _20b047a62_floatBits(_20b050d56_decimal*, _20b037557_floatInfo*);
inline void _20b05120d_assign(_20b050d56_decimal*, jule::U64);
inline void _20b0514b6_shift(_20b050d56_decimal*, jule::I64);
inline void _20b05176e_roundDown(_20b050d56_decimal*, jule::I64);
inline void _20b051a27_roundUp(_20b050d56_decimal*, jule::I64);
inline void _20b051cd0_round(_20b050d56_decimal*, jule::I64);
inline jule::U64 _20b052066_roundedInteger(_20b050d56_decimal*);
inline jule::Ptr<_20b0655eb_Const> static__20b065a3b_NewI64(jule::I64);
inline jule::Ptr<_20b0655eb_Const> static__20b065d05_NewU64(jule::U64);
inline jule::Ptr<_20b0655eb_Const> static__20b0660be_NewBool(jule::Bool);
inline jule::Ptr<_20b0655eb_Const> static__20b066388_NewStr(jule::Str);
inline jule::Ptr<_20b0655eb_Const> static__20b066652_NewF64(jule::F64);
inline jule::Ptr<_20b0655eb_Const> static__20b066861_NewNil(void);
inline jule::I64 _20b066ec1_ReadI64(_20b0655eb_Const*);
inline jule::U64 _20b067257_ReadU64(_20b0655eb_Const*);
inline jule::Bool _20b0674dd_ReadBool(_20b0655eb_Const*);
inline jule::Str _20b067774_ReadStr(_20b0655eb_Const*);
inline jule::F64 _20b067a0a_ReadF64(_20b0655eb_Const*);
inline jule::I64 _20b067c91_AsI64(_20b0655eb_Const*);
inline jule::U64 _20b068027_AsU64(_20b0655eb_Const*);
inline jule::F64 _20b0682ad_AsF64(_20b0655eb_Const*);
inline void _20b068566_SetI64(_20b0655eb_Const*, jule::I64);
inline void _20b06881e_SetU64(_20b0655eb_Const*, jule::U64);
inline void _20b068ac7_SetBool(_20b0655eb_Const*, jule::Bool);
inline void _20b068d80_SetStr(_20b0655eb_Const*, jule::Str);
inline void _20b069138_SetF64(_20b0655eb_Const*, jule::F64);
inline jule::Bool _20b0695bc_IsI64(_20b0655eb_Const*);
inline jule::Bool _20b069853_IsU64(_20b0655eb_Const*);
inline jule::Bool _20b069ad9_IsBool(_20b0655eb_Const*);
inline jule::Bool _20b069d70_IsStr(_20b0655eb_Const*);
inline jule::Bool _20b06a106_IsF64(_20b0655eb_Const*);
inline jule::Bool _20b06a38c_IsNil(_20b0655eb_Const*);
inline jule::Bool _20b06aa1e_And(_20b0655eb_Const*, _20b0655eb_Const);
inline jule::Bool _20b06ad60_Or(_20b0655eb_Const*, _20b0655eb_Const);
inline jule::Bool _20b06c306_Add(_20b0655eb_Const*, _20b0655eb_Const);
inline jule::Bool _20b06c647_Sub(_20b0655eb_Const*, _20b0655eb_Const);
inline jule::Bool _20b06c988_Mul(_20b0655eb_Const*, _20b0655eb_Const);
inline jule::Bool _20b06ccc9_Div(_20b0655eb_Const*, _20b0655eb_Const);
inline jule::Bool _20b06d11a_Mod(_20b0655eb_Const*, _20b0655eb_Const);
inline jule::Bool _20b06d45b_BitwiseAnd(_20b0655eb_Const*, _20b0655eb_Const);
inline jule::Bool _20b06d79c_BitwiseOr(_20b0655eb_Const*, _20b0655eb_Const);
inline jule::Bool _20b06dadd_Xor(_20b0655eb_Const*, _20b0655eb_Const);
inline jule::Bool _20b06de2e_Lshift(_20b0655eb_Const*, _20b0655eb_Const);
inline jule::Bool _20b06e270_Rshift(_20b0655eb_Const*, _20b0655eb_Const);
inline jule::U8 _20d351440_Prec(_20d3510bb_Token*);
inline void _20d356c70_Fill(_20d356885_File*, jule::Slice<jule::U8>);
inline jule::Str _20d357006_Dir(_20d356885_File*);
inline jule::Str _20d35728c_Name(_20d356885_File*);
inline jule::Str _20d357864_GetRow(_20d356885_File*, jule::I64);
inline void _20d364eae_pushErr(_20d36492b_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _20d365520_lex(_20d36492b_lex*);
inline jule::Str _20d365861_id(_20d36492b_lex*, jule::Slice<jule::U8>*);
inline jule::Slice<jule::U8> _20d365ae7_resume(_20d36492b_lex*);
inline void _20d365da0_lexLineComment(_20d36492b_lex*, jule::Ptr<_20d3510bb_Token>*);
inline void _20d366158_lexRangeComment(_20d36492b_lex*, jule::Ptr<_20d3510bb_Token>*);
inline jule::Str _20d366499_num(_20d36492b_lex*, jule::Slice<jule::U8>*);
inline jule::Str _20d3667da_escapeSeq(_20d36492b_lex*, jule::Slice<jule::U8>*);
inline jule::Str _20d366bd6_getRune(_20d36492b_lex*, jule::Slice<jule::U8>*, jule::Bool);
inline jule::Str _20d367027_lexRune(_20d36492b_lex*, jule::Slice<jule::U8>*);
inline jule::Str _20d3672ad_lexStr(_20d36492b_lex*);
inline void _20d367742_newLine(_20d36492b_lex*);
inline jule::Bool _20d367ca3_isOp(_20d36492b_lex*, jule::Slice<jule::U8>*, jule::Str, jule::U64, jule::Ptr<_20d3510bb_Token>*);
inline jule::Bool _20d36819e_lexBasicOps(_20d36492b_lex*, jule::Slice<jule::U8>, jule::Ptr<_20d3510bb_Token>*);
inline jule::Bool _20d36859a_lexId(_20d36492b_lex*, jule::Slice<jule::U8>*, jule::Ptr<_20d3510bb_Token>*);
inline jule::Bool _20d368996_lexNum(_20d36492b_lex*, jule::Slice<jule::U8>*, jule::Ptr<_20d3510bb_Token>*);
inline jule::Ptr<_20d3510bb_Token> _20d368c2c_token(_20d36492b_lex*);
inline jule::Bool _20d36d836_IsUnsafe(_20d36d4c3_PtrTypeDecl*);
inline jule::Bool _20d36e0c8_AutoSized(_20d36dc65_ArrTypeDecl*);
inline jule::Bool _20d374d7b_Unhandled(_20d374a07_FnCallExpr*);
inline jule::Bool _20d375112_Ignored(_20d374a07_FnCallExpr*);
inline jule::Bool _20d37c57b_IsSelf(_20d37c207_ParamDecl*);
inline jule::Bool _20d37d9bc_IsAnon(_20d37d659_FnDecl*);
inline jule::Bool _20d380617_IsInf(_20d3802a4_Iter*);
inline jule::Bool _20d380e42_IsWhileNext(_20d380ace_WhileKind*);
inline jule::Ptr<_20d38eabb_FieldIns> _20d389a1c_instance(jule::Ptr<_20d389698_Field>);
inline jule::Ptr<_20d39066b_StructIns> _20d38ca0e_instance(jule::Ptr<_20d38c58b_Struct>);
inline jule::Ptr<_20d39066b_StructIns> _20d38cd1c_appendInstance(_20d38c58b_Struct*, jule::Ptr<_20d39066b_StructIns>*);
inline jule::Ptr<_20d3a2b45_Fn> _20d38d218_FindMethod(_20d38c58b_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_20d458aca_Var> _20d38d559_FindStatic(_20d38c58b_Struct*, jule::Str);
inline jule::Ptr<_20d389698_Field> _20d38d89a_FindField(_20d38c58b_Struct*, jule::Str);
inline jule::Bool _20d38dbdb_IsImplements(_20d38c58b_Struct*, jule::Ptr<_20d3b5dde_Trait>);
inline jule::Bool _20d38e02c_IsDerives(_20d38c58b_Struct*, jule::Str);
inline jule::Bool _20d38e36d_IsUses(_20d38c58b_Struct*, jule::Ptr<_20d38c58b_Struct>);
inline jule::Ptr<_20d3a4a9d_ParamIns> _20d3a1506_instance(jule::Ptr<_20d3a1171_Param>);
inline jule::Bool _20d3a178c_IsSelf(_20d3a1171_Param*);
inline jule::Bool _20d3a1a23_IsRef(_20d3a1171_Param*);
inline jule::Bool _20d3a30b8_IsVoid(_20d3a2b45_Fn*);
inline jule::Bool _20d3a334e_IsMethod(_20d3a2b45_Fn*);
inline jule::Bool _20d3a35d5_IsEntryPoint(_20d3a2b45_Fn*);
inline jule::Bool _20d3a386b_IsInit(_20d3a2b45_Fn*);
inline jule::Bool _20d3a3b02_IsAnon(_20d3a2b45_Fn*);
inline jule::Bool _20d3a3d88_AnyVar(_20d3a2b45_Fn*);
inline jule::Ptr<_20d3a5a49_FnIns> _20d3a411e_instanceForce(jule::Ptr<_20d3a2b45_Fn>);
inline jule::Ptr<_20d3a5a49_FnIns> _20d3a43a5_instance(jule::Ptr<_20d3a2b45_Fn>);
inline jule::Ptr<_20d3a5a49_FnIns> _20d3a46b3_appendInstance(_20d3a2b45_Fn*, jule::Ptr<_20d3a5a49_FnIns>*);
inline jule::Str _20d3a4e11_Str(_20d3a4a9d_ParamIns*);
inline jule::Str _20d3a5d8a_Str(_20d3a5a49_FnIns*);
inline jule::Bool _20d3a61cb_Equal(jule::Ptr<_20d3a5a49_FnIns>, jule::Ptr<_20d4de28c_TypeKind>);
inline jule::Bool _20d3a6671_EqualFn(jule::Ptr<_20d3a5a49_FnIns>, jule::Ptr<_20d3a5a49_FnIns>*);
inline jule::Bool _20d3a69b2_equalTrait(jule::Ptr<_20d3a5a49_FnIns>, jule::Ptr<_20d3a5a49_FnIns>*);
inline jule::Slice<jule::Ptr<_20d4de28c_TypeKind>> _20d3a6c48_Types(_20d3a5a49_FnIns*);
inline jule::Bool _20d3a6ece_IsBuiltin(_20d3a5a49_FnIns*);
inline jule::Bool _20d3a7265_IsAnon(_20d3a5a49_FnIns*);
inline jule::Bool _20d3a75a6_Same(_20d3a5a49_FnIns*, jule::Ptr<_20d3a5a49_FnIns>);
inline jule::Str _20d3a78e7_GetKindStr(_20d3a5a49_FnIns*, jule::Bool);
inline jule::Ptr<_20d3a8be5_ReferenceStack> static__20d3a8ee2_new(void);
inline jule::I64 _20d3a93dd_Len(_20d3a8be5_ReferenceStack*);
inline jule::Any _20d3a972e_At(_20d3a8be5_ReferenceStack*, jule::I64);
inline void _20d3a99d7_Push(_20d3a8be5_ReferenceStack*, jule::Any);
inline jule::Bool _211eb57a9_Exist(_20d3a8be5_ReferenceStack*, jule::Ptr<_20d3a5a49_FnIns>);
inline jule::Bool _211ecd074_Exist(_20d3a8be5_ReferenceStack*, jule::Ptr<_20d458aca_Var>);
inline jule::Bool _212093b2e_Exist(_20d3a8be5_ReferenceStack*, jule::Ptr<_20d39066b_StructIns>);
inline jule::Bool _2123ca3a5_Exist(_20d3a8be5_ReferenceStack*, jule::Ptr<_20d3b5dde_Trait>);
inline void _20d3b0669_pushErr(_20d3aecc8_symbolBuilder*, jule::Ptr<_20d3510bb_Token>*, jule::Str, jule::Slice<jule::Any>);
inline void _20d3b0dea_pushSuggestion(_20d3aecc8_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _20d3b12e6_checkCppUseDeclPath(_20d3aecc8_symbolBuilder*, jule::Ptr<_20d384819_UseDecl>*, jule::Str*);
inline jule::Ptr<_20d414d94_ImportInfo> _20d3b1604_buildCppHeaderImport(_20d3aecc8_symbolBuilder*, jule::Ptr<_20d384819_UseDecl>*);
inline jule::Ptr<_20d414d94_ImportInfo> _20d3b1945_buildStdImport(_20d3aecc8_symbolBuilder*, jule::Ptr<_20d384819_UseDecl>*);
inline jule::Ptr<_20d414d94_ImportInfo> _20d3b1c86_buildIdentImport(jule::Ptr<_20d3aecc8_symbolBuilder>, jule::Ptr<_20d384819_UseDecl>*);
inline jule::Ptr<_20d414d94_ImportInfo> _20d3b20c7_buildImport(jule::Ptr<_20d3aecc8_symbolBuilder>, jule::Ptr<_20d384819_UseDecl>*);
inline jule::Bool _20d3b2418_checkDuplicateUseDecl(_20d3aecc8_symbolBuilder*, jule::Ptr<_20d414d94_ImportInfo>*);
inline void _20d3b277b_implImportSelections(_20d3aecc8_symbolBuilder*, jule::Ptr<_20d414d94_ImportInfo>*, jule::Ptr<_20d384819_UseDecl>*);
inline jule::Str _20d3b2abc_getAsLinkPath(jule::Ptr<_20d3aecc8_symbolBuilder>, jule::Str);
inline void _20d3b2eda_pushCycleError(jule::Ptr<_20d3aecc8_symbolBuilder>, jule::Ptr<_20d3aecc8_symbolBuilder>*, jule::Str, _2240a0ad5_StrBuilder*);
inline void _20d3b3408_pushCrossCycleError(jule::Ptr<_20d3aecc8_symbolBuilder>, jule::Ptr<_20d3aecc8_symbolBuilder>*, jule::Ptr<_20d414d94_ImportInfo>*, jule::Ptr<_20d3510bb_Token>*);
inline jule::Bool _20d3b3804_checkImportCycles(jule::Ptr<_20d3aecc8_symbolBuilder>, jule::Ptr<_20d414d94_ImportInfo>, jule::Ptr<_20d384819_UseDecl>*);
inline void _20d3b3c22_checkPackageAccessibility(_20d3aecc8_symbolBuilder*, jule::Ptr<_20d384819_UseDecl>*, jule::Str*, jule::Str*);
inline jule::Bool _20d3b411d_importPackage(jule::Ptr<_20d3aecc8_symbolBuilder>, jule::Ptr<_20d414d94_ImportInfo>*, jule::Ptr<_20d384819_UseDecl>*);
inline jule::Ptr<_20d414d94_ImportInfo> _20d3b445e_importUseDecl(jule::Ptr<_20d3aecc8_symbolBuilder>, jule::Ptr<_20d384819_UseDecl>*);
inline void _20d3b465c_importUseDecls(jule::Ptr<_20d3aecc8_symbolBuilder>);
inline void _20d3b4915_appendNode(_20d3aecc8_symbolBuilder*, _20d36a998_Node*);
inline void _20d3b4b13_appendNodes(_20d3aecc8_symbolBuilder*);
inline void _20d3b4dbb_pushDirectivePass(_20d3aecc8_symbolBuilder*, jule::Ptr<_20d36adb6_Directive>*);
inline void _20d3b50b9_appendTopDirectives(_20d3aecc8_symbolBuilder*);
inline void _20d3b52b7_build(jule::Ptr<_20d3aecc8_symbolBuilder>);
inline jule::Str _20d3b62a7_Str(_20d3b5dde_Trait*);
inline jule::Bool _20d3b65e8_Equal(jule::Ptr<_20d3b5dde_Trait>, jule::Ptr<_20d4de28c_TypeKind>);
inline jule::Ptr<_20d3a2b45_Fn> _20d3b6a8d_FindMethod(_20d3b5dde_Trait*, jule::Str);
inline jule::Ptr<_20d3a2b45_Fn> _20d3b7220_findMethodInherit(_20d3b5dde_Trait*, jule::Str*);
inline jule::Bool _20d3b7e24_AutoExpr(_20d3b7a6c_EnumItem*);
inline jule::Str _20d3b895d_Str(_20d3b85d9_Enum*);
inline jule::Bool _20d3b8c9e_Equal(jule::Ptr<_20d3b85d9_Enum>, jule::Ptr<_20d4de28c_TypeKind>);
inline jule::Ptr<_20d3b7a6c_EnumItem> _20d3b91cd_FindItem(_20d3b85d9_Enum*, jule::Str);
inline jule::Str _20d3ba135_Str(_20d3b9ce4_TypeEnum*);
inline jule::Bool _20d3ba476_Equal(jule::Ptr<_20d3b9ce4_TypeEnum>, jule::Ptr<_20d4de28c_TypeKind>);
inline jule::Ptr<_20d3b971c_TypeEnumItem> _20d3ba8a5_FindItem(_20d3b9ce4_TypeEnum*, jule::Str);
inline jule::Str _20d3bc555_Str(_20d3bc18c_comptimeRange*);
inline jule::Bool _20d3bc896_Equal(jule::Ptr<_20d3bc18c_comptimeRange>, jule::Ptr<_20d4de28c_TypeKind>);
inline jule::Str _20d3bd06c_Str(_20d3bcbe8_comptimeStructField*);
inline jule::Bool _20d3bd3ad_Equal(jule::Ptr<_20d3bcbe8_comptimeStructField>, jule::Ptr<_20d4de28c_TypeKind>);
inline jule::Ptr<_20d087165_Data> _20d3bd8ca__Name(jule::Ptr<_20d3bcbe8_comptimeStructField>, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*);
inline jule::Ptr<_20d087165_Data> _20d3bdcc6__Type(jule::Ptr<_20d3bcbe8_comptimeStructField>, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*);
inline jule::Ptr<_20d087165_Data> _20d3be1c2__Public(jule::Ptr<_20d3bcbe8_comptimeStructField>, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*);
inline jule::Ptr<_20d087165_Data> _20d3be513_subIdent(jule::Ptr<_20d3bcbe8_comptimeStructField>, jule::Str*);
inline jule::Str _20d3bec2d_Str(_20d3be898_comptimeStructFields*);
inline jule::Bool _20d3c006e_Equal(jule::Ptr<_20d3be898_comptimeStructFields>, jule::Ptr<_20d4de28c_TypeKind>);
inline void _20d3c04e2_ready(_20d3be898_comptimeStructFields*, jule::Ptr<_20d458aca_Var>*, jule::Ptr<_20d458aca_Var>*);
inline void _20d3c0910_step(_20d3be898_comptimeStructFields*, jule::I64, jule::Ptr<_20d458aca_Var>*, jule::Ptr<_20d458aca_Var>*);
inline jule::I64 _20d3c0b96_len(_20d3be898_comptimeStructFields*);
inline jule::Str _20d3c1328_Str(_20d3c0ea4_comptimeStatic*);
inline jule::Bool _20d3c1669_Equal(jule::Ptr<_20d3c0ea4_comptimeStatic>, jule::Ptr<_20d4de28c_TypeKind>);
inline jule::Ptr<_20d087165_Data> _20d3c1b86__Name(jule::Ptr<_20d3c0ea4_comptimeStatic>, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*);
inline jule::Ptr<_20d087165_Data> _20d3c2082__Type(jule::Ptr<_20d3c0ea4_comptimeStatic>, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*);
inline jule::Ptr<_20d087165_Data> _20d3c247d__Public(jule::Ptr<_20d3c0ea4_comptimeStatic>, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*);
inline jule::Ptr<_20d087165_Data> _20d3c27be_subIdent(jule::Ptr<_20d3c0ea4_comptimeStatic>, jule::Str*);
inline jule::Str _20d3c2ed9_Str(_20d3c2b65_comptimeStatics*);
inline jule::Bool _20d3c332a_Equal(jule::Ptr<_20d3c2b65_comptimeStatics>, jule::Ptr<_20d4de28c_TypeKind>);
inline void _20d3c379d_ready(_20d3c2b65_comptimeStatics*, jule::Ptr<_20d458aca_Var>*, jule::Ptr<_20d458aca_Var>*);
inline void _20d3c3bbb_step(_20d3c2b65_comptimeStatics*, jule::I64, jule::Ptr<_20d458aca_Var>*, jule::Ptr<_20d458aca_Var>*);
inline jule::I64 _20d3c3e52_len(_20d3c2b65_comptimeStatics*);
inline jule::Str _20d3c45d4_Str(_20d3c4260_comptimeEnumField*);
inline jule::Bool _20d3c4925_Equal(jule::Ptr<_20d3c4260_comptimeEnumField>, jule::Ptr<_20d4de28c_TypeKind>);
inline jule::Ptr<_20d087165_Data> _20d3c4e20__Name(jule::Ptr<_20d3c4260_comptimeEnumField>, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*);
inline jule::Ptr<_20d087165_Data> _20d3c5261_subIdent(jule::Ptr<_20d3c4260_comptimeEnumField>, jule::Str*);
inline jule::Str _20d3c5a03_Str(_20d3c556e_comptimeEnumFields*);
inline jule::Bool _20d3c5d44_Equal(jule::Ptr<_20d3c556e_comptimeEnumFields>, jule::Ptr<_20d4de28c_TypeKind>);
inline void _20d3c6240_ready(_20d3c556e_comptimeEnumFields*, jule::Ptr<_20d458aca_Var>*, jule::Ptr<_20d458aca_Var>*);
inline void _20d3c665d_step(_20d3c556e_comptimeEnumFields*, jule::I64, jule::Ptr<_20d458aca_Var>*, jule::Ptr<_20d458aca_Var>*);
inline jule::I64 _20d3c68e4_len(_20d3c556e_comptimeEnumFields*);
inline jule::Str _20d3c7076_Str(_20d3c6c02_comptimeParam*);
inline jule::Bool _20d3c73b7_Equal(jule::Ptr<_20d3c6c02_comptimeParam>, jule::Ptr<_20d4de28c_TypeKind>);
inline jule::Ptr<_20d087165_Data> _20d3c78e5__Name(jule::Ptr<_20d3c6c02_comptimeParam>, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*);
inline jule::Ptr<_20d087165_Data> _20d3c7ce1__Type(jule::Ptr<_20d3c6c02_comptimeParam>, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*);
inline jule::Ptr<_20d087165_Data> _20d3c81dc__Variadic(jule::Ptr<_20d3c6c02_comptimeParam>, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*);
inline jule::Ptr<_20d087165_Data> _20d3c85d8__Reference(jule::Ptr<_20d3c6c02_comptimeParam>, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*);
inline jule::Ptr<_20d087165_Data> _20d3c8929_subIdent(jule::Ptr<_20d3c6c02_comptimeParam>, jule::Str*);
inline jule::Str _20d3c92dc_Str(_20d3c8e68_comptimeParams*);
inline jule::Bool _20d3c962d_Equal(jule::Ptr<_20d3c8e68_comptimeParams>, jule::Ptr<_20d4de28c_TypeKind>);
inline void _20d3c9aa1_ready(_20d3c8e68_comptimeParams*, jule::Ptr<_20d458aca_Var>*, jule::Ptr<_20d458aca_Var>*);
inline void _20d3c9ebe_step(_20d3c8e68_comptimeParams*, jule::I64, jule::Ptr<_20d458aca_Var>*, jule::Ptr<_20d458aca_Var>*);
inline jule::I64 _20d3ca255_len(_20d3c8e68_comptimeParams*);
inline jule::Str _20d3ca8d7_Str(_20d3ca563_comptimeTypeInfos*);
inline jule::Bool _20d3cac28_Equal(jule::Ptr<_20d3ca563_comptimeTypeInfos>, jule::Ptr<_20d4de28c_TypeKind>);
inline void _20d3cb19b_ready(_20d3ca563_comptimeTypeInfos*, jule::Ptr<_20d458aca_Var>*, jule::Ptr<_20d458aca_Var>*);
inline void _20d3cb5b9_step(_20d3ca563_comptimeTypeInfos*, jule::I64, jule::Ptr<_20d458aca_Var>*, jule::Ptr<_20d458aca_Var>*);
inline jule::I64 _20d3cb850_len(_20d3ca563_comptimeTypeInfos*);
inline jule::Str _20d3cbed2_Str(_20d3cbb5d_comptimeTypeInfo*);
inline jule::Bool _20d3cc323_Equal(jule::Ptr<_20d3cbb5d_comptimeTypeInfo>, jule::Ptr<_20d4de28c_TypeKind>);
inline jule::Ptr<_20d087165_Data> _20d3cc972__Str(jule::Ptr<_20d3cbb5d_comptimeTypeInfo>, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*);
inline jule::Ptr<_20d087165_Data> _20d3ccd6d__Kind(jule::Ptr<_20d3cbb5d_comptimeTypeInfo>, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*);
inline jule::Ptr<_20d087165_Data> _20d3cd269__Bits(jule::Ptr<_20d3cbb5d_comptimeTypeInfo>, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*);
inline jule::Ptr<_20d087165_Data> _20d3cd665__Elem(jule::Ptr<_20d3cbb5d_comptimeTypeInfo>, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*);
inline jule::Ptr<_20d087165_Data> _20d3cda61__Size(jule::Ptr<_20d3cbb5d_comptimeTypeInfo>, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*);
inline jule::Ptr<_20d087165_Data> _20d3cde5c__Key(jule::Ptr<_20d3cbb5d_comptimeTypeInfo>, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*);
inline jule::Ptr<_20d087165_Data> _20d3ce358__Value(jule::Ptr<_20d3cbb5d_comptimeTypeInfo>, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*);
inline jule::Ptr<_20d087165_Data> _20d3ce754__Fields(jule::Ptr<_20d3cbb5d_comptimeTypeInfo>, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*);
inline jule::Ptr<_20d087165_Data> _20d3ceb50__Statics(jule::Ptr<_20d3cbb5d_comptimeTypeInfo>, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*);
inline jule::Ptr<_20d087165_Data> _20d3d004b__Public(jule::Ptr<_20d3cbb5d_comptimeTypeInfo>, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*);
inline jule::Ptr<_20d087165_Data> _20d3d0447__Binded(jule::Ptr<_20d3cbb5d_comptimeTypeInfo>, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*);
inline jule::Ptr<_20d087165_Data> _20d3d0843__Ordered(jule::Ptr<_20d3cbb5d_comptimeTypeInfo>, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*);
inline jule::Ptr<_20d087165_Data> _20d3d0c3e__Comparable(jule::Ptr<_20d3cbb5d_comptimeTypeInfo>, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*);
inline jule::Ptr<_20d087165_Data> _20d3d113a__Mutable(jule::Ptr<_20d3cbb5d_comptimeTypeInfo>, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*);
inline jule::Ptr<_20d087165_Data> _20d3d1536__Types(jule::Ptr<_20d3cbb5d_comptimeTypeInfo>, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*);
inline jule::Ptr<_20d087165_Data> _20d3d1932__Exceptional(jule::Ptr<_20d3cbb5d_comptimeTypeInfo>, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*);
inline jule::Ptr<_20d087165_Data> _20d3d1d2d__CanNil(jule::Ptr<_20d3cbb5d_comptimeTypeInfo>, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*);
inline jule::Ptr<_20d087165_Data> _20d3d2229__RC(jule::Ptr<_20d3cbb5d_comptimeTypeInfo>, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*);
inline jule::Ptr<_20d087165_Data> _20d3d2625__Result(jule::Ptr<_20d3cbb5d_comptimeTypeInfo>, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*);
inline jule::Ptr<_20d087165_Data> _20d3d2a21__Params(jule::Ptr<_20d3cbb5d_comptimeTypeInfo>, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*);
inline jule::Ptr<_20d087165_Data> _20d3d2d62_subIdent(jule::Ptr<_20d3cbb5d_comptimeTypeInfo>, jule::Str*);
inline jule::Str _20d3d34e4_Str(_20d3d3170_comptimeValue*);
inline jule::Bool _20d3d3835_Equal(jule::Ptr<_20d3d3170_comptimeValue>, jule::Ptr<_20d4de28c_TypeKind>);
inline jule::Ptr<_20d087165_Data> _20d3d3d85__Unwrap(jule::Ptr<_20d3d3170_comptimeValue>, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*);
inline jule::Ptr<_20d087165_Data> _20d3d4281__Type(jule::Ptr<_20d3d3170_comptimeValue>, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*);
inline jule::Ptr<_20d087165_Data> _20d3d467c__Lvalue(jule::Ptr<_20d3d3170_comptimeValue>, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*);
inline jule::Ptr<_20d087165_Data> _20d3d4a78__Mutable(jule::Ptr<_20d3d3170_comptimeValue>, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*);
inline jule::Ptr<_20d087165_Data> _20d3d4e74__Const(jule::Ptr<_20d3d3170_comptimeValue>, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*);
inline jule::Ptr<_20d087165_Data> _20d3d5370__Field(jule::Ptr<_20d3d3170_comptimeValue>, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*);
inline jule::Ptr<_20d087165_Data> _20d3d56b1_subIdent(jule::Ptr<_20d3d3170_comptimeValue>, jule::Str*);
inline jule::Str _20d3d5d43_Str(_20d3d59be_comptimeFiles*);
inline jule::Bool _20d3d6184_Equal(jule::Ptr<_20d3d59be_comptimeFiles>, jule::Ptr<_20d4de28c_TypeKind>);
inline void _20d3d6607_ready(_20d3d59be_comptimeFiles*, jule::Ptr<_20d458aca_Var>*, jule::Ptr<_20d458aca_Var>*);
inline void _20d3d6a25_step(_20d3d59be_comptimeFiles*, jule::I64, jule::Ptr<_20d458aca_Var>*, jule::Ptr<_20d458aca_Var>*);
inline jule::I64 _20d3d6cab_len(_20d3d59be_comptimeFiles*);
inline jule::Str _20d3d743d_Str(_20d3d70b9_comptimeFile*);
inline jule::Bool _20d3d777e_Equal(jule::Ptr<_20d3d70b9_comptimeFile>, jule::Ptr<_20d4de28c_TypeKind>);
inline jule::Ptr<_20d087165_Data> _20d3d7c9b__Path(jule::Ptr<_20d3d70b9_comptimeFile>, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*);
inline jule::Ptr<_20d087165_Data> _20d3d8197__Name(jule::Ptr<_20d3d70b9_comptimeFile>, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*);
inline jule::Ptr<_20d087165_Data> _20d3d8593__Dir(jule::Ptr<_20d3d70b9_comptimeFile>, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*);
inline jule::Ptr<_20d087165_Data> _20d3d88d4_subIdent(jule::Ptr<_20d3d70b9_comptimeFile>, jule::Str*);
inline jule::Fn<jule::Bool(jule::Ptr<_20d435de8_Sema>*,jule::Slice<jule::Ptr<_20d4dd49a_TypeAlias>>*)> _20d3db62e_readyFn(jule::Ptr<_20d3db233_constraintChecker>);
inline jule::Bool _20d3db8b5_readyFi(jule::Ptr<_20d3db233_constraintChecker>);
inline jule::Bool _20d3dbb4b_readySi(jule::Ptr<_20d3db233_constraintChecker>);
inline jule::Bool _20d3dbdd2_ready(jule::Ptr<_20d3db233_constraintChecker>);
inline jule::Bool _20d3dc168_check(jule::Ptr<_20d3db233_constraintChecker>);
inline jule::Bool _20d3dd631_IsTraitImpl(_20d3dd268_Impl*);
inline jule::Bool _20d3dd8b7_IsStructImpl(_20d3dd268_Impl*);
inline jule::Ptr<_20d414d94_ImportInfo> _20d3eae46_SelectPackage(_20d3ea9a1_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_20d414d94_ImportInfo>)>);
inline jule::Ptr<_20d458aca_Var> _20d3eb342_FindVar(_20d3ea9a1_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_20d4dd49a_TypeAlias> _20d3eb73d_FindTypeAlias(_20d3ea9a1_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_20d38c58b_Struct> _20d3ebb39_FindStruct(_20d3ea9a1_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_20d3a2b45_Fn> _20d3ec035_FindFn(_20d3ea9a1_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_20d3b5dde_Trait> _20d3ec376_FindTrait(_20d3ea9a1_scopeChecker*, jule::Str);
inline jule::Ptr<_20d3b85d9_Enum> _20d3ec6b7_FindEnum(_20d3ea9a1_scopeChecker*, jule::Str);
inline jule::Ptr<_20d3b9ce4_TypeEnum> _20d3eca08_FindTypeEnum(_20d3ea9a1_scopeChecker*, jule::Str);
inline jule::Bool _20d3ecd5a_isUnsafe(jule::Ptr<_20d3ea9a1_scopeChecker>);
inline jule::Bool _20d3ed0e1_isRoot(_20d3ea9a1_scopeChecker*);
inline void _20d3ed2de_stop(_20d3ea9a1_scopeChecker*);
inline jule::Bool _20d3ed575_stopped(_20d3ea9a1_scopeChecker*);
inline jule::Bool _20d3ed80b_isDeferred(jule::Ptr<_20d3ea9a1_scopeChecker>);
inline jule::Ptr<_20d3ea9a1_scopeChecker> _20d3eda92_getRoot(jule::Ptr<_20d3ea9a1_scopeChecker>);
inline jule::Ptr<_20d3ea9a1_scopeChecker> _20d3edd28_getHardRoot(jule::Ptr<_20d3ea9a1_scopeChecker>);
inline jule::Ptr<_20d3e6040_Label> _20d3ee169_findLabel(_20d3ea9a1_scopeChecker*, jule::Str*);
inline jule::Ptr<_20d3e950a_scopeLabel> _20d3ee4aa_findLabelScope(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Str*);
inline jule::Ptr<_20d3e950a_scopeLabel> _20d3ee7eb_findLabelAll(_20d3ea9a1_scopeChecker*, jule::Str*);
inline jule::Bool _20d3eebe7_isDuplicatedIdent(_20d3ea9a1_scopeChecker*, jule::Uintptr, jule::Str*);
inline void _20d3eeea0_checkVarDecl(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d37e737_VarDecl>);
inline void _20d400258_checkTypeAlias(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d4dd49a_TypeAlias>*);
inline void _20d400511_checkTypeAliasDecl(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d38330c_TypeAliasDecl>);
inline jule::Ptr<_20d3e369c_Scope> _20d400797_getChild(_20d3ea9a1_scopeChecker*);
inline void _20d400bb5_checkChildSsc(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d37b9ba_ScopeTree>*, jule::Ptr<_20d3e369c_Scope>*, jule::Ptr<_20d3ea9a1_scopeChecker>*);
inline jule::Ptr<_20d3e369c_Scope> _20d4010b1_checkChildSc(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d37b9ba_ScopeTree>*, jule::Ptr<_20d3ea9a1_scopeChecker>*);
inline jule::Ptr<_20d3e369c_Scope> _20d401402_checkChild(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d37b9ba_ScopeTree>*);
inline void _20d4016aa_checkAnonScope(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d37b9ba_ScopeTree>);
inline void _20d401a1d_processErrorCall(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d39d9a9_BuiltinErrorCallExprModel>*, jule::Ptr<_20d3510bb_Token>);
inline void _20d401cc6_checkExpr(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d370ccd_Expr>);
inline jule::Ptr<_20d3e3aba_If> _20d402117_checkIf(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d382240_If>);
inline jule::Ptr<_20d3e3db7_Else> _20d402458_checkElse(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d382619_Else>);
inline void _20d402711_checkConditional(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d382ac0_Conditional>);
inline void _20d402bd9_checkIterScopeSsc(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Uintptr, jule::Ptr<_20d37b9ba_ScopeTree>, jule::Ptr<_20d3e369c_Scope>*, jule::Ptr<_20d3ea9a1_scopeChecker>);
inline jule::Ptr<_20d3e369c_Scope> _20d403190_checkIterScopeSc(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Uintptr, jule::Ptr<_20d37b9ba_ScopeTree>, jule::Ptr<_20d3ea9a1_scopeChecker>);
inline jule::Ptr<_20d3e369c_Scope> _20d40358b_checkIterScope(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Uintptr, jule::Ptr<_20d37b9ba_ScopeTree>*);
inline void _20d403844_checkInfIter(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d3802a4_Iter>*);
inline void _20d403aec_checkWhileIter(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d3802a4_Iter>*);
inline void _20d40401a_checkComptimeRangeIter(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d3802a4_Iter>*, jule::Ptr<_20d3e54d4_RangeIter>*, jule::Ptr<_20d087165_Data>*);
inline void _20d4042c3_checkRangeIter(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d3802a4_Iter>*);
inline void _20d40457b_checkIter(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d3802a4_Iter>);
inline jule::Bool _20d4048bc_checkValidContLabel(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Uintptr);
inline jule::Bool _20d404c0d_checkValidBreakLabel(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_20d3e5869_ContSt> _20d40504e_checkContValidScope(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d381c89_ContSt>);
inline void _20d405307_checkCont(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d381c89_ContSt>);
inline void _20d4055b0_checkLabel(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d37907d_LabelSt>);
inline void _20d405868_pushGoto(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d379457_GotoSt>);
inline void _20d405b21_checkPostfix(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d37a447_AssignSt>);
inline jule::Bool _20d405e62_isNewAssignIdent(_20d3ea9a1_scopeChecker*, jule::Str);
inline void _20d40621a_removeInteriorMutRisk(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d087165_Data>*);
inline jule::Bool _20d4066c1_checkStructureAssignOp(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d39066b_StructIns>*, jule::Ptr<_20d37a447_AssignSt>*, jule::Ptr<_20d087165_Data>*);
inline void _20d406979_checkSingleAssign(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d37a447_AssignSt>*);
inline void _20d40700c_processEndPartOfMultiAssign(_20d3ea9a1_scopeChecker*, jule::Ptr<_20d3e7173_MultiAssign>*, jule::Ptr<_20d37a447_AssignSt>*, jule::Ptr<_20d379db4_AssignLeft>*, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d087165_Data>*);
inline void _20d4072b5_checkMultiAssign(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d37a447_AssignSt>*);
inline void _20d40756d_singleDeclAssign(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d37a447_AssignSt>*);
inline void _20d407826_checkAssignSt(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d37a447_AssignSt>);
inline jule::Ptr<_20d3e369c_Scope> _20d407c22_checkCaseScope(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d3e841b_Case>*, jule::Ptr<_20d37b9ba_ScopeTree>*);
inline jule::Ptr<_20d3e841b_Case> _20d408283_checkCase(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d3e77d3_Match>, jule::I64, jule::Ptr<_20d3837b3_Case>, jule::Ptr<_20d087165_Data>);
inline void _20d4086a1_checkCases(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d384000_MatchCase>*, jule::Ptr<_20d3e77d3_Match>, jule::Ptr<_20d087165_Data>);
inline jule::Ptr<_20d3e841b_Case> _20d408a9c_checkDefault(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d3e77d3_Match>, jule::Ptr<_20d382619_Else>);
inline void _20d408e10_checkComptimePanic(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d3510bb_Token>, jule::Ptr<_20d3e369c_Scope>*);
inline void _20d409273_processConstMatch(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d3e77d3_Match>*, jule::Ptr<_20d384000_MatchCase>*);
inline void _20d40952b_checkTypeMatch(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d384000_MatchCase>*);
inline void _20d4097d4_checkCommonMatch(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d384000_MatchCase>*);
inline void _20d409a8c_checkMatch(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d384000_MatchCase>);
inline void _20d409d45_checkFall(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d379754_FallSt>);
inline jule::Ptr<_20d3e5c43_BreakSt> _20d40a186_checkBreakWithLabel(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d3818b0_BreakSt>);
inline jule::Ptr<_20d3e5c43_BreakSt> _20d40a4c7_checkPlainBreak(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d3818b0_BreakSt>);
inline void _20d40a780_checkBreak(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d3818b0_BreakSt>);
inline void _20d40aa38_checkRet(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d37eb11_RetSt>);
inline void _20d40ace1_checkUseExpr(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d3716a2_UseExpr>);
inline void _20d40b099_checkNode(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Any*);
inline void _20d40b297_checkResult(jule::Ptr<_20d3ea9a1_scopeChecker>);
inline void _20d40b495_checkTree(jule::Ptr<_20d3ea9a1_scopeChecker>);
inline void _20d40b808_checkGoto(_20d3ea9a1_scopeChecker*, jule::Ptr<_20d3e9a8d_scopeGoto>*, jule::Ptr<_20d3e950a_scopeLabel>*);
inline void _20d40ba06_checkGotos(_20d3ea9a1_scopeChecker*);
inline void _20d40bc04_checkLabels(_20d3ea9a1_scopeChecker*);
inline void _20d40be02_checkVars(_20d3ea9a1_scopeChecker*);
inline void _20d40c100_checkAliases(_20d3ea9a1_scopeChecker*);
inline void _20d40c463_check(jule::Ptr<_20d3ea9a1_scopeChecker>, jule::Ptr<_20d37b9ba_ScopeTree>*, jule::Ptr<_20d3e369c_Scope>*);
inline jule::Ptr<_20d3ea9a1_scopeChecker> _20d40c6e9_newChildChecker(jule::Ptr<_20d3ea9a1_scopeChecker>);
inline void _20d40da6e_checkCdef(_20d40d651_directiveChecker*, jule::Ptr<_20d36adb6_Directive>*);
inline void _20d40dd27_checkTypedef(_20d40d651_directiveChecker*, jule::Ptr<_20d36adb6_Directive>*);
inline void _20d40e0d0_checkDerive(_20d40d651_directiveChecker*, jule::Ptr<_20d36adb6_Directive>*);
inline void _20d40e388_checkNamespace(_20d40d651_directiveChecker*, jule::Ptr<_20d36adb6_Directive>*);
inline void _20d40e641_checkDeprecated(_20d40d651_directiveChecker*, jule::Ptr<_20d36adb6_Directive>*);
inline void _20d40e8e9_checkTest(_20d40d651_directiveChecker*, jule::Ptr<_20d36adb6_Directive>*);
inline void _20d40eba2_checkDirective(_20d40d651_directiveChecker*, jule::Ptr<_20d36adb6_Directive>*);
inline void _20d40eda0_check(_20d40d651_directiveChecker*);
inline jule::Ptr<_20d414d94_ImportInfo> _20d41537d_SelectPackage(_20d414d94_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_20d414d94_ImportInfo>)>);
inline jule::Ptr<_20d458aca_Var> _20d415779_FindVar(_20d414d94_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_20d4dd49a_TypeAlias> _20d415b75_FindTypeAlias(_20d414d94_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_20d38c58b_Struct> _20d416071_FindStruct(_20d414d94_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_20d3a2b45_Fn> _20d41646c_FindFn(_20d414d94_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_20d3b5dde_Trait> _20d4167ad_FindTrait(_20d414d94_ImportInfo*, jule::Str);
inline jule::Ptr<_20d3b85d9_Enum> _20d416aee_FindEnum(_20d414d94_ImportInfo*, jule::Str);
inline jule::Ptr<_20d3b9ce4_TypeEnum> _20d416e40_FindTypeEnum(_20d414d94_ImportInfo*, jule::Str);
inline jule::Bool _20d4173d5_isLookupable(_20d414d94_ImportInfo*, jule::Str*);
inline jule::Bool _20d417726_existIdent(_20d414d94_ImportInfo*, jule::Str);
inline jule::Bool _20d4179ac_isAccessibleViaSelection(_20d414d94_ImportInfo*);
inline jule::Ptr<_20d414d94_ImportInfo> _20d418260_SelectPackage(_20d417cba_Package*, jule::Fn<jule::Bool(jule::Ptr<_20d414d94_ImportInfo>)>);
inline jule::Ptr<_20d458aca_Var> _20d41865b_FindVar(_20d417cba_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_20d4dd49a_TypeAlias> _20d418a57_FindTypeAlias(_20d417cba_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_20d38c58b_Struct> _20d418e53_FindStruct(_20d417cba_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_20d3a2b45_Fn> _20d41934e_FindFn(_20d417cba_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_20d3b5dde_Trait> _20d419690_FindTrait(_20d417cba_Package*, jule::Str);
inline jule::Ptr<_20d3b85d9_Enum> _20d4199d1_FindEnum(_20d417cba_Package*, jule::Str);
inline jule::Ptr<_20d3b9ce4_TypeEnum> _20d419d22_FindTypeEnum(_20d417cba_Package*, jule::Str);
inline jule::Ptr<_20d3cbb5d_comptimeTypeInfo> _20d435733_pushComptimeTypeInfo(_20d4352c1_commonSemaMeta*, jule::Ptr<_20d4de28c_TypeKind>*);
inline jule::Ptr<_20d414d94_ImportInfo> _20d43638d_SelectPackage(_20d435de8_Sema*, jule::Fn<jule::Bool(jule::Ptr<_20d414d94_ImportInfo>)>);
inline jule::Ptr<_20d458aca_Var> _20d436789_FindVar(_20d435de8_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_20d4dd49a_TypeAlias> _20d436b85_FindTypeAlias(_20d435de8_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_20d38c58b_Struct> _20d437081_FindStruct(_20d435de8_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_20d3a2b45_Fn> _20d43747c_FindFn(_20d435de8_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_20d3b5dde_Trait> _20d4377bd_FindTrait(_20d435de8_Sema*, jule::Str);
inline jule::Ptr<_20d3b85d9_Enum> _20d437b0e_FindEnum(_20d435de8_Sema*, jule::Str);
inline jule::Ptr<_20d3b9ce4_TypeEnum> _20d437e50_FindTypeEnum(_20d435de8_Sema*, jule::Str);
inline jule::Bool _20d43835c_isFlag(_20d435de8_Sema*, jule::I64);
inline void _20d438615_setCurrentFile(_20d435de8_Sema*, jule::Ptr<_20d081e40_SymbolTable>);
inline void _20d438a33_pushErr(_20d435de8_Sema*, jule::Ptr<_20d3510bb_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _20d438d96_pushSuggestion(_20d435de8_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _20d439292_isAccessibleDefine(_20d435de8_Sema*, jule::Bool, jule::Ptr<_20d3510bb_Token>);
inline jule::Bool _20d439748_isDuplicatedIdent(_20d435de8_Sema*, jule::Uintptr, jule::Str*, jule::Bool);
inline void _20d439aab_checkDirectives(jule::Ptr<_20d435de8_Sema>, jule::Slice<jule::Ptr<_20d36adb6_Directive>>*, jule::Any);
inline jule::Bool _20d43a062_checkGenericQuantity(_20d435de8_Sema*, jule::I64, jule::I64, jule::Ptr<_20d3510bb_Token>);
inline jule::Bool _20d43a45d_isDuplicatedImportSelection(_20d435de8_Sema*, jule::Uintptr, jule::Str*);
inline jule::Any _20d43a859_getImportDef(_20d435de8_Sema*, jule::Str*, jule::Ptr<_20d414d94_ImportInfo>*);
inline jule::Bool _211a6c76d_checkImportSelection(_20d435de8_Sema*, jule::Ptr<_20d3510bb_Token>*, jule::Ptr<_20d458aca_Var>*);
inline jule::Bool _211a718b5_checkImportSelection(_20d435de8_Sema*, jule::Ptr<_20d3510bb_Token>*, jule::Ptr<_20d4dd49a_TypeAlias>*);
inline jule::Bool _211a759b8_checkImportSelection(_20d435de8_Sema*, jule::Ptr<_20d3510bb_Token>*, jule::Ptr<_20d38c58b_Struct>*);
inline jule::Bool _211a79d85_checkImportSelection(_20d435de8_Sema*, jule::Ptr<_20d3510bb_Token>*, jule::Ptr<_20d3b5dde_Trait>*);
inline jule::Bool _211a7de88_checkImportSelection(_20d435de8_Sema*, jule::Ptr<_20d3510bb_Token>*, jule::Ptr<_20d3b85d9_Enum>*);
inline jule::Bool _211a8308b_checkImportSelection(_20d435de8_Sema*, jule::Ptr<_20d3510bb_Token>*, jule::Ptr<_20d3b9ce4_TypeEnum>*);
inline jule::Bool _211a8718e_checkImportSelection(_20d435de8_Sema*, jule::Ptr<_20d3510bb_Token>*, jule::Ptr<_20d3a2b45_Fn>*);
inline jule::Bool _20d43b096_checkImportSelectedSelections(_20d435de8_Sema*, jule::Ptr<_20d414d94_ImportInfo>*);
inline jule::Bool _211a8b869_checkImportsAllSelectionsFromCollection(_20d435de8_Sema*, jule::Slice<jule::Ptr<_20d458aca_Var>>*, jule::Ptr<_20d3510bb_Token>*);
inline jule::Bool _211a8c9ad_checkImportsAllSelectionsFromCollection(_20d435de8_Sema*, jule::Slice<jule::Ptr<_20d4dd49a_TypeAlias>>*, jule::Ptr<_20d3510bb_Token>*);
inline jule::Bool _211a90928_checkImportsAllSelectionsFromCollection(_20d435de8_Sema*, jule::Slice<jule::Ptr<_20d38c58b_Struct>>*, jule::Ptr<_20d3510bb_Token>*);
inline jule::Bool _211a937e9_checkImportsAllSelectionsFromCollection(_20d435de8_Sema*, jule::Slice<jule::Ptr<_20d3a2b45_Fn>>*, jule::Ptr<_20d3510bb_Token>*);
inline jule::Bool _211a96775_checkImportsAllSelectionsFromCollection(_20d435de8_Sema*, jule::Slice<jule::Ptr<_20d3b5dde_Trait>>*, jule::Ptr<_20d3510bb_Token>*);
inline jule::Bool _211a99646_checkImportsAllSelectionsFromCollection(_20d435de8_Sema*, jule::Slice<jule::Ptr<_20d3b85d9_Enum>>*, jule::Ptr<_20d3510bb_Token>*);
inline jule::Bool _211a9c517_checkImportsAllSelectionsFromCollection(_20d435de8_Sema*, jule::Slice<jule::Ptr<_20d3b9ce4_TypeEnum>>*, jule::Ptr<_20d3510bb_Token>*);
inline jule::Bool _20d43b7d3_checkImportAllSelections(_20d435de8_Sema*, jule::Ptr<_20d414d94_ImportInfo>*);
inline jule::Bool _20d43bb24_checkImportSelections(_20d435de8_Sema*, jule::Ptr<_20d414d94_ImportInfo>*);
inline jule::Bool _20d43be65_isUseAliasDuplication(_20d435de8_Sema*, jule::Ptr<_20d414d94_ImportInfo>*);
inline jule::Bool _20d43c2a6_checkImport(_20d435de8_Sema*, jule::Ptr<_20d414d94_ImportInfo>*);
inline void _20d43c4a4_checkImports(_20d435de8_Sema*);
inline void _20d43c6a2_implFileImpls(jule::Ptr<_20d435de8_Sema>);
inline void _20d43c8a0_implImpls(jule::Ptr<_20d435de8_Sema>);
inline void _20d43ca9d_checkEnums(jule::Ptr<_20d435de8_Sema>);
inline void _20d43cc9b_checkFileInherits(jule::Ptr<_20d435de8_Sema>);
inline void _20d43ce99_checkInherits(jule::Ptr<_20d435de8_Sema>);
inline _20d5013e2_typeChecker _20d43d450_typeChecker(jule::Ptr<_20d435de8_Sema>, jule::Trait<_20d50e06a_Lookup>, jule::Slice<jule::Ptr<_20d4dd49a_TypeAlias>>, jule::Ptr<_20d500402_referencer>);
inline jule::Ptr<_20d4de28c_TypeKind> _20d43d9b1_buildTypeWithRefers(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d36b999_TypeDecl>*, jule::Trait<_20d50e06a_Lookup>, jule::Slice<jule::Ptr<_20d4dd49a_TypeAlias>>, jule::Ptr<_20d500402_referencer>);
inline jule::Bool _20d43e022_checkTypeWithRefers(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d4e6706_TypeSymbol>*, jule::Trait<_20d50e06a_Lookup>, jule::Slice<jule::Ptr<_20d4dd49a_TypeAlias>>, jule::Ptr<_20d500402_referencer>);
inline jule::Ptr<_20d3db233_constraintChecker> _20d43e2a8_constraintChecker(jule::Ptr<_20d435de8_Sema>);
inline jule::Bool _20d43e6a4_checkType(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d4e6706_TypeSymbol>*, jule::Trait<_20d50e06a_Lookup>);
inline jule::Ptr<_20d4de28c_TypeKind> _20d43eb5a_buildTypeWithGenerics(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d36b999_TypeDecl>*, jule::Slice<jule::Ptr<_20d4dd49a_TypeAlias>>, jule::Ptr<_20d3a8be5_ReferenceStack>);
inline jule::Ptr<_20d4de28c_TypeKind> _20d4402dc_selectType(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d36b999_TypeDecl>*);
inline jule::Ptr<_20d088d59_Eval> _20d440793_evalpd(jule::Ptr<_20d435de8_Sema>, jule::Trait<_20d50e06a_Lookup>, jule::Ptr<_20d4de28c_TypeKind>, jule::Ptr<_20d458aca_Var>);
inline jule::Ptr<_20d088d59_Eval> _20d440b8e_evalp(jule::Ptr<_20d435de8_Sema>, jule::Trait<_20d50e06a_Lookup>, jule::Ptr<_20d4de28c_TypeKind>);
inline jule::Ptr<_20d088d59_Eval> _20d440ed0_eval(jule::Ptr<_20d435de8_Sema>, jule::Trait<_20d50e06a_Lookup>);
inline jule::Bool _20d441541_checkAssignType(jule::Ptr<_20d435de8_Sema>, jule::Bool, jule::Ptr<_20d4de28c_TypeKind>*, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d3510bb_Token>);
inline jule::Bool _20d4419e7_checkTypeCompatibility(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d4de28c_TypeKind>*, jule::Ptr<_20d4de28c_TypeKind>*, jule::Ptr<_20d3510bb_Token>*);
inline jule::Ptr<_20d4de28c_TypeKind> _20d441e9d_buildNonGenericTypeKind(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d36b999_TypeDecl>*, jule::Slice<jule::Ptr<_20d378ba4_GenericDecl>>*, jule::Slice<jule::Ptr<_20d4de28c_TypeKind>>*);
inline jule::Bool _20d442399_buildFnNonGenericTypeKinds(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d3a5a49_FnIns>*, jule::Slice<jule::Ptr<_20d4de28c_TypeKind>>*);
inline jule::Ptr<_20d3a5a49_FnIns> _20d4426da_getTraitCheckFnKind(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d3a2b45_Fn>*);
inline jule::Bool _20d442b91_checkConstraintsFn(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d3a5a49_FnIns>*, jule::Ptr<_20d3510bb_Token>*, jule::Ptr<_20d3a5a49_FnIns>);
inline jule::Bool _20d443147_checkConstraintsStruct(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d39066b_StructIns>*, jule::Ptr<_20d3510bb_Token>*, jule::Ptr<_20d39066b_StructIns>);
inline jule::Bool _20d443543_fnEnvironment(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d3a5a49_FnIns>*, jule::Fn<jule::Bool(jule::Ptr<_20d435de8_Sema>*,jule::Slice<jule::Ptr<_20d4dd49a_TypeAlias>>*)>);
inline void _20d4437eb_checkFnParamKind(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d3a4a9d_ParamIns>*);
inline jule::Bool _20d443b3c_reloadFnInsTypes(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d3a5a49_FnIns>);
inline jule::Bool _20d4440e3_checkRefValidityForInitExpr(jule::Ptr<_20d435de8_Sema>, jule::Bool, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d3510bb_Token>*);
inline jule::Bool _20d444434_isMutRiskyStruct(_20d435de8_Sema*, jule::Ptr<_20d39066b_StructIns>*);
inline jule::Bool _20d444a50_checkValidityForInitExpr(jule::Ptr<_20d435de8_Sema>, jule::Bool, jule::Bool, jule::Ptr<_20d4de28c_TypeKind>*, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d3510bb_Token>*);
inline jule::Bool _20d444e4b_checkTypeAliasDeclKind(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d4dd49a_TypeAlias>*, jule::Trait<_20d50e06a_Lookup>);
inline void _20d4452ae_checkTypeAliasDecl(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d4dd49a_TypeAlias>*, jule::Trait<_20d50e06a_Lookup>);
inline void _20d445567_checkTypeAliasDeclDup(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d4dd49a_TypeAlias>*);
inline jule::Bool _20d4457ed_checkTypeAliasDecls(jule::Ptr<_20d435de8_Sema>);
inline void _211b555ae_checkEnumItemsDup(_20d435de8_Sema*, jule::Slice<jule::Ptr<_20d3b7a6c_EnumItem>>);
inline void _211b626a9_checkEnumItemsDup(_20d435de8_Sema*, jule::Slice<jule::Ptr<_20d3b971c_TypeEnumItem>>);
inline void _20d445d5e_checkEnumItemsStr(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d3b85d9_Enum>*);
inline void _211b34813_checkEnumItemInt(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d3b85d9_Enum>*, jule::Ptr<_20d4e710d_Prim>*, jule::Ptr<_20d3b7a6c_EnumItem>*, jule::U64*);
inline void _211b45538_checkEnumItemInt(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d3b85d9_Enum>*, jule::Ptr<_20d4e710d_Prim>*, jule::Ptr<_20d3b7a6c_EnumItem>*, jule::I64*);
inline void _211b309da_checkEnumItemsInt1(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d4e710d_Prim>*, jule::Ptr<_20d3b85d9_Enum>*);
inline void _211b3e169_checkEnumItemsInt1(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d4e710d_Prim>*, jule::Ptr<_20d3b85d9_Enum>*);
inline void _20d446a0d_checkEnumItemsInt(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d3b85d9_Enum>*);
inline void _20d446cb6_checkEnumDecl(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d3b85d9_Enum>*);
inline void _20d44706e_checkTypeEnumDecl(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d3b9ce4_TypeEnum>*);
inline jule::Bool _20d447305_checkEnumDecls(jule::Ptr<_20d435de8_Sema>);
inline jule::Bool _20d44758b_checkTypeEnumDecls(jule::Ptr<_20d435de8_Sema>);
inline jule::Bool _20d4478cc_checkDeclGenerics(_20d435de8_Sema*, jule::Slice<jule::Ptr<_20d378ba4_GenericDecl>>*);
inline jule::Bool _20d447c1d_checkFnDeclParamsDup(_20d435de8_Sema*, jule::Ptr<_20d3a2b45_Fn>*);
inline jule::Bool _20d44805e_checkFnDeclResultDup(_20d435de8_Sema*, jule::Ptr<_20d3a2b45_Fn>*);
inline jule::Bool _20d4483a0_checkFnVariadicParam(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d3a2b45_Fn>*);
inline void _20d448658_checkFnDeclPrototype(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d3a2b45_Fn>*);
inline jule::Bool _20d448b0e_catchTraitInheritCycle(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d3b5dde_Trait>, jule::Ptr<_20d3b5dde_Trait>, _2240a0ad5_StrBuilder*);
inline jule::Bool _20d448e50__checkTraitDeclInherits(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d3b5dde_Trait>*);
inline void _20d449208_checkTraitDeclInherits(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d3b5dde_Trait>*);
inline void _20d4494b1_checkTraitDeclMethod(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d3a2b45_Fn>*);
inline void _20d449769_checkTraitDeclMethods(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d3b5dde_Trait>*);
inline void _20d449a22_checkTraitDecl(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d3b5dde_Trait>*);
inline jule::Bool _20d449ca8_checkTraitDecls(jule::Ptr<_20d435de8_Sema>);
inline jule::Bool _20d44a1a4_checkTraitImplMethods(_20d435de8_Sema*, jule::Ptr<_20d3b5dde_Trait>*, jule::Ptr<_20d3dd268_Impl>*);
inline jule::Bool _20d44a5a0_implToStruct(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d38c58b_Struct>*, jule::Ptr<_20d3dd268_Impl>*);
inline void _20d44a858_implTrait(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d3dd268_Impl>*);
inline void _20d44ab11_implStruct(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d3dd268_Impl>*);
inline void _20d44adb9_implImpl(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d3dd268_Impl>*);
inline void _20d44b22c_checkVarDecl(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d458aca_Var>*, jule::Trait<_20d50e06a_Lookup>);
inline void _20d44b4d5_checkGlobalVarDecl(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d458aca_Var>*);
inline jule::Bool _20d44b76b_checkGlobalDecls(jule::Ptr<_20d435de8_Sema>);
inline jule::Bool _20d44bb67_checkStructTraitImpl(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d38c58b_Struct>*, jule::Ptr<_20d3b5dde_Trait>*);
inline jule::Bool _20d44bea8_checkStructImpls(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d38c58b_Struct>*);
inline jule::Bool _20d44c2e9_checkStructFields(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d38c58b_Struct>*);
inline void _20d44c5a2_checkStructDecl(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d38c58b_Struct>*);
inline jule::Bool _20d44c838_checkStructDecls(jule::Ptr<_20d435de8_Sema>);
inline void _20d44cae1_checkAnonFuncDecl(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d3a2b45_Fn>*);
inline void _20d44cd99_checkFuncDecl(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d3a2b45_Fn>*);
inline jule::Bool _20d44d1da_checkFuncDeclsBy(jule::Ptr<_20d435de8_Sema>, jule::Slice<jule::Ptr<_20d3a2b45_Fn>>*);
inline jule::Bool _20d44d471_checkFuncDecls(jule::Ptr<_20d435de8_Sema>);
inline void _20d44d88e_pushCycleError(_20d435de8_Sema*, jule::Str*, jule::Str*, _2240a0ad5_StrBuilder*);
inline jule::Bool _20d44dd45_checkCrossCycle(_20d435de8_Sema*, jule::Ptr<_20d38c58b_Struct>*, jule::Ptr<_20d38c58b_Struct>*, _2240a0ad5_StrBuilder*);
inline jule::Bool _20d44e2eb_checkStructDeriveIllegalCycles(_20d435de8_Sema*, jule::Str, jule::Ptr<_20d38c58b_Struct>*, jule::Ptr<_20d4de28c_TypeKind>*);
inline jule::Bool _20d44e63c_checkStructInsDeriveClone(_20d435de8_Sema*, jule::Ptr<_20d39066b_StructIns>);
inline void _20d44e83a_checkPackageDecls(jule::Ptr<_20d435de8_Sema>);
inline void _20d44eb9d_checkDataForTypeInference(_20d435de8_Sema*, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d3510bb_Token>*);
inline void _20d44ee56_checkVarValue(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d458aca_Var>*);
inline void _20d4502b9_evalVarValue(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d458aca_Var>*, jule::Trait<_20d50e06a_Lookup>);
inline void _20d45062c_checkVar(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d458aca_Var>*, jule::Trait<_20d50e06a_Lookup>);
inline void _20d45082a_checkGlobals(jule::Ptr<_20d435de8_Sema>);
inline jule::Ptr<_20d3a5a49_FnIns> _20d450c26_readyToCheckFn(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d39066b_StructIns>*, jule::Ptr<_20d3a2b45_Fn>*);
inline void _20d451089_checkTypeMethod(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d39066b_StructIns>*, jule::Ptr<_20d3a2b45_Fn>*);
inline jule::Ptr<_20d3a5a49_FnIns> _20d451540_checkStructInsOp(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d39066b_StructIns>*, jule::Ptr<_20d3a2b45_Fn>*, jule::Fn<jule::Bool(jule::Ptr<_20d3a2b45_Fn>)>);
inline jule::Bool _20d45193b_checkStructEnv(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d39066b_StructIns>*, jule::Ptr<_20d3510bb_Token>);
inline jule::Bool _20d451d37_precheckStructIns(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d39066b_StructIns>*, jule::Ptr<_20d3510bb_Token>);
inline void _20d4520e0_checkStructIns(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d39066b_StructIns>*);
inline void _20d452398_checkTypeStruct(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d38c58b_Struct>*);
inline void _20d452596_checkStructTypes(jule::Ptr<_20d435de8_Sema>);
inline void _20d45284e_checkStructInsOperators(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d39066b_StructIns>);
inline void _20d452b07_precheckStructType(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d38c58b_Struct>*);
inline void _20d452d05_precheckStructTypes(jule::Ptr<_20d435de8_Sema>);
inline void _20d4530ad_checkRets(_20d435de8_Sema*, jule::Ptr<_20d3a5a49_FnIns>*);
inline void _20d453421_checkFnInsSc(_20d435de8_Sema*, jule::Ptr<_20d3a5a49_FnIns>*, jule::Ptr<_20d3ea9a1_scopeChecker>*);
inline void _20d453784_checkFnInsCaller(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d3a5a49_FnIns>*, jule::Ptr<_20d3510bb_Token>);
inline void _20d453a3c_checkFnIns(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d3a5a49_FnIns>*);
inline void _20d453ce5_checkFunc(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d3a2b45_Fn>*);
inline void _20d45409d_checkTestFn(_20d435de8_Sema*, jule::Ptr<_20d3a5a49_FnIns>*);
inline void _20d454356_precheckFunc(jule::Ptr<_20d435de8_Sema>, jule::Ptr<_20d3a2b45_Fn>*);
inline void _20d454554_precheckFuncs(jule::Ptr<_20d435de8_Sema>);
inline void _20d454752_checkFuncs(jule::Ptr<_20d435de8_Sema>);
inline void _20d454950_checkPackageTypes(jule::Ptr<_20d435de8_Sema>);
inline void _20d454b4d_setFileSemaFields(jule::Ptr<_20d435de8_Sema>);
inline void _20d454d4b_setSemaFields(jule::Ptr<_20d435de8_Sema>);
inline void _20d455104_check(jule::Ptr<_20d435de8_Sema>, jule::Slice<jule::Ptr<_20d081e40_SymbolTable>>*);
inline _20d455533_missingRetChecker static__20d4558eb_new(void);
inline jule::Bool _20d455c09_checkConditional(_20d455533_missingRetChecker*, jule::Ptr<_20d3e42d5_Conditional>);
inline jule::Bool _20d45604a_checkMatch(_20d455533_missingRetChecker*, jule::Ptr<_20d3e77d3_Match>);
inline jule::Bool _20d45638b_checkInfIter(_20d455533_missingRetChecker*, jule::Ptr<_20d3e45d2_InfIter>);
inline jule::Bool _20d4566cc_checkScope(_20d455533_missingRetChecker*, jule::Ptr<_20d3e369c_Scope>);
inline jule::Bool _20d456a1d_check(_20d455533_missingRetChecker*, jule::Ptr<_20d3e369c_Scope>);
inline jule::Bool _20d458e60_IsInitialized(_20d458aca_Var*);
inline jule::Bool _20d4591e6_IsTypeInferred(_20d458aca_Var*);
inline jule::Bool _20d45947c_untypedConstant(_20d458aca_Var*);
inline jule::Bool static__20d45a02c_Dispose(jule::Ptr<_20d3a2b45_Fn>);
inline jule::Bool static__20d45a2e6_Str(jule::Ptr<_20d3a2b45_Fn>);
inline jule::Bool static__20d45a66a_logical(jule::Ptr<_20d3a2b45_Fn>*, jule::Str);
inline jule::Bool static__20d45a934_Eq(jule::Ptr<_20d3a2b45_Fn>);
inline jule::Bool static__20d45abed_Gt(jule::Ptr<_20d3a2b45_Fn>);
inline jule::Bool static__20d45aeb7_GtEq(jule::Ptr<_20d3a2b45_Fn>);
inline jule::Bool static__20d45b281_Lt(jule::Ptr<_20d3a2b45_Fn>);
inline jule::Bool static__20d45b54a_LtEq(jule::Ptr<_20d3a2b45_Fn>);
inline jule::Bool static__20d45b8be_result(jule::Ptr<_20d3a2b45_Fn>*, jule::Str);
inline jule::Bool static__20d45bb88_Shl(jule::Ptr<_20d3a2b45_Fn>);
inline jule::Bool static__20d45be52_Shr(jule::Ptr<_20d3a2b45_Fn>);
inline jule::Bool static__20d45c21b_Add(jule::Ptr<_20d3a2b45_Fn>);
inline jule::Bool static__20d45c4d5_Sub(jule::Ptr<_20d3a2b45_Fn>);
inline jule::Bool static__20d45c79e_Div(jule::Ptr<_20d3a2b45_Fn>);
inline jule::Bool static__20d45ca68_Mul(jule::Ptr<_20d3a2b45_Fn>);
inline jule::Bool static__20d45cd32_Mod(jule::Ptr<_20d3a2b45_Fn>);
inline jule::Bool static__20d45d0eb_BitAnd(jule::Ptr<_20d3a2b45_Fn>);
inline jule::Bool static__20d45d3b5_BitOr(jule::Ptr<_20d3a2b45_Fn>);
inline jule::Bool static__20d45d67e_BitXor(jule::Ptr<_20d3a2b45_Fn>);
inline jule::Bool static__20d45da03_unary(jule::Ptr<_20d3a2b45_Fn>*, jule::Str);
inline jule::Bool static__20d45dcbc_Neg(jule::Ptr<_20d3a2b45_Fn>);
inline jule::Bool static__20d45e086_Pos(jule::Ptr<_20d3a2b45_Fn>);
inline jule::Bool static__20d45e350_BitNot(jule::Ptr<_20d3a2b45_Fn>);
inline jule::Bool static__20d45e6c4_assign(jule::Ptr<_20d3a2b45_Fn>*, jule::Str);
inline jule::Bool static__20d45e98d_AddAssign(jule::Ptr<_20d3a2b45_Fn>);
inline jule::Bool static__20d45ec57_SubAssign(jule::Ptr<_20d3a2b45_Fn>);
inline jule::Bool static__20d460021_DivAssign(jule::Ptr<_20d3a2b45_Fn>);
inline jule::Bool static__20d4602da_MulAssign(jule::Ptr<_20d3a2b45_Fn>);
inline jule::Bool static__20d4605a4_ModAssign(jule::Ptr<_20d3a2b45_Fn>);
inline jule::Bool static__20d46086d_ShlAssign(jule::Ptr<_20d3a2b45_Fn>);
inline jule::Bool static__20d460b37_ShrAssign(jule::Ptr<_20d3a2b45_Fn>);
inline jule::Bool static__20d460e01_BitOrAssign(jule::Ptr<_20d3a2b45_Fn>);
inline jule::Bool static__20d4611ba_BitAndAssign(jule::Ptr<_20d3a2b45_Fn>);
inline jule::Bool static__20d461484_BitXorAssign(jule::Ptr<_20d3a2b45_Fn>);
inline void _20d06e3d3_pushErr(_20d06ddd8_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _20d06e669_checkTrait(_20d06ddd8_typeCompatibilityChecker*);
inline jule::Bool _20d06e900_checkPtr(_20d06ddd8_typeCompatibilityChecker*);
inline jule::Bool _20d06eb86_checkPrim(_20d06ddd8_typeCompatibilityChecker*);
inline jule::Bool _20d070082_typeEnum(_20d06ddd8_typeCompatibilityChecker*, jule::Ptr<_20d3b9ce4_TypeEnum>*, jule::Ptr<_20d4de28c_TypeKind>*);
inline jule::Bool _20d070318_checkTypeEnum(_20d06ddd8_typeCompatibilityChecker*);
inline jule::Bool _20d07059e_check(_20d06ddd8_typeCompatibilityChecker*);
inline void _20d07112c_pushErr(_20d070b87_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _20d0713b3_checkValidity(_20d070b87_assignTypeChecker*);
inline jule::Bool _20d071649_checkConst(_20d070b87_assignTypeChecker*);
inline jule::Bool _20d0718d0_isPrim(_20d070b87_assignTypeChecker*);
inline jule::Bool _20d071b66_checkCompatibility(_20d070b87_assignTypeChecker*);
inline jule::Bool _20d071dec_check(_20d070b87_assignTypeChecker*);
inline jule::Bool _211d45b34_annotateConstraintElem(_20d072804_dynamicTypeAnnotation*, jule::Ptr<_20d4de28c_TypeKind>*);
inline jule::Bool _211d45491_annotateConstraintElem(_20d072804_dynamicTypeAnnotation*, jule::Ptr<_20d4de28c_TypeKind>*);
inline jule::Bool _211d4765d_annotateConstraintElem(_20d072804_dynamicTypeAnnotation*, jule::Ptr<_20d4de28c_TypeKind>*);
inline jule::Bool _211d4d433_annotateConstraintElem(_20d072804_dynamicTypeAnnotation*, jule::Ptr<_20d4de28c_TypeKind>*);
inline jule::Bool _20d0731ea_annotateConstraintMap(_20d072804_dynamicTypeAnnotation*, jule::Ptr<_20d4de28c_TypeKind>*);
inline jule::Bool _20d07353b_annotateConstraintTup(_20d072804_dynamicTypeAnnotation*, jule::Ptr<_20d4de28c_TypeKind>*);
inline jule::Bool _20d07387c_annotateConstraintFn(_20d072804_dynamicTypeAnnotation*, jule::Ptr<_20d4de28c_TypeKind>*);
inline jule::Bool _20d073bbd_annotateConstraintIdent(_20d072804_dynamicTypeAnnotation*, jule::Ptr<_20d4de28c_TypeKind>*);
inline jule::Bool _20d07400e_annotateConstraint(_20d072804_dynamicTypeAnnotation*, jule::Ptr<_20d4de28c_TypeKind>*);
inline void _20d074372_pushGeneric(_20d072804_dynamicTypeAnnotation*, jule::Ptr<_20d4de28c_TypeKind>*, jule::I64);
inline jule::Bool _20d0746b3_annotatePrim(_20d072804_dynamicTypeAnnotation*, jule::Ptr<_20d4de28c_TypeKind>*);
inline jule::Bool _20d074a04_annotateArr(_20d072804_dynamicTypeAnnotation*, jule::Ptr<_20d4de28c_TypeKind>*);
inline jule::Bool _20d074d45_annotateSlc(_20d072804_dynamicTypeAnnotation*, jule::Ptr<_20d4de28c_TypeKind>*);
inline jule::Bool _20d075241_checkMapKey(_20d072804_dynamicTypeAnnotation*, jule::Ptr<_20d4de28c_TypeKind>*, jule::Ptr<_20d4de28c_TypeKind>*);
inline jule::Bool _20d075582_annotateMap(_20d072804_dynamicTypeAnnotation*, jule::Ptr<_20d4de28c_TypeKind>*);
inline jule::Bool _20d0758c3_annotateFn(_20d072804_dynamicTypeAnnotation*, jule::Ptr<_20d4de28c_TypeKind>*);
inline jule::Bool _20d075c14_annotatePtr(_20d072804_dynamicTypeAnnotation*, jule::Ptr<_20d4de28c_TypeKind>*);
inline jule::Bool _20d076055_annotateSptr(_20d072804_dynamicTypeAnnotation*, jule::Ptr<_20d4de28c_TypeKind>*);
inline jule::Bool _20d076396_annotateStruct(_20d072804_dynamicTypeAnnotation*, jule::Ptr<_20d4de28c_TypeKind>*);
inline jule::Bool _20d0766d7_annotateAny(_20d072804_dynamicTypeAnnotation*, jule::Ptr<_20d4de28c_TypeKind>*);
inline jule::Bool _20d076a28_annotateKind(_20d072804_dynamicTypeAnnotation*, jule::Ptr<_20d4de28c_TypeKind>*);
inline jule::Bool _20d076cae_annotate(_20d072804_dynamicTypeAnnotation*);
inline void _20d077c05_pushErrToken(_20d077661_fnCallArgChecker*, jule::Ptr<_20d3510bb_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _20d078068_pushErr(_20d077661_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_20d3a4a9d_ParamIns>> _20d0782ee_getParams(_20d077661_fnCallArgChecker*);
inline jule::Bool _20d07860c_checkCounts(_20d077661_fnCallArgChecker*, jule::Slice<jule::Ptr<_20d3a4a9d_ParamIns>>*);
inline jule::Bool _20d078ab3_checkArg(_20d077661_fnCallArgChecker*, jule::Ptr<_20d3a4a9d_ParamIns>*, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d3510bb_Token>*);
inline jule::Bool _20d078eae_push(_20d077661_fnCallArgChecker*, jule::Ptr<_20d3a4a9d_ParamIns>*, jule::Ptr<_20d370ccd_Expr>);
inline jule::Bool _20d0793aa_pushVariadic(_20d077661_fnCallArgChecker*, jule::Ptr<_20d3a4a9d_ParamIns>*, jule::I64);
inline jule::Bool _20d0796eb_checkArgs(_20d077661_fnCallArgChecker*, jule::Slice<jule::Ptr<_20d3a4a9d_ParamIns>>*);
inline jule::Bool _20d079982_checkDynamicTypeAnnotation(_20d077661_fnCallArgChecker*);
inline jule::Bool _20d079c18_check(_20d077661_fnCallArgChecker*);
inline void _20d07aae8_pushErr(_20d07a598_structLitChecker*, jule::Ptr<_20d3510bb_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _20d07ae5b_pushSuggestion(_20d07a598_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _20d07b379_pushMatch(_20d07a598_structLitChecker*, jule::Ptr<_20d38eabb_FieldIns>*, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d3510bb_Token>*);
inline void _20d07b6dc_checkPair(_20d07a598_structLitChecker*, jule::Ptr<_20d3754ec_FieldExprPair>*, jule::Slice<jule::Ptr<_20d370ccd_Expr>>*);
inline jule::Bool _20d07ba2d_readyExprs(_20d07a598_structLitChecker*, jule::Slice<jule::Ptr<_20d370ccd_Expr>>*);
inline void _20d07bcd6_check(_20d07a598_structLitChecker*, jule::Slice<jule::Ptr<_20d370ccd_Expr>>*);
inline jule::Ptr<_20d458aca_Var> _20d07c864_buildVar(_20d07c37a_rangeChecker*, jule::Ptr<_20d37e737_VarDecl>*);
inline void _20d07ca62_setSizeKey(_20d07c37a_rangeChecker*);
inline void _20d07ce80_checkRangeExprValidity(_20d07c37a_rangeChecker*, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d458aca_Var>*, jule::Ptr<_20d4de28c_TypeKind>*);
inline void _20d07d17d_checkSlice(_20d07c37a_rangeChecker*);
inline void _20d07d37b_checkArray(_20d07c37a_rangeChecker*);
inline void _20d07d579_checkMapKeyA(_20d07c37a_rangeChecker*);
inline void _20d07d777_checkMapKeyB(_20d07c37a_rangeChecker*);
inline void _20d07d975_checkMap(_20d07c37a_rangeChecker*);
inline void _20d07db73_checkStr(_20d07c37a_rangeChecker*);
inline void _20d07dd71_checkComptime(_20d07c37a_rangeChecker*);
inline jule::Bool _20d07e107_checkComptimeRange(_20d07c37a_rangeChecker*);
inline jule::Bool _20d07e38d_check(_20d07c37a_rangeChecker*);
inline void _20d080009_prepareTypes(_20d07eadb_retTypeChecker*);
inline void _20d0802b2_prepareExprs(_20d07eadb_retTypeChecker*, jule::Ptr<_20d370ccd_Expr>*);
inline void _20d0804b0_checkExprs(_20d07eadb_retTypeChecker*);
inline jule::Bool _20d080801_check(_20d07eadb_retTypeChecker*, jule::Ptr<_20d370ccd_Expr>*);
inline jule::Ptr<_20d414d94_ImportInfo> _20d082429_SelectPackage(_20d081e40_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_20d414d94_ImportInfo>)>);
inline jule::Ptr<_20d458aca_Var> _20d082825_FindVar(_20d081e40_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_20d4dd49a_TypeAlias> _20d082c21_FindTypeAlias(_20d081e40_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_20d38c58b_Struct> _20d08311c_FindStruct(_20d081e40_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_20d3a2b45_Fn> _20d083518_FindFn(_20d081e40_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_20d3b5dde_Trait> _20d083859_FindTrait(_20d081e40_SymbolTable*, jule::Str);
inline jule::Ptr<_20d3b85d9_Enum> _20d083b9a_FindEnum(_20d081e40_SymbolTable*, jule::Str);
inline jule::Ptr<_20d3b9ce4_TypeEnum> _20d083edb_FindTypeEnum(_20d081e40_SymbolTable*, jule::Str);
inline jule::Ptr<_20d458aca_Var> _20d084607_findVar(_20d081e40_SymbolTable*, jule::Str*, jule::Bool, jule::Bool);
inline jule::Ptr<_20d4dd49a_TypeAlias> _20d084aad_findTypeAlias(_20d081e40_SymbolTable*, jule::Str*, jule::Bool, jule::Bool);
inline jule::Any _20d084ea9_defByIdent(_20d081e40_SymbolTable*, jule::Str*, jule::Bool);
inline jule::Bool _20d085460_isDuplicatedIdent(_20d081e40_SymbolTable*, jule::Uintptr, jule::Str*, jule::Bool);
inline jule::Bool _20d08751c_IsNil(_20d087165_Data*);
inline jule::Bool _20d0877a3_IsVoid(_20d087165_Data*);
inline jule::Bool _20d087a39_IsConst(_20d087165_Data*);
inline jule::Bool _20d087d7a_GoodOperand(_20d087165_Data*, jule::Ptr<_20d087165_Data>*);
inline void _20d0893a9_pushErr(_20d088d59_Eval*, jule::Ptr<_20d3510bb_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _20d08971c_pushSuggestion(_20d088d59_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _20d08991a_allowBuiltin(_20d088d59_Eval*);
inline void _20d089b18_disallowBuiltin(_20d088d59_Eval*);
inline jule::Bool _20d089d9e_isUnsafe(_20d088d59_Eval*);
inline jule::Bool _20d08a135_isGlobal(_20d088d59_Eval*);
inline jule::Bool _20d08a443_applyNumericPrefix(_20d088d59_Eval*, jule::Ptr<_20d087165_Data>*);
inline jule::Ptr<_20d087165_Data> _20d08a784_litStr(_20d088d59_Eval*, jule::Ptr<_20d371d78_LitExpr>*);
inline jule::Ptr<_20d087165_Data> _20d08aac5_litRune(_20d088d59_Eval*, jule::Ptr<_20d371d78_LitExpr>*);
inline jule::Ptr<_20d087165_Data> _20d08ae16_litFloat(_20d088d59_Eval*, jule::Ptr<_20d371d78_LitExpr>*);
inline jule::Ptr<_20d087165_Data> _20d08b257_litInt(_20d088d59_Eval*, jule::Ptr<_20d371d78_LitExpr>*);
inline jule::Ptr<_20d087165_Data> _20d08b598_litNum(_20d088d59_Eval*, jule::Ptr<_20d371d78_LitExpr>*);
inline jule::Ptr<_20d087165_Data> _20d08b8d9_evalLit(_20d088d59_Eval*, jule::Ptr<_20d371d78_LitExpr>);
inline jule::Any _20d08bc2a_findBuiltins(_20d088d59_Eval*, jule::Str*);
inline jule::Any _20d08c126_getDef(_20d088d59_Eval*, jule::Str*, jule::Bool);
inline void _211eb2850_pushReference(_20d088d59_Eval*, jule::Ptr<_20d3a5a49_FnIns>*);
inline void _211eca15e_pushReference(_20d088d59_Eval*, jule::Ptr<_20d458aca_Var>*);
inline void _212090bc5_pushReference(_20d088d59_Eval*, jule::Ptr<_20d39066b_StructIns>*);
inline jule::Ptr<_20d087165_Data> _20d08c720__evalEnum(_20d088d59_Eval*, jule::Ptr<_20d3b85d9_Enum>);
inline jule::Ptr<_20d087165_Data> _20d08cb1b_evalEnum(_20d088d59_Eval*, jule::Ptr<_20d3b85d9_Enum>, jule::Ptr<_20d3510bb_Token>);
inline jule::Ptr<_20d087165_Data> _20d08ce5c__evalTypeEnum(_20d088d59_Eval*, jule::Ptr<_20d3b9ce4_TypeEnum>);
inline jule::Ptr<_20d087165_Data> _20d08d358_evalTypeEnum(_20d088d59_Eval*, jule::Ptr<_20d3b9ce4_TypeEnum>, jule::Ptr<_20d3510bb_Token>);
inline jule::Ptr<_20d087165_Data> _20d08d699__evalStruct(_20d088d59_Eval*, jule::Ptr<_20d39066b_StructIns>);
inline jule::Ptr<_20d087165_Data> _20d08da95_evalStruct(_20d088d59_Eval*, jule::Ptr<_20d39066b_StructIns>, jule::Ptr<_20d3510bb_Token>);
inline jule::Ptr<_20d087165_Data> _20d08ddd6_evalFnIns(_20d088d59_Eval*, jule::Ptr<_20d3a5a49_FnIns>);
inline void _20d08e249_checkDeprecated(_20d088d59_Eval*, jule::Slice<jule::Ptr<_20d36adb6_Directive>>*, jule::Ptr<_20d3510bb_Token>);
inline jule::Ptr<_20d087165_Data> _20d08e645_evalFn(_20d088d59_Eval*, jule::Ptr<_20d3a2b45_Fn>, jule::Ptr<_20d3510bb_Token>);
inline void _20d08ea63_pushIllegalCycleError(_20d088d59_Eval*, jule::Ptr<_20d458aca_Var>*, jule::Ptr<_20d458aca_Var>*, _2240a0ad5_StrBuilder*);
inline jule::Bool _20d08ee5e_checkCrossCycle(_20d088d59_Eval*, jule::Ptr<_20d458aca_Var>*, _2240a0ad5_StrBuilder*);
inline jule::Bool _20d09035a_checkIllegalCycles(_20d088d59_Eval*, jule::Ptr<_20d458aca_Var>*, jule::Ptr<_20d3510bb_Token>);
inline jule::Ptr<_20d087165_Data> _20d090756_evalVar(_20d088d59_Eval*, jule::Ptr<_20d458aca_Var>, jule::Ptr<_20d3510bb_Token>);
inline jule::Ptr<_20d087165_Data> _20d090b52_evalTypeAlias(_20d088d59_Eval*, jule::Ptr<_20d4dd49a_TypeAlias>, jule::Ptr<_20d3510bb_Token>);
inline jule::Ptr<_20d087165_Data> _20d09104d_evalDef(_20d088d59_Eval*, jule::Any*, jule::Ptr<_20d3510bb_Token>);
inline jule::Ptr<_20d087165_Data> _20d09138e_evalIdent(_20d088d59_Eval*, jule::Ptr<_20d372708_IdentExpr>);
inline jule::Ptr<_20d087165_Data> _20d0916d0_evalUnary(jule::Ptr<_20d088d59_Eval>, jule::Ptr<_20d372d8a_UnaryExpr>);
inline jule::Ptr<_20d087165_Data> _20d091a21_evalVariadic(jule::Ptr<_20d088d59_Eval>, jule::Ptr<_20d373264_VariadicExpr>);
inline jule::Ptr<_20d087165_Data> _20d091d62_evalUnsafe(jule::Ptr<_20d088d59_Eval>, jule::Ptr<_20d372252_UnsafeExpr>);
inline jule::Ptr<_20d087165_Data> _20d0921a3_evalArr(jule::Ptr<_20d088d59_Eval>, jule::Ptr<_20d377301_SliceExpr>);
inline jule::Ptr<_20d087165_Data> _20d092659_evalExpSlc(jule::Ptr<_20d088d59_Eval>, jule::Ptr<_20d377301_SliceExpr>, jule::Ptr<_20d4de28c_TypeKind>, jule::Any);
inline jule::Ptr<_20d087165_Data> _20d09299a_evalSliceExpr(jule::Ptr<_20d088d59_Eval>, jule::Ptr<_20d377301_SliceExpr>);
inline void _20d092d0d_checkIntegerIndexingByData(_20d088d59_Eval*, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d3510bb_Token>);
inline void _20d09322b_indexingPtr(_20d088d59_Eval*, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d377c91_IndexingExpr>*);
inline void _20d093649_indexingArr(_20d088d59_Eval*, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d377c91_IndexingExpr>*);
inline void _20d093a67_indexingSlc(_20d088d59_Eval*, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d377c91_IndexingExpr>*);
inline void _20d093e85_indexingMap(_20d088d59_Eval*, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d377c91_IndexingExpr>*);
inline void _20d0943a3_indexingStr(_20d088d59_Eval*, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d377c91_IndexingExpr>*);
inline void _20d0947c1_toIndexing(_20d088d59_Eval*, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d377c91_IndexingExpr>*);
inline jule::Bool _20d094c77_pushGenericsFromExprSubIdent(jule::Ptr<_20d088d59_Eval>, jule::Ptr<_20d373de1_SubIdentExpr>*, jule::Slice<jule::Ptr<_20d36b999_TypeDecl>>*, jule::Ptr<_20d370ccd_Expr>*);
inline jule::Bool _20d095173_pushGenericsFromData(jule::Ptr<_20d088d59_Eval>, jule::Slice<jule::Ptr<_20d36b999_TypeDecl>>*, jule::Ptr<_20d370ccd_Expr>*);
inline void _20d0954d6_evalIdentDeclFromIndexing(jule::Ptr<_20d088d59_Eval>, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d377c91_IndexingExpr>*);
inline jule::Bool _20d09598c_checkGenericFn(jule::Ptr<_20d088d59_Eval>, jule::Ptr<_20d3a5a49_FnIns>*, jule::Ptr<_20d3510bb_Token>*, jule::Any*);
inline void _20d095d00_evalFnGenericFromIndexing(jule::Ptr<_20d088d59_Eval>, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d377c91_IndexingExpr>*);
inline jule::Ptr<_20d087165_Data> _20d096141_evalIndexing(jule::Ptr<_20d088d59_Eval>, jule::Ptr<_20d377c91_IndexingExpr>);
inline __jule_tuple_x_20d087165_Data__jule_tuple_x_20d087165_Data _20d096482_evalSlicingExprs(jule::Ptr<_20d088d59_Eval>, jule::Ptr<_20d378401_SlicingExpr>*);
inline void _20d09673a_slicingArr(_20d088d59_Eval*, jule::Ptr<_20d087165_Data>*);
inline void _20d4bdab8_slicingStr(_20d088d59_Eval*, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d087165_Data>*);
inline void _20d4be091_checkSlicing(_20d088d59_Eval*, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d378401_SlicingExpr>*);
inline jule::Ptr<_20d087165_Data> _20d4be3d2_evalSlicing(jule::Ptr<_20d088d59_Eval>, jule::Ptr<_20d378401_SlicingExpr>);
inline void _20d4be800_castPtr(_20d088d59_Eval*, jule::Ptr<_20d4de28c_TypeKind>, jule::Ptr<_20d087165_Data>, jule::Ptr<_20d3510bb_Token>);
inline void _20d4bec1d_castStruct(_20d088d59_Eval*, jule::Ptr<_20d4de28c_TypeKind>, jule::Ptr<_20d087165_Data>, jule::Ptr<_20d3510bb_Token>);
inline void _20d4c013b_castRef(_20d088d59_Eval*, jule::Ptr<_20d4de28c_TypeKind>, jule::Ptr<_20d087165_Data>, jule::Ptr<_20d3510bb_Token>);
inline void _20d4c0559_castSlc(_20d088d59_Eval*, jule::Ptr<_20d4de28c_TypeKind>, jule::Ptr<_20d087165_Data>, jule::Ptr<_20d3510bb_Token>);
inline void _20d4c08bc_castStr(_20d088d59_Eval*, jule::Ptr<_20d087165_Data>, jule::Ptr<_20d3510bb_Token>);
inline void _20d4c0cda_castInt(_20d088d59_Eval*, jule::Ptr<_20d4de28c_TypeKind>, jule::Ptr<_20d087165_Data>, jule::Ptr<_20d3510bb_Token>);
inline void _20d4c1208_castNum(_20d088d59_Eval*, jule::Ptr<_20d4de28c_TypeKind>, jule::Ptr<_20d087165_Data>, jule::Ptr<_20d3510bb_Token>);
inline void _20d4c1626_castPrim(_20d088d59_Eval*, jule::Ptr<_20d4de28c_TypeKind>, jule::Ptr<_20d087165_Data>, jule::Ptr<_20d3510bb_Token>);
inline void _20d4c1989_castConstant(_20d088d59_Eval*, jule::Ptr<_20d4de28c_TypeKind>*, jule::Ptr<_20d087165_Data>*);
inline void _20d4c1da7_castTypeEnum(_20d088d59_Eval*, jule::Ptr<_20d4de28c_TypeKind>*, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d3510bb_Token>*);
inline void _20d4c22c5_castTypeEnumT(_20d088d59_Eval*, jule::Ptr<_20d4de28c_TypeKind>*, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d3510bb_Token>*);
inline jule::Ptr<_20d087165_Data> _20d4c277b_evalCastByTypeNData(_20d088d59_Eval*, jule::Ptr<_20d4de28c_TypeKind>, jule::Ptr<_20d087165_Data>, jule::Ptr<_20d3510bb_Token>);
inline jule::Ptr<_20d087165_Data> _20d4c2c32_evalCastT(jule::Ptr<_20d088d59_Eval>, jule::Ptr<_20d4de28c_TypeKind>*, jule::Ptr<_20d370ccd_Expr>*, jule::Ptr<_20d3510bb_Token>*);
inline jule::Ptr<_20d087165_Data> _20d4c3073_evalCast(jule::Ptr<_20d088d59_Eval>, jule::Ptr<_20d37363d_CastExpr>);
inline jule::Ptr<_20d087165_Data> _20d4c33b4_evalNsSelection(_20d088d59_Eval*, jule::Ptr<_20d373a17_NsSelectionExpr>);
inline jule::Ptr<_20d087165_Data> _20d4c386a_evalStructLitExplicit(jule::Ptr<_20d088d59_Eval>, jule::Ptr<_20d39066b_StructIns>, jule::Slice<jule::Ptr<_20d370ccd_Expr>>, jule::Ptr<_20d3510bb_Token>);
inline jule::Ptr<_20d087165_Data> _20d4c3bab_evalStructLit(jule::Ptr<_20d088d59_Eval>, jule::Ptr<_20d375d27_StructLit>);
inline _20d5013e2_typeChecker _20d4c3e42_typeChecker(_20d088d59_Eval*);
inline jule::Ptr<_20d087165_Data> _20d4c4283_evalType(_20d088d59_Eval*, jule::Ptr<_20d36b999_TypeDecl>);
inline void _20d4c45e6_callTypeFn(jule::Ptr<_20d088d59_Eval>, jule::Ptr<_20d374a07_FnCallExpr>*, jule::Ptr<_20d087165_Data>*);
inline void _20d4c4959_callBuiltinFn(jule::Ptr<_20d088d59_Eval>, jule::Ptr<_20d374a07_FnCallExpr>*, jule::Ptr<_20d087165_Data>*);
inline void _20d4c4cbc_checkFnOfConcurrentCall(_20d088d59_Eval*, jule::Ptr<_20d3a5a49_FnIns>*, jule::Ptr<_20d3510bb_Token>);
inline void _20d4c51da_processExceptionalHandler(_20d088d59_Eval*, jule::Ptr<_20d3a5a49_FnIns>*, jule::Ptr<_20d374a07_FnCallExpr>*, jule::Ptr<_20d087165_Data>*);
inline void _20d4c554d_callFn(jule::Ptr<_20d088d59_Eval>, jule::Ptr<_20d374a07_FnCallExpr>*, jule::Ptr<_20d087165_Data>*);
inline jule::Ptr<_20d087165_Data> _20d4c588e_evalFnCall(jule::Ptr<_20d088d59_Eval>, jule::Ptr<_20d374a07_FnCallExpr>);
inline jule::Ptr<_20d087165_Data> _20d4c5c8a_evalEnumStatic(_20d088d59_Eval*, jule::Ptr<_20d3b85d9_Enum>, jule::Ptr<_20d3510bb_Token>);
inline jule::Ptr<_20d087165_Data> _20d4c6186_evalTypeEnumStatic(_20d088d59_Eval*, jule::Ptr<_20d3b9ce4_TypeEnum>, jule::Ptr<_20d3510bb_Token>);
inline jule::Ptr<_20d087165_Data> _20d4c6582_evalStructStatic(_20d088d59_Eval*, jule::Ptr<_20d39066b_StructIns>, jule::Ptr<_20d3510bb_Token>);
inline jule::Ptr<_20d087165_Data> _20d4c6a38_evalTraitSubIdent(_20d088d59_Eval*, jule::Ptr<_20d087165_Data>, jule::Ptr<_20d3b5dde_Trait>, jule::Ptr<_20d3510bb_Token>);
inline jule::Ptr<_20d087165_Data> _20d4c7099_evalStructSubIdentField(_20d088d59_Eval*, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d39066b_StructIns>*, jule::Ptr<_20d3510bb_Token>*, jule::Ptr<_20d38eabb_FieldIns>*);
inline jule::Ptr<_20d087165_Data> _20d4c760a_evalStructSubIdent(_20d088d59_Eval*, jule::Ptr<_20d087165_Data>, jule::Ptr<_20d39066b_StructIns>, jule::Ptr<_20d373de1_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_20d087165_Data> _20d4c794b_evalIntTypeStatic(_20d088d59_Eval*, jule::Ptr<_20d3510bb_Token>);
inline jule::Ptr<_20d087165_Data> _20d4c7c8c_evalUintTypeStatic(_20d088d59_Eval*, jule::Ptr<_20d3510bb_Token>);
inline jule::Ptr<_20d087165_Data> _20d4c80cd_evalI8TypeStatic(_20d088d59_Eval*, jule::Ptr<_20d3510bb_Token>);
inline jule::Ptr<_20d087165_Data> _20d4c841e_evalI16TypeStatic(_20d088d59_Eval*, jule::Ptr<_20d3510bb_Token>);
inline jule::Ptr<_20d087165_Data> _20d4c8760_evalI32TypeStatic(_20d088d59_Eval*, jule::Ptr<_20d3510bb_Token>);
inline jule::Ptr<_20d087165_Data> _20d4c8aa1_evalI64TypeStatic(_20d088d59_Eval*, jule::Ptr<_20d3510bb_Token>);
inline jule::Ptr<_20d087165_Data> _20d4c8de2_evalU8TypeStatic(_20d088d59_Eval*, jule::Ptr<_20d3510bb_Token>);
inline jule::Ptr<_20d087165_Data> _20d4c9233_evalU16TypeStatic(_20d088d59_Eval*, jule::Ptr<_20d3510bb_Token>);
inline jule::Ptr<_20d087165_Data> _20d4c9574_evalU32TypeStatic(_20d088d59_Eval*, jule::Ptr<_20d3510bb_Token>);
inline jule::Ptr<_20d087165_Data> _20d4c98b5_evalU64TypeStatic(_20d088d59_Eval*, jule::Ptr<_20d3510bb_Token>);
inline jule::Ptr<_20d087165_Data> _20d4c9c06_evalF32TypeStatic(_20d088d59_Eval*, jule::Ptr<_20d3510bb_Token>);
inline jule::Ptr<_20d087165_Data> _20d4ca047_evalF64TypeStatic(_20d088d59_Eval*, jule::Ptr<_20d3510bb_Token>);
inline jule::Ptr<_20d087165_Data> _20d4ca443_evalPrimStatic(_20d088d59_Eval*, jule::Str, jule::Ptr<_20d3510bb_Token>);
inline jule::Ptr<_20d087165_Data> _20d4ca83e_evalTypeStatic(_20d088d59_Eval*, jule::Ptr<_20d087165_Data>, jule::Ptr<_20d373de1_SubIdentExpr>);
inline jule::Ptr<_20d087165_Data> _2121ba140_comptimeObjSubIdent(_20d088d59_Eval*, jule::Ptr<_20d3cbb5d_comptimeTypeInfo>*, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d373de1_SubIdentExpr>*);
inline jule::Ptr<_20d087165_Data> _2121be6e9_comptimeObjSubIdent(_20d088d59_Eval*, jule::Ptr<_20d3bcbe8_comptimeStructField>*, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d373de1_SubIdentExpr>*);
inline jule::Ptr<_20d087165_Data> _2121c3c5e_comptimeObjSubIdent(_20d088d59_Eval*, jule::Ptr<_20d3c4260_comptimeEnumField>*, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d373de1_SubIdentExpr>*);
inline jule::Ptr<_20d087165_Data> _2121c8318_comptimeObjSubIdent(_20d088d59_Eval*, jule::Ptr<_20d3c6c02_comptimeParam>*, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d373de1_SubIdentExpr>*);
inline jule::Ptr<_20d087165_Data> _2121ccb03_comptimeObjSubIdent(_20d088d59_Eval*, jule::Ptr<_20d3c0ea4_comptimeStatic>*, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d373de1_SubIdentExpr>*);
inline jule::Ptr<_20d087165_Data> _2121d2168_comptimeObjSubIdent(_20d088d59_Eval*, jule::Ptr<_20d3d3170_comptimeValue>*, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d373de1_SubIdentExpr>*);
inline jule::Ptr<_20d087165_Data> _2121d66cd_comptimeObjSubIdent(_20d088d59_Eval*, jule::Ptr<_20d3d70b9_comptimeFile>*, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d373de1_SubIdentExpr>*);
inline __jule_tuple_x_20d087165_Data__jule_tuple_bool _20d4cb1e1_tryComptimeObjSubIdent(_20d088d59_Eval*, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d373de1_SubIdentExpr>);
inline jule::Ptr<_20d087165_Data> _20d4cb5dc_evalObjSubIdent(_20d088d59_Eval*, jule::Ptr<_20d087165_Data>, jule::Ptr<_20d373de1_SubIdentExpr>);
inline jule::Ptr<_20d087165_Data> _20d4cb92d_evalSubIdent(jule::Ptr<_20d088d59_Eval>, jule::Ptr<_20d373de1_SubIdentExpr>);
inline jule::Ptr<_20d087165_Data> _20d4cbc6e_evalTuple(jule::Ptr<_20d088d59_Eval>, jule::Ptr<_20d37199e_TupleExpr>);
inline jule::Ptr<_20d087165_Data> _20d4cc16a_evalMap(jule::Ptr<_20d088d59_Eval>, jule::Ptr<_20d4ecca1_Map>, jule::Ptr<_20d3762cd_BraceLit>);
inline jule::Ptr<_20d087165_Data> _20d4cc4ab_evalBraceLit(jule::Ptr<_20d088d59_Eval>, jule::Ptr<_20d3762cd_BraceLit>);
inline jule::Ptr<_20d087165_Data> _20d4cc7ec_evalAnonFunc(jule::Ptr<_20d088d59_Eval>, jule::Ptr<_20d37d659_FnDecl>);
inline jule::Ptr<_20d087165_Data> _20d4ccb3d_evalBinop(jule::Ptr<_20d088d59_Eval>, jule::Ptr<_20d374397_BinopExpr>);
inline jule::Ptr<_20d087165_Data> _20d4cce7e_evalExprKind(jule::Ptr<_20d088d59_Eval>, jule::Any);
inline jule::Ptr<_20d087165_Data> _20d4cd2c0_eval1(jule::Ptr<_20d088d59_Eval>, jule::Ptr<_20d370ccd_Expr>);
inline jule::Ptr<_20d087165_Data> _20d4cd611_eval(jule::Ptr<_20d088d59_Eval>, jule::Ptr<_20d370ccd_Expr>);
inline jule::Ptr<_20d087165_Data> _20d4cd952_evalExpr1(jule::Ptr<_20d088d59_Eval>, jule::Ptr<_20d370ccd_Expr>);
inline jule::Ptr<_20d087165_Data> _20d4cdc93_evalExpr(jule::Ptr<_20d088d59_Eval>, jule::Ptr<_20d370ccd_Expr>);
inline _20d4ce25a_unaryEval static__20d4ce69a_new(jule::Ptr<_20d088d59_Eval>);
inline void _20d4ce898_minus(_20d4ce25a_unaryEval*);
inline void _20d4cea96_plus(_20d4ce25a_unaryEval*);
inline void _20d4cec94_caret(_20d4ce25a_unaryEval*);
inline void _20d4cee92_excl(_20d4ce25a_unaryEval*);
inline void _20d4d0190_star(_20d4ce25a_unaryEval*);
inline void _20d4d038d_amper(_20d4ce25a_unaryEval*);
inline void _20d4d058b_typeDecl(_20d4ce25a_unaryEval*);
inline void _20d4d0789_evalData(_20d4ce25a_unaryEval*);
inline jule::Ptr<_20d087165_Data> _20d4d0aca_eval(_20d4ce25a_unaryEval*, jule::Ptr<_20d372d8a_UnaryExpr>);
inline _20d4d11e6_binaryEval static__20d4d17ce_newPlain(jule::Ptr<_20d088d59_Eval>);
inline _20d4d11e6_binaryEval static__20d4d1b20_new(jule::Ptr<_20d088d59_Eval>, jule::Ptr<_20d3510bb_Token>);
inline jule::Bool _20d4d1da6_checkTypeCompatibility(_20d4d11e6_binaryEval*);
inline jule::Bool _20d4d213c_checkStructCommonOperatorCompatibility(_20d4d11e6_binaryEval*);
inline jule::Ptr<_20d087165_Data> _20d4d23c3_evalComptimeTypeInfo(_20d4d11e6_binaryEval*);
inline jule::Ptr<_20d087165_Data> _20d4d2659_evalNil(_20d4d11e6_binaryEval*);
inline jule::Ptr<_20d087165_Data> _20d4d28e0_evalEnum(_20d4d11e6_binaryEval*);
inline jule::Ptr<_20d087165_Data> _20d4d2b76_evalTypeEnum(_20d4d11e6_binaryEval*);
inline jule::Ptr<_20d087165_Data> _20d4d2e0c_evalSptr(_20d4d11e6_binaryEval*);
inline jule::Ptr<_20d087165_Data> _20d4d3193_evalPtr(_20d4d11e6_binaryEval*);
inline jule::Ptr<_20d087165_Data> _20d4d3429_evalArr(_20d4d11e6_binaryEval*);
inline jule::Ptr<_20d087165_Data> _20d4d36b0_evalSlc(_20d4d11e6_binaryEval*);
inline jule::Ptr<_20d087165_Data> _20d4d3946_evalStruct(_20d4d11e6_binaryEval*);
inline jule::Ptr<_20d087165_Data> _20d4d3bcc_evalTrait(_20d4d11e6_binaryEval*);
inline jule::Ptr<_20d087165_Data> _20d4d3e63_evalAny(_20d4d11e6_binaryEval*);
inline jule::Ptr<_20d087165_Data> _20d4d41e9_evalBool(_20d4d11e6_binaryEval*);
inline jule::Ptr<_20d087165_Data> _20d4d4480_evalStr(_20d4d11e6_binaryEval*);
inline void _20d4d467d_setTypeToGreater(_20d4d11e6_binaryEval*);
inline void _20d4d4936_checkModData(_20d4d11e6_binaryEval*, jule::Ptr<_20d087165_Data>*);
inline void _20d4d4b34_mod(_20d4d11e6_binaryEval*);
inline jule::Bool _20d4d5030_numbersAreCompatibile(_20d4d11e6_binaryEval*, jule::Str*, jule::Str*);
inline jule::Ptr<_20d087165_Data> _20d4d52b6_evalFloat(_20d4d11e6_binaryEval*);
inline jule::Ptr<_20d087165_Data> _20d4d554c_evalInt(_20d4d11e6_binaryEval*);
inline jule::Ptr<_20d087165_Data> _20d4d57d3_evalPrim(_20d4d11e6_binaryEval*);
inline void _20d4d59d1_checkSpecialCases(_20d4d11e6_binaryEval*);
inline jule::Ptr<_20d087165_Data> _20d4d5c67_evalOp(_20d4d11e6_binaryEval*);
inline void _20d4d6020_evalConst(_20d4d11e6_binaryEval*, jule::Ptr<_20d087165_Data>*);
inline void _20d4d62c8_checkData(_20d4d11e6_binaryEval*, jule::Ptr<_20d087165_Data>*);
inline void _20d4d64c6_checkDatas(_20d4d11e6_binaryEval*);
inline void _20d4d677e_setModel(_20d4d11e6_binaryEval*, jule::Ptr<_20d087165_Data>*);
inline void _20d4d6a37_postEval(_20d4d11e6_binaryEval*, jule::Ptr<_20d087165_Data>*);
inline jule::Ptr<_20d087165_Data> _20d4d6e33_solveExplicit(_20d4d11e6_binaryEval*, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d087165_Data>*);
inline jule::Ptr<_20d087165_Data> _20d4d7274_eval(_20d4d11e6_binaryEval*, jule::Ptr<_20d374397_BinopExpr>*);
inline jule::Str _20d4de655_Str(_20d4de28c_TypeKind*);
inline jule::Bool _20d4de996_Equal(jule::Ptr<_20d4de28c_TypeKind>, jule::Ptr<_20d4de28c_TypeKind>);
inline jule::Bool _20d4e00e5_Binded(_20d4de28c_TypeKind*);
inline jule::Bool _20d4e037b_IsNil(_20d4de28c_TypeKind*);
inline jule::Bool _20d4e0612_Void(_20d4de28c_TypeKind*);
inline jule::Bool _20d4e0898_Comparable(_20d4de28c_TypeKind*);
inline jule::Bool _20d4e0b2e_Mutable(_20d4de28c_TypeKind*);
inline jule::Bool _20d4e0db5_Ordered(_20d4de28c_TypeKind*);
inline jule::Bool _20d4e114b_NilCompatible(_20d4de28c_TypeKind*);
inline jule::Bool _20d4e13d2_PerformsRC(_20d4de28c_TypeKind*);
inline jule::Bool _20d4e1668_SupportsCloning(_20d4de28c_TypeKind*);
inline jule::Bool _20d4e18ee_Variadicable(_20d4de28c_TypeKind*);
inline jule::Ptr<_20d4e710d_Prim> _20d4e1b85_Prim(_20d4de28c_TypeKind*);
inline jule::Ptr<_20d4eab39_Sptr> _20d4e1e1b_Sptr(_20d4de28c_TypeKind*);
inline jule::Ptr<_20d4ee401_Ptr> _20d4e21a2_Ptr(_20d4de28c_TypeKind*);
inline jule::Ptr<_20d3b85d9_Enum> _20d4e2438_Enum(_20d4de28c_TypeKind*);
inline jule::Ptr<_20d3b9ce4_TypeEnum> _20d4e26be_TypeEnum(_20d4de28c_TypeKind*);
inline jule::Ptr<_20d4ed92d_Arr> _20d4e2955_Arr(_20d4de28c_TypeKind*);
inline jule::Ptr<_20d4eb60c_Slc> _20d4e2bdb_Slc(_20d4de28c_TypeKind*);
inline jule::Ptr<_20d3a5a49_FnIns> _20d4e2e72_Fn(_20d4de28c_TypeKind*);
inline jule::Ptr<_20d39066b_StructIns> _20d4e3208_Struct(_20d4de28c_TypeKind*);
inline jule::Ptr<_20d3b5dde_Trait> _20d4e348e_Trait(_20d4de28c_TypeKind*);
inline jule::Ptr<_20d4ecca1_Map> _20d4e3725_Map(_20d4de28c_TypeKind*);
inline jule::Ptr<_20d4ec201_Tuple> _20d4e39ab_Tup(_20d4de28c_TypeKind*);
inline jule::Bool _20d4e3c42_comptime(_20d4de28c_TypeKind*);
inline jule::Ptr<_20d3be898_comptimeStructFields> _20d4e3ec8_comptimeStructFields(_20d4de28c_TypeKind*);
inline jule::Ptr<_20d3bcbe8_comptimeStructField> _20d4e425e_comptimeStructField(_20d4de28c_TypeKind*);
inline jule::Ptr<_20d3c556e_comptimeEnumFields> _20d4e44e5_comptimeEnumFields(_20d4de28c_TypeKind*);
inline jule::Ptr<_20d3c4260_comptimeEnumField> _20d4e477b_comptimeEnumField(_20d4de28c_TypeKind*);
inline jule::Ptr<_20d3c8e68_comptimeParams> _20d4e4a12_comptimeParams(_20d4de28c_TypeKind*);
inline jule::Ptr<_20d3c6c02_comptimeParam> _20d4e4c98_comptimeParam(_20d4de28c_TypeKind*);
inline jule::Ptr<_20d3bc18c_comptimeRange> _20d4e502e_comptimeRange(_20d4de28c_TypeKind*);
inline jule::Ptr<_20d3ca563_comptimeTypeInfos> _20d4e52b5_comptimeTypeInfos(_20d4de28c_TypeKind*);
inline jule::Ptr<_20d3cbb5d_comptimeTypeInfo> _20d4e554b_comptimeTypeInfo(_20d4de28c_TypeKind*);
inline jule::Ptr<_20d3c2b65_comptimeStatics> _20d4e57d2_comptimeStatics(_20d4de28c_TypeKind*);
inline jule::Ptr<_20d3c0ea4_comptimeStatic> _20d4e5a68_comptimeStatic(_20d4de28c_TypeKind*);
inline jule::Ptr<_20d3d3170_comptimeValue> _20d4e5cee_comptimeValue(_20d4de28c_TypeKind*);
inline jule::Ptr<_20d3d70b9_comptimeFile> _20d4e6085_comptimeFile(_20d4de28c_TypeKind*);
inline jule::Ptr<_20d3d59be_comptimeFiles> _20d4e631b_comptimeFiles(_20d4de28c_TypeKind*);
inline jule::Bool _20d4e6a7a_checked(_20d4e6706_TypeSymbol*);
inline jule::Str _20d4e744e_Str(_20d4e710d_Prim*);
inline jule::Bool _20d4e7790_Equal(jule::Ptr<_20d4e710d_Prim>, jule::Ptr<_20d4de28c_TypeKind>);
inline jule::Bool _20d4e7c35_IsConstraint(_20d4e710d_Prim*);
inline jule::Bool _20d4e7ebb_IsI8(_20d4e710d_Prim*);
inline jule::Bool _20d4e8252_IsI16(_20d4e710d_Prim*);
inline jule::Bool _20d4e84d8_IsI32(_20d4e710d_Prim*);
inline jule::Bool _20d4e876e_IsI64(_20d4e710d_Prim*);
inline jule::Bool _20d4e8a05_IsU8(_20d4e710d_Prim*);
inline jule::Bool _20d4e8c8b_IsU16(_20d4e710d_Prim*);
inline jule::Bool _20d4e9022_IsU32(_20d4e710d_Prim*);
inline jule::Bool _20d4e92a8_IsU64(_20d4e710d_Prim*);
inline jule::Bool _20d4e953e_IsF32(_20d4e710d_Prim*);
inline jule::Bool _20d4e97c5_IsF64(_20d4e710d_Prim*);
inline jule::Bool _20d4e9a5b_IsInt(_20d4e710d_Prim*);
inline jule::Bool _20d4e9ce2_IsUint(_20d4e710d_Prim*);
inline jule::Bool _20d4ea078_IsUintptr(_20d4e710d_Prim*);
inline jule::Bool _20d4ea30e_IsBool(_20d4e710d_Prim*);
inline jule::Bool _20d4ea595_IsStr(_20d4e710d_Prim*);
inline jule::Bool _20d4ea82b_IsAny(_20d4e710d_Prim*);
inline jule::Str _20d4eaead_Str(_20d4eab39_Sptr*);
inline jule::Bool _20d4eb2ee_Equal(jule::Ptr<_20d4eab39_Sptr>, jule::Ptr<_20d4de28c_TypeKind>);
inline jule::Str _20d4eba91_Str(_20d4eb60c_Slc*);
inline jule::Bool _20d4ebdd2_Equal(jule::Ptr<_20d4eb60c_Slc>, jule::Ptr<_20d4de28c_TypeKind>);
inline jule::Str _20d4ec575_Str(_20d4ec201_Tuple*);
inline jule::Bool _20d4ec8b6_Equal(jule::Ptr<_20d4ec201_Tuple>, jule::Ptr<_20d4de28c_TypeKind>);
inline jule::Str _20d4ed125_Str(_20d4ecca1_Map*);
inline jule::Bool _20d4ed466_Equal(jule::Ptr<_20d4ecca1_Map>, jule::Ptr<_20d4de28c_TypeKind>);
inline jule::Str _20d4edca2_Str(_20d4ed92d_Arr*);
inline jule::Bool _20d4ee0e3_Equal(jule::Ptr<_20d4ed92d_Arr>, jule::Ptr<_20d4de28c_TypeKind>);
inline jule::Str _20d4ee775_Str(_20d4ee401_Ptr*);
inline jule::Bool _20d4eeab6_Equal(jule::Ptr<_20d4ee401_Ptr>, jule::Ptr<_20d4de28c_TypeKind>);
inline jule::Bool _20d4eee3a_IsUnsafe(_20d4ee401_Ptr*);
inline void _20d501b2e_pushErr(_20d5013e2_typeChecker*, jule::Ptr<_20d3510bb_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _20d501d2c_allowBuiltin(_20d5013e2_typeChecker*);
inline void _20d50202a_disallowBuiltin(_20d5013e2_typeChecker*);
inline void _2123c568b_pushReference(_20d5013e2_typeChecker*, jule::Ptr<_20d39066b_StructIns>*);
inline void _2123c865b_pushReference(_20d5013e2_typeChecker*, jule::Ptr<_20d3b5dde_Trait>*);
inline void _20d50258b_pushReferenceByKind(_20d5013e2_typeChecker*, jule::Ptr<_20d4de28c_TypeKind>*);
inline void _20d5029a9_pushCycleError(_20d5013e2_typeChecker*, jule::Any, jule::Any, _2240a0ad5_StrBuilder*);
inline jule::Bool _20d502da5_checkCrossCycle(_20d5013e2_typeChecker*, jule::Any, _2240a0ad5_StrBuilder*);
inline jule::Bool _20d5032a1_checkIllegalCycles(_20d5013e2_typeChecker*, jule::Ptr<_20d36c0a4_IdentTypeDecl>*, jule::Any);
inline jule::Trait<_20d4ddcd6_Kind> _20d50369c_fromTypeAlias(_20d5013e2_typeChecker*, jule::Ptr<_20d36c0a4_IdentTypeDecl>*, jule::Ptr<_20d4dd49a_TypeAlias>*);
inline jule::Ptr<_20d3b85d9_Enum> _20d503a98_fromEnum(_20d5013e2_typeChecker*, jule::Ptr<_20d36c0a4_IdentTypeDecl>*, jule::Ptr<_20d3b85d9_Enum>*);
inline jule::Ptr<_20d3b9ce4_TypeEnum> _20d503e94_fromTypeEnum(_20d5013e2_typeChecker*, jule::Ptr<_20d36c0a4_IdentTypeDecl>*, jule::Ptr<_20d3b9ce4_TypeEnum>*);
inline jule::Ptr<_20d3b5dde_Trait> _20d504390_fromTrait(_20d5013e2_typeChecker*, jule::Ptr<_20d36c0a4_IdentTypeDecl>*, jule::Ptr<_20d3b5dde_Trait>*);
inline jule::Bool _20d50478b_checkStructIns(_20d5013e2_typeChecker*, jule::Ptr<_20d39066b_StructIns>*, jule::Ptr<_20d3510bb_Token>*);
inline void _20d504a44_appendUsedStructReference(_20d5013e2_typeChecker*, jule::Ptr<_20d38c58b_Struct>*);
inline jule::Ptr<_20d39066b_StructIns> _20d504e40_buildStructInstance(_20d5013e2_typeChecker*, jule::Ptr<_20d36c0a4_IdentTypeDecl>*, jule::Ptr<_20d38c58b_Struct>*);
inline jule::Ptr<_20d39066b_StructIns> _20d50533b_fromStruct(_20d5013e2_typeChecker*, jule::Ptr<_20d36c0a4_IdentTypeDecl>*, jule::Ptr<_20d38c58b_Struct>*);
inline jule::Trait<_20d4ddcd6_Kind> _20d50567c_getDef(_20d5013e2_typeChecker*, jule::Ptr<_20d36c0a4_IdentTypeDecl>*);
inline jule::Trait<_20d4ddcd6_Kind> _20d5059bd_buildIdent(_20d5013e2_typeChecker*, jule::Ptr<_20d36c0a4_IdentTypeDecl>);
inline jule::Trait<_20d4ddcd6_Kind> _20d505d0e_buildSubIdent(_20d5013e2_typeChecker*, jule::Ptr<_20d36c3a1_SubIdentTypeDecl>);
inline jule::Ptr<_20d4eab39_Sptr> _20d506150_buildSptrFromType(_20d5013e2_typeChecker*, jule::Ptr<_20d4de28c_TypeKind>*);
inline jule::Ptr<_20d4eab39_Sptr> _20d506491_buildSptr(_20d5013e2_typeChecker*, jule::Ptr<_20d36ca44_SptrTypeDecl>);
inline jule::Ptr<_20d4ee401_Ptr> _20d5067d2_buildPtrFromType(_20d5013e2_typeChecker*, jule::Ptr<_20d4de28c_TypeKind>*);
inline jule::Ptr<_20d4ee401_Ptr> _20d506b23_buildPtr(_20d5013e2_typeChecker*, jule::Ptr<_20d36d4c3_PtrTypeDecl>);
inline jule::Ptr<_20d4eb60c_Slc> _20d506e64_buildSlc(_20d5013e2_typeChecker*, jule::Ptr<_20d36cdc9_SlcTypeDecl>);
inline jule::Ptr<_20d4ed92d_Arr> _20d5072a5_buildArr(_20d5013e2_typeChecker*, jule::Ptr<_20d36dc65_ArrTypeDecl>);
inline jule::Ptr<_20d4ecca1_Map> _20d5075e6_buildMap(_20d5013e2_typeChecker*, jule::Ptr<_20d36e4b3_MapTypeDecl>);
inline jule::Ptr<_20d4ec201_Tuple> _20d507937_buildTuple(_20d5013e2_typeChecker*, jule::Ptr<_20d36d1c6_TupleTypeDecl>);
inline jule::Bool _20d507c78_checkFuncTypes(_20d5013e2_typeChecker*, jule::Ptr<_20d3a5a49_FnIns>*);
inline jule::Ptr<_20d3a5a49_FnIns> _20d5080b9_buildFunc(_20d5013e2_typeChecker*, jule::Ptr<_20d37d659_FnDecl>);
inline jule::Trait<_20d4ddcd6_Kind> _20d50840a_buildByNamespace(_20d5013e2_typeChecker*, jule::Ptr<_20d36c747_NamespaceTypeDecl>);
inline jule::Ptr<_20d4de28c_TypeKind> _20d50874b_build(_20d5013e2_typeChecker*, jule::Any*);
inline jule::Ptr<_20d4de28c_TypeKind> _20d508a8c_checkDecl(_20d5013e2_typeChecker*, jule::Ptr<_20d36b999_TypeDecl>*);
inline jule::Bool static__20d5094d8_prim(jule::Str*, jule::Ptr<_20d4e710d_Prim>);
inline jule::Bool static__20d50985c_exist(jule::Str*, jule::Ptr<_20d4de28c_TypeKind>*);
inline void _20dee171c_stop(_20dee10ac_scopeParser*);
inline jule::Bool _20dee19a3_stopped(_20dee10ac_scopeParser*);
inline jule::Bool _20dee1c39_finished(_20dee10ac_scopeParser*);
inline jule::Bool _20dee1ec0_isLastSt(_20dee10ac_scopeParser*);
inline void _20dee2333_pushErr(_20dee10ac_scopeParser*, jule::Ptr<_20d3510bb_Token>, jule::Str);
inline void _20dee2696_pushSuggestion(_20dee10ac_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _20dee294e_insertAsNext(_20dee10ac_scopeParser*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Ptr<_20dee071b_stmt> _20dee2bd5_next(_20dee10ac_scopeParser*);
inline jule::Ptr<_20d37b9ba_ScopeTree> _20dee30d1_buildScope(_20dee10ac_scopeParser*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*, jule::Ptr<_20d3510bb_Token>);
inline jule::Ptr<_20d37e737_VarDecl> _20dee3422_buildVarSt(_20dee10ac_scopeParser*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Ptr<_20d37eb11_RetSt> _20dee3763_buildRetSt(_20dee10ac_scopeParser*, jule::Slice<jule::Ptr<_20d3510bb_Token>>);
inline jule::Ptr<_20d3802a4_Iter> _20dee3aa4_buildWhileNextIter(_20dee10ac_scopeParser*, jule::Ptr<_20dee071b_stmt>*);
inline jule::Ptr<_20d380ace_WhileKind> _20dee3de5_buildWhileIterKind(_20dee10ac_scopeParser*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>> _20dee4236_getRangeKindKeysTokens(_20dee10ac_scopeParser*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Ptr<_20d37e737_VarDecl> _20dee4577_buildRangeKindKey(_20dee10ac_scopeParser*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Slice<jule::Ptr<_20d37e737_VarDecl>> _20dee48b8_buildRangeKindKeys(_20dee10ac_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>>*);
inline void _20dee4c2b_setupRangeKindKeysPlain(_20dee10ac_scopeParser*, jule::Ptr<_20d3814d6_RangeKind>*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline void _20dee508e_setupRangeKindKeysExplicit(_20dee10ac_scopeParser*, jule::Ptr<_20d3814d6_RangeKind>*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline void _20dee5402_setupRangeKindKeys(_20dee10ac_scopeParser*, jule::Ptr<_20d3814d6_RangeKind>*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Ptr<_20d3814d6_RangeKind> _20dee58a8_buildRangeIterKind(_20dee10ac_scopeParser*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*, jule::Ptr<_20d3510bb_Token>*);
inline jule::Any _20dee5ca4_buildCommonIterKind(_20dee10ac_scopeParser*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*, jule::Ptr<_20d3510bb_Token>*);
inline jule::Ptr<_20d3802a4_Iter> _20dee60e5_buildCommonIter(_20dee10ac_scopeParser*, jule::Slice<jule::Ptr<_20d3510bb_Token>>);
inline jule::Ptr<_20d3802a4_Iter> _20dee6436_buildIterSt(_20dee10ac_scopeParser*, jule::Ptr<_20dee071b_stmt>*);
inline jule::Ptr<_20d3818b0_BreakSt> _20dee6777_buildBreakSt(_20dee10ac_scopeParser*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Ptr<_20d381c89_ContSt> _20dee6ab8_buildContSt(_20dee10ac_scopeParser*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Ptr<_20d382240_If> _20dee6e09_buildIf(_20dee10ac_scopeParser*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Ptr<_20d382619_Else> _20dee724a_buildElse(_20dee10ac_scopeParser*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Ptr<_20d382ac0_Conditional> _20dee758b_buildIfElseChain(_20dee10ac_scopeParser*, jule::Slice<jule::Ptr<_20d3510bb_Token>>);
inline jule::Ptr<_20d370ccd_Expr> _20dee78cc_buildCoCallSt(_20dee10ac_scopeParser*, jule::Slice<jule::Ptr<_20d3510bb_Token>>);
inline jule::Ptr<_20d379457_GotoSt> _20dee7c1d_buildGotoSt(_20dee10ac_scopeParser*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Ptr<_20d379754_FallSt> _20dee805e_buildFallSt(_20dee10ac_scopeParser*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Ptr<_20d38330c_TypeAliasDecl> _20dee83a0_buildTypeAliasSt(_20dee10ac_scopeParser*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline void _20dee8878_pushCaseExpr(_20dee10ac_scopeParser*, jule::Slice<jule::Ptr<_20d3510bb_Token>>, jule::Ptr<_20d3510bb_Token>, jule::Bool, jule::Slice<jule::Ptr<_20d370ccd_Expr>>*);
inline jule::Slice<jule::Ptr<_20d370ccd_Expr>> _20dee8d2e_buildCaseExprs(_20dee10ac_scopeParser*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*, jule::Ptr<_20d3510bb_Token>*, jule::Bool);
inline jule::Ptr<_20d37b9ba_ScopeTree> _20dee9170_buildCaseScope(_20dee10ac_scopeParser*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline __jule_tuple_x_20d3837b3_Case__jule_tuple_bool _20dee956b_buildCase(_20dee10ac_scopeParser*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*, jule::Bool);
inline __jule_tuple_sx_20d3837b3_Case__jule_tuple_x_20d382619_Else _20dee9967_buildCases(_20dee10ac_scopeParser*, jule::Slice<jule::Ptr<_20d3510bb_Token>>, jule::Bool);
inline jule::Ptr<_20d384000_MatchCase> _20dee9ca8_buildMatchCase(_20dee10ac_scopeParser*, jule::Slice<jule::Ptr<_20d3510bb_Token>>);
inline jule::Ptr<_20d37b9ba_ScopeTree> _20deea0e9_buildScopeSt(_20dee10ac_scopeParser*, jule::Slice<jule::Ptr<_20d3510bb_Token>>);
inline jule::Ptr<_20d37907d_LabelSt> _20deea43a_buildLabelSt(_20dee10ac_scopeParser*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline __jule_tuple__20d37b107_StmtData__jule_tuple_bool _20deea77b_buildIdSt(_20dee10ac_scopeParser*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Ptr<_20e00aadd_assignInfo> _20deeaabc_buildAssignInfo(_20dee10ac_scopeParser*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Ptr<_20d379db4_AssignLeft> _20deeae0d_buildAssignL(_20dee10ac_scopeParser*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Slice<jule::Ptr<_20d379db4_AssignLeft>> _20deeb24e_buildAssignLs(_20dee10ac_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>>*);
inline __jule_tuple_x_20d37a447_AssignSt__jule_tuple_bool _20deeb590_buildPlainAssign(_20dee10ac_scopeParser*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Bool _20deeb98b_buildDeclAssign1(_20dee10ac_scopeParser*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*, jule::Ptr<_20d37a447_AssignSt>*);
inline __jule_tuple_x_20d37a447_AssignSt__jule_tuple_bool _20deebccc_buildDeclAssign(_20dee10ac_scopeParser*, jule::Slice<jule::Ptr<_20d3510bb_Token>>);
inline __jule_tuple_x_20d37a447_AssignSt__jule_tuple_bool _20deec11d_buildAssignSt(_20dee10ac_scopeParser*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Ptr<_20d3716a2_UseExpr> _20deec45e_buildUseExpr(_20dee10ac_scopeParser*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Any _20deec7a0_buildSt(_20dee10ac_scopeParser*, jule::Ptr<_20dee071b_stmt>*);
inline void _20deecb13_build(_20dee10ac_scopeParser*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*, jule::Ptr<_20d37b9ba_ScopeTree>*);
inline void _20deede44_pushErr(_20deed680_exprBuilder*, jule::Ptr<_20d3510bb_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _20deee2a7_pushSuggestion(_20deed680_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_20d37199e_TupleExpr> _20deee5e8_buildTuple(_20deed680_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>>*);
inline jule::Ptr<_20d371d78_LitExpr> _20deee939_buildLit(_20deed680_exprBuilder*, jule::Ptr<_20d3510bb_Token>);
inline jule::Any _20e0000bb_buildSingle(_20deed680_exprBuilder*, jule::Ptr<_20d3510bb_Token>);
inline jule::Ptr<_20d372708_IdentExpr> _20e00040c_buildBindIdent(_20deed680_exprBuilder*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Ptr<_20d372d8a_UnaryExpr> _20e00074d_buildUnary(_20deed680_exprBuilder*, jule::Slice<jule::Ptr<_20d3510bb_Token>>);
inline jule::Ptr<_20d373de1_SubIdentExpr> _20e000a8e_buildObjSubIdent(_20deed680_exprBuilder*, jule::Slice<jule::Ptr<_20d3510bb_Token>>);
inline jule::Ptr<_20d373a17_NsSelectionExpr> _20e000dd0_buildNsSubIdent(_20deed680_exprBuilder*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Ptr<_20d36b999_TypeDecl> _20e001221_buildType(_20deed680_exprBuilder*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Any _20e001562_buildSubIdent(_20deed680_exprBuilder*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Ptr<_20d373264_VariadicExpr> _20e0018a3_buildVariadic(_20deed680_exprBuilder*, jule::Slice<jule::Ptr<_20d3510bb_Token>>);
inline jule::Ptr<_20d3710ca_RangeExpr> _20e001be4_buildBetweenParentheses(_20deed680_exprBuilder*, jule::Slice<jule::Ptr<_20d3510bb_Token>>);
inline jule::Ptr<_20d37363d_CastExpr> _20e002035_tryBuildCast(_20deed680_exprBuilder*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline void _20e002453_pushArg(_20deed680_exprBuilder*, jule::Slice<jule::Ptr<_20d370ccd_Expr>>*, jule::Slice<jule::Ptr<_20d3510bb_Token>>, jule::Ptr<_20d3510bb_Token>);
inline jule::Slice<jule::Ptr<_20d370ccd_Expr>> _20e002794_buildArgs(_20deed680_exprBuilder*, jule::Slice<jule::Ptr<_20d3510bb_Token>>);
inline jule::Ptr<_20d374a07_FnCallExpr> _20e00308b_buildFnCall(_20deed680_exprBuilder*, jule::Ptr<_20d3510bb_Token>*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Any _20e0033cc_buildParenthesesRange(_20deed680_exprBuilder*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Ptr<_20d372252_UnsafeExpr> _20e00371d_buildUnsafeExpr(_20deed680_exprBuilder*, jule::Slice<jule::Ptr<_20d3510bb_Token>>);
inline jule::Ptr<_20d37d659_FnDecl> _20e003a5e_buildAnonFn(_20deed680_exprBuilder*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Any _20e003da0_buildUnsafe(_20deed680_exprBuilder*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline void _20e0042bd_pushRangeLitPart(_20deed680_exprBuilder*, jule::Slice<jule::Ptr<_20d3510bb_Token>>, jule::Ptr<_20d3510bb_Token>, jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>> _20e00460e_getBraceRangeLitExprParts(_20deed680_exprBuilder*, jule::Slice<jule::Ptr<_20d3510bb_Token>>);
inline jule::Ptr<_20d3754ec_FieldExprPair> _20e004950_buildFieldExprPair(_20deed680_exprBuilder*, jule::Slice<jule::Ptr<_20d3510bb_Token>>);
inline jule::Ptr<_20d370ccd_Expr> _20e004c91_buildStructLitExpr(_20deed680_exprBuilder*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Slice<jule::Ptr<_20d370ccd_Expr>> _20e0050d2_buildStructLitExprs(_20deed680_exprBuilder*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Ptr<_20d375d27_StructLit> _20e005423_buildTypedStructLiteral(_20deed680_exprBuilder*, jule::Slice<jule::Ptr<_20d3510bb_Token>>);
inline jule::Ptr<_20d370ccd_Expr> _20e005764_buildBraceLitPart(_20deed680_exprBuilder*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Ptr<_20d3762cd_BraceLit> _20e005aa5_buildBraceLit(_20deed680_exprBuilder*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Any _20e005de6_buildBraceRange(_20deed680_exprBuilder*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>> _20e006237_getEnumerableParts(_20deed680_exprBuilder*, jule::Slice<jule::Ptr<_20d3510bb_Token>>);
inline jule::Ptr<_20d377301_SliceExpr> _20e006578_buildSlice(_20deed680_exprBuilder*, jule::Slice<jule::Ptr<_20d3510bb_Token>>);
inline jule::Ptr<_20d377c91_IndexingExpr> _20e006a2e_buildIndexing(_20deed680_exprBuilder*, jule::Slice<jule::Ptr<_20d3510bb_Token>>, jule::Slice<jule::Ptr<_20d3510bb_Token>>, jule::Ptr<_20d3510bb_Token>);
inline jule::Ptr<_20d378401_SlicingExpr> _20e00714a_buildSlicing(_20deed680_exprBuilder*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*, jule::Ptr<_20d3510bb_Token>*, jule::Ptr<_20d3510bb_Token>);
inline jule::Any _20e00748b_buildBracketRange(_20deed680_exprBuilder*, jule::Slice<jule::Ptr<_20d3510bb_Token>>);
inline jule::Any _20e0077cc_buildExclRight(_20deed680_exprBuilder*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Any _20e007b1d_buildData(_20deed680_exprBuilder*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Any _20e008019_buildBinop(_20deed680_exprBuilder*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*, jule::I64);
inline jule::Any _20e00835a_build(_20deed680_exprBuilder*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Any _20e00869b_buildKind(_20deed680_exprBuilder*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Ptr<_20d370ccd_Expr> _20e0089dc_buildFromTokens(_20deed680_exprBuilder*, jule::Slice<jule::Ptr<_20d3510bb_Token>>);
inline void _20e00e581_stop(_20e00e284_parser*);
inline jule::Bool _20e00e817_stopped(_20e00e284_parser*);
inline void _20e00ec35_pushErr(_20e00e284_parser*, jule::Ptr<_20d3510bb_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _20e010098_pushSuggestion(_20e00e284_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_20d370ccd_Expr> _20e0103d9_buildExpr(jule::Ptr<_20e00e284_parser>, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Ptr<_20d36adb6_Directive> _20e01072a_buildDirective(_20e00e284_parser*, jule::Slice<jule::Ptr<_20d3510bb_Token>>);
inline void _20e0109d3_pushDirective(_20e00e284_parser*, jule::Ptr<_20d36adb6_Directive>);
inline jule::Ptr<_20d37b9ba_ScopeTree> _20e010dce_buildScope(jule::Ptr<_20e00e284_parser>, jule::Slice<jule::Ptr<_20d3510bb_Token>>*, jule::Ptr<_20d3510bb_Token>);
inline __jule_tuple_x_20d36b999_TypeDecl__jule_tuple_bool _20e011385__buildType(jule::Ptr<_20e00e284_parser>, jule::Slice<jule::Ptr<_20d3510bb_Token>>*, jule::I64*, jule::Bool);
inline __jule_tuple_x_20d36b999_TypeDecl__jule_tuple_bool _20e01183b_buildType(jule::Ptr<_20e00e284_parser>, jule::Slice<jule::Ptr<_20d3510bb_Token>>*, jule::I64*, jule::Bool);
inline jule::Ptr<_20d38330c_TypeAliasDecl> _20e011b7c_buildTypeAliasDecl(jule::Ptr<_20e00e284_parser>, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline void _20e011ee0_buildVarTypeAndExpr(jule::Ptr<_20e00e284_parser>, jule::Ptr<_20d37e737_VarDecl>*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline void _20e012353_buildVarCommon(jule::Ptr<_20e00e284_parser>, jule::Ptr<_20d37e737_VarDecl>*, jule::Slice<jule::Ptr<_20d3510bb_Token>>);
inline void _20e012771_buildVarBegin(_20e00e284_parser*, jule::Ptr<_20d37e737_VarDecl>*, jule::I64*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Ptr<_20d37e737_VarDecl> _20e012ab2_buildVar(jule::Ptr<_20e00e284_parser>, jule::Slice<jule::Ptr<_20d3510bb_Token>>);
inline jule::Ptr<_20d378ba4_GenericDecl> _20e012e03_buildGeneric(jule::Ptr<_20e00e284_parser>, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Slice<jule::Ptr<_20d378ba4_GenericDecl>> _20e0132ee_buildGenerics(jule::Ptr<_20e00e284_parser>, jule::Slice<jule::Ptr<_20d3510bb_Token>>*, jule::Ptr<_20d3510bb_Token>*);
inline jule::Ptr<_20d37c207_ParamDecl> _20e013640_buildSelfParam(_20e00e284_parser*, jule::Slice<jule::Ptr<_20d3510bb_Token>>);
inline void _20e013a5d_paramTypeBegin(_20e00e284_parser*, jule::Ptr<_20d37c207_ParamDecl>*, jule::I64*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline void _20e013dc1_buildParamType(jule::Ptr<_20e00e284_parser>, jule::Ptr<_20d37c207_ParamDecl>*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline void _20e014234_buildParamBody(jule::Ptr<_20e00e284_parser>, jule::Ptr<_20d37c207_ParamDecl>*, jule::Slice<jule::Ptr<_20d3510bb_Token>>);
inline jule::Ptr<_20d37c207_ParamDecl> _20e014575_buildParam(jule::Ptr<_20e00e284_parser>, jule::Slice<jule::Ptr<_20d3510bb_Token>>);
inline void _20e01482d_checkParams(_20e00e284_parser*, jule::Slice<jule::Ptr<_20d37c207_ParamDecl>>*);
inline jule::Slice<jule::Ptr<_20d37c207_ParamDecl>> _20e014c29_buildParams(jule::Ptr<_20e00e284_parser>, jule::Slice<jule::Ptr<_20d3510bb_Token>>*, jule::Bool);
inline __jule_tuple_x_20d36e88c_RetTypeDecl__jule_tuple_bool _20e015125_buildMultiRetType(jule::Ptr<_20e00e284_parser>, jule::Slice<jule::Ptr<_20d3510bb_Token>>*, jule::I64*);
inline __jule_tuple_x_20d36e88c_RetTypeDecl__jule_tuple_bool _20e015521_buildRetType(jule::Ptr<_20e00e284_parser>, jule::Slice<jule::Ptr<_20d3510bb_Token>>*, jule::I64*);
inline jule::Ptr<_20d37d659_FnDecl> _20e0159c7_buildFnPrototype(jule::Ptr<_20e00e284_parser>, jule::Slice<jule::Ptr<_20d3510bb_Token>>*, jule::I64*, jule::Bool);
inline jule::Ptr<_20d37d659_FnDecl> _20e015e7d_buildFn(jule::Ptr<_20e00e284_parser>, jule::Slice<jule::Ptr<_20d3510bb_Token>>*, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_20d3510bb_Token>> _20e0162be_getUseDeclSelectors(_20e00e284_parser*, jule::Slice<jule::Ptr<_20d3510bb_Token>>);
inline void _20e016632_buildBindUseDecl(_20e00e284_parser*, jule::Ptr<_20d384819_UseDecl>*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline void _20e016995_buildStdUseDecl(_20e00e284_parser*, jule::Ptr<_20d384819_UseDecl>*, jule::Slice<jule::Ptr<_20d3510bb_Token>>);
inline void _20e016d08_buildIdentUseDecl(_20e00e284_parser*, jule::Ptr<_20d384819_UseDecl>*, jule::Slice<jule::Ptr<_20d3510bb_Token>>);
inline void _20e01716b_parseUseDecl(_20e00e284_parser*, jule::Ptr<_20d384819_UseDecl>*, jule::Slice<jule::Ptr<_20d3510bb_Token>>);
inline jule::Ptr<_20d384819_UseDecl> _20e017567_buildUseDecl(_20e00e284_parser*, jule::Slice<jule::Ptr<_20d3510bb_Token>>, jule::Bool);
inline jule::Ptr<_20d36b999_TypeDecl> _20e017963_buildTypeEnumItemKind(jule::Ptr<_20e00e284_parser>, jule::I64*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Slice<jule::Ptr<_20d3861ab_TypeEnumItemDecl>> _20e017ca4_buildTypeEnumItems(jule::Ptr<_20e00e284_parser>, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Ptr<_20d38681b_TypeEnumDecl> _20e0180e5_buildTypeEnumDecl(jule::Ptr<_20e00e284_parser>, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Ptr<_20d370ccd_Expr> _20e0184e1_buildEnumItemExpr(jule::Ptr<_20e00e284_parser>, jule::I64*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Slice<jule::Ptr<_20d384cc0_EnumItemDecl>> _20e018832_buildEnumItems(jule::Ptr<_20e00e284_parser>, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Ptr<_20d385881_EnumDecl> _20e018b73_buildEnumDecl(jule::Ptr<_20e00e284_parser>, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Any _20e018eb4_buildNodeEnumDecl(jule::Ptr<_20e00e284_parser>, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Ptr<_20d386ad5_FieldDecl> _20e019305_buildField(jule::Ptr<_20e00e284_parser>, jule::Slice<jule::Ptr<_20d3510bb_Token>>);
inline jule::Slice<jule::Ptr<_20d386ad5_FieldDecl>> _20e019646_buildStructDeclFields(jule::Ptr<_20e00e284_parser>, jule::Slice<jule::Ptr<_20d3510bb_Token>>);
inline jule::Ptr<_20d3874cb_StructDecl> _20e019987_buildStructDecl(jule::Ptr<_20e00e284_parser>, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline void _20e019c40_checkMethodReceiver(_20e00e284_parser*, jule::Ptr<_20d37d659_FnDecl>*);
inline void _20e01a0a3_buildTraitBody(jule::Ptr<_20e00e284_parser>, jule::Ptr<_20d387c18_TraitDecl>*, jule::Slice<jule::Ptr<_20d3510bb_Token>>);
inline jule::Ptr<_20d387c18_TraitDecl> _20e01a3e4_buildTraitDecl(jule::Ptr<_20e00e284_parser>, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Ptr<_20d37d659_FnDecl> _20e01a735_buildBindFn(jule::Ptr<_20e00e284_parser>, jule::Slice<jule::Ptr<_20d3510bb_Token>>);
inline jule::Ptr<_20d37e737_VarDecl> _20e01aa76_buildBindVar(jule::Ptr<_20e00e284_parser>, jule::Slice<jule::Ptr<_20d3510bb_Token>>);
inline jule::Ptr<_20d3874cb_StructDecl> _20e01adb7_buildBindStruct(jule::Ptr<_20e00e284_parser>, jule::Slice<jule::Ptr<_20d3510bb_Token>>);
inline jule::Ptr<_20d38330c_TypeAliasDecl> _20e01b208_buildBindTypeAlias(jule::Ptr<_20e00e284_parser>, jule::Slice<jule::Ptr<_20d3510bb_Token>>);
inline jule::Ptr<_20d384819_UseDecl> _20e01b549_buildBindUse(jule::Ptr<_20e00e284_parser>, jule::Slice<jule::Ptr<_20d3510bb_Token>>);
inline jule::Any _20e01b88a_buildBind(jule::Ptr<_20e00e284_parser>, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Ptr<_20d37d659_FnDecl> _20e01bbcb_getMethod(jule::Ptr<_20e00e284_parser>, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline void _20e01c03e_parseImplBody(jule::Ptr<_20e00e284_parser>, jule::Ptr<_20d388378_Impl>*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Ptr<_20d388378_Impl> _20e01c380_buildImpl(jule::Ptr<_20e00e284_parser>, jule::Slice<jule::Ptr<_20d3510bb_Token>>);
inline jule::Any _20e01c6c1_buildNodeData(jule::Ptr<_20e00e284_parser>, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline void _20e01c979_applyFnMeta(_20e00e284_parser*, jule::Ptr<_20d37d659_FnDecl>*);
inline void _20e01cc32_applyMeta(_20e00e284_parser*, _20d36a998_Node*);
inline void _20e01ceda_pushUseDecl(jule::Ptr<_20e00e284_parser>, jule::Ptr<_20d384819_UseDecl>*);
inline jule::Bool _20e01d32b_pushMetaNodes(jule::Ptr<_20e00e284_parser>, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline _20d36a998_Node _20e01d66c_parseNode(jule::Ptr<_20e00e284_parser>, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline void _20e01d925_appendNode(jule::Ptr<_20e00e284_parser>, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline void _20e01dded_removeRange(_20e00e284_parser*, jule::I64, jule::U64, jule::Slice<jule::Ptr<_20d3510bb_Token>>*, jule::Slice<jule::I64>*);
inline void _20e01e31b_pushWrongOrderCloseErr(_20e00e284_parser*, jule::Ptr<_20d3510bb_Token>*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*, jule::Slice<jule::I64>*);
inline void _20e01e7e4_pushRangeClose(_20e00e284_parser*, jule::Ptr<_20d3510bb_Token>, jule::U64, jule::Slice<jule::Ptr<_20d3510bb_Token>>*, jule::Slice<jule::I64>*);
inline void _20e01ea9c_checkRanges(_20e00e284_parser*, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline void _20e01ed55_parse(jule::Ptr<_20e00e284_parser>, jule::Ptr<_20d356885_File>*);
inline void _20e021692_pushErr(_20e0210ed_typeBuilder*, jule::Ptr<_20d3510bb_Token>, jule::Str);
inline void _20e021a05_pushSuggestion(_20e0210ed_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_20d36b999_TypeDecl> _20e021c8b_buildNamespace(_20e0210ed_typeBuilder*);
inline jule::Slice<jule::Ptr<_20d36b999_TypeDecl>> _20e022022_buildGenerics(_20e0210ed_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>> _20e0222a8_identGenerics(_20e0210ed_typeBuilder*);
inline jule::Ptr<_20d36b999_TypeDecl> _20e02253e_buildIdent(_20e0210ed_typeBuilder*);
inline jule::Ptr<_20d36b999_TypeDecl> _20e0227c5_buildCppLink(_20e0210ed_typeBuilder*);
inline jule::Ptr<_20d36b999_TypeDecl> _20e022a5b_buildFn(_20e0210ed_typeBuilder*);
inline jule::Ptr<_20d36b999_TypeDecl> _20e022ce2_buildPtr(_20e0210ed_typeBuilder*);
inline jule::Ptr<_20d36b999_TypeDecl> _20e023078_buildSptr(_20e0210ed_typeBuilder*);
inline jule::Ptr<_20d36b999_TypeDecl> _20e02330e_buildSlc(_20e0210ed_typeBuilder*);
inline jule::Ptr<_20d36b999_TypeDecl> _20e023595_buildArr(_20e0210ed_typeBuilder*);
inline jule::Ptr<_20d36b999_TypeDecl> _20e02382b_buildMap(_20e0210ed_typeBuilder*);
inline jule::Ptr<_20d36b999_TypeDecl> _20e023ab2_buildEnumerable(_20e0210ed_typeBuilder*);
inline jule::Ptr<_20d36b999_TypeDecl> _20e023d48_step(_20e0210ed_typeBuilder*);
inline __jule_tuple_x_20d36b999_TypeDecl__jule_tuple_bool _20e0240ce_build(_20e0210ed_typeBuilder*);
inline void _20d7bb091_pushErr(_20d7baa41_directiveEval*, jule::Ptr<_20d3510bb_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>> _20d7bb48c_splitOperans(_20d7baa41_directiveEval*, jule::U64, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Bool _20d7bb7cd_evalDirectiveIdent(_20d7baa41_directiveEval*, jule::Str);
inline jule::Bool _20d7bbb1e_evalDirectivePart(_20d7baa41_directiveEval*, jule::Slice<jule::Ptr<_20d3510bb_Token>>);
inline jule::Bool _20d7bbda5_eval(_20d7baa41_directiveEval*);
inline jule::Ptr<_20e025234_JuleImporter> static__20e025630_New(_20d7b9589_CompileInfo);
inline jule::Slice<jule::Ptr<_20d414d94_ImportInfo>> _20e0258b6_AllPackages(_20e025234_JuleImporter*);
inline void _20e025d06_SetModPath(_20e025234_JuleImporter*, jule::Str);
inline jule::Str _20e02608c_GetModPath(_20e025234_JuleImporter*);
inline jule::Str _20e0263cd_ModById(_20e025234_JuleImporter*, jule::I64);
inline jule::Ptr<_20d414d94_ImportInfo> _20e02671e_GetImport(_20e025234_JuleImporter*, jule::Str);
inline __jule_tuple_sx_20d3699ec_Ast__jule_tuple_s_22730be5e_Log _20e026b1a_ImportPackage(_20e025234_JuleImporter*, jule::Str, jule::Bool);
inline void _20e026dc3_Imported(_20e025234_JuleImporter*, jule::Ptr<_20d414d94_ImportInfo>);
inline __jule_tuple_bool__jule_tuple_s_22730be5e_Log _20e027302_isPassBuildDirectives(_20e025234_JuleImporter*, jule::Ptr<_20d3699ec_Ast>*);
inline jule::Bool _2129dedd7_isCommonOrdered(jule::Slice<jule::Ptr<_20d38c58b_Struct>>, jule::Ptr<_20d38c58b_Struct>);
inline jule::Bool _2129e4d76_isCommonOrdered(jule::Slice<jule::Ptr<_20d458aca_Var>>, jule::Ptr<_20d458aca_Var>);
inline void _2129db576_orderCommon(jule::Slice<jule::Ptr<_20d38c58b_Struct>>*);
inline void _2129e0778_orderCommon(jule::Slice<jule::Ptr<_20d458aca_Var>>*);
inline void static__20e02b0a3_orderStructures(jule::Slice<jule::Ptr<_20d38c58b_Struct>>*);
inline void static__20e02b2d4_orderVars(jule::Slice<jule::Ptr<_20d458aca_Var>>*);
inline void _20db71479_optimizeChild(jule::Ptr<_20db70ec3_scopeDeadCode>, jule::Ptr<_20d3e369c_Scope>*);
inline void _20db71732_optimizeBodyChildExceptional(jule::Ptr<_20db70ec3_scopeDeadCode>, jule::Ptr<_20d3e369c_Scope>*);
inline void _20db719da_optimizeBodyChild(jule::Ptr<_20db70ec3_scopeDeadCode>, jule::Ptr<_20d3e369c_Scope>*);
inline void _20db71c93_optimizeExprModel(jule::Ptr<_20db70ec3_scopeDeadCode>, jule::Any*);
inline void _20db71e91_eliminateFollowed(_20db70ec3_scopeDeadCode*);
inline void _20db72249_pushGoto(jule::Ptr<_20db70ec3_scopeDeadCode>, jule::Ptr<_20d3e6419_GotoSt>);
inline void _20db72502_pushLabel(jule::Ptr<_20db70ec3_scopeDeadCode>, jule::Ptr<_20d3e6040_Label>);
inline void _20db727aa_optimizeRangeIter(jule::Ptr<_20db70ec3_scopeDeadCode>, jule::Ptr<_20d3e54d4_RangeIter>);
inline void _20db72a63_optimizeWhileIter(jule::Ptr<_20db70ec3_scopeDeadCode>, jule::Ptr<_20d3e4a88_WhileIter>);
inline void _20db72d1b_optimizeInfIter(jule::Ptr<_20db70ec3_scopeDeadCode>, jule::Ptr<_20d3e45d2_InfIter>);
inline void _20db730c4_optimizeConditional(jule::Ptr<_20db70ec3_scopeDeadCode>, jule::Ptr<_20d3e42d5_Conditional>);
inline void _20db7337c_optimizeMatch(jule::Ptr<_20db70ec3_scopeDeadCode>, jule::Ptr<_20d3e77d3_Match>);
inline void _20db73635_optimizeAssign(jule::Ptr<_20db70ec3_scopeDeadCode>, jule::Ptr<_20d3e6c99_Assign>);
inline void _20db738dd_optimizeMultiAssign(jule::Ptr<_20db70ec3_scopeDeadCode>, jule::Ptr<_20d3e7173_MultiAssign>);
inline void _20db73b96_optimizeStmt(jule::Ptr<_20db70ec3_scopeDeadCode>, jule::Any);
inline void _20db73d94_optimizeStmts(jule::Ptr<_20db70ec3_scopeDeadCode>);
inline _20db7522a_exprDeadCode static__20db75879_new(jule::Ptr<_20db70ec3_scopeDeadCode>*);
inline void _20db75b32_binary(_20db7522a_exprDeadCode*, jule::Ptr<_20d394b04_BinopExprModel>);
inline void _20db75dda_unary(_20db7522a_exprDeadCode*, jule::Ptr<_20d394ecd_UnaryExprModel>);
inline void _20db76193_structureLit(_20db7522a_exprDeadCode*, jule::Ptr<_20d3958a2_StructLitExprModel>);
inline void _20db7644b_allocStructure(_20db7522a_exprDeadCode*, jule::Ptr<_20d395b9e_AllocStructLitExprModel>);
inline void _20db76704_casting(_20db7522a_exprDeadCode*, jule::Ptr<_20d396232_CastingExprModel>);
inline void _20db769ac_args(_20db7522a_exprDeadCode*, jule::Slice<jule::Any>*);
inline void _20db76c65_funcCall(_20db7522a_exprDeadCode*, jule::Ptr<_20d396ad4_FnCallExprModel>);
inline void _20db7701d_slice(_20db7522a_exprDeadCode*, jule::Ptr<_20d396ead_SliceExprModel>);
inline void _20db772c6_array(_20db7522a_exprDeadCode*, jule::Ptr<_20d39a005_ArrayExprModel>);
inline void _20db7757e_indexing(_20db7522a_exprDeadCode*, jule::Ptr<_20d397464_IndexingExprModel>);
inline void _20db77837_anonFunc(_20db7522a_exprDeadCode*, jule::Ptr<_20d39783d_AnonFnExprModel>);
inline void _20db77ae0_mapExpr(_20db7522a_exprDeadCode*, jule::Ptr<_20d3981bd_MapExprModel>);
inline void _20db77d98_slicing(_20db7522a_exprDeadCode*, jule::Ptr<_20d398751_SlicingExprModel>);
inline void _20db78151_traitSub(_20db7522a_exprDeadCode*, jule::Ptr<_20d398cd4_TraitSubIdentExprModel>);
inline void _20db78409_structureSub(_20db7522a_exprDeadCode*, jule::Ptr<_20d399675_StructSubIdentExprModel>);
inline void _20db786b2_tuple(_20db7522a_exprDeadCode*, jule::Ptr<_20d39a302_TupleExprModel>);
inline void _20db7896a_newCall(_20db7522a_exprDeadCode*, jule::Ptr<_20d39b27b_BuiltinNewCallExprModel>);
inline void _20db78c23_outCall(_20db7522a_exprDeadCode*, jule::Ptr<_20d39a6cb_BuiltinOutCallExprModel>);
inline void _20db78ecb_outlnCall(_20db7522a_exprDeadCode*, jule::Ptr<_20d39aaa5_BuiltinOutlnCallExprModel>);
inline void _20db79284_panicCall(_20db7522a_exprDeadCode*, jule::Ptr<_20d39b655_BuiltinPanicCallExprModel>);
inline void _20db7953c_assertCall(_20db7522a_exprDeadCode*, jule::Ptr<_20d39bb0b_BuiltinAssertCallExprModel>);
inline void _20db797e5_errorCall(_20db7522a_exprDeadCode*, jule::Ptr<_20d39d9a9_BuiltinErrorCallExprModel>);
inline void _20db79a9d_makeCall(_20db7522a_exprDeadCode*, jule::Ptr<_20d39c0b2_BuiltinMakeCallExprModel>);
inline void _20db79d56_appendCall(_20db7522a_exprDeadCode*, jule::Ptr<_20d39c48b_BuiltinAppendCallExprModel>);
inline void _20db7a10e_lenCall(_20db7522a_exprDeadCode*, jule::Ptr<_20d39c788_BuiltinLenCallExprModel>);
inline void _20db7a3b7_capCall(_20db7522a_exprDeadCode*, jule::Ptr<_20d39ca85_BuiltinCapCallExprModel>);
inline void _20db7a670_cloneCall(_20db7522a_exprDeadCode*, jule::Ptr<_20d39ada2_BuiltinCloneCallExprModel>);
inline void _20db7a928_deleteCall(_20db7522a_exprDeadCode*, jule::Ptr<_20d39ce5e_BuiltinDeleteCallExprModel>);
inline void _20db7abd1_sizeof(_20db7522a_exprDeadCode*, jule::Ptr<_20d39db96_SizeofExprModel>);
inline void _20db7ae89_alignof(_20db7522a_exprDeadCode*, jule::Ptr<_20d39de3d_AlignofExprModel>);
inline void _20db7b242_integratedToStr(_20db7522a_exprDeadCode*, jule::Ptr<_20d39e537_IntegratedToStrExprModel>);
inline void _20db7b4ea_free(_20db7522a_exprDeadCode*, jule::Ptr<_20d39ec0d_FreeExprModel>);
inline void _20db7b7a3_backendEmit(_20db7522a_exprDeadCode*, jule::Ptr<_20d39e911_BackendEmitExprModel>);
inline void _20db7ba5b_optimize(_20db7522a_exprDeadCode*, jule::Any*);
inline jule::Ptr<_20d57804b_scopeOptimizer> static__20d57858a_new(jule::Ptr<_20d3e369c_Scope>);
inline void _20d578843_setCurrentStmt(_20d57804b_scopeOptimizer*, jule::Any);
inline void _20d578a41_removeCurrent(_20d57804b_scopeOptimizer*);
inline void _20d578ce9_optimizeData(_20d57804b_scopeOptimizer*, jule::Ptr<_20d087165_Data>);
inline void _20d5790a2_optimizeVar(_20d57804b_scopeOptimizer*, jule::Ptr<_20d458aca_Var>);
inline void _20d57935a_optimizeConditional(_20d57804b_scopeOptimizer*, jule::Ptr<_20d3e42d5_Conditional>);
inline void _20d579778_buildDefaultConstantTrueCase(_20d57804b_scopeOptimizer*, jule::Ptr<_20d3e841b_Case>, jule::I64*, jule::Ptr<_20d3e77d3_Match>*);
inline void _20d579a31_optimizeMatch(_20d57804b_scopeOptimizer*, jule::Ptr<_20d3e77d3_Match>);
inline void _20d579cd9_optimizeRangeIter(_20d57804b_scopeOptimizer*, jule::Ptr<_20d3e54d4_RangeIter>);
inline void _20d57a092_optimizeWhileIter(_20d57804b_scopeOptimizer*, jule::Ptr<_20d3e4a88_WhileIter>);
inline jule::Bool _20d57a3d3_substr(_20d57804b_scopeOptimizer*, jule::Ptr<_20d3e6c99_Assign>);
inline jule::Bool _20d57a724_strAssign(_20d57804b_scopeOptimizer*, jule::Ptr<_20d3e6c99_Assign>);
inline jule::Bool _20d57aa65_sliceAssign(_20d57804b_scopeOptimizer*, jule::Ptr<_20d3e6c99_Assign>);
inline void _20d57ad1d_optimizeAssign(_20d57804b_scopeOptimizer*, jule::Ptr<_20d3e6c99_Assign>);
inline jule::Bool _20d57b15e_tryOptimizeSwap(_20d57804b_scopeOptimizer*, jule::Ptr<_20d3e7173_MultiAssign>*);
inline void _20d57b417_optimizeMultiAssign(_20d57804b_scopeOptimizer*, jule::Ptr<_20d3e7173_MultiAssign>);
inline void _20d57b6c0_optimizeRet(_20d57804b_scopeOptimizer*, jule::Ptr<_20d3e8d9a_RetSt>);
inline void _20d57b978_optimizeStmt(_20d57804b_scopeOptimizer*, jule::Any);
inline void _20d57bc31_optimizeChild(_20d57804b_scopeOptimizer*, jule::Ptr<_20d3e369c_Scope>);
inline void _20d57be2e_optimize(_20d57804b_scopeOptimizer*);
inline void static__20d57e78e_optimize(jule::Any*);
inline jule::Bool _20d57ead0_strCond(_20d57e22d_exprOptimizer*, jule::Ptr<_20d394b04_BinopExprModel>);
inline void _20d57ed88_binary(_20d57e22d_exprOptimizer*, jule::Ptr<_20d394b04_BinopExprModel>);
inline void _20d580141_unary(_20d57e22d_exprOptimizer*, jule::Ptr<_20d394ecd_UnaryExprModel>);
inline void _20d5803e9_structureLit(_20d57e22d_exprOptimizer*, jule::Ptr<_20d3958a2_StructLitExprModel>);
inline void _20d5806a2_allocStructure(_20d57e22d_exprOptimizer*, jule::Ptr<_20d395b9e_AllocStructLitExprModel>);
inline void _20d58095a_casting(_20d57e22d_exprOptimizer*, jule::Ptr<_20d396232_CastingExprModel>);
inline void _20d580c13_args(_20d57e22d_exprOptimizer*, jule::Slice<jule::Any>*);
inline void _20d580ebb_scope(_20d57e22d_exprOptimizer*, jule::Ptr<_20d3e369c_Scope>*);
inline jule::Bool _20d58130c_optimizeSpecialFuncCalls(_20d57e22d_exprOptimizer*, jule::Ptr<_20d396ad4_FnCallExprModel>*);
inline void _20d5815b5_funcCall(_20d57e22d_exprOptimizer*, jule::Ptr<_20d396ad4_FnCallExprModel>);
inline void _20d58186d_slice(_20d57e22d_exprOptimizer*, jule::Ptr<_20d396ead_SliceExprModel>);
inline void _20d581b26_array(_20d57e22d_exprOptimizer*, jule::Ptr<_20d39a005_ArrayExprModel>);
inline void _20d581dce_indexing(_20d57e22d_exprOptimizer*, jule::Ptr<_20d397464_IndexingExprModel>);
inline void _20d582187_anonFunc(_20d57e22d_exprOptimizer*, jule::Ptr<_20d39783d_AnonFnExprModel>);
inline void _20d582440_mapExpr(_20d57e22d_exprOptimizer*, jule::Ptr<_20d3981bd_MapExprModel>);
inline void _20d5826e8_slicing(_20d57e22d_exprOptimizer*, jule::Ptr<_20d398751_SlicingExprModel>);
inline void _20d5829a1_traitSub(_20d57e22d_exprOptimizer*, jule::Ptr<_20d398cd4_TraitSubIdentExprModel>);
inline void _20d582c59_structureSub(_20d57e22d_exprOptimizer*, jule::Ptr<_20d399675_StructSubIdentExprModel>);
inline void _20d583012_tuple(_20d57e22d_exprOptimizer*, jule::Ptr<_20d39a302_TupleExprModel>);
inline void _20d5832ba_newCall(_20d57e22d_exprOptimizer*, jule::Ptr<_20d39b27b_BuiltinNewCallExprModel>);
inline void _20d583573_outCall(_20d57e22d_exprOptimizer*, jule::Ptr<_20d39a6cb_BuiltinOutCallExprModel>);
inline void _20d58382b_outlnCall(_20d57e22d_exprOptimizer*, jule::Ptr<_20d39aaa5_BuiltinOutlnCallExprModel>);
inline void _20d583ad4_panicCall(_20d57e22d_exprOptimizer*, jule::Ptr<_20d39b655_BuiltinPanicCallExprModel>);
inline void _20d583d8c_assertCall(_20d57e22d_exprOptimizer*, jule::Ptr<_20d39bb0b_BuiltinAssertCallExprModel>);
inline void _20d584145_errorCall(_20d57e22d_exprOptimizer*, jule::Ptr<_20d39d9a9_BuiltinErrorCallExprModel>);
inline void _20d5843ed_makeCall(_20d57e22d_exprOptimizer*, jule::Ptr<_20d39c0b2_BuiltinMakeCallExprModel>);
inline void _20d5846a6_appendCall(_20d57e22d_exprOptimizer*, jule::Ptr<_20d39c48b_BuiltinAppendCallExprModel>);
inline void _20d58495e_lenCall(_20d57e22d_exprOptimizer*, jule::Ptr<_20d39c788_BuiltinLenCallExprModel>);
inline void _20d584c17_capCall(_20d57e22d_exprOptimizer*, jule::Ptr<_20d39ca85_BuiltinCapCallExprModel>);
inline void _20d584ec0_cloneCall(_20d57e22d_exprOptimizer*, jule::Ptr<_20d39ada2_BuiltinCloneCallExprModel>);
inline void _20d585278_deleteCall(_20d57e22d_exprOptimizer*, jule::Ptr<_20d39ce5e_BuiltinDeleteCallExprModel>);
inline void _20d585531_sizeof(_20d57e22d_exprOptimizer*, jule::Ptr<_20d39db96_SizeofExprModel>);
inline void _20d5857d9_alignof(_20d57e22d_exprOptimizer*, jule::Ptr<_20d39de3d_AlignofExprModel>);
inline void _20d585a92_integratedToStr(_20d57e22d_exprOptimizer*, jule::Ptr<_20d39e537_IntegratedToStrExprModel>);
inline void _20d585d4a_free(_20d57e22d_exprOptimizer*, jule::Ptr<_20d39ec0d_FreeExprModel>);
inline void _20d586103_backendEmit(_20d57e22d_exprOptimizer*, jule::Ptr<_20d39e911_BackendEmitExprModel>);
inline void _20d586301_do(_20d57e22d_exprOptimizer*);
inline jule::Ptr<_20db7c96e_Optimizer> static__20db7cdae_New(jule::Ptr<_20e027be8_IR>*);
inline void _20db7d167_optimizeGlobal(_20db7c96e_Optimizer*, jule::Ptr<_20d458aca_Var>*);
inline void _20db7d420_optimizeFunction(_20db7c96e_Optimizer*, jule::Ptr<_20d3a2b45_Fn>*);
inline void _20db7d6c8_optimizeStruct(_20db7c96e_Optimizer*, jule::Ptr<_20d38c58b_Struct>*);
inline void _20db7d981_optimizeGlobals(_20db7c96e_Optimizer*, jule::Ptr<_20d417cba_Package>*);
inline void _20db7dc39_optimizeFunctions(_20db7c96e_Optimizer*, jule::Ptr<_20d417cba_Package>*);
inline void _20db7dee2_optimizeStructs(_20db7c96e_Optimizer*, jule::Ptr<_20d417cba_Package>*);
inline void _20db7e29a_optimizePackage(_20db7c96e_Optimizer*, jule::Ptr<_20d417cba_Package>*);
inline void _20db7e498_Optimize(_20db7c96e_Optimizer*);
inline void static__20e2372c0_Reset(void);
inline void static__20db7eab4_Print(jule::Str, jule::Str);
inline void static__20e239cc8_LogFlat(_22730be5e_Log*);
inline void static__20e23a009_LogError(_22730be5e_Log*);
inline void static__20e23a23a_Log(_22730be5e_Log*);
inline void static__20e23a46b_PrintLogs(jule::Slice<_22730be5e_Log>*);
inline _20ebe0bce_Time static__20ebe1086_Unix(jule::U64);
inline _20ebe0bce_Time static__20ebe1295_Now(void);
inline _20ebe0508_AbsTime _20ebe297d_Abs(_20ebe0bce_Time*);
inline jule::Ptr<_20ea1a586_scopeCoder> static__20ea1aba2_new(jule::Ptr<_20ebea2d2_ObjectCoder>*);
inline void _212cc1b9c_iterHead(jule::Ptr<_20ea1a586_scopeCoder>, jule::Ptr<_20d3e54d4_RangeIter>*, jule::Bool*, jule::Str*);
inline void _20ea1b378_rangeIndexIter(jule::Ptr<_20ea1a586_scopeCoder>, jule::Ptr<_20d3e54d4_RangeIter>*);
inline void _20ea1b631_rangeHashmapIter(jule::Ptr<_20ea1a586_scopeCoder>, jule::Ptr<_20d3e54d4_RangeIter>*);
inline void _20ea1b8d9_ifCase(jule::Ptr<_20ea1a586_scopeCoder>, jule::Ptr<_20d3e3aba_If>);
inline void _20ea1bb92_conditional(jule::Ptr<_20ea1a586_scopeCoder>, jule::Ptr<_20d3e42d5_Conditional>);
inline void _20ea1be4a_infIter(jule::Ptr<_20ea1a586_scopeCoder>, jule::Ptr<_20d3e45d2_InfIter>);
inline void _20ea1c203_whileIter(jule::Ptr<_20ea1a586_scopeCoder>, jule::Ptr<_20d3e4a88_WhileIter>);
inline void _20ea1c4ab_rangeIter(jule::Ptr<_20ea1a586_scopeCoder>, jule::Ptr<_20d3e54d4_RangeIter>);
inline void _20ea1c764_cont(jule::Ptr<_20ea1a586_scopeCoder>, jule::Ptr<_20d3e5869_ContSt>);
inline void _20ea1ca1c_label(jule::Ptr<_20ea1a586_scopeCoder>, jule::Ptr<_20d3e6040_Label>);
inline void _20ea1ccc5_gotoSt(jule::Ptr<_20ea1a586_scopeCoder>, jule::Ptr<_20d3e6419_GotoSt>);
inline void _20ea1d07d_postfix(jule::Ptr<_20ea1a586_scopeCoder>, jule::Ptr<_20d3e67e3_Postfix>);
inline void _20ea1d336_assign(jule::Ptr<_20ea1a586_scopeCoder>, jule::Ptr<_20d3e6c99_Assign>);
inline void _20ea1d5de_mapLookupAssign(jule::Ptr<_20ea1a586_scopeCoder>, jule::Ptr<_20d3e7173_MultiAssign>*);
inline void _20ea1d897_multiAssignTup(jule::Ptr<_20ea1a586_scopeCoder>, jule::Ptr<_20d3e7173_MultiAssign>*);
inline void _20ea1db50_multiAssignFn(jule::Ptr<_20ea1a586_scopeCoder>, jule::Ptr<_20d3e7173_MultiAssign>*);
inline void _20ea1de08_multiAssign(jule::Ptr<_20ea1a586_scopeCoder>, jule::Ptr<_20d3e7173_MultiAssign>);
inline jule::Fn<void(void)> _20ea1e249_matchExpr(jule::Ptr<_20ea1a586_scopeCoder>, jule::Ptr<_20d3e77d3_Match>);
inline void _20ea1e5ac_case(jule::Ptr<_20ea1a586_scopeCoder>, jule::Ptr<_20d3e77d3_Match>, jule::Ptr<_20d3e841b_Case>);
inline void _20ea1e865_matchSt(jule::Ptr<_20ea1a586_scopeCoder>, jule::Ptr<_20d3e77d3_Match>);
inline void _20ea1eb1d_fallSt(jule::Ptr<_20ea1a586_scopeCoder>, jule::Ptr<_20d3e8a15_FallSt>);
inline void _20ea1edc6_breakSt(jule::Ptr<_20ea1a586_scopeCoder>, jule::Ptr<_20d3e5c43_BreakSt>);
inline void _20ea2017e_setResult(jule::Ptr<_20ea1a586_scopeCoder>, jule::Ptr<_20d3e8d9a_RetSt>);
inline void _20ea20437_retSt(jule::Ptr<_20ea1a586_scopeCoder>, jule::Ptr<_20d3e8d9a_RetSt>);
inline void _20ea206e0_var(jule::Ptr<_20ea1a586_scopeCoder>, jule::Ptr<_20d458aca_Var>);
inline void _20ea20998_mutSlicing(jule::Ptr<_20ea1a586_scopeCoder>, jule::Ptr<_20d575ba3_MutSlicingExprModel>);
inline void _20ea20c51_swap(jule::Ptr<_20ea1a586_scopeCoder>, jule::Ptr<_20d57491b_SwapExprModel>);
inline void _20ea21009_st(jule::Ptr<_20ea1a586_scopeCoder>, jule::Any);
inline void _20ea212b2_scopeStmts(jule::Ptr<_20ea1a586_scopeCoder>, jule::Ptr<_20d3e369c_Scope>*);
inline void _20ea2156a_scope(jule::Ptr<_20ea1a586_scopeCoder>, jule::Ptr<_20d3e369c_Scope>);
inline void _20ea21823_funcScope(jule::Ptr<_20ea1a586_scopeCoder>, jule::Ptr<_20d3a5a49_FnIns>);
inline jule::Ptr<_20ea2479e_exprCoder> static__20ea24b67_new(jule::Ptr<_20ebea2d2_ObjectCoder>*);
inline void _20ea24e20_string(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20b0655eb_Const>*);
inline void _20ea251c8_boolean(jule::Ptr<_20ea2479e_exprCoder>, jule::Bool);
inline void _20ea253c6_nilLit(jule::Ptr<_20ea2479e_exprCoder>);
inline jule::Bool _20ea25717_ftoaSpecialCases(jule::Ptr<_20ea2479e_exprCoder>, jule::F64*);
inline void _20ea259c0_float32(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20b0655eb_Const>*);
inline void _20ea25c78_float64(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20b0655eb_Const>*);
inline void _20ea26031_constant(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20b0655eb_Const>);
inline void _20ea2644e_divByZeroBinary(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d3510bb_Token>*, jule::Ptr<_20d394609_OperandExprModel>*, jule::Ptr<_20d394609_OperandExprModel>*);
inline void _20ea26707_unsafeBinary(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d394b04_BinopExprModel>);
inline void _20ea269b0_binary(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d394b04_BinopExprModel>);
inline void _20ea26c68_var(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d458aca_Var>);
inline void _20ea27021_structureIns(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d39066b_StructIns>);
inline void _20ea272c9_unary(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d394ecd_UnaryExprModel>);
inline void _20ea27582_structureLit(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d3958a2_StructLitExprModel>);
inline void _20ea2783a_allocStructure(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d395b9e_AllocStructLitExprModel>);
inline void _20ea27ae3_possibleRefExpr(jule::Ptr<_20ea2479e_exprCoder>, jule::Any);
inline void _20ea28011_castTraitFromTrait(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d396232_CastingExprModel>*, jule::Ptr<_20d3b5dde_Trait>, jule::Ptr<_20d3b5dde_Trait>);
inline void _20ea282b9_casting(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d396232_CastingExprModel>);
inline void _20ea28572_models(jule::Ptr<_20ea2479e_exprCoder>, jule::Slice<jule::Any>);
inline void _20ea2882a_args(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d396ad4_FnCallExprModel>*);
inline void _20ea28ad3_modelForCall(jule::Ptr<_20ea2479e_exprCoder>, jule::Any);
inline void _20ea28d8b_pushCallInf(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d396ad4_FnCallExprModel>*);
inline jule::Bool _20ea291cc_isWrapped(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d396ad4_FnCallExprModel>*);
inline void _20ea29485_pureFuncCall(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d396ad4_FnCallExprModel>*);
inline void _20ea2973d_coFuncCall(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d396ad4_FnCallExprModel>*);
inline void _20ea29aa1_writeUseExpr(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d3a5a49_FnIns>*, jule::Ptr<_20d087165_Data>);
inline void _20ea29d59_funcCall(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d396ad4_FnCallExprModel>);
inline void _20ea2a112_slice(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d396ead_SliceExprModel>);
inline void _20ea2a3ba_indexing(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d397464_IndexingExprModel>);
inline void _20ea2a673_unsafeIndexing(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d57629c_UnsafeIndexingExprModel>);
inline void _20ea2a92b_anonFunc(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d39783d_AnonFnExprModel>);
inline void _20ea2abd4_mapExpr(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d3981bd_MapExprModel>);
inline void _20ea2ae8c_slicing(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d398751_SlicingExprModel>);
inline void _20ea2b245_traitSub(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d398cd4_TraitSubIdentExprModel>);
inline void _20ea2b4ed_structureSub(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d399675_StructSubIdentExprModel>);
inline void _20ea2b7a6_array(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d39a005_ArrayExprModel>);
inline void _20ea2ba5e_funcInsCommon(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d3a5a49_FnIns>);
inline void _20ea2bd17_funcIns(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d3a5a49_FnIns>);
inline void _20ea2c0c0_tuple(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d39a302_TupleExprModel>);
inline void _20ea2c378_newCall(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d39b27b_BuiltinNewCallExprModel>);
inline void _20ea2c631_outCall(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d39a6cb_BuiltinOutCallExprModel>);
inline void _20ea2c8d9_outlnCall(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d39aaa5_BuiltinOutlnCallExprModel>);
inline void _20ea2cb92_panicCall(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d39b655_BuiltinPanicCallExprModel>);
inline void _20ea2ce4a_assertCall(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d39bb0b_BuiltinAssertCallExprModel>);
inline void _20ea2d203_errorCall(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d39d9a9_BuiltinErrorCallExprModel>);
inline void _20ea2d4ab_copyCall(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d39d338_BuiltinCopyCallExprModel>);
inline void _20ea2d764_lenCall(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d39c788_BuiltinLenCallExprModel>);
inline void _20ea2da1c_capCall(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d39ca85_BuiltinCapCallExprModel>);
inline void _20ea2dcc5_deleteCall(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d39ce5e_BuiltinDeleteCallExprModel>);
inline void _20ea2e07d_makeCallSlice(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d39c0b2_BuiltinMakeCallExprModel>*);
inline void _20ea2e336_makeCallStr(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d39c0b2_BuiltinMakeCallExprModel>*);
inline void _20ea2e5de_makeCall(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d39c0b2_BuiltinMakeCallExprModel>);
inline void _20ea2e897_pushToSlice(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d5766cb_PushToSliceExprModel>);
inline void _20ea2eb50_appendToSlice(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d576aa5_AppendToSliceExprModel>);
inline void _20ea2ee08_appendCall(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d39c48b_BuiltinAppendCallExprModel>);
inline void _20ea301b1_cloneCall(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d39ada2_BuiltinCloneCallExprModel>);
inline void _20ea30469_sizeof(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d39db96_SizeofExprModel>);
inline void _20ea30722_alignof(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d39de3d_AlignofExprModel>);
inline void _20ea309ca_runeLit(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d39e23a_RuneExprModel>);
inline void _20ea30c83_structureStatic(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d399b2b_StructStaticIdentExprModel>);
inline void _20ea3103b_integratedToStr(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d39e537_IntegratedToStrExprModel>);
inline void _20ea312e4_backendEmit(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d39e911_BackendEmitExprModel>);
inline void _20ea3159c_free(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d39ec0d_FreeExprModel>);
inline void _20ea31855_strComp(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d575620_StrCompExprModel>);
inline void _20ea31b0d_inlineStdInternalNosafeStobs(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d576da2_InlineStdInternalNosafeStobs>);
inline void _20ea31db6_emptyCompare(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d574ce5_EmptyCompareExprModel>);
inline void _20ea3216e_model(jule::Ptr<_20ea2479e_exprCoder>, jule::Any);
inline void _20ea32427_initExpr(jule::Ptr<_20ea2479e_exprCoder>, jule::Ptr<_20d4de28c_TypeKind>);
inline jule::Ptr<_20ea34d0e_deriveCoder> static__20ea351c7_new(jule::Ptr<_20ebea2d2_ObjectCoder>);
inline jule::Str _20ea35518_cloneFuncDecl(_20ea34d0e_deriveCoder*, jule::Ptr<_20d38c58b_Struct>*);
inline jule::Str _20ea35859_cloneFuncDef(_20ea34d0e_deriveCoder*, jule::Ptr<_20d38c58b_Struct>*);
inline jule::Ptr<_20ea368c1_TestCoder> static__20ea36d11_New(jule::Ptr<_20ebea2d2_ObjectCoder>*);
inline jule::Ptr<_20d414d94_ImportInfo> _20ea37097_findTestingPackage(jule::Ptr<_20ea368c1_TestCoder>);
inline void _20ea37350_appendTest(jule::Ptr<_20ea368c1_TestCoder>, jule::Ptr<_20d3a5a49_FnIns>);
inline void _20ea37608_appendPackageTests(jule::Ptr<_20ea368c1_TestCoder>, jule::Ptr<_20d417cba_Package>*);
inline jule::Bool _20ea3788e_readyTestingPackage(jule::Ptr<_20ea368c1_TestCoder>);
inline void _20ea37a8c_callTmReset(jule::Ptr<_20ea368c1_TestCoder>);
inline void _20ea37c8a_callTmFailed(jule::Ptr<_20ea368c1_TestCoder>);
inline void _20ea37e88_callTmSkipped(jule::Ptr<_20ea368c1_TestCoder>);
inline void _20ea38186_Serialize(jule::Ptr<_20ea368c1_TestCoder>);
inline void static__20ea39a8e_writeIdentTo(_2240a0ad5_StrBuilder*, jule::Str*);
inline jule::Str static__20ea39e13_toOut(jule::Str*, jule::Uintptr);
inline jule::Str static__20ea3a342_toLocal(jule::I64, jule::I64, jule::Str*);
inline jule::Str static__20ea3a60b_func(jule::Ptr<_20d3a2b45_Fn>*);
inline jule::Str static__20ea3a8c5_funcIns(jule::Ptr<_20d3a5a49_FnIns>*);
inline jule::Str static__20ea3ab8e_traitDecl(jule::Ptr<_20d3b5dde_Trait>);
inline jule::Str static__20ea3ae58_param(jule::Ptr<_20d3a1171_Param>*);
inline jule::Str static__20ea3b222_structure(jule::Ptr<_20d38c58b_Struct>*);
inline jule::Str static__20ea3b4db_structureIns(jule::Ptr<_20d39066b_StructIns>*);
inline jule::Str static__20ea3b7a5_field(jule::Ptr<_20d389698_Field>*);
inline jule::Str static__20ea3ba6e_var(jule::Ptr<_20d458aca_Var>);
inline jule::Str static__20ea3bd38_iterBegin(jule::Uintptr);
inline jule::Str static__20ea3c102_iterEnd(jule::Uintptr);
inline jule::Str static__20ea3c3bb_iterNext(jule::Uintptr);
inline jule::Str static__20ea3c685_label(jule::Uintptr);
inline jule::Str static__20ea3c94e_matchEnd(jule::Uintptr);
inline jule::Str static__20ea3cc18_caseBegin(jule::Uintptr);
inline jule::Str _20ec09d80_Str(_20ec099ea_customType*);
inline jule::Bool _20ec0a1c1_Equal(jule::Ptr<_20ec099ea_customType>, jule::Ptr<_20d4de28c_TypeKind>);
inline jule::Ptr<_20ec0a600_typeCoder> static__20ec0ab3e_new(jule::Ptr<_20ebea2d2_ObjectCoder>*);
inline jule::Str _20ec0ae80_toType(_20ec0a600_typeCoder*, jule::Str);
inline jule::Str _20ec0b2c1_prim(_20ec0a600_typeCoder*, jule::Ptr<_20d4e710d_Prim>);
inline jule::Str _20ec0b612_tuple(_20ec0a600_typeCoder*, jule::Ptr<_20d4ec201_Tuple>);
inline jule::Str _20ec0b953_asSptr(_20ec0a600_typeCoder*, jule::Str);
inline jule::Str _20ec0bc94_sptr(_20ec0a600_typeCoder*, jule::Ptr<_20d4eab39_Sptr>);
inline jule::Str _20ec0c0d5_ptr(_20ec0a600_typeCoder*, jule::Ptr<_20d4ee401_Ptr>);
inline jule::Str _20ec0c426_enumDecl(_20ec0a600_typeCoder*, jule::Ptr<_20d3b85d9_Enum>);
inline jule::Str _20ec0c767_typeEnumDecl(_20ec0a600_typeCoder*, jule::Ptr<_20d3b9ce4_TypeEnum>);
inline jule::Str _20ec0caa8_asSlice(_20ec0a600_typeCoder*, jule::Ptr<_20d4de28c_TypeKind>);
inline jule::Str _20ec0cde9_slice(_20ec0a600_typeCoder*, jule::Ptr<_20d4eb60c_Slc>);
inline jule::Str _20ec0d23a_mapType(_20ec0a600_typeCoder*, jule::Ptr<_20d4ecca1_Map>);
inline jule::Str _20ec0d57b_traitIdent(_20ec0a600_typeCoder*, jule::Str);
inline jule::Str _20ec0d8bc_traitDecl(_20ec0a600_typeCoder*, jule::Ptr<_20d3b5dde_Trait>);
inline jule::Str _20ec0dc0d_structure(_20ec0a600_typeCoder*, jule::Ptr<_20d38c58b_Struct>);
inline jule::Str _20ec0e04e_structureIns(_20ec0a600_typeCoder*, jule::Ptr<_20d39066b_StructIns>);
inline jule::Str _20ec0e390_array(_20ec0a600_typeCoder*, jule::Ptr<_20d4ed92d_Arr>);
inline jule::Str _20ec0ea22_paramIns(_20ec0a600_typeCoder*, jule::Ptr<_20d3a4a9d_ParamIns>*);
inline void _20ec101c6_funcInsResult(_20ec0a600_typeCoder*, _2240a0ad5_StrBuilder*, jule::Ptr<_20d3a5a49_FnIns>*);
inline jule::Str _20ec10517_anonFunc(_20ec0a600_typeCoder*, jule::Ptr<_20d3a5a49_FnIns>);
inline jule::Str _20ec10858_func(_20ec0a600_typeCoder*, jule::Ptr<_20d3a5a49_FnIns>);
inline jule::Str _20ec10b99_kind(_20ec0a600_typeCoder*, jule::Ptr<_20d4de28c_TypeKind>);
inline jule::Ptr<_20ec133c7_resultCoder> static__20ec138a0_new(jule::Ptr<_20ec0a600_typeCoder>*);
inline void _20ec13c13_ptr(_20ec133c7_resultCoder*, _2240a0ad5_StrBuilder*, jule::Ptr<_20d4ee401_Ptr>);
inline void _20ec14076_sptr(_20ec133c7_resultCoder*, _2240a0ad5_StrBuilder*, jule::Ptr<_20d4eab39_Sptr>);
inline void _20ec143d9_mapType(_20ec133c7_resultCoder*, _2240a0ad5_StrBuilder*, jule::Ptr<_20d4ecca1_Map>);
inline void _20ec1474c_slice(_20ec133c7_resultCoder*, _2240a0ad5_StrBuilder*, jule::Ptr<_20d4eb60c_Slc>);
inline void _20ec14ab0_arr(_20ec133c7_resultCoder*, _2240a0ad5_StrBuilder*, jule::Ptr<_20d4ed92d_Arr>);
inline void _20ec14e23_func(_20ec133c7_resultCoder*, _2240a0ad5_StrBuilder*, jule::Ptr<_20d3a5a49_FnIns>);
inline void _20ec15286_tup(_20ec133c7_resultCoder*, _2240a0ad5_StrBuilder*, jule::Ptr<_20d4ec201_Tuple>);
inline void _20ec155e9_codeMut(_20ec133c7_resultCoder*, _2240a0ad5_StrBuilder*, jule::Ptr<_20d4de28c_TypeKind>*);
inline void _20ec1595c_codeMut1(_20ec133c7_resultCoder*, _2240a0ad5_StrBuilder*, jule::Ptr<_20d4de28c_TypeKind>*);
inline jule::Str _20ec15c6a_code(_20ec133c7_resultCoder*, jule::Ptr<_20d4de28c_TypeKind>*);
inline jule::Str _224971e45_Name(_2249720ee_Flag*);
inline jule::Str _2249723da_What(_2249720ee_Flag*);
inline void _22497252d_Reset(_2249720ee_Flag*);
inline jule::I32 _224972671_Short(_2249720ee_Flag*);
inline jule::Str _224975597_Name(_224975960_Flag*);
inline jule::Str _2249756da_What(_224975960_Flag*);
inline void _224975c4b_Reset(_224975960_Flag*);
inline jule::I32 _224975d8e_Short(_224975960_Flag*);
inline jule::Str _224978c93_Name(_22497915b_Flag*);
inline jule::Str _224978dd6_What(_22497915b_Flag*);
inline void _224979447_Reset(_22497915b_Flag*);
inline jule::I32 _22497958a_Short(_22497915b_Flag*);
inline jule::Str _22497c4d3_Name(_22497c89b_Flag*);
inline jule::Str _22497c626_What(_22497c89b_Flag*);
inline void _22497cb87_Reset(_22497c89b_Flag*);
inline jule::I32 _22497ccca_Short(_22497c89b_Flag*);
inline jule::Str _224980bce_Name(_224981097_Flag*);
inline jule::Str _224980d22_What(_224981097_Flag*);
inline void _224981383_Reset(_224981097_Flag*);
inline jule::I32 _2249814c6_Short(_224981097_Flag*);
inline jule::Ptr<_20ec801be_FlagSet> static__20ec804aa_New(void);
inline jule::Trait<_20ec7d61d_CommonFlag> _20ec8092d_FindFlag(_20ec801be_FlagSet*, jule::Str);
inline jule::Trait<_20ec7d61d_CommonFlag> _20ec80c6e_FindFlagShort(_20ec801be_FlagSet*, jule::I32);
inline jule::Exceptional<jule::Slice<jule::Str>> _20ec81346_Parse(_20ec801be_FlagSet*, jule::Slice<jule::Str>);
inline jule::Ptr<_224981097_Flag> _2249ed675_addFlagCommon(_20ec801be_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_22497c89b_Flag> _224a06c88_addFlagCommon(_20ec801be_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _2249eb5eb_AddVar(_20ec801be_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _224a04c53_AddVar(_20ec801be_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
inline __jule_tuple_i64__jule_tuple_bool _224994044_parseInteger(_20ec82b50_argParser*, jule::Str*, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>);
inline __jule_tuple_u64__jule_tuple_bool _22499b8ed_parseInteger(_20ec82b50_argParser*, jule::Str*, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>);
inline jule::Str _20ec83469_getData(_20ec82b50_argParser*);
inline jule::VoidExceptional _20ec836de_processFlag(_20ec82b50_argParser*, jule::Trait<_20ec7d61d_CommonFlag>*);
inline jule::VoidExceptional _20ec83997_singleDash(_20ec82b50_argParser*, jule::Str*);
inline jule::VoidExceptional _20ec83c50_doubleDash(_20ec82b50_argParser*, jule::Str*);
inline jule::VoidExceptional _20ec83e4d_tryArg(_20ec82b50_argParser*);
inline jule::VoidExceptional _20ec8414b_parse(_20ec82b50_argParser*);
inline jule::Ptr<_20ebea2d2_ObjectCoder> static__20ebea6cd_New(jule::Ptr<_20e027be8_IR>*, _20ebe86dc_SerializationInfo);
inline void _20ebea986_write(jule::Ptr<_20ebea2d2_ObjectCoder>, jule::Str);
inline void _20ebeab84_addIndent(jule::Ptr<_20ebea2d2_ObjectCoder>);
inline void _20ebead82_doneIndent(jule::Ptr<_20ebea2d2_ObjectCoder>);
inline void _20ebeb080_indent(jule::Ptr<_20ebea2d2_ObjectCoder>);
inline jule::I64 _20ebeb3c1_findAnyType(jule::Ptr<_20ebea2d2_ObjectCoder>, jule::Ptr<_20d4de28c_TypeKind>*);
inline jule::I64 _20ebeb712_pushAnyType(jule::Ptr<_20ebea2d2_ObjectCoder>, jule::Ptr<_20d4de28c_TypeKind>);
inline void _20ebeb9ba_pushResultIns(jule::Ptr<_20ebea2d2_ObjectCoder>, jule::Ptr<_20d3a5a49_FnIns>*);
inline void _20ebebc73_pushResult(jule::Ptr<_20ebea2d2_ObjectCoder>, jule::Ptr<_20d3a2b45_Fn>*);
inline jule::I64 _20ebec16e_findTypeOffsetS(_20ebea2d2_ObjectCoder*, jule::Ptr<_20d3b5dde_Trait>, jule::Ptr<_20d39066b_StructIns>);
inline jule::I64 _20ebec56a_findTypeOffset(_20ebea2d2_ObjectCoder*, jule::Ptr<_20d3b5dde_Trait>, jule::Ptr<_20d4de28c_TypeKind>);
inline void _20ebec8cd_pushAndWriteMaskMapper(jule::Ptr<_20ebea2d2_ObjectCoder>, jule::Ptr<_20d3b5dde_Trait>, jule::Ptr<_20d3b5dde_Trait>);
inline void _20ebecb86_locInfo(jule::Ptr<_20ebea2d2_ObjectCoder>, jule::Ptr<_20d3510bb_Token>*);
inline void _20ebecd84_head(jule::Ptr<_20ebea2d2_ObjectCoder>);
inline void _20ebed082_links(jule::Ptr<_20ebea2d2_ObjectCoder>);
inline void _20ebed33a_prepareStructure(_20ebea2d2_ObjectCoder*, jule::Ptr<_20d38c58b_Struct>*);
inline void _20ebed538_prepareStructures(jule::Ptr<_20ebea2d2_ObjectCoder>);
inline void _20ebed7e1_iterPackages(jule::Ptr<_20ebea2d2_ObjectCoder>, jule::Fn<void(jule::Ptr<_20d417cba_Package>*)>);
inline void _20ebed9de_buildTraitMap(jule::Ptr<_20ebea2d2_ObjectCoder>);
inline void _20ebedbdc_traitDecls(jule::Ptr<_20ebea2d2_ObjectCoder>);
inline void _20ebede95_structurePlainDecl(jule::Ptr<_20ebea2d2_ObjectCoder>, jule::Ptr<_20d38c58b_Struct>*);
inline void _20ebee193_structurePlainDecls(jule::Ptr<_20ebea2d2_ObjectCoder>);
inline void _20ebee44b_fieldDecl(jule::Ptr<_20ebea2d2_ObjectCoder>, jule::Ptr<_20d38eabb_FieldIns>*);
inline void _20ebee704_structureDestructor(jule::Ptr<_20ebea2d2_ObjectCoder>, jule::Ptr<_20d39066b_StructIns>*);
inline void _20ebee9ac_structureDeriveDefsDecls(jule::Ptr<_20ebea2d2_ObjectCoder>, jule::Ptr<_20d39066b_StructIns>*);
inline void _20ebeed20_structureOperatorEq(jule::Ptr<_20ebea2d2_ObjectCoder>, jule::Str*, jule::Ptr<_20d39066b_StructIns>*);
inline void _20ec00183_structureOperatorNotEq(jule::Ptr<_20ebea2d2_ObjectCoder>, jule::Str*, jule::Ptr<_20d39066b_StructIns>*);
inline void _20ec005a1_structureOperator(jule::Ptr<_20ebea2d2_ObjectCoder>, jule::Str*, jule::Ptr<_20d3a5a49_FnIns>*, jule::Str);
inline void _20ec00859_structureOperators(jule::Ptr<_20ebea2d2_ObjectCoder>, jule::Ptr<_20d39066b_StructIns>*);
inline void _20ec00b12_structureInsDecl(jule::Ptr<_20ebea2d2_ObjectCoder>, jule::Ptr<_20d39066b_StructIns>*);
inline void _20ec00dba_structureDecl(jule::Ptr<_20ebea2d2_ObjectCoder>, jule::Ptr<_20d38c58b_Struct>*);
inline void _20ec010b8_structureDecls(jule::Ptr<_20ebea2d2_ObjectCoder>);
inline void _20ec012b6_structureMethodDecls(jule::Ptr<_20ebea2d2_ObjectCoder>);
inline void _20ec0156e_paramsDecls(jule::Ptr<_20ebea2d2_ObjectCoder>, jule::Slice<jule::Ptr<_20d3a4a9d_ParamIns>>*);
inline void _20ec018d2_funcHead(jule::Ptr<_20ebea2d2_ObjectCoder>, jule::Ptr<_20d3a5a49_FnIns>*, jule::Bool);
inline void _20ec01c45_funcDeclIns(jule::Ptr<_20ebea2d2_ObjectCoder>, jule::Ptr<_20d3a5a49_FnIns>*, jule::Bool);
inline void _20ec020a8_funcDecl(jule::Ptr<_20ebea2d2_ObjectCoder>, jule::Ptr<_20d3a2b45_Fn>*, jule::Bool);
inline void _20ec024c6_funcDeclTrait(jule::Ptr<_20ebea2d2_ObjectCoder>, jule::Ptr<_20d3b5dde_Trait>*, jule::Ptr<_20d3a2b45_Fn>*, jule::Bool);
inline void _20ec026c4_funcDecls(jule::Ptr<_20ebea2d2_ObjectCoder>);
inline void _20ec02a37_traitDataTypeMethods(jule::Ptr<_20ebea2d2_ObjectCoder>, jule::Ptr<_20d3b5dde_Trait>*, jule::Ptr<_20d3b5dde_Trait>*);
inline void _20ec02c35_traitDataTypes(jule::Ptr<_20ebea2d2_ObjectCoder>);
inline void _20ec02edd_paramIns(jule::Ptr<_20ebea2d2_ObjectCoder>, jule::Ptr<_20d3a4a9d_ParamIns>*);
inline void _20ec03296_paramsIns(jule::Ptr<_20ebea2d2_ObjectCoder>, jule::Slice<jule::Ptr<_20d3a4a9d_ParamIns>>*);
inline void _20ec03609_varInitExpr(jule::Ptr<_20ebea2d2_ObjectCoder>, jule::Ptr<_20d458aca_Var>*, jule::Fn<void(void)>);
inline void _20ec038b2_var(jule::Ptr<_20ebea2d2_ObjectCoder>, jule::Ptr<_20d458aca_Var>);
inline void _20ec03b6a_funcIns(jule::Ptr<_20ebea2d2_ObjectCoder>, jule::Ptr<_20d3a5a49_FnIns>*);
inline void _20ec03e23_func(jule::Ptr<_20ebea2d2_ObjectCoder>, jule::Ptr<_20d3a2b45_Fn>*);
inline void _20ec04286_funcTrait(jule::Ptr<_20ebea2d2_ObjectCoder>, jule::Ptr<_20ebe8cb4_traitHash>*, jule::Ptr<_20d3a2b45_Fn>*);
inline void _20ec045e9_traitWrapper(jule::Ptr<_20ebea2d2_ObjectCoder>, jule::Ptr<_20d3a2b45_Fn>*, jule::Ptr<_20ebe8cb4_traitHash>*);
inline void _20ec047e7_traitWrappers(jule::Ptr<_20ebea2d2_ObjectCoder>);
inline void _20ec04b5a_traitDataMethods(jule::Ptr<_20ebea2d2_ObjectCoder>, jule::Ptr<_20d3b5dde_Trait>*, jule::Ptr<_20ebe8cb4_traitHash>*);
inline void _20ec04ebd_traitData(jule::Ptr<_20ebea2d2_ObjectCoder>, jule::Ptr<_20ebe8cb4_traitHash>*, jule::Ptr<_20d3b5dde_Trait>*);
inline void _20ec051bb_traitDatas(jule::Ptr<_20ebea2d2_ObjectCoder>);
inline void _20ec053b9_globals(jule::Ptr<_20ebea2d2_ObjectCoder>);
inline void _20ec055b7_decls(jule::Ptr<_20ebea2d2_ObjectCoder>);
inline void _20ec05870_structureMethods(jule::Ptr<_20ebea2d2_ObjectCoder>, jule::Ptr<_20d39066b_StructIns>*);
inline void _20ec05b28_structureDeriveDefs(jule::Ptr<_20ebea2d2_ObjectCoder>, jule::Ptr<_20d39066b_StructIns>*);
inline void _20ec05dd1_structureOstream(jule::Ptr<_20ebea2d2_ObjectCoder>, jule::Ptr<_20d39066b_StructIns>*);
inline void _20ec06189_structureIns(jule::Ptr<_20ebea2d2_ObjectCoder>, jule::Ptr<_20d39066b_StructIns>*);
inline void _20ec06442_structure(jule::Ptr<_20ebea2d2_ObjectCoder>, jule::Ptr<_20d38c58b_Struct>*);
inline void _20ec06640_structures(jule::Ptr<_20ebea2d2_ObjectCoder>);
inline void _20ec0683d_funcs(jule::Ptr<_20ebea2d2_ObjectCoder>);
inline void _20ec06ae6_pushInit(jule::Ptr<_20ebea2d2_ObjectCoder>, jule::Ptr<_20d417cba_Package>*);
inline void _20ec06ce4_initCaller(jule::Ptr<_20ebea2d2_ObjectCoder>);
inline void _20ec06ee2_end(jule::Ptr<_20ebea2d2_ObjectCoder>);
inline void _20ec071e0_serializeHead(jule::Ptr<_20ebea2d2_ObjectCoder>);
inline void _20ec073dd_Serialize(jule::Ptr<_20ebea2d2_ObjectCoder>);
inline jule::Ptr<_20db6b7d7_ObjectDeadCode> static__20db6bb4a_new(jule::Ptr<_20e027be8_IR>*);
inline jule::Bool _212a1d1e0_isLive(jule::Ptr<_20db6b7d7_ObjectDeadCode>, jule::Ptr<_20d3b5dde_Trait>*);
inline jule::Bool _212a23c73_isLive(jule::Ptr<_20db6b7d7_ObjectDeadCode>, jule::Ptr<_20d3a5a49_FnIns>*);
inline jule::Bool _212a2a2c9_isLive(jule::Ptr<_20db6b7d7_ObjectDeadCode>, jule::Ptr<_20d39066b_StructIns>*);
inline jule::Bool _212a32c71_isLive(jule::Ptr<_20db6b7d7_ObjectDeadCode>, jule::Ptr<_20d458aca_Var>*);
inline void _212a1d5a8_pushLive(jule::Ptr<_20db6b7d7_ObjectDeadCode>, jule::Ptr<_20d3b5dde_Trait>);
inline void _212a240c5_pushLive(jule::Ptr<_20db6b7d7_ObjectDeadCode>, jule::Ptr<_20d3a5a49_FnIns>);
inline void _212a2a85c_pushLive(jule::Ptr<_20db6b7d7_ObjectDeadCode>, jule::Ptr<_20d39066b_StructIns>);
inline void _212a33139_pushLive(jule::Ptr<_20db6b7d7_ObjectDeadCode>, jule::Ptr<_20d458aca_Var>);
inline void _20db6c4ec_setReferencesAsLive(jule::Ptr<_20db6b7d7_ObjectDeadCode>, jule::Ptr<_20d3a8be5_ReferenceStack>*);
inline void _20db6c7a5_inits(jule::Ptr<_20db6b7d7_ObjectDeadCode>, jule::Ptr<_20d417cba_Package>*);
inline void _20db6ca5d_collectLivePackage(jule::Ptr<_20db6b7d7_ObjectDeadCode>, jule::Ptr<_20d417cba_Package>*);
inline void _20db6cc5b_collectLive(jule::Ptr<_20db6b7d7_ObjectDeadCode>);
inline void _20db6d014_removeDeadGlobals(jule::Ptr<_20db6b7d7_ObjectDeadCode>, jule::Slice<jule::Ptr<_20d458aca_Var>>*);
inline void _20db6d2bc_removeDeadFns(jule::Ptr<_20db6b7d7_ObjectDeadCode>, jule::Slice<jule::Ptr<_20d3a2b45_Fn>>*);
inline void _20db6d575_removeDeadStructs(jule::Ptr<_20db6b7d7_ObjectDeadCode>, jule::Slice<jule::Ptr<_20d38c58b_Struct>>*);
inline void _20db6d82d_removeDeadTraits(jule::Ptr<_20db6b7d7_ObjectDeadCode>, jule::Slice<jule::Ptr<_20d3b5dde_Trait>>*);
inline void _20db6dad6_removeDeadsFile(jule::Ptr<_20db6b7d7_ObjectDeadCode>, jule::Ptr<_20d081e40_SymbolTable>*);
inline void _20db6dd8e_removeDeadsPackage(jule::Ptr<_20db6b7d7_ObjectDeadCode>, jule::Ptr<_20d417cba_Package>*);
inline void _20db6e08c_removeDeads(jule::Ptr<_20db6b7d7_ObjectDeadCode>);
inline void _20db6e28a_elimanate(jule::Ptr<_20db6b7d7_ObjectDeadCode>);
inline __jule_tuple_x_20e027be8_IR__jule_tuple_s_22730be5e_Log static__20e02815a_Build(jule::Str, jule::I64);
inline void _20e028644_appendStructs(_20e027be8_IR*, jule::Ptr<_20d417cba_Package>*, jule::Slice<jule::Ptr<_20d38c58b_Struct>>*);
inline jule::Slice<jule::Ptr<_20d38c58b_Struct>> _20e0288ca_GetAllStructures(_20e027be8_IR*);
inline void _20e028c3d_appendGlobals(_20e027be8_IR*, jule::Ptr<_20d417cba_Package>*, jule::Slice<jule::Ptr<_20d458aca_Var>>*);
inline jule::Slice<jule::Ptr<_20d458aca_Var>> _20e028ec4_GetAllGlobals(_20e027be8_IR*);
inline void _20e0291c2_Order(_20e027be8_IR*);
inline jule::Str _20d3909e0_Str(_20d39066b_StructIns*);
inline jule::Bool _20d390d31_Equal(jule::Ptr<_20d39066b_StructIns>, jule::Ptr<_20d4de28c_TypeKind>);
inline jule::Bool _20d3912d7_Same(_20d39066b_StructIns*, jule::Ptr<_20d39066b_StructIns>);
inline jule::Ptr<_20d3a2b45_Fn> _20d3916d3_FindMethod(_20d39066b_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_20d38eabb_FieldIns> _20d391a24_FindField(_20d39066b_StructIns*, jule::Str);
inline jule::Ptr<_20d458aca_Var> _20d391d65_FindStatic(_20d39066b_StructIns*, jule::Str);
inline jule::Ptr<_2273b5cd7_Cmd> static__2273b6205_New(jule::Str);
inline jule::VoidExceptional _2273b6403_Spawn(_2273b5cd7_Cmd*);
inline jule::Exceptional<jule::I64> _2273b6887_Wait(_2273b5cd7_Cmd*);
inline jule::VoidExceptional _2273ba3e6_spawn(_2273b5cd7_Cmd*);
inline jule::Exceptional<jule::I64> _2273ba87a_wait(_2273b5cd7_Cmd*);
inline jule::I32 _223d8cb58_DecodeRune(jule::I32, jule::I32);
inline __jule_tuple_i32__jule_tuple_i32 _223d8ce22_EncodeRune(jule::I32);
inline jule::Slice<jule::U16> _223d8d263_Encode(jule::Slice<jule::I32>);
inline jule::Slice<jule::I32> _223d8d52c_Decode(jule::Slice<jule::U16>);
inline jule::Slice<jule::U16> _223d8d86d_AppendRune(jule::Slice<jule::U16>, jule::I32);
inline jule::Slice<jule::U16> _223d8dac1_Utf16FromStr(jule::Str);
inline jule::Str _223d8ddce_Utf16ToStr(jule::Slice<jule::U16>);
inline jule::Str _223d8e198_U16PtrToStr(jule::U16*);
inline jule::I64 _23c5b2782_GetLastErrno(void);
inline jule::Uintptr _223db7ce8_GetStdHandle(jule::Uintptr);
inline jule::Bool _223db80b2_CloseHandle(jule::Uintptr);
inline jule::I64 _223db8436_Wstat(jule::U16*, struct _stat*);
inline jule::I64 _223db8865_Wopen(jule::U16*, jule::I64, jule::I64);
inline jule::U32 _223db8a74_GetLastError(void);
inline jule::U32 _223db8de8_GetCurrentDirectory(jule::U32, jule::U16*);
inline jule::Bool _223db947b_DeleteFile(jule::U16*);
inline jule::Bool _223db9745_CreateDirectory(jule::U16*);
inline jule::Bool _223db9a0e_RemoveDirectory(jule::U16*);
inline jule::U32 _223db9ee8_GetFullPathName(jule::U16*, jule::U32, jule::U16*, jule::U16**);
inline jule::Bool _223dba36c_GetConsoleMode(jule::Uintptr, jule::I64*);
inline jule::Bool _223dba944_SetConsoleMode(jule::Uintptr, jule::I64);
inline jule::Bool _223dbaec7_WriteConsole(jule::Uintptr, jule::U16*, jule::I64, jule::I64*, void*);
inline jule::Bool _223dbb4b1_ReadConsole(jule::Uintptr, jule::U16*, jule::I64, jule::I64*);
inline jule::Uintptr _223dbba44_FindFirstFile(jule::U16*, WIN32_FIND_DATAW*);
inline jule::I64 _223dbbdb8_FindNextFile(jule::Uintptr, WIN32_FIND_DATAW*);
inline jule::I64 _223dbc182_FindClose(jule::Uintptr);
inline jule::I64 _223dbe294_Read(jule::I64, void*, jule::U64);
inline jule::I64 _223dbe63a_Close(jule::I64);
inline jule::I64 _223dbea69_Write(jule::I64, void*, jule::U64);
inline void _223dbec9a_Exit(jule::I64);
inline jule::Slice<jule::U8> _223dd6124_Stobs(jule::Str*);
inline __jule_tuple_i32__jule_tuple_int _223ee79b6_DecodeRune(jule::Slice<jule::U8>);
inline __jule_tuple_i32__jule_tuple_int _223ee80c1_DecodeLastRune(jule::Slice<jule::U8>);
inline jule::I64 _223ee8654_RuneLen(jule::I32);
inline jule::I64 _223ee8aa5_EncodeRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _223ee8e29_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _223ee929d_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _223ee9831_RuneCountStr(jule::Str);
inline jule::Bool _223ee9aea_RuneStart(jule::U8);
inline jule::I64 _2240d6720_getLastOsErrorWindows(void);
inline jule::Slice<jule::Str> _2240d77a9_Args(void);
inline jule::Exceptional<jule::Str> _2240d7c4e_WorkingDir(void);
inline jule::Exceptional<jule::Str> _2240d8b84_getwd(void);
inline jule::Bool _2248029da_IsLetter(jule::I32);
inline jule::Bool _22486a59c_is16(jule::Slice<_22486880e_Range16>, jule::U16);
inline jule::Bool _22486a921_is32(jule::Slice<_224868d3c_Range32>, jule::U32);
inline jule::Bool _22486b229_isExcludingLatin(jule::Ptr<_2248692e3_RangeTable>, jule::I32);
inline jule::Bool _22486b4e3_IsUpper(jule::I32);
inline jule::I64 _2248964eb_FindByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I64 _2248a8b29_FindLastByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I64 _2248a8ed1_FindByteStr(jule::Str*, jule::U8);
inline jule::I64 _2248a9355_FindLastByteStr(jule::Str*, jule::U8);
inline jule::Str _2248a97b7_Repeat(jule::Str, jule::I64);
inline jule::Bool _2248a9c3a_hasPrefix(jule::Str*, jule::Str*, jule::I64);
inline jule::Bool _2248aa0ae_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _2248aa565_hasSuffix(jule::Str*, jule::Str*, jule::I64);
inline jule::Bool _2248aa8a6_HasSuffix(jule::Str, jule::Str);
inline jule::I64 _2248aacd5_FindAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _2248ab698_FindLastAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _2248aba1c_FindLast(jule::Str, jule::Str);
inline jule::I64 _2248acde7_findRune(jule::Slice<jule::U8>*, jule::I32);
inline jule::I64 _2248ad799_FindLastByte(jule::Str, jule::U8);
inline jule::I64 _2248ae68a_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _2248aee3d_Split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _2248b02b2_Contains(jule::Str, jule::Str);
inline jule::Bool _2248b0d2e_ContainsAny(jule::Str, jule::Str);
inline jule::I64 _2248b11a3_Count(jule::Str, jule::Str);
inline jule::Str _2248b168c_Replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline void _2248ad436_trimLeft(jule::Slice<jule::U8>*, jule::Slice<jule::U8>*);
inline jule::Str _2248b2836_TrimLeft(jule::Str, jule::Str);
inline void _2248b2b22_trimRight(jule::Slice<jule::U8>*, jule::Slice<jule::U8>*);
inline jule::Str _2272675e5_Trim(jule::Str, jule::Str);
inline jule::Bool _2240ab97b_IsPathSep(jule::U8);
inline jule::Bool _2240abc89_isSlash(jule::U8);
inline jule::U8 _2240ac053_toUpper(jule::U8);
inline jule::I64 _2240ac65d_volumeNameLen(jule::Str);
inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _2240ac927_cutPath(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _2240acbe1_fullPath(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _2240ad087_abs(jule::Str);
inline jule::Str _2240ad351_join(jule::Slice<jule::Str>);
inline jule::Str _227269828_Clean(jule::Str);
inline jule::Str _227269e00_FromSlash(jule::Str);
inline jule::Str _22726a241_Join(jule::Slice<jule::Str>);
inline jule::Str _22726a50a_Ext(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _22726a7c4_Abs(jule::Str);
inline jule::Str _22726aa8d_Base(jule::Str);
inline jule::Str _22726ae34_Dir(jule::Str);
inline jule::Str _22726b1ed_VolumeName(jule::Str);
inline jule::I64 _223dd0151_getLastFsError(void);
inline jule::Bool _223eeba0e_isConsoleHandle(jule::Uintptr);
inline void _2273bac32_appendEscapeArg(_2240a0ad5_StrBuilder*, jule::Str);
inline jule::Str _2273baeeb_makeCmdLine(jule::Slice<jule::Str>);
inline jule::Exceptional<jule::Slice<jule::U16>> _2273bb3c5_createEnvBlock(jule::Slice<jule::Str>);
inline jule::I64 _2273bc409_processErrorFromCode(jule::I64);
inline jule::I64 _2273bc629_getLastProcessError(void);
inline void _2273c2cd3_Exit(jule::I64);
inline jule::Str _2273c2eae_Executable(void);
inline jule::Bool _2272eea23_IsStdHeaderPath(jule::Str);
inline jule::Bool _2272eeccb_IsValidHeaderExt(jule::Str);
inline jule::Bool _227300095_IsValidCppExt(jule::Str);
inline jule::Str _22730c3c1_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _22730c6ce_argToStr(jule::Any);
inline jule::I64 _22730c998_findNextFmt(jule::Str);
inline jule::Str _22730cd61_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _22730de0b_IsTopDirective(jule::Str);
inline jule::Bool _22731035d_IsWindows(jule::Str);
inline jule::Bool _227310638_IsDarwin(jule::Str);
inline jule::Bool _227310902_IsLinux(jule::Str);
inline jule::Bool _227310c43_IsI386(jule::Str);
inline jule::Bool _22731100c_IsAmd64(jule::Str);
inline jule::Bool _2273112c6_IsArm64(jule::Str);
inline jule::Bool _227311590_IsUnix(jule::Str);
inline jule::Bool _227311936_Is32Bit(jule::Str);
inline jule::Bool _227311c00_Is64Bit(jule::Str);
inline void _2273c428a_init(void);
inline jule::I64 _20aee192e_LeadingZeros64(jule::U64);
inline jule::I64 _20aee2886_TrailingZeros(jule::U64);
inline jule::I64 _20aee32e3_TrailingZeros32(jule::U32);
inline jule::I64 _20aee35ac_TrailingZeros64(jule::U64);
inline jule::I64 _20aee9063_Len32(jule::U32);
inline jule::I64 _20aee932c_Len64(jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _20aeea0b9_Add64(jule::U64, jule::U64, jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _20aeeb8c3_Mul64(jule::U64, jule::U64);
inline jule::U32 _20ae02796_F32Bits(jule::F32);
inline jule::F32 _20ae02aa4_F32FromBits(jule::U32);
inline jule::U64 _20ae02d6d_F64Bits(jule::F64);
inline jule::F64 _20ae031ae_F64FromBits(jule::U64);
inline __jule_tuple_f64__jule_tuple_int _20ae05766_Frexp(jule::F64);
inline jule::F64 _20b003bb6_NaN(void);
inline jule::Bool _20b003ec4_IsNaN(jule::F64);
inline jule::F64 _20b00428d_Inf(jule::I64);
inline jule::Bool _20b0045ce_IsInf(jule::F64, jule::I64);
inline __jule_tuple_f64__jule_tuple_int _20b004898_normalize(jule::F64);
inline jule::F64 _20b00636c_Log(jule::F64);
inline jule::F64 _20b006c52_Abs(jule::F64);
inline __jule_tuple_f64__jule_tuple_f64 _20b00d94b_Modf(jule::F64);
inline jule::F64 _20b00e254_Log2(jule::F64);
inline jule::Str _20b038789_FmtFloat(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _20b038d72_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _20b0394e3_bigFtoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _20b037557_floatInfo*);
inline jule::Slice<jule::U8> _20b039bb9_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _20b038206_decimalSlice, jule::I64, jule::U8);
inline void _20b03a11a_roundShortest(_20b050d56_decimal*, jule::U64, jule::I64, _20b037557_floatInfo*);
inline jule::Slice<jule::U8> _20b03a6ae_fmtE(jule::Slice<jule::U8>, jule::Bool, _20b038206_decimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _20b03ab98_fmtF(jule::Slice<jule::U8>, jule::Bool, _20b038206_decimalSlice, jule::I64);
inline jule::Slice<jule::U8> _20b03b319_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _20b037557_floatInfo*);
inline jule::Slice<jule::U8> _20b041880_fmtX(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _20b037557_floatInfo*);
inline jule::I64 _20b041c04_min(jule::I64, jule::I64);
inline jule::I64 _20b042078_max(jule::I64, jule::I64);
inline jule::U8 _20b042bb1_lower(jule::U8);
inline __jule_tuple_u64__jule_tuple__20a83d930_ConvError _20b043134_parseUint(jule::Str*, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _20b043563_ParseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _20b043a19_ParseInt(jule::Str, jule::I64, jule::I64);
inline __jule_tuple_f64__jule_tuple_bool _20b04470c_eiselLemire64(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _20b044b4c_eiselLemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _20b0469a6_commonPrefixLenIgnoreCase(jule::Slice<jule::U8>*, jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _20b046cb4_special(jule::Slice<jule::U8>);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _20b04707d_readFloat(jule::Str*);
inline __jule_tuple_f64__jule_tuple_bool _20b048b0c_atof64exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _20b04903b_atof32exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f64__jule_tuple__20a83d930_ConvError _20b0495d0_atofHex(_20b037557_floatInfo*, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__20a83d930_ConvError _20b0499a9_atof32(jule::Str*);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__20a83d930_ConvError _20b049c73_atof64(jule::Str*);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__20a83d930_ConvError _20b04a0e7_parseFloatPrefix(jule::Str*, jule::I64);
inline jule::Exceptional<jule::F64> _20b04a46b_ParseFloat(jule::Str, jule::I64);
inline void _20b04ac74_ryuFtoaFixed32(_20b038206_decimalSlice*, jule::U32, jule::I64, jule::I64);
inline void _20b04b219_ryuFtoaFixed64(_20b038206_decimalSlice*, jule::U64, jule::I64, jule::I64);
inline void _20b04ba66_formatDecimal(_20b038206_decimalSlice*, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _20b04c03e_ryuFtoaShortest(_20b038206_decimalSlice*, jule::U64, jule::I64, _20b037557_floatInfo*);
inline jule::I64 _20b04c308_mulByLog2Log10(jule::I64);
inline jule::I64 _20b04c5c2_mulByLog10Log2(jule::I64);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _20b04ca01_computeBounds(jule::U64, jule::I64, _20b037557_floatInfo*);
inline void _20b04d11c_ryuDigits(_20b038206_decimalSlice*, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _20b04d78d_ryuDigits32(_20b038206_decimalSlice*, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _20b04dbbc_mult64bitPow10(jule::U32, jule::I64, jule::I64);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _20b04e0eb_mult128bitPow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _20b04e470_divisibleByPow5(jule::U64, jule::I64);
inline __jule_tuple_u32__jule_tuple_u32 _20b04e739_divmod1e9(jule::U64);
inline void _20b0526a4_trim(_20b050d56_decimal*);
inline void _20b052990_rightShift(_20b050d56_decimal*, jule::U64);
inline jule::Bool _20b052e46_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I64, jule::Str*);
inline void _20b0531ee_leftShift(_20b050d56_decimal*, jule::U64);
inline jule::Bool _20b053573_shouldRoundUp(_20b050d56_decimal*, jule::I64);
inline jule::Str _20b054c06_FmtUint(jule::U64, jule::I64);
inline jule::Str _20b0550be_FmtInt(jule::I64, jule::I64);
inline jule::Str _20b055388_Itoa(jule::I64);
inline jule::Str _20b0556c9_small(jule::I64);
inline jule::Bool _20b055993_isPowerOfTwo(jule::I64);
inline __jule_tuple_su8__jule_tuple_str _20b056037_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline jule::Str _20b057434_RealKindOf(jule::Str);
inline jule::I64 _20b0576ed_BitsizeOf(jule::Str);
inline jule::Str _20b057a3e_IntFromBits(jule::I64);
inline jule::Str _20b057d08_UintFromBits(jule::I64);
inline jule::Str _20b0580c2_FloatFromBits(jule::I64);
inline jule::Bool _20b058c1b_CheckBitFloat(jule::Str, jule::I64);
inline jule::I64 _20b058ed5_BitsizeOfFloat(jule::F64);
inline jule::I64 _20b05929e_BitsizeOfInt(jule::I64);
inline jule::I64 _20b059568_BitsizeOfUint(jule::U64);
inline void _20b0596de_UpdateTarget(void);
inline void _20b059865_init(void);
inline jule::I64 _20b05d627_MinI(jule::Str);
inline jule::I64 _20b05d935_MaxI(jule::Str);
inline jule::U64 _20b05dbee_MaxU(jule::Str);
inline jule::F64 _20b05de30_Min(jule::Str);
inline jule::F64 _20b05e1e9_Max(jule::Str);
inline jule::Bool _20b05e66c_IsI8Compatible(jule::Str);
inline jule::Bool _20b05e97a_IsI16Compatible(jule::Str);
inline jule::Bool _20b05ec44_IsI32Compatible(jule::Str);
inline jule::Bool _20b060085_IsI64Compatible(jule::Str);
inline jule::Bool _20b06034e_IsU8Compatible(jule::Str);
inline jule::Bool _20b060618_IsU16Compatible(jule::Str);
inline jule::Bool _20b0608d2_IsU32Compatible(jule::Str);
inline jule::Bool _20b060c78_IsU64Compatible(jule::Str);
inline jule::Bool _20b061042_IsF32Compatible(jule::Str);
inline jule::Bool _20b06130b_IsF64Compatible(jule::Str);
inline jule::Bool _20b061680_TypesAreCompatible(jule::Str, jule::Str);
inline jule::Bool _20b061949_IsI16Greater(jule::Str);
inline jule::Bool _20b061c13_IsI32Greater(jule::Str);
inline jule::Bool _20b061ecc_IsI64Greater(jule::Str);
inline jule::Bool _20b062296_IsU16Greater(jule::Str);
inline jule::Bool _20b062719_IsU32Greater(jule::Str);
inline jule::Bool _20b0629d3_IsU64Greater(jule::Str);
inline jule::Bool _20b062c9c_IsF32Greater(jule::Str);
inline jule::Bool _20b063066_IsF64Greater(jule::Str);
inline jule::Bool _20b0633da_IsGreater(jule::Str, jule::Str);
inline jule::Bool _20b064441_IsSigInt(jule::Str);
inline jule::Bool _20b06474e_IsUnsigInt(jule::Str);
inline jule::Bool _20b064a18_IsInt(jule::Str);
inline jule::Bool _20b064d59_IsFloat(jule::Str);
inline jule::Bool _20b065123_IsNum(jule::Str);
inline jule::Bool _20b0653dc_IsSigNum(jule::Str);
inline void _20b06e616_lshiftUnsig(_20b0655eb_Const*, _20b0655eb_Const*);
inline void _20b06e946_rshiftUnsig(_20b0655eb_Const*, _20b0655eb_Const*);
inline jule::Bool _20d351808_IsUnaryOp(jule::U64);
inline jule::Bool _20d351b16_IsBinOp(jule::U64);
inline jule::Bool _20d352221_IsStr(jule::Str);
inline jule::Bool _20d3524da_IsRawStr(jule::Str);
inline jule::Bool _20d3527a4_IsRune(jule::Str);
inline jule::Bool _20d3531cd_IsFloat(jule::Str);
inline jule::Bool _20d353497_IsNum(jule::Str);
inline jule::Bool _20d353a2a_IsIgnoreIdent(jule::Str);
inline jule::Bool _20d353ce4_IsAnonIdent(jule::Str);
inline jule::Bool _20d354377_IsSpace(jule::I32);
inline jule::Bool _20d3547ea_IsLetter(jule::I32);
inline jule::Bool _20d354d7d_IsDecimal(jule::U8);
inline jule::Bool _20d355147_IsBinary(jule::U8);
inline jule::Bool _20d355411_IsOctal(jule::U8);
inline jule::Bool _20d3556ca_IsHex(jule::U8);
inline jule::Bool _20d355994_IsAssign(jule::U64);
inline jule::Bool _20d355c5d_IsPostfixOp(jule::U64);
inline jule::Bool _20d356027_IsAssignOp(jule::U64);
inline jule::Ptr<_20d356885_File> _20d357c2c_NewFileSet(jule::Str);
inline _22730be5e_Log _20d359778_makeErr(jule::I64, jule::I64, jule::Ptr<_20d356885_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _20d359b41_bytesHasPrefix(jule::Slice<jule::U8>*, jule::Str);
inline jule::Str _20d359eb5_floatFmtE(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _20d35a37d_floatFmtP(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _20d35a702_floatFmtDotnp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _20d35aa76_floatFmtDotfp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _20d35adea_floatFmtDotp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _20d35b37e_floatNum(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _20d35b648_commonNum(jule::Slice<jule::U8>*);
inline jule::Str _20d35b912_binaryNum(jule::Slice<jule::U8>*);
inline jule::Bool _20d35bc86_isFloatFmtE(jule::U8, jule::I64);
inline jule::Bool _20d35c10a_isFloatFmtP(jule::U8, jule::I64);
inline jule::Bool _20d35c47e_isFloatFmtDotnp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Bool _20d35c803_isFloatFmtDotp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Bool _20d35cb77_isFloatFmtDotfp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _20d363045_octalNum(jule::Slice<jule::U8>*);
inline jule::Str _20d363221_hexNum(jule::Slice<jule::U8>*);
inline jule::Str _20d363595_hexEscape(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _20d36385e_bigUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _20d363b28_littleUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _20d363de2_hexByteEscape(jule::Slice<jule::U8>*);
inline jule::Str _20d3641ab_byteEscape(jule::Slice<jule::U8>*);
inline jule::Slice<_22730be5e_Log> _20d3691a0_Lex(jule::Ptr<_20d356885_File>, jule::I64);
inline jule::Bool _20d431e16_FindModuleFile(jule::Slice<jule::Ptr<_223dd0706_DirEntry>>*);
inline jule::Str _20d4321e1_FindModuleFileDeep(jule::Str);
inline jule::Slice<_22730be5e_Log> _20d4324aa_CheckModuleFile(jule::Str*);
inline jule::Bool _20d432ee4_IsPub(jule::Str*);
inline jule::Bool _20d05374c_IsAscii(jule::I32);
inline jule::I32 _20d06b08e_ToRune(jule::Slice<jule::U8>);
inline jule::Str _20d06b358_ToRawStr(jule::Slice<jule::U8>);
inline jule::Str _20d06b699_ToStr(jule::Slice<jule::U8>);
inline __jule_tuple_u8__jule_tuple_bool _20d06b963_tryBtoaCommonEsq(jule::Slice<jule::U8>);
inline jule::I32 _20d06bca4_runeFromEsqSeq(jule::Slice<jule::U8>, jule::I64*);
inline jule::Slice<jule::U8> _20d06c128_strEsqSeq(jule::Slice<jule::U8>, jule::I64*);
inline jule::I64 _20d55cad0_findFormatPrefix(jule::Slice<jule::U8>*, jule::I64*);
inline jule::Slice<jule::U8> _20d55ce98_getFormatRange(jule::I64*, jule::Slice<jule::U8>*);
inline void _20d55d284_FmtByDefault(_2240a0ad5_StrBuilder*, jule::Any*);
inline void _20d55d6a2_applyFmtByDefault(_2240a0ad5_StrBuilder*, jule::I64*, jule::Slice<jule::Any>);
inline void _20d55db03_applyFmt(jule::Slice<jule::U8>*, _2240a0ad5_StrBuilder*, jule::I64*, jule::Slice<jule::Any>);
inline jule::Str _20d55de44_Format(jule::Str*, jule::Slice<jule::Any>);
inline jule::Str _20d561111_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _20d3a7d26_parameterUsesGenerics(jule::Ptr<_20d3a4a9d_ParamIns>*, jule::Slice<jule::Ptr<_20d378ba4_GenericDecl>>*);
inline jule::Ptr<_20d4e6706_TypeSymbol> _20d3aa576_buildType(jule::Ptr<_20d36b999_TypeDecl>);
inline jule::Ptr<_20d0882a9_Value> _20d3aa884_buildExpr(jule::Ptr<_20d370ccd_Expr>);
inline jule::Ptr<_20d4dd49a_TypeAlias> _20d3aab4d_buildTypeAlias(jule::Ptr<_20d38330c_TypeAliasDecl>);
inline jule::Ptr<_20d389698_Field> _20d3aae8e_buildField(jule::Ptr<_20d386ad5_FieldDecl>);
inline jule::Slice<jule::Ptr<_20d389698_Field>> _20d3ab258_buildFields(jule::Slice<jule::Ptr<_20d386ad5_FieldDecl>>*);
inline jule::Ptr<_20d38c58b_Struct> _20d3ab522_buildStruct(jule::Ptr<_20d3874cb_StructDecl>);
inline jule::Ptr<_20d3a1171_Param> _20d3ab7db_buildParam(jule::Ptr<_20d37c207_ParamDecl>);
inline jule::Slice<jule::Ptr<_20d3a1171_Param>> _20d3abb82_buildParams(jule::Slice<jule::Ptr<_20d37c207_ParamDecl>>*);
inline jule::Ptr<_20d3a08e0_RetType> _20d3abe4b_buildRetType(jule::Ptr<_20d36e88c_RetTypeDecl>);
inline jule::Ptr<_20d3a2b45_Fn> _20d3ac215_buildFunc(jule::Ptr<_20d37d659_FnDecl>);
inline jule::Slice<jule::Ptr<_20d3a2b45_Fn>> _20d3ac4ce_buildMethods(jule::Slice<jule::Ptr<_20d37d659_FnDecl>>*);
inline jule::Slice<jule::Ptr<_20d4e6706_TypeSymbol>> _20d3ac798_buildTraitInherits(jule::Slice<jule::Ptr<_20d36b999_TypeDecl>>*);
inline jule::Ptr<_20d3b5dde_Trait> _20d3aca62_buildTrait(jule::Ptr<_20d387c18_TraitDecl>);
inline jule::Ptr<_20d3b7a6c_EnumItem> _20d3acd2b_buildEnumItem(jule::Ptr<_20d384cc0_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_20d3b7a6c_EnumItem>> _20d3ad0e5_buildEnumItems(jule::Slice<jule::Ptr<_20d384cc0_EnumItemDecl>>*);
inline jule::Ptr<_20d3b85d9_Enum> _20d3ad568_buildEnum(jule::Ptr<_20d385881_EnumDecl>);
inline jule::Ptr<_20d3b971c_TypeEnumItem> _20d3ad832_buildTypeEnumItem(jule::Ptr<_20d3861ab_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_20d3b971c_TypeEnumItem>> _20d3adaeb_buildTypeEnumItems(jule::Slice<jule::Ptr<_20d3861ab_TypeEnumItemDecl>>*);
inline jule::Ptr<_20d3b9ce4_TypeEnum> _20d3addb5_buildTypeEnum(jule::Ptr<_20d38681b_TypeEnumDecl>);
inline jule::Ptr<_20d458aca_Var> _20d3ae17e_buildVar(jule::Ptr<_20d37e737_VarDecl>);
inline jule::Slice<jule::Ptr<_20d458aca_Var>> _20d3ae448_buildVars(jule::Slice<jule::Ptr<_20d37e737_VarDecl>>);
inline jule::Ptr<_20d3dd268_Impl> _20d3ae712_buildImpl(jule::Ptr<_20d388378_Impl>);
inline jule::Ptr<_20d087165_Data> _20d3d8c58_buildAsComptimeMethodData(jule::Ptr<_20d3a5a49_FnIns>*);
inline jule::Ptr<_20d414d94_ImportInfo> _20d3d9066_findComptimePackage(jule::Ptr<_20d435de8_Sema>*);
inline jule::Ptr<_20d087165_Data> _20d3d93da_buildComptimeTypeInfoData(jule::Ptr<_20d435de8_Sema>*, jule::Ptr<_20d4de28c_TypeKind>*);
inline jule::Ptr<_20d087165_Data> _20d3d961b_buildComptimeValue(jule::Ptr<_20d087165_Data>*);
inline jule::Bool _20d3dc5db_matchConstraint(jule::Str*, jule::Ptr<_20d4de28c_TypeKind>*);
inline jule::Bool _20d3dc8e9_isBuiltinConstraint(jule::Str*);
inline jule::Ptr<_20d3ea9a1_scopeChecker> _20d3e0479_newScopeCheckerBase(jule::Ptr<_20d435de8_Sema>*, jule::Ptr<_20d3a5a49_FnIns>);
inline jule::Ptr<_20d3ea9a1_scopeChecker> _20d3e0842_newScopeChecker(jule::Ptr<_20d435de8_Sema>*, jule::Ptr<_20d3a5a49_FnIns>);
inline jule::Ptr<_20d3e950a_scopeLabel> _20d3e0bb6_findLabelParent(jule::Str*, jule::Ptr<_20d3ea9a1_scopeChecker>);
inline jule::Bool _20d3e107e_modelIsGotoScope(jule::Any, jule::Ptr<_20d3e369c_Scope>*);
inline jule::Bool _20d3e1403_stmtIsGotoScope(jule::Any*, jule::Ptr<_20d3e369c_Scope>*);
inline jule::I64 _20d3e1777_countMatchType(jule::Ptr<_20d3e77d3_Match>*, jule::Ptr<_20d4de28c_TypeKind>*);
inline jule::Slice<jule::Ptr<_20d087165_Data>> _20d3e1a41_getDatasFromTupleData(jule::Ptr<_20d087165_Data>*);
inline jule::Bool _20d3e2404_checkMut(jule::Ptr<_20d435de8_Sema>*, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d087165_Data>, jule::Ptr<_20d3510bb_Token>);
inline jule::Bool _20d3e28dd_checkAssign(jule::Ptr<_20d435de8_Sema>*, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d087165_Data>, jule::Ptr<_20d3510bb_Token>);
inline jule::Bool _20d3e2ba7_isValidAstStForNextSt(jule::Any*);
inline jule::Bool _20d3e2e71_isValidStForNextSt(jule::Any*);
inline jule::Bool _20d3e323a_stmtIsDef(jule::Any*);
inline jule::U64 _20d40ca6d_removeEqFromOp(jule::U64);
inline jule::Ptr<_20d458aca_Var> _20d41237a_findVarInPackage(jule::Slice<jule::Ptr<_20d081e40_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_20d4dd49a_TypeAlias> _20d4127ed_findTypeAliasInPackage(jule::Slice<jule::Ptr<_20d081e40_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_20d38c58b_Struct> _20d412c2c_findStructInPackage(jule::Slice<jule::Ptr<_20d081e40_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_20d3a2b45_Fn> _20d4131d3_findFnInPackage(jule::Slice<jule::Ptr<_20d081e40_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_20d3b5dde_Trait> _20d413524_findTraitInPackage(jule::Slice<jule::Ptr<_20d081e40_SymbolTable>>*, jule::Str*);
inline jule::Ptr<_20d3b85d9_Enum> _20d413898_findEnumInPackage(jule::Slice<jule::Ptr<_20d081e40_SymbolTable>>*, jule::Str*);
inline jule::Ptr<_20d3b9ce4_TypeEnum> _20d413c1c_findTypeEnumInPackage(jule::Slice<jule::Ptr<_20d081e40_SymbolTable>>*, jule::Str*);
inline jule::Any _20d41425b_defByIdentPackage(jule::Slice<jule::Ptr<_20d081e40_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Bool _20d41a295_isStdPackage(jule::Str*, jule::Str);
inline jule::Bool _20d433588_isValidModelForRef(jule::Any*);
inline _22730be5e_Log _20d433ab6_compilerErr(jule::Ptr<_20d3510bb_Token>*, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _20d433e3a_impIsLookupable(jule::Ptr<_20d414d94_ImportInfo>*, jule::Str*);
inline void _20d4341e3_appendRetVars(jule::Slice<jule::Ptr<_20d458aca_Var>>*, jule::Ptr<_20d3a5a49_FnIns>*);
inline void _20d4344ce_appendParamVars(jule::Slice<jule::Ptr<_20d458aca_Var>>*, jule::Ptr<_20d3a5a49_FnIns>*);
inline void _20d4347ba_appendGenericTypeAliases(jule::Slice<jule::Ptr<_20d4dd49a_TypeAlias>>*, jule::Ptr<_20d3a5a49_FnIns>*);
inline jule::Ptr<_20d081e40_SymbolTable> _20d434b3e_findFile(jule::Slice<jule::Ptr<_20d081e40_SymbolTable>>*, jule::Ptr<_20d356885_File>*);
inline void _20d4350e5_pushSuggestion(_22730be5e_Log*, jule::Str, jule::Slice<jule::Any>);
inline void _20d456db4_pushImplemented(jule::Ptr<_20d3b5dde_Trait>, jule::Ptr<_20d38c58b_Struct>*);
inline void _20d4571a0_pushImplements(jule::Ptr<_20d38c58b_Struct>*, jule::Ptr<_20d3b5dde_Trait>);
inline jule::Bool _20d06c9a8_traitHasReferenceReceiver(jule::Ptr<_20d3b5dde_Trait>*);
inline jule::Bool _20d06cd3d_floatAssignable(jule::Str*, jule::Ptr<_20d087165_Data>*);
inline jule::Bool _20d06d1b2_sigAssignable(jule::Str, jule::Ptr<_20d087165_Data>*);
inline jule::Bool _20d06d57a_unsigAssignable(jule::Str, jule::Ptr<_20d087165_Data>*);
inline jule::Bool _20d06d8ee_intAssignable(jule::Str, jule::Ptr<_20d087165_Data>*);
inline void _20d07a0ae_checkMutRiskOfStructLit(jule::Ptr<_20d435de8_Sema>*, jule::Ptr<_20d3958a2_StructLitExprModel>*);
inline jule::Ptr<_20d4de28c_TypeKind> _20d080b53_lenKind(void);
inline jule::Bool _20d080ea5_isGoodValueToInfer(jule::Ptr<_20d087165_Data>*);
inline jule::Ptr<_20d36adb6_Directive> _20d4d76a3_findDirective(jule::Slice<jule::Ptr<_20d36adb6_Directive>>*, jule::Str);
inline jule::Any _20d4d7a6b_findBuiltinsImport(jule::Str*, jule::Ptr<_20d414d94_ImportInfo>);
inline void _20d4d7c9c_fitBitsize(jule::Ptr<_20d087165_Data>*);
inline void _20d4d80cc_makeStructLitAlloc(jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d3958a2_StructLitExprModel>*);
inline jule::Ptr<_20d458aca_Var> _20d4d8451_buildErrorVar(jule::Ptr<_20d3e369c_Scope>*, jule::Ptr<_20d374a07_FnCallExpr>*);
inline jule::Any _20d4d87c5_findBuiltinsSema(jule::Str*, jule::Ptr<_20d435de8_Sema>);
inline jule::Bool _20d4d8a8e_isOkForShifting(jule::Ptr<_20d087165_Data>*);
inline jule::Bool _20d4d8e68_isInstancedStruct(jule::Ptr<_20d39066b_StructIns>);
inline jule::Bool _20d4d92dc_isPtrArithmeticCompatible(jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d087165_Data>*);
inline void _20d4d95c8_applyCastKindModel(jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d4de28c_TypeKind>*);
inline void _20d4d98b4_applyCastKind(jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d4de28c_TypeKind>*);
inline jule::Ptr<_20d087165_Data> _20d4d9ac3_buildVoidData(void);
inline jule::Str _20d4d9d8c_checkDataForIntegerIndexing(jule::Ptr<_20d087165_Data>*);
inline void _20d4da178_applyCastModelByEnum(jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d3b85d9_Enum>);
inline void _20d4da464_castConstByType(jule::Str*, jule::Ptr<_20d087165_Data>*);
inline void _20d4da909_updateModelToGenericIns(jule::Any*, jule::Ptr<_20d3a5a49_FnIns>*);
inline jule::Bool _20d4dac7d_pushSubIdentFromExpr(jule::Any, jule::Ptr<_20d36c3a1_SubIdentTypeDecl>*);
inline jule::Str _20d4db047_constoa(jule::Ptr<_20b0655eb_Const>*);
inline jule::Ptr<_20d087165_Data> _20d4db3bb_evalEnumStatic(jule::Ptr<_20d3b85d9_Enum>*, jule::Ptr<_20d3b7a6c_EnumItem>*);
inline jule::Ptr<_20d3958a2_StructLitExprModel> _20d4db685_isLitBased(jule::Any*);
inline void _20d4db971_makeImplicitDeref(jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d3510bb_Token>);
inline jule::Bool _20d509c8b_kindUsesGenerics(jule::Ptr<_20d4de28c_TypeKind>*, jule::Slice<jule::Ptr<_20d378ba4_GenericDecl>>*);
inline jule::Bool _20d50a154_hasDirective(jule::Slice<jule::Ptr<_20d36adb6_Directive>>*, jule::Str);
inline jule::Bool _20d50a41d_canGetPtr(jule::Ptr<_20d087165_Data>*);
inline jule::Bool _20d50a75e_isValidForSptrType(jule::Ptr<_20d4de28c_TypeKind>*);
inline jule::Bool _20d50aa28_isValidForRef(jule::Ptr<_20d4de28c_TypeKind>*);
inline jule::Bool _20d50ace2_isBuiltinStrConvertable(jule::Ptr<_20d4de28c_TypeKind>*);
inline jule::Str _20d50b0ab_buildLinkPathByTokens(jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Ptr<_20d4e710d_Prim> _20d50b452_buildPrimType(jule::Str);
inline jule::Ptr<_20d38c58b_Struct> _20d50b71b_getStructFromKind(jule::Ptr<_20d4de28c_TypeKind>);
inline void _20d50ba07_applyImplicitCast(jule::Ptr<_20d4de28c_TypeKind>*, jule::Ptr<_20d087165_Data>*);
inline jule::Bool _20d50bcc1_validTypeForXof(jule::Ptr<_20d4de28c_TypeKind>*);
inline __jule_tuple_x_20d081e40_SymbolTable__jule_tuple_s_22730be5e_Log _20d50ed5c_buildSymbols(jule::Ptr<_20d3699ec_Ast>*, jule::Trait<_20d411e7e_Importer>*, jule::Ptr<_20d3aecc8_symbolBuilder>);
inline __jule_tuple_x_20d417cba_Package__jule_tuple_s_22730be5e_Log _20d5102d0_analyzePackage(jule::Slice<jule::Ptr<_20d3699ec_Ast>>*, jule::Trait<_20d411e7e_Importer>*, jule::I64*);
inline __jule_tuple_x_20d417cba_Package__jule_tuple_s_22730be5e_Log _20d51070e_AnalyzePackage(jule::Slice<jule::Ptr<_20d3699ec_Ast>>, jule::Trait<_20d411e7e_Importer>, jule::I64);
inline jule::Ptr<_20d3a5a49_FnIns> _20d561a90_findBuiltinFunc(jule::Str*);
inline jule::Ptr<_20d4dd49a_TypeAlias> _20d561d9d_primTypeAlias(jule::Ptr<_20d4de28c_TypeKind>*);
inline jule::Ptr<_20d458aca_Var> _20d5659a6_findBuiltinVar(jule::Str*);
inline jule::Ptr<_20d4dd49a_TypeAlias> _20d565bd7_findBuiltinTypeAlias(jule::Str);
inline jule::Any _20d565ea1_findBuiltinDef(jule::Str*);
inline jule::Any _20d56626a_findBuiltinDefStdDebug(jule::Str*);
inline jule::Any _20d566534_findBuiltinDefStdMem(jule::Str*);
inline jule::Any _20d5668ca_findBuiltinDefStdComptime(jule::Str*);
inline jule::Any _20d566b94_findBuiltinDefStdJuleIntegrated(jule::Str*);
inline jule::Any _20d567018_findPackageBuiltinDef(jule::Str*, jule::Str*);
inline jule::Ptr<_20d087165_Data> _20d567447_builtinCallerCommonPlain(jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*, jule::Ptr<_20d087165_Data>*);
inline jule::Ptr<_20d087165_Data> _20d5677bb_builtinCallerError(jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*);
inline jule::Ptr<_20d087165_Data> _20d567bea_builtinCallerOut(jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*, jule::Ptr<_20d087165_Data>*);
inline jule::Ptr<_20d087165_Data> _20d568129_builtinCallerOutln(jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*, jule::Ptr<_20d087165_Data>*);
inline jule::Ptr<_20d087165_Data> _20d568558_builtinCallerNew(jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*, jule::Ptr<_20d087165_Data>*);
inline jule::Ptr<_20d087165_Data> _20d568b41_builtinCallerPanic(jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*, jule::Ptr<_20d087165_Data>*);
inline jule::Ptr<_20d087165_Data> _20d569070_builtinCallerMake(jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*, jule::Ptr<_20d087165_Data>*);
inline jule::Ptr<_20d087165_Data> _20d56949e_builtinCallerAppend(jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*, jule::Ptr<_20d087165_Data>*);
inline jule::Ptr<_20d087165_Data> _20d569988_callerCopySlice(jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*, jule::Ptr<_20d087165_Data>*);
inline jule::Ptr<_20d087165_Data> _20d569db7_builtinCallerCopy(jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*, jule::Ptr<_20d087165_Data>*);
inline jule::Ptr<_20d087165_Data> _20d56a23b_callerLenSlice(jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d087165_Data>*);
inline jule::Ptr<_20d087165_Data> _20d56a5b0_callerLenMap(jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d087165_Data>*);
inline jule::Ptr<_20d087165_Data> _20d56a934_callerLenArr(jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d087165_Data>*);
inline jule::Ptr<_20d087165_Data> _20d56aca8_callerLenStr(jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d087165_Data>*);
inline jule::Ptr<_20d087165_Data> _20d56b12c_callerLenComptime(jule::Ptr<_20d087165_Data>*, jule::I64);
inline jule::Ptr<_20d087165_Data> _20d56b55b_builtinCallerLen(jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*, jule::Ptr<_20d087165_Data>*);
inline jule::Ptr<_20d087165_Data> _20d56b8d0_callerCapSlice(jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d087165_Data>*);
inline jule::Ptr<_20d087165_Data> _20d56bd0e_builtinCallerCap(jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*, jule::Ptr<_20d087165_Data>*);
inline jule::Ptr<_20d087165_Data> _20d56c2e8_callerDeleteMap(jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*, jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d087165_Data>*);
inline jule::Ptr<_20d087165_Data> _20d56c727_builtinCallerDelete(jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*, jule::Ptr<_20d087165_Data>*);
inline jule::Ptr<_20d087165_Data> _20d56cb56_builtinCallerClone(jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*, jule::Ptr<_20d087165_Data>*);
inline jule::Ptr<_20d087165_Data> _20d56d22d_builtinCallerAssert(jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*, jule::Ptr<_20d087165_Data>*);
inline jule::Ptr<_20d087165_Data> _20d56d5e6_builtinCallerStdComptimeTypeOf(jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*, jule::Ptr<_20d087165_Data>*);
inline jule::Ptr<_20d087165_Data> _20d56da25_builtinCallerStdComptimeValueOf(jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*, jule::Ptr<_20d087165_Data>*);
inline jule::Ptr<_20d087165_Data> _20d56dcde_rangeData(jule::Trait<_20d3bbea0_comptimeRangeKind>);
inline jule::Ptr<_20d087165_Data> _20d56e21d_builtinCallerStdComptimeRange(jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*, jule::Ptr<_20d087165_Data>*);
inline jule::Ptr<_20d087165_Data> _20d56e64c_builtinCallerStdComptimeLine(jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*, jule::Ptr<_20d087165_Data>*);
inline jule::Ptr<_20d087165_Data> _20d56ea7b_builtinCallerStdComptimeFile(jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*, jule::Ptr<_20d087165_Data>*);
inline jule::Ptr<_20d087165_Data> _20d56eeaa_builtinCallerStdComptimeFiles(jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*, jule::Ptr<_20d087165_Data>*);
inline jule::Ptr<_20d087165_Data> _20d5703d9_builtinCallerStdComptimeTypeAlias(jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*, jule::Ptr<_20d087165_Data>*);
inline jule::Ptr<_20d087165_Data> _20d570818_builtinCallerStdMemSizeOf(jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*, jule::Ptr<_20d087165_Data>*);
inline jule::Ptr<_20d087165_Data> _20d570c47_builtinCallerStdMemAlignOf(jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*, jule::Ptr<_20d087165_Data>*);
inline jule::Ptr<_20d087165_Data> _20d571176_builtinCallerStdMemFree(jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*, jule::Ptr<_20d087165_Data>*);
inline jule::Ptr<_20d087165_Data> _20d5715a5_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*, jule::Ptr<_20d087165_Data>*);
inline jule::Ptr<_20d087165_Data> _20d5719d4_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*, jule::Ptr<_20d087165_Data>*);
inline jule::Ptr<_20d087165_Data> _20d571e13_builtinCallerStdDebugOut(jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*, jule::Ptr<_20d087165_Data>*);
inline jule::Ptr<_20d087165_Data> _20d572342_builtinCallerStdDebugOutln(jule::Ptr<_20d088d59_Eval>*, jule::Ptr<_20d374a07_FnCallExpr>*, jule::Ptr<_20d087165_Data>*);
inline jule::Ptr<_20de98bad_FileInfo> _20dedd450_ParseFile(jule::Ptr<_20d356885_File>);
inline __jule_tuple_x_20d3699ec_Ast__jule_tuple_s_22730be5e_Log _20dedda27_parseFileset(jule::Ptr<_20d356885_File>);
inline jule::Ptr<_20d37b9ba_ScopeTree> _20dede4a6_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _20dede82a_isSt(jule::Ptr<_20d3510bb_Token>, jule::Ptr<_20d3510bb_Token>);
inline jule::Bool _20dedeb9e_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_20d3510bb_Token>>*, jule::I64*);
inline __jule_tuple_int__jule_tuple_bool _20dee0067_nextStPos(jule::Slice<jule::Ptr<_20d3510bb_Token>>*, jule::I64);
inline __jule_tuple_sx_20d3510bb_Token__jule_tuple_bool _20dee03db_skipSt(jule::I64*, jule::Slice<jule::Ptr<_20d3510bb_Token>>);
inline jule::Slice<jule::Ptr<_20dee071b_stmt>> _20dee0ac3_splitStmts(jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Bool _20e008da5_isTypeOp(jule::U64*);
inline jule::Bool _20e0091b3_isTypeRange(jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Slice<jule::Ptr<_20d3510bb_Token>> _20e00947c_getBlockExpr(jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline __jule_tuple_sx_20d3510bb_Token__jule_tuple_sx_20d3510bb_Token _20e009845_splitDelim(jule::Slice<jule::Ptr<_20d3510bb_Token>>*, jule::U64);
inline jule::I64 _20e009b0e_findLowestPrecOp(jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Ptr<_20d372708_IdentExpr> _20e009dc8_buildIdentExpr(jule::Ptr<_20d3510bb_Token>*);
inline __jule_tuple_sx_20d3510bb_Token__jule_tuple_int _20e00a192_getRangeExprTokens(jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Bool _20e00ae95_checkAssignTokens(jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline _22730be5e_Log _20e00c172_makeErr(jule::I64, jule::I64, jule::Ptr<_20d356885_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_20d3510bb_Token>> _20e00c66c_range(jule::I64*, jule::U64, jule::U64, jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline __jule_tuple_sx_20d3510bb_Token__jule_tuple_sx_20d3510bb_Token _20e00c936_rangeLast(jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline __jule_tuple_ssx_20d3510bb_Token__jule_tuple_s_22730be5e_Log _20e00cddc_parts(jule::Slice<jule::Ptr<_20d3510bb_Token>>*, jule::U64, jule::Bool);
inline jule::U64 _20e00d1a6_getCloseOfBrace(jule::U64);
inline _22730be5e_Log _20e00d5d5_compilerErr(jule::Ptr<_20d3510bb_Token>*, jule::Str*, jule::Slice<jule::Any>);
inline void _20e00d97b_pushSuggestion(_22730be5e_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _20e00dd22_tokstoa(jule::Slice<jule::Ptr<_20d3510bb_Token>>*);
inline jule::Ptr<_20d36b999_TypeDecl> _20e02084a_buildVoidType(void);
inline __jule_tuple_bool__jule_tuple_bool _20d79da35_checkOs(jule::Str);
inline __jule_tuple_bool__jule_tuple_bool _20d79db78_checkArch(jule::Str);
inline jule::Bool _20d7b8731_isPassFileAnnotation(jule::Str);
inline void _20d7b98a8_setOsVars(jule::Slice<jule::Str>*);
inline void _20d7b9b2d_setArchVars(jule::Slice<jule::Str>*);
inline void _20d7b9e19_initVars(jule::Slice<jule::Str>*, _20d7b9589_CompileInfo*);
inline jule::Slice<jule::U8> _20e024970_readBuff(jule::Str);
inline _22730be5e_Log _20e024c4a_flatCompilerErr(jule::Str);
inline void _20e029568_pushPasses(jule::Ptr<_20d417cba_Package>*, jule::Slice<jule::Str>*);
inline jule::Slice<jule::Str> _20e029931_getAllUniquePasses(jule::Ptr<_20d417cba_Package>*, jule::Slice<jule::Ptr<_20d414d94_ImportInfo>>);
inline _20d7b9589_CompileInfo _20e029b40_buildCompileInfo(void);
inline void _20db6e5ba_EliminateDefines(jule::Ptr<_20e027be8_IR>*);
inline jule::Ptr<_20d36adb6_Directive> _20db6e983_findDirective(jule::Slice<jule::Ptr<_20d36adb6_Directive>>*, jule::Str);
inline jule::Bool _20db6ed07_hasDirective(jule::Slice<jule::Ptr<_20d36adb6_Directive>>*, jule::Str);
inline jule::Bool _20db701c0_isTraitMethod(jule::Ptr<_20d39066b_StructIns>*, jule::Ptr<_20d3a5a49_FnIns>*);
inline void _20db741c4_eliminateDeadCodeOfScope(jule::Ptr<_20d3e369c_Scope>);
inline void _20db74449_eliminateScopeFunctions(jule::Slice<jule::Ptr<_20d3a2b45_Fn>>*);
inline void _20db7467a_eliminateFunctionsScopePackage(jule::Ptr<_20d417cba_Package>*);
inline void _20db74933_eliminateScopePackage(jule::Ptr<_20d417cba_Package>*);
inline void _20db74b64_EliminateScopes(jule::Ptr<_20e027be8_IR>*);
inline jule::Uintptr _20d572683_typeData(jule::Any*);
inline jule::Bool _20d572a4b_equalConst(jule::Ptr<_20b0655eb_Const>, jule::Ptr<_20b0655eb_Const>);
inline jule::Bool _20d572dc0_equalCasting(jule::Ptr<_20d396232_CastingExprModel>, jule::Ptr<_20d396232_CastingExprModel>);
inline jule::Bool _20d573200_equalUnary(jule::Ptr<_20d394ecd_UnaryExprModel>, jule::Ptr<_20d394ecd_UnaryExprModel>);
inline jule::Bool _20d573574_equalIndexing(jule::Ptr<_20d397464_IndexingExprModel>, jule::Ptr<_20d397464_IndexingExprModel>);
inline jule::Bool _20d5738e8_equalBinary(jule::Ptr<_20d394b04_BinopExprModel>, jule::Ptr<_20d394b04_BinopExprModel>);
inline jule::Bool _20d573c6c_equalModels(jule::Any, jule::Any);
inline jule::Bool _20d57c3a2_isStdPackage(jule::Str*, jule::Str);
inline jule::Bool _20d57c6b0_isConstantValidConditionalCase(jule::Ptr<_20d3e3aba_If>*);
inline jule::Bool _20d57c979_isUnreachableExpr(jule::Any*);
inline jule::Bool _20d57ccba_isConstantValidMatchCase(jule::Ptr<_20d3e841b_Case>*);
inline jule::Bool _20d57d084_isUnreachableConditionalCase(jule::Ptr<_20d3e3aba_If>*);
inline jule::Bool _20d57d34d_isUnreachableMatchCase(jule::Ptr<_20d3e841b_Case>*);
inline __jule_tuple_bool__jule_tuple_u64 _20d586774_checkForBitShiftOpt(jule::Ptr<_20d394609_OperandExprModel>*, jule::Ptr<_20d394609_OperandExprModel>*);
inline jule::Bool _20d586b3c_areSameLvalueExprModel(jule::Any*, jule::Any*);
inline void _20d587379_doInternalNosafeStobs(_20d57e22d_exprOptimizer*, _20e02c04e_stdCacheData*, jule::Ptr<_20d396ad4_FnCallExprModel>*);
inline void _20e02c6e2_buildCache(jule::Ptr<_20e027be8_IR>*);
inline void _20e02c934_buildStdInternalNosafeCache(jule::Ptr<_20e027be8_IR>*);
inline void _20e02ccca_pushCache(jule::Ptr<_20d417cba_Package>*, jule::Str, jule::Fn<void(_20d57e22d_exprOptimizer*,_20e02c04e_stdCacheData*,jule::Ptr<_20d396ad4_FnCallExprModel>*)>);
inline jule::Ptr<_20d3a5a49_FnIns> _20e02d193_getFunc(jule::Ptr<_20d417cba_Package>*, jule::Str*);
inline jule::Ptr<_20d417cba_Package> _20e02d517_getPackage(jule::Ptr<_20e027be8_IR>*, jule::Str*);
inline void _20e03120c_PushOptLevel(jule::I64);
inline void _20db7e71d_detectEnabled(void);
inline void _20e23ae3e_Throw(jule::Str);
inline jule::U64 _20ebe2cbe_unix(void);
inline jule::Bool _20ea21bdb_isCopyOptimizable(jule::Ptr<_20d087165_Data>*);
inline jule::Bool _20ea220a4_isIterCopyOptimizable(jule::Ptr<_20d087165_Data>*, jule::Ptr<_20d458aca_Var>*);
inline jule::Str _20ea327e0_decomposeCommonEsq(jule::U8);
inline jule::Str _20ea32aed_sbtoa(jule::U8);
inline void _20ea32dd9_cstrBytes(_2240a0ad5_StrBuilder*, jule::Str);
inline void _20ea33219_cstrLit(_2240a0ad5_StrBuilder*, jule::Str);
inline void _20ea335b0_ftoa(_2240a0ad5_StrBuilder*, jule::F64, jule::I64);
inline void _20ea3389b_itoa(_2240a0ad5_StrBuilder*, jule::I64);
inline void _20ea33b87_utoa(_2240a0ad5_StrBuilder*, jule::U64);
inline jule::Bool _20ea34061_isForwarded(jule::Ptr<_20d3e369c_Scope>*);
inline jule::Bool _20ea3432a_isExprComesFromBind(jule::Ptr<_20d087165_Data>*);
inline jule::Bool _20ea345e4_isAny(jule::Ptr<_20d4de28c_TypeKind>*);
inline void _20ec077c8_iterFiles(jule::Ptr<_20d417cba_Package>*, jule::Fn<void(jule::Ptr<_20d081e40_SymbolTable>*)>);
inline jule::Str _20ec07ad6_concatAllParts(jule::Slice<jule::Ptr<_20d3510bb_Token>>);
inline jule::Bool _20ec07e5a_containsTraitMethod(jule::Ptr<_20d3b5dde_Trait>*, jule::Str*);
inline void _20ec0828a_pushMethodsFromInherit(jule::Ptr<_20d3b5dde_Trait>*, jule::Ptr<_20d3b5dde_Trait>*);
inline void _20ec08576_pushMethodsFromInherits(jule::Ptr<_20d3b5dde_Trait>*, jule::Ptr<_20d3b5dde_Trait>*);
inline jule::Bool _20ec08840_isOpMethod(jule::Ptr<_20d3a2b45_Fn>*);
inline jule::Bool _20ec08b09_isHeadDecl(jule::Ptr<_20d3a2b45_Fn>*);
inline jule::Ptr<_20d36adb6_Directive> _20ec176c8_findDirective(jule::Slice<jule::Ptr<_20d36adb6_Directive>>*, jule::Str);
inline jule::Bool _20ec17a91_hasDirective(jule::Slice<jule::Ptr<_20d36adb6_Directive>>*, jule::Str);
inline jule::Bool _20ec17d5a_shouldInitialized(jule::Ptr<_20d4de28c_TypeKind>*);
inline void _2273c729e_printErrorMessage(jule::Str);
inline void _2273c7524_help(jule::Slice<jule::Str>*);
inline void _2273c7755_version(jule::Slice<jule::Str>*);
inline void _2273c7953_toolDistos(void);
inline void _2273c7ac9_toolDistarch(void);
inline void _2273c7d0a_tool(jule::Slice<jule::Str>*);
inline void _2273c803b_julenv(jule::Slice<jule::Str>*);
inline void _2273c8349_mod(jule::Slice<jule::Str>*);
inline jule::Bool _2273c8613_processCommand(jule::Slice<jule::Str>*);
inline void _2273c8789_showInfo(void);
void entry_point(void);
inline void _2273c91a2_enableVtp(void);
inline void _2273c936c_init(void);
inline void _20ec85889_init(void);
inline jule::Ptr<_223ddac3e_File> _20ec85b64_openOutput(jule::Str*);
inline void _20ec85cda_clearObjects(void);
inline void _20ec8611a_compileIr(jule::Str, jule::Str);
inline jule::Bool _20ec863d4_isCppSourceFile(jule::Str);
inline void _20ec86615_pushCompCmdClang(_2240a0ad5_StrBuilder*);
inline void _20ec86846_pushCompCmdGcc(_2240a0ad5_StrBuilder*);
inline __jule_tuple_str__jule_tuple_str _20ec86cca_genCompileCmd(jule::Str, jule::Ptr<_20e027be8_IR>*);
inline jule::Str _20ec86ed9_getCompilePath(void);
inline void _20ec8721a_applyTargetIndependentOptimizations(jule::Ptr<_20e027be8_IR>*);
inline void _20ec87391_checkCompilerFlag(void);
inline void _20ec875c2_checkTargetArch(jule::Str);
inline void _20ec87803_checkTargetOs(jule::Str);
inline void _20ec87a34_checkTargetFlag(jule::Str*);
inline void _20ec87c65_checkOptFlag(jule::Str*);
inline void _20ec880ea_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _20ec8835e_checkFlags(jule::Slice<jule::Str>*);
inline void _20ec88590_setupSemaFlags(jule::I64*);
inline jule::Ptr<_20e027be8_IR> _20ec88859_buildIr(jule::Slice<jule::Str>*);
inline void _20ec88a8a_compileCommand(jule::Slice<jule::Str>*);


struct _20d3bbea0_comptimeRangeKindMptrData {
	void(*_20d3bb697_ready)(jule::Trait<_20d3bbea0_comptimeRangeKind>, jule::Ptr<_20d458aca_Var>*, jule::Ptr<_20d458aca_Var>*);
	void(*_20d3bbab5_step)(jule::Trait<_20d3bbea0_comptimeRangeKind>, jule::I64, jule::Ptr<_20d458aca_Var>*, jule::Ptr<_20d458aca_Var>*);
	jule::I64(*_20d3bbd4b_len)(jule::Trait<_20d3bbea0_comptimeRangeKind>);
};

struct _20d411e7e_ImporterMptrData {
	void(*_20d410c5d_SetModPath)(jule::Trait<_20d411e7e_Importer>, jule::Str);
	jule::Str(*_20d410ee4_GetModPath)(jule::Trait<_20d411e7e_Importer>);
	jule::Str(*_20d411335_ModById)(jule::Trait<_20d411e7e_Importer>, jule::I64);
	jule::Ptr<_20d414d94_ImportInfo>(*_20d411676_GetImport)(jule::Trait<_20d411e7e_Importer>, jule::Str);
	__jule_tuple_sx_20d3699ec_Ast__jule_tuple_s_22730be5e_Log(*_20d411a72_ImportPackage)(jule::Trait<_20d411e7e_Importer>, jule::Str, jule::Bool);
	void(*_20d411d2a_Imported)(jule::Trait<_20d411e7e_Importer>, jule::Ptr<_20d414d94_ImportInfo>);
};

struct _20d4ddcd6_KindMptrData {
	jule::Str(*_20d4dd841_Str)(jule::Trait<_20d4ddcd6_Kind>);
	jule::Bool(*_20d4ddb82_Equal)(jule::Trait<_20d4ddcd6_Kind>, jule::Ptr<_20d4de28c_TypeKind>);
};

struct _20d50e06a_LookupMptrData {
	jule::Ptr<_20d414d94_ImportInfo>(*_20d50c354_SelectPackage)(jule::Trait<_20d50e06a_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_20d414d94_ImportInfo>)>);
	jule::Ptr<_20d458aca_Var>(*_20d50c750_FindVar)(jule::Trait<_20d50e06a_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_20d4dd49a_TypeAlias>(*_20d50cb4b_FindTypeAlias)(jule::Trait<_20d50e06a_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_20d38c58b_Struct>(*_20d50d047_FindStruct)(jule::Trait<_20d50e06a_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_20d3a2b45_Fn>(*_20d50d443_FindFn)(jule::Trait<_20d50e06a_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_20d3b5dde_Trait>(*_20d50d784_FindTrait)(jule::Trait<_20d50e06a_Lookup>, jule::Str);
	jule::Ptr<_20d3b85d9_Enum>(*_20d50dac5_FindEnum)(jule::Trait<_20d50e06a_Lookup>, jule::Str);
	jule::Ptr<_20d3b9ce4_TypeEnum>(*_20d50de16_FindTypeEnum)(jule::Trait<_20d50e06a_Lookup>, jule::Str);
};

struct _20ec7d61d_CommonFlagMptrData {
	jule::Str(*_20ec4c07b_Name)(jule::Trait<_20ec7d61d_CommonFlag>);
	jule::I32(*_20ec4c224_Short)(jule::Trait<_20ec7d61d_CommonFlag>);
	jule::Str(*_20ec7d387_What)(jule::Trait<_20ec7d61d_CommonFlag>);
	void(*_20ec7d4ca_Reset)(jule::Trait<_20ec7d61d_CommonFlag>);
};



inline void _20d3bb697_ready_comptimeRangeKind_0(jule::Trait<_20d3bbea0_comptimeRangeKind> _self_, jule::Ptr<_20d458aca_Var>* _1329_keyA, jule::Ptr<_20d458aca_Var>* _1346_keyB) {
	_20d3c04e2_ready(_self_.safe_ptr<_20d3be898_comptimeStructFields>(), _1329_keyA, _1346_keyB);
}
inline void _20d3bbab5_step_comptimeRangeKind_0(jule::Trait<_20d3bbea0_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_20d458aca_Var>* _1436_keyA, jule::Ptr<_20d458aca_Var>* _1453_keyB) {
	_20d3c0910_step(_self_.safe_ptr<_20d3be898_comptimeStructFields>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _20d3bbd4b_len_comptimeRangeKind_0(jule::Trait<_20d3bbea0_comptimeRangeKind> _self_) {
	return _20d3c0b96_len(_self_.safe_ptr<_20d3be898_comptimeStructFields>());
}
inline void _20d3bb697_ready_comptimeRangeKind_1(jule::Trait<_20d3bbea0_comptimeRangeKind> _self_, jule::Ptr<_20d458aca_Var>* _1329_keyA, jule::Ptr<_20d458aca_Var>* _1346_keyB) {
	_20d3c379d_ready(_self_.safe_ptr<_20d3c2b65_comptimeStatics>(), _1329_keyA, _1346_keyB);
}
inline void _20d3bbab5_step_comptimeRangeKind_1(jule::Trait<_20d3bbea0_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_20d458aca_Var>* _1436_keyA, jule::Ptr<_20d458aca_Var>* _1453_keyB) {
	_20d3c3bbb_step(_self_.safe_ptr<_20d3c2b65_comptimeStatics>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _20d3bbd4b_len_comptimeRangeKind_1(jule::Trait<_20d3bbea0_comptimeRangeKind> _self_) {
	return _20d3c3e52_len(_self_.safe_ptr<_20d3c2b65_comptimeStatics>());
}
inline void _20d3bb697_ready_comptimeRangeKind_2(jule::Trait<_20d3bbea0_comptimeRangeKind> _self_, jule::Ptr<_20d458aca_Var>* _1329_keyA, jule::Ptr<_20d458aca_Var>* _1346_keyB) {
	_20d3c6240_ready(_self_.safe_ptr<_20d3c556e_comptimeEnumFields>(), _1329_keyA, _1346_keyB);
}
inline void _20d3bbab5_step_comptimeRangeKind_2(jule::Trait<_20d3bbea0_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_20d458aca_Var>* _1436_keyA, jule::Ptr<_20d458aca_Var>* _1453_keyB) {
	_20d3c665d_step(_self_.safe_ptr<_20d3c556e_comptimeEnumFields>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _20d3bbd4b_len_comptimeRangeKind_2(jule::Trait<_20d3bbea0_comptimeRangeKind> _self_) {
	return _20d3c68e4_len(_self_.safe_ptr<_20d3c556e_comptimeEnumFields>());
}
inline void _20d3bb697_ready_comptimeRangeKind_3(jule::Trait<_20d3bbea0_comptimeRangeKind> _self_, jule::Ptr<_20d458aca_Var>* _1329_keyA, jule::Ptr<_20d458aca_Var>* _1346_keyB) {
	_20d3c9aa1_ready(_self_.safe_ptr<_20d3c8e68_comptimeParams>(), _1329_keyA, _1346_keyB);
}
inline void _20d3bbab5_step_comptimeRangeKind_3(jule::Trait<_20d3bbea0_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_20d458aca_Var>* _1436_keyA, jule::Ptr<_20d458aca_Var>* _1453_keyB) {
	_20d3c9ebe_step(_self_.safe_ptr<_20d3c8e68_comptimeParams>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _20d3bbd4b_len_comptimeRangeKind_3(jule::Trait<_20d3bbea0_comptimeRangeKind> _self_) {
	return _20d3ca255_len(_self_.safe_ptr<_20d3c8e68_comptimeParams>());
}
inline void _20d3bb697_ready_comptimeRangeKind_4(jule::Trait<_20d3bbea0_comptimeRangeKind> _self_, jule::Ptr<_20d458aca_Var>* _1329_keyA, jule::Ptr<_20d458aca_Var>* _1346_keyB) {
	_20d3cb19b_ready(_self_.safe_ptr<_20d3ca563_comptimeTypeInfos>(), _1329_keyA, _1346_keyB);
}
inline void _20d3bbab5_step_comptimeRangeKind_4(jule::Trait<_20d3bbea0_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_20d458aca_Var>* _1436_keyA, jule::Ptr<_20d458aca_Var>* _1453_keyB) {
	_20d3cb5b9_step(_self_.safe_ptr<_20d3ca563_comptimeTypeInfos>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _20d3bbd4b_len_comptimeRangeKind_4(jule::Trait<_20d3bbea0_comptimeRangeKind> _self_) {
	return _20d3cb850_len(_self_.safe_ptr<_20d3ca563_comptimeTypeInfos>());
}
inline void _20d3bb697_ready_comptimeRangeKind_5(jule::Trait<_20d3bbea0_comptimeRangeKind> _self_, jule::Ptr<_20d458aca_Var>* _1329_keyA, jule::Ptr<_20d458aca_Var>* _1346_keyB) {
	_20d3d6607_ready(_self_.safe_ptr<_20d3d59be_comptimeFiles>(), _1329_keyA, _1346_keyB);
}
inline void _20d3bbab5_step_comptimeRangeKind_5(jule::Trait<_20d3bbea0_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_20d458aca_Var>* _1436_keyA, jule::Ptr<_20d458aca_Var>* _1453_keyB) {
	_20d3d6a25_step(_self_.safe_ptr<_20d3d59be_comptimeFiles>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _20d3bbd4b_len_comptimeRangeKind_5(jule::Trait<_20d3bbea0_comptimeRangeKind> _self_) {
	return _20d3d6cab_len(_self_.safe_ptr<_20d3d59be_comptimeFiles>());
}
inline void _20d410c5d_SetModPath_Importer_0(jule::Trait<_20d411e7e_Importer> _self_, jule::Str _1729_path) {
	_20e025d06_SetModPath(_self_.safe_ptr<_20e025234_JuleImporter>(), _1729_path);
}
inline jule::Str _20d410ee4_GetModPath_Importer_0(jule::Trait<_20d411e7e_Importer> _self_) {
	return _20e02608c_GetModPath(_self_.safe_ptr<_20e025234_JuleImporter>());
}
inline jule::Str _20d411335_ModById_Importer_0(jule::Trait<_20d411e7e_Importer> _self_, jule::I64 _2522_id) {
	return _20e0263cd_ModById(_self_.safe_ptr<_20e025234_JuleImporter>(), _2522_id);
}
inline jule::Ptr<_20d414d94_ImportInfo> _20d411676_GetImport_Importer_0(jule::Trait<_20d411e7e_Importer> _self_, jule::Str _3128_path) {
	return _20e02671e_GetImport(_self_.safe_ptr<_20e025234_JuleImporter>(), _3128_path);
}
inline __jule_tuple_sx_20d3699ec_Ast__jule_tuple_s_22730be5e_Log _20d411a72_ImportPackage_Importer_0(jule::Trait<_20d411e7e_Importer> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _20e026b1a_ImportPackage(_self_.safe_ptr<_20e025234_JuleImporter>(), _3732_path, _3743_update_mod);
}
inline void _20d411d2a_Imported_Importer_0(jule::Trait<_20d411e7e_Importer> _self_, jule::Ptr<_20d414d94_ImportInfo> _4131__0) {
	_20e026dc3_Imported(_self_.safe_ptr<_20e025234_JuleImporter>(), _4131__0);
}
inline jule::Str _20d4dd841_Str_Kind_0(jule::Trait<_20d4ddcd6_Kind> _self_) {
	return _20d3909e0_Str(_self_.safe_ptr<_20d39066b_StructIns>());
}
inline jule::Bool _20d4ddb82_Equal_Kind_0(jule::Trait<_20d4ddcd6_Kind> _self_, jule::Ptr<_20d4de28c_TypeKind> _5621_other) {
	return _20d390d31_Equal(_self_.data.as<_20d39066b_StructIns>(), _5621_other);
}
inline jule::Str _20d4dd841_Str_Kind_1(jule::Trait<_20d4ddcd6_Kind> _self_) {
	return _20d3a5d8a_Str(_self_.safe_ptr<_20d3a5a49_FnIns>());
}
inline jule::Bool _20d4ddb82_Equal_Kind_1(jule::Trait<_20d4ddcd6_Kind> _self_, jule::Ptr<_20d4de28c_TypeKind> _5621_other) {
	return _20d3a61cb_Equal(_self_.data.as<_20d3a5a49_FnIns>(), _5621_other);
}
inline jule::Str _20d4dd841_Str_Kind_2(jule::Trait<_20d4ddcd6_Kind> _self_) {
	return _20d3b62a7_Str(_self_.safe_ptr<_20d3b5dde_Trait>());
}
inline jule::Bool _20d4ddb82_Equal_Kind_2(jule::Trait<_20d4ddcd6_Kind> _self_, jule::Ptr<_20d4de28c_TypeKind> _5621_other) {
	return _20d3b65e8_Equal(_self_.data.as<_20d3b5dde_Trait>(), _5621_other);
}
inline jule::Str _20d4dd841_Str_Kind_3(jule::Trait<_20d4ddcd6_Kind> _self_) {
	return _20d3b895d_Str(_self_.safe_ptr<_20d3b85d9_Enum>());
}
inline jule::Bool _20d4ddb82_Equal_Kind_3(jule::Trait<_20d4ddcd6_Kind> _self_, jule::Ptr<_20d4de28c_TypeKind> _5621_other) {
	return _20d3b8c9e_Equal(_self_.data.as<_20d3b85d9_Enum>(), _5621_other);
}
inline jule::Str _20d4dd841_Str_Kind_4(jule::Trait<_20d4ddcd6_Kind> _self_) {
	return _20d3ba135_Str(_self_.safe_ptr<_20d3b9ce4_TypeEnum>());
}
inline jule::Bool _20d4ddb82_Equal_Kind_4(jule::Trait<_20d4ddcd6_Kind> _self_, jule::Ptr<_20d4de28c_TypeKind> _5621_other) {
	return _20d3ba476_Equal(_self_.data.as<_20d3b9ce4_TypeEnum>(), _5621_other);
}
inline jule::Str _20d4dd841_Str_Kind_5(jule::Trait<_20d4ddcd6_Kind> _self_) {
	return _20d3bc555_Str(_self_.safe_ptr<_20d3bc18c_comptimeRange>());
}
inline jule::Bool _20d4ddb82_Equal_Kind_5(jule::Trait<_20d4ddcd6_Kind> _self_, jule::Ptr<_20d4de28c_TypeKind> _5621_other) {
	return _20d3bc896_Equal(_self_.data.as<_20d3bc18c_comptimeRange>(), _5621_other);
}
inline jule::Str _20d4dd841_Str_Kind_6(jule::Trait<_20d4ddcd6_Kind> _self_) {
	return _20d3bd06c_Str(_self_.safe_ptr<_20d3bcbe8_comptimeStructField>());
}
inline jule::Bool _20d4ddb82_Equal_Kind_6(jule::Trait<_20d4ddcd6_Kind> _self_, jule::Ptr<_20d4de28c_TypeKind> _5621_other) {
	return _20d3bd3ad_Equal(_self_.data.as<_20d3bcbe8_comptimeStructField>(), _5621_other);
}
inline jule::Str _20d4dd841_Str_Kind_7(jule::Trait<_20d4ddcd6_Kind> _self_) {
	return _20d3bec2d_Str(_self_.safe_ptr<_20d3be898_comptimeStructFields>());
}
inline jule::Bool _20d4ddb82_Equal_Kind_7(jule::Trait<_20d4ddcd6_Kind> _self_, jule::Ptr<_20d4de28c_TypeKind> _5621_other) {
	return _20d3c006e_Equal(_self_.data.as<_20d3be898_comptimeStructFields>(), _5621_other);
}
inline jule::Str _20d4dd841_Str_Kind_8(jule::Trait<_20d4ddcd6_Kind> _self_) {
	return _20d3c1328_Str(_self_.safe_ptr<_20d3c0ea4_comptimeStatic>());
}
inline jule::Bool _20d4ddb82_Equal_Kind_8(jule::Trait<_20d4ddcd6_Kind> _self_, jule::Ptr<_20d4de28c_TypeKind> _5621_other) {
	return _20d3c1669_Equal(_self_.data.as<_20d3c0ea4_comptimeStatic>(), _5621_other);
}
inline jule::Str _20d4dd841_Str_Kind_9(jule::Trait<_20d4ddcd6_Kind> _self_) {
	return _20d3c2ed9_Str(_self_.safe_ptr<_20d3c2b65_comptimeStatics>());
}
inline jule::Bool _20d4ddb82_Equal_Kind_9(jule::Trait<_20d4ddcd6_Kind> _self_, jule::Ptr<_20d4de28c_TypeKind> _5621_other) {
	return _20d3c332a_Equal(_self_.data.as<_20d3c2b65_comptimeStatics>(), _5621_other);
}
inline jule::Str _20d4dd841_Str_Kind_10(jule::Trait<_20d4ddcd6_Kind> _self_) {
	return _20d3c45d4_Str(_self_.safe_ptr<_20d3c4260_comptimeEnumField>());
}
inline jule::Bool _20d4ddb82_Equal_Kind_10(jule::Trait<_20d4ddcd6_Kind> _self_, jule::Ptr<_20d4de28c_TypeKind> _5621_other) {
	return _20d3c4925_Equal(_self_.data.as<_20d3c4260_comptimeEnumField>(), _5621_other);
}
inline jule::Str _20d4dd841_Str_Kind_11(jule::Trait<_20d4ddcd6_Kind> _self_) {
	return _20d3c5a03_Str(_self_.safe_ptr<_20d3c556e_comptimeEnumFields>());
}
inline jule::Bool _20d4ddb82_Equal_Kind_11(jule::Trait<_20d4ddcd6_Kind> _self_, jule::Ptr<_20d4de28c_TypeKind> _5621_other) {
	return _20d3c5d44_Equal(_self_.data.as<_20d3c556e_comptimeEnumFields>(), _5621_other);
}
inline jule::Str _20d4dd841_Str_Kind_12(jule::Trait<_20d4ddcd6_Kind> _self_) {
	return _20d3c7076_Str(_self_.safe_ptr<_20d3c6c02_comptimeParam>());
}
inline jule::Bool _20d4ddb82_Equal_Kind_12(jule::Trait<_20d4ddcd6_Kind> _self_, jule::Ptr<_20d4de28c_TypeKind> _5621_other) {
	return _20d3c73b7_Equal(_self_.data.as<_20d3c6c02_comptimeParam>(), _5621_other);
}
inline jule::Str _20d4dd841_Str_Kind_13(jule::Trait<_20d4ddcd6_Kind> _self_) {
	return _20d3c92dc_Str(_self_.safe_ptr<_20d3c8e68_comptimeParams>());
}
inline jule::Bool _20d4ddb82_Equal_Kind_13(jule::Trait<_20d4ddcd6_Kind> _self_, jule::Ptr<_20d4de28c_TypeKind> _5621_other) {
	return _20d3c962d_Equal(_self_.data.as<_20d3c8e68_comptimeParams>(), _5621_other);
}
inline jule::Str _20d4dd841_Str_Kind_14(jule::Trait<_20d4ddcd6_Kind> _self_) {
	return _20d3ca8d7_Str(_self_.safe_ptr<_20d3ca563_comptimeTypeInfos>());
}
inline jule::Bool _20d4ddb82_Equal_Kind_14(jule::Trait<_20d4ddcd6_Kind> _self_, jule::Ptr<_20d4de28c_TypeKind> _5621_other) {
	return _20d3cac28_Equal(_self_.data.as<_20d3ca563_comptimeTypeInfos>(), _5621_other);
}
inline jule::Str _20d4dd841_Str_Kind_15(jule::Trait<_20d4ddcd6_Kind> _self_) {
	return _20d3cbed2_Str(_self_.safe_ptr<_20d3cbb5d_comptimeTypeInfo>());
}
inline jule::Bool _20d4ddb82_Equal_Kind_15(jule::Trait<_20d4ddcd6_Kind> _self_, jule::Ptr<_20d4de28c_TypeKind> _5621_other) {
	return _20d3cc323_Equal(_self_.data.as<_20d3cbb5d_comptimeTypeInfo>(), _5621_other);
}
inline jule::Str _20d4dd841_Str_Kind_16(jule::Trait<_20d4ddcd6_Kind> _self_) {
	return _20d3d34e4_Str(_self_.safe_ptr<_20d3d3170_comptimeValue>());
}
inline jule::Bool _20d4ddb82_Equal_Kind_16(jule::Trait<_20d4ddcd6_Kind> _self_, jule::Ptr<_20d4de28c_TypeKind> _5621_other) {
	return _20d3d3835_Equal(_self_.data.as<_20d3d3170_comptimeValue>(), _5621_other);
}
inline jule::Str _20d4dd841_Str_Kind_17(jule::Trait<_20d4ddcd6_Kind> _self_) {
	return _20d3d5d43_Str(_self_.safe_ptr<_20d3d59be_comptimeFiles>());
}
inline jule::Bool _20d4ddb82_Equal_Kind_17(jule::Trait<_20d4ddcd6_Kind> _self_, jule::Ptr<_20d4de28c_TypeKind> _5621_other) {
	return _20d3d6184_Equal(_self_.data.as<_20d3d59be_comptimeFiles>(), _5621_other);
}
inline jule::Str _20d4dd841_Str_Kind_18(jule::Trait<_20d4ddcd6_Kind> _self_) {
	return _20d3d743d_Str(_self_.safe_ptr<_20d3d70b9_comptimeFile>());
}
inline jule::Bool _20d4ddb82_Equal_Kind_18(jule::Trait<_20d4ddcd6_Kind> _self_, jule::Ptr<_20d4de28c_TypeKind> _5621_other) {
	return _20d3d777e_Equal(_self_.data.as<_20d3d70b9_comptimeFile>(), _5621_other);
}
inline jule::Str _20d4dd841_Str_Kind_19(jule::Trait<_20d4ddcd6_Kind> _self_) {
	return _20d4de655_Str(_self_.safe_ptr<_20d4de28c_TypeKind>());
}
inline jule::Bool _20d4ddb82_Equal_Kind_19(jule::Trait<_20d4ddcd6_Kind> _self_, jule::Ptr<_20d4de28c_TypeKind> _5621_other) {
	return _20d4de996_Equal(_self_.data.as<_20d4de28c_TypeKind>(), _5621_other);
}
inline jule::Str _20d4dd841_Str_Kind_20(jule::Trait<_20d4ddcd6_Kind> _self_) {
	return _20d4e744e_Str(_self_.safe_ptr<_20d4e710d_Prim>());
}
inline jule::Bool _20d4ddb82_Equal_Kind_20(jule::Trait<_20d4ddcd6_Kind> _self_, jule::Ptr<_20d4de28c_TypeKind> _5621_other) {
	return _20d4e7790_Equal(_self_.data.as<_20d4e710d_Prim>(), _5621_other);
}
inline jule::Str _20d4dd841_Str_Kind_21(jule::Trait<_20d4ddcd6_Kind> _self_) {
	return _20d4eaead_Str(_self_.safe_ptr<_20d4eab39_Sptr>());
}
inline jule::Bool _20d4ddb82_Equal_Kind_21(jule::Trait<_20d4ddcd6_Kind> _self_, jule::Ptr<_20d4de28c_TypeKind> _5621_other) {
	return _20d4eb2ee_Equal(_self_.data.as<_20d4eab39_Sptr>(), _5621_other);
}
inline jule::Str _20d4dd841_Str_Kind_22(jule::Trait<_20d4ddcd6_Kind> _self_) {
	return _20d4eba91_Str(_self_.safe_ptr<_20d4eb60c_Slc>());
}
inline jule::Bool _20d4ddb82_Equal_Kind_22(jule::Trait<_20d4ddcd6_Kind> _self_, jule::Ptr<_20d4de28c_TypeKind> _5621_other) {
	return _20d4ebdd2_Equal(_self_.data.as<_20d4eb60c_Slc>(), _5621_other);
}
inline jule::Str _20d4dd841_Str_Kind_23(jule::Trait<_20d4ddcd6_Kind> _self_) {
	return _20d4ec575_Str(_self_.safe_ptr<_20d4ec201_Tuple>());
}
inline jule::Bool _20d4ddb82_Equal_Kind_23(jule::Trait<_20d4ddcd6_Kind> _self_, jule::Ptr<_20d4de28c_TypeKind> _5621_other) {
	return _20d4ec8b6_Equal(_self_.data.as<_20d4ec201_Tuple>(), _5621_other);
}
inline jule::Str _20d4dd841_Str_Kind_24(jule::Trait<_20d4ddcd6_Kind> _self_) {
	return _20d4ed125_Str(_self_.safe_ptr<_20d4ecca1_Map>());
}
inline jule::Bool _20d4ddb82_Equal_Kind_24(jule::Trait<_20d4ddcd6_Kind> _self_, jule::Ptr<_20d4de28c_TypeKind> _5621_other) {
	return _20d4ed466_Equal(_self_.data.as<_20d4ecca1_Map>(), _5621_other);
}
inline jule::Str _20d4dd841_Str_Kind_25(jule::Trait<_20d4ddcd6_Kind> _self_) {
	return _20d4edca2_Str(_self_.safe_ptr<_20d4ed92d_Arr>());
}
inline jule::Bool _20d4ddb82_Equal_Kind_25(jule::Trait<_20d4ddcd6_Kind> _self_, jule::Ptr<_20d4de28c_TypeKind> _5621_other) {
	return _20d4ee0e3_Equal(_self_.data.as<_20d4ed92d_Arr>(), _5621_other);
}
inline jule::Str _20d4dd841_Str_Kind_26(jule::Trait<_20d4ddcd6_Kind> _self_) {
	return _20d4ee775_Str(_self_.safe_ptr<_20d4ee401_Ptr>());
}
inline jule::Bool _20d4ddb82_Equal_Kind_26(jule::Trait<_20d4ddcd6_Kind> _self_, jule::Ptr<_20d4de28c_TypeKind> _5621_other) {
	return _20d4eeab6_Equal(_self_.data.as<_20d4ee401_Ptr>(), _5621_other);
}
inline jule::Str _20d4dd841_Str_Kind_27(jule::Trait<_20d4ddcd6_Kind> _self_) {
	return _20ec09d80_Str(_self_.safe_ptr<_20ec099ea_customType>());
}
inline jule::Bool _20d4ddb82_Equal_Kind_27(jule::Trait<_20d4ddcd6_Kind> _self_, jule::Ptr<_20d4de28c_TypeKind> _5621_other) {
	return _20ec0a1c1_Equal(_self_.data.as<_20ec099ea_customType>(), _5621_other);
}
inline jule::Ptr<_20d414d94_ImportInfo> _20d50c354_SelectPackage_Lookup_0(jule::Trait<_20d50e06a_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_20d414d94_ImportInfo>)> _932_selector) {
	return _20d3eae46_SelectPackage(_self_.safe_ptr<_20d3ea9a1_scopeChecker>(), _932_selector);
}
inline jule::Ptr<_20d458aca_Var> _20d50c750_FindVar_Lookup_0(jule::Trait<_20d50e06a_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _20d3eb342_FindVar(_self_.safe_ptr<_20d3ea9a1_scopeChecker>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_20d4dd49a_TypeAlias> _20d50cb4b_FindTypeAlias_Lookup_0(jule::Trait<_20d50e06a_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _20d3eb73d_FindTypeAlias(_self_.safe_ptr<_20d3ea9a1_scopeChecker>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_20d38c58b_Struct> _20d50d047_FindStruct_Lookup_0(jule::Trait<_20d50e06a_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _20d3ebb39_FindStruct(_self_.safe_ptr<_20d3ea9a1_scopeChecker>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_20d3a2b45_Fn> _20d50d443_FindFn_Lookup_0(jule::Trait<_20d50e06a_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _20d3ec035_FindFn(_self_.safe_ptr<_20d3ea9a1_scopeChecker>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_20d3b5dde_Trait> _20d50d784_FindTrait_Lookup_0(jule::Trait<_20d50e06a_Lookup> _self_, jule::Str _2928_ident) {
	return _20d3ec376_FindTrait(_self_.safe_ptr<_20d3ea9a1_scopeChecker>(), _2928_ident);
}
inline jule::Ptr<_20d3b85d9_Enum> _20d50dac5_FindEnum_Lookup_0(jule::Trait<_20d50e06a_Lookup> _self_, jule::Str _3327_ident) {
	return _20d3ec6b7_FindEnum(_self_.safe_ptr<_20d3ea9a1_scopeChecker>(), _3327_ident);
}
inline jule::Ptr<_20d3b9ce4_TypeEnum> _20d50de16_FindTypeEnum_Lookup_0(jule::Trait<_20d50e06a_Lookup> _self_, jule::Str _3731_ident) {
	return _20d3eca08_FindTypeEnum(_self_.safe_ptr<_20d3ea9a1_scopeChecker>(), _3731_ident);
}
inline jule::Ptr<_20d414d94_ImportInfo> _20d50c354_SelectPackage_Lookup_1(jule::Trait<_20d50e06a_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_20d414d94_ImportInfo>)> _932_selector) {
	return _20d41537d_SelectPackage(_self_.safe_ptr<_20d414d94_ImportInfo>(), _932_selector);
}
inline jule::Ptr<_20d458aca_Var> _20d50c750_FindVar_Lookup_1(jule::Trait<_20d50e06a_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _20d415779_FindVar(_self_.safe_ptr<_20d414d94_ImportInfo>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_20d4dd49a_TypeAlias> _20d50cb4b_FindTypeAlias_Lookup_1(jule::Trait<_20d50e06a_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _20d415b75_FindTypeAlias(_self_.safe_ptr<_20d414d94_ImportInfo>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_20d38c58b_Struct> _20d50d047_FindStruct_Lookup_1(jule::Trait<_20d50e06a_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _20d416071_FindStruct(_self_.safe_ptr<_20d414d94_ImportInfo>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_20d3a2b45_Fn> _20d50d443_FindFn_Lookup_1(jule::Trait<_20d50e06a_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _20d41646c_FindFn(_self_.safe_ptr<_20d414d94_ImportInfo>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_20d3b5dde_Trait> _20d50d784_FindTrait_Lookup_1(jule::Trait<_20d50e06a_Lookup> _self_, jule::Str _2928_ident) {
	return _20d4167ad_FindTrait(_self_.safe_ptr<_20d414d94_ImportInfo>(), _2928_ident);
}
inline jule::Ptr<_20d3b85d9_Enum> _20d50dac5_FindEnum_Lookup_1(jule::Trait<_20d50e06a_Lookup> _self_, jule::Str _3327_ident) {
	return _20d416aee_FindEnum(_self_.safe_ptr<_20d414d94_ImportInfo>(), _3327_ident);
}
inline jule::Ptr<_20d3b9ce4_TypeEnum> _20d50de16_FindTypeEnum_Lookup_1(jule::Trait<_20d50e06a_Lookup> _self_, jule::Str _3731_ident) {
	return _20d416e40_FindTypeEnum(_self_.safe_ptr<_20d414d94_ImportInfo>(), _3731_ident);
}
inline jule::Ptr<_20d414d94_ImportInfo> _20d50c354_SelectPackage_Lookup_2(jule::Trait<_20d50e06a_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_20d414d94_ImportInfo>)> _932_selector) {
	return _20d418260_SelectPackage(_self_.safe_ptr<_20d417cba_Package>(), _932_selector);
}
inline jule::Ptr<_20d458aca_Var> _20d50c750_FindVar_Lookup_2(jule::Trait<_20d50e06a_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _20d41865b_FindVar(_self_.safe_ptr<_20d417cba_Package>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_20d4dd49a_TypeAlias> _20d50cb4b_FindTypeAlias_Lookup_2(jule::Trait<_20d50e06a_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _20d418a57_FindTypeAlias(_self_.safe_ptr<_20d417cba_Package>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_20d38c58b_Struct> _20d50d047_FindStruct_Lookup_2(jule::Trait<_20d50e06a_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _20d418e53_FindStruct(_self_.safe_ptr<_20d417cba_Package>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_20d3a2b45_Fn> _20d50d443_FindFn_Lookup_2(jule::Trait<_20d50e06a_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _20d41934e_FindFn(_self_.safe_ptr<_20d417cba_Package>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_20d3b5dde_Trait> _20d50d784_FindTrait_Lookup_2(jule::Trait<_20d50e06a_Lookup> _self_, jule::Str _2928_ident) {
	return _20d419690_FindTrait(_self_.safe_ptr<_20d417cba_Package>(), _2928_ident);
}
inline jule::Ptr<_20d3b85d9_Enum> _20d50dac5_FindEnum_Lookup_2(jule::Trait<_20d50e06a_Lookup> _self_, jule::Str _3327_ident) {
	return _20d4199d1_FindEnum(_self_.safe_ptr<_20d417cba_Package>(), _3327_ident);
}
inline jule::Ptr<_20d3b9ce4_TypeEnum> _20d50de16_FindTypeEnum_Lookup_2(jule::Trait<_20d50e06a_Lookup> _self_, jule::Str _3731_ident) {
	return _20d419d22_FindTypeEnum(_self_.safe_ptr<_20d417cba_Package>(), _3731_ident);
}
inline jule::Ptr<_20d414d94_ImportInfo> _20d50c354_SelectPackage_Lookup_3(jule::Trait<_20d50e06a_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_20d414d94_ImportInfo>)> _932_selector) {
	return _20d43638d_SelectPackage(_self_.safe_ptr<_20d435de8_Sema>(), _932_selector);
}
inline jule::Ptr<_20d458aca_Var> _20d50c750_FindVar_Lookup_3(jule::Trait<_20d50e06a_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _20d436789_FindVar(_self_.safe_ptr<_20d435de8_Sema>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_20d4dd49a_TypeAlias> _20d50cb4b_FindTypeAlias_Lookup_3(jule::Trait<_20d50e06a_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _20d436b85_FindTypeAlias(_self_.safe_ptr<_20d435de8_Sema>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_20d38c58b_Struct> _20d50d047_FindStruct_Lookup_3(jule::Trait<_20d50e06a_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _20d437081_FindStruct(_self_.safe_ptr<_20d435de8_Sema>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_20d3a2b45_Fn> _20d50d443_FindFn_Lookup_3(jule::Trait<_20d50e06a_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _20d43747c_FindFn(_self_.safe_ptr<_20d435de8_Sema>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_20d3b5dde_Trait> _20d50d784_FindTrait_Lookup_3(jule::Trait<_20d50e06a_Lookup> _self_, jule::Str _2928_ident) {
	return _20d4377bd_FindTrait(_self_.safe_ptr<_20d435de8_Sema>(), _2928_ident);
}
inline jule::Ptr<_20d3b85d9_Enum> _20d50dac5_FindEnum_Lookup_3(jule::Trait<_20d50e06a_Lookup> _self_, jule::Str _3327_ident) {
	return _20d437b0e_FindEnum(_self_.safe_ptr<_20d435de8_Sema>(), _3327_ident);
}
inline jule::Ptr<_20d3b9ce4_TypeEnum> _20d50de16_FindTypeEnum_Lookup_3(jule::Trait<_20d50e06a_Lookup> _self_, jule::Str _3731_ident) {
	return _20d437e50_FindTypeEnum(_self_.safe_ptr<_20d435de8_Sema>(), _3731_ident);
}
inline jule::Ptr<_20d414d94_ImportInfo> _20d50c354_SelectPackage_Lookup_4(jule::Trait<_20d50e06a_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_20d414d94_ImportInfo>)> _932_selector) {
	return _20d082429_SelectPackage(_self_.safe_ptr<_20d081e40_SymbolTable>(), _932_selector);
}
inline jule::Ptr<_20d458aca_Var> _20d50c750_FindVar_Lookup_4(jule::Trait<_20d50e06a_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _20d082825_FindVar(_self_.safe_ptr<_20d081e40_SymbolTable>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_20d4dd49a_TypeAlias> _20d50cb4b_FindTypeAlias_Lookup_4(jule::Trait<_20d50e06a_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _20d082c21_FindTypeAlias(_self_.safe_ptr<_20d081e40_SymbolTable>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_20d38c58b_Struct> _20d50d047_FindStruct_Lookup_4(jule::Trait<_20d50e06a_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _20d08311c_FindStruct(_self_.safe_ptr<_20d081e40_SymbolTable>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_20d3a2b45_Fn> _20d50d443_FindFn_Lookup_4(jule::Trait<_20d50e06a_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _20d083518_FindFn(_self_.safe_ptr<_20d081e40_SymbolTable>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_20d3b5dde_Trait> _20d50d784_FindTrait_Lookup_4(jule::Trait<_20d50e06a_Lookup> _self_, jule::Str _2928_ident) {
	return _20d083859_FindTrait(_self_.safe_ptr<_20d081e40_SymbolTable>(), _2928_ident);
}
inline jule::Ptr<_20d3b85d9_Enum> _20d50dac5_FindEnum_Lookup_4(jule::Trait<_20d50e06a_Lookup> _self_, jule::Str _3327_ident) {
	return _20d083b9a_FindEnum(_self_.safe_ptr<_20d081e40_SymbolTable>(), _3327_ident);
}
inline jule::Ptr<_20d3b9ce4_TypeEnum> _20d50de16_FindTypeEnum_Lookup_4(jule::Trait<_20d50e06a_Lookup> _self_, jule::Str _3731_ident) {
	return _20d083edb_FindTypeEnum(_self_.safe_ptr<_20d081e40_SymbolTable>(), _3731_ident);
}
inline jule::Str _20ec4c07b_Name_CommonFlag_0(jule::Trait<_20ec7d61d_CommonFlag> _self_) {
	return _224971e45_Name(_self_.safe_ptr<_2249720ee_Flag>());
}
inline jule::I32 _20ec4c224_Short_CommonFlag_0(jule::Trait<_20ec7d61d_CommonFlag> _self_) {
	return _224972671_Short(_self_.safe_ptr<_2249720ee_Flag>());
}
inline jule::Str _20ec7d387_What_CommonFlag_0(jule::Trait<_20ec7d61d_CommonFlag> _self_) {
	return _2249723da_What(_self_.safe_ptr<_2249720ee_Flag>());
}
inline void _20ec7d4ca_Reset_CommonFlag_0(jule::Trait<_20ec7d61d_CommonFlag> _self_) {
	_22497252d_Reset(_self_.safe_ptr<_2249720ee_Flag>());
}
inline jule::Str _20ec4c07b_Name_CommonFlag_1(jule::Trait<_20ec7d61d_CommonFlag> _self_) {
	return _224975597_Name(_self_.safe_ptr<_224975960_Flag>());
}
inline jule::I32 _20ec4c224_Short_CommonFlag_1(jule::Trait<_20ec7d61d_CommonFlag> _self_) {
	return _224975d8e_Short(_self_.safe_ptr<_224975960_Flag>());
}
inline jule::Str _20ec7d387_What_CommonFlag_1(jule::Trait<_20ec7d61d_CommonFlag> _self_) {
	return _2249756da_What(_self_.safe_ptr<_224975960_Flag>());
}
inline void _20ec7d4ca_Reset_CommonFlag_1(jule::Trait<_20ec7d61d_CommonFlag> _self_) {
	_224975c4b_Reset(_self_.safe_ptr<_224975960_Flag>());
}
inline jule::Str _20ec4c07b_Name_CommonFlag_2(jule::Trait<_20ec7d61d_CommonFlag> _self_) {
	return _224978c93_Name(_self_.safe_ptr<_22497915b_Flag>());
}
inline jule::I32 _20ec4c224_Short_CommonFlag_2(jule::Trait<_20ec7d61d_CommonFlag> _self_) {
	return _22497958a_Short(_self_.safe_ptr<_22497915b_Flag>());
}
inline jule::Str _20ec7d387_What_CommonFlag_2(jule::Trait<_20ec7d61d_CommonFlag> _self_) {
	return _224978dd6_What(_self_.safe_ptr<_22497915b_Flag>());
}
inline void _20ec7d4ca_Reset_CommonFlag_2(jule::Trait<_20ec7d61d_CommonFlag> _self_) {
	_224979447_Reset(_self_.safe_ptr<_22497915b_Flag>());
}
inline jule::Str _20ec4c07b_Name_CommonFlag_3(jule::Trait<_20ec7d61d_CommonFlag> _self_) {
	return _22497c4d3_Name(_self_.safe_ptr<_22497c89b_Flag>());
}
inline jule::I32 _20ec4c224_Short_CommonFlag_3(jule::Trait<_20ec7d61d_CommonFlag> _self_) {
	return _22497ccca_Short(_self_.safe_ptr<_22497c89b_Flag>());
}
inline jule::Str _20ec7d387_What_CommonFlag_3(jule::Trait<_20ec7d61d_CommonFlag> _self_) {
	return _22497c626_What(_self_.safe_ptr<_22497c89b_Flag>());
}
inline void _20ec7d4ca_Reset_CommonFlag_3(jule::Trait<_20ec7d61d_CommonFlag> _self_) {
	_22497cb87_Reset(_self_.safe_ptr<_22497c89b_Flag>());
}
inline jule::Str _20ec4c07b_Name_CommonFlag_4(jule::Trait<_20ec7d61d_CommonFlag> _self_) {
	return _224980bce_Name(_self_.safe_ptr<_224981097_Flag>());
}
inline jule::I32 _20ec4c224_Short_CommonFlag_4(jule::Trait<_20ec7d61d_CommonFlag> _self_) {
	return _2249814c6_Short(_self_.safe_ptr<_224981097_Flag>());
}
inline jule::Str _20ec7d387_What_CommonFlag_4(jule::Trait<_20ec7d61d_CommonFlag> _self_) {
	return _224980d22_What(_self_.safe_ptr<_224981097_Flag>());
}
inline void _20ec7d4ca_Reset_CommonFlag_4(jule::Trait<_20ec7d61d_CommonFlag> _self_) {
	_224981383_Reset(_self_.safe_ptr<_224981097_Flag>());
}


static _20d3bbea0_comptimeRangeKindMptrData _20d3bbea0_comptimeRangeKind_mptr_data[] = {
	{
		._20d3bb697_ready=_20d3bb697_ready_comptimeRangeKind_0,
		._20d3bbab5_step=_20d3bbab5_step_comptimeRangeKind_0,
		._20d3bbd4b_len=_20d3bbd4b_len_comptimeRangeKind_0,
	},
	{
		._20d3bb697_ready=_20d3bb697_ready_comptimeRangeKind_1,
		._20d3bbab5_step=_20d3bbab5_step_comptimeRangeKind_1,
		._20d3bbd4b_len=_20d3bbd4b_len_comptimeRangeKind_1,
	},
	{
		._20d3bb697_ready=_20d3bb697_ready_comptimeRangeKind_2,
		._20d3bbab5_step=_20d3bbab5_step_comptimeRangeKind_2,
		._20d3bbd4b_len=_20d3bbd4b_len_comptimeRangeKind_2,
	},
	{
		._20d3bb697_ready=_20d3bb697_ready_comptimeRangeKind_3,
		._20d3bbab5_step=_20d3bbab5_step_comptimeRangeKind_3,
		._20d3bbd4b_len=_20d3bbd4b_len_comptimeRangeKind_3,
	},
	{
		._20d3bb697_ready=_20d3bb697_ready_comptimeRangeKind_4,
		._20d3bbab5_step=_20d3bbab5_step_comptimeRangeKind_4,
		._20d3bbd4b_len=_20d3bbd4b_len_comptimeRangeKind_4,
	},
	{
		._20d3bb697_ready=_20d3bb697_ready_comptimeRangeKind_5,
		._20d3bbab5_step=_20d3bbab5_step_comptimeRangeKind_5,
		._20d3bbd4b_len=_20d3bbd4b_len_comptimeRangeKind_5,
	},
};
static _20d411e7e_ImporterMptrData _20d411e7e_Importer_mptr_data[] = {
	{
		._20d410c5d_SetModPath=_20d410c5d_SetModPath_Importer_0,
		._20d410ee4_GetModPath=_20d410ee4_GetModPath_Importer_0,
		._20d411335_ModById=_20d411335_ModById_Importer_0,
		._20d411676_GetImport=_20d411676_GetImport_Importer_0,
		._20d411a72_ImportPackage=_20d411a72_ImportPackage_Importer_0,
		._20d411d2a_Imported=_20d411d2a_Imported_Importer_0,
	},
};
static _20d4ddcd6_KindMptrData _20d4ddcd6_Kind_mptr_data[] = {
	{
		._20d4dd841_Str=_20d4dd841_Str_Kind_0,
		._20d4ddb82_Equal=_20d4ddb82_Equal_Kind_0,
	},
	{
		._20d4dd841_Str=_20d4dd841_Str_Kind_1,
		._20d4ddb82_Equal=_20d4ddb82_Equal_Kind_1,
	},
	{
		._20d4dd841_Str=_20d4dd841_Str_Kind_2,
		._20d4ddb82_Equal=_20d4ddb82_Equal_Kind_2,
	},
	{
		._20d4dd841_Str=_20d4dd841_Str_Kind_3,
		._20d4ddb82_Equal=_20d4ddb82_Equal_Kind_3,
	},
	{
		._20d4dd841_Str=_20d4dd841_Str_Kind_4,
		._20d4ddb82_Equal=_20d4ddb82_Equal_Kind_4,
	},
	{
		._20d4dd841_Str=_20d4dd841_Str_Kind_5,
		._20d4ddb82_Equal=_20d4ddb82_Equal_Kind_5,
	},
	{
		._20d4dd841_Str=_20d4dd841_Str_Kind_6,
		._20d4ddb82_Equal=_20d4ddb82_Equal_Kind_6,
	},
	{
		._20d4dd841_Str=_20d4dd841_Str_Kind_7,
		._20d4ddb82_Equal=_20d4ddb82_Equal_Kind_7,
	},
	{
		._20d4dd841_Str=_20d4dd841_Str_Kind_8,
		._20d4ddb82_Equal=_20d4ddb82_Equal_Kind_8,
	},
	{
		._20d4dd841_Str=_20d4dd841_Str_Kind_9,
		._20d4ddb82_Equal=_20d4ddb82_Equal_Kind_9,
	},
	{
		._20d4dd841_Str=_20d4dd841_Str_Kind_10,
		._20d4ddb82_Equal=_20d4ddb82_Equal_Kind_10,
	},
	{
		._20d4dd841_Str=_20d4dd841_Str_Kind_11,
		._20d4ddb82_Equal=_20d4ddb82_Equal_Kind_11,
	},
	{
		._20d4dd841_Str=_20d4dd841_Str_Kind_12,
		._20d4ddb82_Equal=_20d4ddb82_Equal_Kind_12,
	},
	{
		._20d4dd841_Str=_20d4dd841_Str_Kind_13,
		._20d4ddb82_Equal=_20d4ddb82_Equal_Kind_13,
	},
	{
		._20d4dd841_Str=_20d4dd841_Str_Kind_14,
		._20d4ddb82_Equal=_20d4ddb82_Equal_Kind_14,
	},
	{
		._20d4dd841_Str=_20d4dd841_Str_Kind_15,
		._20d4ddb82_Equal=_20d4ddb82_Equal_Kind_15,
	},
	{
		._20d4dd841_Str=_20d4dd841_Str_Kind_16,
		._20d4ddb82_Equal=_20d4ddb82_Equal_Kind_16,
	},
	{
		._20d4dd841_Str=_20d4dd841_Str_Kind_17,
		._20d4ddb82_Equal=_20d4ddb82_Equal_Kind_17,
	},
	{
		._20d4dd841_Str=_20d4dd841_Str_Kind_18,
		._20d4ddb82_Equal=_20d4ddb82_Equal_Kind_18,
	},
	{
		._20d4dd841_Str=_20d4dd841_Str_Kind_19,
		._20d4ddb82_Equal=_20d4ddb82_Equal_Kind_19,
	},
	{
		._20d4dd841_Str=_20d4dd841_Str_Kind_20,
		._20d4ddb82_Equal=_20d4ddb82_Equal_Kind_20,
	},
	{
		._20d4dd841_Str=_20d4dd841_Str_Kind_21,
		._20d4ddb82_Equal=_20d4ddb82_Equal_Kind_21,
	},
	{
		._20d4dd841_Str=_20d4dd841_Str_Kind_22,
		._20d4ddb82_Equal=_20d4ddb82_Equal_Kind_22,
	},
	{
		._20d4dd841_Str=_20d4dd841_Str_Kind_23,
		._20d4ddb82_Equal=_20d4ddb82_Equal_Kind_23,
	},
	{
		._20d4dd841_Str=_20d4dd841_Str_Kind_24,
		._20d4ddb82_Equal=_20d4ddb82_Equal_Kind_24,
	},
	{
		._20d4dd841_Str=_20d4dd841_Str_Kind_25,
		._20d4ddb82_Equal=_20d4ddb82_Equal_Kind_25,
	},
	{
		._20d4dd841_Str=_20d4dd841_Str_Kind_26,
		._20d4ddb82_Equal=_20d4ddb82_Equal_Kind_26,
	},
	{
		._20d4dd841_Str=_20d4dd841_Str_Kind_27,
		._20d4ddb82_Equal=_20d4ddb82_Equal_Kind_27,
	},
};
static _20d50e06a_LookupMptrData _20d50e06a_Lookup_mptr_data[] = {
	{
		._20d50c354_SelectPackage=_20d50c354_SelectPackage_Lookup_0,
		._20d50c750_FindVar=_20d50c750_FindVar_Lookup_0,
		._20d50cb4b_FindTypeAlias=_20d50cb4b_FindTypeAlias_Lookup_0,
		._20d50d047_FindStruct=_20d50d047_FindStruct_Lookup_0,
		._20d50d443_FindFn=_20d50d443_FindFn_Lookup_0,
		._20d50d784_FindTrait=_20d50d784_FindTrait_Lookup_0,
		._20d50dac5_FindEnum=_20d50dac5_FindEnum_Lookup_0,
		._20d50de16_FindTypeEnum=_20d50de16_FindTypeEnum_Lookup_0,
	},
	{
		._20d50c354_SelectPackage=_20d50c354_SelectPackage_Lookup_1,
		._20d50c750_FindVar=_20d50c750_FindVar_Lookup_1,
		._20d50cb4b_FindTypeAlias=_20d50cb4b_FindTypeAlias_Lookup_1,
		._20d50d047_FindStruct=_20d50d047_FindStruct_Lookup_1,
		._20d50d443_FindFn=_20d50d443_FindFn_Lookup_1,
		._20d50d784_FindTrait=_20d50d784_FindTrait_Lookup_1,
		._20d50dac5_FindEnum=_20d50dac5_FindEnum_Lookup_1,
		._20d50de16_FindTypeEnum=_20d50de16_FindTypeEnum_Lookup_1,
	},
	{
		._20d50c354_SelectPackage=_20d50c354_SelectPackage_Lookup_2,
		._20d50c750_FindVar=_20d50c750_FindVar_Lookup_2,
		._20d50cb4b_FindTypeAlias=_20d50cb4b_FindTypeAlias_Lookup_2,
		._20d50d047_FindStruct=_20d50d047_FindStruct_Lookup_2,
		._20d50d443_FindFn=_20d50d443_FindFn_Lookup_2,
		._20d50d784_FindTrait=_20d50d784_FindTrait_Lookup_2,
		._20d50dac5_FindEnum=_20d50dac5_FindEnum_Lookup_2,
		._20d50de16_FindTypeEnum=_20d50de16_FindTypeEnum_Lookup_2,
	},
	{
		._20d50c354_SelectPackage=_20d50c354_SelectPackage_Lookup_3,
		._20d50c750_FindVar=_20d50c750_FindVar_Lookup_3,
		._20d50cb4b_FindTypeAlias=_20d50cb4b_FindTypeAlias_Lookup_3,
		._20d50d047_FindStruct=_20d50d047_FindStruct_Lookup_3,
		._20d50d443_FindFn=_20d50d443_FindFn_Lookup_3,
		._20d50d784_FindTrait=_20d50d784_FindTrait_Lookup_3,
		._20d50dac5_FindEnum=_20d50dac5_FindEnum_Lookup_3,
		._20d50de16_FindTypeEnum=_20d50de16_FindTypeEnum_Lookup_3,
	},
	{
		._20d50c354_SelectPackage=_20d50c354_SelectPackage_Lookup_4,
		._20d50c750_FindVar=_20d50c750_FindVar_Lookup_4,
		._20d50cb4b_FindTypeAlias=_20d50cb4b_FindTypeAlias_Lookup_4,
		._20d50d047_FindStruct=_20d50d047_FindStruct_Lookup_4,
		._20d50d443_FindFn=_20d50d443_FindFn_Lookup_4,
		._20d50d784_FindTrait=_20d50d784_FindTrait_Lookup_4,
		._20d50dac5_FindEnum=_20d50dac5_FindEnum_Lookup_4,
		._20d50de16_FindTypeEnum=_20d50de16_FindTypeEnum_Lookup_4,
	},
};
static _20ec7d61d_CommonFlagMptrData _20ec7d61d_CommonFlag_mptr_data[] = {
	{
		._20ec4c07b_Name=_20ec4c07b_Name_CommonFlag_0,
		._20ec4c224_Short=_20ec4c224_Short_CommonFlag_0,
		._20ec7d387_What=_20ec7d387_What_CommonFlag_0,
		._20ec7d4ca_Reset=_20ec7d4ca_Reset_CommonFlag_0,
	},
	{
		._20ec4c07b_Name=_20ec4c07b_Name_CommonFlag_1,
		._20ec4c224_Short=_20ec4c224_Short_CommonFlag_1,
		._20ec7d387_What=_20ec7d387_What_CommonFlag_1,
		._20ec7d4ca_Reset=_20ec7d4ca_Reset_CommonFlag_1,
	},
	{
		._20ec4c07b_Name=_20ec4c07b_Name_CommonFlag_2,
		._20ec4c224_Short=_20ec4c224_Short_CommonFlag_2,
		._20ec7d387_What=_20ec7d387_What_CommonFlag_2,
		._20ec7d4ca_Reset=_20ec7d4ca_Reset_CommonFlag_2,
	},
	{
		._20ec4c07b_Name=_20ec4c07b_Name_CommonFlag_3,
		._20ec4c224_Short=_20ec4c224_Short_CommonFlag_3,
		._20ec7d387_What=_20ec7d387_What_CommonFlag_3,
		._20ec7d4ca_Reset=_20ec7d4ca_Reset_CommonFlag_3,
	},
	{
		._20ec4c07b_Name=_20ec4c07b_Name_CommonFlag_4,
		._20ec4c224_Short=_20ec4c224_Short_CommonFlag_4,
		._20ec7d387_What=_20ec7d387_What_CommonFlag_4,
		._20ec7d4ca_Reset=_20ec7d4ca_Reset_CommonFlag_4,
	},
};


void __jule_any_type0_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type0_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_any_type0_dealloc, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
void __jule_any_type1_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type1_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_any_type1_dealloc, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
void __jule_any_type2_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other); }
jule::Str __jule_any_type2_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_any_type2_dealloc, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
void __jule_any_type3_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other); }
jule::Str __jule_any_type3_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_any_type3_dealloc, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
void __jule_any_type4_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other); }
jule::Str __jule_any_type4_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_any_type4_dealloc, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
void __jule_any_type5_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other); }
jule::Str __jule_any_type5_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_any_type5_dealloc, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
void __jule_any_type6_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type6_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_any_type6_dealloc, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
void __jule_any_type7_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d3a5a49_FnIns>().dealloc(); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_any_type7_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_20d3a5a49_FnIns> &other) { return any.type == &__jule_any_type7 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type8_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d458aca_Var>().dealloc(); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_any_type8_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_20d458aca_Var> &other) { return any.type == &__jule_any_type8 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type9_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d39066b_StructIns>().dealloc(); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_any_type9_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_20d39066b_StructIns> &other) { return any.type == &__jule_any_type9 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type10_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d3b5dde_Trait>().dealloc(); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_any_type10_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_20d3b5dde_Trait> &other) { return any.type == &__jule_any_type10 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type11_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d388378_Impl>().dealloc(); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_any_type11_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_20d388378_Impl> &other) { return any.type == &__jule_any_type11 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type12_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d38330c_TypeAliasDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_any_type12_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_20d38330c_TypeAliasDecl> &other) { return any.type == &__jule_any_type12 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type13_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d3874cb_StructDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_any_type13_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_20d3874cb_StructDecl> &other) { return any.type == &__jule_any_type13 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type14_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d37d659_FnDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_any_type14_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_20d37d659_FnDecl> &other) { return any.type == &__jule_any_type14 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type15_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d387c18_TraitDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_any_type15_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_20d387c18_TraitDecl> &other) { return any.type == &__jule_any_type15 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type16_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d37e737_VarDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_any_type16_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_20d37e737_VarDecl> &other) { return any.type == &__jule_any_type16 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type17_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d385881_EnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_any_type17_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_20d385881_EnumDecl> &other) { return any.type == &__jule_any_type17 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type18_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d38681b_TypeEnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_any_type18_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_20d38681b_TypeEnumDecl> &other) { return any.type == &__jule_any_type18 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type19_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20b0655eb_Const>().dealloc(); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_any_type19_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_20b0655eb_Const> &other) { return any.type == &__jule_any_type19 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type20_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d36c0a4_IdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_any_type20_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_20d36c0a4_IdentTypeDecl> &other) { return any.type == &__jule_any_type20 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type21_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d3e6040_Label>().dealloc(); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_any_type21_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_20d3e6040_Label> &other) { return any.type == &__jule_any_type21 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type22_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d3e369c_Scope>().dealloc(); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_any_type22_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_20d3e369c_Scope> &other) { return any.type == &__jule_any_type22 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type23_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d39d9a9_BuiltinErrorCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_any_type23_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_20d39d9a9_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type23 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type24_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d087165_Data>().dealloc(); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_any_type24_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_20d087165_Data> &other) { return any.type == &__jule_any_type24 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type25_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d39e911_BackendEmitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_any_type25_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_20d39e911_BackendEmitExprModel> &other) { return any.type == &__jule_any_type25 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type26_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d39c48b_BuiltinAppendCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_any_type26_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_20d39c48b_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type26 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type27_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d39ada2_BuiltinCloneCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_any_type27_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_20d39ada2_BuiltinCloneCallExprModel> &other) { return any.type == &__jule_any_type27 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type28_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d39a6cb_BuiltinOutCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_any_type28_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_20d39a6cb_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type28 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type29_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d39aaa5_BuiltinOutlnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_any_type29_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_20d39aaa5_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type29 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type30_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d39b655_BuiltinPanicCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_any_type30_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_20d39b655_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type30 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type31_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d39bb0b_BuiltinAssertCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_any_type31_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_20d39bb0b_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type31 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type32_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d39d338_BuiltinCopyCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_any_type32_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_20d39d338_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type32 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type33_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d39ce5e_BuiltinDeleteCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_any_type33_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_20d39ce5e_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type33 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type34_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d39ec0d_FreeExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_any_type34_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_20d39ec0d_FreeExprModel> &other) { return any.type == &__jule_any_type34 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type35_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d396ad4_FnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_any_type35_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_20d396ad4_FnCallExprModel> &other) { return any.type == &__jule_any_type35 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type36_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d3e42d5_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_any_type36_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_20d3e42d5_Conditional> &other) { return any.type == &__jule_any_type36 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type37_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d3e45d2_InfIter>().dealloc(); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_any_type37_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_20d3e45d2_InfIter> &other) { return any.type == &__jule_any_type37 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type38_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d380ace_WhileKind>().dealloc(); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_any_type38_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_20d380ace_WhileKind> &other) { return any.type == &__jule_any_type38 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type39_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d3e4a88_WhileIter>().dealloc(); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_any_type39_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_20d3e4a88_WhileIter> &other) { return any.type == &__jule_any_type39 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type40_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d3814d6_RangeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_any_type40_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_20d3814d6_RangeKind> &other) { return any.type == &__jule_any_type40 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type41_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d3e54d4_RangeIter>().dealloc(); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_any_type41_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_20d3e54d4_RangeIter> &other) { return any.type == &__jule_any_type41 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type42_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d3e5869_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_any_type42_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_20d3e5869_ContSt> &other) { return any.type == &__jule_any_type42 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type43_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d3e6419_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_any_type43_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_20d3e6419_GotoSt> &other) { return any.type == &__jule_any_type43 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type44_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d3e67e3_Postfix>().dealloc(); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_any_type44_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_20d3e67e3_Postfix> &other) { return any.type == &__jule_any_type44 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type45_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d3e6c99_Assign>().dealloc(); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_any_type45_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_20d3e6c99_Assign> &other) { return any.type == &__jule_any_type45 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type46_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d397464_IndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_any_type46_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_20d397464_IndexingExprModel> &other) { return any.type == &__jule_any_type46 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type47_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d3e7173_MultiAssign>().dealloc(); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_any_type47_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_20d3e7173_MultiAssign> &other) { return any.type == &__jule_any_type47 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type48_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d3e77d3_Match>().dealloc(); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_any_type48_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_20d3e77d3_Match> &other) { return any.type == &__jule_any_type48 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type49_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d3e8a15_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_any_type49_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_20d3e8a15_FallSt> &other) { return any.type == &__jule_any_type49 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type50_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d3e5c43_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_any_type50_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_20d3e5c43_BreakSt> &other) { return any.type == &__jule_any_type50 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type51_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d3e8d9a_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_any_type51_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_20d3e8d9a_RetSt> &other) { return any.type == &__jule_any_type51 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type52_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d37b9ba_ScopeTree>().dealloc(); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_any_type52_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_20d37b9ba_ScopeTree> &other) { return any.type == &__jule_any_type52 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type53_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d370ccd_Expr>().dealloc(); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_any_type53_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_20d370ccd_Expr> &other) { return any.type == &__jule_any_type53 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type54_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d382ac0_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_any_type54_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_20d382ac0_Conditional> &other) { return any.type == &__jule_any_type54 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type55_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d3802a4_Iter>().dealloc(); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_any_type55_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_20d3802a4_Iter> &other) { return any.type == &__jule_any_type55 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type56_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d381c89_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_any_type56_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_20d381c89_ContSt> &other) { return any.type == &__jule_any_type56 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type57_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d37907d_LabelSt>().dealloc(); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_any_type57_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_20d37907d_LabelSt> &other) { return any.type == &__jule_any_type57 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type58_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d379457_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_any_type58_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_20d379457_GotoSt> &other) { return any.type == &__jule_any_type58 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type59_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d37a447_AssignSt>().dealloc(); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_any_type59_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_20d37a447_AssignSt> &other) { return any.type == &__jule_any_type59 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type60_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d384000_MatchCase>().dealloc(); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_any_type60_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_20d384000_MatchCase> &other) { return any.type == &__jule_any_type60 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type61_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d379754_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_any_type61_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_20d379754_FallSt> &other) { return any.type == &__jule_any_type61 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type62_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d3818b0_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_any_type62_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_20d3818b0_BreakSt> &other) { return any.type == &__jule_any_type62 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type63_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d37eb11_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_any_type63_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_20d37eb11_RetSt> &other) { return any.type == &__jule_any_type63 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type64_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d3716a2_UseExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_any_type64_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_20d3716a2_UseExpr> &other) { return any.type == &__jule_any_type64 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type65_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d3a2b45_Fn>().dealloc(); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_any_type65_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_20d3a2b45_Fn> &other) { return any.type == &__jule_any_type65 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type66_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d38c58b_Struct>().dealloc(); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_any_type66_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_20d38c58b_Struct> &other) { return any.type == &__jule_any_type66 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type67_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d4dd49a_TypeAlias>().dealloc(); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_any_type67_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_20d4dd49a_TypeAlias> &other) { return any.type == &__jule_any_type67 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type68_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d3b85d9_Enum>().dealloc(); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_any_type68_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_20d3b85d9_Enum> &other) { return any.type == &__jule_any_type68 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type69_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d3b9ce4_TypeEnum>().dealloc(); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_any_type69_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_20d3b9ce4_TypeEnum> &other) { return any.type == &__jule_any_type69 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type70_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d398cd4_TraitSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_any_type70_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_20d398cd4_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type70 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type71_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d399675_StructSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_any_type71_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_20d399675_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type71 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type72_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d394ecd_UnaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_any_type72_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_20d394ecd_UnaryExprModel> &other) { return any.type == &__jule_any_type72 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type73_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d36dc65_ArrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_any_type73_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_20d36dc65_ArrTypeDecl> &other) { return any.type == &__jule_any_type73 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type74_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d36cdc9_SlcTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_any_type74_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_20d36cdc9_SlcTypeDecl> &other) { return any.type == &__jule_any_type74 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type75_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d36d4c3_PtrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_any_type75_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_20d36d4c3_PtrTypeDecl> &other) { return any.type == &__jule_any_type75 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type76_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d36ca44_SptrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_any_type76_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_20d36ca44_SptrTypeDecl> &other) { return any.type == &__jule_any_type76 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type77_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d36e4b3_MapTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_any_type77_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_20d36e4b3_MapTypeDecl> &other) { return any.type == &__jule_any_type77 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type78_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d36d1c6_TupleTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_any_type78_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_20d36d1c6_TupleTypeDecl> &other) { return any.type == &__jule_any_type78 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type79_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d373264_VariadicExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_any_type79_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_20d373264_VariadicExpr> &other) { return any.type == &__jule_any_type79 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type80_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d396ead_SliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_any_type80_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_20d396ead_SliceExprModel> &other) { return any.type == &__jule_any_type80 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type81_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d3754ec_FieldExprPair>().dealloc(); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_any_type81_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_20d3754ec_FieldExprPair> &other) { return any.type == &__jule_any_type81 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type82_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d376b08_KeyValPair>().dealloc(); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_any_type82_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_20d376b08_KeyValPair> &other) { return any.type == &__jule_any_type82 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type83_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d372708_IdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_any_type83_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_20d372708_IdentExpr> &other) { return any.type == &__jule_any_type83 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type84_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d37199e_TupleExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_any_type84_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_20d37199e_TupleExpr> &other) { return any.type == &__jule_any_type84 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type85_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d39a302_TupleExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_any_type85_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_20d39a302_TupleExprModel> &other) { return any.type == &__jule_any_type85 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type86_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d39e23a_RuneExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_any_type86_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_20d39e23a_RuneExprModel> &other) { return any.type == &__jule_any_type86 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type87_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d4de28c_TypeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_any_type87_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_20d4de28c_TypeKind> &other) { return any.type == &__jule_any_type87 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type88_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d39a005_ArrayExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_any_type88_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_20d39a005_ArrayExprModel> &other) { return any.type == &__jule_any_type88 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type89_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d373de1_SubIdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_any_type89_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_20d373de1_SubIdentExpr> &other) { return any.type == &__jule_any_type89 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type90_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d36c3a1_SubIdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_any_type90_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_20d36c3a1_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type90 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type91_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d372d8a_UnaryExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_any_type91_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_20d372d8a_UnaryExpr> &other) { return any.type == &__jule_any_type91 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type92_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d36b999_TypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_any_type92_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_20d36b999_TypeDecl> &other) { return any.type == &__jule_any_type92 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type93_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d373a17_NsSelectionExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_any_type93_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_20d373a17_NsSelectionExpr> &other) { return any.type == &__jule_any_type93 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type94_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d36c747_NamespaceTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_any_type94_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_20d36c747_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type94 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type95_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d398751_SlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_any_type95_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_20d398751_SlicingExprModel> &other) { return any.type == &__jule_any_type95 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type96_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d396232_CastingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_any_type96_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_20d396232_CastingExprModel> &other) { return any.type == &__jule_any_type96 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type97_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d377301_SliceExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_any_type97_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_20d377301_SliceExpr> &other) { return any.type == &__jule_any_type97 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type98_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d3958a2_StructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_any_type98_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_20d3958a2_StructLitExprModel> &other) { return any.type == &__jule_any_type98 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type99_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d399b2b_StructStaticIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_any_type99_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_20d399b2b_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type99 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type100_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d3981bd_MapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_any_type100_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_20d3981bd_MapExprModel> &other) { return any.type == &__jule_any_type100 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type101_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d39783d_AnonFnExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_any_type101_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_20d39783d_AnonFnExprModel> &other) { return any.type == &__jule_any_type101 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type102_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d3710ca_RangeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_any_type102_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_20d3710ca_RangeExpr> &other) { return any.type == &__jule_any_type102 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type103_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d371d78_LitExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_any_type103_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_20d371d78_LitExpr> &other) { return any.type == &__jule_any_type103 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type104_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d372252_UnsafeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_any_type104_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_20d372252_UnsafeExpr> &other) { return any.type == &__jule_any_type104 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type105_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d377c91_IndexingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_any_type105_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_20d377c91_IndexingExpr> &other) { return any.type == &__jule_any_type105 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type106_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d378401_SlicingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_any_type106_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_20d378401_SlicingExpr> &other) { return any.type == &__jule_any_type106 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type107_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d37363d_CastExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_any_type107_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_20d37363d_CastExpr> &other) { return any.type == &__jule_any_type107 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type108_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d375d27_StructLit>().dealloc(); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_any_type108_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_20d375d27_StructLit> &other) { return any.type == &__jule_any_type108 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type109_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d374a07_FnCallExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_any_type109_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_20d374a07_FnCallExpr> &other) { return any.type == &__jule_any_type109 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type110_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d3762cd_BraceLit>().dealloc(); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_any_type110_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_20d3762cd_BraceLit> &other) { return any.type == &__jule_any_type110 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type111_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d374397_BinopExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_any_type111_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_20d374397_BinopExpr> &other) { return any.type == &__jule_any_type111 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type112_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d394b04_BinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_any_type112_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_20d394b04_BinopExprModel> &other) { return any.type == &__jule_any_type112 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type113_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d395b9e_AllocStructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_any_type113_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_20d395b9e_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type113 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type114_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d39b27b_BuiltinNewCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_any_type114_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_20d39b27b_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type114 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type115_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d39c0b2_BuiltinMakeCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_any_type115_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_20d39c0b2_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type115 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type116_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d39c788_BuiltinLenCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_any_type116_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_20d39c788_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type116 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type117_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d39ca85_BuiltinCapCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_any_type117_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_20d39ca85_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type117 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type118_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d39db96_SizeofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_any_type118_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_20d39db96_SizeofExprModel> &other) { return any.type == &__jule_any_type118 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type119_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d39de3d_AlignofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_any_type119_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_20d39de3d_AlignofExprModel> &other) { return any.type == &__jule_any_type119 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type120_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d39e537_IntegratedToStrExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_any_type120_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_20d39e537_IntegratedToStrExprModel> &other) { return any.type == &__jule_any_type120 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type121_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d575ba3_MutSlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_any_type121_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_20d575ba3_MutSlicingExprModel> &other) { return any.type == &__jule_any_type121 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type122_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d5766cb_PushToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_any_type122_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_20d5766cb_PushToSliceExprModel> &other) { return any.type == &__jule_any_type122 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type123_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d576aa5_AppendToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_any_type123_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_20d576aa5_AppendToSliceExprModel> &other) { return any.type == &__jule_any_type123 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type124_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d57491b_SwapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_any_type124_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_20d57491b_SwapExprModel> &other) { return any.type == &__jule_any_type124 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type125_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d574ce5_EmptyCompareExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_any_type125_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_20d574ce5_EmptyCompareExprModel> &other) { return any.type == &__jule_any_type125 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type126_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d575620_StrCompExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_any_type126_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_20d575620_StrCompExprModel> &other) { return any.type == &__jule_any_type126 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type127_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d575ea0_UnsafeBinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_any_type127_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_20d575ea0_UnsafeBinopExprModel> &other) { return any.type == &__jule_any_type127 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type128_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d5750e2_RefExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_any_type128_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_20d5750e2_RefExprModel> &other) { return any.type == &__jule_any_type128 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type129_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d57629c_UnsafeIndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_any_type129_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_20d57629c_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type129 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type130_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20d576da2_InlineStdInternalNosafeStobs>().dealloc(); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_any_type130_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_20d576da2_InlineStdInternalNosafeStobs> &other) { return any.type == &__jule_any_type130 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type131_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
jule::Bool __jule_any_type131_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other); }
jule::Str __jule_any_type131_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_any_type131_dealloc, .eq=__jule_any_type131_eq, .to_str=__jule_any_type131_to_str};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type131 && __jule_any_type131_eq(any.data.alloc, (void*)&other); }
void __jule_any_type132_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
jule::Bool __jule_any_type132_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other); }
jule::Str __jule_any_type132_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_any_type132_dealloc, .eq=__jule_any_type132_eq, .to_str=__jule_any_type132_to_str};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type132 && __jule_any_type132_eq(any.data.alloc, (void*)&other); }
void __jule_any_type133_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
jule::Bool __jule_any_type133_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other); }
jule::Str __jule_any_type133_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_any_type133_dealloc, .eq=__jule_any_type133_eq, .to_str=__jule_any_type133_to_str};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type133 && __jule_any_type133_eq(any.data.alloc, (void*)&other); }
void __jule_any_type134_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
jule::Bool __jule_any_type134_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other); }
jule::Str __jule_any_type134_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_any_type134_dealloc, .eq=__jule_any_type134_eq, .to_str=__jule_any_type134_to_str};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type134 && __jule_any_type134_eq(any.data.alloc, (void*)&other); }
void __jule_any_type135_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
jule::Bool __jule_any_type135_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other); }
jule::Str __jule_any_type135_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_any_type135_dealloc, .eq=__jule_any_type135_eq, .to_str=__jule_any_type135_to_str};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type135 && __jule_any_type135_eq(any.data.alloc, (void*)&other); }
void __jule_any_type136_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
jule::Bool __jule_any_type136_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other); }
jule::Str __jule_any_type136_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_any_type136_dealloc, .eq=__jule_any_type136_eq, .to_str=__jule_any_type136_to_str};
jule::Bool __jule_any_type136_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type136 && __jule_any_type136_eq(any.data.alloc, (void*)&other); }
jule::Array<jule::Array<jule::Str,2>,5> _2273c70b2_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
jule::Str _20ec8513b_OutDir = jule::Str("dist", 4);
jule::Str _20ec85416_OutName = jule::Str("ir.cpp", 6);
jule::Str _20ec856d0_Out = jule::Str();
jule::Str _23c5aeaae_Compiler = jule::Str();
jule::Str _23c5b0d9b_CompilerPath = jule::Str();
jule::Str _23c5b10ee_CppStd = jule::Str("cpp17", 5);
jule::Bool _23c5b1385_Shadowing = false;
jule::Bool _23c5b164e_Transpilation = false;
jule::Bool _23c5b1918_Test = false;
jule::Bool _23c5b1bd2_RC = true;
jule::Bool _23c5b20ab_Safety = true;
jule::Bool _23c5b2375_Production = false;
jule::Uintptr _223db7523_STDIN = _223db7ce8_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551606LLU));
jule::Uintptr _223db77dc_STDOUT = _223db7ce8_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551605LLU));
jule::Uintptr _223db7a73_STDERR = _223db7ce8_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551604LLU));
jule::Array<jule::U8,256> _223ee681c_first = jule::Array<jule::U8,256>({});
jule::Array<_223ee6da0_acceptRange,16> _223ee71ad_acceptRanges = jule::Array<_223ee6da0_acceptRange,16>({_223ee6da0_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_223ee6da0_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_223ee6da0_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_223ee6da0_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_223ee6da0_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Ptr<_2248692e3_RangeTable> _224804aa8__L = jule::new_ptr<_2248692e3_RangeTable>(_2248692e3_RangeTable{._field_R16=jule::Slice<_22486880e_Range16>::make({_22486880e_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_22486880e_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_22486880e_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_22486880e_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_22486880e_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_22486880e_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_22486880e_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_22486880e_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_22486880e_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_22486880e_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_22486880e_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_22486880e_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_22486880e_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_22486880e_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_22486880e_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_22486880e_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_22486880e_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_22486880e_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_22486880e_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_22486880e_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_22486880e_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_22486880e_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_22486880e_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_22486880e_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_22486880e_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_22486880e_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_22486880e_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_22486880e_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_22486880e_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_22486880e_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_22486880e_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_22486880e_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_22486880e_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_22486880e_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_22486880e_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_22486880e_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_22486880e_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_22486880e_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_22486880e_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_22486880e_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_22486880e_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_22486880e_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_22486880e_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_22486880e_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_22486880e_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_22486880e_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_22486880e_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_22486880e_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_22486880e_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_22486880e_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_22486880e_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_22486880e_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_22486880e_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_22486880e_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_22486880e_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_22486880e_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_22486880e_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_22486880e_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_22486880e_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_22486880e_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_224868d3c_Range32>::make({_224868d3c_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_224868d3c_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_224868d3c_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_224868d3c_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_224868d3c_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_224868d3c_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_224868d3c_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_224868d3c_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_224868d3c_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_224868d3c_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_224868d3c_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_224868d3c_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_224868d3c_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_224868d3c_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_224868d3c_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_224868d3c_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_224868d3c_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_224868d3c_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_224868d3c_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_224868d3c_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_224868d3c_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_224868d3c_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_224868d3c_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_224868d3c_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_224868d3c_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_224868d3c_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_224868d3c_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_224868d3c_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_224868d3c_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_224868d3c_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_224868d3c_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_224868d3c_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_224868d3c_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_224868d3c_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_224868d3c_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_224868d3c_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_224868d3c_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_224868d3c_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_224868d3c_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_224868d3c_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_224868d3c_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_224868d3c_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_224868d3c_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_2248692e3_RangeTable> _224805a98__LU = jule::new_ptr<_2248692e3_RangeTable>(_2248692e3_RangeTable{._field_R16=jule::Slice<_22486880e_Range16>::make({_22486880e_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_22486880e_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_22486880e_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_22486880e_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_22486880e_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_22486880e_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_22486880e_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_22486880e_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_22486880e_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_22486880e_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_22486880e_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_22486880e_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_22486880e_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_22486880e_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_22486880e_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_22486880e_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_22486880e_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_224868d3c_Range32>::make({_224868d3c_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_224868d3c_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_224868d3c_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_224868d3c_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_224868d3c_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_224868d3c_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_224868d3c_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::U8,256> _224862b27__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::Str,4> _2272ed659_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
jule::Array<jule::Str,3> _2272ecc85_CppExts = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
jule::Array<jule::Str,1> _2272ee924_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
jule::Str _2273c32ab_PathStdlib = jule::Str();
jule::Str _2273c350e_PathExec = jule::Str();
jule::Str _2273c37b7_PathWd = jule::Str();
jule::Str _2273c3ac5_PathApi = jule::Str();
jule::Str _2273c3d8e_Os = jule::Str("windows", 7);
jule::Str _2273c4158_Arch = jule::Str("amd64", 5);
jule::Array<jule::U8,32> _20aee204a__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _20aee2611__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_20b037557_floatInfo _20b037953_f32info = _20b037557_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_20b037557_floatInfo _20b037c61_f64info = _20b037557_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _20b045565_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _20b0473d0_powtab = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _20b047ea2_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _20b0482e3_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _20b04b55a_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_20b05032d_leftCheat> _20b05075c_leftCheats = jule::Slice<_20b05032d_leftCheat>::make({_20b05032d_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_20b05032d_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("5", 1)},_20b05032d_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("25", 2)},_20b05032d_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("125", 3)},_20b05032d_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("625", 3)},_20b05032d_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("3125", 4)},_20b05032d_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("15625", 5)},_20b05032d_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("78125", 5)},_20b05032d_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("390625", 6)},_20b05032d_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("1953125", 7)},_20b05032d_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("9765625", 7)},_20b05032d_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("48828125", 8)},_20b05032d_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("244140625", 9)},_20b05032d_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("1220703125", 10)},_20b05032d_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("6103515625", 10)},_20b05032d_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("30517578125", 11)},_20b05032d_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("152587890625", 12)},_20b05032d_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("762939453125", 12)},_20b05032d_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("3814697265625", 13)},_20b05032d_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("19073486328125", 14)},_20b05032d_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("95367431640625", 14)},_20b05032d_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("476837158203125", 15)},_20b05032d_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("2384185791015625", 16)},_20b05032d_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("11920928955078125", 17)},_20b05032d_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("59604644775390625", 17)},_20b05032d_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("298023223876953125", 18)},_20b05032d_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("1490116119384765625", 19)},_20b05032d_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("7450580596923828125", 19)},_20b05032d_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("37252902984619140625", 20)},_20b05032d_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("186264514923095703125", 21)},_20b05032d_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("931322574615478515625", 21)},_20b05032d_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("4656612873077392578125", 22)},_20b05032d_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("23283064365386962890625", 23)},_20b05032d_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("116415321826934814453125", 24)},_20b05032d_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("582076609134674072265625", 24)},_20b05032d_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("2910383045673370361328125", 25)},_20b05032d_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("14551915228366851806640625", 26)},_20b05032d_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("72759576141834259033203125", 26)},_20b05032d_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("363797880709171295166015625", 27)},_20b05032d_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("1818989403545856475830078125", 28)},_20b05032d_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("9094947017729282379150390625", 28)},_20b05032d_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("45474735088646411895751953125", 29)},_20b05032d_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("227373675443232059478759765625", 30)},_20b05032d_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("1136868377216160297393798828125", 31)},_20b05032d_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("5684341886080801486968994140625", 31)},_20b05032d_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("28421709430404007434844970703125", 32)},_20b05032d_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("142108547152020037174224853515625", 33)},_20b05032d_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("710542735760100185871124267578125", 33)},_20b05032d_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("3552713678800500929355621337890625", 34)},_20b05032d_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("17763568394002504646778106689453125", 35)},_20b05032d_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("88817841970012523233890533447265625", 35)},_20b05032d_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("444089209850062616169452667236328125", 36)},_20b05032d_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("2220446049250313080847263336181640625", 37)},_20b05032d_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("11102230246251565404236316680908203125", 38)},_20b05032d_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("55511151231257827021181583404541015625", 38)},_20b05032d_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("277555756156289135105907917022705078125", 39)},_20b05032d_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("1387778780781445675529539585113525390625", 40)},_20b05032d_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("6938893903907228377647697925567626953125", 40)},_20b05032d_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("34694469519536141888238489627838134765625", 41)},_20b05032d_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("173472347597680709441192448139190673828125", 42)},_20b05032d_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str("867361737988403547205962240695953369140625", 42)}});
jule::I64 _20b056642_BitSize = 0LL;
jule::Str _20b05692d_SysInt = jule::Str();
jule::Str _20b056be7_SysUint = jule::Str();
jule::Array<jule::I32,5> _20d2a533e_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::U64,6> _20d2a563b_UnaryOps = jule::Array<jule::U64,6>({static_cast<jule::U64>(61LLU),static_cast<jule::U64>(60LLU),static_cast<jule::U64>(67LLU),static_cast<jule::U64>(68LLU),static_cast<jule::U64>(62LLU),static_cast<jule::U64>(65LLU)});
jule::Array<jule::U64,18> _20d349e83_BinOps = jule::Array<jule::U64,18>({static_cast<jule::U64>(60LLU),static_cast<jule::U64>(61LLU),static_cast<jule::U64>(62LLU),static_cast<jule::U64>(63LLU),static_cast<jule::U64>(64LLU),static_cast<jule::U64>(65LLU),static_cast<jule::U64>(66LLU),static_cast<jule::U64>(67LLU),static_cast<jule::U64>(56LLU),static_cast<jule::U64>(57LLU),static_cast<jule::U64>(69LLU),static_cast<jule::U64>(70LLU),static_cast<jule::U64>(53LLU),static_cast<jule::U64>(52LLU),static_cast<jule::U64>(54LLU),static_cast<jule::U64>(55LLU),static_cast<jule::U64>(50LLU),static_cast<jule::U64>(51LLU)});
jule::Array<jule::U64,2> _20d34a57c_PostfixOps = jule::Array<jule::U64,2>({static_cast<jule::U64>(58LLU),static_cast<jule::U64>(59LLU)});
jule::Array<jule::U64,11> _20d34a879_AssignOps = jule::Array<jule::U64,11>({static_cast<jule::U64>(71LLU),static_cast<jule::U64>(40LLU),static_cast<jule::U64>(41LLU),static_cast<jule::U64>(43LLU),static_cast<jule::U64>(42LLU),static_cast<jule::U64>(44LLU),static_cast<jule::U64>(46LLU),static_cast<jule::U64>(45LLU),static_cast<jule::U64>(49LLU),static_cast<jule::U64>(48LLU),static_cast<jule::U64>(47LLU)});
jule::Array<_20d3589a8_kindPair,28> _20d358dd7_keywords = jule::Array<_20d3589a8_kindPair,28>({_20d3589a8_kindPair{._field_kind=jule::Str("const", 5), ._field_id=static_cast<jule::U64>(6LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("ret", 3), ._field_id=static_cast<jule::U64>(2LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("type", 4), ._field_id=static_cast<jule::U64>(7LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("for", 3), ._field_id=static_cast<jule::U64>(9LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("break", 5), ._field_id=static_cast<jule::U64>(10LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("continue", 8), ._field_id=static_cast<jule::U64>(11LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("in", 2), ._field_id=static_cast<jule::U64>(12LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("if", 2), ._field_id=static_cast<jule::U64>(13LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("else", 4), ._field_id=static_cast<jule::U64>(14LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("use", 3), ._field_id=static_cast<jule::U64>(16LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("goto", 4), ._field_id=static_cast<jule::U64>(18LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("enum", 4), ._field_id=static_cast<jule::U64>(20LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("struct", 6), ._field_id=static_cast<jule::U64>(21LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("co", 2), ._field_id=static_cast<jule::U64>(22LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("match", 5), ._field_id=static_cast<jule::U64>(23LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("self", 4), ._field_id=static_cast<jule::U64>(24LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("trait", 5), ._field_id=static_cast<jule::U64>(25LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("impl", 4), ._field_id=static_cast<jule::U64>(26LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("cpp", 3), ._field_id=static_cast<jule::U64>(27LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("fall", 4), ._field_id=static_cast<jule::U64>(28LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("fn", 2), ._field_id=static_cast<jule::U64>(29LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("let", 3), ._field_id=static_cast<jule::U64>(30LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("unsafe", 6), ._field_id=static_cast<jule::U64>(31LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("mut", 3), ._field_id=static_cast<jule::U64>(32LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("defer", 5), ._field_id=static_cast<jule::U64>(33LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("static", 6), ._field_id=static_cast<jule::U64>(34LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("error", 5), ._field_id=static_cast<jule::U64>(36LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("map", 3), ._field_id=static_cast<jule::U64>(37LLU)}});
jule::Array<_20d3589a8_kindPair,46> _20d359228_basicOps = jule::Array<_20d3589a8_kindPair,46>({_20d3589a8_kindPair{._field_kind=jule::Str("::", 2), ._field_id=static_cast<jule::U64>(19LLU)},_20d3589a8_kindPair{._field_kind=jule::Str(":=", 2), ._field_id=static_cast<jule::U64>(38LLU)},_20d3589a8_kindPair{._field_kind=jule::Str(":", 1), ._field_id=static_cast<jule::U64>(8LLU)},_20d3589a8_kindPair{._field_kind=jule::Str(";", 1), ._field_id=static_cast<jule::U64>(3LLU)},_20d3589a8_kindPair{._field_kind=jule::Str(",", 1), ._field_id=static_cast<jule::U64>(5LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("...", 3), ._field_id=static_cast<jule::U64>(39LLU)},_20d3589a8_kindPair{._field_kind=jule::Str(".", 1), ._field_id=static_cast<jule::U64>(17LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("+=", 2), ._field_id=static_cast<jule::U64>(40LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("-=", 2), ._field_id=static_cast<jule::U64>(41LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("*=", 2), ._field_id=static_cast<jule::U64>(42LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("/=", 2), ._field_id=static_cast<jule::U64>(43LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("%=", 2), ._field_id=static_cast<jule::U64>(44LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("<<=", 3), ._field_id=static_cast<jule::U64>(45LLU)},_20d3589a8_kindPair{._field_kind=jule::Str(">>=", 3), ._field_id=static_cast<jule::U64>(46LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("^=", 2), ._field_id=static_cast<jule::U64>(47LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("&=", 2), ._field_id=static_cast<jule::U64>(48LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("|=", 2), ._field_id=static_cast<jule::U64>(49LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("==", 2), ._field_id=static_cast<jule::U64>(50LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("!=", 2), ._field_id=static_cast<jule::U64>(51LLU)},_20d3589a8_kindPair{._field_kind=jule::Str(">=", 2), ._field_id=static_cast<jule::U64>(52LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("<=", 2), ._field_id=static_cast<jule::U64>(53LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("&&", 2), ._field_id=static_cast<jule::U64>(54LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("||", 2), ._field_id=static_cast<jule::U64>(55LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("<<", 2), ._field_id=static_cast<jule::U64>(56LLU)},_20d3589a8_kindPair{._field_kind=jule::Str(">>", 2), ._field_id=static_cast<jule::U64>(57LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("++", 2), ._field_id=static_cast<jule::U64>(58LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("--", 2), ._field_id=static_cast<jule::U64>(59LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("+", 1), ._field_id=static_cast<jule::U64>(60LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("-", 1), ._field_id=static_cast<jule::U64>(61LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("*", 1), ._field_id=static_cast<jule::U64>(62LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("/", 1), ._field_id=static_cast<jule::U64>(63LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("%", 1), ._field_id=static_cast<jule::U64>(64LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("&", 1), ._field_id=static_cast<jule::U64>(65LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("|", 1), ._field_id=static_cast<jule::U64>(66LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("^", 1), ._field_id=static_cast<jule::U64>(67LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("!", 1), ._field_id=static_cast<jule::U64>(68LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("<", 1), ._field_id=static_cast<jule::U64>(69LLU)},_20d3589a8_kindPair{._field_kind=jule::Str(">", 1), ._field_id=static_cast<jule::U64>(70LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("=", 1), ._field_id=static_cast<jule::U64>(71LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("#", 1), ._field_id=static_cast<jule::U64>(35LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("{", 1), ._field_id=static_cast<jule::U64>(72LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("}", 1), ._field_id=static_cast<jule::U64>(73LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("[", 1), ._field_id=static_cast<jule::U64>(76LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("]", 1), ._field_id=static_cast<jule::U64>(77LLU)},_20d3589a8_kindPair{._field_kind=jule::Str("(", 1), ._field_id=static_cast<jule::U64>(74LLU)},_20d3589a8_kindPair{._field_kind=jule::Str(")", 1), ._field_id=static_cast<jule::U64>(75LLU)}});
jule::Slice<jule::Str> _20d3da8d6_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str("signed", 6),jule::Str("unsigned", 8),jule::Str("float", 5),jule::Str("numeric", 7),jule::Str("mutable", 7),jule::Str("immutable", 9),jule::Str("ordered", 7),jule::Str("comparable", 10)});
jule::Ptr<_20d4de28c_TypeKind> _20d5621ab_primNil = jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=nullptr});
jule::Ptr<_20d4de28c_TypeKind> _20d5624b9_primVoid = jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(_20d50b452_buildPrimType(jule::Str("void", 4)), 20)});
jule::Ptr<_20d4de28c_TypeKind> _20d562783_primAny = jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(_20d50b452_buildPrimType(jule::Str("any", 3)), 20)});
jule::Ptr<_20d4de28c_TypeKind> _20d562a91_primStr = jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(_20d50b452_buildPrimType(jule::Str("str", 3)), 20)});
jule::Ptr<_20d4de28c_TypeKind> _20d562d5a_primBool = jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(_20d50b452_buildPrimType(jule::Str("bool", 4)), 20)});
jule::Ptr<_20d4de28c_TypeKind> _20d563124_primUintptr = jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(_20d50b452_buildPrimType(jule::Str("uintptr", 7)), 20)});
jule::Ptr<_20d4de28c_TypeKind> _20d5633dd_primUint = jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(_20d50b452_buildPrimType(jule::Str("uint", 4)), 20)});
jule::Ptr<_20d4de28c_TypeKind> _20d5637b7_primInt = jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(_20d50b452_buildPrimType(jule::Str("int", 3)), 20)});
jule::Ptr<_20d4de28c_TypeKind> _20d563a81_primI8 = jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(_20d50b452_buildPrimType(jule::Str("i8", 2)), 20)});
jule::Ptr<_20d4de28c_TypeKind> _20d563d4a_primI16 = jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(_20d50b452_buildPrimType(jule::Str("i16", 3)), 20)});
jule::Ptr<_20d4de28c_TypeKind> _20d564114_primI32 = jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(_20d50b452_buildPrimType(jule::Str("i32", 3)), 20)});
jule::Ptr<_20d4de28c_TypeKind> _20d5643cd_primI64 = jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(_20d50b452_buildPrimType(jule::Str("i64", 3)), 20)});
jule::Ptr<_20d4de28c_TypeKind> _20d564697_primU8 = jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(_20d50b452_buildPrimType(jule::Str("u8", 2)), 20)});
jule::Ptr<_20d4de28c_TypeKind> _20d564961_primU16 = jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(_20d50b452_buildPrimType(jule::Str("u16", 3)), 20)});
jule::Ptr<_20d4de28c_TypeKind> _20d564c2a_primU32 = jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(_20d50b452_buildPrimType(jule::Str("u32", 3)), 20)});
jule::Ptr<_20d4de28c_TypeKind> _20d56519d_primU64 = jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(_20d50b452_buildPrimType(jule::Str("u64", 3)), 20)});
jule::Ptr<_20d4de28c_TypeKind> _20d565467_primF32 = jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(_20d50b452_buildPrimType(jule::Str("f32", 3)), 20)});
jule::Ptr<_20d4de28c_TypeKind> _20d565731_primF64 = jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(_20d50b452_buildPrimType(jule::Str("f64", 3)), 20)});
jule::Str _20e02bb0e_stdPackageInternalNosafe = jule::Str("std::internal::nosafe", 21);
jule::Map<jule::Uintptr,_20e02c04e_stdCacheData> _20e02c47d_stdCache = nullptr;
jule::Bool _20e02dced_Copy = false;
jule::Bool _20e02e10b_Deadcode = false;
jule::Bool _20e02e3c5_Append = false;
jule::Bool _20e02e6d3_Math = false;
jule::Bool _20e02e99c_Access = false;
jule::Bool _20e02ec66_Inline = false;
jule::Bool _20e030030_Ptr = false;
jule::Bool _20e030409_Cond = false;
jule::Bool _20e0306c3_Str = false;
jule::Bool _20e03098c_Slice = false;
jule::Bool _20e030c56_Assign = false;
jule::Bool _20e031020_StdInternalNosafe = false;
jule::Bool _20db7c166_exprEnabled = false;
jule::Bool _20db7c41e_scopeEnabled = false;
jule::Bool _20db7c6d8_stdEnabled = false;
jule::Array<jule::U64,12> _20ebde9d0_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _20ea19e59_assignArgName = jule::Str("__jule_assign_arg", 17);
jule::Ptr<_2248692e3_RangeTable> _22481329d_Upper = _224805a98__LU;
jule::Ptr<_2248692e3_RangeTable> _22480bc47_Letter = _224804aa8__L;





std::ostream &operator<<(std::ostream &_Stream, _223ee6da0_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline _2240a0ad5_StrBuilder static__2240a0e04_New(jule::I64 _1519_cap) {
	if ((_1519_cap < 0LL)) {
		jule::panic(jule::Str("std::strings: StrBuilder.New: cap < 0", 37) + jule::Str("\nlocation: std/internal/strings/builder.jule:17:13"));;
	};
	return _2240a0ad5_StrBuilder{._field_buf=jule::Slice<jule::U8>::alloc(0LL, _1519_cap, 0)};;
}



inline void _2240a95e4_Write(_2240a0ad5_StrBuilder* _self_, jule::Slice<jule::U8> _2524_b) {
	((*(_self_))._field_buf).append(_2524_b);;
}



inline void _2240a989c_WriteStr(_2240a0ad5_StrBuilder* _self_, jule::Str _3027_s) {
	((*(_self_))._field_buf).append(_223dd6124_Stobs(&(_3027_s)));;
}



inline void _2240a9b55_WriteByte(_2240a0ad5_StrBuilder* _self_, jule::U8 _3528_b) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(_3528_b); };
}



inline jule::Str _2240aa194_Str(_2240a0ad5_StrBuilder* _self_) {
	return static_cast<jule::Str>((*(_self_))._field_buf);;
}



inline void _2240aa392_Clear(_2240a0ad5_StrBuilder* _self_) {
	(*(_self_))._field_buf=(*(_self_))._field_buf.slice(0LL, 0LL);
}



inline jule::I64 _2240aa628_Len(_2240a0ad5_StrBuilder* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_buf.len());;
}



inline jule::Slice<jule::U8> _2240aab45_Buf(_2240a0ad5_StrBuilder* _self_) {
	return (*(_self_))._field_buf;;
}



inline void _2240aaded_SetBuf(_2240a0ad5_StrBuilder* _self_, jule::Slice<jule::U8> _7536_buf) {
	(*(_self_))._field_buf=_7536_buf;
}







std::ostream &operator<<(std::ostream &_Stream, _2240a0ad5_StrBuilder _Src) {
	_Stream << _2240aa194_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22486880e_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _224868d3c_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2248692e3_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _227268e21_index(_2272689c0_lazyBuff* _self_, jule::I64 _5524_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5524_i];;
	};
	return (*(_self_))._field_path[_5524_i];;
}



inline void _2272691c9_append(_2272689c0_lazyBuff* _self_, jule::U8 _6225_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6225_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len(), 0);
		jule::copy(((*(_self_))._field_buff), ((*(_self_))._field_path.slice(0LL, (*(_self_))._field_w)));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6225_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _227269460_string(_2272689c0_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + static_cast<jule::Str>((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}







std::ostream &operator<<(std::ostream &_Stream, _2272689c0_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _223dd0706_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_223dd0706_DirEntry>>> static__22726b709_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_223dd0706_DirEntry>> __jule_func_result;
	jule::Slice<jule::U16> _1613_utf16Path = _223d8dac1_Utf16FromStr(_22726a241_Join(jule::Slice<jule::Str>::make({_1520_path,jule::Str("*", 1)})));;
	WIN32_FIND_DATAW _1717_data = (WIN32_FIND_DATAW){};;
	jule::Uintptr _1813_handle = _223dbba44_FindFirstFile((&(_1613_utf16Path[0LL])), (&(_1717_data)));;
	if ((_1813_handle == jule::MAX_U64)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_223dd0706_DirEntry>>>(jule::Any(), __jule_func_result);;
	};
	for (;;) {
		{
			jule::Ptr<_223dd0706_DirEntry> _2321_entry = jule::new_ptr<_223dd0706_DirEntry>(_223dd0706_DirEntry{._field_Name=_223d8e198_U16PtrToStr(((jule::U16*)(_1717_data.cFileName))), });;
			(*(_2321_entry))._field_Stat=({
				auto except = static__22726c562_Of(_22726a241_Join(jule::Slice<jule::Str>::make({_1520_path,(*(_2321_entry))._field_Name})));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_223dd0706_DirEntry>>>(except.error);
				} jule::Ptr<_223ddd57c_Status>(nullptr);});
			});
			{ jule::Slice<jule::Ptr<_223dd0706_DirEntry>> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(_2321_entry); };
			if ((_223dbbdb8_FindNextFile(_1813_handle, (&(_1717_data))) == 0LL)) {
				goto _iter_end_210aa08a1;
			};
		}
	_iter_next_210aa08a1:;
	}
	_iter_end_210aa08a1:;;
	_223dbc182_FindClose(_1813_handle);
	return jule::Exceptional<jule::Slice<jule::Ptr<_223dd0706_DirEntry>>>(jule::Any(), __jule_func_result);;
}



inline jule::VoidExceptional static__22726b93a_Create(jule::Str _3922_path) {
	jule::Slice<jule::U16> _4413_utf16Path = _223d8dac1_Utf16FromStr(_3922_path);;
	if ((!(_223db9745_CreateDirectory((&(_4413_utf16Path[0LL])))))) {
		return jule::VoidExceptional(jule::Any(_223dd0151_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional static__22726bb6b_Remove(jule::Str _5322_path) {
	jule::Slice<jule::U16> _5413_utf16Path = _223d8dac1_Utf16FromStr(_5322_path);;
	if ((!(_223db9a0e_RemoveDirectory((&(_5413_utf16Path[0LL])))))) {
		return jule::VoidExceptional(jule::Any(_223dd0151_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _223dd096a_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_223ddac3e_File> static__223ddb16d_New(jule::Uintptr _4619_handle) {
	return jule::new_ptr<_223ddac3e_File>(_223ddac3e_File{._field_handle=_4619_handle});;
}



inline jule::Exceptional<jule::Ptr<_223ddac3e_File>> static__223ddb437_Create(jule::Str _5622_path) {
	return jule::Exceptional<jule::Ptr<_223ddac3e_File>>(jule::Any(), ({
		auto except = static__223eeab84_Open(_5622_path, static_cast<jule::I64>(770LL), 438LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Ptr<_223ddac3e_File>>(except.error);
		} jule::Ptr<_223ddac3e_File>(nullptr);});
	}));;
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__223ddb701_Read(jule::Str _6820_path) {
	jule::Ptr<_223ddd57c_Status> _6913_s = ({
		auto except = static__22726c562_Of(_6820_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_223ddd57c_Status>(nullptr);});
	});;
	if ((!(_223dddbdc_IsReg(_6913_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(static_cast<jule::I64>(14LL), &__jule_any_type0));
	};
	if ((_223ddde73_Size(_6913_s.ptr()) == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), jule::Slice<jule::U8>::alloc(0LL, 0LL, 0));;
	};
	jule::Ptr<_223ddac3e_File> _7917_f = ({
		auto except = static__223eeab84_Open(_6820_path, static_cast<jule::I64>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_223ddac3e_File>(nullptr);});
	});;
	__JULE_DEFER({
		({
			auto except = _223ddc9cc_Close(_7917_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:80:17"));
		});
	});;
	jule::Slice<jule::U8> _8217_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_223ddde73_Size(_6913_s.ptr())), static_cast<jule::I64>(_223ddde73_Size(_6913_s.ptr())), 0);;
	jule::I64 _8313_n = ({
		auto except = _223eeb68a_Read(_7917_f.ptr(), _8217_buff);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} 0;});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), _8217_buff.slice(0LL, _8313_n));;
}



inline jule::VoidExceptional static__223ddba97_Write(jule::Str _9221_path, jule::Slice<jule::U8> _9232_data, jule::I64 _9246_perm) {
	jule::Ptr<_223ddac3e_File> _9317_f = ({
		auto except = static__223eeab84_Open(_9221_path, static_cast<jule::I64>(769LL), _9246_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional(except.error);
		} jule::Ptr<_223ddac3e_File>(nullptr);});
	});;
	({
		auto except = _223eeb349_Write(_9317_f.ptr(), _9232_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _223ddc9cc_Close(_9317_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _223ddc9cc_Close(_223ddac3e_File* _self_) {
	if ((_223dbe63a_Close(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(_223dd0151_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::Ptr<_223ddac3e_File>> static__223eeab84_Open(jule::Str _2120_path, jule::I64 _2131_flag, jule::I64 _2144_mode) {
	jule::Slice<jule::U16> _2213_utf16Path = _223d8dac1_Utf16FromStr(_2120_path);;
	jule::I64 _2313_handle = _223db8865_Wopen((&(_2213_utf16Path[0LL])), static_cast<jule::I64>(_2131_flag), _2144_mode);;
	if ((_2313_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_223ddac3e_File>>(jule::Any(_223dd0151_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::Ptr<_223ddac3e_File>>(jule::Any(), static__223ddb16d_New(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_2313_handle))));;
}



inline jule::VoidExceptional static__223eeadb5_Remove(jule::Str _3422_path) {
	jule::Slice<jule::U16> _3513_utf16Path = _223d8dac1_Utf16FromStr(_3422_path);;
	if ((!(_223db947b_DeleteFile((&(_3513_utf16Path[0LL])))))) {
		return jule::VoidExceptional(jule::Any(_223dd0151_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _223eeb349_Write(_223ddac3e_File* _self_, jule::Slice<jule::U8> _4924_buff) {
	jule::I64 __jule_func_result = 0;
	if ((_4924_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	if (_223eeba0e_isConsoleHandle((*(_self_))._field_handle)) {
		jule::Slice<jule::U16> _5517_utf16Buff = _223d8dac1_Utf16FromStr(static_cast<jule::Str>(_4924_buff));;
		jule::Bool _5617_ok = _223dbaec7_WriteConsole((*(_self_))._field_handle, (&(_5517_utf16Buff[0LL])), static_cast<jule::I64>(_5517_utf16Buff.len()), &(__jule_func_result), nullptr);;
		if ((!(_5617_ok))) {
			return jule::Exceptional<jule::I64>(jule::Any(_223dd0151_getLastFsError(), &__jule_any_type0));
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_223dbea69_Write(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), (&(_4924_buff[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_4924_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_223dd0151_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::Exceptional<jule::I64> _223eeb68a_Read(_223ddac3e_File* _self_, jule::Slice<jule::U8> _7927_buff) {
	jule::I64 __jule_func_result = 0;
	if ((_7927_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	if (_223eeba0e_isConsoleHandle((*(_self_))._field_handle)) {
		jule::Slice<jule::U16> _8521_codepage = jule::Slice<jule::U16>::alloc(_7927_buff.len(), _7927_buff.len(), 0);;
		jule::Bool _8617_ok = _223dbb4b1_ReadConsole((*(_self_))._field_handle, (&(_8521_codepage[0LL])), static_cast<jule::I64>(_7927_buff.len()), &(__jule_func_result));;
		if ((!(_8617_ok))) {
			return jule::Exceptional<jule::I64>(jule::Any(_223dd0151_getLastFsError(), &__jule_any_type0));
		};
		jule::Slice<jule::I32> _9117_runes = _223d8d52c_Decode(_8521_codepage.slice(0LL, __jule_func_result));;
		__jule_func_result=0LL;
		{
			auto expr = &(_9117_runes);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_210abe617:;
			if (it != expr_end) {
				jule::I32 *_9320_r = it;
				{
					jule::I64 _9421_size = _223ee8654_RuneLen((*(_9320_r)));;
					if (((__jule_func_result + _9421_size) > _7927_buff.len())) {
						goto _iter_end_210abe617;
					};
					_223ee8aa5_EncodeRune(_7927_buff.slice(__jule_func_result), (*(_9320_r)));
					__jule_func_result+=_9421_size;
				}
				_iter_next_210abe617:;
				++it;
				goto _iter_begin_210abe617;
			}
			_iter_end_210abe617:;
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_223dbe294_Read(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), (&(_7927_buff[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_7927_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_223dd0151_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}







std::ostream &operator<<(std::ostream &_Stream, _223ddac3e_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _223ddd956_IsDir(_223ddd57c_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL));;
}



inline jule::Bool _223dddbdc_IsReg(_223ddd57c_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(2LL)) == static_cast<jule::I64>(2LL));;
}



inline jule::U64 _223ddde73_Size(_223ddd57c_Status* _self_) {
	return (*(_self_))._field_size;;
}



inline jule::Exceptional<jule::Ptr<_223ddd57c_Status>> static__22726c562_Of(jule::Str _1218_path) {
	if (_1218_path.empty()) {
		return jule::Exceptional<jule::Ptr<_223ddd57c_Status>>(jule::Any(static_cast<jule::I64>(4LL), &__jule_any_type0));
	};
	jule::Slice<jule::U16> _1613_utf16Path = _223d8dac1_Utf16FromStr(_1218_path);;
	struct _stat _1717_handle = (struct _stat){};;
	jule::I64 _1813_code = _223db8436_Wstat((&(_1613_utf16Path[0LL])), (&(_1717_handle)));;
	if ((_1813_code == -1LL)) {
		return jule::Exceptional<jule::Ptr<_223ddd57c_Status>>(jule::Any(_223dd0151_getLastFsError(), &__jule_any_type0));
	};
	jule::Ptr<_223ddd57c_Status> _2217_stat = jule::new_ptr<_223ddd57c_Status>();;
	(*(_2217_stat))._field_size=_1717_handle.st_size;
	if (((_1717_handle.st_mode & 16384LLU) == 16384LLU)) {
		(*(_2217_stat))._field_mode|=static_cast<jule::I64>(1LL);
	} else if (((_1717_handle.st_mode & 32768LLU) == 32768LLU)) {
		(*(_2217_stat))._field_mode|=static_cast<jule::I64>(2LL);
	};
	return jule::Exceptional<jule::Ptr<_223ddd57c_Status>>(jule::Any(), _2217_stat);;
}







std::ostream &operator<<(std::ostream &_Stream, _223ddd57c_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2273ba072_cmdAttrs _Src) {
	_Stream << "cmdAttrs{";
	_Stream << "hProcess:" << _Src._field_hProcess << ", ";
	_Stream << "hThread:" << _Src._field_hThread;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22730be5e_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20b037557_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20b038206_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20b05032d_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20b047721_set(_20b050d56_decimal* _self_, jule::Slice<jule::U8> _23822_s) {
	jule::Bool __jule_func_result = false;
	jule::I64 _23917_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_23917_i >= _23822_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23822_s[_23917_i] == '+')) {
			_case_begin_211120d77:;
			{
				(_23917_i)++;
			}
		}
		else if ((_23822_s[_23917_i] == '-')) {
			_case_begin_211121075:;
			{
				(*(_self_))._field_neg=true;
				(_23917_i)++;
			}
		}
		_match_end_211120e87:;
	};
	jule::Bool _25617_sawdot = false;;
	jule::Bool _25717_sawdigits = false;;
	for (; (_23917_i < _23822_s.len()); (_23917_i)++) {
		{
			{
				
				if ((_23822_s[_23917_i] == '_')) {
					_case_begin_211122a27:;
					{
						goto _iter_next_211122384;
					}
				}
				else if ((_23822_s[_23917_i] == '.')) {
					_case_begin_211122a9e:;
					{
						if (_25617_sawdot) {
							return __jule_func_result;;
						};
						_25617_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_211122384;
					}
				}
				else if ((('0' <= _23822_s[_23917_i]) && (_23822_s[_23917_i] <= '9'))) {
					_case_begin_211122b26:;
					{
						_25717_sawdigits=true;
						if (((_23822_s[_23917_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_211122384;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23822_s[_23917_i];
							((*(_self_))._field_nd)++;
						} else if ((_23822_s[_23917_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_211122384;
					}
				}
				_match_end_211122906:;
			};
			goto _iter_end_211122384;
		}
	_iter_next_211122384:;
	}
	_iter_end_211122384:;;
	if ((!(_25717_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_25617_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_23917_i < _23822_s.len()) && (_20b042bb1_lower(_23822_s[_23917_i]) == 'e'))) {
		(_23917_i)++;
		if ((_23917_i >= _23822_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _30221_esign = 1LL;;
		if ((_23822_s[_23917_i] == '+')) {
			(_23917_i)++;
		} else if ((_23822_s[_23917_i] == '-')) {
			(_23917_i)++;
			_30221_esign=-1LL;
		};
		if ((((_23917_i >= _23822_s.len()) || (_23822_s[_23917_i] < '0')) || (_23822_s[_23917_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _31221_e = 0LL;;
		for (; ((_23917_i < _23822_s.len()) && ((('0' <= _23822_s[_23917_i]) && (_23822_s[_23917_i] <= '9')) || (_23822_s[_23917_i] == '_'))); (_23917_i)++) {
			{
				if ((_23822_s[_23917_i] == '_')) {
					goto _iter_next_2111287db;
				};
				if ((_31221_e < 10000LL)) {
					_31221_e=static_cast<jule::I64>((((_31221_e * 10LL) + static_cast<jule::I64>(_23822_s[_23917_i])) - '0'));
				};
			}
		_iter_next_2111287db:;
		}
		_iter_end_2111287db:;;
		(*(_self_))._field_dp+=(_31221_e * _30221_esign);
	};
	if ((_23917_i != _23822_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _20b047a62_floatBits(_20b050d56_decimal* _self_, _20b037557_floatInfo* _33229_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _33317_exp = 0LL;;
	jule::U64 _33417_mant = 0LLU;;
	if (((*(_self_))._field_nd == 0LL)) {
		_33417_mant=0LLU;
		_33317_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_21113d009;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_21113464e;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_33417_mant=0LLU;
		_33317_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_21113d009;
	};
	_33317_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I64 _35921_n = 0LL;;
			if (((*(_self_))._field_dp >= _20b0473d0_powtab.len())) {
				_35921_n=27LL;
			} else {
				_35921_n=_20b0473d0_powtab[(*(_self_))._field_dp];
			};
			_20b0514b6_shift(_self_, static_cast<jule::I64>((-(_35921_n))));
			_33317_exp+=_35921_n;
		}
	_iter_next_21112e319:;
	}
	_iter_end_21112e319:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I64 _36921_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _20b0473d0_powtab.len())) {
				_36921_n=27LL;
			} else {
				_36921_n=_20b0473d0_powtab[(-((*(_self_))._field_dp))];
			};
			_20b0514b6_shift(_self_, _36921_n);
			_33317_exp-=_36921_n;
		}
	_iter_next_2111356c7:;
	}
	_iter_end_2111356c7:;;
	(_33317_exp)--;
	if ((_33317_exp < ((*(_33229_flt))._field_bias + 1LL))) {
		jule::I64 _38617_n = (((*(_33229_flt))._field_bias + 1LL) - _33317_exp);;
		_20b0514b6_shift(_self_, static_cast<jule::I64>((-(_38617_n))));
		_33317_exp+=_38617_n;
	};
	if (((_33317_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
		goto _julec_label_21113464e;
	};
	_20b0514b6_shift(_self_, static_cast<jule::I64>(static_cast<jule::I64>((1LL + (*(_33229_flt))._field_mantbits))));
	_33417_mant=static_cast<jule::U64>(_20b052066_roundedInteger(_self_));
	if ((_33417_mant == (2LLU << (*(_33229_flt))._field_mantbits))) {
		_33417_mant>>=1LLU;
		(_33317_exp)++;
		if (((_33317_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
			goto _julec_label_21113464e;
		};
	};
	if (((_33417_mant & (1LLU << (*(_33229_flt))._field_mantbits)) == 0LLU)) {
		_33317_exp=(*(_33229_flt))._field_bias;
	};
	goto _julec_label_21113d009;
	_julec_label_21113464e:;
	_33417_mant=0LLU;
	_33317_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << (*(_33229_flt))._field_expbits) - 1LLU) + static_cast<jule::U64>((*(_33229_flt))._field_bias))));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_21113d009:;
	jule::U64 _42217_bits = (_33417_mant & ((1LLU << (*(_33229_flt))._field_mantbits) - 1LLU));;
	_42217_bits|=(static_cast<jule::U64>(((_33317_exp - (*(_33229_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) << (*(_33229_flt))._field_mantbits);
	if ((*(_self_))._field_neg) {
		_42217_bits|=((1LLU << (*(_33229_flt))._field_mantbits) << (*(_33229_flt))._field_expbits);
	};
	__jule_func_result.__jule_result_arg0 = _42217_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _20b05120d_assign(_20b050d56_decimal* _self_, jule::U64 _15129_v) {
	jule::Array<jule::U8,24> _15217_buf = jule::Array<jule::U8,24>();;
	jule::I64 _15517_n = 0LL;;
	while ((_15129_v > 0LLU)) {
		{
			jule::U64 _15717_v1 = (_15129_v / 10LLU);;
			_15129_v-=(10LLU * _15717_v1);
			_15217_buf[_15517_n]=static_cast<jule::U8>(static_cast<jule::U8>((_15129_v + '0')));
			(_15517_n)++;
			_15129_v=_15717_v1;
		}
	_iter_next_211141b56:;
	}
	_iter_end_211141b56:;;
	(*(_self_))._field_nd=0LL;
	(_15517_n)--;
	for (; (_15517_n >= 0LL); (_15517_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_15217_buf[_15517_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_2111425b3:;
	}
	_iter_end_2111425b3:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_20b0526a4_trim(_self_);
}



inline void _20b0514b6_shift(_20b050d56_decimal* _self_, jule::I64 _17628_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_211144571:;
		}
		else if ((_17628_k > 0LL)) {
			_case_begin_2111445e8:;
			{
				while ((_17628_k > 60LL)) {
					{
						_20b0531ee_leftShift(_self_, 60LLU);
						_17628_k-=60LL;
					}
				_iter_next_211145242:;
				}
				_iter_end_211145242:;;
				_20b0531ee_leftShift(_self_, static_cast<jule::U64>(static_cast<jule::U64>(_17628_k)));
			}
		}
		else if ((_17628_k < 0LL)) {
			_case_begin_211144670:;
			{
				while ((_17628_k < -60LL)) {
					{
						_20b052990_rightShift(_self_, 60LLU);
						_17628_k+=60LL;
					}
				_iter_next_2111451ba:;
				}
				_iter_end_2111451ba:;;
				_20b052990_rightShift(_self_, static_cast<jule::U64>(static_cast<jule::U64>((-(_17628_k)))));
			}
		}
		_match_end_211144450:;
	};
}



inline void _20b05176e_roundDown(_20b050d56_decimal* _self_, jule::I64 _19628_nd) {
	if (((_19628_nd < 0LL) || (_19628_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_19628_nd;
	_20b0526a4_trim(_self_);
}



inline void _20b051a27_roundUp(_20b050d56_decimal* _self_, jule::I64 _20526_nd) {
	if (((_20526_nd < 0LL) || (_20526_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I64 _21117_i = (_20526_nd - 1LL);;
	for (; (_21117_i >= 0LL); (_21117_i)--) {
		{
			jule::U8 _21317_c = (*(_self_))._field_d[_21117_i];;
			if ((_21317_c < '9')) {
				((*(_self_))._field_d[_21117_i])++;
				(*(_self_))._field_nd=static_cast<jule::I64>((_21117_i + 1LL));
				return;;
			};
		}
	_iter_next_21114871d:;
	}
	_iter_end_21114871d:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _20b051cd0_round(_20b050d56_decimal* _self_, jule::I64 _23224_nd) {
	if (((_23224_nd < 0LL) || (_23224_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_20b053573_shouldRoundUp(_self_, _23224_nd)) {
		_20b051a27_roundUp(_self_, _23224_nd);
	} else {
		_20b05176e_roundDown(_self_, _23224_nd);
	};
}



inline jule::U64 _20b052066_roundedInteger(_20b050d56_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I64 _24917_i = 0LL;;
	jule::U64 _25017_n = 0LLU;;
	for (; ((_24917_i < (*(_self_))._field_dp) && (_24917_i < (*(_self_))._field_nd)); (_24917_i)++) {
		{
			_25017_n=static_cast<jule::U64>(((_25017_n * 10LLU) + static_cast<jule::U64>(((*(_self_))._field_d[_24917_i] - '0'))));
		}
	_iter_next_21114b644:;
	}
	_iter_end_21114b644:;;
	for (; (_24917_i < (*(_self_))._field_dp); (_24917_i)++) {
		{
			_25017_n*=10LLU;
		}
	_iter_next_21114caeb:;
	}
	_iter_end_21114caeb:;;
	if (_20b053573_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_25017_n)++;
	};
	return _25017_n;;
}







std::ostream &operator<<(std::ostream &_Stream, _20b050d56_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20b0655eb_Const> static__20b065a3b_NewI64(jule::I64 _1622_x) {
	return jule::new_ptr<_20b0655eb_Const>(_20b0655eb_Const{._field_data=jule::Any(_1622_x, &__jule_any_type1)});;
}



inline jule::Ptr<_20b0655eb_Const> static__20b065d05_NewU64(jule::U64 _1922_x) {
	return jule::new_ptr<_20b0655eb_Const>(_20b0655eb_Const{._field_data=jule::Any(_1922_x, &__jule_any_type2)});;
}



inline jule::Ptr<_20b0655eb_Const> static__20b0660be_NewBool(jule::Bool _2223_x) {
	return jule::new_ptr<_20b0655eb_Const>(_20b0655eb_Const{._field_data=jule::Any(_2223_x, &__jule_any_type3)});;
}



inline jule::Ptr<_20b0655eb_Const> static__20b066388_NewStr(jule::Str _2522_x) {
	return jule::new_ptr<_20b0655eb_Const>(_20b0655eb_Const{._field_data=jule::Any(_2522_x, &__jule_any_type4)});;
}



inline jule::Ptr<_20b0655eb_Const> static__20b066652_NewF64(jule::F64 _2822_x) {
	return jule::new_ptr<_20b0655eb_Const>(_20b0655eb_Const{._field_data=jule::Any(_2822_x, &__jule_any_type5)});;
}



inline jule::Ptr<_20b0655eb_Const> static__20b066861_NewNil(void) {
	return jule::new_ptr<_20b0655eb_Const>(_20b0655eb_Const{._field_data=nullptr});;
}



inline jule::I64 _20b066ec1_ReadI64(_20b0655eb_Const* _self_) {
	if ((!(_20b0695bc_IsI64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1));;
}



inline jule::U64 _20b067257_ReadU64(_20b0655eb_Const* _self_) {
	if ((!(_20b069853_IsU64(_self_)))) {
		return 0LLU;;
	};
	return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2));;
}



inline jule::Bool _20b0674dd_ReadBool(_20b0655eb_Const* _self_) {
	if ((!(_20b069ad9_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type3);;
}



inline jule::Str _20b067774_ReadStr(_20b0655eb_Const* _self_) {
	if ((!(_20b069d70_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type4);;
}



inline jule::F64 _20b067a0a_ReadF64(_20b0655eb_Const* _self_) {
	if ((!(_20b06a106_IsF64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5));;
}



inline jule::I64 _20b067c91_AsI64(_20b0655eb_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_2111c0553:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_2111c1213:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_2111c1279:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5)));;
			}
		}
		else {
			_case_begin_2111c119c:;
			{
				return 0LL;;
			}
		}
		_match_end_2111c1147:;
	};
}



inline jule::U64 _20b068027_AsU64(_20b0655eb_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_2111c1b1a:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2));;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_2111c2a2d:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_2111c2a94:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5)));;
			}
		}
		else {
			_case_begin_2111c192d:;
			{
				return 0LLU;;
			}
		}
		_match_end_2111c18c8:;
	};
}



inline jule::F64 _20b0682ad_AsF64(_20b0655eb_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_2111c47ee:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5));;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_2111c339c:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_2111c42b0:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2)));;
			}
		}
		else {
			_case_begin_2111c31b0:;
			{
				return 0LL;;
			}
		}
		_match_end_2111c315a:;
	};
}



inline void _20b068566_SetI64(_20b0655eb_Const* _self_, jule::I64 _13825_x) {
	(*(_self_))._field_data=jule::Any(_13825_x, &__jule_any_type1);
}



inline void _20b06881e_SetU64(_20b0655eb_Const* _self_, jule::U64 _14125_x) {
	(*(_self_))._field_data=jule::Any(_14125_x, &__jule_any_type2);
}



inline void _20b068ac7_SetBool(_20b0655eb_Const* _self_, jule::Bool _14426_x) {
	(*(_self_))._field_data=jule::Any(_14426_x, &__jule_any_type3);
}



inline void _20b068d80_SetStr(_20b0655eb_Const* _self_, jule::Str _14725_x) {
	(*(_self_))._field_data=jule::Any(_14725_x, &__jule_any_type4);
}



inline void _20b069138_SetF64(_20b0655eb_Const* _self_, jule::F64 _15025_x) {
	(*(_self_))._field_data=jule::Any(_15025_x, &__jule_any_type5);
}



inline jule::Bool _20b0695bc_IsI64(_20b0655eb_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_2111c803e:;
			{
				return true;;
			}
		}
		else {
			_case_begin_2111c82c5:;
			{
				return false;;
			}
		}
		_match_end_2111c8270:;
	};
}



inline jule::Bool _20b069853_IsU64(_20b0655eb_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_2111c8935:;
			{
				return true;;
			}
		}
		else {
			_case_begin_2111c8b88:;
			{
				return false;;
			}
		}
		_match_end_2111c8b33:;
	};
}



inline jule::Bool _20b069ad9_IsBool(_20b0655eb_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_2111c9392:;
			{
				return true;;
			}
		}
		else {
			_case_begin_2111c95e5:;
			{
				return false;;
			}
		}
		_match_end_2111c9590:;
	};
}



inline jule::Bool _20b069d70_IsStr(_20b0655eb_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_2111c9cee:;
			{
				return true;;
			}
		}
		else {
			_case_begin_2111ca052:;
			{
				return false;;
			}
		}
		_match_end_2111c9eec:;
	};
}



inline jule::Bool _20b06a106_IsF64(_20b0655eb_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_2111ca75b:;
			{
				return true;;
			}
		}
		else {
			_case_begin_2111ca9ae:;
			{
				return false;;
			}
		}
		_match_end_2111ca959:;
	};
}



inline jule::Bool _20b06a38c_IsNil(_20b0655eb_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _20b06aa1e_And(_20b0655eb_Const* _self_, _20b0655eb_Const _23818_x) {
	{
		
		if ((_20b069ad9_IsBool(_self_) && _20b069ad9_IsBool(&_23818_x))) {
			_case_begin_2111cecb0:;
			{
				return (_20b0674dd_ReadBool(_self_) && _20b0674dd_ReadBool(&_23818_x));;
			}
		}
		else {
			_case_begin_2111cec05:;
			{
				return false;;
			}
		}
		_match_end_2111ce81a:;
	};
}



inline jule::Bool _20b06ad60_Or(_20b0655eb_Const* _self_, _20b0655eb_Const _24917_x) {
	{
		
		if ((_20b069ad9_IsBool(_self_) && _20b069ad9_IsBool(&_24917_x))) {
			_case_begin_2111d10be:;
			{
				return (_20b0674dd_ReadBool(_self_) || _20b0674dd_ReadBool(&_24917_x));;
			}
		}
		else {
			_case_begin_2111d0761:;
			{
				return false;;
			}
		}
		_match_end_2111d06b7:;
	};
}



inline jule::Bool _20b06b1a1_Eq(_20b0655eb_Const* _self_, _20b0655eb_Const _26017_x) {
	{
		
		if (_20b06a38c_IsNil(_self_)) {
			_case_begin_2111d2400:;
			{
				return _20b06a38c_IsNil(&_26017_x);;
			}
		}
		else if (_20b069ad9_IsBool(_self_)) {
			_case_begin_2111d2477:;
			{
				return (_20b069ad9_IsBool(&_26017_x) && (_20b0674dd_ReadBool(_self_) == _20b0674dd_ReadBool(&_26017_x)));;
			}
		}
		else if (_20b069d70_IsStr(_self_)) {
			_case_begin_2111d26ec:;
			{
				return (_20b069d70_IsStr(&_26017_x) && (_20b067774_ReadStr(_self_) == _20b067774_ReadStr(&_26017_x)));;
			}
		}
		else if (_20b0695bc_IsI64(_self_)) {
			_case_begin_2111d2763:;
			{
				return (_20b066ec1_ReadI64(_self_) == _20b067c91_AsI64(&_26017_x));;
			}
		}
		else if (_20b069853_IsU64(_self_)) {
			_case_begin_2111d27c9:;
			{
				return (_20b067257_ReadU64(_self_) == _20b068027_AsU64(&_26017_x));;
			}
		}
		else if (_20b06a106_IsF64(_self_)) {
			_case_begin_2111d2840:;
			{
				return (_20b067a0a_ReadF64(_self_) == _20b0682ad_AsF64(&_26017_x));;
			}
		}
		else {
			_case_begin_2111d1a3c:;
			{
				return false;;
			}
		}
		_match_end_2111d1993:;
	};
}



inline jule::Bool _20b06b4e2_Lt(_20b0655eb_Const* _self_, _20b0655eb_Const _28717_x) {
	{
		
		if (_20b069d70_IsStr(_self_)) {
			_case_begin_2111d60b3:;
			{
				return (_20b069d70_IsStr(&_28717_x) && (_20b067774_ReadStr(_self_) < _20b067774_ReadStr(&_28717_x)));;
			}
		}
		else if (_20b0695bc_IsI64(_self_)) {
			_case_begin_2111d6129:;
			{
				return (_20b066ec1_ReadI64(_self_) < _20b067c91_AsI64(&_28717_x));;
			}
		}
		else if (_20b069853_IsU64(_self_)) {
			_case_begin_2111d61a1:;
			{
				return (_20b067257_ReadU64(_self_) < _20b068027_AsU64(&_28717_x));;
			}
		}
		else if (_20b06a106_IsF64(_self_)) {
			_case_begin_2111d63d2:;
			{
				return (_20b067a0a_ReadF64(_self_) < _20b0682ad_AsF64(&_28717_x));;
			}
		}
		else {
			_case_begin_2111d2cd5:;
			{
				return false;;
			}
		}
		_match_end_2111d2c19:;
	};
}



inline jule::Bool _20b06b833_LtEq(_20b0655eb_Const* _self_, _20b0655eb_Const _31019_x) {
	{
		
		if (_20b069d70_IsStr(_self_)) {
			_case_begin_2111d8c75:;
			{
				return (_20b069d70_IsStr(&_31019_x) && (_20b067774_ReadStr(_self_) <= _20b067774_ReadStr(&_31019_x)));;
			}
		}
		else if (_20b0695bc_IsI64(_self_)) {
			_case_begin_2111d8cdb:;
			{
				return (_20b066ec1_ReadI64(_self_) <= _20b067c91_AsI64(&_31019_x));;
			}
		}
		else if (_20b069853_IsU64(_self_)) {
			_case_begin_2111d8d63:;
			{
				return (_20b067257_ReadU64(_self_) <= _20b068027_AsU64(&_31019_x));;
			}
		}
		else if (_20b06a106_IsF64(_self_)) {
			_case_begin_2111d9094:;
			{
				return (_20b067a0a_ReadF64(_self_) <= _20b0682ad_AsF64(&_31019_x));;
			}
		}
		else {
			_case_begin_2111d6921:;
			{
				return false;;
			}
		}
		_match_end_2111d6855:;
	};
}



inline jule::Bool _20b06bb74_Gt(_20b0655eb_Const* _self_, _20b0655eb_Const _33317_x) {
	{
		
		if (_20b069d70_IsStr(_self_)) {
			_case_begin_2111db937:;
			{
				return (_20b069d70_IsStr(&_33317_x) && (_20b067774_ReadStr(_self_) > _20b067774_ReadStr(&_33317_x)));;
			}
		}
		else if (_20b0695bc_IsI64(_self_)) {
			_case_begin_2111db99d:;
			{
				return (_20b066ec1_ReadI64(_self_) > _20b067c91_AsI64(&_33317_x));;
			}
		}
		else if (_20b069853_IsU64(_self_)) {
			_case_begin_2111dba25:;
			{
				return (_20b067257_ReadU64(_self_) > _20b068027_AsU64(&_33317_x));;
			}
		}
		else if (_20b06a106_IsF64(_self_)) {
			_case_begin_2111dbc56:;
			{
				return (_20b067a0a_ReadF64(_self_) > _20b0682ad_AsF64(&_33317_x));;
			}
		}
		else {
			_case_begin_2111d95d3:;
			{
				return false;;
			}
		}
		_match_end_2111d9517:;
	};
}



inline jule::Bool _20b06beb5_GtEq(_20b0655eb_Const* _self_, _20b0655eb_Const _35619_x) {
	{
		
		if (_20b069d70_IsStr(_self_)) {
			_case_begin_2111de5e9:;
			{
				return (_20b069d70_IsStr(&_35619_x) && (_20b067774_ReadStr(_self_) >= _20b067774_ReadStr(&_35619_x)));;
			}
		}
		else if (_20b0695bc_IsI64(_self_)) {
			_case_begin_2111de660:;
			{
				return (_20b066ec1_ReadI64(_self_) >= _20b067c91_AsI64(&_35619_x));;
			}
		}
		else if (_20b069853_IsU64(_self_)) {
			_case_begin_2111de6d7:;
			{
				return (_20b067257_ReadU64(_self_) >= _20b068027_AsU64(&_35619_x));;
			}
		}
		else if (_20b06a106_IsF64(_self_)) {
			_case_begin_2111de918:;
			{
				return (_20b067a0a_ReadF64(_self_) >= _20b0682ad_AsF64(&_35619_x));;
			}
		}
		else {
			_case_begin_2111dc295:;
			{
				return false;;
			}
		}
		_match_end_2111dc1c9:;
	};
}



inline jule::Bool _20b06c306_Add(_20b0655eb_Const* _self_, _20b0655eb_Const _37722_x) {
	{
		
		if (_20b069d70_IsStr(_self_)) {
			_case_begin_2111e22ab:;
			{
				if ((!(_20b069d70_IsStr(&_37722_x)))) {
					return false;;
				};
				_20b068d80_SetStr(_self_, (_20b067774_ReadStr(_self_) + _20b067774_ReadStr(&_37722_x)));
			}
		}
		else if (_20b06a106_IsF64(_self_)) {
			_case_begin_2111e2322:;
			{
				_20b069138_SetF64(_self_, static_cast<jule::F64>((_20b067a0a_ReadF64(_self_) + _20b0682ad_AsF64(&_37722_x))));
			}
		}
		else if (_20b0695bc_IsI64(_self_)) {
			_case_begin_2111e2399:;
			{
				if (_20b06a106_IsF64(&_37722_x)) {
					_20b069138_SetF64(_self_, static_cast<jule::F64>((_20b0682ad_AsF64(_self_) + _20b067a0a_ReadF64(&_37722_x))));
				} else {
					_20b068566_SetI64(_self_, static_cast<jule::I64>((_20b066ec1_ReadI64(_self_) + _20b067c91_AsI64(&_37722_x))));
				};
			}
		}
		else if (_20b069853_IsU64(_self_)) {
			_case_begin_2111e25ca:;
			{
				if (_20b06a106_IsF64(&_37722_x)) {
					_20b069138_SetF64(_self_, static_cast<jule::F64>((_20b0682ad_AsF64(_self_) + _20b067a0a_ReadF64(&_37722_x))));
				} else {
					_20b06881e_SetU64(_self_, static_cast<jule::U64>((_20b067257_ReadU64(_self_) + _20b068027_AsU64(&_37722_x))));
				};
			}
		}
		else {
			_case_begin_2111dee57:;
			{
				return false;;
			}
		}
		_match_end_2111ded8b:;
	};
	return true;;
}



inline jule::Bool _20b06c647_Sub(_20b0655eb_Const* _self_, _20b0655eb_Const _40622_x) {
	{
		
		if (_20b06a106_IsF64(_self_)) {
			_case_begin_2111e71d4:;
			{
				_20b069138_SetF64(_self_, static_cast<jule::F64>((_20b067a0a_ReadF64(_self_) - _20b0682ad_AsF64(&_40622_x))));
			}
		}
		else if (_20b0695bc_IsI64(_self_)) {
			_case_begin_2111e725b:;
			{
				if (_20b06a106_IsF64(&_40622_x)) {
					_20b069138_SetF64(_self_, static_cast<jule::F64>((_20b0682ad_AsF64(_self_) - _20b067a0a_ReadF64(&_40622_x))));
				} else {
					_20b068566_SetI64(_self_, static_cast<jule::I64>((_20b066ec1_ReadI64(_self_) - _20b067c91_AsI64(&_40622_x))));
				};
			}
		}
		else if (_20b069853_IsU64(_self_)) {
			_case_begin_2111e72d3:;
			{
				if (_20b06a106_IsF64(&_40622_x)) {
					_20b069138_SetF64(_self_, static_cast<jule::F64>((_20b0682ad_AsF64(_self_) - _20b067a0a_ReadF64(&_40622_x))));
				} else {
					_20b06881e_SetU64(_self_, static_cast<jule::U64>((_20b067257_ReadU64(_self_) - _20b068027_AsU64(&_40622_x))));
				};
			}
		}
		else {
			_case_begin_2111e69a8:;
			{
				return false;;
			}
		}
		_match_end_2111e68dc:;
	};
	return true;;
}



inline jule::Bool _20b06c988_Mul(_20b0655eb_Const* _self_, _20b0655eb_Const _43022_x) {
	{
		
		if (_20b06a106_IsF64(_self_)) {
			_case_begin_2111eb282:;
			{
				_20b069138_SetF64(_self_, static_cast<jule::F64>((_20b067a0a_ReadF64(_self_) * _20b0682ad_AsF64(&_43022_x))));
			}
		}
		else if (_20b0695bc_IsI64(_self_)) {
			_case_begin_2111eb309:;
			{
				if (_20b06a106_IsF64(&_43022_x)) {
					_20b069138_SetF64(_self_, static_cast<jule::F64>((_20b0682ad_AsF64(_self_) * _20b067a0a_ReadF64(&_43022_x))));
				} else {
					_20b068566_SetI64(_self_, static_cast<jule::I64>((_20b066ec1_ReadI64(_self_) * _20b067c91_AsI64(&_43022_x))));
				};
			}
		}
		else if (_20b069853_IsU64(_self_)) {
			_case_begin_2111eb381:;
			{
				if (_20b06a106_IsF64(&_43022_x)) {
					_20b069138_SetF64(_self_, static_cast<jule::F64>((_20b0682ad_AsF64(_self_) * _20b067a0a_ReadF64(&_43022_x))));
				} else {
					_20b06881e_SetU64(_self_, static_cast<jule::U64>((_20b067257_ReadU64(_self_) * _20b068027_AsU64(&_43022_x))));
				};
			}
		}
		else {
			_case_begin_2111ea913:;
			{
				return false;;
			}
		}
		_match_end_2111ea847:;
	};
	return true;;
}



inline jule::Bool _20b06ccc9_Div(_20b0655eb_Const* _self_, _20b0655eb_Const _45822_x) {
	{
		
		if (_20b06a106_IsF64(_self_)) {
			_case_begin_211200330:;
			{
				jule::F64 _46117_l = _20b0682ad_AsF64(&_45822_x);;
				if ((_46117_l == 0LL)) {
					return false;;
				};
				_20b069138_SetF64(_self_, static_cast<jule::F64>(jule::div(_20b067a0a_ReadF64(_self_),_46117_l)));
			}
		}
		else if (_20b0695bc_IsI64(_self_)) {
			_case_begin_2112003a7:;
			{
				jule::F64 _46717_l = _20b0682ad_AsF64(&_45822_x);;
				if ((_46717_l == 0LL)) {
					return false;;
				};
				_20b069138_SetF64(_self_, static_cast<jule::F64>(jule::div(_20b0682ad_AsF64(_self_),_46717_l)));
			}
		}
		else if (_20b069853_IsU64(_self_)) {
			_case_begin_21120042e:;
			{
				jule::F64 _47317_l = _20b0682ad_AsF64(&_45822_x);;
				if ((_47317_l == 0LL)) {
					return false;;
				};
				_20b069138_SetF64(_self_, static_cast<jule::F64>(jule::div(_20b0682ad_AsF64(_self_),_47317_l)));
			}
		}
		else {
			_case_begin_2111ee9b1:;
			{
				return false;;
			}
		}
		_match_end_2111ee8e5:;
	};
	return true;;
}



inline jule::Bool _20b06d11a_Mod(_20b0655eb_Const* _self_, _20b0655eb_Const _48722_x) {
	{
		
		if (_20b0695bc_IsI64(_self_)) {
			_case_begin_211204510:;
			{
				jule::I64 _49017_l = _20b067c91_AsI64(&_48722_x);;
				if ((_49017_l == 0LL)) {
					return false;;
				};
				_20b068566_SetI64(_self_, static_cast<jule::I64>(jule::mod(_20b066ec1_ReadI64(_self_),_49017_l)));
			}
		}
		else if (_20b069853_IsU64(_self_)) {
			_case_begin_211204587:;
			{
				jule::U64 _49617_l = _20b068027_AsU64(&_48722_x);;
				if ((_49617_l == 0LLU)) {
					return false;;
				};
				_20b06881e_SetU64(_self_, static_cast<jule::U64>(jule::mod(_20b067257_ReadU64(_self_),_49617_l)));
			}
		}
		else {
			_case_begin_211204455:;
			{
				return false;;
			}
		}
		_match_end_211203124:;
	};
	return true;;
}



inline jule::Bool _20b06d45b_BitwiseAnd(_20b0655eb_Const* _self_, _20b0655eb_Const _50929_x) {
	{
		
		if (_20b0695bc_IsI64(_self_)) {
			_case_begin_211207436:;
			{
				_20b068566_SetI64(_self_, static_cast<jule::I64>((_20b066ec1_ReadI64(_self_) & _20b067c91_AsI64(&_50929_x))));
			}
		}
		else if (_20b069853_IsU64(_self_)) {
			_case_begin_2112074ad:;
			{
				_20b06881e_SetU64(_self_, static_cast<jule::U64>((_20b067257_ReadU64(_self_) & _20b068027_AsU64(&_50929_x))));
			}
		}
		else {
			_case_begin_21120737b:;
			{
				return false;;
			}
		}
		_match_end_21120604a:;
	};
	return true;;
}



inline jule::Bool _20b06d79c_BitwiseOr(_20b0655eb_Const* _self_, _20b0655eb_Const _52328_x) {
	{
		
		if (_20b0695bc_IsI64(_self_)) {
			_case_begin_2112092b2:;
			{
				_20b068566_SetI64(_self_, static_cast<jule::I64>((_20b066ec1_ReadI64(_self_) | _20b067c91_AsI64(&_52328_x))));
			}
		}
		else if (_20b069853_IsU64(_self_)) {
			_case_begin_211209339:;
			{
				_20b06881e_SetU64(_self_, static_cast<jule::U64>((_20b067257_ReadU64(_self_) | _20b068027_AsU64(&_52328_x))));
			}
		}
		else {
			_case_begin_2112091e6:;
			{
				return false;;
			}
		}
		_match_end_21120912a:;
	};
	return true;;
}



inline jule::Bool _20b06dadd_Xor(_20b0655eb_Const* _self_, _20b0655eb_Const _53722_x) {
	{
		
		if (_20b0695bc_IsI64(_self_)) {
			_case_begin_21120b13d:;
			{
				_20b068566_SetI64(_self_, static_cast<jule::I64>((_20b066ec1_ReadI64(_self_) ^ _20b067c91_AsI64(&_53722_x))));
			}
		}
		else if (_20b069853_IsU64(_self_)) {
			_case_begin_21120b1b5:;
			{
				_20b06881e_SetU64(_self_, static_cast<jule::U64>((_20b067257_ReadU64(_self_) ^ _20b068027_AsU64(&_53722_x))));
			}
		}
		else {
			_case_begin_21120b072:;
			{
				return false;;
			}
		}
		_match_end_21120aea6:;
	};
	return true;;
}



inline jule::Bool _20b06de2e_Lshift(_20b0655eb_Const* _self_, _20b0655eb_Const _55125_x) {
	{
		
		if (_20b0695bc_IsI64(_self_)) {
			_case_begin_21120ceb9:;
			{
				jule::I64 _55417_l = _20b067c91_AsI64(_self_);;
				if ((_55417_l < 0LL)) {
					jule::U64 _55621_r = _20b068027_AsU64(&_55125_x);;
					_20b068566_SetI64(_self_, static_cast<jule::I64>((_55417_l << _55621_r)));
				} else {
					_20b06e616_lshiftUnsig(_self_, &(_55125_x));
				};
			}
		}
		else if (_20b069853_IsU64(_self_)) {
			_case_begin_21120d041:;
			{
				_20b06e616_lshiftUnsig(_self_, &(_55125_x));
			}
		}
		else {
			_case_begin_21120cded:;
			{
				return false;;
			}
		}
		_match_end_21120cd32:;
	};
	return true;;
}



inline jule::Bool _20b06e270_Rshift(_20b0655eb_Const* _self_, _20b0655eb_Const _57125_x) {
	{
		
		if (_20b0695bc_IsI64(_self_)) {
			_case_begin_211210593:;
			{
				jule::I64 _57417_l = _20b067c91_AsI64(_self_);;
				if ((_57417_l < 0LL)) {
					jule::U64 _57621_r = _20b068027_AsU64(&_57125_x);;
					_20b068566_SetI64(_self_, static_cast<jule::I64>((_57417_l >> _57621_r)));
				} else {
					_20b06e946_rshiftUnsig(_self_, &(_57125_x));
				};
			}
		}
		else if (_20b069853_IsU64(_self_)) {
			_case_begin_21121061a:;
			{
				_20b06e946_rshiftUnsig(_self_, &(_57125_x));
			}
		}
		else {
			_case_begin_2112104c7:;
			{
				return false;;
			}
		}
		_match_end_21121040b:;
	};
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _20b0655eb_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _20d351440_Prec(_20d3510bb_Token* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(57LLU) || _match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_21126991b:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_211269aa3:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(71LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_211269b19:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_211269b91:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_211269c18:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_21126929a:;
			{
				return 0LLU;;
			}
		}
		_match_end_211269201:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20d3510bb_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline void _20d356c70_Fill(_20d356885_File* _self_, jule::Slice<jule::U8> _1727_data) {
	(*(_self_))._field_Data=_1727_data;
}



inline jule::Str _20d357006_Dir(_20d356885_File* _self_) {
	return _22726ae34_Dir((*(_self_))._field_Path);;
}



inline jule::Str _20d35728c_Name(_20d356885_File* _self_) {
	return _22726aa8d_Base((*(_self_))._field_Path);;
}



inline jule::Str _20d357864_GetRow(_20d356885_File* _self_, jule::I64 _3821_row) {
	jule::I64 _3917_n = 0LL;;
	jule::I64 _4017_lineStart = 0LL;;
	jule::I64 _4117_i = 0LL;;
	for (; (_4117_i < (*(_self_))._field_Data.len()); (_4117_i)++) {
		{
			if (((*(_self_))._field_Data[_4117_i] != '\n')) {
				goto _iter_next_21126ed94;
			};
			(_3917_n)++;
			if ((_3917_n == _3821_row)) {
				return static_cast<jule::Str>((*(_self_))._field_Data.slice(_4017_lineStart, _4117_i));;
			};
			_4017_lineStart=static_cast<jule::I64>((_4117_i + 1LL));
		}
	_iter_next_21126ed94:;
	}
	_iter_end_21126ed94:;;
	return jule::Str();;
}







std::ostream &operator<<(std::ostream &_Stream, _20d356885_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3589a8_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _20d364eae_pushErr(_20d36492b_lex* _self_, jule::Str _44726_fmt, jule::Slice<jule::Any> _44739_args) {
	{ jule::Slice<_22730be5e_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_20d359778_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44726_fmt, _44739_args)); };
}



inline void _20d365520_lex(_20d36492b_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_20d367742_newLine(_self_);
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len())) {
		{
			jule::Ptr<_20d3510bb_Token> _46221_token = _20d368c2c_token(_self_);;
			if (((*(_46221_token))._field_Id != static_cast<jule::U64>(0LLU))) {
				{ jule::Slice<jule::Ptr<_20d3510bb_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_46221_token); };
			};
		}
	_iter_next_2112a3a65:;
	}
	_iter_end_2112a3a65:;;
}



inline jule::Str _20d365861_id(_20d36492b_lex* _self_, jule::Slice<jule::U8>* _47122_ln) {
	if (((*(_47122_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _47514_r = 0;;
	jule::I64 _47521_i = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _223ee79b6_DecodeRune((*(_47122_ln)));
		_47514_r = __jule_assign_result.__jule_result_arg0;
		_47521_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_47514_r != '_') && (!(_20d3547ea_IsLetter(_47514_r))))) {
		return jule::Str();;
	};
	while ((_47521_i < (*(_47122_ln)).len())) {
		{
			jule::I32 _48118_pr = 0;;
			jule::I64 _48122_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _223ee79b6_DecodeRune((*(_47122_ln)).slice(_47521_i));
				_48118_pr = __jule_assign_result.__jule_result_arg0;
				_48122_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_48118_pr != '_') && (!(_20d354d7d_IsDecimal(static_cast<jule::U8>(static_cast<jule::U8>(_48118_pr)))))) && (!(_20d3547ea_IsLetter(_48118_pr))))) {
				(*(_self_))._field_pos+=_47521_i;
				return static_cast<jule::Str>((*(_47122_ln)).slice(0LL, _47521_i));;
			};
			_47521_i+=_48122_n;
		}
	_iter_next_2112a73a4:;
	}
	_iter_end_2112a73a4:;;
	(*(_self_))._field_pos+=(*(_47122_ln)).len();
	return static_cast<jule::Str>((*(_47122_ln)));;
}



inline jule::Slice<jule::U8> _20d365ae7_resume(_20d36492b_lex* _self_) {
	jule::I64 _49617_i = (*(_self_))._field_pos;;
	for (; (_49617_i < (*((*(_self_))._field_file))._field_Data.len()); (_49617_i)++) {
		{
			jule::I32 _49817_r = static_cast<jule::I32>((*((*(_self_))._field_file))._field_Data[_49617_i]);;
			if (_20d354377_IsSpace(_49817_r)) {
				;
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _49817_r };
					
					if (_match_expr == '\n') {
						_case_begin_2112ab4eb:;
						{
							_20d367742_newLine(_self_);
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_2112ab562:;
						{
							(*(_self_))._field_column+=8LL;
						}
					}
					else {
						_case_begin_2112aadbe:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_2112aae57:;
				};
				goto _iter_next_2112a70c9;
			};
			jule::I64 _51321_j = _49617_i;;
			for (; (_51321_j < (*((*(_self_))._field_file))._field_Data.len()); (_51321_j)++) {
				{
					if (((*((*(_self_))._field_file))._field_Data[_51321_j] == '\n')) {
						goto _iter_end_2112aa033;
					};
				}
			_iter_next_2112aa033:;
			}
			_iter_end_2112aa033:;;
			return (*((*(_self_))._field_file))._field_Data.slice(_49617_i, _51321_j);;
		}
	_iter_next_2112a70c9:;
	}
	_iter_end_2112a70c9:;;
	return nullptr;;
}



inline void _20d365da0_lexLineComment(_20d36492b_lex* _self_, jule::Ptr<_20d3510bb_Token>* _52438_token) {
	jule::I64 _52513_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _52817_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if (((_52817_r == '\n') || (_52817_r == '\r'))) {
				goto _iter_end_2112ae07b;
			};
		}
	_iter_next_2112ae07b:;
	}
	_iter_end_2112ae07b:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		(*((*(_52438_token))))._field_Id=static_cast<jule::U64>(15LLU);
		(*((*(_52438_token))))._field_Kind=static_cast<jule::Str>((*((*(_self_))._field_file))._field_Data.slice(_52513_start, (*(_self_))._field_pos));
	};
}



inline void _20d366158_lexRangeComment(_20d36492b_lex* _self_, jule::Ptr<_20d3510bb_Token>* _53939_token) {
	jule::I64 _54013_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _54317_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_54317_r == '\r')) {
				goto _iter_next_2112b25bd;
			};
			if ((_54317_r == '\n')) {
				_20d367742_newLine(_self_);
				goto _iter_next_2112b25bd;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*((*(_self_))._field_file))._field_Data.len()) && (_54317_r == '*')) && ((*((*(_self_))._field_file))._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					(*((*(_53939_token))))._field_Id=static_cast<jule::U64>(15LLU);
					(*((*(_53939_token))))._field_Kind=static_cast<jule::Str>((*((*(_self_))._field_file))._field_Data.slice(_54013_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_2112b25bd:;
	}
	_iter_end_2112b25bd:;;
	_20d364eae_pushErr(_self_, jule::Str("missing block comment close", 27), jule::Slice<jule::Any>());
}



inline jule::Str _20d366499_num(_20d36492b_lex* _self_, jule::Slice<jule::U8>* _56723_txt) {
	jule::Str __jule_func_result;
	if (((*(_56723_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_20d363221_hexNum(_56723_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_2112b9d89;
	};
	__jule_func_result=_20d363045_octalNum(_56723_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_2112b9d89;
	};
	__jule_func_result=_20d35b912_binaryNum(_56723_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_2112b9d89;
	};
	__jule_func_result=_20d35b648_commonNum(_56723_txt);
	_julec_label_2112b9d89:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _20d3667da_escapeSeq(_20d36492b_lex* _self_, jule::Slice<jule::U8>* _58929_txt) {
	jule::Str _59017_seq = jule::Str();;
	if (((*(_58929_txt)).len() < 2LL)) {
		goto _julec_label_2112bce14;
	};
	{
		auto &_match_expr{ (*(_58929_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_2112bbd69:;
			{
				(*(_self_))._field_pos+=2LL;
				return static_cast<jule::Str>((*(_58929_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_2112bbdd0:;
			{
				_59017_seq=_20d36385e_bigUnicodePointEscape(_58929_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_2112bbe57:;
			{
				_59017_seq=_20d363b28_littleUnicodePointEscape(_58929_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_2112bbab1:;
			{
				_59017_seq=_20d363de2_hexByteEscape(_58929_txt);
			}
		}
		else {
			_case_begin_2112bb440:;
			{
				_59017_seq=_20d3641ab_byteEscape(_58929_txt);
			}
		}
		_match_end_2112bb9a1:;
	};
	_julec_label_2112bce14:;
	if (_59017_seq.empty()) {
		((*(_self_))._field_pos)++;
		_20d364eae_pushErr(_self_, jule::Str("invalid escape sequence", 23), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_59017_seq.len();
	return _59017_seq;;
}



inline jule::Str _20d366bd6_getRune(_20d36492b_lex* _self_, jule::Slice<jule::U8>* _61927_txt, jule::Bool _61940_raw) {
	if (((!(_61940_raw)) && ((*(_61927_txt))[0LL] == '\\'))) {
		return _20d3667da_escapeSeq(_self_, _61927_txt);;
	};
	jule::I32 _62314_r = 0;;
	jule::I64 _62317_n = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _223ee79b6_DecodeRune((*(_61927_txt)));
		_62314_r = __jule_assign_result.__jule_result_arg0;
		_62317_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_62317_n;
	return jule::Str::from_rune(_62314_r);;
}



inline jule::Str _20d367027_lexRune(_20d36492b_lex* _self_, jule::Slice<jule::U8>* _62827_txt) {
	_2240a0ad5_StrBuilder _62917_run = static__2240a0e04_New(8LL);;
	_2240a9b55_WriteByte(&_62917_run, '\'');
	((*(_self_))._field_column)++;
	jule::I64 _63217_n = 0LL;;
	jule::I64 _63317_i = 1LL;;
	for (; (_63317_i < (*(_62827_txt)).len()); (_63317_i)++) {
		{
			if (((*(_62827_txt))[_63317_i] == '\r')) {
				goto _iter_next_2112c3106;
			};
			if (((*(_62827_txt))[_63317_i] == '\n')) {
				_20d364eae_pushErr(_self_, jule::Str("rune is not finished", 20), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_20d367742_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _64517_part = (*(_62827_txt)).slice(_63317_i);;
			jule::Str _64617_r = _20d366bd6_getRune(_self_, &(_64517_part), false);;
			_2240a989c_WriteStr(&_62917_run, _64617_r);
			(*(_self_))._field_column+=_223ee9831_RuneCountStr(_64617_r);
			if (_64617_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_2112c3106;
			};
			if ((_64617_r.len() > 1LL)) {
				_63317_i+=(_64617_r.len() - 1LL);
			};
			(_63217_n)++;
		}
	_iter_next_2112c3106:;
	}
	_iter_end_2112c3106:;;
	if ((_63217_n == 0LL)) {
		_20d364eae_pushErr(_self_, jule::Str("rune is cannot empty", 20), jule::Slice<jule::Any>());
	} else if ((_63217_n > 1LL)) {
		_20d364eae_pushErr(_self_, jule::Str("rune is should be single", 24), jule::Slice<jule::Any>());
	};
	return _2240aa194_Str(&_62917_run);;
}



inline jule::Str _20d3672ad_lexStr(_20d36492b_lex* _self_) {
	_2240a0ad5_StrBuilder _66917_s = static__2240a0e04_New(16LL);;
	jule::U8 _67013_mark = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _67213_raw = (_67013_mark == '`');;
	_2240a9b55_WriteByte(&_66917_s, _67013_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len())) {
		{
			jule::U8 _67717_ch = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_67717_ch == '\r')) {
				goto _iter_next_2112c8282;
			};
			if ((_67717_ch == '\n')) {
				_20d367742_newLine(_self_);
				if ((!(_67213_raw))) {
					_20d364eae_pushErr(_self_, jule::Str("string is not finished", 22), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _68921_part = (*((*(_self_))._field_file))._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _69017_r = _20d366bd6_getRune(_self_, &(_68921_part), _67213_raw);;
			_2240a989c_WriteStr(&_66917_s, _69017_r);
			(*(_self_))._field_column+=_223ee9831_RuneCountStr(_69017_r);
			if ((_67717_ch == _67013_mark)) {
				goto _iter_end_2112c8282;
			};
		}
	_iter_next_2112c8282:;
	}
	_iter_end_2112c8282:;;
	return _2240aa194_Str(&_66917_s);;
}



inline void _20d367742_newLine(_20d36492b_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _20d367ca3_isOp(_20d36492b_lex* _self_, jule::Slice<jule::U8>* _71024_txt, jule::Str _71037_kind, jule::U64 _71048_id, jule::Ptr<_20d3510bb_Token>* _71066_t) {
	if ((!(_20d359b41_bytesHasPrefix(_71024_txt, _71037_kind)))) {
		return false;;
	};
	(*((*(_71066_t))))._field_Kind=_71037_kind;
	(*((*(_71066_t))))._field_Id=_71048_id;
	(*(_self_))._field_pos+=_71037_kind.len();
	return true;;
}



inline jule::Bool _20d36819e_lexBasicOps(_20d36492b_lex* _self_, jule::Slice<jule::U8> _72030_txt, jule::Ptr<_20d3510bb_Token>* _72048_tok) {
	{
		auto expr = &(_20d359228_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2112d0267:;
		if (it != expr_end) {
			_20d3589a8_kindPair *_72116_pair = it;
			{
				if (_20d367ca3_isOp(_self_, &(_72030_txt), (*(_72116_pair))._field_kind, (*(_72116_pair))._field_id, _72048_tok)) {
					return true;;
				};
			}
			_iter_next_2112d0267:;
			++it;
			goto _iter_begin_2112d0267;
		}
		_iter_end_2112d0267:;
	};
	return false;;
}



inline jule::Bool _20d36859a_lexId(_20d36492b_lex* _self_, jule::Slice<jule::U8>* _72925_txt, jule::Ptr<_20d3510bb_Token>* _72943_t) {
	jule::Str _73013_lex = _20d365861_id(_self_, _72925_txt);;
	if (_73013_lex.empty()) {
		return false;;
	};
	(*((*(_72943_t))))._field_Kind=_73013_lex;
	(*((*(_72943_t))))._field_Id=static_cast<jule::U64>(1LLU);
	return true;;
}



inline jule::Bool _20d368996_lexNum(_20d36492b_lex* _self_, jule::Slice<jule::U8>* _73926_txt, jule::Ptr<_20d3510bb_Token>* _73944_t) {
	jule::Str _74013_lex = _20d366499_num(_self_, _73926_txt);;
	if (_74013_lex.empty()) {
		return false;;
	};
	(*((*(_73944_t))))._field_Kind=_74013_lex;
	(*((*(_73944_t))))._field_Id=static_cast<jule::U64>(4LLU);
	return true;;
}



inline jule::Ptr<_20d3510bb_Token> _20d368c2c_token(_20d36492b_lex* _self_) {
	jule::Ptr<_20d3510bb_Token> _75117_t = jule::new_ptr<_20d3510bb_Token>(_20d3510bb_Token{._field_File=(*(_self_))._field_file, ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _75613_txt = _20d365ae7_resume(_self_);;
	if ((_75613_txt == nullptr)) {
		return _75117_t;;
	};
	(*(_75117_t))._field_Column=(*(_self_))._field_column;
	(*(_75117_t))._field_Row=(*(_self_))._field_row;
	{
		
		if (_20d368996_lexNum(_self_, &(_75613_txt), &(_75117_t))) {
			_case_begin_2112d72e6:;
			{
				goto _match_end_2112d5217;
			}
		}
		else if ((_75613_txt[0LL] == '\'')) {
			_case_begin_2112d689a:;
			{
				(*(_75117_t))._field_Kind=_20d367027_lexRune(_self_, &(_75613_txt));
				(*(_75117_t))._field_Id=static_cast<jule::U64>(4LLU);
				return _75117_t;;
			}
		}
		else if (((_75613_txt[0LL] == '\"') || (_75613_txt[0LL] == '`'))) {
			_case_begin_2112d6911:;
			{
				(*(_75117_t))._field_Kind=_20d3672ad_lexStr(_self_);
				(*(_75117_t))._field_Id=static_cast<jule::U64>(4LLU);
				return _75117_t;;
			}
		}
		else if (_20d359b41_bytesHasPrefix(&(_75613_txt), jule::Str("//", 2))) {
			_case_begin_2112d6977:;
			{
				_20d365da0_lexLineComment(_self_, &(_75117_t));
				return _75117_t;;
			}
		}
		else if (_20d359b41_bytesHasPrefix(&(_75613_txt), jule::Str("/*", 2))) {
			_case_begin_2112d5d1c:;
			{
				_20d366158_lexRangeComment(_self_, &(_75117_t));
				return _75117_t;;
			}
		}
		else if (_20d36819e_lexBasicOps(_self_, _75613_txt, &(_75117_t))) {
			_case_begin_2112d5d83:;
			{
				goto _match_end_2112d5217;
			}
		}
		else if (_20d36859a_lexId(_self_, &(_75613_txt), &(_75117_t))) {
			_case_begin_2112d5de9:;
			{
				{
					auto expr = &(_20d358dd7_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2112dac45:;
					if (it != expr_end) {
						_20d3589a8_kindPair *_78820_pair = it;
						{
							if (((*(_78820_pair))._field_kind == (*(_75117_t))._field_Kind)) {
								(*(_75117_t))._field_Id=(*(_78820_pair))._field_id;
								goto _iter_end_2112dac45;
							};
						}
						_iter_next_2112dac45:;
						++it;
						goto _iter_begin_2112dac45;
					}
					_iter_end_2112dac45:;
				};
			}
		}
		else {
			_case_begin_2112d5ca6:;
			{
				jule::I32 _79518_r = 0;;
				jule::I64 _79521_sz = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _223ee79b6_DecodeRune(_75613_txt);
					_79518_r = __jule_assign_result.__jule_result_arg0;
					_79521_sz = __jule_assign_result.__jule_result_arg1;
				});
				_20d364eae_pushErr(_self_, jule::Str("undefined token: @", 18), jule::Slice<jule::Any>::make({jule::Any(_79518_r, &__jule_any_type6)}));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_79521_sz;
				return _75117_t;;
			}
		}
		_match_end_2112d5217:;
	};
	(*(_self_))._field_column+=_223ee9831_RuneCountStr((*(_75117_t))._field_Kind);
	return _75117_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d36492b_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3699ec_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d36a998_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d36adb6_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d36b999_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d36c0a4_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d36c3a1_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d36c747_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d36ca44_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d36cdc9_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d36d1c6_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20d36d836_IsUnsafe(_20d36d4c3_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _20d36d4c3_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20d36e0c8_AutoSized(_20d36dc65_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _20d36dc65_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d36e4b3_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d36e88c_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d370ccd_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3710ca_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3716a2_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d37199e_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d371d78_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d372252_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d372708_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d372d8a_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d373264_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d37363d_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d373a17_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d373de1_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d374397_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20d374d7b_Unhandled(_20d374a07_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _20d375112_Ignored(_20d374a07_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*((*(_self_))._field_Exception))._field_Deferred);;
}







std::ostream &operator<<(std::ostream &_Stream, _20d374a07_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3754ec_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d375d27_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3762cd_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d376b08_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d377301_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d377c91_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d378401_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3786ed_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d378ba4_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d37907d_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d379457_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d379754_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d379db4_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d37a447_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d37b35a_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d37b9ba_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20d37c57b_IsSelf(_20d37c207_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}







std::ostream &operator<<(std::ostream &_Stream, _20d37c207_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20d37d9bc_IsAnon(_20d37d659_FnDecl* _self_) {
	return (*(_self_))._field_Ident.equal("<anonymous>", 11);;
}







std::ostream &operator<<(std::ostream &_Stream, _20d37d659_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d37e737_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d37eb11_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20d380617_IsInf(_20d3802a4_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3802a4_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20d380e42_IsWhileNext(_20d380ace_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _20d380ace_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3814d6_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3818b0_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d381c89_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d382240_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d382619_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d382ac0_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d38330c_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3837b3_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d384000_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d384819_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d384cc0_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d385881_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3861ab_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d38681b_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d386ad5_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3874cb_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d387c18_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Inherits:" << _Src._field_Inherits << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d388378_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20d38eabb_FieldIns> _20d389a1c_instance(jule::Ptr<_20d389698_Field> _self_) {
	return jule::new_ptr<_20d38eabb_FieldIns>(_20d38eabb_FieldIns{._field_Decl=_self_, });;
}







std::ostream &operator<<(std::ostream &_Stream, _20d389698_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d38b678_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20d39066b_StructIns> _20d38ca0e_instance(jule::Ptr<_20d38c58b_Struct> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	jule::Ptr<_20d39066b_StructIns> _10017_ins = jule::new_ptr<_20d39066b_StructIns>(_20d39066b_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_20d38eabb_FieldIns>>::alloc(0LL, (*(_self_))._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_20d458aca_Var>>::alloc(0LL, (*(_self_))._field_Statics.len()), ._field_Refers=static__20d3a8ee2_new(), });;
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_210411d7d:;
		if (it != expr_end) {
			jule::Ptr<_20d458aca_Var> _10721_s = *it;
			{
				{ jule::Slice<jule::Ptr<_20d458aca_Var>> &__jule_push_dest = (*(_10017_ins))._field_Statics; __jule_push_dest.push(jule::new_ptr<_20d458aca_Var>((*(_10721_s)))); };
			}
			_iter_next_210411d7d:;
			++it;
			goto _iter_begin_210411d7d;
		}
		_iter_end_210411d7d:;
	};
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_210412dd4:;
		if (it != expr_end) {
			jule::Ptr<_20d389698_Field> _11121_f = *it;
			{
				{ jule::Slice<jule::Ptr<_20d38eabb_FieldIns>> &__jule_push_dest = (*(_10017_ins))._field_Fields; __jule_push_dest.push(_20d389a1c_instance(_11121_f)); };
				if ((((!((*(_11121_f))._field_Mutable)) && ((*((*(_11121_f))._field_Kind))._field_Kind != nullptr)) && _20d4e0b2e_Mutable((*((*(_11121_f))._field_Kind))._field_Kind.ptr()))) {
					(*(_10017_ins))._field_Mutable=true;
				};
			}
			_iter_next_210412dd4:;
			++it;
			goto _iter_begin_210412dd4;
		}
		_iter_end_210412dd4:;
	};
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		(*(_10017_ins))._field_Methods=(*(_self_))._field_Methods;
	} else {
		(*(_10017_ins))._field_Methods=jule::Slice<jule::Ptr<_20d3a2b45_Fn>>::alloc(0LL, (*(_self_))._field_Methods.len());
		{
			auto expr = &((*(_self_))._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_210416c62:;
			if (it != expr_end) {
				jule::Ptr<_20d3a2b45_Fn> _12225_f = *it;
				{
					jule::Ptr<_20d3a2b45_Fn> _12325_fins = jule::new_ptr<_20d3a2b45_Fn>((*(_12225_f)));;
					(*(_12325_fins))._field_Instances=nullptr;
					{ jule::Slice<jule::Ptr<_20d3a2b45_Fn>> &__jule_push_dest = (*(_10017_ins))._field_Methods; __jule_push_dest.push(_12325_fins); };
				}
				_iter_next_210416c62:;
				++it;
				goto _iter_begin_210416c62;
			}
			_iter_end_210416c62:;
		};
	};
	return _10017_ins;;
}



inline jule::Ptr<_20d39066b_StructIns> _20d38cd1c_appendInstance(_20d38c58b_Struct* _self_, jule::Ptr<_20d39066b_StructIns>* _13438_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_210418a33:;
		if (it != expr_end) {
			jule::Ptr<_20d39066b_StructIns> _14021_ains = *it;
			{
				if (_20d3912d7_Same(_14021_ains.ptr(), (*(_13438_ins)))) {
					return _14021_ains;;
				};
			}
			_iter_next_210418a33:;
			++it;
			goto _iter_begin_210418a33;
		}
		_iter_end_210418a33:;
	};
	{ jule::Slice<jule::Ptr<_20d39066b_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13438_ins))); };
	return nullptr;;
}



inline jule::Ptr<_20d3a2b45_Fn> _20d38d218_FindMethod(_20d38c58b_Struct* _self_, jule::Str _15229_ident, jule::Bool _15241_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_210418deb:;
		if (it != expr_end) {
			jule::Ptr<_20d3a2b45_Fn> _15321_f = *it;
			{
				if ((((*(_15321_f))._field_Statically == _15241_statically) && ((*(_15321_f))._field_Ident == _15229_ident))) {
					return _15321_f;;
				};
			}
			_iter_next_210418deb:;
			++it;
			goto _iter_begin_210418deb;
		}
		_iter_end_210418deb:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d458aca_Var> _20d38d559_FindStatic(_20d38c58b_Struct* _self_, jule::Str _16329_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21041bd66:;
		if (it != expr_end) {
			jule::Ptr<_20d458aca_Var> _16421_v = *it;
			{
				if (((*(_16421_v))._field_Ident == _16329_ident)) {
					return _16421_v;;
				};
			}
			_iter_next_21041bd66:;
			++it;
			goto _iter_begin_21041bd66;
		}
		_iter_end_21041bd66:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d389698_Field> _20d38d89a_FindField(_20d38c58b_Struct* _self_, jule::Str _17428_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21041c53c:;
		if (it != expr_end) {
			jule::Ptr<_20d389698_Field> _17521_f = *it;
			{
				if (((*(_17521_f))._field_Ident == _17428_ident)) {
					return _17521_f;;
				};
			}
			_iter_next_21041c53c:;
			++it;
			goto _iter_begin_21041c53c;
		}
		_iter_end_21041c53c:;
	};
	return nullptr;;
}



inline jule::Bool _20d38dbdb_IsImplements(_20d38c58b_Struct* _self_, jule::Ptr<_20d3b5dde_Trait> _18427_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21041d53d:;
		if (it != expr_end) {
			jule::Ptr<_20d3b5dde_Trait> *_18516_it = it;
			{
				if ((_18427_t == (*(_18516_it)))) {
					return true;;
				};
			}
			_iter_next_21041d53d:;
			++it;
			goto _iter_begin_21041d53d;
		}
		_iter_end_21041d53d:;
	};
	return false;;
}



inline jule::Bool _20d38e02c_IsDerives(_20d38c58b_Struct* _self_, jule::Str _19424_ident) {
	{
		auto expr = &((*(_self_))._field_Directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21041eb8d:;
		if (it != expr_end) {
			jule::Ptr<_20d36adb6_Directive> *_19516_d = it;
			{
				if ((*((*((*(_19516_d))))._field_Tag))._field_Kind.equal("derive", 6)) {
					if ((((*((*(_19516_d))))._field_Args.len() == 1LL) && ((*((*((*(_19516_d))))._field_Args[0LL]))._field_Kind == _19424_ident))) {
						return true;;
					};
				};
			}
			_iter_next_21041eb8d:;
			++it;
			goto _iter_begin_21041eb8d;
		}
		_iter_end_21041eb8d:;
	};
	return false;;
}



inline jule::Bool _20d38e36d_IsUses(_20d38c58b_Struct* _self_, jule::Ptr<_20d38c58b_Struct> _20621_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2104203ec:;
		if (it != expr_end) {
			jule::Ptr<_20d38c58b_Struct> *_20716_u = it;
			{
				while ((_20621_s == (*(_20716_u)))) {
					{
						return true;;
					}
				_iter_next_210422597:;
				}
				_iter_end_210422597:;;
			}
			_iter_next_2104203ec:;
			++it;
			goto _iter_begin_2104203ec;
		}
		_iter_end_2104203ec:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d38c58b_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d38eabb_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d394609_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d394b04_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d394ecd_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d39550b_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3958a2_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d395b9e_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d396232_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d396ad4_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d396ead_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d397464_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d39783d_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d397c17_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3981bd_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d398751_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d398cd4_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d399675_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d399b2b_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d39a005_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d39a302_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d39a6cb_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d39aaa5_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d39ada2_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d39b27b_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d39b655_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d39bb0b_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d39c0b2_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d39c48b_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d39c788_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d39ca85_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d39ce5e_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d39d338_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d39d9a9_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d39db96_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d39de3d_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d39e23a_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d39e537_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d39e911_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d39ec0d_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3a08e0_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20d3a4a9d_ParamIns> _20d3a1506_instance(jule::Ptr<_20d3a1171_Param> _self_) {
	return jule::new_ptr<_20d3a4a9d_ParamIns>(_20d3a4a9d_ParamIns{._field_Decl=_self_, });;
}



inline jule::Bool _20d3a178c_IsSelf(_20d3a1171_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _20d3a1a23_IsRef(_20d3a1171_Param* _self_) {
	return ((!((*(_self_))._field_Ident.empty())) && ((*(_self_))._field_Ident[0LL] == '&'));;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3a1171_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20d3a30b8_IsVoid(_20d3a2b45_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _20d3a334e_IsMethod(_20d3a2b45_Fn* _self_) {
	return ((*(_self_))._field_Owner != nullptr);;
}



inline jule::Bool _20d3a35d5_IsEntryPoint(_20d3a2b45_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _20d3a386b_IsInit(_20d3a2b45_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _20d3a3b02_IsAnon(_20d3a2b45_Fn* _self_) {
	return _20d353ce4_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _20d3a3d88_AnyVar(_20d3a2b45_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*((*(_self_))._field_Result))._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_20d3a5a49_FnIns> _20d3a411e_instanceForce(jule::Ptr<_20d3a2b45_Fn> _self_) {
	jule::Ptr<_20d3a5a49_FnIns> _10117_ins = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_20d3e369c_Scope>(), ._field_Refers=static__20d3a8ee2_new(), });;
	(*(_10117_ins))._field_Params=jule::Slice<jule::Ptr<_20d3a4a9d_ParamIns>>::alloc(0LL, (*(_self_))._field_Params.len());
	{
		auto expr = &((*(_self_))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_210438e4e:;
		if (it != expr_end) {
			jule::Ptr<_20d3a1171_Param> _10821_p = *it;
			{
				{ jule::Slice<jule::Ptr<_20d3a4a9d_ParamIns>> &__jule_push_dest = (*(_10117_ins))._field_Params; __jule_push_dest.push(_20d3a1506_instance(_10821_p)); };
			}
			_iter_next_210438e4e:;
			++it;
			goto _iter_begin_210438e4e;
		}
		_iter_end_210438e4e:;
	};
	if (((*((*(_10117_ins))._field_Decl))._field_Result != nullptr)) {
		(*(_10117_ins))._field_Result=(*((*((*((*(_10117_ins))._field_Decl))._field_Result))._field_Kind))._field_Kind;
	};
	return _10117_ins;;
}



inline jule::Ptr<_20d3a5a49_FnIns> _20d3a43a5_instance(jule::Ptr<_20d3a2b45_Fn> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	return _20d3a411e_instanceForce(_self_);;
}



inline jule::Ptr<_20d3a5a49_FnIns> _20d3a46b3_appendInstance(_20d3a2b45_Fn* _self_, jule::Ptr<_20d3a5a49_FnIns>* _12938_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_20d3a5a49_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_20d3a5a49_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21043e707:;
		if (it != expr_end) {
			jule::Ptr<_20d3a5a49_FnIns> _14521_ains = *it;
			{
				if (_20d3a75a6_Same(_14521_ains.ptr(), (*(_12938_ins)))) {
					return _14521_ains;;
				};
			}
			_iter_next_21043e707:;
			++it;
			goto _iter_begin_21043e707;
		}
		_iter_end_21043e707:;
	};
	{ jule::Slice<jule::Ptr<_20d3a5a49_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3a2b45_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _20d3a4e11_Str(_20d3a4a9d_ParamIns* _self_) {
	_2240a0ad5_StrBuilder _16717_s = static__2240a0e04_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Mutable) {
		_2240a989c_WriteStr(&_16717_s, jule::Str("mut ", 4));
	};
	if ((*((*(_self_))._field_Decl))._field_Reference) {
		_2240a989c_WriteStr(&_16717_s, jule::Str("&_:", 3));
	};
	if (_20d3a178c_IsSelf((*(_self_))._field_Decl.ptr())) {
		if (_20d3a1a23_IsRef((*(_self_))._field_Decl.ptr())) {
			_2240a9b55_WriteByte(&_16717_s, '&');
		};
		_2240a989c_WriteStr(&_16717_s, jule::Str("self", 4));
		return _2240aa194_Str(&_16717_s);;
	};
	if ((*((*(_self_))._field_Decl))._field_Variadic) {
		_2240a989c_WriteStr(&_16717_s, jule::Str("...", 3));
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_2240a989c_WriteStr(&_16717_s, _20d4de655_Str((*(_self_))._field_Kind.ptr()));
	};
	return _2240aa194_Str(&_16717_s);;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3a4a9d_ParamIns _Src) {
	_Stream << _20d3a4e11_Str(&_Src);
	return _Stream;
}



inline jule::Str _20d3a5d8a_Str(_20d3a5a49_FnIns* _self_) {
	;
	return _20d3a78e7_GetKindStr(_self_, false);;
}



inline jule::Bool _20d3a61cb_Equal(jule::Ptr<_20d3a5a49_FnIns> _self_, jule::Ptr<_20d4de28c_TypeKind> _21821_other) {
	jule::Ptr<_20d3a5a49_FnIns> _21913_f = _20d4e2e72_Fn(_21821_other.ptr());;
	if ((_21913_f == nullptr)) {
		return false;;
	};
	return _20d3a6671_EqualFn(_self_, &(_21913_f));;
}



inline jule::Bool _20d3a6671_EqualFn(jule::Ptr<_20d3a5a49_FnIns> _self_, jule::Ptr<_20d3a5a49_FnIns>* _22924_f) {
	if (((*((*(_self_))._field_Decl))._field_Exceptional != (*((*((*(_22924_f))))._field_Decl))._field_Exceptional)) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Unsafety != (*((*((*(_22924_f))))._field_Decl))._field_Unsafety)) {
		return false;;
	};
	if ((_20d3a30b8_IsVoid((*(_self_))._field_Decl.ptr()) != _20d3a30b8_IsVoid((*((*(_22924_f))))._field_Decl.ptr()))) {
		return false;;
	};
	jule::Fn<jule::Bool(jule::Ptr<_20d3a4a9d_ParamIns>,jule::Ptr<_20d3a4a9d_ParamIns>)> _23913_checkParams = jule::Fn<jule::Bool(jule::Ptr<_20d3a4a9d_ParamIns>,jule::Ptr<_20d3a4a9d_ParamIns>)>([=](jule::Ptr<_20d3a4a9d_ParamIns> _23930_p1, jule::Ptr<_20d3a4a9d_ParamIns> _23945_p2) mutable -> jule::Bool {
		if (((*((*(_23930_p1))._field_Decl))._field_Mutable != (*((*(_23945_p2))._field_Decl))._field_Mutable)) {
			return false;;
		};
		if (_20d3a178c_IsSelf((*(_23930_p1))._field_Decl.ptr())) {
			if ((!(_20d3a178c_IsSelf((*(_23945_p2))._field_Decl.ptr())))) {
				return false;;
			};
			if ((_20d3a1a23_IsRef((*(_23930_p1))._field_Decl.ptr()) != _20d3a1a23_IsRef((*(_23945_p2))._field_Decl.ptr()))) {
				return false;;
			};
			return true;;
		};
		if (((*((*(_23930_p1))._field_Decl))._field_Reference != (*((*(_23945_p2))._field_Decl))._field_Reference)) {
			return false;;
		};
		if (((*((*(_23930_p1))._field_Decl))._field_Variadic != (*((*(_23945_p2))._field_Decl))._field_Variadic)) {
			return false;;
		};
		return _20d4de996_Equal((*(_23930_p1))._field_Kind, (*(_23945_p2))._field_Kind);;
	});;
	if (((*((*(_22924_f))))._field_Params.len() != (*(_self_))._field_Params.len())) {
		return false;;
	};
	jule::I64 _27117_i = 0LL;;
	for (; (_27117_i < (*(_self_))._field_Params.len()); (_27117_i)++) {
		{
			if ((!(_23913_checkParams((*(_self_))._field_Params[_27117_i], (*((*(_22924_f))))._field_Params[_27117_i])))) {
				return false;;
			};
		}
	_iter_next_21045085b:;
	}
	_iter_end_21045085b:;;
	if ((!(_20d3a30b8_IsVoid((*(_self_))._field_Decl.ptr())))) {
		if ((!(_20d4de996_Equal((*(_self_))._field_Result, (*((*(_22924_f))))._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _20d3a69b2_equalTrait(jule::Ptr<_20d3a5a49_FnIns> _self_, jule::Ptr<_20d3a5a49_FnIns>* _28827_other) {
	if (((*((*(_self_))._field_Decl))._field_Public != (*((*((*(_28827_other))))._field_Decl))._field_Public)) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Ident != (*((*((*(_28827_other))))._field_Decl))._field_Ident)) {
		return false;;
	};
	if ((!(_20d3a6671_EqualFn(_self_, _28827_other)))) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Generics.len() != (*((*((*(_28827_other))))._field_Decl))._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_20d4de28c_TypeKind>> _20d3a6c48_Types(_20d3a5a49_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_210456026:;
			{
				return nullptr;;
			}
		}
		else if ((_20d4e39ab_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_21045608c:;
			{
				return jule::Slice<jule::Ptr<_20d4de28c_TypeKind>>::make({(*(_self_))._field_Result});;
			}
		}
		else {
			_case_begin_210455eb0:;
			{
				return (*(_20d4e39ab_Tup((*(_self_))._field_Result.ptr())))._field_Types;;
			}
		}
		_match_end_210455de4:;
	};
}



inline jule::Bool _20d3a6ece_IsBuiltin(_20d3a5a49_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _20d3a7265_IsAnon(_20d3a5a49_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _20d3a3b02_IsAnon((*(_self_))._field_Decl.ptr())));;
}



inline jule::Bool _20d3a75a6_Same(_20d3a5a49_FnIns* _self_, jule::Ptr<_20d3a5a49_FnIns> _33119_f) {
	if ((((*(_self_))._field_Decl != (*(_33119_f))._field_Decl) || ((*(_33119_f))._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_210458d09:;
		if (it != expr_end) {
			jule::I64 _33613_i = it - expr->begin();
			jule::Ptr<_20d4dc8a6_InsGeneric> *_33616_g = it;
			{
				jule::Ptr<_20d4dc8a6_InsGeneric> _33717_g2 = (*(_33119_f))._field_Generics[_33613_i];;
				if ((((*((*((*(_33616_g))))._field_Kind))._field_BindIdent != (*((*(_33717_g2))._field_Kind))._field_BindIdent) || (!(_20d4de996_Equal((*((*(_33616_g))))._field_Kind, (*(_33717_g2))._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_210458d09:;
			++it;
			_33613_i++;
			goto _iter_begin_210458d09;
		}
		_iter_end_210458d09:;
	};
	return true;;
}



inline jule::Str _20d3a78e7_GetKindStr(_20d3a5a49_FnIns* _self_, jule::Bool _34825_ident) {
	_2240a0ad5_StrBuilder _34917_s = static__2240a0e04_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Unsafety) {
		_2240a989c_WriteStr(&_34917_s, jule::Str("unsafe ", 7));
	};
	_2240a989c_WriteStr(&_34917_s, jule::Str("fn", 2));
	if ((_34825_ident && ((*(_self_))._field_Decl != nullptr))) {
		_2240a9b55_WriteByte(&_34917_s, ' ');
		_2240a989c_WriteStr(&_34917_s, (*((*(_self_))._field_Decl))._field_Ident);
	};
	_2240a9b55_WriteByte(&_34917_s, '(');
	jule::I64 _36313_n = (*(_self_))._field_Params.len();;
	if ((_36313_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_21045ec11:;
			if (it != expr_end) {
				jule::I64 _36517_i = it - expr->begin();
				jule::Ptr<_20d3a4a9d_ParamIns> *_36520_p = it;
				{
					_2240a989c_WriteStr(&_34917_s, _20d3a4e11_Str((*(_36520_p)).ptr()));
					if ((_36517_i < ((*(_self_))._field_Params.len() - 1LL))) {
						_2240a9b55_WriteByte(&_34917_s, ',');
					};
				}
				_iter_next_21045ec11:;
				++it;
				_36517_i++;
				goto _iter_begin_21045ec11;
			}
			_iter_end_21045ec11:;
		};
	};
	_2240a9b55_WriteByte(&_34917_s, ')');
	if ((*((*(_self_))._field_Decl))._field_Exceptional) {
		_2240a9b55_WriteByte(&_34917_s, '!');
	};
	if ((!(_20d3a30b8_IsVoid((*(_self_))._field_Decl.ptr())))) {
		_2240a9b55_WriteByte(&_34917_s, ':');
		_2240a989c_WriteStr(&_34917_s, _20d4de655_Str((*(_self_))._field_Result.ptr()));
	};
	return _2240aa194_Str(&_34917_s);;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3a5a49_FnIns _Src) {
	_Stream << _20d3a5d8a_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_20d3a8be5_ReferenceStack> static__20d3a8ee2_new(void) {
	return jule::new_ptr<_20d3a8be5_ReferenceStack>(_20d3a8be5_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL, 10LL)});;
}



inline jule::I64 _20d3a93dd_Len(_20d3a8be5_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_buffer.len());;
}



inline jule::Any _20d3a972e_At(_20d3a8be5_ReferenceStack* _self_, jule::I64 _6821_i) {
	return (*(_self_))._field_buffer[_6821_i];;
}



inline void _20d3a99d7_Push(_20d3a8be5_ReferenceStack* _self_, jule::Any _7327_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_7327_ref); };
}



inline jule::Bool _211eb57a9_Exist(_20d3a8be5_ReferenceStack* _self_, jule::Ptr<_20d3a5a49_FnIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211eb69a8:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type7_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_211eb69a8:;
			++it;
			goto _iter_begin_211eb69a8;
		}
		_iter_end_211eb69a8:;
	};
	return false;;
}

inline jule::Bool _211ecd074_Exist(_20d3a8be5_ReferenceStack* _self_, jule::Ptr<_20d458aca_Var> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211ece22e:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type8_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_211ece22e:;
			++it;
			goto _iter_begin_211ece22e;
		}
		_iter_end_211ece22e:;
	};
	return false;;
}

inline jule::Bool _212093b2e_Exist(_20d3a8be5_ReferenceStack* _self_, jule::Ptr<_20d39066b_StructIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212094d2d:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type9_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_212094d2d:;
			++it;
			goto _iter_begin_212094d2d;
		}
		_iter_end_212094d2d:;
	};
	return false;;
}

inline jule::Bool _2123ca3a5_Exist(_20d3a8be5_ReferenceStack* _self_, jule::Ptr<_20d3b5dde_Trait> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2123cb52c:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type10_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_2123cb52c:;
			++it;
			goto _iter_begin_2123cb52c;
		}
		_iter_end_2123cb52c:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3a8be5_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3aa213_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline void _20d3b0669_pushErr(_20d3aecc8_symbolBuilder* _self_, jule::Ptr<_20d3510bb_Token>* _33227_token, jule::Str _33242_fmt, jule::Slice<jule::Any> _33255_args) {
	{ jule::Slice<_22730be5e_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_20d433ab6_compilerErr(_33227_token, true, _33242_fmt, _33255_args)); };
}



inline void _20d3b0dea_pushSuggestion(_20d3aecc8_symbolBuilder* _self_, jule::Str _34133_fmt, jule::Slice<jule::Any> _34146_args) {
	{
		_20d4350e5_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _34133_fmt, _34146_args);
	};
}



inline jule::Bool _20d3b12e6_checkCppUseDeclPath(_20d3aecc8_symbolBuilder* _self_, jule::Ptr<_20d384819_UseDecl>* _34539_decl, jule::Str* _34556_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _34613_ext = _22726a50a_Ext((*(_34556_path)));;
	if (((!(_2272eeccb_IsValidHeaderExt(_34613_ext))) && (!(_227300095_IsValidCppExt(_34613_ext))))) {
		_20d3b0669_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str("invalid C++ extension: @", 24), jule::Slice<jule::Any>::make({jule::Any(_34613_ext, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_223ddd57c_Status> _35313_info = ({
		auto except = static__22726c562_Of((*(_34556_path)));
		(except.ok()) ? (except.result) : ({{
			_20d3b0669_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_34539_decl))))._field_LinkPath, &__jule_any_type4)}));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_223ddd57c_Status>(nullptr);});
	});;
	if (_223ddd956_IsDir(_35313_info.ptr())) {
		_20d3b0669_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_34539_decl))))._field_LinkPath, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_20d414d94_ImportInfo> _20d3b1604_buildCppHeaderImport(_20d3aecc8_symbolBuilder* _self_, jule::Ptr<_20d384819_UseDecl>* _36544_decl) {
	jule::Str _36617_path = (*((*(_36544_decl))))._field_LinkPath;;
	if ((!(_2272eea23_IsStdHeaderPath((*((*(_36544_decl))))._field_LinkPath)))) {
		_36617_path=_22726a241_Join(jule::Slice<jule::Str>::make({_20d357006_Dir((*((*((*(_36544_decl))))._field_Token))._field_File.ptr()),(*((*(_36544_decl))))._field_LinkPath}));
		jule::Bool _37021_ok = _20d3b12e6_checkCppUseDeclPath(_self_, _36544_decl, &(_36617_path));;
		if ((!(_37021_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _22726a7c4_Abs(_36617_path);
			_36617_path = __jule_assign_result.__jule_result_arg0;
			_37021_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_37021_ok))) {
			_20d3b0669_pushErr(_self_, &((*((*(_36544_decl))))._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_36544_decl))))._field_LinkPath, &__jule_any_type4)}));
		};
	};
	return jule::new_ptr<_20d414d94_ImportInfo>(_20d414d94_ImportInfo{._field_Token=(*((*(_36544_decl))))._field_Token, ._field_Path=_36617_path, ._field_LinkPath=(*((*(_36544_decl))))._field_LinkPath, ._field_Ident=jule::Str(), ._field_Binded=true, ._field_Std=false, ._field_Package=nullptr, });;
}



inline jule::Ptr<_20d414d94_ImportInfo> _20d3b1945_buildStdImport(_20d3aecc8_symbolBuilder* _self_, jule::Ptr<_20d384819_UseDecl>* _39338_decl) {
	jule::Str _39417_path = (*((*(_39338_decl))))._field_LinkPath.slice(5LL);;
	_39417_path=_2248b168c_Replace(_39417_path, jule::Str("::", 2), jule::Str("\\", 1), -1LL);
	_39417_path=_22726a241_Join(jule::Slice<jule::Str>::make({_2273c32ab_PathStdlib,_39417_path}));
	jule::Bool _39720_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _22726a7c4_Abs(_39417_path);
		_39417_path = __jule_assign_result.__jule_result_arg0;
		_39720_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_39720_ok))) {
		_20d3b0669_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_223ddd57c_Status> _40413_info = ({
		auto except = static__22726c562_Of(_39417_path);
		(except.ok()) ? (except.result) : ({{
			_20d3b0669_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
			return nullptr;;
		} jule::Ptr<_223ddd57c_Status>(nullptr);});
	});;
	if ((!(_223ddd956_IsDir(_40413_info.ptr())))) {
		_20d3b0669_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _41413_i = (_2248aba1c_FindLast((*((*(_39338_decl))))._field_LinkPath, jule::Str("::", 2)) + 1LL);;
	jule::Str _41513_ident = (*((*(_39338_decl))))._field_LinkPath.slice(_41413_i);;
	return jule::new_ptr<_20d414d94_ImportInfo>(_20d414d94_ImportInfo{._field_Token=(*((*(_39338_decl))))._field_Token, ._field_Path=_39417_path, ._field_LinkPath=(*((*(_39338_decl))))._field_LinkPath, ._field_Ident=_41513_ident, ._field_Alias=(*((*(_39338_decl))))._field_Alias, ._field_Binded=false, ._field_Std=true, ._field_ImportAll=(*((*(_39338_decl))))._field_Full, ._field_Package=jule::new_ptr<_20d417cba_Package>(_20d417cba_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_20d414d94_ImportInfo> _20d3b1c86_buildIdentImport(jule::Ptr<_20d3aecc8_symbolBuilder> _self_, jule::Ptr<_20d384819_UseDecl>* _43241_decl) {
	jule::Str _43313_modPath = _20d411e7e_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._20d410ee4_GetModPath((*(_self_))._field_importer);;
	if ((_43313_modPath.len() == 0LL)) {
		_20d3b0669_pushErr(_self_.ptr(), &((*((*(_43241_decl))))._field_Token), jule::Str("no module file found in current directory or any parent directory", 65), jule::Slice<jule::Any>());
		_20d3b0dea_pushSuggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _44017_path = (*((*(_43241_decl))))._field_LinkPath;;
	_44017_path=_2248b168c_Replace(_44017_path, jule::Str("::", 2), jule::Str("\\", 1), -1LL);
	_44017_path=_22726a241_Join(jule::Slice<jule::Str>::make({_43313_modPath,_44017_path}));
	jule::Bool _44420_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _22726a7c4_Abs(_44017_path);
		_44017_path = __jule_assign_result.__jule_result_arg0;
		_44420_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_44420_ok))) {
		_20d3b0669_pushErr(_self_.ptr(), &((*((*(_43241_decl))))._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43241_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_223ddd57c_Status> _45113_info = ({
		auto except = static__22726c562_Of(_44017_path);
		(except.ok()) ? (except.result) : ({{
			_20d3b0669_pushErr(_self_.ptr(), &((*((*(_43241_decl))))._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43241_decl))))._field_LinkPath, &__jule_any_type4)}));
			return nullptr;;
		} jule::Ptr<_223ddd57c_Status>(nullptr);});
	});;
	if ((!(_223ddd956_IsDir(_45113_info.ptr())))) {
		_20d3b0669_pushErr(_self_.ptr(), &((*((*(_43241_decl))))._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43241_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _46113_i = (_2248aba1c_FindLast((*((*(_43241_decl))))._field_LinkPath, jule::Str("::", 2)) + 1LL);;
	jule::Str _46213_ident = (*((*(_43241_decl))))._field_LinkPath.slice(_46113_i);;
	return jule::new_ptr<_20d414d94_ImportInfo>(_20d414d94_ImportInfo{._field_Token=(*((*(_43241_decl))))._field_Token, ._field_Path=_44017_path, ._field_LinkPath=(*((*(_43241_decl))))._field_LinkPath, ._field_Ident=_46213_ident, ._field_Alias=(*((*(_43241_decl))))._field_Alias, ._field_Binded=false, ._field_Std=false, ._field_ImportAll=(*((*(_43241_decl))))._field_Full, ._field_Package=jule::new_ptr<_20d417cba_Package>(_20d417cba_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_20d414d94_ImportInfo> _20d3b20c7_buildImport(jule::Ptr<_20d3aecc8_symbolBuilder> _self_, jule::Ptr<_20d384819_UseDecl>* _47936_decl) {
	{
		
		if ((*((*(_47936_decl))))._field_Binded) {
			_case_begin_21049d58a:;
			{
				return _20d3b1604_buildCppHeaderImport(_self_.ptr(), _47936_decl);;
			}
		}
		else if ((*((*(_47936_decl))))._field_Std) {
			_case_begin_21049ce4c:;
			{
				return _20d3b1945_buildStdImport(_self_.ptr(), _47936_decl);;
			}
		}
		else {
			_case_begin_21049cdd6:;
			{
				return _20d3b1c86_buildIdentImport(_self_, _47936_decl);;
			}
		}
		_match_end_21049cd1a:;
	};
}



inline jule::Bool _20d3b2418_checkDuplicateUseDecl(_20d3aecc8_symbolBuilder* _self_, jule::Ptr<_20d414d94_ImportInfo>* _49041_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_20d414d94_ImportInfo> _49213_lpkg = _20d082429_SelectPackage((*(_self_))._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_20d414d94_ImportInfo>)>([=](jule::Ptr<_20d414d94_ImportInfo> _49248_spkg) mutable -> jule::Bool {
		return ((*((*(_49041_pkg))))._field_Path == (*(_49248_spkg))._field_Path);;
	}));;
	if ((_49213_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_20d3b0669_pushErr(_self_, &((*((*(_49041_pkg))))._field_Token), jule::Str("use declaration duplication: @ is already used above", 52), jule::Slice<jule::Any>::make({jule::Any((*((*(_49041_pkg))))._field_LinkPath, &__jule_any_type4)}));
	_20d3b0dea_pushSuggestion(_self_, jule::Str("remove this use declaration, already used, it is safe", 53), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _20d3b277b_implImportSelections(_20d3aecc8_symbolBuilder* _self_, jule::Ptr<_20d414d94_ImportInfo>* _50444_imp, jule::Ptr<_20d384819_UseDecl>* _50467_decl) {
	(*((*(_50444_imp))))._field_Selected=(*((*(_50467_decl))))._field_Selected;
	{
		auto expr = &((*((*(_50444_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2104a2979:;
		if (it != expr_end) {
			jule::Ptr<_20d3510bb_Token> _50616_item = *it;
			{
				{
					auto expr = &((*((*(_50444_imp))))._field_Selected);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2104a35e5:;
					if (it != expr_end) {
						jule::Ptr<_20d3510bb_Token> _50720_citem = *it;
						{
							if ((_50616_item == _50720_citem)) {
								goto _iter_end_2104a35e5;
							} else if (((*(_50616_item))._field_Kind == (*(_50720_citem))._field_Kind)) {
								_20d3b0669_pushErr(_self_, &(_50616_item), jule::Str("duplicated selection: @ is already selected", 43), jule::Slice<jule::Any>::make({jule::Any((*(_50616_item))._field_Kind, &__jule_any_type4)}));
								_20d3b0dea_pushSuggestion(_self_, jule::Str("remove this use selection, already selected, it is safe", 55), jule::Slice<jule::Any>());
								goto _iter_end_2104a35e5;
							};
						}
						_iter_next_2104a35e5:;
						++it;
						goto _iter_begin_2104a35e5;
					}
					_iter_end_2104a35e5:;
				};
			}
			_iter_next_2104a2979:;
			++it;
			goto _iter_begin_2104a2979;
		}
		_iter_end_2104a2979:;
	};
}



inline jule::Str _20d3b2abc_getAsLinkPath(jule::Ptr<_20d3aecc8_symbolBuilder> _self_, jule::Str _51937_path) {
	if (_2248aa0ae_HasPrefix(_51937_path, _2273c32ab_PathStdlib)) {
		(_51937_path).mut_slice(_2273c32ab_PathStdlib.len());;
		return (jule::Str("std", 3) + _2248b168c_Replace(_51937_path, jule::Str("\\", 1), jule::Str("::", 2), -1LL));;
	};
	jule::Str _52514_root;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _22726a7c4_Abs(_20d411e7e_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._20d410ee4_GetModPath((*(_self_))._field_importer));
		_52514_root = __jule_assign_result.__jule_result_arg0;
	});
	(_51937_path).mut_slice(_52514_root.len());;
	if ((_51937_path[0LL] == 92LLU)) {
		(_51937_path).mut_slice(1LL);;
	};
	return _2248b168c_Replace(_51937_path, jule::Str("\\", 1), jule::Str("::", 2), -1LL);;
}



inline void _20d3b2eda_pushCycleError(jule::Ptr<_20d3aecc8_symbolBuilder> _self_, jule::Ptr<_20d3aecc8_symbolBuilder>* _53335_sb, jule::Str _53355_path, _2240a0ad5_StrBuilder* _53371_message) {
	;
	jule::Str _53513_refersTo = _22730c3c1_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_20d3b2abc_getAsLinkPath(_self_, _20d357006_Dir((*((*((*(_53335_sb))))._field_table))._field_File.ptr())), &__jule_any_type4),jule::Any(_20d3b2abc_getAsLinkPath(_self_, _53355_path), &__jule_any_type4)}));;
	jule::Slice<jule::U8> _53913_buf = _2240aab45_Buf(_53371_message);;
	_2240a989c_WriteStr(_53371_message, _2248a97b7_Repeat(jule::Str(" ", 1), 7LL));
	_2240a989c_WriteStr(_53371_message, _53513_refersTo);
	_2240a9b55_WriteByte(_53371_message, '\n');
	_2240a95e4_Write(_53371_message, _53913_buf);
}



inline void _20d3b3408_pushCrossCycleError(jule::Ptr<_20d3aecc8_symbolBuilder> _self_, jule::Ptr<_20d3aecc8_symbolBuilder>* _54640_target, jule::Ptr<_20d414d94_ImportInfo>* _54665_imp, jule::Ptr<_20d3510bb_Token>* _54684_errorToken) {
	_2240a0ad5_StrBuilder _54717_message = static__2240a0e04_New(32LL);;
	_20d3b2eda_pushCycleError(_self_, &(_self_), (*((*(_54665_imp))))._field_Path, &(_54717_message));
	jule::Ptr<_20d3aecc8_symbolBuilder> _55117_owner = (*(_self_))._field_owner;;
	jule::Ptr<_20d3aecc8_symbolBuilder> _55217_old = _self_;;
	while (((*(_55117_owner))._field_owner != nullptr)) {
		{
			_20d3b2eda_pushCycleError(_self_, &((*(_55217_old))._field_owner), _20d357006_Dir((*((*(_55217_old))._field_table))._field_File.ptr()), &(_54717_message));
			if (((*(_55117_owner))._field_owner == (*(_54640_target)))) {
				_20d3b2eda_pushCycleError(_self_, _54640_target, _20d357006_Dir((*((*(_55117_owner))._field_table))._field_File.ptr()), &(_54717_message));
				goto _iter_end_2104ab378;
			};
			_55217_old=_55117_owner;
			_55117_owner=(*(_55117_owner))._field_owner;
		}
	_iter_next_2104ab378:;
	}
	_iter_end_2104ab378:;;
	_20d3b0669_pushErr(_self_.ptr(), _54684_errorToken, jule::Str("illegal cross cycle in use declarations;\n@", 42), jule::Slice<jule::Any>::make({jule::Any(_2240aa194_Str(&_54717_message), &__jule_any_type4)}));
}



inline jule::Bool _20d3b3804_checkImportCycles(jule::Ptr<_20d3aecc8_symbolBuilder> _self_, jule::Ptr<_20d414d94_ImportInfo> _56937_imp, jule::Ptr<_20d384819_UseDecl>* _56956_decl) {
	if (((*(_56937_imp))._field_Path == _20d357006_Dir((*((*(_self_))._field_table))._field_File.ptr()))) {
		_20d3b0669_pushErr(_self_.ptr(), &((*((*(_56956_decl))))._field_Token), jule::Str("illegal cycle in use declaration, package @ refers to itself", 60), jule::Slice<jule::Any>::make({jule::Any(_20d3b2abc_getAsLinkPath(_self_, (*(_56937_imp))._field_Path), &__jule_any_type4)}));
		return false;;
	};
	if (((*(_self_))._field_owner == nullptr)) {
		return true;;
	};
	if ((_20d357006_Dir((*((*((*(_self_))._field_owner))._field_table))._field_File.ptr()) == (*(_56937_imp))._field_Path)) {
		_20d3b3408_pushCrossCycleError(_self_, &((*(_self_))._field_owner), &(_56937_imp), &((*((*(_56956_decl))))._field_Token));
		return false;;
	};
	jule::Ptr<_20d3aecc8_symbolBuilder> _58417_owner = (*(_self_))._field_owner;;
	_julec_label_2104b2219:;
	if ((_20d357006_Dir((*((*(_58417_owner))._field_table))._field_File.ptr()) == (*(_56937_imp))._field_Path)) {
		_20d3b3408_pushCrossCycleError(_self_, &(_58417_owner), &(_56937_imp), &((*((*(_56956_decl))))._field_Token));
		return false;;
	};
	if (((*(_58417_owner))._field_owner != nullptr)) {
		_58417_owner=(*(_58417_owner))._field_owner;
		goto _julec_label_2104b2219;
	};
	return true;;
}



inline void _20d3b3c22_checkPackageAccessibility(_20d3aecc8_symbolBuilder* _self_, jule::Ptr<_20d384819_UseDecl>* _60545_decl, jule::Str* _60562_mod, jule::Str* _60573_path) {
	if (((_20d411e7e_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._20d410ee4_GetModPath((*(_self_))._field_importer) != (*(_60562_mod))) && _2248b02b2_Contains((*(_60573_path)), jule::Str("internal", 8)))) {
		_20d3b0669_pushErr(_self_, &((*((*(_60545_decl))))._field_Token), jule::Str("you cannot access to internal packages", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _20d3b411d_importPackage(jule::Ptr<_20d3aecc8_symbolBuilder> _self_, jule::Ptr<_20d414d94_ImportInfo>* _61138_imp, jule::Ptr<_20d384819_UseDecl>* _61161_decl) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_61138_imp))))._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_20d414d94_ImportInfo> _61617_port = _20d411e7e_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._20d411676_GetImport((*(_self_))._field_importer, (*((*(_61138_imp))))._field_Path);;
	if ((_61617_port != nullptr)) {
		(*((*(_61138_imp))))._field_Package=(*(_61617_port))._field_Package;
		(*((*(_61138_imp))))._field_Duplicate=true;
		jule::Str _62117_oldMod = _20d411e7e_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._20d410ee4_GetModPath((*(_self_))._field_importer);;
		_20d411e7e_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._20d410c5d_SetModPath((*(_self_))._field_importer, _20d411e7e_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._20d411335_ModById((*(_self_))._field_importer, (*((*(_61138_imp))))._field_ModId));
		_20d3b3c22_checkPackageAccessibility(_self_.ptr(), _61161_decl, &(_62117_oldMod), &((*(_61617_port))._field_Path));
		_20d411e7e_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._20d410c5d_SetModPath((*(_self_))._field_importer, _62117_oldMod);
	} else {
		if ((!(_20d3b3804_checkImportCycles(_self_, (*(_61138_imp)), _61161_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _63017_oldMod = _20d411e7e_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._20d410ee4_GetModPath((*(_self_))._field_importer);;
		__JULE_DEFER({
			_20d411e7e_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._20d410c5d_SetModPath((*(_self_))._field_importer, _63017_oldMod);
		});;
		if ((*((*(_61138_imp))))._field_Std) {
			_20d411e7e_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._20d410c5d_SetModPath((*(_self_))._field_importer, _2273c32ab_PathStdlib);
		};
		jule::Slice<jule::Ptr<_20d3699ec_Ast>> _63522_asts;;
		jule::Slice<_22730be5e_Log> _63532_errors;;
		({
			__jule_tuple_sx_20d3699ec_Ast__jule_tuple_s_22730be5e_Log __jule_assign_result = _20d411e7e_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._20d411a72_ImportPackage((*(_self_))._field_importer, (*((*(_61138_imp))))._field_Path, (!((*((*(_61138_imp))))._field_Std)));
			_63522_asts = __jule_assign_result.__jule_result_arg0;
			_63532_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_63532_errors.len() > 0LL)) {
			((*(_self_))._field_errors).append(_63532_errors);;
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_20d3b3c22_checkPackageAccessibility(_self_.ptr(), _61161_decl, &(_63017_oldMod), &((*((*(_61138_imp))))._field_Path));
		{
			auto expr = &(_63522_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2104bea40:;
			if (it != expr_end) {
				jule::Ptr<_20d3699ec_Ast> _64325_ast = *it;
				{
					jule::Ptr<_20d081e40_SymbolTable> _64425_table = nullptr;;
					({
						__jule_tuple_x_20d081e40_SymbolTable__jule_tuple_s_22730be5e_Log __jule_assign_result = _20d50ed5c_buildSymbols(&(_64325_ast), &((*(_self_))._field_importer), _self_);
						_64425_table = __jule_assign_result.__jule_result_arg0;
						_63532_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_63532_errors.len() > 0LL)) {
						((*(_self_))._field_errors).append(_63532_errors);;
						__jule_func_result = false;
						return __jule_func_result;;
					};
					{ jule::Slice<jule::Ptr<_20d081e40_SymbolTable>> &__jule_push_dest = (*((*((*(_61138_imp))))._field_Package))._field_Files; __jule_push_dest.push(_64425_table); };
				}
				_iter_next_2104bea40:;
				++it;
				goto _iter_begin_2104bea40;
			}
			_iter_end_2104bea40:;
		};
	};
	_20d3b277b_implImportSelections(_self_.ptr(), _61138_imp, _61161_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_20d414d94_ImportInfo> _20d3b445e_importUseDecl(jule::Ptr<_20d3aecc8_symbolBuilder> _self_, jule::Ptr<_20d384819_UseDecl>* _65838_decl) {
	jule::Ptr<_20d414d94_ImportInfo> _65917_imp = _20d3b20c7_buildImport(_self_, _65838_decl);;
	if ((_65917_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _66517_ok = _20d3b2418_checkDuplicateUseDecl(_self_.ptr(), &(_65917_imp));;
	if ((!(_66517_ok))) {
		return nullptr;;
	};
	_66517_ok=_20d3b411d_importPackage(_self_, &(_65917_imp), _65838_decl);
	{ jule::Slice<jule::Ptr<_20d414d94_ImportInfo>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Imports; __jule_push_dest.push(_65917_imp); };
	if (_66517_ok) {
		_20d411e7e_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._20d411d2a_Imported((*(_self_))._field_importer, _65917_imp);
		return _65917_imp;;
	};
	return nullptr;;
}



inline void _20d3b465c_importUseDecls(jule::Ptr<_20d3aecc8_symbolBuilder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2104c5161:;
		if (it != expr_end) {
			jule::Ptr<_20d384819_UseDecl> _68021_decl = *it;
			{
				_20d3b445e_importUseDecl(_self_, &(_68021_decl));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					goto _iter_end_2104c5161;
				};
			}
			_iter_next_2104c5161:;
			++it;
			goto _iter_begin_2104c5161;
		}
		_iter_end_2104c5161:;
	};
}



inline void _20d3b4915_appendNode(_20d3aecc8_symbolBuilder* _self_, _20d36a998_Node* _68934_node) {
	{
		auto &_match_expr{ (*(_68934_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type11) {
			_case_begin_2104c7493:;
			{
				{ jule::Slice<jule::Ptr<_20d3dd268_Impl>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Impls; __jule_push_dest.push(_20d3ae712_buildImpl((*(_68934_node))._field_Data.cast_ptr<_20d388378_Impl>(&__jule_any_type11))); };
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_2104c76e6:;
			{
				jule::Ptr<_20d4dd49a_TypeAlias> _69421_ta = _20d3aab4d_buildTypeAlias((*(_68934_node))._field_Data.cast_ptr<_20d38330c_TypeAliasDecl>(&__jule_any_type12));;
				{ jule::Slice<jule::Ptr<_20d4dd49a_TypeAlias>> &__jule_push_dest = (*((*(_self_))._field_table))._field_TypeAliases; __jule_push_dest.push(_69421_ta); };
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_2104c775c:;
			{
				jule::Ptr<_20d38c58b_Struct> _69721_srct = _20d3ab522_buildStruct((*(_68934_node))._field_Data.cast_ptr<_20d3874cb_StructDecl>(&__jule_any_type13));;
				{ jule::Slice<jule::Ptr<_20d38c58b_Struct>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Structs; __jule_push_dest.push(_69721_srct); };
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_2104c77c3:;
			{
				jule::Ptr<_20d3a2b45_Fn> _70021_f = _20d3ac215_buildFunc((*(_68934_node))._field_Data.cast_ptr<_20d37d659_FnDecl>(&__jule_any_type14));;
				{ jule::Slice<jule::Ptr<_20d3a2b45_Fn>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Funcs; __jule_push_dest.push(_70021_f); };
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_2104c7839:;
			{
				jule::Ptr<_20d3b5dde_Trait> _70321_t = _20d3aca62_buildTrait((*(_68934_node))._field_Data.cast_ptr<_20d387c18_TraitDecl>(&__jule_any_type15));;
				{ jule::Slice<jule::Ptr<_20d3b5dde_Trait>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Traits; __jule_push_dest.push(_70321_t); };
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_2104c80a9:;
			{
				jule::Ptr<_20d458aca_Var> _70621_v = _20d3ae17e_buildVar((*(_68934_node))._field_Data.cast_ptr<_20d37e737_VarDecl>(&__jule_any_type16));;
				{ jule::Slice<jule::Ptr<_20d458aca_Var>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Vars; __jule_push_dest.push(_70621_v); };
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_2104c8120:;
			{
				jule::Ptr<_20d3b85d9_Enum> _70921_e = _20d3ad568_buildEnum((*(_68934_node))._field_Data.cast_ptr<_20d385881_EnumDecl>(&__jule_any_type17));;
				{ jule::Slice<jule::Ptr<_20d3b85d9_Enum>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Enums; __jule_push_dest.push(_70921_e); };
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_2104c8186:;
			{
				jule::Ptr<_20d3b9ce4_TypeEnum> _71221_e = _20d3addb5_buildTypeEnum((*(_68934_node))._field_Data.cast_ptr<_20d38681b_TypeEnumDecl>(&__jule_any_type18));;
				{ jule::Slice<jule::Ptr<_20d3b9ce4_TypeEnum>> &__jule_push_dest = (*((*(_self_))._field_table))._field_TypeEnums; __jule_push_dest.push(_71221_e); };
			}
		}
		else {
			_case_begin_2104c7680:;
			{
				_20d3b0669_pushErr(_self_, &((*(_68934_node))._field_Token), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_2104c67c2:;
	};
}



inline void _20d3b4b13_appendNodes(_20d3aecc8_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2104d1029:;
		if (it != expr_end) {
			_20d36a998_Node _72021_node = *it;
			{
				_20d3b4915_appendNode(_self_, &(_72021_node));
			}
			_iter_next_2104d1029:;
			++it;
			goto _iter_begin_2104d1029;
		}
		_iter_end_2104d1029:;
	};
}



inline void _20d3b4dbb_pushDirectivePass(_20d3aecc8_symbolBuilder* _self_, jule::Ptr<_20d36adb6_Directive>* _72541_d) {
	if (((*((*(_72541_d))))._field_Args.len() == 0LL)) {
		_20d3b0669_pushErr(_self_, &((*((*(_72541_d))))._field_Tag), jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_72541_d))))._field_Args.len() > 1LL)) {
		jule::Ptr<_20d3510bb_Token> _73017_arg = (*((*(_72541_d))))._field_Args[1LL];;
		_20d3b0669_pushErr(_self_, &(_73017_arg), jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_72541_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_20d3510bb_Token> _73413_arg = (*((*(_72541_d))))._field_Args[0LL];;
	if (((*(_73413_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_20d3b0669_pushErr(_self_, &(_73413_arg), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_73413_arg))._field_Kind[0LL] != '\"')) {
		_20d3b0669_pushErr(_self_, &(_73413_arg), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<_20d3aa213_Pass> &__jule_push_dest = (*((*(_self_))._field_table))._field_Passes; __jule_push_dest.push(_20d3aa213_Pass{._field_Token=(*((*(_72541_d))))._field_Tag, ._field_Text=(*(_73413_arg))._field_Kind.slice(1LL, ((*(_73413_arg))._field_Kind.len() - 1LL))}); };
}



inline void _20d3b50b9_appendTopDirectives(_20d3aecc8_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2104d8a6a:;
		if (it != expr_end) {
			jule::Ptr<_20d36adb6_Directive> _75221_d = *it;
			{
				{
					auto &_match_expr{ (*((*(_75221_d))._field_Tag))._field_Kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_2104d94e9:;
						{
							_20d3b4dbb_pushDirectivePass(_self_, &(_75221_d));
						}
					}
					_match_end_2104d943e:;
				};
			}
			_iter_next_2104d8a6a:;
			++it;
			goto _iter_begin_2104d8a6a;
		}
		_iter_end_2104d8a6a:;
	};
}



inline void _20d3b52b7_build(jule::Ptr<_20d3aecc8_symbolBuilder> _self_) {
	(*(_self_))._field_table=jule::new_ptr<_20d081e40_SymbolTable>(_20d081e40_SymbolTable{._field_File=(*((*(_self_))._field_ast))._field_File, });
	_20d3b50b9_appendTopDirectives(_self_.ptr());
	_20d3b465c_importUseDecls(_self_);
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
	_20d3b4b13_appendNodes(_self_.ptr());
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20d3aecc8_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _20d3b62a7_Str(_20d3b5dde_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _20d3b65e8_Equal(jule::Ptr<_20d3b5dde_Trait> _self_, jule::Ptr<_20d4de28c_TypeKind> _2521_other) {
	jule::Ptr<_20d3b5dde_Trait> _2613_trt = _20d4e348e_Trait(_2521_other.ptr());;
	return (_self_ == _2613_trt);;
}



inline jule::Ptr<_20d3a2b45_Fn> _20d3b6a8d_FindMethod(_20d3b5dde_Trait* _self_, jule::Str _3429_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2104dd311:;
		if (it != expr_end) {
			jule::Ptr<_20d3a2b45_Fn> _3521_f = *it;
			{
				if (((*(_3521_f))._field_Ident == _3429_ident)) {
					return _3521_f;;
				};
			}
			_iter_next_2104dd311:;
			++it;
			goto _iter_begin_2104dd311;
		}
		_iter_end_2104dd311:;
	};
	return _20d3b7220_findMethodInherit(_self_, &(_3429_ident));;
}



inline jule::Ptr<_20d3a2b45_Fn> _20d3b7220_findMethodInherit(_20d3b5dde_Trait* _self_, jule::Str* _5537_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2104e0e90:;
		if (it != expr_end) {
			jule::Ptr<_20d4e6706_TypeSymbol> _5621_i = *it;
			{
				if (((*(_5621_i))._field_Kind == nullptr)) {
					goto _iter_next_2104e0e90;
				};
				jule::Ptr<_20d3b5dde_Trait> _6021_t = _20d4e348e_Trait((*(_5621_i))._field_Kind.ptr());;
				if ((_6021_t != nullptr)) {
					jule::Ptr<_20d3a2b45_Fn> _6225_f2 = _20d3b6a8d_FindMethod(_6021_t.ptr(), (*(_5537_ident)));;
					if ((_6225_f2 != nullptr)) {
						return _6225_f2;;
					};
				};
			}
			_iter_next_2104e0e90:;
			++it;
			goto _iter_begin_2104e0e90;
		}
		_iter_end_2104e0e90:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3b5dde_Trait _Src) {
	_Stream << _20d3b62a7_Str(&_Src);
	return _Stream;
}



inline jule::Bool _20d3b7e24_AutoExpr(_20d3b7a6c_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3b7a6c_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _20d3b895d_Str(_20d3b85d9_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _20d3b8c9e_Equal(jule::Ptr<_20d3b85d9_Enum> _self_, jule::Ptr<_20d4de28c_TypeKind> _3821_other) {
	jule::Ptr<_20d3b85d9_Enum> _3913_enm = _20d4e2438_Enum(_3821_other.ptr());;
	return (_self_ == _3913_enm);;
}



inline jule::Ptr<_20d3b7a6c_EnumItem> _20d3b91cd_FindItem(_20d3b85d9_Enum* _self_, jule::Str _4727_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2104e4d62:;
		if (it != expr_end) {
			jule::Ptr<_20d3b7a6c_EnumItem> _4821_item = *it;
			{
				if (((*(_4821_item))._field_Ident == _4727_ident)) {
					return _4821_item;;
				};
			}
			_iter_next_2104e4d62:;
			++it;
			goto _iter_begin_2104e4d62;
		}
		_iter_end_2104e4d62:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3b85d9_Enum _Src) {
	_Stream << _20d3b895d_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3b971c_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _20d3ba135_Str(_20d3b9ce4_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _20d3ba476_Equal(jule::Ptr<_20d3b9ce4_TypeEnum> _self_, jule::Ptr<_20d4de28c_TypeKind> _8021_other) {
	jule::Ptr<_20d3b9ce4_TypeEnum> _8113_tenm = _20d4e26be_TypeEnum(_8021_other.ptr());;
	return (_self_ == _8113_tenm);;
}



inline jule::Ptr<_20d3b971c_TypeEnumItem> _20d3ba8a5_FindItem(_20d3b9ce4_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2104e7161:;
		if (it != expr_end) {
			jule::Ptr<_20d3b971c_TypeEnumItem> _9021_item = *it;
			{
				if (((*(_9021_item))._field_Ident == _8927_ident)) {
					return _9021_item;;
				};
			}
			_iter_next_2104e7161:;
			++it;
			goto _iter_begin_2104e7161;
		}
		_iter_end_2104e7161:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3b9ce4_TypeEnum _Src) {
	_Stream << _20d3ba135_Str(&_Src);
	return _Stream;
}



inline jule::Str _20d3bc555_Str(_20d3bc18c_comptimeRange* _self_) {
	return jule::Str("comptimeRange", 13);;
}



inline jule::Bool _20d3bc896_Equal(jule::Ptr<_20d3bc18c_comptimeRange> _self_, jule::Ptr<_20d4de28c_TypeKind> _2521_other) {
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3bc18c_comptimeRange _Src) {
	_Stream << _20d3bc555_Str(&_Src);
	return _Stream;
}



inline jule::Str _20d3bd06c_Str(_20d3bcbe8_comptimeStructField* _self_) {
	return jule::Str("comptimeStructField", 19);;
}



inline jule::Bool _20d3bd3ad_Equal(jule::Ptr<_20d3bcbe8_comptimeStructField> _self_, jule::Ptr<_20d4de28c_TypeKind> _3521_other) {
	return false;;
}



inline jule::Ptr<_20d087165_Data> _20d3bd8ca__Name(jule::Ptr<_20d3bcbe8_comptimeStructField> _self_, jule::Ptr<_20d088d59_Eval>* _3926_e, jule::Ptr<_20d374a07_FnCallExpr>* _3941_fc) {
	if (((*((*(_3941_fc))))._field_Args.len() > 0LL)) {
		_20d0893a9_pushErr((*(_3926_e)).ptr(), (*((*((*(_3941_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20b0655eb_Const> _4417_constant = static__20b066388_NewStr((*((*((*(_self_))._field_field))._field_Decl))._field_Ident);;
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562a91_primStr, ._field_Model=jule::Any(_4417_constant, &__jule_any_type19), ._field_Constant=_4417_constant});;
}



inline jule::Ptr<_20d087165_Data> _20d3bdcc6__Type(jule::Ptr<_20d3bcbe8_comptimeStructField> _self_, jule::Ptr<_20d088d59_Eval>* _5230_e, jule::Ptr<_20d374a07_FnCallExpr>* _5245_fc) {
	if (((*((*(_5245_fc))))._field_Args.len() > 0LL)) {
		_20d0893a9_pushErr((*(_5230_e)).ptr(), (*((*((*(_5245_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _20d3d93da_buildComptimeTypeInfoData(&((*((*(_5230_e))))._field_s), &((*((*(_self_))._field_field))._field_Kind));;
}



inline jule::Ptr<_20d087165_Data> _20d3be1c2__Public(jule::Ptr<_20d3bcbe8_comptimeStructField> _self_, jule::Ptr<_20d088d59_Eval>* _6032_e, jule::Ptr<_20d374a07_FnCallExpr>* _6047_fc) {
	if (((*((*(_6047_fc))))._field_Args.len() > 0LL)) {
		_20d0893a9_pushErr((*(_6032_e)).ptr(), (*((*((*(_6047_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20b0655eb_Const> _6517_constant = static__20b0660be_NewBool((*((*((*(_self_))._field_field))._field_Decl))._field_Public);;
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562d5a_primBool, ._field_Model=jule::Any(_6517_constant, &__jule_any_type19), ._field_Constant=_6517_constant});;
}



inline jule::Ptr<_20d087165_Data> _20d3be513_subIdent(jule::Ptr<_20d3bcbe8_comptimeStructField> _self_, jule::Str* _7329_ident) {
	{
		auto &_match_expr{ (*(_7329_ident)) };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_2105044ae:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _7621_method = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>([=](jule::Ptr<_20d088d59_Eval>* _7733_e, jule::Ptr<_20d374a07_FnCallExpr>* _7748_fc, jule::Ptr<_20d087165_Data>* ) mutable -> jule::Ptr<_20d087165_Data> {
					return _20d3bd8ca__Name(_self_, _7733_e, _7748_fc);;
				}), });;
				return _20d3d8c58_buildAsComptimeMethodData(&(_7621_method));;
			}
		}
		else if (_match_expr == jule::Str("Public", 6)) {
			_case_begin_210504525:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _8321_method = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>([=](jule::Ptr<_20d088d59_Eval>* _8433_e, jule::Ptr<_20d374a07_FnCallExpr>* _8448_fc, jule::Ptr<_20d087165_Data>* ) mutable -> jule::Ptr<_20d087165_Data> {
					return _20d3be1c2__Public(_self_, _8433_e, _8448_fc);;
				}), });;
				return _20d3d8c58_buildAsComptimeMethodData(&(_8321_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_21050458b:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _9021_method = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>([=](jule::Ptr<_20d088d59_Eval>* _9133_e, jule::Ptr<_20d374a07_FnCallExpr>* _9148_fc, jule::Ptr<_20d087165_Data>* ) mutable -> jule::Ptr<_20d087165_Data> {
					return _20d3bdcc6__Type(_self_, _9133_e, _9148_fc);;
				}), });;
				return _20d3d8c58_buildAsComptimeMethodData(&(_9021_method));;
			}
		}
		else {
			_case_begin_210504448:;
			{
				return nullptr;;
			}
		}
		_match_end_2105043c1:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20d3bcbe8_comptimeStructField _Src) {
	_Stream << _20d3bd06c_Str(&_Src);
	return _Stream;
}



inline jule::Str _20d3bec2d_Str(_20d3be898_comptimeStructFields* _self_) {
	return jule::Str("comptimeStructFields", 20);;
}



inline jule::Bool _20d3c006e_Equal(jule::Ptr<_20d3be898_comptimeStructFields> _self_, jule::Ptr<_20d4de28c_TypeKind> _10921_other) {
	return false;;
}



inline void _20d3c04e2_ready(_20d3be898_comptimeStructFields* _self_, jule::Ptr<_20d458aca_Var>* _11329_keyA, jule::Ptr<_20d458aca_Var>* _11346_keyB) {
	if (((*(_11329_keyA)) != nullptr)) {
		(*((*(_11329_keyA))))._field_Constant=true;
		(*((*(_11329_keyA))))._field_Value=jule::new_ptr<_20d0882a9_Value>(_20d0882a9_Value{._field_Data=jule::new_ptr<_20d087165_Data>()});
		(*((*((*((*(_11329_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_11329_keyA))))._field_Kind=(*(_20d565bd7_findBuiltinTypeAlias(jule::Str("int", 3))))._field_Kind;
	};
	if (((*(_11346_keyB)) != nullptr)) {
		(*((*(_11346_keyB))))._field_Constant=true;
		(*((*(_11346_keyB))))._field_Value=jule::new_ptr<_20d0882a9_Value>(_20d0882a9_Value{._field_Data=jule::new_ptr<_20d087165_Data>()});
		(*((*(_11346_keyB))))._field_Kind=jule::new_ptr<_20d4e6706_TypeSymbol>(_20d4e6706_TypeSymbol{._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(jule::new_ptr<_20d3bcbe8_comptimeStructField>(), 6)})});
	};
}



inline void _20d3c0910_step(_20d3be898_comptimeStructFields* _self_, jule::I64 _13523_i, jule::Ptr<_20d458aca_Var>* _13536_keyA, jule::Ptr<_20d458aca_Var>* _13553_keyB) {
	if (((*(_13536_keyA)) != nullptr)) {
		(*((*((*((*(_13536_keyA))))._field_Value))._field_Data))._field_Constant=static__20b065a3b_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_13523_i)));
		(*((*((*((*(_13536_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_13536_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_13553_keyB)) != nullptr)) {
		(*(_20d4e425e_comptimeStructField((*((*((*(_13553_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_13523_i];
	};
}



inline jule::I64 _20d3c0b96_len(_20d3be898_comptimeStructFields* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3be898_comptimeStructFields _Src) {
	_Stream << _20d3bec2d_Str(&_Src);
	return _Stream;
}



inline jule::Str _20d3c1328_Str(_20d3c0ea4_comptimeStatic* _self_) {
	return jule::Str("comptimeStatic", 14);;
}



inline jule::Bool _20d3c1669_Equal(jule::Ptr<_20d3c0ea4_comptimeStatic> _self_, jule::Ptr<_20d4de28c_TypeKind> _15921_other) {
	return false;;
}



inline jule::Ptr<_20d087165_Data> _20d3c1b86__Name(jule::Ptr<_20d3c0ea4_comptimeStatic> _self_, jule::Ptr<_20d088d59_Eval>* _16326_e, jule::Ptr<_20d374a07_FnCallExpr>* _16341_fc) {
	if (((*((*(_16341_fc))))._field_Args.len() > 0LL)) {
		_20d0893a9_pushErr((*(_16326_e)).ptr(), (*((*((*(_16341_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20b0655eb_Const> _16817_constant = static__20b066388_NewStr((*((*(_self_))._field_field))._field_Ident);;
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562a91_primStr, ._field_Model=jule::Any(_16817_constant, &__jule_any_type19), ._field_Constant=_16817_constant});;
}



inline jule::Ptr<_20d087165_Data> _20d3c2082__Type(jule::Ptr<_20d3c0ea4_comptimeStatic> _self_, jule::Ptr<_20d088d59_Eval>* _17630_e, jule::Ptr<_20d374a07_FnCallExpr>* _17645_fc) {
	if (((*((*(_17645_fc))))._field_Args.len() > 0LL)) {
		_20d0893a9_pushErr((*(_17630_e)).ptr(), (*((*((*(_17645_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _20d3d93da_buildComptimeTypeInfoData(&((*((*(_17630_e))))._field_s), &((*((*((*(_self_))._field_field))._field_Kind))._field_Kind));;
}



inline jule::Ptr<_20d087165_Data> _20d3c247d__Public(jule::Ptr<_20d3c0ea4_comptimeStatic> _self_, jule::Ptr<_20d088d59_Eval>* _18432_e, jule::Ptr<_20d374a07_FnCallExpr>* _18447_fc) {
	if (((*((*(_18447_fc))))._field_Args.len() > 0LL)) {
		_20d0893a9_pushErr((*(_18432_e)).ptr(), (*((*((*(_18447_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20b0655eb_Const> _18917_constant = static__20b0660be_NewBool((*((*(_self_))._field_field))._field_Public);;
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562d5a_primBool, ._field_Model=jule::Any(_18917_constant, &__jule_any_type19), ._field_Constant=_18917_constant});;
}



inline jule::Ptr<_20d087165_Data> _20d3c27be_subIdent(jule::Ptr<_20d3c0ea4_comptimeStatic> _self_, jule::Str* _19729_ident) {
	{
		auto &_match_expr{ (*(_19729_ident)) };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_21051a6b2:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _20021_method = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>([=](jule::Ptr<_20d088d59_Eval>* _20133_e, jule::Ptr<_20d374a07_FnCallExpr>* _20148_fc, jule::Ptr<_20d087165_Data>* ) mutable -> jule::Ptr<_20d087165_Data> {
					return _20d3c1b86__Name(_self_, _20133_e, _20148_fc);;
				}), });;
				return _20d3d8c58_buildAsComptimeMethodData(&(_20021_method));;
			}
		}
		else if (_match_expr == jule::Str("Public", 6)) {
			_case_begin_21051a728:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _20721_method = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>([=](jule::Ptr<_20d088d59_Eval>* _20833_e, jule::Ptr<_20d374a07_FnCallExpr>* _20848_fc, jule::Ptr<_20d087165_Data>* ) mutable -> jule::Ptr<_20d087165_Data> {
					return _20d3c247d__Public(_self_, _20833_e, _20848_fc);;
				}), });;
				return _20d3d8c58_buildAsComptimeMethodData(&(_20721_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_21051a78e:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _21421_method = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>([=](jule::Ptr<_20d088d59_Eval>* _21533_e, jule::Ptr<_20d374a07_FnCallExpr>* _21548_fc, jule::Ptr<_20d087165_Data>* ) mutable -> jule::Ptr<_20d087165_Data> {
					return _20d3c2082__Type(_self_, _21533_e, _21548_fc);;
				}), });;
				return _20d3d8c58_buildAsComptimeMethodData(&(_21421_method));;
			}
		}
		else {
			_case_begin_21051a64b:;
			{
				return nullptr;;
			}
		}
		_match_end_21051a5c4:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20d3c0ea4_comptimeStatic _Src) {
	_Stream << _20d3c1328_Str(&_Src);
	return _Stream;
}



inline jule::Str _20d3c2ed9_Str(_20d3c2b65_comptimeStatics* _self_) {
	return jule::Str("comptimeStatics", 15);;
}



inline jule::Bool _20d3c332a_Equal(jule::Ptr<_20d3c2b65_comptimeStatics> _self_, jule::Ptr<_20d4de28c_TypeKind> _23321_other) {
	return false;;
}



inline void _20d3c379d_ready(_20d3c2b65_comptimeStatics* _self_, jule::Ptr<_20d458aca_Var>* _23729_keyA, jule::Ptr<_20d458aca_Var>* _23746_keyB) {
	if (((*(_23729_keyA)) != nullptr)) {
		(*((*(_23729_keyA))))._field_Constant=true;
		(*((*(_23729_keyA))))._field_Value=jule::new_ptr<_20d0882a9_Value>(_20d0882a9_Value{._field_Data=jule::new_ptr<_20d087165_Data>()});
		(*((*((*((*(_23729_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_23729_keyA))))._field_Kind=(*(_20d565bd7_findBuiltinTypeAlias(jule::Str("int", 3))))._field_Kind;
	};
	if (((*(_23746_keyB)) != nullptr)) {
		(*((*(_23746_keyB))))._field_Constant=true;
		(*((*(_23746_keyB))))._field_Value=jule::new_ptr<_20d0882a9_Value>(_20d0882a9_Value{._field_Data=jule::new_ptr<_20d087165_Data>()});
		(*((*(_23746_keyB))))._field_Kind=jule::new_ptr<_20d4e6706_TypeSymbol>(_20d4e6706_TypeSymbol{._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(jule::new_ptr<_20d3c0ea4_comptimeStatic>(), 8)})});
	};
}



inline void _20d3c3bbb_step(_20d3c2b65_comptimeStatics* _self_, jule::I64 _25923_i, jule::Ptr<_20d458aca_Var>* _25936_keyA, jule::Ptr<_20d458aca_Var>* _25953_keyB) {
	if (((*(_25936_keyA)) != nullptr)) {
		(*((*((*((*(_25936_keyA))))._field_Value))._field_Data))._field_Constant=static__20b065a3b_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_25923_i)));
		(*((*((*((*(_25936_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_25936_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_25953_keyB)) != nullptr)) {
		(*(_20d4e5a68_comptimeStatic((*((*((*(_25953_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_25923_i];
	};
}



inline jule::I64 _20d3c3e52_len(_20d3c2b65_comptimeStatics* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3c2b65_comptimeStatics _Src) {
	_Stream << _20d3c2ed9_Str(&_Src);
	return _Stream;
}



inline jule::Str _20d3c45d4_Str(_20d3c4260_comptimeEnumField* _self_) {
	return jule::Str("comptimeEnumField", 17);;
}



inline jule::Bool _20d3c4925_Equal(jule::Ptr<_20d3c4260_comptimeEnumField> _self_, jule::Ptr<_20d4de28c_TypeKind> _28321_other) {
	return false;;
}



inline jule::Ptr<_20d087165_Data> _20d3c4e20__Name(jule::Ptr<_20d3c4260_comptimeEnumField> _self_, jule::Ptr<_20d088d59_Eval>* _28726_e, jule::Ptr<_20d374a07_FnCallExpr>* _28741_fc) {
	if (((*((*(_28741_fc))))._field_Args.len() > 0LL)) {
		_20d0893a9_pushErr((*(_28726_e)).ptr(), (*((*((*(_28741_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20b0655eb_Const> _29217_constant = static__20b066388_NewStr((*((*(_self_))._field_field))._field_Ident);;
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562a91_primStr, ._field_Model=jule::Any(_29217_constant, &__jule_any_type19), ._field_Constant=_29217_constant});;
}



inline jule::Ptr<_20d087165_Data> _20d3c5261_subIdent(jule::Ptr<_20d3c4260_comptimeEnumField> _self_, jule::Str* _30029_ident) {
	{
		auto &_match_expr{ (*(_30029_ident)) };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_2116b9e37:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _30321_method = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>([=](jule::Ptr<_20d088d59_Eval>* _30433_e, jule::Ptr<_20d374a07_FnCallExpr>* _30448_fc, jule::Ptr<_20d087165_Data>* ) mutable -> jule::Ptr<_20d087165_Data> {
					return _20d3c4e20__Name(_self_, _30433_e, _30448_fc);;
				}), });;
				return _20d3d8c58_buildAsComptimeMethodData(&(_30321_method));;
			}
		}
		else {
			_case_begin_2116b9dc1:;
			{
				return nullptr;;
			}
		}
		_match_end_2116b9d49:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20d3c4260_comptimeEnumField _Src) {
	_Stream << _20d3c45d4_Str(&_Src);
	return _Stream;
}



inline jule::Str _20d3c5a03_Str(_20d3c556e_comptimeEnumFields* _self_) {
	return jule::Str("comptimeEnumFields", 18);;
}



inline jule::Bool _20d3c5d44_Equal(jule::Ptr<_20d3c556e_comptimeEnumFields> _self_, jule::Ptr<_20d4de28c_TypeKind> _32221_other) {
	return false;;
}



inline void _20d3c6240_ready(_20d3c556e_comptimeEnumFields* _self_, jule::Ptr<_20d458aca_Var>* _32629_keyA, jule::Ptr<_20d458aca_Var>* _32646_keyB) {
	if (((*(_32629_keyA)) != nullptr)) {
		(*((*(_32629_keyA))))._field_Constant=true;
		(*((*(_32629_keyA))))._field_Value=jule::new_ptr<_20d0882a9_Value>(_20d0882a9_Value{._field_Data=jule::new_ptr<_20d087165_Data>()});
		(*((*((*((*(_32629_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_32629_keyA))))._field_Kind=(*(_20d565bd7_findBuiltinTypeAlias(jule::Str("int", 3))))._field_Kind;
	};
	if (((*(_32646_keyB)) != nullptr)) {
		(*((*(_32646_keyB))))._field_Constant=true;
		(*((*(_32646_keyB))))._field_Value=jule::new_ptr<_20d0882a9_Value>(_20d0882a9_Value{._field_Data=jule::new_ptr<_20d087165_Data>()});
		(*((*(_32646_keyB))))._field_Kind=jule::new_ptr<_20d4e6706_TypeSymbol>(_20d4e6706_TypeSymbol{._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(jule::new_ptr<_20d3c4260_comptimeEnumField>(), 10)})});
	};
}



inline void _20d3c665d_step(_20d3c556e_comptimeEnumFields* _self_, jule::I64 _34823_i, jule::Ptr<_20d458aca_Var>* _34836_keyA, jule::Ptr<_20d458aca_Var>* _34853_keyB) {
	if (((*(_34836_keyA)) != nullptr)) {
		(*((*((*((*(_34836_keyA))))._field_Value))._field_Data))._field_Constant=static__20b065a3b_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_34823_i)));
		(*((*((*((*(_34836_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_34836_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_34853_keyB)) != nullptr)) {
		(*(_20d4e477b_comptimeEnumField((*((*((*(_34853_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_34823_i];
	};
}



inline jule::I64 _20d3c68e4_len(_20d3c556e_comptimeEnumFields* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3c556e_comptimeEnumFields _Src) {
	_Stream << _20d3c5a03_Str(&_Src);
	return _Stream;
}



inline jule::Str _20d3c7076_Str(_20d3c6c02_comptimeParam* _self_) {
	return jule::Str("comptimeParam", 13);;
}



inline jule::Bool _20d3c73b7_Equal(jule::Ptr<_20d3c6c02_comptimeParam> _self_, jule::Ptr<_20d4de28c_TypeKind> _37221_other) {
	return false;;
}



inline jule::Ptr<_20d087165_Data> _20d3c78e5__Name(jule::Ptr<_20d3c6c02_comptimeParam> _self_, jule::Ptr<_20d088d59_Eval>* _37626_e, jule::Ptr<_20d374a07_FnCallExpr>* _37641_fc) {
	if (((*((*(_37641_fc))))._field_Args.len() > 0LL)) {
		_20d0893a9_pushErr((*(_37626_e)).ptr(), (*((*((*(_37641_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20b0655eb_Const> _38117_constant = static__20b066388_NewStr((*((*((*(_self_))._field_param))._field_Decl))._field_Ident);;
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562a91_primStr, ._field_Model=jule::Any(_38117_constant, &__jule_any_type19), ._field_Constant=_38117_constant});;
}



inline jule::Ptr<_20d087165_Data> _20d3c7ce1__Type(jule::Ptr<_20d3c6c02_comptimeParam> _self_, jule::Ptr<_20d088d59_Eval>* _38930_e, jule::Ptr<_20d374a07_FnCallExpr>* _38945_fc) {
	if (((*((*(_38945_fc))))._field_Args.len() > 0LL)) {
		_20d0893a9_pushErr((*(_38930_e)).ptr(), (*((*((*(_38945_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _20d3d93da_buildComptimeTypeInfoData(&((*((*(_38930_e))))._field_s), &((*((*(_self_))._field_param))._field_Kind));;
}



inline jule::Ptr<_20d087165_Data> _20d3c81dc__Variadic(jule::Ptr<_20d3c6c02_comptimeParam> _self_, jule::Ptr<_20d088d59_Eval>* _39734_e, jule::Ptr<_20d374a07_FnCallExpr>* _39749_fc) {
	if (((*((*(_39749_fc))))._field_Args.len() > 0LL)) {
		_20d0893a9_pushErr((*(_39734_e)).ptr(), (*((*((*(_39749_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Variadic", 8), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20b0655eb_Const> _40217_constant = static__20b0660be_NewBool((*((*((*(_self_))._field_param))._field_Decl))._field_Variadic);;
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562d5a_primBool, ._field_Model=jule::Any(_40217_constant, &__jule_any_type19), ._field_Constant=_40217_constant});;
}



inline jule::Ptr<_20d087165_Data> _20d3c85d8__Reference(jule::Ptr<_20d3c6c02_comptimeParam> _self_, jule::Ptr<_20d088d59_Eval>* _41035_e, jule::Ptr<_20d374a07_FnCallExpr>* _41050_fc) {
	if (((*((*(_41050_fc))))._field_Args.len() > 0LL)) {
		_20d0893a9_pushErr((*(_41035_e)).ptr(), (*((*((*(_41050_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Reference", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20b0655eb_Const> _41517_constant = static__20b0660be_NewBool((*((*((*(_self_))._field_param))._field_Decl))._field_Reference);;
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562d5a_primBool, ._field_Model=jule::Any(_41517_constant, &__jule_any_type19), ._field_Constant=_41517_constant});;
}



inline jule::Ptr<_20d087165_Data> _20d3c8929_subIdent(jule::Ptr<_20d3c6c02_comptimeParam> _self_, jule::Str* _42329_ident) {
	{
		auto &_match_expr{ (*(_42329_ident)) };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_2116ced2b:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _42621_method = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>([=](jule::Ptr<_20d088d59_Eval>* _42733_e, jule::Ptr<_20d374a07_FnCallExpr>* _42748_fc, jule::Ptr<_20d087165_Data>* ) mutable -> jule::Ptr<_20d087165_Data> {
					return _20d3c78e5__Name(_self_, _42733_e, _42748_fc);;
				}), });;
				return _20d3d8c58_buildAsComptimeMethodData(&(_42621_method));;
			}
		}
		else if (_match_expr == jule::Str("Variadic", 8)) {
			_case_begin_2116ced92:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _43321_method = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>([=](jule::Ptr<_20d088d59_Eval>* _43433_e, jule::Ptr<_20d374a07_FnCallExpr>* _43448_fc, jule::Ptr<_20d087165_Data>* ) mutable -> jule::Ptr<_20d087165_Data> {
					return _20d3c81dc__Variadic(_self_, _43433_e, _43448_fc);;
				}), });;
				return _20d3d8c58_buildAsComptimeMethodData(&(_43321_method));;
			}
		}
		else if (_match_expr == jule::Str("Reference", 9)) {
			_case_begin_2116cee19:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _44021_method = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>([=](jule::Ptr<_20d088d59_Eval>* _44133_e, jule::Ptr<_20d374a07_FnCallExpr>* _44148_fc, jule::Ptr<_20d087165_Data>* ) mutable -> jule::Ptr<_20d087165_Data> {
					return _20d3c85d8__Reference(_self_, _44133_e, _44148_fc);;
				}), });;
				return _20d3d8c58_buildAsComptimeMethodData(&(_44021_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_2116cee91:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _44721_method = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>([=](jule::Ptr<_20d088d59_Eval>* _44833_e, jule::Ptr<_20d374a07_FnCallExpr>* _44848_fc, jule::Ptr<_20d087165_Data>* ) mutable -> jule::Ptr<_20d087165_Data> {
					return _20d3c7ce1__Type(_self_, _44833_e, _44848_fc);;
				}), });;
				return _20d3d8c58_buildAsComptimeMethodData(&(_44721_method));;
			}
		}
		else {
			_case_begin_2116cecb5:;
			{
				return nullptr;;
			}
		}
		_match_end_2116cec3d:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20d3c6c02_comptimeParam _Src) {
	_Stream << _20d3c7076_Str(&_Src);
	return _Stream;
}



inline jule::Str _20d3c92dc_Str(_20d3c8e68_comptimeParams* _self_) {
	return jule::Str("comptimeParams", 14);;
}



inline jule::Bool _20d3c962d_Equal(jule::Ptr<_20d3c8e68_comptimeParams> _self_, jule::Ptr<_20d4de28c_TypeKind> _46621_other) {
	return false;;
}



inline void _20d3c9aa1_ready(_20d3c8e68_comptimeParams* _self_, jule::Ptr<_20d458aca_Var>* _47029_keyA, jule::Ptr<_20d458aca_Var>* _47046_keyB) {
	if (((*(_47029_keyA)) != nullptr)) {
		(*((*(_47029_keyA))))._field_Constant=true;
		(*((*(_47029_keyA))))._field_Value=jule::new_ptr<_20d0882a9_Value>(_20d0882a9_Value{._field_Data=jule::new_ptr<_20d087165_Data>()});
		(*((*((*((*(_47029_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_47029_keyA))))._field_Kind=(*(_20d565bd7_findBuiltinTypeAlias(jule::Str("int", 3))))._field_Kind;
	};
	if (((*(_47046_keyB)) != nullptr)) {
		(*((*(_47046_keyB))))._field_Constant=true;
		(*((*(_47046_keyB))))._field_Value=jule::new_ptr<_20d0882a9_Value>(_20d0882a9_Value{._field_Data=jule::new_ptr<_20d087165_Data>()});
		(*((*(_47046_keyB))))._field_Kind=jule::new_ptr<_20d4e6706_TypeSymbol>(_20d4e6706_TypeSymbol{._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(jule::new_ptr<_20d3c6c02_comptimeParam>(), 12)})});
	};
}



inline void _20d3c9ebe_step(_20d3c8e68_comptimeParams* _self_, jule::I64 _49223_i, jule::Ptr<_20d458aca_Var>* _49236_keyA, jule::Ptr<_20d458aca_Var>* _49253_keyB) {
	if (((*(_49236_keyA)) != nullptr)) {
		(*((*((*((*(_49236_keyA))))._field_Value))._field_Data))._field_Constant=static__20b065a3b_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_49223_i)));
		(*((*((*((*(_49236_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_49236_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_49253_keyB)) != nullptr)) {
		(*(_20d4e4c98_comptimeParam((*((*((*(_49253_keyB))))._field_Kind))._field_Kind.ptr())))._field_param=(*(_self_))._field_params[_49223_i];
	};
}



inline jule::I64 _20d3ca255_len(_20d3c8e68_comptimeParams* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_params.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3c8e68_comptimeParams _Src) {
	_Stream << _20d3c92dc_Str(&_Src);
	return _Stream;
}



inline jule::Str _20d3ca8d7_Str(_20d3ca563_comptimeTypeInfos* _self_) {
	return jule::Str("comptimeTypeInfos", 17);;
}



inline jule::Bool _20d3cac28_Equal(jule::Ptr<_20d3ca563_comptimeTypeInfos> _self_, jule::Ptr<_20d4de28c_TypeKind> _51621_other) {
	return false;;
}



inline void _20d3cb19b_ready(_20d3ca563_comptimeTypeInfos* _self_, jule::Ptr<_20d458aca_Var>* _52029_keyA, jule::Ptr<_20d458aca_Var>* _52046_keyB) {
	if (((*(_52029_keyA)) != nullptr)) {
		(*((*(_52029_keyA))))._field_Constant=true;
		(*((*(_52029_keyA))))._field_Value=jule::new_ptr<_20d0882a9_Value>(_20d0882a9_Value{._field_Data=jule::new_ptr<_20d087165_Data>()});
		(*((*((*((*(_52029_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_52029_keyA))))._field_Kind=(*(_20d565bd7_findBuiltinTypeAlias(jule::Str("int", 3))))._field_Kind;
	};
	if (((*(_52046_keyB)) != nullptr)) {
		(*((*(_52046_keyB))))._field_Constant=true;
		(*((*(_52046_keyB))))._field_Value=jule::new_ptr<_20d0882a9_Value>(_20d0882a9_Value{._field_Data=jule::new_ptr<_20d087165_Data>()});
		(*((*(_52046_keyB))))._field_Kind=jule::new_ptr<_20d4e6706_TypeSymbol>(_20d4e6706_TypeSymbol{._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(jule::new_ptr<_20d3cbb5d_comptimeTypeInfo>(), 15)})});
	};
}



inline void _20d3cb5b9_step(_20d3ca563_comptimeTypeInfos* _self_, jule::I64 _54223_i, jule::Ptr<_20d458aca_Var>* _54236_keyA, jule::Ptr<_20d458aca_Var>* _54253_keyB) {
	if (((*(_54236_keyA)) != nullptr)) {
		(*((*((*((*(_54236_keyA))))._field_Value))._field_Data))._field_Constant=static__20b065a3b_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_54223_i)));
		(*((*((*((*(_54236_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_54236_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_54253_keyB)) != nullptr)) {
		(*((*((*((*(_54253_keyB))))._field_Kind))._field_Kind))._field_Kind=jule::Trait<_20d4ddcd6_Kind>((*(_self_))._field_types[_54223_i], 15);
	};
}



inline jule::I64 _20d3cb850_len(_20d3ca563_comptimeTypeInfos* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_types.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3ca563_comptimeTypeInfos _Src) {
	_Stream << _20d3ca8d7_Str(&_Src);
	return _Stream;
}



inline jule::Str _20d3cbed2_Str(_20d3cbb5d_comptimeTypeInfo* _self_) {
	return ((jule::Str("comptimeTypeInfo[", 17) + _20d4de655_Str((*(_self_))._field_base.ptr())) + jule::Str("]", 1));;
}



inline jule::Bool _20d3cc323_Equal(jule::Ptr<_20d3cbb5d_comptimeTypeInfo> _self_, jule::Ptr<_20d4de28c_TypeKind> _56621_other) {
	return false;;
}



inline jule::Ptr<_20d087165_Data> _20d3cc972__Str(jule::Ptr<_20d3cbb5d_comptimeTypeInfo> _self_, jule::Ptr<_20d088d59_Eval>* _57025_e, jule::Ptr<_20d374a07_FnCallExpr>* _57040_fc) {
	if (((*((*(_57040_fc))))._field_Args.len() > 0LL)) {
		_20d0893a9_pushErr((*(_57025_e)).ptr(), (*((*((*(_57040_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Str", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20b0655eb_Const> _57517_constant = static__20b066388_NewStr(_20d4de655_Str((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562a91_primStr, ._field_Model=jule::Any(_57517_constant, &__jule_any_type19), ._field_Constant=_57517_constant});;
}



inline jule::Ptr<_20d087165_Data> _20d3ccd6d__Kind(jule::Ptr<_20d3cbb5d_comptimeTypeInfo> _self_, jule::Ptr<_20d088d59_Eval>* _58330_e, jule::Ptr<_20d374a07_FnCallExpr>* _58345_fc) {
	if (((*((*(_58345_fc))))._field_Args.len() > 0LL)) {
		_20d0893a9_pushErr((*(_58330_e)).ptr(), (*((*((*(_58345_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Kind", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20d3b85d9_Enum> _58817_enm = _20d416aee_FindEnum(_20d3d9066_findComptimePackage(&((*((*(_58330_e))))._field_s)).ptr(), jule::Str("Kind", 4));;
	jule::Ptr<_20d3b7a6c_EnumItem> _58917_item = nullptr;;
	{
		
		if (_20d4e0612_Void((*(_self_))._field_base.ptr())) {
			_case_begin_2116ed61e:;
			{
				_58917_item=_20d3b91cd_FindItem(_58817_enm.ptr(), jule::Str("Void", 4));
			}
		}
		else if ((_20d4e3208_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_2116ed7c8:;
			{
				_58917_item=_20d3b91cd_FindItem(_58817_enm.ptr(), jule::Str("Struct", 6));
			}
		}
		else if ((_20d4e348e_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_2116ed542:;
			{
				_58917_item=_20d3b91cd_FindItem(_58817_enm.ptr(), jule::Str("Trait", 5));
			}
		}
		else if ((_20d4e21a2_Ptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_2116ed333:;
			{
				if (_20d4eee3a_IsUnsafe(_20d4e21a2_Ptr((*(_self_))._field_base.ptr()).ptr())) {
					_58917_item=_20d3b91cd_FindItem(_58817_enm.ptr(), jule::Str("UnsafePtr", 9));
				} else {
					_58917_item=_20d3b91cd_FindItem(_58817_enm.ptr(), jule::Str("Ptr", 3));
				};
			}
		}
		else if ((_20d4e1e1b_Sptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_2116ed399:;
			{
				_58917_item=_20d3b91cd_FindItem(_58817_enm.ptr(), jule::Str("Ref", 3));
			}
		}
		else if ((_20d4e2438_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_2116ede16:;
			{
				_58917_item=_20d3b91cd_FindItem(_58817_enm.ptr(), jule::Str("Enum", 4));
			}
		}
		else if ((_20d4e3725_Map((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_2116ede7c:;
			{
				_58917_item=_20d3b91cd_FindItem(_58817_enm.ptr(), jule::Str("Map", 3));
			}
		}
		else if ((_20d4e2bdb_Slc((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_2116edee3:;
			{
				_58917_item=_20d3b91cd_FindItem(_58817_enm.ptr(), jule::Str("Slice", 5));
			}
		}
		else if ((_20d4e2955_Arr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_2116ee06a:;
			{
				_58917_item=_20d3b91cd_FindItem(_58817_enm.ptr(), jule::Str("Array", 5));
			}
		}
		else if ((_20d4e2e72_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_2116ee0e2:;
			{
				_58917_item=_20d3b91cd_FindItem(_58817_enm.ptr(), jule::Str("Func", 4));
			}
		}
		else if ((_20d4e39ab_Tup((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_2116ee169:;
			{
				_58917_item=_20d3b91cd_FindItem(_58817_enm.ptr(), jule::Str("Tuple", 5));
			}
		}
		else if ((_20d4e1b85_Prim((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_2116ee1e1:;
			{
				jule::Ptr<_20d4e710d_Prim> _61817_prim = _20d4e1b85_Prim((*(_self_))._field_base.ptr());;
				{
					
					if (_20d4ea82b_IsAny(_61817_prim.ptr())) {
						_case_begin_21170a31d:;
						{
							_58917_item=_20d3b91cd_FindItem(_58817_enm.ptr(), jule::Str("Any", 3));
						}
					}
					else if (_20d4ea30e_IsBool(_61817_prim.ptr())) {
						_case_begin_21170a230:;
						{
							_58917_item=_20d3b91cd_FindItem(_58817_enm.ptr(), jule::Str("Bool", 4));
						}
					}
					else if (_20d4ea595_IsStr(_61817_prim.ptr())) {
						_case_begin_21170a032:;
						{
							_58917_item=_20d3b91cd_FindItem(_58817_enm.ptr(), jule::Str("Str", 3));
						}
					}
					else if (_20d4e953e_IsF32(_61817_prim.ptr())) {
						_case_begin_21170ab26:;
						{
							_58917_item=_20d3b91cd_FindItem(_58817_enm.ptr(), jule::Str("F32", 3));
						}
					}
					else if (_20d4e97c5_IsF64(_61817_prim.ptr())) {
						_case_begin_21170ab8c:;
						{
							_58917_item=_20d3b91cd_FindItem(_58817_enm.ptr(), jule::Str("F64", 3));
						}
					}
					else if (_20d4e7ebb_IsI8(_61817_prim.ptr())) {
						_case_begin_21170ac03:;
						{
							_58917_item=_20d3b91cd_FindItem(_58817_enm.ptr(), jule::Str("I8", 2));
						}
					}
					else if (_20d4e8252_IsI16(_61817_prim.ptr())) {
						_case_begin_21170ac69:;
						{
							_58917_item=_20d3b91cd_FindItem(_58817_enm.ptr(), jule::Str("I16", 3));
						}
					}
					else if (_20d4e84d8_IsI32(_61817_prim.ptr())) {
						_case_begin_21170acd0:;
						{
							_58917_item=_20d3b91cd_FindItem(_58817_enm.ptr(), jule::Str("I32", 3));
						}
					}
					else if (_20d4e876e_IsI64(_61817_prim.ptr())) {
						_case_begin_21170ad46:;
						{
							_58917_item=_20d3b91cd_FindItem(_58817_enm.ptr(), jule::Str("I64", 3));
						}
					}
					else if (_20d4e8a05_IsU8(_61817_prim.ptr())) {
						_case_begin_21170adac:;
						{
							_58917_item=_20d3b91cd_FindItem(_58817_enm.ptr(), jule::Str("U8", 2));
						}
					}
					else if (_20d4e8c8b_IsU16(_61817_prim.ptr())) {
						_case_begin_21170ae23:;
						{
							_58917_item=_20d3b91cd_FindItem(_58817_enm.ptr(), jule::Str("U16", 3));
						}
					}
					else if (_20d4e9022_IsU32(_61817_prim.ptr())) {
						_case_begin_21170ae89:;
						{
							_58917_item=_20d3b91cd_FindItem(_58817_enm.ptr(), jule::Str("U32", 3));
						}
					}
					else if (_20d4e92a8_IsU64(_61817_prim.ptr())) {
						_case_begin_21170b000:;
						{
							_58917_item=_20d3b91cd_FindItem(_58817_enm.ptr(), jule::Str("U64", 3));
						}
					}
					else if (_20d4e9a5b_IsInt(_61817_prim.ptr())) {
						_case_begin_21170b066:;
						{
							_58917_item=_20d3b91cd_FindItem(_58817_enm.ptr(), jule::Str("Int", 3));
						}
					}
					else if (_20d4e9ce2_IsUint(_61817_prim.ptr())) {
						_case_begin_21170b0cc:;
						{
							_58917_item=_20d3b91cd_FindItem(_58817_enm.ptr(), jule::Str("Uint", 4));
						}
					}
					else if (_20d4ea078_IsUintptr(_61817_prim.ptr())) {
						_case_begin_21170b143:;
						{
							_58917_item=_20d3b91cd_FindItem(_58817_enm.ptr(), jule::Str("Uintptr", 7));
						}
					}
					else {
						_case_begin_211709d89:;
						{
							jule::panic((jule::Str("Kind(): unimplemented type for std::comptime: ", 46) + _20d4de655_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:653:17"));;
						}
					}
					_match_end_211709d34:;
				};
			}
		}
		else {
			_case_begin_2116ed1ce:;
			{
				jule::panic((jule::Str("Kind(): unimplemented type for std::comptime: ", 46) + _20d4de655_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:656:13"));;
			}
		}
		_match_end_2116ecd5a:;
	};
	return _20d4db3bb_evalEnumStatic(&(_58817_enm), &(_58917_item));;
}



inline jule::Ptr<_20d087165_Data> _20d3cd269__Bits(jule::Ptr<_20d3cbb5d_comptimeTypeInfo> _self_, jule::Ptr<_20d088d59_Eval>* _66130_e, jule::Ptr<_20d374a07_FnCallExpr>* _66145_fc) {
	if (((*((*(_66145_fc))))._field_Args.len() > 0LL)) {
		_20d0893a9_pushErr((*(_66130_e)).ptr(), (*((*((*(_66145_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20d4e710d_Prim> _66613_prim = _20d4e1b85_Prim((*(_self_))._field_base.ptr());;
	if ((_66613_prim == nullptr)) {
		_20d0893a9_pushErr((*(_66130_e)).ptr(), (*((*(_66145_fc))))._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _67113_n = _20b0576ed_BitsizeOf((*(_66613_prim))._field_Kind);;
	if ((_67113_n == -1LL)) {
		_20d0893a9_pushErr((*(_66130_e)).ptr(), (*((*(_66145_fc))))._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20b0655eb_Const> _67617_constant = static__20b065a3b_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_67113_n)));;
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562a91_primStr, ._field_Model=jule::Any(_67617_constant, &__jule_any_type19), ._field_Constant=_67617_constant});;
}



inline jule::Ptr<_20d087165_Data> _20d3cd665__Elem(jule::Ptr<_20d3cbb5d_comptimeTypeInfo> _self_, jule::Ptr<_20d088d59_Eval>* _68430_e, jule::Ptr<_20d374a07_FnCallExpr>* _68445_fc) {
	if (((*((*(_68445_fc))))._field_Args.len() > 0LL)) {
		_20d0893a9_pushErr((*(_68430_e)).ptr(), (*((*((*(_68445_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Elem", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20d4ee401_Ptr> _68917_ptr = _20d4e21a2_Ptr((*(_self_))._field_base.ptr());;
	if ((_68917_ptr != nullptr)) {
		if (_20d4eee3a_IsUnsafe(_68917_ptr.ptr())) {
			_20d0893a9_pushErr((*(_68430_e)).ptr(), (*((*(_68445_fc))))._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str("Elem", 4), &__jule_any_type4)}));
			return nullptr;;
		};
		return _20d3d93da_buildComptimeTypeInfoData(&((*((*(_68430_e))))._field_s), &((*(_68917_ptr))._field_Elem));;
	};
	jule::Ptr<_20d4eab39_Sptr> _69717_sptr = _20d4e1e1b_Sptr((*(_self_))._field_base.ptr());;
	if ((_69717_sptr != nullptr)) {
		return _20d3d93da_buildComptimeTypeInfoData(&((*((*(_68430_e))))._field_s), &((*(_69717_sptr))._field_Elem));;
	};
	jule::Ptr<_20d4eb60c_Slc> _70117_slice = _20d4e2bdb_Slc((*(_self_))._field_base.ptr());;
	if ((_70117_slice != nullptr)) {
		return _20d3d93da_buildComptimeTypeInfoData(&((*((*(_68430_e))))._field_s), &((*(_70117_slice))._field_Elem));;
	};
	jule::Ptr<_20d4ed92d_Arr> _70517_array = _20d4e2955_Arr((*(_self_))._field_base.ptr());;
	if ((_70517_array != nullptr)) {
		return _20d3d93da_buildComptimeTypeInfoData(&((*((*(_68430_e))))._field_s), &((*(_70517_array))._field_Elem));;
	};
	jule::Ptr<_20d3b85d9_Enum> _70917_enm = _20d4e2438_Enum((*(_self_))._field_base.ptr());;
	if ((_70917_enm != nullptr)) {
		return _20d3d93da_buildComptimeTypeInfoData(&((*((*(_68430_e))))._field_s), &((*((*(_70917_enm))._field_Kind))._field_Kind));;
	};
	_20d0893a9_pushErr((*(_68430_e)).ptr(), (*((*(_68445_fc))))._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str("Elem", 4), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_20d087165_Data> _20d3cda61__Size(jule::Ptr<_20d3cbb5d_comptimeTypeInfo> _self_, jule::Ptr<_20d088d59_Eval>* _71730_e, jule::Ptr<_20d374a07_FnCallExpr>* _71745_fc) {
	if (((*((*(_71745_fc))))._field_Args.len() > 0LL)) {
		_20d0893a9_pushErr((*(_71730_e)).ptr(), (*((*((*(_71745_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Size", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20d4ed92d_Arr> _72217_arr = _20d4e2955_Arr((*(_self_))._field_base.ptr());;
	if ((_72217_arr == nullptr)) {
		_20d0893a9_pushErr((*(_71730_e)).ptr(), (*((*(_71745_fc))))._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str("Size", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20b0655eb_Const> _72717_constant = static__20b065a3b_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_72217_arr))._field_N)));;
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d5637b7_primInt, ._field_Model=jule::Any(_72717_constant, &__jule_any_type19), ._field_Constant=_72717_constant});;
}



inline jule::Ptr<_20d087165_Data> _20d3cde5c__Key(jule::Ptr<_20d3cbb5d_comptimeTypeInfo> _self_, jule::Ptr<_20d088d59_Eval>* _73529_e, jule::Ptr<_20d374a07_FnCallExpr>* _73544_fc) {
	if (((*((*(_73544_fc))))._field_Args.len() > 0LL)) {
		_20d0893a9_pushErr((*(_73529_e)).ptr(), (*((*((*(_73544_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Key", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20d4ecca1_Map> _74017_m = _20d4e3725_Map((*(_self_))._field_base.ptr());;
	if ((_74017_m == nullptr)) {
		_20d0893a9_pushErr((*(_73529_e)).ptr(), (*((*(_73544_fc))))._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str("Key", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	return _20d3d93da_buildComptimeTypeInfoData(&((*((*(_73529_e))))._field_s), &((*(_74017_m))._field_Key));;
}



inline jule::Ptr<_20d087165_Data> _20d3ce358__Value(jule::Ptr<_20d3cbb5d_comptimeTypeInfo> _self_, jule::Ptr<_20d088d59_Eval>* _74831_e, jule::Ptr<_20d374a07_FnCallExpr>* _74846_fc) {
	if (((*((*(_74846_fc))))._field_Args.len() > 0LL)) {
		_20d0893a9_pushErr((*(_74831_e)).ptr(), (*((*((*(_74846_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Value", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20d4ecca1_Map> _75317_m = _20d4e3725_Map((*(_self_))._field_base.ptr());;
	if ((_75317_m == nullptr)) {
		_20d0893a9_pushErr((*(_74831_e)).ptr(), (*((*(_74846_fc))))._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str("Value", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	return _20d3d93da_buildComptimeTypeInfoData(&((*((*(_74831_e))))._field_s), &((*(_75317_m))._field_Val));;
}



inline jule::Ptr<_20d087165_Data> _20d3ce754__Fields(jule::Ptr<_20d3cbb5d_comptimeTypeInfo> _self_, jule::Ptr<_20d088d59_Eval>* _76132_e, jule::Ptr<_20d374a07_FnCallExpr>* _76147_fc) {
	if (((*((*(_76147_fc))))._field_Args.len() > 0LL)) {
		_20d0893a9_pushErr((*(_76132_e)).ptr(), (*((*((*(_76147_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Fields", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20d39066b_StructIns> _76617_s = _20d4e3208_Struct((*(_self_))._field_base.ptr());;
	if ((_76617_s != nullptr)) {
		return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(jule::new_ptr<_20d3be898_comptimeStructFields>(_20d3be898_comptimeStructFields{._field_fields=(*(_76617_s))._field_Fields}), 7)}), });;
	};
	jule::Ptr<_20d3b85d9_Enum> _77617_enm = _20d4e2438_Enum((*(_self_))._field_base.ptr());;
	if ((_77617_enm != nullptr)) {
		return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(jule::new_ptr<_20d3c556e_comptimeEnumFields>(_20d3c556e_comptimeEnumFields{._field_fields=(*(_77617_enm))._field_Items}), 11)}), });;
	};
	_20d0893a9_pushErr((*(_76132_e)).ptr(), (*((*(_76147_fc))))._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str("Fields", 6), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_20d087165_Data> _20d3ceb50__Statics(jule::Ptr<_20d3cbb5d_comptimeTypeInfo> _self_, jule::Ptr<_20d088d59_Eval>* _79033_e, jule::Ptr<_20d374a07_FnCallExpr>* _79048_fc) {
	if (((*((*(_79048_fc))))._field_Args.len() > 0LL)) {
		_20d0893a9_pushErr((*(_79033_e)).ptr(), (*((*((*(_79048_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Statics", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20d39066b_StructIns> _79517_s = _20d4e3208_Struct((*(_self_))._field_base.ptr());;
	if ((_79517_s == nullptr)) {
		_20d0893a9_pushErr((*(_79033_e)).ptr(), (*((*(_79048_fc))))._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str("Fields", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(jule::new_ptr<_20d3c2b65_comptimeStatics>(_20d3c2b65_comptimeStatics{._field_fields=(*(_79517_s))._field_Statics}), 9)}), });;
}



inline jule::Ptr<_20d087165_Data> _20d3d004b__Public(jule::Ptr<_20d3cbb5d_comptimeTypeInfo> _self_, jule::Ptr<_20d088d59_Eval>* _80932_e, jule::Ptr<_20d374a07_FnCallExpr>* _80947_fc) {
	if (((*((*(_80947_fc))))._field_Args.len() > 0LL)) {
		_20d0893a9_pushErr((*(_80932_e)).ptr(), (*((*((*(_80947_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Bool _81417_public = false;;
	{
		
		if ((_20d4e3208_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_21173d807:;
			{
				_81417_public=(*((*(_20d4e3208_Struct((*(_self_))._field_base.ptr())))._field_Decl))._field_Public;
			}
		}
		else if ((_20d4e348e_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_21173c7d4:;
			{
				_81417_public=(*(_20d4e348e_Trait((*(_self_))._field_base.ptr())))._field_Public;
			}
		}
		else if ((_20d4e2438_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_21173c84a:;
			{
				_81417_public=(*(_20d4e2438_Enum((*(_self_))._field_base.ptr())))._field_Public;
			}
		}
		else if ((_20d4e26be_TypeEnum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_21173c8b1:;
			{
				_81417_public=(*(_20d4e26be_TypeEnum((*(_self_))._field_base.ptr())))._field_Public;
			}
		}
		else {
			_case_begin_21173c471:;
			{
				_20d0893a9_pushErr((*(_80932_e)).ptr(), (*((*(_80947_fc))))._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str("Public", 6), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_21173c350:;
	};
	jule::Ptr<_20b0655eb_Const> _82817_constant = static__20b0660be_NewBool(_81417_public);;
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562d5a_primBool, ._field_Model=jule::Any(_82817_constant, &__jule_any_type19), ._field_Constant=_82817_constant});;
}



inline jule::Ptr<_20d087165_Data> _20d3d0447__Binded(jule::Ptr<_20d3cbb5d_comptimeTypeInfo> _self_, jule::Ptr<_20d088d59_Eval>* _83632_e, jule::Ptr<_20d374a07_FnCallExpr>* _83647_fc) {
	if (((*((*(_83647_fc))))._field_Args.len() > 0LL)) {
		_20d0893a9_pushErr((*(_83632_e)).ptr(), (*((*((*(_83647_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Binded", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20b0655eb_Const> _84117_constant = static__20b0660be_NewBool(_20d4e00e5_Binded((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562d5a_primBool, ._field_Model=jule::Any(_84117_constant, &__jule_any_type19), ._field_Constant=_84117_constant});;
}



inline jule::Ptr<_20d087165_Data> _20d3d0843__Ordered(jule::Ptr<_20d3cbb5d_comptimeTypeInfo> _self_, jule::Ptr<_20d088d59_Eval>* _84929_e, jule::Ptr<_20d374a07_FnCallExpr>* _84944_fc) {
	if (((*((*(_84944_fc))))._field_Args.len() > 0LL)) {
		_20d0893a9_pushErr((*(_84929_e)).ptr(), (*((*((*(_84944_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Ordered", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20b0655eb_Const> _85417_constant = static__20b0660be_NewBool(_20d4e0db5_Ordered((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562a91_primStr, ._field_Model=jule::Any(_85417_constant, &__jule_any_type19), ._field_Constant=_85417_constant});;
}



inline jule::Ptr<_20d087165_Data> _20d3d0c3e__Comparable(jule::Ptr<_20d3cbb5d_comptimeTypeInfo> _self_, jule::Ptr<_20d088d59_Eval>* _86232_e, jule::Ptr<_20d374a07_FnCallExpr>* _86247_fc) {
	if (((*((*(_86247_fc))))._field_Args.len() > 0LL)) {
		_20d0893a9_pushErr((*(_86232_e)).ptr(), (*((*((*(_86247_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Comparable", 10), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20b0655eb_Const> _86717_constant = static__20b0660be_NewBool(_20d4e0898_Comparable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562a91_primStr, ._field_Model=jule::Any(_86717_constant, &__jule_any_type19), ._field_Constant=_86717_constant});;
}



inline jule::Ptr<_20d087165_Data> _20d3d113a__Mutable(jule::Ptr<_20d3cbb5d_comptimeTypeInfo> _self_, jule::Ptr<_20d088d59_Eval>* _87529_e, jule::Ptr<_20d374a07_FnCallExpr>* _87544_fc) {
	if (((*((*(_87544_fc))))._field_Args.len() > 0LL)) {
		_20d0893a9_pushErr((*(_87529_e)).ptr(), (*((*((*(_87544_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Mutable", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20b0655eb_Const> _88017_constant = static__20b0660be_NewBool(_20d4e0b2e_Mutable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562d5a_primBool, ._field_Model=jule::Any(_88017_constant, &__jule_any_type19), ._field_Constant=_88017_constant});;
}



inline jule::Ptr<_20d087165_Data> _20d3d1536__Types(jule::Ptr<_20d3cbb5d_comptimeTypeInfo> _self_, jule::Ptr<_20d088d59_Eval>* _88831_e, jule::Ptr<_20d374a07_FnCallExpr>* _88846_fc) {
	if (((*((*(_88846_fc))))._field_Args.len() > 0LL)) {
		_20d0893a9_pushErr((*(_88831_e)).ptr(), (*((*((*(_88846_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Types", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20d4ec201_Tuple> _89317_tup = _20d4e39ab_Tup((*(_self_))._field_base.ptr());;
	if ((_89317_tup == nullptr)) {
		_20d0893a9_pushErr((*(_88831_e)).ptr(), (*((*(_88846_fc))))._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str("Types", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20d3ca563_comptimeTypeInfos> _89817_infos = jule::new_ptr<_20d3ca563_comptimeTypeInfos>(_20d3ca563_comptimeTypeInfos{._field_types=jule::Slice<jule::Ptr<_20d3cbb5d_comptimeTypeInfo>>::alloc(0LL, (*(_89317_tup))._field_Types.len())});;
	{
		auto expr = &((*(_89317_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2117521cd:;
		if (it != expr_end) {
			jule::Ptr<_20d4de28c_TypeKind> _90121_t = *it;
			{
				{ jule::Slice<jule::Ptr<_20d3cbb5d_comptimeTypeInfo>> &__jule_push_dest = (*(_89817_infos))._field_types; __jule_push_dest.push(_20d435733_pushComptimeTypeInfo((*((*((*(_88831_e))))._field_s))._field_meta.ptr(), &(_90121_t))); };
			}
			_iter_next_2117521cd:;
			++it;
			goto _iter_begin_2117521cd;
		}
		_iter_end_2117521cd:;
	};
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(_89817_infos, 14)}), });;
}



inline jule::Ptr<_20d087165_Data> _20d3d1932__Exceptional(jule::Ptr<_20d3cbb5d_comptimeTypeInfo> _self_, jule::Ptr<_20d088d59_Eval>* _91137_e, jule::Ptr<_20d374a07_FnCallExpr>* _91152_fc) {
	if (((*((*(_91152_fc))))._field_Args.len() > 0LL)) {
		_20d0893a9_pushErr((*(_91137_e)).ptr(), (*((*((*(_91152_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Exceptional", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20d3a5a49_FnIns> _91617_f = _20d4e2e72_Fn((*(_self_))._field_base.ptr());;
	if ((_91617_f == nullptr)) {
		_20d0893a9_pushErr((*(_91137_e)).ptr(), (*((*(_91152_fc))))._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str("Exceptional", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20b0655eb_Const> _92117_constant = static__20b0660be_NewBool((((*(_91617_f))._field_Decl != nullptr) && (*((*(_91617_f))._field_Decl))._field_Exceptional));;
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562d5a_primBool, ._field_Model=jule::Any(_92117_constant, &__jule_any_type19), ._field_Constant=_92117_constant});;
}



inline jule::Ptr<_20d087165_Data> _20d3d1d2d__CanNil(jule::Ptr<_20d3cbb5d_comptimeTypeInfo> _self_, jule::Ptr<_20d088d59_Eval>* _92932_e, jule::Ptr<_20d374a07_FnCallExpr>* _92947_fc) {
	if (((*((*(_92947_fc))))._field_Args.len() > 0LL)) {
		_20d0893a9_pushErr((*(_92932_e)).ptr(), (*((*((*(_92947_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("CanNil", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20b0655eb_Const> _93417_constant = static__20b0660be_NewBool(_20d4e114b_NilCompatible((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562d5a_primBool, ._field_Model=jule::Any(_93417_constant, &__jule_any_type19), ._field_Constant=_93417_constant});;
}



inline jule::Ptr<_20d087165_Data> _20d3d2229__RC(jule::Ptr<_20d3cbb5d_comptimeTypeInfo> _self_, jule::Ptr<_20d088d59_Eval>* _94228_e, jule::Ptr<_20d374a07_FnCallExpr>* _94243_fc) {
	if (((*((*(_94243_fc))))._field_Args.len() > 0LL)) {
		_20d0893a9_pushErr((*(_94228_e)).ptr(), (*((*((*(_94243_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("RC", 2), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20b0655eb_Const> _94717_constant = static__20b0660be_NewBool(_20d4e13d2_PerformsRC((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562d5a_primBool, ._field_Model=jule::Any(_94717_constant, &__jule_any_type19), ._field_Constant=_94717_constant});;
}



inline jule::Ptr<_20d087165_Data> _20d3d2625__Result(jule::Ptr<_20d3cbb5d_comptimeTypeInfo> _self_, jule::Ptr<_20d088d59_Eval>* _95532_e, jule::Ptr<_20d374a07_FnCallExpr>* _95547_fc) {
	if (((*((*(_95547_fc))))._field_Args.len() > 0LL)) {
		_20d0893a9_pushErr((*(_95532_e)).ptr(), (*((*((*(_95547_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Result", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20d3a5a49_FnIns> _96017_f = _20d4e2e72_Fn((*(_self_))._field_base.ptr());;
	if ((_96017_f == nullptr)) {
		_20d0893a9_pushErr((*(_95532_e)).ptr(), (*((*(_95547_fc))))._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str("Result", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*(_96017_f))._field_Result == nullptr)) {
		return _20d3d93da_buildComptimeTypeInfoData(&((*((*(_95532_e))))._field_s), &(_20d5624b9_primVoid));;
	};
	return _20d3d93da_buildComptimeTypeInfoData(&((*((*(_95532_e))))._field_s), &((*(_96017_f))._field_Result));;
}



inline jule::Ptr<_20d087165_Data> _20d3d2a21__Params(jule::Ptr<_20d3cbb5d_comptimeTypeInfo> _self_, jule::Ptr<_20d088d59_Eval>* _97132_e, jule::Ptr<_20d374a07_FnCallExpr>* _97147_fc) {
	if (((*((*(_97147_fc))))._field_Args.len() > 0LL)) {
		_20d0893a9_pushErr((*(_97132_e)).ptr(), (*((*((*(_97147_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Params", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20d3a5a49_FnIns> _97617_f = _20d4e2e72_Fn((*(_self_))._field_base.ptr());;
	if ((_97617_f == nullptr)) {
		_20d0893a9_pushErr((*(_97132_e)).ptr(), (*((*(_97147_fc))))._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str("Params", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(jule::new_ptr<_20d3c8e68_comptimeParams>(_20d3c8e68_comptimeParams{._field_params=(*(_97617_f))._field_Params}), 13)}), });;
}



inline jule::Ptr<_20d087165_Data> _20d3d2d62_subIdent(jule::Ptr<_20d3cbb5d_comptimeTypeInfo> _self_, jule::Str* _98829_ident) {
	{
		auto &_match_expr{ (*(_98829_ident)) };
		
		if (_match_expr == jule::Str("Str", 3)) {
			_case_begin_211766ea1:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _99121_method = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>([=](jule::Ptr<_20d088d59_Eval>* _99233_e, jule::Ptr<_20d374a07_FnCallExpr>* _99248_fc, jule::Ptr<_20d087165_Data>* ) mutable -> jule::Ptr<_20d087165_Data> {
					return _20d3cc972__Str(_self_, _99233_e, _99248_fc);;
				}), });;
				return _20d3d8c58_buildAsComptimeMethodData(&(_99121_method));;
			}
		}
		else if (_match_expr == jule::Str("Bits", 4)) {
			_case_begin_211767534:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _99821_method = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>([=](jule::Ptr<_20d088d59_Eval>* _99933_e, jule::Ptr<_20d374a07_FnCallExpr>* _99948_fc, jule::Ptr<_20d087165_Data>* ) mutable -> jule::Ptr<_20d087165_Data> {
					return _20d3cd269__Bits(_self_, _99933_e, _99948_fc);;
				}), });;
				return _20d3d8c58_buildAsComptimeMethodData(&(_99821_method));;
			}
		}
		else if (_match_expr == jule::Str("Elem", 4)) {
			_case_begin_21176759a:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _100521_method = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>([=](jule::Ptr<_20d088d59_Eval>* _100633_e, jule::Ptr<_20d374a07_FnCallExpr>* _100648_fc, jule::Ptr<_20d087165_Data>* ) mutable -> jule::Ptr<_20d087165_Data> {
					return _20d3cd665__Elem(_self_, _100633_e, _100648_fc);;
				}), });;
				return _20d3d8c58_buildAsComptimeMethodData(&(_100521_method));;
			}
		}
		else if (_match_expr == jule::Str("Size", 4)) {
			_case_begin_211767611:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _101221_method = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>([=](jule::Ptr<_20d088d59_Eval>* _101333_e, jule::Ptr<_20d374a07_FnCallExpr>* _101348_fc, jule::Ptr<_20d087165_Data>* ) mutable -> jule::Ptr<_20d087165_Data> {
					return _20d3cda61__Size(_self_, _101333_e, _101348_fc);;
				}), });;
				return _20d3d8c58_buildAsComptimeMethodData(&(_101221_method));;
			}
		}
		else if (_match_expr == jule::Str("Key", 3)) {
			_case_begin_211767677:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _101921_method = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>([=](jule::Ptr<_20d088d59_Eval>* _102033_e, jule::Ptr<_20d374a07_FnCallExpr>* _102048_fc, jule::Ptr<_20d087165_Data>* ) mutable -> jule::Ptr<_20d087165_Data> {
					return _20d3cde5c__Key(_self_, _102033_e, _102048_fc);;
				}), });;
				return _20d3d8c58_buildAsComptimeMethodData(&(_101921_method));;
			}
		}
		else if (_match_expr == jule::Str("Value", 5)) {
			_case_begin_211767787:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _102621_method = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>([=](jule::Ptr<_20d088d59_Eval>* _102733_e, jule::Ptr<_20d374a07_FnCallExpr>* _102748_fc, jule::Ptr<_20d087165_Data>* ) mutable -> jule::Ptr<_20d087165_Data> {
					return _20d3ce358__Value(_self_, _102733_e, _102748_fc);;
				}), });;
				return _20d3d8c58_buildAsComptimeMethodData(&(_102621_method));;
			}
		}
		else if (_match_expr == jule::Str("Fields", 6)) {
			_case_begin_2117677ed:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _103321_method = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>([=](jule::Ptr<_20d088d59_Eval>* _103433_e, jule::Ptr<_20d374a07_FnCallExpr>* _103448_fc, jule::Ptr<_20d087165_Data>* ) mutable -> jule::Ptr<_20d087165_Data> {
					return _20d3ce754__Fields(_self_, _103433_e, _103448_fc);;
				}), });;
				return _20d3d8c58_buildAsComptimeMethodData(&(_103321_method));;
			}
		}
		else if (_match_expr == jule::Str("Statics", 7)) {
			_case_begin_211767864:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _104021_method = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>([=](jule::Ptr<_20d088d59_Eval>* _104133_e, jule::Ptr<_20d374a07_FnCallExpr>* _104148_fc, jule::Ptr<_20d087165_Data>* ) mutable -> jule::Ptr<_20d087165_Data> {
					return _20d3ceb50__Statics(_self_, _104133_e, _104148_fc);;
				}), });;
				return _20d3d8c58_buildAsComptimeMethodData(&(_104021_method));;
			}
		}
		else if (_match_expr == jule::Str("Params", 6)) {
			_case_begin_2117678ca:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _104721_method = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>([=](jule::Ptr<_20d088d59_Eval>* _104833_e, jule::Ptr<_20d374a07_FnCallExpr>* _104848_fc, jule::Ptr<_20d087165_Data>* ) mutable -> jule::Ptr<_20d087165_Data> {
					return _20d3d2a21__Params(_self_, _104833_e, _104848_fc);;
				}), });;
				return _20d3d8c58_buildAsComptimeMethodData(&(_104721_method));;
			}
		}
		else if (_match_expr == jule::Str("Types", 5)) {
			_case_begin_211767941:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _105421_method = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>([=](jule::Ptr<_20d088d59_Eval>* _105533_e, jule::Ptr<_20d374a07_FnCallExpr>* _105548_fc, jule::Ptr<_20d087165_Data>* ) mutable -> jule::Ptr<_20d087165_Data> {
					return _20d3d1536__Types(_self_, _105533_e, _105548_fc);;
				}), });;
				return _20d3d8c58_buildAsComptimeMethodData(&(_105421_method));;
			}
		}
		else if (_match_expr == jule::Str("Public", 6)) {
			_case_begin_2117679a7:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _106121_method = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>([=](jule::Ptr<_20d088d59_Eval>* _106233_e, jule::Ptr<_20d374a07_FnCallExpr>* _106248_fc, jule::Ptr<_20d087165_Data>* ) mutable -> jule::Ptr<_20d087165_Data> {
					return _20d3d004b__Public(_self_, _106233_e, _106248_fc);;
				}), });;
				return _20d3d8c58_buildAsComptimeMethodData(&(_106121_method));;
			}
		}
		else if (_match_expr == jule::Str("Binded", 6)) {
			_case_begin_211767a1d:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _106821_method = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>([=](jule::Ptr<_20d088d59_Eval>* _106933_e, jule::Ptr<_20d374a07_FnCallExpr>* _106948_fc, jule::Ptr<_20d087165_Data>* ) mutable -> jule::Ptr<_20d087165_Data> {
					return _20d3d0447__Binded(_self_, _106933_e, _106948_fc);;
				}), });;
				return _20d3d8c58_buildAsComptimeMethodData(&(_106821_method));;
			}
		}
		else if (_match_expr == jule::Str("Ordered", 7)) {
			_case_begin_211767a95:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _107521_method = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>([=](jule::Ptr<_20d088d59_Eval>* _107633_e, jule::Ptr<_20d374a07_FnCallExpr>* _107648_fc, jule::Ptr<_20d087165_Data>* ) mutable -> jule::Ptr<_20d087165_Data> {
					return _20d3d0843__Ordered(_self_, _107633_e, _107648_fc);;
				}), });;
				return _20d3d8c58_buildAsComptimeMethodData(&(_107521_method));;
			}
		}
		else if (_match_expr == jule::Str("Comparable", 10)) {
			_case_begin_211767b1c:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _108221_method = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>([=](jule::Ptr<_20d088d59_Eval>* _108333_e, jule::Ptr<_20d374a07_FnCallExpr>* _108348_fc, jule::Ptr<_20d087165_Data>* ) mutable -> jule::Ptr<_20d087165_Data> {
					return _20d3d0c3e__Comparable(_self_, _108333_e, _108348_fc);;
				}), });;
				return _20d3d8c58_buildAsComptimeMethodData(&(_108221_method));;
			}
		}
		else if (_match_expr == jule::Str("Mutable", 7)) {
			_case_begin_211767b94:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _108921_method = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>([=](jule::Ptr<_20d088d59_Eval>* _109033_e, jule::Ptr<_20d374a07_FnCallExpr>* _109048_fc, jule::Ptr<_20d087165_Data>* ) mutable -> jule::Ptr<_20d087165_Data> {
					return _20d3d113a__Mutable(_self_, _109033_e, _109048_fc);;
				}), });;
				return _20d3d8c58_buildAsComptimeMethodData(&(_108921_method));;
			}
		}
		else if (_match_expr == jule::Str("Exceptional", 11)) {
			_case_begin_211767c1b:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _109621_method = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>([=](jule::Ptr<_20d088d59_Eval>* _109733_e, jule::Ptr<_20d374a07_FnCallExpr>* _109748_fc, jule::Ptr<_20d087165_Data>* ) mutable -> jule::Ptr<_20d087165_Data> {
					return _20d3d1932__Exceptional(_self_, _109733_e, _109748_fc);;
				}), });;
				return _20d3d8c58_buildAsComptimeMethodData(&(_109621_method));;
			}
		}
		else if (_match_expr == jule::Str("CanNil", 6)) {
			_case_begin_211767c93:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _110321_method = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>([=](jule::Ptr<_20d088d59_Eval>* _110433_e, jule::Ptr<_20d374a07_FnCallExpr>* _110448_fc, jule::Ptr<_20d087165_Data>* ) mutable -> jule::Ptr<_20d087165_Data> {
					return _20d3d1d2d__CanNil(_self_, _110433_e, _110448_fc);;
				}), });;
				return _20d3d8c58_buildAsComptimeMethodData(&(_110321_method));;
			}
		}
		else if (_match_expr == jule::Str("RC", 2)) {
			_case_begin_211767d1a:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _111021_method = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>([=](jule::Ptr<_20d088d59_Eval>* _111133_e, jule::Ptr<_20d374a07_FnCallExpr>* _111148_fc, jule::Ptr<_20d087165_Data>* ) mutable -> jule::Ptr<_20d087165_Data> {
					return _20d3d2229__RC(_self_, _111133_e, _111148_fc);;
				}), });;
				return _20d3d8c58_buildAsComptimeMethodData(&(_111021_method));;
			}
		}
		else if (_match_expr == jule::Str("Result", 6)) {
			_case_begin_211767d92:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _111721_method = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>([=](jule::Ptr<_20d088d59_Eval>* _111833_e, jule::Ptr<_20d374a07_FnCallExpr>* _111848_fc, jule::Ptr<_20d087165_Data>* ) mutable -> jule::Ptr<_20d087165_Data> {
					return _20d3d2625__Result(_self_, _111833_e, _111848_fc);;
				}), });;
				return _20d3d8c58_buildAsComptimeMethodData(&(_111721_method));;
			}
		}
		else if (_match_expr == jule::Str("Kind", 4)) {
			_case_begin_211767e19:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _112421_method = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>([=](jule::Ptr<_20d088d59_Eval>* _112533_e, jule::Ptr<_20d374a07_FnCallExpr>* _112548_fc, jule::Ptr<_20d087165_Data>* ) mutable -> jule::Ptr<_20d087165_Data> {
					return _20d3ccd6d__Kind(_self_, _112533_e, _112548_fc);;
				}), });;
				return _20d3d8c58_buildAsComptimeMethodData(&(_112421_method));;
			}
		}
		else {
			_case_begin_211767116:;
			{
				return nullptr;;
			}
		}
		_match_end_211766ce7:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20d3cbb5d_comptimeTypeInfo _Src) {
	_Stream << _20d3cbed2_Str(&_Src);
	return _Stream;
}



inline jule::Str _20d3d34e4_Str(_20d3d3170_comptimeValue* _self_) {
	return jule::Str("comptimeValue", 13);;
}



inline jule::Bool _20d3d3835_Equal(jule::Ptr<_20d3d3170_comptimeValue> _self_, jule::Ptr<_20d4de28c_TypeKind> _114321_other) {
	return false;;
}



inline jule::Ptr<_20d087165_Data> _20d3d3d85__Unwrap(jule::Ptr<_20d3d3170_comptimeValue> _self_, jule::Ptr<_20d088d59_Eval>* _114732_e, jule::Ptr<_20d374a07_FnCallExpr>* _114747_fc) {
	if (((*((*(_114747_fc))))._field_Args.len() > 0LL)) {
		_20d0893a9_pushErr((*(_114732_e)).ptr(), (*((*((*(_114747_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Unwrap", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_self_))._field_data;;
}



inline jule::Ptr<_20d087165_Data> _20d3d4281__Type(jule::Ptr<_20d3d3170_comptimeValue> _self_, jule::Ptr<_20d088d59_Eval>* _115530_e, jule::Ptr<_20d374a07_FnCallExpr>* _115545_fc) {
	if (((*((*(_115545_fc))))._field_Args.len() > 0LL)) {
		_20d0893a9_pushErr((*(_115530_e)).ptr(), (*((*((*(_115545_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _20d3d93da_buildComptimeTypeInfoData(&((*((*(_115530_e))))._field_s), &((*((*(_self_))._field_data))._field_Kind));;
}



inline jule::Ptr<_20d087165_Data> _20d3d467c__Lvalue(jule::Ptr<_20d3d3170_comptimeValue> _self_, jule::Ptr<_20d088d59_Eval>* _116332_e, jule::Ptr<_20d374a07_FnCallExpr>* _116347_fc) {
	if (((*((*(_116347_fc))))._field_Args.len() > 0LL)) {
		_20d0893a9_pushErr((*(_116332_e)).ptr(), (*((*((*(_116347_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Lvalue", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20b0655eb_Const> _116817_constant = static__20b0660be_NewBool((*((*(_self_))._field_data))._field_Lvalue);;
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562d5a_primBool, ._field_Model=jule::Any(_116817_constant, &__jule_any_type19), ._field_Constant=_116817_constant});;
}



inline jule::Ptr<_20d087165_Data> _20d3d4a78__Mutable(jule::Ptr<_20d3d3170_comptimeValue> _self_, jule::Ptr<_20d088d59_Eval>* _117633_e, jule::Ptr<_20d374a07_FnCallExpr>* _117648_fc) {
	if (((*((*(_117648_fc))))._field_Args.len() > 0LL)) {
		_20d0893a9_pushErr((*(_117633_e)).ptr(), (*((*((*(_117648_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Mutable", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20b0655eb_Const> _118117_constant = static__20b0660be_NewBool((*((*(_self_))._field_data))._field_Mutable);;
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562d5a_primBool, ._field_Model=jule::Any(_118117_constant, &__jule_any_type19), ._field_Constant=_118117_constant});;
}



inline jule::Ptr<_20d087165_Data> _20d3d4e74__Const(jule::Ptr<_20d3d3170_comptimeValue> _self_, jule::Ptr<_20d088d59_Eval>* _118931_e, jule::Ptr<_20d374a07_FnCallExpr>* _118946_fc) {
	if (((*((*(_118946_fc))))._field_Args.len() > 0LL)) {
		_20d0893a9_pushErr((*(_118931_e)).ptr(), (*((*((*(_118946_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Const", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20b0655eb_Const> _119417_constant = static__20b0660be_NewBool(_20d087a39_IsConst((*(_self_))._field_data.ptr()));;
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562d5a_primBool, ._field_Model=jule::Any(_119417_constant, &__jule_any_type19), ._field_Constant=_119417_constant});;
}



inline jule::Ptr<_20d087165_Data> _20d3d5370__Field(jule::Ptr<_20d3d3170_comptimeValue> _self_, jule::Ptr<_20d088d59_Eval>* _120231_e, jule::Ptr<_20d374a07_FnCallExpr>* _120246_fc) {
	if (((*((*(_120246_fc))))._field_Args.len() > 1LL)) {
		_20d0893a9_pushErr((*(_120231_e)).ptr(), (*((*((*(_120246_fc))))._field_Args[1LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Field", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20d39066b_StructIns> _120717_s = _20d4e3208_Struct((*((*(_self_))._field_data))._field_Kind.ptr());;
	if ((_120717_s == nullptr)) {
		_20d0893a9_pushErr((*(_120231_e)).ptr(), (*((*(_120246_fc))))._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*((*(_self_))._field_data))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str("Field", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20d370ccd_Expr> _121217_arg = (*((*(_120246_fc))))._field_Args[0LL];;
	jule::Ptr<_20d087165_Data> _121317_d = _20d4cdc93_evalExpr((*(_120231_e)), _121217_arg);;
	if ((_121317_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_20d087a39_IsConst(_121317_d.ptr())))) {
		_20d0893a9_pushErr((*(_120231_e)).ptr(), (*(_121217_arg))._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20d4e710d_Prim> _122113_prim = _20d4e1b85_Prim((*(_121317_d))._field_Kind.ptr());;
	if (((_122113_prim == nullptr) || (!(_20d4ea595_IsStr(_122113_prim.ptr()))))) {
		_20d0893a9_pushErr((*(_120231_e)).ptr(), (*(_121217_arg))._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type4),jule::Any(_20d4de655_Str((*(_121317_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Str _122613_ident = _20b067774_ReadStr((*(_121317_d))._field_Constant.ptr());;
	jule::Ptr<_20d38eabb_FieldIns> _122717_f = _20d391a24_FindField(_120717_s.ptr(), _122613_ident);;
	if ((_122717_f == nullptr)) {
		_20d0893a9_pushErr((*(_120231_e)).ptr(), (*(_121217_arg))._field_Token, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*(_120717_s))._field_Decl))._field_Ident, &__jule_any_type4),jule::Any(_122613_ident, &__jule_any_type4)}));
		return nullptr;;
	};
	_121317_d=jule::new_ptr<_20d087165_Data>((*((*(_self_))._field_data)));
	_121317_d=_20d4c7099_evalStructSubIdentField((*(_120231_e)).ptr(), &(_121317_d), &(_120717_s), &((*(_121217_arg))._field_Token), &(_122717_f));
	return _20d3d961b_buildComptimeValue(&(_121317_d));;
}



inline jule::Ptr<_20d087165_Data> _20d3d56b1_subIdent(jule::Ptr<_20d3d3170_comptimeValue> _self_, jule::Str* _123729_ident) {
	{
		auto &_match_expr{ (*(_123729_ident)) };
		
		if (_match_expr == jule::Str("Unwrap", 6)) {
			_case_begin_2117a9ad7:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _124021_method = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>([=](jule::Ptr<_20d088d59_Eval>* _124133_e, jule::Ptr<_20d374a07_FnCallExpr>* _124148_fc, jule::Ptr<_20d087165_Data>* ) mutable -> jule::Ptr<_20d087165_Data> {
					return _20d3d3d85__Unwrap(_self_, _124133_e, _124148_fc);;
				}), });;
				return _20d3d8c58_buildAsComptimeMethodData(&(_124021_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_2117a9b5e:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _124721_method = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>([=](jule::Ptr<_20d088d59_Eval>* _124833_e, jule::Ptr<_20d374a07_FnCallExpr>* _124848_fc, jule::Ptr<_20d087165_Data>* ) mutable -> jule::Ptr<_20d087165_Data> {
					return _20d3d4281__Type(_self_, _124833_e, _124848_fc);;
				}), });;
				return _20d3d8c58_buildAsComptimeMethodData(&(_124721_method));;
			}
		}
		else if (_match_expr == jule::Str("Lvalue", 6)) {
			_case_begin_2117a9bd6:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _125421_method = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>([=](jule::Ptr<_20d088d59_Eval>* _125533_e, jule::Ptr<_20d374a07_FnCallExpr>* _125548_fc, jule::Ptr<_20d087165_Data>* ) mutable -> jule::Ptr<_20d087165_Data> {
					return _20d3d467c__Lvalue(_self_, _125533_e, _125548_fc);;
				}), });;
				return _20d3d8c58_buildAsComptimeMethodData(&(_125421_method));;
			}
		}
		else if (_match_expr == jule::Str("Mutable", 7)) {
			_case_begin_2117a9c5d:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _126121_method = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>([=](jule::Ptr<_20d088d59_Eval>* _126233_e, jule::Ptr<_20d374a07_FnCallExpr>* _126248_fc, jule::Ptr<_20d087165_Data>* ) mutable -> jule::Ptr<_20d087165_Data> {
					return _20d3d4a78__Mutable(_self_, _126233_e, _126248_fc);;
				}), });;
				return _20d3d8c58_buildAsComptimeMethodData(&(_126121_method));;
			}
		}
		else if (_match_expr == jule::Str("Const", 5)) {
			_case_begin_2117a9eb1:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _126821_method = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>([=](jule::Ptr<_20d088d59_Eval>* _126933_e, jule::Ptr<_20d374a07_FnCallExpr>* _126948_fc, jule::Ptr<_20d087165_Data>* ) mutable -> jule::Ptr<_20d087165_Data> {
					return _20d3d4e74__Const(_self_, _126933_e, _126948_fc);;
				}), });;
				return _20d3d8c58_buildAsComptimeMethodData(&(_126821_method));;
			}
		}
		else if (_match_expr == jule::Str("Field", 5)) {
			_case_begin_2117aa038:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _127521_method = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>([=](jule::Ptr<_20d088d59_Eval>* _127633_e, jule::Ptr<_20d374a07_FnCallExpr>* _127648_fc, jule::Ptr<_20d087165_Data>* ) mutable -> jule::Ptr<_20d087165_Data> {
					return _20d3d5370__Field(_self_, _127633_e, _127648_fc);;
				}), });;
				return _20d3d8c58_buildAsComptimeMethodData(&(_127521_method));;
			}
		}
		else {
			_case_begin_2117a9a60:;
			{
				return nullptr;;
			}
		}
		_match_end_2117a99d8:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20d3d3170_comptimeValue _Src) {
	_Stream << _20d3d34e4_Str(&_Src);
	return _Stream;
}



inline jule::Str _20d3d5d43_Str(_20d3d59be_comptimeFiles* _self_) {
	return jule::Str("comptimeFiles", 13);;
}



inline jule::Bool _20d3d6184_Equal(jule::Ptr<_20d3d59be_comptimeFiles> _self_, jule::Ptr<_20d4de28c_TypeKind> _129421_other) {
	return false;;
}



inline void _20d3d6607_ready(_20d3d59be_comptimeFiles* _self_, jule::Ptr<_20d458aca_Var>* _129829_keyA, jule::Ptr<_20d458aca_Var>* _129846_keyB) {
	if (((*(_129829_keyA)) != nullptr)) {
		(*((*(_129829_keyA))))._field_Constant=true;
		(*((*(_129829_keyA))))._field_Value=jule::new_ptr<_20d0882a9_Value>(_20d0882a9_Value{._field_Data=jule::new_ptr<_20d087165_Data>()});
		(*((*((*((*(_129829_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_129829_keyA))))._field_Kind=(*(_20d565bd7_findBuiltinTypeAlias(jule::Str("int", 3))))._field_Kind;
	};
	if (((*(_129846_keyB)) != nullptr)) {
		(*((*(_129846_keyB))))._field_Constant=true;
		(*((*(_129846_keyB))))._field_Value=jule::new_ptr<_20d0882a9_Value>(_20d0882a9_Value{._field_Data=jule::new_ptr<_20d087165_Data>()});
		(*((*(_129846_keyB))))._field_Kind=jule::new_ptr<_20d4e6706_TypeSymbol>(_20d4e6706_TypeSymbol{._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(jule::new_ptr<_20d3d70b9_comptimeFile>(), 18)})});
	};
}



inline void _20d3d6a25_step(_20d3d59be_comptimeFiles* _self_, jule::I64 _132023_i, jule::Ptr<_20d458aca_Var>* _132036_keyA, jule::Ptr<_20d458aca_Var>* _132053_keyB) {
	if (((*(_132036_keyA)) != nullptr)) {
		(*((*((*((*(_132036_keyA))))._field_Value))._field_Data))._field_Constant=static__20b065a3b_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_132023_i)));
		(*((*((*((*(_132036_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_132036_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_132053_keyB)) != nullptr)) {
		(*((*((*((*((*(_132053_keyB))))._field_Kind))._field_Kind))._field_Kind.cast_ptr<_20d3d70b9_comptimeFile>(18)))._field_file=(*(_self_))._field_files[_132023_i];
	};
}



inline jule::I64 _20d3d6cab_len(_20d3d59be_comptimeFiles* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_files.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3d59be_comptimeFiles _Src) {
	_Stream << _20d3d5d43_Str(&_Src);
	return _Stream;
}



inline jule::Str _20d3d743d_Str(_20d3d70b9_comptimeFile* _self_) {
	return jule::Str("comptimeFile", 12);;
}



inline jule::Bool _20d3d777e_Equal(jule::Ptr<_20d3d70b9_comptimeFile> _self_, jule::Ptr<_20d4de28c_TypeKind> _134421_other) {
	return false;;
}



inline jule::Ptr<_20d087165_Data> _20d3d7c9b__Path(jule::Ptr<_20d3d70b9_comptimeFile> _self_, jule::Ptr<_20d088d59_Eval>* _134830_e, jule::Ptr<_20d374a07_FnCallExpr>* _134845_fc) {
	if (((*((*(_134845_fc))))._field_Args.len() > 0LL)) {
		_20d0893a9_pushErr((*(_134830_e)).ptr(), (*((*((*(_134845_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Path", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20b0655eb_Const> _135317_constant = static__20b066388_NewStr((*((*((*(_self_))._field_file))._field_File))._field_Path);;
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562a91_primStr, ._field_Model=jule::Any(_135317_constant, &__jule_any_type19), ._field_Constant=_135317_constant});;
}



inline jule::Ptr<_20d087165_Data> _20d3d8197__Name(jule::Ptr<_20d3d70b9_comptimeFile> _self_, jule::Ptr<_20d088d59_Eval>* _136130_e, jule::Ptr<_20d374a07_FnCallExpr>* _136145_fc) {
	if (((*((*(_136145_fc))))._field_Args.len() > 0LL)) {
		_20d0893a9_pushErr((*(_136130_e)).ptr(), (*((*((*(_136145_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20b0655eb_Const> _136617_constant = static__20b066388_NewStr(_20d35728c_Name((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562a91_primStr, ._field_Model=jule::Any(_136617_constant, &__jule_any_type19), ._field_Constant=_136617_constant});;
}



inline jule::Ptr<_20d087165_Data> _20d3d8593__Dir(jule::Ptr<_20d3d70b9_comptimeFile> _self_, jule::Ptr<_20d088d59_Eval>* _137429_e, jule::Ptr<_20d374a07_FnCallExpr>* _137444_fc) {
	if (((*((*(_137444_fc))))._field_Args.len() > 0LL)) {
		_20d0893a9_pushErr((*(_137429_e)).ptr(), (*((*((*(_137444_fc))))._field_Args[0LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Dir", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20b0655eb_Const> _137917_constant = static__20b066388_NewStr(_20d357006_Dir((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562a91_primStr, ._field_Model=jule::Any(_137917_constant, &__jule_any_type19), ._field_Constant=_137917_constant});;
}



inline jule::Ptr<_20d087165_Data> _20d3d88d4_subIdent(jule::Ptr<_20d3d70b9_comptimeFile> _self_, jule::Str* _138729_ident) {
	{
		auto &_match_expr{ (*(_138729_ident)) };
		
		if (_match_expr == jule::Str("Path", 4)) {
			_case_begin_2117c79b2:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _139021_method = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>([=](jule::Ptr<_20d088d59_Eval>* _139133_e, jule::Ptr<_20d374a07_FnCallExpr>* _139148_fc, jule::Ptr<_20d087165_Data>* ) mutable -> jule::Ptr<_20d087165_Data> {
					return _20d3d7c9b__Path(_self_, _139133_e, _139148_fc);;
				}), });;
				return _20d3d8c58_buildAsComptimeMethodData(&(_139021_method));;
			}
		}
		else if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_2117c7a28:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _139721_method = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>([=](jule::Ptr<_20d088d59_Eval>* _139833_e, jule::Ptr<_20d374a07_FnCallExpr>* _139848_fc, jule::Ptr<_20d087165_Data>* ) mutable -> jule::Ptr<_20d087165_Data> {
					return _20d3d8197__Name(_self_, _139833_e, _139848_fc);;
				}), });;
				return _20d3d8c58_buildAsComptimeMethodData(&(_139721_method));;
			}
		}
		else if (_match_expr == jule::Str("Dir", 3)) {
			_case_begin_2117c7a8e:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _140421_method = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>([=](jule::Ptr<_20d088d59_Eval>* _140533_e, jule::Ptr<_20d374a07_FnCallExpr>* _140548_fc, jule::Ptr<_20d087165_Data>* ) mutable -> jule::Ptr<_20d087165_Data> {
					return _20d3d8593__Dir(_self_, _140533_e, _140548_fc);;
				}), });;
				return _20d3d8c58_buildAsComptimeMethodData(&(_140421_method));;
			}
		}
		else {
			_case_begin_2117c794b:;
			{
				return nullptr;;
			}
		}
		_match_end_2117c78e6:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20d3d70b9_comptimeFile _Src) {
	_Stream << _20d3d743d_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_20d435de8_Sema>*,jule::Slice<jule::Ptr<_20d4dd49a_TypeAlias>>*)> _20d3db62e_readyFn(jule::Ptr<_20d3db233_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_20d435de8_Sema>*,jule::Slice<jule::Ptr<_20d4dd49a_TypeAlias>>*)>([=](jule::Ptr<_20d435de8_Sema>* _6321_sema, jule::Slice<jule::Ptr<_20d4dd49a_TypeAlias>>* _6339_generics) mutable -> jule::Bool {
		{
			auto expr = &((*(_self_))._field_genericsD);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2117d7252:;
			if (it != expr_end) {
				jule::I64 _6418_i = it - expr->begin();
				jule::Ptr<_20d378ba4_GenericDecl> _6425_g = *it;
				{
					jule::Ptr<_20d4dc8a6_InsGeneric> _6525_generic = (*(_self_))._field_generics[_6418_i];;
					if ((((*(_6425_g))._field_Constraint == nullptr) || ((*((*(_6425_g))._field_Constraint))._field_Mask.len() == 0LL))) {
						goto _iter_next_2117d7252;
					};
					(*(_6525_generic))._field_Constraint=jule::Slice<jule::Ptr<_20d4de28c_TypeKind>>::alloc(0LL, (*((*(_6425_g))._field_Constraint))._field_Mask.len());
					{
						auto expr = &((*((*(_6425_g))._field_Constraint))._field_Mask);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_2117d85c7:;
						if (it != expr_end) {
							jule::Ptr<_20d36b999_TypeDecl> _7029_mask = *it;
							{
								jule::I64 _7125_n = (*((*(_6321_sema))))._field_errors.len();;
								jule::Ptr<_20d4de28c_TypeKind> _7229_kind = _20d43d9b1_buildTypeWithRefers((*(_6321_sema)), &(_7029_mask), jule::Trait<_20d50e06a_Lookup>((*(_6321_sema)), 3), (*(_6339_generics)), nullptr);;
								if ((_7229_kind == nullptr)) {
									{
										auto &_match_expr{ (*(_7029_mask))._field_Kind };
										
										if (_match_expr.type == &__jule_any_type20) {
											_case_begin_2117dc059:;
											{
												jule::Ptr<_20d36c0a4_IdentTypeDecl> _7637_itd = (*(_7029_mask))._field_Kind.cast_ptr<_20d36c0a4_IdentTypeDecl>(&__jule_any_type20);;
												if ((((*(_7637_itd))._field_Generics.len() == 0LL) && _20d3dc8e9_isBuiltinConstraint(&((*(_7637_itd))._field_Ident)))) {
													_7229_kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(_20d50b452_buildPrimType((*(_7637_itd))._field_Ident), 20)});
													(*((*(_6321_sema))))._field_errors=(*((*(_6321_sema))))._field_errors.slice(0LL, _7125_n);
													goto _julec_label_2117dd236;
												};
											}
										}
										_match_end_2117dc004:;
									};
									return false;;
								};
								_julec_label_2117dd236:;
								{ jule::Slice<jule::Ptr<_20d4de28c_TypeKind>> &__jule_push_dest = (*(_6525_generic))._field_Constraint; __jule_push_dest.push(_7229_kind); };
							}
							_iter_next_2117d85c7:;
							++it;
							goto _iter_begin_2117d85c7;
						}
						_iter_end_2117d85c7:;
					};
				}
				_iter_next_2117d7252:;
				++it;
				_6418_i++;
				goto _iter_begin_2117d7252;
			}
			_iter_end_2117d7252:;
		};
		return true;;
	});;
}



inline jule::Bool _20d3db8b5_readyFi(jule::Ptr<_20d3db233_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*(_self_))._field_fi))._field_Decl))._field_Generics;
	(*(_self_))._field_generics=(*((*(_self_))._field_fi))._field_Generics;
	return ((!((*(_self_))._field_uniq)) || _20d443543_fnEnvironment((*(_self_))._field_s, &((*(_self_))._field_fi), _20d3db62e_readyFn(_self_)));;
}



inline jule::Bool _20d3dbb4b_readySi(jule::Ptr<_20d3db233_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*(_self_))._field_si))._field_Decl))._field_Generics;
	(*(_self_))._field_generics=(*((*(_self_))._field_si))._field_Generics;
	return ((!((*(_self_))._field_uniq)) || _20d3db62e_readyFn(_self_)(&((*(_self_))._field_s), &((*(_self_))._field_genericsA)));;
}



inline jule::Bool _20d3dbdd2_ready(jule::Ptr<_20d3db233_constraintChecker> _self_) {
	if (((*(_self_))._field_fi != nullptr)) {
		return _20d3db8b5_readyFi(_self_);;
	};
	return _20d3dbb4b_readySi(_self_);;
}



inline jule::Bool _20d3dc168_check(jule::Ptr<_20d3db233_constraintChecker> _self_) {
	if ((!(_20d3dbdd2_ready(_self_)))) {
		return false;;
	};
	_julec_label_2117e59d0:;
	{
		auto expr = &((*(_self_))._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2117e6184:;
		if (it != expr_end) {
			jule::I64 _11914_i = it - expr->begin();
			jule::Ptr<_20d4dc8a6_InsGeneric> _11921_g = *it;
			{
				if (((*(_11921_g))._field_Constraint == nullptr)) {
					goto _iter_next_2117e6184;
				};
				{
					auto expr = &((*(_11921_g))._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2117e7273:;
					if (it != expr_end) {
						jule::Ptr<_20d4de28c_TypeKind> _12325_c2 = *it;
						{
							jule::Ptr<_20d4e710d_Prim> _12425_prim = _20d4e1b85_Prim(_12325_c2.ptr());;
							if (((_12425_prim != nullptr) && _20d4e7c35_IsConstraint(_12425_prim.ptr()))) {
								if (_20d3dc5db_matchConstraint(&((*(_12425_prim))._field_Kind), &((*(_11921_g))._field_Kind))) {
									goto _iter_next_2117e6184;
								};
								goto _iter_next_2117e7273;
							};
							if (_20d4de996_Equal(_12325_c2, (*(_11921_g))._field_Kind)) {
								goto _iter_next_2117e6184;
							};
						}
						_iter_next_2117e7273:;
						++it;
						goto _iter_begin_2117e7273;
					}
					_iter_end_2117e7273:;
				};
				_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_et, jule::Str("type @ is not matched with @'s constraint", 41), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_11921_g))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*(_self_))._field_genericsD[_11914_i]))._field_Ident, &__jule_any_type4)}));
				return false;;
			}
			_iter_next_2117e6184:;
			++it;
			_11914_i++;
			goto _iter_begin_2117e6184;
		}
		_iter_end_2117e6184:;
	};
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3db233_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20d3dd631_IsTraitImpl(_20d3dd268_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _20d3dd8b7_IsStructImpl(_20d3dd268_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3dd268_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3e369c_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3e3aba_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3e3db7_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3e42d5_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3e45d2_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3e4a88_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3e54d4_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3e5869_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3e5c43_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3e6040_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3e6419_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3e67e3_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3e6c99_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3e7173_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3e77d3_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3e841b_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3e8a15_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3e8d9a_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3e950a_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3e9a8d_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "st:" << _Src._field_st << ", ";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20d414d94_ImportInfo> _20d3eae46_SelectPackage(_20d3ea9a1_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_20d414d94_ImportInfo>)> _45832_selector) {
	return _20d43638d_SelectPackage((*(_self_))._field_s.ptr(), _45832_selector);;
}



inline jule::Ptr<_20d458aca_Var> _20d3eb342_FindVar(_20d3ea9a1_scopeChecker* _self_, jule::Str _46926_ident, jule::Bool _46938_binded) {
	;
	jule::Ptr<_20d458aca_Var> _47217_v = _20d084607_findVar((*(_self_))._field_table.ptr(), &(_46926_ident), _46938_binded, true);;
	if ((_47217_v != nullptr)) {
		return _47217_v;;
	};
	jule::Ptr<_20d3ea9a1_scopeChecker> _47717_parent = (*(_self_))._field_parent;;
	while ((_47717_parent != nullptr)) {
		{
			_47217_v=_20d084607_findVar((*(_47717_parent))._field_table.ptr(), &(_46926_ident), _46938_binded, true);
			if ((_47217_v != nullptr)) {
				return _47217_v;;
			};
			_47717_parent=(*(_47717_parent))._field_parent;
		}
	_iter_next_21182ddd1:;
	}
	_iter_end_21182ddd1:;;
	return _20d436789_FindVar((*(_self_))._field_s.ptr(), _46926_ident, _46938_binded);;
}



inline jule::Ptr<_20d4dd49a_TypeAlias> _20d3eb73d_FindTypeAlias(_20d3ea9a1_scopeChecker* _self_, jule::Str _49632_ident, jule::Bool _49644_binded) {
	;
	jule::Ptr<_20d4dd49a_TypeAlias> _49917_ta = _20d084aad_findTypeAlias((*(_self_))._field_table.ptr(), &(_49632_ident), _49644_binded, true);;
	if ((_49917_ta != nullptr)) {
		return _49917_ta;;
	};
	jule::Ptr<_20d3ea9a1_scopeChecker> _50417_parent = (*(_self_))._field_parent;;
	while ((_50417_parent != nullptr)) {
		{
			_49917_ta=_20d084aad_findTypeAlias((*(_50417_parent))._field_table.ptr(), &(_49632_ident), _49644_binded, true);
			if ((_49917_ta != nullptr)) {
				return _49917_ta;;
			};
			_50417_parent=(*(_50417_parent))._field_parent;
		}
	_iter_next_211831de5:;
	}
	_iter_end_211831de5:;;
	return _20d436b85_FindTypeAlias((*(_self_))._field_s.ptr(), _49632_ident, _49644_binded);;
}



inline jule::Ptr<_20d38c58b_Struct> _20d3ebb39_FindStruct(_20d3ea9a1_scopeChecker* _self_, jule::Str _52129_ident, jule::Bool _52141_binded) {
	return _20d437081_FindStruct((*(_self_))._field_s.ptr(), _52129_ident, _52141_binded);;
}



inline jule::Ptr<_20d3a2b45_Fn> _20d3ec035_FindFn(_20d3ea9a1_scopeChecker* _self_, jule::Str _53025_ident, jule::Bool _53037_binded) {
	return _20d43747c_FindFn((*(_self_))._field_s.ptr(), _53025_ident, _53037_binded);;
}



inline jule::Ptr<_20d3b5dde_Trait> _20d3ec376_FindTrait(_20d3ea9a1_scopeChecker* _self_, jule::Str _53928_ident) {
	return _20d4377bd_FindTrait((*(_self_))._field_s.ptr(), _53928_ident);;
}



inline jule::Ptr<_20d3b85d9_Enum> _20d3ec6b7_FindEnum(_20d3ea9a1_scopeChecker* _self_, jule::Str _54827_ident) {
	return _20d437b0e_FindEnum((*(_self_))._field_s.ptr(), _54827_ident);;
}



inline jule::Ptr<_20d3b9ce4_TypeEnum> _20d3eca08_FindTypeEnum(_20d3ea9a1_scopeChecker* _self_, jule::Str _55731_ident) {
	return _20d437e50_FindTypeEnum((*(_self_))._field_s.ptr(), _55731_ident);;
}



inline jule::Bool _20d3ecd5a_isUnsafe(jule::Ptr<_20d3ea9a1_scopeChecker> _self_) {
	jule::Ptr<_20d3ea9a1_scopeChecker> _56517_scope = _self_;;
	_julec_label_211836a54:;
	if ((*((*(_56517_scope))._field_scope))._field_Unsafety) {
		return true;;
	};
	if (((*(_56517_scope))._field_parent != nullptr)) {
		_56517_scope=(*(_56517_scope))._field_parent;
		goto _julec_label_211836a54;
	};
	return false;;
}



inline jule::Bool _20d3ed0e1_isRoot(_20d3ea9a1_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _20d3ed2de_stop(_20d3ea9a1_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _20d3ed575_stopped(_20d3ea9a1_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _20d3ed80b_isDeferred(jule::Ptr<_20d3ea9a1_scopeChecker> _self_) {
	jule::Ptr<_20d3ea9a1_scopeChecker> _59817_scope = _self_;;
	_julec_label_211839dcb:;
	if ((*((*(_59817_scope))._field_scope))._field_Deferred) {
		return true;;
	};
	if (((*(_59817_scope))._field_parent != nullptr)) {
		_59817_scope=(*(_59817_scope))._field_parent;
		goto _julec_label_211839dcb;
	};
	return false;;
}



inline jule::Ptr<_20d3ea9a1_scopeChecker> _20d3eda92_getRoot(jule::Ptr<_20d3ea9a1_scopeChecker> _self_) {
	jule::Ptr<_20d3ea9a1_scopeChecker> _61617_root = _self_;;
	while ((((*(_61617_root))._field_parent != nullptr) && ((*(_61617_root))._field_owner == nullptr))) {
		{
			_61617_root=(*(_61617_root))._field_parent;
		}
	_iter_next_21183bd67:;
	}
	_iter_end_21183bd67:;;
	return _61617_root;;
}



inline jule::Ptr<_20d3ea9a1_scopeChecker> _20d3edd28_getHardRoot(jule::Ptr<_20d3ea9a1_scopeChecker> _self_) {
	jule::Ptr<_20d3ea9a1_scopeChecker> _62617_root = _self_;;
	while (((*(_62617_root))._field_parent != nullptr)) {
		{
			_62617_root=(*(_62617_root))._field_parent;
		}
	_iter_next_21183d1ba:;
	}
	_iter_end_21183d1ba:;;
	return _62617_root;;
}



inline jule::Ptr<_20d3e6040_Label> _20d3ee169_findLabel(_20d3ea9a1_scopeChecker* _self_, jule::Str* _63629_ident) {
	{
		auto expr = &((*((*(_self_))._field_scope))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21183e045:;
		if (it != expr_end) {
			jule::Any _63721_st = *it;
			{
				{
					auto &_match_expr{ _63721_st };
					
					if (_match_expr.type == &__jule_any_type21) {
						_case_begin_21183eb7d:;
						{
							jule::Ptr<_20d3e6040_Label> _64025_label = _63721_st.cast_ptr<_20d3e6040_Label>(&__jule_any_type21);;
							if (((*(_64025_label))._field_Ident == (*(_63629_ident)))) {
								return _64025_label;;
							};
						}
					}
					_match_end_21183eb28:;
				};
			}
			_iter_next_21183e045:;
			++it;
			goto _iter_begin_21183e045;
		}
		_iter_end_21183e045:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d3e950a_scopeLabel> _20d3ee4aa_findLabelScope(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Str* _65235_ident) {
	jule::Ptr<_20d3e950a_scopeLabel> _65317_label = _20d3ee7eb_findLabelAll(_self_.ptr(), _65235_ident);;
	if (((_65317_label != nullptr) && ((*(_65317_label))._field_scope == _self_))) {
		return _65317_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_20d3e950a_scopeLabel> _20d3ee7eb_findLabelAll(_20d3ea9a1_scopeChecker* _self_, jule::Str* _66432_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211842059:;
		if (it != expr_end) {
			jule::Ptr<_20d3e950a_scopeLabel> _66521_lbl = *it;
			{
				if (((*((*(_66521_lbl))._field_label))._field_Ident == (*(_66432_ident)))) {
					return _66521_lbl;;
				};
			}
			_iter_next_211842059:;
			++it;
			goto _iter_begin_211842059;
		}
		_iter_end_211842059:;
	};
	return nullptr;;
}



inline jule::Bool _20d3eebe7_isDuplicatedIdent(_20d3ea9a1_scopeChecker* _self_, jule::Uintptr _67636_itself, jule::Str* _67654_ident) {
	jule::Ptr<_20d458aca_Var> _67713_v = _20d3eb342_FindVar(_self_, (*(_67654_ident)), false);;
	if (((_67713_v != nullptr) && (static_cast<jule::Uintptr>(_67713_v) != _67636_itself))) {
		if (((*(_67713_v))._field_Scope == nullptr)) {
			return false;;
		};
		return (((*(_67713_v))._field_Scope == (*(_self_))._field_scope) || (!(_20d43835c_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	jule::Ptr<_20d4dd49a_TypeAlias> _68513_ta = _20d3eb73d_FindTypeAlias(_self_, (*(_67654_ident)), false);;
	if (((_68513_ta != nullptr) && (static_cast<jule::Uintptr>(_68513_ta) != _67636_itself))) {
		if (((*(_68513_ta))._field_Scope == nullptr)) {
			return false;;
		};
		return (((*(_68513_ta))._field_Scope == (*(_self_))._field_tree) || (!(_20d43835c_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	return false;;
}



inline void _20d3eeea0_checkVarDecl(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d37e737_VarDecl> _69636_decl) {
	jule::Ptr<_20d458aca_Var> _69717_v = _20d3ae17e_buildVar(_69636_decl);;
	(*(_69717_v))._field_Scope=(*(_self_))._field_scope;
	__JULE_DEFER({
		{ jule::Slice<jule::Ptr<_20d458aca_Var>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Vars; __jule_push_dest.push(_69717_v); };
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_69717_v, &__jule_any_type8)); };
	});;
	if (_20d3eebe7_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_69717_v)), &((*(_69717_v))._field_Ident))) {
		_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_69717_v))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_69717_v))._field_Ident, &__jule_any_type4)}));
		_20d438d96_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_20d3ed2de_stop(_self_.ptr());
		return;;
	};
	_20d44b22c_checkVarDecl((*(_self_))._field_s, &(_69717_v), jule::Trait<_20d50e06a_Lookup>(_self_, 0));
	if (((!(_20d4591e6_IsTypeInferred(_69717_v.ptr()))) && (((*(_69717_v))._field_Kind == nullptr) || ((*((*(_69717_v))._field_Kind))._field_Kind == nullptr)))) {
		return;;
	};
	_20d4502b9_evalVarValue((*(_self_))._field_s, &(_69717_v), jule::Trait<_20d50e06a_Lookup>(_self_, 0));
	if (((!(_20d458e60_IsInitialized(_69717_v.ptr()))) || ((*((*(_69717_v))._field_Value))._field_Data == nullptr))) {
		return;;
	};
	_20d40621a_removeInteriorMutRisk(_self_, &((*((*(_69717_v))._field_Value))._field_Data));
	_20d44ee56_checkVarValue((*(_self_))._field_s, &(_69717_v));
}



inline void _20d400258_checkTypeAlias(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d4dd49a_TypeAlias>* _72739_ta) {
	if (_20d3eebe7_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_72739_ta)))), &((*((*(_72739_ta))))._field_Ident))) {
		_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*(_72739_ta))))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_72739_ta))))._field_Ident, &__jule_any_type4)}));
		_20d438d96_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_20d3ed2de_stop(_self_.ptr());
		return;;
	};
	_20d4452ae_checkTypeAliasDecl((*(_self_))._field_s, _72739_ta, jule::Trait<_20d50e06a_Lookup>(_self_, 0));
	{ jule::Slice<jule::Ptr<_20d4dd49a_TypeAlias>> &__jule_push_dest = (*((*(_self_))._field_table))._field_TypeAliases; __jule_push_dest.push((*(_72739_ta))); };
	if (((*((*((*(_72739_ta))))._field_Kind))._field_Kind == nullptr)) {
		_20d3ed2de_stop(_self_.ptr());
	};
}



inline void _20d400511_checkTypeAliasDecl(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d38330c_TypeAliasDecl> _74342_decl) {
	jule::Ptr<_20d4dd49a_TypeAlias> _74417_ta = _20d3aab4d_buildTypeAlias(_74342_decl);;
	_20d400258_checkTypeAlias(_self_, &(_74417_ta));
}



inline jule::Ptr<_20d3e369c_Scope> _20d400797_getChild(_20d3ea9a1_scopeChecker* _self_) {
	return jule::new_ptr<_20d3e369c_Scope>(_20d3e369c_Scope{._field_Parent=(*(_self_))._field_scope, });;
}



inline void _20d400bb5_checkChildSsc(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d37b9ba_ScopeTree>* _75438_tree, jule::Ptr<_20d3e369c_Scope>* _75461_s, jule::Ptr<_20d3ea9a1_scopeChecker>* _75477_ssc) {
	(*((*(_75477_ssc))))._field_parent=_self_;
	_20d40c463_check((*(_75477_ssc)), _75438_tree, _75461_s);
}



inline jule::Ptr<_20d3e369c_Scope> _20d4010b1_checkChildSc(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d37b9ba_ScopeTree>* _75937_tree, jule::Ptr<_20d3ea9a1_scopeChecker>* _75960_ssc) {
	jule::Ptr<_20d3e369c_Scope> _76017_s = _20d400797_getChild(_self_.ptr());;
	_20d400bb5_checkChildSsc(_self_, _75937_tree, &(_76017_s), _75960_ssc);
	return _76017_s;;
}



inline jule::Ptr<_20d3e369c_Scope> _20d401402_checkChild(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d37b9ba_ScopeTree>* _76535_tree) {
	jule::Ptr<_20d3ea9a1_scopeChecker> _76617_ssc = _20d40c6e9_newChildChecker(_self_);;
	return _20d4010b1_checkChildSc(_self_, _76535_tree, &(_76617_ssc));;
}



inline void _20d4016aa_checkAnonScope(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d37b9ba_ScopeTree> _77038_tree) {
	jule::Ptr<_20d3e369c_Scope> _77117_s = _20d401402_checkChild(_self_, &(_77038_tree));;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_77117_s, &__jule_any_type22)); };
}



inline void _20d401a1d_processErrorCall(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d39d9a9_BuiltinErrorCallExprModel>* _77541_m, jule::Ptr<_20d3510bb_Token> _77572_err) {
	if (_20d3ed80b_isDeferred(_self_)) {
		_20d438a33_pushErr((*(_self_))._field_s.ptr(), _77572_err, jule::Str("deferred scopes are not supports error calls", 44), jule::Slice<jule::Any>());
	};
	jule::Ptr<_20d3ea9a1_scopeChecker> _78017_root = _20d3eda92_getRoot(_self_);;
	if ((!((*((*((*(_78017_root))._field_owner))._field_Decl))._field_Exceptional))) {
		_20d438a33_pushErr((*(_self_))._field_s.ptr(), _77572_err, jule::Str("error call can only useable for exceptional functions", 53), jule::Slice<jule::Any>());
		_20d438d96_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57), jule::Slice<jule::Any>());
	};
	(*((*(_77541_m))))._field_Func=(*(_78017_root))._field_owner;
}



inline void _20d401cc6_checkExpr(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d370ccd_Expr> _78833_expr) {
	jule::Ptr<_20d088d59_Eval> _78917_eval = _20d440ed0_eval((*(_self_))._field_s, jule::Trait<_20d50e06a_Lookup>(_self_, 0));;
	(*(_78917_eval))._field_ignored=true;
	jule::Ptr<_20d087165_Data> _79117_d = _20d4cdc93_evalExpr(_78917_eval, _78833_expr);;
	if (((_79117_d == nullptr) || ((*(_79117_d))._field_Model == nullptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_79117_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_21185e86d:;
			{
				jule::Ptr<_20d39d9a9_BuiltinErrorCallExprModel> _80021_m = (*(_79117_d))._field_Model.cast_ptr<_20d39d9a9_BuiltinErrorCallExprModel>(&__jule_any_type23);;
				_20d401a1d_processErrorCall(_self_, &(_80021_m), (*(_78833_expr))._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_79117_d, &__jule_any_type24)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31 || _match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33 || _match_expr.type == &__jule_any_type34 || _match_expr.type == &__jule_any_type35) {
			_case_begin_211860330:;
			{
				{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_79117_d, &__jule_any_type24)); };
			}
		}
		else {
			_case_begin_21185eebc:;
			{
				_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_78833_expr))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_21185ee67:;
	};
}



inline jule::Ptr<_20d3e3aba_If> _20d402117_checkIf(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d382240_If> _82031_i) {
	jule::Ptr<_20d3e369c_Scope> _82117_s = _20d401402_checkChild(_self_, &((*(_82031_i))._field_Scope));;
	jule::Ptr<_20d087165_Data> _82317_d = _20d4cdc93_evalExpr(_20d440ed0_eval((*(_self_))._field_s, jule::Trait<_20d50e06a_Lookup>(_self_, 0)), (*(_82031_i))._field_Expr);;
	if ((_82317_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_20d4e710d_Prim> _82817_prim = _20d4e1b85_Prim((*(_82317_d))._field_Kind.ptr());;
	if (((_82817_prim == nullptr) || (!(_20d4ea30e_IsBool(_82817_prim.ptr()))))) {
		_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*(_82031_i))._field_Expr))._field_Token, jule::Str("if conditions must be have boolean expression", 45), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_20d3e3aba_If>(_20d3e3aba_If{._field_Expr=(*(_82317_d))._field_Model, ._field_Scope=_82117_s});;
}



inline jule::Ptr<_20d3e3db7_Else> _20d402458_checkElse(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d382619_Else> _84033_e) {
	return jule::new_ptr<_20d3e3db7_Else>(_20d3e3db7_Else{._field_Scope=_20d401402_checkChild(_self_, &((*(_84033_e))._field_Scope))});;
}



inline void _20d402711_checkConditional(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d382ac0_Conditional> _84640_conditional) {
	jule::Ptr<_20d3e42d5_Conditional> _84717_c = jule::new_ptr<_20d3e42d5_Conditional>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_84717_c, &__jule_any_type36)); };
	(*(_84717_c))._field_Elifs=jule::Slice<jule::Ptr<_20d3e3aba_If>>::alloc(0LL, ((*(_84640_conditional))._field_Tail.len() + 1LL));
	{ jule::Slice<jule::Ptr<_20d3e3aba_If>> &__jule_push_dest = (*(_84717_c))._field_Elifs; __jule_push_dest.push(_20d402117_checkIf(_self_, (*(_84640_conditional))._field_Head)); };
	{
		auto expr = &((*(_84640_conditional))._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21186c095:;
		if (it != expr_end) {
			jule::Ptr<_20d382240_If> _85321_elif = *it;
			{
				{ jule::Slice<jule::Ptr<_20d3e3aba_If>> &__jule_push_dest = (*(_84717_c))._field_Elifs; __jule_push_dest.push(_20d402117_checkIf(_self_, _85321_elif)); };
			}
			_iter_next_21186c095:;
			++it;
			goto _iter_begin_21186c095;
		}
		_iter_end_21186c095:;
	};
	if (((*(_84640_conditional))._field_Default != nullptr)) {
		(*(_84717_c))._field_Default=_20d402458_checkElse(_self_, (*(_84640_conditional))._field_Default);
	};
}



inline void _20d402bd9_checkIterScopeSsc(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Uintptr _86237_it, jule::Ptr<_20d37b9ba_ScopeTree> _86254_tree, jule::Ptr<_20d3e369c_Scope>* _86277_s, jule::Ptr<_20d3ea9a1_scopeChecker> _86292_ssc) {
	(*(_86292_ssc))._field_it=_86237_it;
	_20d400bb5_checkChildSsc(_self_, &(_86254_tree), _86277_s, &(_86292_ssc));
}



inline jule::Ptr<_20d3e369c_Scope> _20d403190_checkIterScopeSc(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Uintptr _86736_it, jule::Ptr<_20d37b9ba_ScopeTree> _86753_tree, jule::Ptr<_20d3ea9a1_scopeChecker> _86775_ssc) {
	jule::Ptr<_20d3e369c_Scope> _86817_scope = _20d400797_getChild(_self_.ptr());;
	_20d402bd9_checkIterScopeSsc(_self_, _86736_it, _86753_tree, &(_86817_scope), _86775_ssc);
	return _86817_scope;;
}



inline jule::Ptr<_20d3e369c_Scope> _20d40358b_checkIterScope(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Uintptr _87334_it, jule::Ptr<_20d37b9ba_ScopeTree>* _87352_tree) {
	jule::Ptr<_20d3ea9a1_scopeChecker> _87417_ssc = _20d40c6e9_newChildChecker(_self_);;
	return _20d403190_checkIterScopeSc(_self_, _87334_it, (*(_87352_tree)), _87417_ssc);;
}



inline void _20d403844_checkInfIter(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d3802a4_Iter>* _87837_it) {
	jule::Ptr<_20d3e45d2_InfIter> _87917_kind = jule::new_ptr<_20d3e45d2_InfIter>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_87917_kind, &__jule_any_type37)); };
	(*(_87917_kind))._field_Scope=_20d40358b_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_87917_kind)), &((*((*(_87837_it))))._field_Scope));
}



inline void _20d403aec_checkWhileIter(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d3802a4_Iter>* _88439_it) {
	jule::Ptr<_20d380ace_WhileKind> _88517_wh = (*((*(_88439_it))))._field_Kind.cast_ptr<_20d380ace_WhileKind>(&__jule_any_type38);;
	if ((((*(_88517_wh))._field_Expr == nullptr) && ((*(_88517_wh))._field_Next == nullptr))) {
		_20d403844_checkInfIter(_self_, _88439_it);
		return;;
	};
	jule::Ptr<_20d3e4a88_WhileIter> _89117_kind = jule::new_ptr<_20d3e4a88_WhileIter>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_89117_kind, &__jule_any_type39)); };
	(*(_89117_kind))._field_Scope=_20d40358b_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_89117_kind)), &((*((*(_88439_it))))._field_Scope));
	if (((*(_88517_wh))._field_Expr != nullptr)) {
		jule::Ptr<_20d087165_Data> _89621_d = _20d4cdc93_evalExpr(_20d440ed0_eval((*(_self_))._field_s, jule::Trait<_20d50e06a_Lookup>(_self_, 0)), (*(_88517_wh))._field_Expr);;
		if ((_89621_d == nullptr)) {
			return;;
		};
		jule::Ptr<_20d4e710d_Prim> _90117_prim = _20d4e1b85_Prim((*(_89621_d))._field_Kind.ptr());;
		if ((_90117_prim == nullptr)) {
			_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*(_88439_it))))._field_Token, jule::Str("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_20d4ea30e_IsBool(_90117_prim.ptr())))) {
			_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*(_88439_it))))._field_Token, jule::Str("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		(*(_89117_kind))._field_Expr=(*(_89621_d))._field_Model;
	};
	if (_20d380e42_IsWhileNext(_88517_wh.ptr())) {
		if ((!(_20d3e2ba7_isValidAstStForNextSt(&((*(_88517_wh))._field_Next))))) {
			_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_88517_wh))._field_NextToken, jule::Str("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _92117_n = (*((*(_self_))._field_scope))._field_Stmts.len();;
		_20d40b099_checkNode(_self_, &((*(_88517_wh))._field_Next));
		if ((_92117_n < (*((*(_self_))._field_scope))._field_Stmts.len())) {
			jule::Any _92425_st = (*((*(_self_))._field_scope))._field_Stmts[_92117_n];;
			(*((*(_self_))._field_scope))._field_Stmts=(*((*(_self_))._field_scope))._field_Stmts.slice(0LL, _92117_n);
			if ((!(_20d3e2e71_isValidStForNextSt(&(_92425_st))))) {
				_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_88517_wh))._field_NextToken, jule::Str("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			};
			(*(_89117_kind))._field_Next=_92425_st;
		};
	};
}



inline void _20d40401a_checkComptimeRangeIter(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d3802a4_Iter>* _93447_it, jule::Ptr<_20d3e54d4_RangeIter>* _93463_kind, jule::Ptr<_20d087165_Data>* _93486_d) {
	if (((*((*(_93463_kind))))._field_KeyA != nullptr)) {
		if (((!(_20d43835c_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _20d3eebe7_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*((*(_93463_kind))))._field_KeyA))._field_Ident)))) {
			_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_93463_kind))))._field_KeyA))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_93463_kind))))._field_KeyA))._field_Ident, &__jule_any_type4)}));
			_20d438d96_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	if (((*((*(_93463_kind))))._field_KeyB != nullptr)) {
		if (((!(_20d43835c_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _20d3eebe7_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*((*(_93463_kind))))._field_KeyB))._field_Ident)))) {
			_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_93463_kind))))._field_KeyB))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_93463_kind))))._field_KeyB))._field_Ident, &__jule_any_type4)}));
			_20d438d96_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_20d3bc18c_comptimeRange> _94817_comptime = _20d4e502e_comptimeRange((*((*(_93486_d))))._field_Kind.ptr());;
	_20d3bbea0_comptimeRangeKind_mptr_data[((*(_94817_comptime))._field_kind).type_offset]._20d3bb697_ready((*(_94817_comptime))._field_kind, &((*((*(_93463_kind))))._field_KeyA), &((*((*(_93463_kind))))._field_KeyB));
	jule::I64 _95017_i = 0LL;;
	jule::I64 _95113_errors = (*((*(_self_))._field_s))._field_errors.len();;
	for (; (_95017_i < _20d3bbea0_comptimeRangeKind_mptr_data[((*(_94817_comptime))._field_kind).type_offset]._20d3bbd4b_len((*(_94817_comptime))._field_kind)); (_95017_i)++) {
		{
			jule::Ptr<_20d3ea9a1_scopeChecker> _95321_ssc = _20d40c6e9_newChildChecker(_self_);;
			jule::Ptr<_20d3e369c_Scope> _95421_scope = _20d400797_getChild(_self_.ptr());;
			if (((*((*(_93463_kind))))._field_KeyA != nullptr)) {
				(*((*((*(_93463_kind))))._field_KeyA))._field_Scope=_95421_scope;
				{ jule::Slice<jule::Ptr<_20d458aca_Var>> &__jule_push_dest = (*((*(_95321_ssc))._field_table))._field_Vars; __jule_push_dest.push((*((*(_93463_kind))))._field_KeyA); };
			};
			if (((*((*(_93463_kind))))._field_KeyB != nullptr)) {
				(*((*((*(_93463_kind))))._field_KeyB))._field_Scope=_95421_scope;
				{ jule::Slice<jule::Ptr<_20d458aca_Var>> &__jule_push_dest = (*((*(_95321_ssc))._field_table))._field_Vars; __jule_push_dest.push((*((*(_93463_kind))))._field_KeyB); };
			};
			_20d3bbea0_comptimeRangeKind_mptr_data[((*(_94817_comptime))._field_kind).type_offset]._20d3bbab5_step((*(_94817_comptime))._field_kind, _95017_i, &((*((*(_93463_kind))))._field_KeyA), &((*((*(_93463_kind))))._field_KeyB));
			_20d400bb5_checkChildSsc(_self_, &((*((*(_93447_it))))._field_Scope), &(_95421_scope), &(_95321_ssc));
			if ((_95113_errors != (*((*(_self_))._field_s))._field_errors.len())) {
				goto _iter_end_211889667;
			};
			{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_95421_scope, &__jule_any_type22)); };
		}
	_iter_next_211889667:;
	}
	_iter_end_211889667:;;
}



inline void _20d4042c3_checkRangeIter(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d3802a4_Iter>* _97339_it) {
	jule::Ptr<_20d3814d6_RangeKind> _97417_rang = (*((*(_97339_it))))._field_Kind.cast_ptr<_20d3814d6_RangeKind>(&__jule_any_type40);;
	jule::Ptr<_20d087165_Data> _97617_d = _20d4cd952_evalExpr1(_20d440ed0_eval((*(_self_))._field_s, jule::Trait<_20d50e06a_Lookup>(_self_, 0)), (*(_97417_rang))._field_Expr);;
	if ((_97617_d == nullptr)) {
		return;;
	};
	jule::Ptr<_20d3e54d4_RangeIter> _98117_kind = jule::new_ptr<_20d3e54d4_RangeIter>(_20d3e54d4_RangeIter{._field_Expr=_97617_d, });;
	_20d07c37a_rangeChecker _98517_rc = _20d07c37a_rangeChecker{._field_sc=_self_, ._field_rang=_97417_rang, ._field_Kind=_98117_kind, ._field_d=_97617_d};;
	jule::Bool _99113_ok = _20d07e38d_check(&_98517_rc);;
	if ((!(_99113_ok))) {
		return;;
	};
	jule::Ptr<_20d3bc18c_comptimeRange> _99617_comptimeRange = _20d4e502e_comptimeRange((*(_97617_d))._field_Kind.ptr());;
	if ((_99617_comptimeRange != nullptr)) {
		_20d40401a_checkComptimeRangeIter(_self_, _97339_it, &(_98117_kind), &(_97617_d));
		return;;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_98117_kind, &__jule_any_type41)); };
	jule::Ptr<_20d3ea9a1_scopeChecker> _100417_ssc = _20d40c6e9_newChildChecker(_self_);;
	jule::Ptr<_20d3e369c_Scope> _100517_scope = _20d400797_getChild(_self_.ptr());;
	if (((*(_98117_kind))._field_KeyA != nullptr)) {
		if (((!(_20d43835c_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _20d3eebe7_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*(_98117_kind))._field_KeyA))._field_Ident)))) {
			_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*(_98117_kind))._field_KeyA))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_98117_kind))._field_KeyA))._field_Ident, &__jule_any_type4)}));
			_20d438d96_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*((*(_98117_kind))._field_KeyA))._field_Scope=_100517_scope;
		{ jule::Slice<jule::Ptr<_20d458aca_Var>> &__jule_push_dest = (*((*(_100417_ssc))._field_table))._field_Vars; __jule_push_dest.push((*(_98117_kind))._field_KeyA); };
	};
	if (((*(_98117_kind))._field_KeyB != nullptr)) {
		if (((!(_20d43835c_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _20d3eebe7_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*(_98117_kind))._field_KeyB))._field_Ident)))) {
			_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*(_98117_kind))._field_KeyB))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_98117_kind))._field_KeyB))._field_Ident, &__jule_any_type4)}));
			_20d438d96_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*((*(_98117_kind))._field_KeyB))._field_Scope=_100517_scope;
		{ jule::Slice<jule::Ptr<_20d458aca_Var>> &__jule_push_dest = (*((*(_100417_ssc))._field_table))._field_Vars; __jule_push_dest.push((*(_98117_kind))._field_KeyB); };
	};
	_20d402bd9_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_98117_kind)), (*((*(_97339_it))))._field_Scope, &(_100517_scope), _100417_ssc);
	(*(_98117_kind))._field_Scope=_100517_scope;
}



inline void _20d40457b_checkIter(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d3802a4_Iter> _102933_it) {
	if (_20d380617_IsInf(_102933_it.ptr())) {
		_20d403844_checkInfIter(_self_, &(_102933_it));
		return;;
	};
	{
		auto &_match_expr{ (*(_102933_it))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type38) {
			_case_begin_2118a0c22:;
			{
				_20d403aec_checkWhileIter(_self_, &(_102933_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_2118a1937:;
			{
				_20d4042c3_checkRangeIter(_self_, &(_102933_it));
			}
		}
		else {
			_case_begin_2118a14a3:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_2118a144d:;
	};
}



inline jule::Bool _20d4048bc_checkValidContLabel(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Uintptr _104539_it) {
	jule::Ptr<_20d3ea9a1_scopeChecker> _104617_scope = _self_;;
	_julec_label_2118a2d9a:;
	if (((*(_104617_scope))._field_it == _104539_it)) {
		return true;;
	};
	if (((*(_104617_scope))._field_parent != nullptr)) {
		_104617_scope=(*(_104617_scope))._field_parent;
		goto _julec_label_2118a2d9a;
	};
	return false;;
}



inline jule::Bool _20d404c0d_checkValidBreakLabel(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Uintptr _106140_ptr) {
	jule::Ptr<_20d3ea9a1_scopeChecker> _106217_scope = _self_;;
	_julec_label_2118a4e57:;
	if (((*(_106217_scope))._field_it == _106140_ptr)) {
		return true;;
	};
	if (((*(_106217_scope))._field_cse != 0LLU)) {
		jule::Uintptr _107017_mtch = static_cast<jule::Uintptr>((*(((_20d3e841b_Case*)((*(_106217_scope))._field_cse))))._field_Owner);;
		if ((_107017_mtch == _106140_ptr)) {
			return true;;
		};
	};
	if (((*(_106217_scope))._field_parent != nullptr)) {
		_106217_scope=(*(_106217_scope))._field_parent;
		goto _julec_label_2118a4e57;
	};
	return false;;
}



inline jule::Ptr<_20d3e5869_ContSt> _20d40504e_checkContValidScope(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d381c89_ContSt> _108439_c) {
	if (_20d3ed80b_isDeferred(_self_)) {
		_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_108439_c))._field_Token, jule::Str("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_108439_c))._field_Label != nullptr)) {
		return jule::new_ptr<_20d3e5869_ContSt>();;
	};
	jule::Ptr<_20d3ea9a1_scopeChecker> _109417_scope = _self_;;
	_julec_label_2118a7c4b:;
	{
		
		if (((((*(_109417_scope))._field_it == 0LLU) && ((*(_109417_scope))._field_parent != nullptr)) && ((*(_109417_scope))._field_owner == nullptr))) {
			_case_begin_2118a9a50:;
			{
				_109417_scope=(*(_109417_scope))._field_parent;
				goto _julec_label_2118a7c4b;
			}
		}
		else if (((*(_109417_scope))._field_it != 0LLU)) {
			_case_begin_2118a9ac7:;
			{
				return jule::new_ptr<_20d3e5869_ContSt>(_20d3e5869_ContSt{._field_It=(*(_109417_scope))._field_it});;
			}
		}
		_match_end_2118a9995:;
	};
	_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_108439_c))._field_Token, jule::Str("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _20d405307_checkCont(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d381c89_ContSt> _110829_c) {
	jule::Ptr<_20d3e5869_ContSt> _110917_cont = _20d40504e_checkContValidScope(_self_, _110829_c);;
	if ((_110917_cont == nullptr)) {
		return;;
	};
	if (((*(_110829_c))._field_Label != nullptr)) {
		jule::Ptr<_20d3e950a_scopeLabel> _111521_label = _20d3e0bb6_findLabelParent(&((*((*(_110829_c))._field_Label))._field_Kind), (*(_self_))._field_parent);;
		if ((_111521_label == nullptr)) {
			_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_110829_c))._field_Label, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*((*(_110829_c))._field_Label))._field_Kind, &__jule_any_type4)}));
			return;;
		};
		(*(_111521_label))._field_used=true;
		if ((((*(_111521_label))._field_pos + 1LL) >= (*((*((*(_111521_label))._field_scope))._field_scope))._field_Stmts.len())) {
			_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_110829_c))._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_110829_c))._field_Label))._field_Kind, &__jule_any_type4)}));
			return;;
		};
		jule::I64 _112817_i = ((*(_111521_label))._field_pos + 1LL);;
		if ((_112817_i >= (*((*((*(_111521_label))._field_scope))._field_scope))._field_Stmts.len())) {
			_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_110829_c))._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>());
		} else {
			jule::Any _113225_st = (*((*((*(_111521_label))._field_scope))._field_scope))._field_Stmts[_112817_i];;
			{
				auto &_match_expr{ _113225_st };
				
				if (_match_expr.type == &__jule_any_type37) {
					_case_begin_2118b56b5:;
					{
						(*(_110917_cont))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_113225_st.cast_ptr<_20d3e45d2_InfIter>(&__jule_any_type37)));
					}
				}
				else if (_match_expr.type == &__jule_any_type41) {
					_case_begin_2118b53b8:;
					{
						(*(_110917_cont))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_113225_st.cast_ptr<_20d3e54d4_RangeIter>(&__jule_any_type41)));
					}
				}
				else if (_match_expr.type == &__jule_any_type39) {
					_case_begin_2118b542e:;
					{
						(*(_110917_cont))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_113225_st.cast_ptr<_20d3e4a88_WhileIter>(&__jule_any_type39)));
					}
				}
				else {
					_case_begin_2118b5352:;
					{
						_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_110829_c))._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_110829_c))._field_Label))._field_Kind, &__jule_any_type4)}));
					}
				}
				_match_end_2118b52ec:;
			};
		};
	};
	if (((*(_110917_cont))._field_It != 0LLU)) {
		if ((!(_20d4048bc_checkValidContLabel(_self_, (*(_110917_cont))._field_It)))) {
			_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_110829_c))._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_110829_c))._field_Label))._field_Kind, &__jule_any_type4)}));
		};
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_110917_cont, &__jule_any_type42)); };
}



inline void _20d4055b0_checkLabel(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d37907d_LabelSt> _115534_l) {
	if ((_20d3ee169_findLabel(_self_.ptr(), &((*(_115534_l))._field_Ident)) != nullptr)) {
		_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_115534_l))._field_Token, jule::Str("label is already exist in this identifier: @", 44), jule::Slice<jule::Any>::make({jule::Any((*(_115534_l))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_20d3e6040_Label> _116117_label = jule::new_ptr<_20d3e6040_Label>(_20d3e6040_Label{._field_Ident=(*(_115534_l))._field_Ident});;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_116117_label, &__jule_any_type21)); };
	{ jule::Slice<jule::Ptr<_20d3e950a_scopeLabel>> &__jule_push_dest = (*((*(_self_))._field_labels)); __jule_push_dest.push(jule::new_ptr<_20d3e950a_scopeLabel>(_20d3e950a_scopeLabel{._field_token=(*(_115534_l))._field_Token, ._field_label=_116117_label, ._field_pos=static_cast<jule::I64>(((*((*(_self_))._field_scope))._field_Stmts.len() - 1LL)), ._field_scope=_self_, })); };
}



inline void _20d405868_pushGoto(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d379457_GotoSt> _117432_gt) {
	jule::Ptr<_20d3e6419_GotoSt> _117517_st = jule::new_ptr<_20d3e6419_GotoSt>(_20d3e6419_GotoSt{._field_Ident=(*((*(_117432_gt))._field_Label))._field_Kind, });;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_117517_st, &__jule_any_type43)); };
	{ jule::Slice<jule::Ptr<_20d3e9a8d_scopeGoto>> &__jule_push_dest = (*((*(_self_))._field_gotos)); __jule_push_dest.push(jule::new_ptr<_20d3e9a8d_scopeGoto>(_20d3e9a8d_scopeGoto{._field_st=_117517_st, ._field_gt=_117432_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I64>(((*((*(_self_))._field_scope))._field_Stmts.len() - 1LL))})); };
}



inline void _20d405b21_checkPostfix(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d37a447_AssignSt> _118836_a) {
	if (((*(_118836_a))._field_Left.len() > 1LL)) {
		_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_118836_a))._field_Setter, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_20d370ccd_Expr> _119417_expr = (*((*(_118836_a))._field_Left[0LL]))._field_Expr;;
	jule::Ptr<_20d087165_Data> _119517_d = _20d4cdc93_evalExpr(_20d440ed0_eval((*(_self_))._field_s, jule::Trait<_20d50e06a_Lookup>(_self_, 0)), _119417_expr);;
	if ((_119517_d == nullptr)) {
		return;;
	};
	_20d3e28dd_checkAssign(&((*(_self_))._field_s), &(_119517_d), nullptr, (*(_118836_a))._field_Setter);
	if ((_20d4e21a2_Ptr((*(_119517_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_20d4ee401_Ptr> _120321_ptr = _20d4e21a2_Ptr((*(_119517_d))._field_Kind.ptr());;
		if (_20d4eee3a_IsUnsafe(_120321_ptr.ptr())) {
			_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_118836_a))._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_118836_a))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_20d4de655_Str((*(_119517_d))._field_Kind.ptr()), &__jule_any_type4)}));
			return;;
		};
	} else {
		if (((_20d4e1b85_Prim((*(_119517_d))._field_Kind.ptr()) == nullptr) || (!(_20b065123_IsNum((*(_20d4e1b85_Prim((*(_119517_d))._field_Kind.ptr())))._field_Kind))))) {
			_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_118836_a))._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_118836_a))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_20d4de655_Str((*(_119517_d))._field_Kind.ptr()), &__jule_any_type4)}));
			return;;
		};
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_20d3e67e3_Postfix>(_20d3e67e3_Postfix{._field_Expr=(*(_119517_d))._field_Model, ._field_Op=(*((*(_118836_a))._field_Setter))._field_Kind}), &__jule_any_type44)); };
}



inline jule::Bool _20d405e62_isNewAssignIdent(_20d3ea9a1_scopeChecker* _self_, jule::Str _122135_ident) {
	if ((_20d353a2a_IsIgnoreIdent(_122135_ident) || _122135_ident.empty())) {
		return false;;
	};
	return (_20d084ea9_defByIdent((*(_self_))._field_table.ptr(), &(_122135_ident), false) == nullptr);;
}



inline void _20d40621a_removeInteriorMutRisk(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d087165_Data>* _123446_d) {
	jule::Ptr<_20d39066b_StructIns> _123513_s = _20d4e3208_Struct((*((*(_123446_d))))._field_Kind.ptr());;
	if ((_123513_s == nullptr)) {
		return;;
	};
	jule::Ptr<_20d3ea9a1_scopeChecker> _123913_root = _20d3edd28_getHardRoot(_self_);;
	if (((*((*(_123913_root))._field_owner))._field_Owner != _123513_s)) {
		return;;
	};
	(*((*(_123446_d))))._field_Mutable=true;
}



inline jule::Bool _20d4066c1_checkStructureAssignOp(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d39066b_StructIns>* _124847_s, jule::Ptr<_20d37a447_AssignSt>* _124867_a, jule::Ptr<_20d087165_Data>* _124886_r) {
	jule::Ptr<_20d3a5a49_FnIns> _125117_overload = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_124867_a))))._field_Setter))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_2118d09ee:;
			{
				_125117_overload=(*((*(_124847_s))))._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_2118d26c1:;
			{
				_125117_overload=(*((*(_124847_s))))._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_2118d2737:;
			{
				_125117_overload=(*((*(_124847_s))))._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_2118d113c:;
			{
				_125117_overload=(*((*(_124847_s))))._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_2118d11a3:;
			{
				_125117_overload=(*((*(_124847_s))))._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_2118d1219:;
			{
				_125117_overload=(*((*(_124847_s))))._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_2118d1280:;
			{
				_125117_overload=(*((*(_124847_s))))._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_2118d2825:;
			{
				_125117_overload=(*((*(_124847_s))))._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_2118d288b:;
			{
				_125117_overload=(*((*(_124847_s))))._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_2118d2902:;
			{
				_125117_overload=(*((*(_124847_s))))._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_2118d10c6:;
			{
				_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*(_124867_a))))._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_124867_a))))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_20d3909e0_Str((*(_124847_s)).ptr()), &__jule_any_type4)}));
				return false;;
			}
		}
		_match_end_2118d1071:;
	};
	if ((_125117_overload == nullptr)) {
		_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*(_124867_a))))._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_124867_a))))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_20d3909e0_Str((*(_124847_s)).ptr()), &__jule_any_type4)}));
		return false;;
	};
	jule::Ptr<_20d3a4a9d_ParamIns> _128317_p = (*(_125117_overload))._field_Params[1LL];;
	return _20d441541_checkAssignType((*(_self_))._field_s, (*((*(_128317_p))._field_Decl))._field_Reference, &((*(_128317_p))._field_Kind), _124886_r, (*((*(_124867_a))))._field_Setter);;
}



inline void _20d406979_checkSingleAssign(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d37a447_AssignSt>* _128742_a) {
	jule::Ptr<_20d087165_Data> _128817_l = nullptr;;
	if ((!(_20d353a2a_IsIgnoreIdent((*((*((*(_128742_a))))._field_Left[0LL]))._field_Ident)))) {
		jule::Ptr<_20d370ccd_Expr> _129121_expr = (*((*((*(_128742_a))))._field_Left[0LL]))._field_Expr;;
		_128817_l=_20d4cdc93_evalExpr(_20d440ed0_eval((*(_self_))._field_s, jule::Trait<_20d50e06a_Lookup>(_self_, 0)), _129121_expr);
		if ((_128817_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_20d088d59_Eval> _129817_eval = nullptr;;
	if ((_128817_l != nullptr)) {
		_129817_eval=_20d440b8e_evalp((*(_self_))._field_s, jule::Trait<_20d50e06a_Lookup>(_self_, 0), (*(_128817_l))._field_Kind);
	} else {
		_129817_eval=_20d440ed0_eval((*(_self_))._field_s, jule::Trait<_20d50e06a_Lookup>(_self_, 0));
	};
	(*(_129817_eval))._field_unsafety=_20d3ecd5a_isUnsafe(_self_);
	jule::Ptr<_20d087165_Data> _130517_r = _20d4cdc93_evalExpr(_129817_eval, (*((*(_128742_a))))._field_Right);;
	if ((_130517_r == nullptr)) {
		return;;
	};
	_20d40621a_removeInteriorMutRisk(_self_, &(_130517_r));
	if ((_128817_l == nullptr)) {
		if (_20d4e0612_Void((*(_130517_r))._field_Kind.ptr())) {
			_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_128742_a))))._field_Right))._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_130517_r, &__jule_any_type24)); };
		return;;
	};
	if ((!(_20d3e28dd_checkAssign(&((*(_self_))._field_s), &(_128817_l), _130517_r, (*((*(_128742_a))))._field_Setter)))) {
		return;;
	};
	if ((_20d4e39ab_Tup((*(_130517_r))._field_Kind.ptr()) != nullptr)) {
		_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*(_128742_a))))._field_Setter, jule::Str("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_20d394609_OperandExprModel> _132917_lm = jule::new_ptr<_20d394609_OperandExprModel>(_20d394609_OperandExprModel{._field_Kind=(*(_128817_l))._field_Kind, ._field_Model=(*(_128817_l))._field_Model});;
	jule::Ptr<_20d394609_OperandExprModel> _133317_rm = jule::new_ptr<_20d394609_OperandExprModel>(_20d394609_OperandExprModel{._field_Kind=(*(_130517_r))._field_Kind, ._field_Model=(*(_130517_r))._field_Model});;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_20d3e6c99_Assign>(_20d3e6c99_Assign{._field_L=_132917_lm, ._field_R=_133317_rm, ._field_Op=(*((*(_128742_a))))._field_Setter}), &__jule_any_type45)); };
	if (((*((*((*(_128742_a))))._field_Setter))._field_Id != static_cast<jule::U64>(71LLU))) {
		jule::Ptr<_20d39066b_StructIns> _134021_strct = _20d4e3208_Struct((*(_128817_l))._field_Kind.ptr());;
		if ((_134021_strct != nullptr)) {
			_20d4066c1_checkStructureAssignOp(_self_, &(_134021_strct), _128742_a, &(_130517_r));
			return;;
		};
		jule::U64 _134517_id = (*((*((*(_128742_a))))._field_Setter))._field_Id;;
		(*((*((*(_128742_a))))._field_Setter))._field_Id=_20d40ca6d_removeEqFromOp((*((*((*(_128742_a))))._field_Setter))._field_Id);
		_20d4d11e6_binaryEval _134721_solver = static__20d4d1b20_new(_129817_eval, (*((*(_128742_a))))._field_Setter);;
		_130517_r=_20d4d6e33_solveExplicit(&_134721_solver, &(_128817_l), &(_130517_r));
		(*((*((*(_128742_a))))._field_Setter))._field_Id=_134517_id;
		if ((_130517_r == nullptr)) {
			return;;
		};
		return;;
	};
	_20d070b87_assignTypeChecker _135617_checker = _20d070b87_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_128817_l))._field_Kind, ._field_d=_130517_r, ._field_errorToken=(*((*(_128742_a))))._field_Setter};;
	if (_20d071dec_check(&_135617_checker)) {
		(*(_133317_rm))._field_Model=(*(_130517_r))._field_Model;
		(*(_132917_lm))._field_Model=(*(_128817_l))._field_Model;
	};
}



inline void _20d40700c_processEndPartOfMultiAssign(_20d3ea9a1_scopeChecker* _self_, jule::Ptr<_20d3e7173_MultiAssign>* _136851_st, jule::Ptr<_20d37a447_AssignSt>* _136914_a, jule::Ptr<_20d379db4_AssignLeft>* _136933_lexpr, jule::Ptr<_20d087165_Data>* _136958_l, jule::Ptr<_20d087165_Data>* _136973_r) {
	if (((!((*((*(_136933_lexpr))))._field_Reference)) && _20d353a2a_IsIgnoreIdent((*((*(_136933_lexpr))))._field_Ident))) {
		if (_20d4e0612_Void((*((*(_136973_r))))._field_Kind.ptr())) {
			_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_136914_a))))._field_Right))._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_20d087165_Data>> &__jule_push_dest = (*((*(_136851_st))))._field_L; __jule_push_dest.push(nullptr); };
		return;;
	};
	if (((*((*(_136914_a))))._field_Declarative && ((*((*(_136933_lexpr))))._field_Reference || _20d405e62_isNewAssignIdent(_self_, (*((*(_136933_lexpr))))._field_Ident)))) {
		if (_20d3eebe7_isDuplicatedIdent(_self_, 0LLU, &((*((*(_136933_lexpr))))._field_Ident))) {
			_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*(_136933_lexpr))))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_136933_lexpr))))._field_Ident, &__jule_any_type4)}));
			_20d438d96_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
			_20d3ed2de_stop(_self_);
			return;;
		};
		if (_20d353a2a_IsIgnoreIdent((*((*(_136933_lexpr))))._field_Ident)) {
			_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*(_136933_lexpr))))._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		};
		jule::Ptr<_20d458aca_Var> _139021_v = jule::new_ptr<_20d458aca_Var>(_20d458aca_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*((*(_136933_lexpr))))._field_Token, ._field_Ident=(*((*(_136933_lexpr))))._field_Ident, ._field_Mutable=(*((*(_136933_lexpr))))._field_Mutable, ._field_Reference=(*((*(_136933_lexpr))))._field_Reference, ._field_Value=jule::new_ptr<_20d0882a9_Value>(_20d0882a9_Value{._field_Expr=(*((*(_136914_a))))._field_Right, ._field_Data=(*(_136973_r))}), });;
		_20d44ee56_checkVarValue((*(_self_))._field_s, &(_139021_v));
		(*(_139021_v))._field_Value=nullptr;
		{ jule::Slice<jule::Ptr<_20d087165_Data>> &__jule_push_dest = (*((*(_136851_st))))._field_L; __jule_push_dest.push(jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=(*((*(_139021_v))._field_Kind))._field_Kind, ._field_Mutable=(*(_139021_v))._field_Mutable, ._field_Reference=(*(_139021_v))._field_Reference, ._field_Lvalue=(!((*(_139021_v))._field_Constant)), ._field_Model=jule::Any(_139021_v, &__jule_any_type8), })); };
		{ jule::Slice<jule::Ptr<_20d458aca_Var>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Vars; __jule_push_dest.push(_139021_v); };
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_139021_v, &__jule_any_type8)); };
		return;;
	};
	if (((*((*(_136933_lexpr))))._field_Mutable || (*((*(_136933_lexpr))))._field_Reference)) {
		_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*(_136933_lexpr))))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_136933_lexpr))))._field_Ident, &__jule_any_type4)}));
		_20d438d96_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if ((!(_20d3e28dd_checkAssign(&((*(_self_))._field_s), _136958_l, (*(_136973_r)), (*((*(_136933_lexpr))))._field_Token)))) {
		return;;
	};
	;
	_20d444a50_checkValidityForInitExpr((*(_self_))._field_s, (*((*(_136958_l))))._field_Mutable, false, &((*((*(_136958_l))))._field_Kind), _136973_r, &((*((*(_136914_a))))._field_Setter));
	_20d070b87_assignTypeChecker _143317_checker = _20d070b87_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*((*(_136958_l))))._field_Kind, ._field_d=(*(_136973_r)), ._field_errorToken=(*((*(_136914_a))))._field_Setter};;
	_20d071dec_check(&_143317_checker);
	{ jule::Slice<jule::Ptr<_20d087165_Data>> &__jule_push_dest = (*((*(_136851_st))))._field_L; __jule_push_dest.push((*(_136958_l))); };
}



inline void _20d4072b5_checkMultiAssign(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d37a447_AssignSt>* _144341_a) {
	jule::Ptr<_20d087165_Data> _144417_rd = _20d4cdc93_evalExpr(_20d440ed0_eval((*(_self_))._field_s, jule::Trait<_20d50e06a_Lookup>(_self_, 0)), (*((*(_144341_a))))._field_Right);;
	if ((_144417_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_20d087165_Data>> _144817_right = _20d3e1a41_getDatasFromTupleData(&(_144417_rd));;
	if ((_144817_right.len() == 1LL)) {
		{
			auto &_match_expr{ (*(_144817_right[0LL]))._field_Model };
			
			if (_match_expr.type == &__jule_any_type46) {
				_case_begin_21190e0b0:;
				{
					jule::Ptr<_20d397464_IndexingExprModel> _145225_iem = (*(_144817_right[0LL]))._field_Model.cast_ptr<_20d397464_IndexingExprModel>(&__jule_any_type46);;
					if ((_20d4e3725_Map((*((*(_145225_iem))._field_Expr))._field_Kind.ptr()) != nullptr)) {
						_144817_right=jule::Slice<jule::Ptr<_20d087165_Data>>::make({jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=(*(_20d4e3725_Map((*((*(_145225_iem))._field_Expr))._field_Kind.ptr())))._field_Val, }),jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562d5a_primBool, })});
					};
				}
			}
			_match_end_21190e016:;
		};
	};
	{
		
		if (((*((*(_144341_a))))._field_Left.len() > _144817_right.len())) {
			_case_begin_21190e522:;
			{
				_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*(_144341_a))))._field_Setter, jule::Str("overflow multi assignment identifers", 36), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*((*(_144341_a))))._field_Left.len() < _144817_right.len())) {
			_case_begin_21190d873:;
			{
				_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*(_144341_a))))._field_Setter, jule::Str("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_21190ced2:;
	};
	jule::Ptr<_20d3e7173_MultiAssign> _147117_st = jule::new_ptr<_20d3e7173_MultiAssign>(_20d3e7173_MultiAssign{._field_R=(*(_144417_rd))._field_Model});;
	{
		auto expr = &((*((*(_144341_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211913bdb:;
		if (it != expr_end) {
			jule::I64 _147413_i = it - expr->begin();
			{
				jule::Ptr<_20d379db4_AssignLeft> _147521_lexpr = (*((*(_144341_a))))._field_Left[_147413_i];;
				jule::Ptr<_20d087165_Data> _147621_l = nullptr;;
				if (((!(_20d353a2a_IsIgnoreIdent((*(_147521_lexpr))._field_Ident))) && ((!((*((*(_144341_a))))._field_Declarative)) || (!(_20d405e62_isNewAssignIdent(_self_.ptr(), (*(_147521_lexpr))._field_Ident)))))) {
					_147621_l=_20d4cdc93_evalExpr(_20d440ed0_eval((*(_self_))._field_s, jule::Trait<_20d50e06a_Lookup>(_self_, 0)), (*(_147521_lexpr))._field_Expr);
					if ((_147621_l == nullptr)) {
						goto _iter_next_211913bdb;
					};
				};
				jule::Ptr<_20d087165_Data> _148421_r = _144817_right[_147413_i];;
				_20d40621a_removeInteriorMutRisk(_self_, &(_148421_r));
				_20d40700c_processEndPartOfMultiAssign(_self_.ptr(), &(_147117_st), _144341_a, &(_147521_lexpr), &(_147621_l), &(_148421_r));
			}
			_iter_next_211913bdb:;
			++it;
			_147413_i++;
			goto _iter_begin_211913bdb;
		}
		_iter_end_211913bdb:;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_147117_st, &__jule_any_type47)); };
}



inline void _20d40756d_singleDeclAssign(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d37a447_AssignSt>* _149141_a) {
	jule::Ptr<_20d379db4_AssignLeft> _149217_lexpr = (*((*(_149141_a))))._field_Left[0LL];;
	if (_20d3eebe7_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*(_149217_lexpr))._field_Ident))) {
		_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_149217_lexpr))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_149217_lexpr))._field_Ident, &__jule_any_type4)}));
		_20d438d96_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_20d3ed2de_stop(_self_.ptr());
		return;;
	};
	if (_20d353a2a_IsIgnoreIdent((*(_149217_lexpr))._field_Ident)) {
		_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_149217_lexpr))._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	jule::Ptr<_20d087165_Data> _150317_r = _20d4cdc93_evalExpr(_20d440ed0_eval((*(_self_))._field_s, jule::Trait<_20d50e06a_Lookup>(_self_, 0)), (*((*(_149141_a))))._field_Right);;
	if ((_150317_r == nullptr)) {
		return;;
	};
	_20d40621a_removeInteriorMutRisk(_self_, &(_150317_r));
	jule::Ptr<_20d458aca_Var> _151117_v = jule::new_ptr<_20d458aca_Var>(_20d458aca_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*(_149217_lexpr))._field_Token, ._field_Ident=(*(_149217_lexpr))._field_Ident, ._field_Mutable=(*(_149217_lexpr))._field_Mutable, ._field_Reference=(*(_149217_lexpr))._field_Reference, ._field_Value=jule::new_ptr<_20d0882a9_Value>(_20d0882a9_Value{._field_Expr=(*((*(_149141_a))))._field_Right, ._field_Data=_150317_r}), });;
	_20d44ee56_checkVarValue((*(_self_))._field_s, &(_151117_v));
	{ jule::Slice<jule::Ptr<_20d458aca_Var>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Vars; __jule_push_dest.push(_151117_v); };
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_151117_v, &__jule_any_type8)); };
}



inline void _20d407826_checkAssignSt(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d37a447_AssignSt> _152737_a) {
	{
		
		if (_20d355c5d_IsPostfixOp((*((*(_152737_a))._field_Setter))._field_Id)) {
			_case_begin_211922975:;
			{
				_20d405b21_checkPostfix(_self_, _152737_a);
			}
		}
		else if (((*(_152737_a))._field_Left.len() == 1LL)) {
			_case_begin_2119229ec:;
			{
				if ((*(_152737_a))._field_Declarative) {
					_20d40756d_singleDeclAssign(_self_, &(_152737_a));
				} else {
					_20d406979_checkSingleAssign(_self_, &(_152737_a));
				};
			}
		}
		else {
			_case_begin_211921e08:;
			{
				_20d4072b5_checkMultiAssign(_self_, &(_152737_a));
			}
		}
		_match_end_211921d5e:;
	};
}



inline jule::Ptr<_20d3e369c_Scope> _20d407c22_checkCaseScope(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d3e841b_Case>* _154235_c, jule::Ptr<_20d37b9ba_ScopeTree>* _154250_tree) {
	jule::Ptr<_20d3ea9a1_scopeChecker> _154317_ssc = _20d40c6e9_newChildChecker(_self_);;
	(*(_154317_ssc))._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_154235_c))));
	return _20d4010b1_checkChildSc(_self_, _154250_tree, &(_154317_ssc));;
}



inline jule::Ptr<_20d3e841b_Case> _20d408283_checkCase(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d3e77d3_Match> _154833_m, jule::I64 _154844_i, jule::Ptr<_20d3837b3_Case> _154856_c, jule::Ptr<_20d087165_Data> _154875_expr) {
	jule::Ptr<_20d3e841b_Case> _154917_case = (*(_154833_m))._field_Cases[_154844_i];;
	(*(_154917_case))._field_Exprs=jule::Slice<jule::Ptr<_20d087165_Data>>::alloc(0LL, (*(_154856_c))._field_Exprs.len());
	jule::Bool _155117_constMatched = false;;
	jule::Ptr<_20d088d59_Eval> _155217_eval = _20d440ed0_eval((*(_self_))._field_s, jule::Trait<_20d50e06a_Lookup>(_self_, 0));;
	{
		auto expr = &((*(_154856_c))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2119287d3:;
		if (it != expr_end) {
			jule::Ptr<_20d370ccd_Expr> _155321_e = *it;
			{
				jule::Ptr<_20d087165_Data> _155421_d = _20d4cce7e_evalExprKind(_155217_eval, (*(_155321_e))._field_Kind);;
				if ((_155421_d == nullptr)) {
					goto _iter_next_2119287d3;
				};
				if ((*(_154833_m))._field_TypeMatch) {
					{ jule::Slice<jule::Ptr<_20d087165_Data>> &__jule_push_dest = (*(_154917_case))._field_Exprs; __jule_push_dest.push(_155421_d); };
					if ((_20d3e1777_countMatchType(&(_154833_m), &((*(_155421_d))._field_Kind)) > 1LL)) {
						_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_155321_e))._field_Token, jule::Str("duplicated pattern: type @ is already matched", 45), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_155421_d))._field_Kind.ptr()), &__jule_any_type4)}));
					};
					if ((*((*(_154875_expr))._field_Kind))._field_Generic) {
						_155117_constMatched=(_155117_constMatched || _20d4de996_Equal((*(_154875_expr))._field_Kind, (*(_155421_d))._field_Kind));
					} else {
						if ((_20d4e26be_TypeEnum((*(_154875_expr))._field_Kind.ptr()) != nullptr)) {
							_20d4419e7_checkTypeCompatibility((*(_self_))._field_s, &((*(_154875_expr))._field_Kind), &((*(_155421_d))._field_Kind), &((*(_155321_e))._field_Token));
						} else {
							jule::Ptr<_20d3b5dde_Trait> _156929_trt = _20d4e348e_Trait((*(_154875_expr))._field_Kind.ptr());;
							if ((_156929_trt != nullptr)) {
								_20d4419e7_checkTypeCompatibility((*(_self_))._field_s, &((*(_154875_expr))._field_Kind), &((*(_155421_d))._field_Kind), &((*(_155321_e))._field_Token));
							};
						};
					};
					goto _iter_next_2119287d3;
				} else if ((*(_154833_m))._field_Comptime) {
					if ((!(_20d087a39_IsConst(_155421_d.ptr())))) {
						_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_155321_e))._field_Token, jule::Str("const-matching requires constant expression", 43), jule::Slice<jule::Any>());
					} else {
						_155117_constMatched=(_155117_constMatched || _20b0674dd_ReadBool((*(_155421_d))._field_Constant.ptr()));
					};
				};
				if ((*(_155421_d))._field_Decl) {
					_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_155321_e))._field_Token, jule::Str("expecting expression, found type declaration", 44), jule::Slice<jule::Any>());
					_20d438d96_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49), jule::Slice<jule::Any>());
					goto _iter_next_2119287d3;
				};
				{ jule::Slice<jule::Ptr<_20d087165_Data>> &__jule_push_dest = (*(_154917_case))._field_Exprs; __jule_push_dest.push(_155421_d); };
				_20d070b87_assignTypeChecker _159221_checker = _20d070b87_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_154875_expr))._field_Kind, ._field_d=_155421_d, ._field_errorToken=(*(_155321_e))._field_Token};;
				_20d071dec_check(&_159221_checker);
			}
			_iter_next_2119287d3:;
			++it;
			goto _iter_begin_2119287d3;
		}
		_iter_end_2119287d3:;
	};
	if (((!((*(_154833_m))._field_Comptime)) || _155117_constMatched)) {
		(*(_154917_case))._field_Scope=_20d407c22_checkCaseScope(_self_, &(_154917_case), &((*(_154856_c))._field_Scope));
	};
	return _154917_case;;
}



inline void _20d4086a1_checkCases(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d384000_MatchCase>* _160635_m, jule::Ptr<_20d3e77d3_Match> _160654_rm, jule::Ptr<_20d087165_Data> _160670_expr) {
	(*(_160654_rm))._field_Cases=jule::Slice<jule::Ptr<_20d3e841b_Case>>::alloc(0LL, (*((*(_160635_m))))._field_Cases.len());
	{
		auto expr = &((*((*(_160635_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2119369de:;
		if (it != expr_end) {
			jule::I64 _160813_i = it - expr->begin();
			{
				jule::Ptr<_20d3e841b_Case> _160921_case = jule::new_ptr<_20d3e841b_Case>(_20d3e841b_Case{._field_Owner=_160654_rm, });;
				if ((_160813_i > 0LL)) {
					(*((*(_160654_rm))._field_Cases[(_160813_i - 1LL)]))._field_Next=_160921_case;
				};
				{ jule::Slice<jule::Ptr<_20d3e841b_Case>> &__jule_push_dest = (*(_160654_rm))._field_Cases; __jule_push_dest.push(_160921_case); };
			}
			_iter_next_2119369de:;
			++it;
			_160813_i++;
			goto _iter_begin_2119369de;
		}
		_iter_end_2119369de:;
	};
	if ((((*(_160654_rm))._field_Default != nullptr) && ((*((*(_160635_m))))._field_Cases.len() > 0LL))) {
		(*((*(_160654_rm))._field_Cases[((*(_160654_rm))._field_Cases.len() - 1LL)]))._field_Next=(*(_160654_rm))._field_Default;
	};
	{
		auto expr = &((*((*(_160635_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2119373d5:;
		if (it != expr_end) {
			jule::I64 _162214_i = it - expr->begin();
			jule::Ptr<_20d3837b3_Case> _162221_c = *it;
			{
				_20d408283_checkCase(_self_, _160654_rm, _162214_i, _162221_c, _160670_expr);
			}
			_iter_next_2119373d5:;
			++it;
			_162214_i++;
			goto _iter_begin_2119373d5;
		}
		_iter_end_2119373d5:;
	};
}



inline jule::Ptr<_20d3e841b_Case> _20d408a9c_checkDefault(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d3e77d3_Match> _162736_m, jule::Ptr<_20d382619_Else> _162751_d) {
	jule::Ptr<_20d3e841b_Case> _162817_def = jule::new_ptr<_20d3e841b_Case>(_20d3e841b_Case{._field_Owner=_162736_m, });;
	(*(_162817_def))._field_Scope=_20d407c22_checkCaseScope(_self_, &(_162817_def), &((*(_162751_d))._field_Scope));
	return _162817_def;;
}



inline void _20d408e10_checkComptimePanic(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d3510bb_Token> _163538_callToken, jule::Ptr<_20d3e369c_Scope>* _163558_s) {
	if (((*((*(_163558_s))))._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _163913_stmt = (*((*(_163558_s))))._field_Stmts[0LL];;
	{
		auto &_match_expr{ _163913_stmt };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_21193dd59:;
			{
				jule::Ptr<_20d087165_Data> _164217_d = _163913_stmt.cast_ptr<_20d087165_Data>(&__jule_any_type24);;
				{
					auto &_match_expr{ (*(_164217_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type30) {
						_case_begin_21193ecc2:;
						{
							jule::Ptr<_20d39b655_BuiltinPanicCallExprModel> _164521_m = (*(_164217_d))._field_Model.cast_ptr<_20d39b655_BuiltinPanicCallExprModel>(&__jule_any_type30);;
							{
								auto &_match_expr{ (*(_164521_m))._field_Expr };
								
								if (_match_expr.type == &__jule_any_type19) {
									_case_begin_211940e27:;
									{
										jule::Ptr<_20b0655eb_Const> _164825_c = (*(_164521_m))._field_Expr.cast_ptr<_20b0655eb_Const>(&__jule_any_type19);;
										if (_20b069d70_IsStr(_164825_c.ptr())) {
											if ((_163538_callToken == nullptr)) {
												jule::Ptr<_20d3ea9a1_scopeChecker> _165137_root = _20d3edd28_getHardRoot(_self_);;
												_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_165137_root))._field_calledFrom, jule::Str("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_20b067774_ReadStr(_164825_c.ptr()), &__jule_any_type4)}));
											} else {
												_20d438a33_pushErr((*(_self_))._field_s.ptr(), _163538_callToken, jule::Str("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_20b067774_ReadStr(_164825_c.ptr()), &__jule_any_type4)}));
											};
											_20d3ed2de_stop(_self_.ptr());
										};
									}
								}
								_match_end_211940dc2:;
							};
						}
					}
					_match_end_21193ec6c:;
				};
			}
		}
		_match_end_21193dd04:;
	};
}



inline void _20d409273_processConstMatch(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d3e77d3_Match>* _166342_tm, jule::Ptr<_20d384000_MatchCase>* _166359_m) {
	{
		auto expr = &((*((*(_166342_tm))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211942797:;
		if (it != expr_end) {
			jule::I64 _166414_i = it - expr->begin();
			jule::Ptr<_20d3e841b_Case> _166421_c = *it;
			{
				if (((*(_166421_c))._field_Scope != nullptr)) {
					jule::Ptr<_20d3510bb_Token> _166625_token = nullptr;;
					if (((!((*((*(_166342_tm))))._field_TypeMatch)) && ((*((*(_166421_c))._field_Scope))._field_Stmts.len() > 0LL))) {
						_166625_token=(*((*((*((*(_166359_m))))._field_Cases[_166414_i]))._field_Scope))._field_Stmts[0LL]._field_Token;
					};
					_20d408e10_checkComptimePanic(_self_, _166625_token, &((*(_166421_c))._field_Scope));
					(*((*(_166342_tm))))._field_Default=_166421_c;
					(*((*(_166342_tm))))._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_211942797:;
			++it;
			_166414_i++;
			goto _iter_begin_211942797;
		}
		_iter_end_211942797:;
	};
	if (((*((*(_166359_m))))._field_Default != nullptr)) {
		(*((*(_166342_tm))))._field_Cases=nullptr;
		(*((*(_166342_tm))))._field_Default=_20d408a9c_checkDefault(_self_, (*(_166342_tm)), (*((*(_166359_m))))._field_Default);
		if (((*((*(_166342_tm))))._field_Default != nullptr)) {
			jule::Ptr<_20d3510bb_Token> _168025_token = nullptr;;
			if ((!((*((*(_166342_tm))))._field_TypeMatch))) {
				_168025_token=(*((*((*((*(_166359_m))))._field_Default))._field_Scope))._field_Stmts[0LL]._field_Token;
			};
			_20d408e10_checkComptimePanic(_self_, _168025_token, &((*((*((*(_166342_tm))))._field_Default))._field_Scope));
		};
	} else {
		(*((*(_166342_tm))))._field_Cases=nullptr;
	};
}



inline void _20d40952b_checkTypeMatch(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d384000_MatchCase>* _169239_m) {
	jule::Ptr<_20d087165_Data> _169317_d = _20d4cd611_eval(_20d440ed0_eval((*(_self_))._field_s, jule::Trait<_20d50e06a_Lookup>(_self_, 0)), (*((*(_169239_m))))._field_Expr);;
	if ((_169317_d == nullptr)) {
		return;;
	};
	if (((!((*((*(_169317_d))._field_Kind))._field_Generic)) && (!(((((_20d4e1b85_Prim((*(_169317_d))._field_Kind.ptr()) != nullptr) && _20d4ea82b_IsAny(_20d4e1b85_Prim((*(_169317_d))._field_Kind.ptr()).ptr())) || (_20d4e348e_Trait((*(_169317_d))._field_Kind.ptr()) != nullptr)) || (_20d4e26be_TypeEnum((*(_169317_d))._field_Kind.ptr()) != nullptr)))))) {
		_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_169239_m))))._field_Expr))._field_Token, jule::Str("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_20d3e77d3_Match> _170417_tm = jule::new_ptr<_20d3e77d3_Match>(_20d3e77d3_Match{._field_Expr=_169317_d, ._field_TypeMatch=true, });;
	(*(_170417_tm))._field_Comptime=(*((*((*(_170417_tm))._field_Expr))._field_Kind))._field_Generic;
	if (((!((*(_170417_tm))._field_Comptime)) && ((*((*(_169239_m))))._field_Default != nullptr))) {
		(*(_170417_tm))._field_Default=_20d408a9c_checkDefault(_self_, _170417_tm, (*((*(_169239_m))))._field_Default);
	};
	_20d4086a1_checkCases(_self_, _169239_m, _170417_tm, _169317_d);
	if ((*(_170417_tm))._field_Comptime) {
		_20d409273_processConstMatch(_self_, &(_170417_tm), _169239_m);
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_170417_tm, &__jule_any_type48)); };
}



inline void _20d4097d4_checkCommonMatch(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d384000_MatchCase>* _172541_m) {
	jule::Ptr<_20d087165_Data> _172617_d = nullptr;;
	if (((*((*(_172541_m))))._field_Expr == nullptr)) {
		_172617_d=jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562d5a_primBool, ._field_Constant=static__20b0660be_NewBool(true)});
		(*(_172617_d))._field_Model=jule::Any((*(_172617_d))._field_Constant, &__jule_any_type19);
	} else {
		_172617_d=_20d4cdc93_evalExpr(_20d440ed0_eval((*(_self_))._field_s, jule::Trait<_20d50e06a_Lookup>(_self_, 0)), (*((*(_172541_m))))._field_Expr);
		if ((_172617_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_20d3e77d3_Match> _174017_mc = jule::new_ptr<_20d3e77d3_Match>(_20d3e77d3_Match{._field_Expr=_172617_d, ._field_Comptime=(((((*((*(_172541_m))))._field_Expr != nullptr) && _20d087a39_IsConst(_172617_d.ptr())) && _20b069ad9_IsBool((*(_172617_d))._field_Constant.ptr())) && _20b0674dd_ReadBool((*(_172617_d))._field_Constant.ptr())), });;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_174017_mc, &__jule_any_type48)); };
	if (((!((*(_174017_mc))._field_Comptime)) && ((*((*(_172541_m))))._field_Default != nullptr))) {
		(*(_174017_mc))._field_Default=_20d408a9c_checkDefault(_self_, _174017_mc, (*((*(_172541_m))))._field_Default);
	};
	_20d4086a1_checkCases(_self_, _172541_m, _174017_mc, _172617_d);
	if ((*(_174017_mc))._field_Comptime) {
		_20d409273_processConstMatch(_self_, &(_174017_mc), _172541_m);
	};
}



inline void _20d409a8c_checkMatch(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d384000_MatchCase> _176334_m) {
	if ((*(_176334_m))._field_TypeMatch) {
		_20d40952b_checkTypeMatch(_self_, &(_176334_m));
		return;;
	};
	_20d4097d4_checkCommonMatch(_self_, &(_176334_m));
}



inline void _20d409d45_checkFall(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d379754_FallSt> _177129_f) {
	if (((((*(_self_))._field_cse == 0LLU) || (((*((*(_self_))._field_scope))._field_Stmts.len() + 1LL) < (*((*(_self_))._field_scope))._field_Stmts.len())) || _20d3ed80b_isDeferred(_self_))) {
		_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_177129_f))._field_Token, jule::Str("fall keyword can only useable at end of the case scopes", 55), jule::Slice<jule::Any>());
		return;;
	};
	_20d3e841b_Case* _177917_case = ((_20d3e841b_Case*)((*(_self_))._field_cse));;
	if ((*((*(_177917_case))._field_Owner))._field_Comptime) {
		_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_177129_f))._field_Token, jule::Str("the fall statement is not allowed for comptime-matching", 55), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_177917_case))._field_Next == nullptr)) {
		_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_177129_f))._field_Token, jule::Str("fall cannot useable at final case", 33), jule::Slice<jule::Any>());
		_20d438d96_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_20d3e8a15_FallSt>(_20d3e8a15_FallSt{._field_DestCase=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_177917_case))._field_Next))}), &__jule_any_type49)); };
}



inline jule::Ptr<_20d3e5c43_BreakSt> _20d40a186_checkBreakWithLabel(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d3818b0_BreakSt> _179439_b) {
	jule::Ptr<_20d3e5c43_BreakSt> _179517_brk = _20d40a4c7_checkPlainBreak(_self_, _179439_b);;
	if ((_179517_brk == nullptr)) {
		return nullptr;;
	};
	(*(_179517_brk))._field_It=0LLU;
	(*(_179517_brk))._field_Mtch=0LLU;
	jule::Ptr<_20d3e950a_scopeLabel> _180517_label = _20d3e0bb6_findLabelParent(&((*((*(_179439_b))._field_Label))._field_Kind), (*(_self_))._field_parent);;
	if ((_180517_label == nullptr)) {
		_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_179439_b))._field_Label, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*((*(_179439_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	(*(_180517_label))._field_used=true;
	if ((((*(_180517_label))._field_pos + 1LL) >= (*((*((*(_180517_label))._field_scope))._field_scope))._field_Stmts.len())) {
		_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_179439_b))._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_179439_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _181813_i = ((*(_180517_label))._field_pos + 1LL);;
	if ((_181813_i >= (*((*((*(_180517_label))._field_scope))._field_scope))._field_Stmts.len())) {
		_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_179439_b))._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_179439_b))._field_Label))._field_Kind, &__jule_any_type4)}));
	} else {
		jule::Any _182221_st = (*((*((*(_180517_label))._field_scope))._field_scope))._field_Stmts[_181813_i];;
		{
			auto &_match_expr{ _182221_st };
			
			if (_match_expr.type == &__jule_any_type37) {
				_case_begin_21196b815:;
				{
					(*(_179517_brk))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_182221_st.cast_ptr<_20d3e45d2_InfIter>(&__jule_any_type37)));
				}
			}
			else if (_match_expr.type == &__jule_any_type41) {
				_case_begin_21196b518:;
				{
					(*(_179517_brk))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_182221_st.cast_ptr<_20d3e54d4_RangeIter>(&__jule_any_type41)));
				}
			}
			else if (_match_expr.type == &__jule_any_type39) {
				_case_begin_21196b57e:;
				{
					(*(_179517_brk))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_182221_st.cast_ptr<_20d3e4a88_WhileIter>(&__jule_any_type39)));
				}
			}
			else if (_match_expr.type == &__jule_any_type48) {
				_case_begin_21196b5e5:;
				{
					(*(_179517_brk))._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_182221_st.cast_ptr<_20d3e77d3_Match>(&__jule_any_type48)));
				}
			}
			else {
				_case_begin_21196b4a2:;
				{
					_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_179439_b))._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_179439_b))._field_Label))._field_Kind, &__jule_any_type4)}));
				}
			}
			_match_end_21196b44c:;
		};
	};
	if (((*(_179517_brk))._field_It != 0LLU)) {
		if ((!(_20d404c0d_checkValidBreakLabel(_self_, (*(_179517_brk))._field_It)))) {
			_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_179439_b))._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_179439_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		};
	};
	if (((*(_179517_brk))._field_Mtch != 0LLU)) {
		if ((!(_20d404c0d_checkValidBreakLabel(_self_, (*(_179517_brk))._field_Mtch)))) {
			_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_179439_b))._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_179439_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		};
	};
	return _179517_brk;;
}



inline jule::Ptr<_20d3e5c43_BreakSt> _20d40a4c7_checkPlainBreak(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d3818b0_BreakSt> _185235_b) {
	if (_20d3ed80b_isDeferred(_self_)) {
		_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_185235_b))._field_Token, jule::Str("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20d3ea9a1_scopeChecker> _185817_scope = _self_;;
	_julec_label_211978c2e:;
	{
		
		if ((((((*(_185817_scope))._field_it == 0LLU) && ((*(_185817_scope))._field_cse == 0LLU)) && ((*(_185817_scope))._field_parent != nullptr)) && ((*(_185817_scope))._field_owner == nullptr))) {
			_case_begin_211979290:;
			{
				_185817_scope=(*(_185817_scope))._field_parent;
				goto _julec_label_211978c2e;
			}
		}
		else if (((*(_185817_scope))._field_it != 0LLU)) {
			_case_begin_211979317:;
			{
				return jule::new_ptr<_20d3e5c43_BreakSt>(_20d3e5c43_BreakSt{._field_It=(*(_185817_scope))._field_it, });;
			}
		}
		else if (((*(_185817_scope))._field_cse != 0LLU)) {
			_case_begin_21197938e:;
			{
				return jule::new_ptr<_20d3e5c43_BreakSt>(_20d3e5c43_BreakSt{._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(((_20d3e841b_Case*)((*(_185817_scope))._field_cse))))._field_Owner))});;
			}
		}
		_match_end_2119791c4:;
	};
	_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_185235_b))._field_Token, jule::Str("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _20d40a780_checkBreak(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d3818b0_BreakSt> _187430_b) {
	if (((*(_187430_b))._field_Label != nullptr)) {
		jule::Ptr<_20d3e5c43_BreakSt> _187621_brk = _20d40a186_checkBreakWithLabel(_self_, _187430_b);;
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_187621_brk, &__jule_any_type50)); };
		return;;
	};
	jule::Ptr<_20d3e5c43_BreakSt> _188117_brk = _20d40a4c7_checkPlainBreak(_self_, _187430_b);;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_188117_brk, &__jule_any_type50)); };
}



inline void _20d40aa38_checkRet(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d37eb11_RetSt> _188532_r) {
	if (_20d3ed80b_isDeferred(_self_)) {
		_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_188532_r))._field_Token, jule::Str("deferred scopes are not supports return statements", 50), jule::Slice<jule::Any>());
	};
	jule::Ptr<_20d3e8d9a_RetSt> _189017_rt = jule::new_ptr<_20d3e8d9a_RetSt>(_20d3e8d9a_RetSt{._field_Func=(*(_20d3eda92_getRoot(_self_)))._field_owner, });;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_189017_rt, &__jule_any_type51)); };
	jule::Ptr<_20d07eadb_retTypeChecker> _189517_rtc = jule::new_ptr<_20d07eadb_retTypeChecker>(_20d07eadb_retTypeChecker{._field_sc=_self_, ._field_f=(*(_189017_rt))._field_Func, ._field_errorToken=(*(_188532_r))._field_Token, });;
	jule::Bool _190013_ok = _20d080801_check(_189517_rtc.ptr(), &((*(_188532_r))._field_Expr));;
	if ((!(_190013_ok))) {
		return;;
	};
	if (((*(_188532_r))._field_Expr != nullptr)) {
		(*(_189017_rt))._field_Expr=(*(_189517_rtc))._field_model;
	};
}



inline void _20d40ace1_checkUseExpr(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d3716a2_UseExpr> _191032_ue) {
	if (((*(_self_))._field_result == nullptr)) {
		_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_191032_ue))._field_Token, jule::Str("use expressions cannot useable out of exceptional handler scopes", 64), jule::Slice<jule::Any>());
		return;;
	};
	if (_20d3ed80b_isDeferred(_self_)) {
		_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_191032_ue))._field_Token, jule::Str("use expressions cannot useable in deferred scopes", 49), jule::Slice<jule::Any>());
	};
	if ((((*(_self_))._field_i + 1LL) < (*((*(_self_))._field_tree))._field_Stmts.len())) {
		_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_191032_ue))._field_Token, jule::Str("use expressions must be last statement of scope", 47), jule::Slice<jule::Any>());
	};
}



inline void _20d40b099_checkNode(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Any* _192634_node) {
	{
		auto &_match_expr{ (*(_192634_node)) };
		
		if (_match_expr.type == &__jule_any_type52) {
			_case_begin_2119897cd:;
			{
				_20d4016aa_checkAnonScope(_self_, (*(_192634_node)).cast_ptr<_20d37b9ba_ScopeTree>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_211989d3e:;
			{
				_20d3eeea0_checkVarDecl(_self_, (*(_192634_node)).cast_ptr<_20d37e737_VarDecl>(&__jule_any_type16));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_211989b0d:;
			{
				_20d400511_checkTypeAliasDecl(_self_, (*(_192634_node)).cast_ptr<_20d38330c_TypeAliasDecl>(&__jule_any_type12));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_21198a0b4:;
			{
				_20d401cc6_checkExpr(_self_, (*(_192634_node)).cast_ptr<_20d370ccd_Expr>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_21198a12a:;
			{
				_20d402711_checkConditional(_self_, (*(_192634_node)).cast_ptr<_20d382ac0_Conditional>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_21198a191:;
			{
				_20d40457b_checkIter(_self_, (*(_192634_node)).cast_ptr<_20d3802a4_Iter>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_21198a207:;
			{
				_20d405307_checkCont(_self_, (*(_192634_node)).cast_ptr<_20d381c89_ContSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_21198a26d:;
			{
				_20d4055b0_checkLabel(_self_, (*(_192634_node)).cast_ptr<_20d37907d_LabelSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_21198a2d4:;
			{
				_20d405868_pushGoto(_self_, (*(_192634_node)).cast_ptr<_20d379457_GotoSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_21198a34a:;
			{
				_20d407826_checkAssignSt(_self_, (*(_192634_node)).cast_ptr<_20d37a447_AssignSt>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_21198a3b1:;
			{
				_20d409a8c_checkMatch(_self_, (*(_192634_node)).cast_ptr<_20d384000_MatchCase>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_21198a427:;
			{
				_20d409d45_checkFall(_self_, (*(_192634_node)).cast_ptr<_20d379754_FallSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_21198a48d:;
			{
				_20d40a780_checkBreak(_self_, (*(_192634_node)).cast_ptr<_20d3818b0_BreakSt>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_21198a504:;
			{
				_20d40aa38_checkRet(_self_, (*(_192634_node)).cast_ptr<_20d37eb11_RetSt>(&__jule_any_type63));
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_21198a56a:;
			{
				_20d40ace1_checkUseExpr(_self_, (*(_192634_node)).cast_ptr<_20d3716a2_UseExpr>(&__jule_any_type64));
			}
		}
		else {
			_case_begin_211989976:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_211989921:;
	};
}



inline void _20d40b297_checkResult(jule::Ptr<_20d3ea9a1_scopeChecker> _self_) {
	_20d37b35a_Stmt _196417_stmt = (*((*(_self_))._field_tree))._field_Stmts[((*((*(_self_))._field_tree))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _196417_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_2119947a5:;
			{
				jule::Ptr<_20d3716a2_UseExpr> _196721_ue = _196417_stmt._field_Data.cast_ptr<_20d3716a2_UseExpr>(&__jule_any_type64);;
				jule::Ptr<_20d087165_Data> _196821_d = _20d4cdc93_evalExpr(_20d440ed0_eval((*(_self_))._field_s, jule::Trait<_20d50e06a_Lookup>(_self_, 0)), (*(_196721_ue))._field_Expr);;
				if ((_196821_d == nullptr)) {
					return;;
				};
				{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_196821_d, &__jule_any_type24)); };
				jule::Ptr<_20d07eadb_retTypeChecker> _197321_rtc = jule::new_ptr<_20d07eadb_retTypeChecker>(_20d07eadb_retTypeChecker{._field_sc=_self_, ._field_types=_20d3a6c48_Types((*(_self_))._field_result.ptr()), ._field_errorToken=(*((*(_196721_ue))._field_Expr))._field_Token, });;
				_20d080801_check(_197321_rtc.ptr(), &((*(_196721_ue))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_211993e58:;
			{
				jule::Ptr<_20d370ccd_Expr> _198021_expr = _196417_stmt._field_Data.cast_ptr<_20d370ccd_Expr>(&__jule_any_type53);;
				jule::Ptr<_20d087165_Data> _198121_d = _20d4cdc93_evalExpr(_20d440ed0_eval((*(_self_))._field_s, jule::Trait<_20d50e06a_Lookup>(_self_, 0)), _198021_expr);;
				if ((_198121_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ (*(_198121_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_21199a04c:;
						{
							jule::Ptr<_20d39d9a9_BuiltinErrorCallExprModel> _198725_m = (*(_198121_d))._field_Model.cast_ptr<_20d39d9a9_BuiltinErrorCallExprModel>(&__jule_any_type23);;
							_20d401a1d_processErrorCall(_self_, &(_198725_m), (*(_198021_expr))._field_Token);
							{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_198121_d, &__jule_any_type24)); };
						}
					}
					else {
						_case_begin_21199a26c:;
						{
							return;;
						}
					}
					_match_end_21199a217:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type58 || _match_expr.type == &__jule_any_type62 || _match_expr.type == &__jule_any_type56 || _match_expr.type == &__jule_any_type63) {
			_case_begin_211993ebe:;
			{
				_20d40b099_checkNode(_self_, &(_196417_stmt._field_Data));
			}
		}
		else {
			_case_begin_211993de2:;
			{
				_20d40b099_checkNode(_self_, &(_196417_stmt._field_Data));
				return;;
			}
		}
		_match_end_211992e68:;
	};
	(*(_self_))._field_result=nullptr;
}



inline void _20d40b495_checkTree(jule::Ptr<_20d3ea9a1_scopeChecker> _self_) {
	(*(_self_))._field_i=0LL;
	jule::I64 _200917_n = (*((*(_self_))._field_tree))._field_Stmts.len();;
	if (((*(_self_))._field_result != nullptr)) {
		(_200917_n)--;
	};
	for (; ((*(_self_))._field_i < _200917_n); ((*(_self_))._field_i)++) {
		{
			_20d37b35a_Stmt _201721_stmt = (*((*(_self_))._field_tree))._field_Stmts[(*(_self_))._field_i];;
			_20d40b099_checkNode(_self_, &(_201721_stmt._field_Data));
			if (_20d3ed575_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_21199e073:;
	}
	_iter_end_21199e073:;;
	if ((((*(_self_))._field_result != nullptr) && ((*((*(_self_))._field_tree))._field_Stmts.len() != 0LL))) {
		_20d40b297_checkResult(_self_);
	};
}



inline void _20d40b808_checkGoto(_20d3ea9a1_scopeChecker* _self_, jule::Ptr<_20d3e9a8d_scopeGoto>* _202833_gt, jule::Ptr<_20d3e950a_scopeLabel>* _202854_label) {
	jule::Ptr<_20d3ea9a1_scopeChecker> _202917_gtsc = (*((*(_202833_gt))))._field_scope;;
	while ((((*(_202917_gtsc))._field_childIndex - 1LL) > (*((*((*(_202854_label))))._field_scope))._field_childIndex)) {
		{
			_202917_gtsc=(*(_202917_gtsc))._field_parent;
		}
	_iter_next_2119a2692:;
	}
	_iter_end_2119a2692:;;
	jule::I64 _203417_n = 0LL;;
	if (((*(_202917_gtsc))._field_scope == (*((*((*(_202854_label))))._field_scope))._field_scope)) {
		if (((*((*(_202833_gt))))._field_pos > (*((*(_202854_label))))._field_pos)) {
			return;;
		};
		_203417_n=(*((*(_202833_gt))))._field_pos;
	};
	jule::I64 _204717_i = ((*((*(_202854_label))))._field_pos - 1LL);;
	if ((_203417_n == 0LL)) {
		{
			auto expr = &((*((*((*((*(_202854_label))))._field_scope))._field_scope))._field_Stmts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2119a5a08:;
			if (it != expr_end) {
				jule::I64 _205017_j = it - expr->begin();
				jule::Any _205020_stmt = *it;
				{
					if (_20d3e1403_stmtIsGotoScope(&(_205020_stmt), &((*(_202917_gtsc))._field_scope))) {
						_203417_n=_205017_j;
						goto _iter_end_2119a5a08;
					};
				}
				_iter_next_2119a5a08:;
				++it;
				_205017_j++;
				goto _iter_begin_2119a5a08;
			}
			_iter_end_2119a5a08:;
		};
	};
	for (; (_204717_i >= _203417_n); (_204717_i)--) {
		{
			jule::Any _206021_stmt = (*((*((*((*(_202854_label))))._field_scope))._field_scope))._field_Stmts[_204717_i];;
			if (_20d3e323a_stmtIsDef(&(_206021_stmt))) {
				_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_202833_gt))))._field_gt))._field_Token, jule::Str("goto @ jumps over declaration(s)", 32), jule::Slice<jule::Any>::make({jule::Any((*((*((*((*(_202833_gt))))._field_gt))._field_Label))._field_Kind, &__jule_any_type4)}));
				return;;
			};
		}
	_iter_next_2119a6b08:;
	}
	_iter_end_2119a6b08:;;
}



inline void _20d40ba06_checkGotos(_20d3ea9a1_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2119a7e06:;
		if (it != expr_end) {
			jule::Ptr<_20d3e9a8d_scopeGoto> _206921_gt = *it;
			{
				jule::Ptr<_20d3e950a_scopeLabel> _207021_label = _20d3ee7eb_findLabelAll(_self_, &((*((*((*(_206921_gt))._field_gt))._field_Label))._field_Kind));;
				if ((_207021_label == nullptr)) {
					_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*(_206921_gt))._field_gt))._field_Token, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_206921_gt))._field_gt))._field_Label))._field_Kind, &__jule_any_type4)}));
					goto _iter_next_2119a7e06;
				};
				(*((*(_206921_gt))._field_st))._field_Label=(*(_207021_label))._field_label;
				(*(_207021_label))._field_used=true;
				_20d40b808_checkGoto(_self_, &(_206921_gt), &(_207021_label));
			}
			_iter_next_2119a7e06:;
			++it;
			goto _iter_begin_2119a7e06;
		}
		_iter_end_2119a7e06:;
	};
}



inline void _20d40bc04_checkLabels(_20d3ea9a1_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2119aaa41:;
		if (it != expr_end) {
			jule::Ptr<_20d3e950a_scopeLabel> _208216_l = *it;
			{
				if ((!((*(_208216_l))._field_used))) {
					_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_208216_l))._field_token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_208216_l))._field_label))._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_2119aaa41:;
			++it;
			goto _iter_begin_2119aaa41;
		}
		_iter_end_2119aaa41:;
	};
}



inline void _20d40be02_checkVars(_20d3ea9a1_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2119ace2d:;
		if (it != expr_end) {
			jule::Ptr<_20d458aca_Var> _209016_v = *it;
			{
				if (((((!((*(_209016_v))._field_Used)) && (!((*(_209016_v))._field_Constant))) && (!(_20d353a2a_IsIgnoreIdent((*(_209016_v))._field_Ident)))) && (!(_20d353ce4_IsAnonIdent((*(_209016_v))._field_Ident))))) {
					_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_209016_v))._field_Token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*(_209016_v))._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_2119ace2d:;
			++it;
			goto _iter_begin_2119ace2d;
		}
		_iter_end_2119ace2d:;
	};
}



inline void _20d40c100_checkAliases(_20d3ea9a1_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2119ae9e0:;
		if (it != expr_end) {
			jule::Ptr<_20d4dd49a_TypeAlias> _209816_a = *it;
			{
				if ((((!((*(_209816_a))._field_Used)) && (!(_20d353a2a_IsIgnoreIdent((*(_209816_a))._field_Ident)))) && (!(_20d353ce4_IsAnonIdent((*(_209816_a))._field_Ident))))) {
					_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_209816_a))._field_Token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*(_209816_a))._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_2119ae9e0:;
			++it;
			goto _iter_begin_2119ae9e0;
		}
		_iter_end_2119ae9e0:;
	};
}



inline void _20d40c463_check(jule::Ptr<_20d3ea9a1_scopeChecker> _self_, jule::Ptr<_20d37b9ba_ScopeTree>* _210630_tree, jule::Ptr<_20d3e369c_Scope>* _210653_s) {
	(*((*(_210653_s))))._field_Deferred=(*((*(_210630_tree))))._field_Deferred;
	(*((*(_210653_s))))._field_Unsafety=(*((*(_210630_tree))))._field_Unsafety;
	jule::I64 _211013_errors = (*((*(_self_))._field_s))._field_errors.len();;
	(*(_self_))._field_tree=(*(_210630_tree));
	(*(_self_))._field_scope=(*(_210653_s));
	_20d40b495_checkTree(_self_);
	if ((_211013_errors == (*((*(_self_))._field_s))._field_errors.len())) {
		_20d40be02_checkVars(_self_.ptr());
		_20d40c100_checkAliases(_self_.ptr());
		if (_20d3ed0e1_isRoot(_self_.ptr())) {
			_20d40ba06_checkGotos(_self_.ptr());
			_20d40bc04_checkLabels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_20d3ea9a1_scopeChecker> _20d40c6e9_newChildChecker(jule::Ptr<_20d3ea9a1_scopeChecker> _self_) {
	jule::Ptr<_20d3ea9a1_scopeChecker> _213017_base = _20d3e0479_newScopeCheckerBase(&((*(_self_))._field_s), nullptr);;
	(*(_213017_base))._field_parent=_self_;
	(*(_213017_base))._field_labels=(*(_self_))._field_labels;
	(*(_213017_base))._field_gotos=(*(_self_))._field_gotos;
	(*(_213017_base))._field_childIndex=static_cast<jule::I64>(((*(_self_))._field_childIndex + 1LL));
	return _213017_base;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d3ea9a1_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _20d40da6e_checkCdef(_20d40d651_directiveChecker* _self_, jule::Ptr<_20d36adb6_Directive>* _1629_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_2119b991d:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_20d3a2b45_Fn>(&__jule_any_type65)))._field_Binded) {
					goto _match_end_2119b9b60;
				};
				goto _case_begin_2119b9bb5;
			}
		}
		else {
			_case_begin_2119b9bb5:;
			{
				_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*(_1629_d))))._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_1629_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_2119b9b60:;
	};
	if (((*((*(_1629_d))))._field_Args.len() > 0LL)) {
		_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*(_1629_d))))._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _20d40dd27_checkTypedef(_20d40d651_directiveChecker* _self_, jule::Ptr<_20d36adb6_Directive>* _3232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_2119bc756:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_20d38c58b_Struct>(&__jule_any_type66)))._field_Binded) {
					goto _match_end_2119bc998;
				};
				goto _case_begin_2119bc9ed;
			}
		}
		else {
			_case_begin_2119bc9ed:;
			{
				_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*(_3232_d))))._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_3232_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_2119bc998:;
	};
	if (((*((*(_3232_d))))._field_Args.len() > 0LL)) {
		_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*(_3232_d))))._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _20d40e0d0_checkDerive(_20d40d651_directiveChecker* _self_, jule::Ptr<_20d36adb6_Directive>* _4831_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_2119c056c:;
			{
				if ((!((*((*(_self_))._field_o.cast_ptr<_20d38c58b_Struct>(&__jule_any_type66)))._field_Binded))) {
					goto _match_end_2119c07d1;
				};
				goto _case_begin_2119c0836;
			}
		}
		else {
			_case_begin_2119c0836:;
			{
				_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*(_4831_d))))._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>());
			}
		}
		_match_end_2119c07d1:;
	};
	if (((*((*(_4831_d))))._field_Args.len() == 0LL)) {
		_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*(_4831_d))))._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		_20d438d96_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_4831_d))))._field_Args.len() > 1LL)) {
		_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*(_4831_d))))._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("derive", 6), &__jule_any_type4)}));
	};
	{
		auto &_match_expr{ (*((*((*(_4831_d))))._field_Args[0LL]))._field_Kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_2119c4a7c:;
		}
		else {
			_case_begin_2119c0b66:;
			{
				_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*(_4831_d))))._field_Args[0LL], jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4831_d))))._field_Args[0LL]))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_2119c4692:;
	};
}



inline void _20d40e388_checkNamespace(_20d40d651_directiveChecker* _self_, jule::Ptr<_20d36adb6_Directive>* _7438_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_2119c65d9:;
			{
				if ((!((*((*(_self_))._field_o.cast_ptr<_20d38c58b_Struct>(&__jule_any_type66)))._field_Binded))) {
					_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*(_7438_d))))._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_7438_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_2119c62a9:;
			{
				if ((!((*((*(_self_))._field_o.cast_ptr<_20d3a2b45_Fn>(&__jule_any_type65)))._field_Binded))) {
					_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*(_7438_d))))._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_7438_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_2119c6320:;
			{
				if ((!((*((*(_self_))._field_o.cast_ptr<_20d458aca_Var>(&__jule_any_type8)))._field_Binded))) {
					_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*(_7438_d))))._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_7438_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else {
			_case_begin_2119c6243:;
			{
				_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*(_7438_d))))._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_7438_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_2119c4818:;
	};
	if (((*((*(_7438_d))))._field_Args.len() == 0LL)) {
		_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*(_7438_d))))._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_7438_d))))._field_Args.len() > 1LL)) {
		_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*(_7438_d))))._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_7438_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_20d3510bb_Token> _9913_arg = (*((*(_7438_d))))._field_Args[0LL];;
	if (((*(_9913_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_20d438a33_pushErr((*(_self_))._field_s.ptr(), _9913_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_9913_arg))._field_Kind[0LL] != '\"')) {
		_20d438a33_pushErr((*(_self_))._field_s.ptr(), _9913_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_7438_d))))._field_Args[0LL]))._field_Kind=(*(_9913_arg))._field_Kind.slice(1LL, ((*(_9913_arg))._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_2119d17e2:;
			{
				if ((_20d4d76a3_findDirective(&((*((*(_self_))._field_d))), jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_20d36adb6_Directive> _11625_typedef = jule::new_ptr<_20d36adb6_Directive>(_20d36adb6_Directive{._field_Tag=(*((*(_7438_d))))._field_Tag, });;
					(*((*(_11625_typedef))._field_Tag))._field_Kind=jule::Str("typedef", 7);
					{ jule::Slice<jule::Ptr<_20d36adb6_Directive>> &__jule_push_dest = (*((*(_self_))._field_d)); __jule_push_dest.push(_11625_typedef); };
				};
			}
		}
		_match_end_2119d178c:;
	};
}



inline void _20d40e641_checkDeprecated(_20d40d651_directiveChecker* _self_, jule::Ptr<_20d36adb6_Directive>* _12539_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_2119d3d11:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_20d38c58b_Struct>(&__jule_any_type66)))._field_Binded) {
					_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*(_12539_d))))._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_12539_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_2119d3d77:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_20d3a2b45_Fn>(&__jule_any_type65)))._field_Binded) {
					_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*(_12539_d))))._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_12539_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_2119d3ddd:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_20d458aca_Var>(&__jule_any_type8)))._field_Binded) {
					_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*(_12539_d))))._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_12539_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else {
			_case_begin_2119d385a:;
			{
				_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*(_12539_d))))._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_12539_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_2119d3805:;
	};
	if (((*((*(_12539_d))))._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*((*(_12539_d))))._field_Args.len() > 1LL)) {
		_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*(_12539_d))))._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_12539_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_20d3510bb_Token> _15013_arg = (*((*(_12539_d))))._field_Args[0LL];;
	if (((*(_15013_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_20d438a33_pushErr((*(_self_))._field_s.ptr(), _15013_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_15013_arg))._field_Kind[0LL] != '\"')) {
		_20d438a33_pushErr((*(_self_))._field_s.ptr(), _15013_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_12539_d))))._field_Args[0LL]))._field_Kind=(*(_15013_arg))._field_Kind.slice(1LL, ((*(_15013_arg))._field_Kind.len() - 1LL));
}



inline void _20d40e8e9_checkTest(_20d40d651_directiveChecker* _self_, jule::Ptr<_20d36adb6_Directive>* _16429_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_2119d93cc:;
			{
				jule::Ptr<_20d3a2b45_Fn> _16717_f = (*(_self_))._field_o.cast_ptr<_20d3a2b45_Fn>(&__jule_any_type65);;
				if ((((!((*(_16717_f))._field_Binded)) && (!(_20d3a386b_IsInit(_16717_f.ptr())))) && (!(_20d3a35d5_IsEntryPoint(_16717_f.ptr()))))) {
					goto _match_end_2119ddca5;
				};
				if (_20d3a334e_IsMethod(_16717_f.ptr())) {
					_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_16717_f))._field_Token, jule::Str("you cannot declare test methods", 31), jule::Slice<jule::Any>());
					goto _match_end_2119ddca5;
				};
				goto _case_begin_2119ddd0a;
			}
		}
		else {
			_case_begin_2119ddd0a:;
			{
				_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*(_16429_d))))._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_16429_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_2119ddca5:;
	};
	if (((*((*(_16429_d))))._field_Args.len() > 0LL)) {
		_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*(_16429_d))))._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _20d40eba2_checkDirective(_20d40d651_directiveChecker* _self_, jule::Ptr<_20d36adb6_Directive>* _18538_d) {
	{
		auto &_match_expr{ (*((*((*(_18538_d))))._field_Tag))._field_Kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_2119e3c00:;
			{
				_20d40da6e_checkCdef(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_2119e389d:;
			{
				_20d40dd27_checkTypedef(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_2119e3914:;
			{
				_20d40e0d0_checkDerive(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_2119e397a:;
			{
				_20d40e388_checkNamespace(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_2119e3a02:;
			{
				_20d40e641_checkDeprecated(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_2119e49d1:;
			{
				_20d40e8e9_checkTest(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_2119e4a47:;
			{
				_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*(_18538_d))))._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_18538_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		else {
			_case_begin_2119e3837:;
			{
				_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*(_18538_d))))._field_Tag, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_18538_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_2119e37b0:;
	};
}



inline void _20d40eda0_check(_20d40d651_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2119e6c14:;
		if (it != expr_end) {
			jule::Ptr<_20d36adb6_Directive> _20821_d = *it;
			{
				_20d40eba2_checkDirective(_self_, &(_20821_d));
			}
			_iter_next_2119e6c14:;
			++it;
			goto _iter_begin_2119e6c14;
		}
		_iter_end_2119e6c14:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20d40d651_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20d414d94_ImportInfo> _20d41537d_SelectPackage(_20d414d94_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_20d414d94_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_20d458aca_Var> _20d415779_FindVar(_20d414d94_ImportInfo* _self_, jule::Str _18926_ident, jule::Bool ) {
	if ((!(_20d4173d5_isLookupable(_self_, &(_18926_ident))))) {
		return nullptr;;
	};
	return _20d41237a_findVarInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_18926_ident), false);;
}



inline jule::Ptr<_20d4dd49a_TypeAlias> _20d415b75_FindTypeAlias(_20d414d94_ImportInfo* _self_, jule::Str _20132_ident, jule::Bool ) {
	if ((!(_20d4173d5_isLookupable(_self_, &(_20132_ident))))) {
		return nullptr;;
	};
	return _20d4127ed_findTypeAliasInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_20132_ident), false);;
}



inline jule::Ptr<_20d38c58b_Struct> _20d416071_FindStruct(_20d414d94_ImportInfo* _self_, jule::Str _21329_ident, jule::Bool ) {
	if ((!(_20d4173d5_isLookupable(_self_, &(_21329_ident))))) {
		return nullptr;;
	};
	return _20d412c2c_findStructInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_21329_ident), false);;
}



inline jule::Ptr<_20d3a2b45_Fn> _20d41646c_FindFn(_20d414d94_ImportInfo* _self_, jule::Str _22525_ident, jule::Bool ) {
	if ((!(_20d4173d5_isLookupable(_self_, &(_22525_ident))))) {
		return nullptr;;
	};
	return _20d4131d3_findFnInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_22525_ident), false);;
}



inline jule::Ptr<_20d3b5dde_Trait> _20d4167ad_FindTrait(_20d414d94_ImportInfo* _self_, jule::Str _23628_ident) {
	if ((!(_20d4173d5_isLookupable(_self_, &(_23628_ident))))) {
		return nullptr;;
	};
	return _20d413524_findTraitInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_23628_ident));;
}



inline jule::Ptr<_20d3b85d9_Enum> _20d416aee_FindEnum(_20d414d94_ImportInfo* _self_, jule::Str _24727_ident) {
	if ((!(_20d4173d5_isLookupable(_self_, &(_24727_ident))))) {
		return nullptr;;
	};
	return _20d413898_findEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_24727_ident));;
}



inline jule::Ptr<_20d3b9ce4_TypeEnum> _20d416e40_FindTypeEnum(_20d414d94_ImportInfo* _self_, jule::Str _25831_ident) {
	if ((!(_20d4173d5_isLookupable(_self_, &(_25831_ident))))) {
		return nullptr;;
	};
	return _20d413c1c_findTypeEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_25831_ident));;
}



inline jule::Bool _20d4173d5_isLookupable(_20d414d94_ImportInfo* _self_, jule::Str* _26728_ident) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	if ((!((*(_self_))._field_ImportAll))) {
		if ((((*(_self_))._field_Alias.len() != 0LL) || _20d417726_existIdent(_self_, jule::Str("self", 4)))) {
			return true;;
		};
		if (((*(_self_))._field_Selected.len() > 0LL)) {
			if ((!(_20d417726_existIdent(_self_, (*(_26728_ident)))))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _20d417726_existIdent(_20d414d94_ImportInfo* _self_, jule::Str _28725_ident) {
	{
		auto expr = &((*(_self_))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211a0ce4a:;
		if (it != expr_end) {
			jule::Ptr<_20d3510bb_Token> *_28816_sident = it;
			{
				if (((*((*(_28816_sident))))._field_Kind == _28725_ident)) {
					return true;;
				};
			}
			_iter_next_211a0ce4a:;
			++it;
			goto _iter_begin_211a0ce4a;
		}
		_iter_end_211a0ce4a:;
	};
	return false;;
}



inline jule::Bool _20d4179ac_isAccessibleViaSelection(_20d414d94_ImportInfo* _self_) {
	return (((*(_self_))._field_ImportAll || ((*(_self_))._field_Selected.len() == 0LL)) || _20d417726_existIdent(_self_, jule::Str("self", 4)));;
}







std::ostream &operator<<(std::ostream &_Stream, _20d414d94_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20d414d94_ImportInfo> _20d418260_SelectPackage(_20d417cba_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_20d414d94_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_20d458aca_Var> _20d41865b_FindVar(_20d417cba_Package* _self_, jule::Str _31426_ident, jule::Bool _31438_binded) {
	return _20d41237a_findVarInPackage(&((*(_self_))._field_Files), &(_31426_ident), _31438_binded);;
}



inline jule::Ptr<_20d4dd49a_TypeAlias> _20d418a57_FindTypeAlias(_20d417cba_Package* _self_, jule::Str _32032_ident, jule::Bool _32044_binded) {
	return _20d4127ed_findTypeAliasInPackage(&((*(_self_))._field_Files), &(_32032_ident), _32044_binded);;
}



inline jule::Ptr<_20d38c58b_Struct> _20d418e53_FindStruct(_20d417cba_Package* _self_, jule::Str _32629_ident, jule::Bool _32641_binded) {
	return _20d412c2c_findStructInPackage(&((*(_self_))._field_Files), &(_32629_ident), _32641_binded);;
}



inline jule::Ptr<_20d3a2b45_Fn> _20d41934e_FindFn(_20d417cba_Package* _self_, jule::Str _33225_ident, jule::Bool _33237_binded) {
	return _20d4131d3_findFnInPackage(&((*(_self_))._field_Files), &(_33225_ident), _33237_binded);;
}



inline jule::Ptr<_20d3b5dde_Trait> _20d419690_FindTrait(_20d417cba_Package* _self_, jule::Str _33828_ident) {
	return _20d413524_findTraitInPackage(&((*(_self_))._field_Files), &(_33828_ident));;
}



inline jule::Ptr<_20d3b85d9_Enum> _20d4199d1_FindEnum(_20d417cba_Package* _self_, jule::Str _34427_ident) {
	return _20d413898_findEnumInPackage(&((*(_self_))._field_Files), &(_34427_ident));;
}



inline jule::Ptr<_20d3b9ce4_TypeEnum> _20d419d22_FindTypeEnum(_20d417cba_Package* _self_, jule::Str _35031_ident) {
	return _20d413c1c_findTypeEnumInPackage(&((*(_self_))._field_Files), &(_35031_ident));;
}







std::ostream &operator<<(std::ostream &_Stream, _20d417cba_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20d3cbb5d_comptimeTypeInfo> _20d435733_pushComptimeTypeInfo(_20d4352c1_commonSemaMeta* _self_, jule::Ptr<_20d4de28c_TypeKind>* _21444_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211a3e4a9:;
		if (it != expr_end) {
			jule::Ptr<_20d3cbb5d_comptimeTypeInfo> _21521_t2 = *it;
			{
				if ((((*((*(_21521_t2))._field_base))._field_BindIdent == (*((*(_21444_t))))._field_BindIdent) && _20d4de996_Equal((*(_21521_t2))._field_base, (*(_21444_t))))) {
					return _21521_t2;;
				};
			}
			_iter_next_211a3e4a9:;
			++it;
			goto _iter_begin_211a3e4a9;
		}
		_iter_end_211a3e4a9:;
	};
	jule::Ptr<_20d3cbb5d_comptimeTypeInfo> _22017_t1 = jule::new_ptr<_20d3cbb5d_comptimeTypeInfo>(_20d3cbb5d_comptimeTypeInfo{._field_base=(*(_21444_t))});;
	{ jule::Slice<jule::Ptr<_20d3cbb5d_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_22017_t1); };
	return _22017_t1;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d4352c1_commonSemaMeta _Src) {
	_Stream << "commonSemaMeta{";
	_Stream << "comptimeTypeInfos:" << _Src._field_comptimeTypeInfos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20d414d94_ImportInfo> _20d43638d_SelectPackage(_20d435de8_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_20d414d94_ImportInfo>)> _24332_selector) {
	return _20d082429_SelectPackage((*(_self_))._field_file.ptr(), _24332_selector);;
}



inline jule::Ptr<_20d458aca_Var> _20d436789_FindVar(_20d435de8_Sema* _self_, jule::Str _25326_ident, jule::Bool _25338_binded) {
	jule::Ptr<_20d458aca_Var> _25517_v = _20d41237a_findVarInPackage(&((*(_self_))._field_files), &(_25326_ident), _25338_binded);;
	if ((_25517_v != nullptr)) {
		return _25517_v;;
	};
	if ((!(_20d432ee4_IsPub(&(_25326_ident))))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211a43304:;
		if (it != expr_end) {
			jule::Ptr<_20d414d94_ImportInfo> _26621_imp = *it;
			{
				if ((!(_20d433e3a_impIsLookupable(&(_26621_imp), &(_25326_ident))))) {
					goto _iter_next_211a43304;
				};
				_25517_v=_20d415779_FindVar(_26621_imp.ptr(), _25326_ident, _25338_binded);
				if (((_25517_v != nullptr) && _20d439292_isAccessibleDefine(_self_, (*(_25517_v))._field_Public, (*(_25517_v))._field_Token))) {
					return _25517_v;;
				};
			}
			_iter_next_211a43304:;
			++it;
			goto _iter_begin_211a43304;
		}
		_iter_end_211a43304:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d4dd49a_TypeAlias> _20d436b85_FindTypeAlias(_20d435de8_Sema* _self_, jule::Str _28532_ident, jule::Bool _28544_binded) {
	jule::Ptr<_20d4dd49a_TypeAlias> _28717_ta = _20d4127ed_findTypeAliasInPackage(&((*(_self_))._field_files), &(_28532_ident), _28544_binded);;
	if ((_28717_ta != nullptr)) {
		return _28717_ta;;
	};
	if ((!(_20d432ee4_IsPub(&(_28532_ident))))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211a4625d:;
		if (it != expr_end) {
			jule::Ptr<_20d414d94_ImportInfo> _29821_imp = *it;
			{
				if ((!(_20d433e3a_impIsLookupable(&(_29821_imp), &(_28532_ident))))) {
					goto _iter_next_211a4625d;
				};
				_28717_ta=_20d415b75_FindTypeAlias(_29821_imp.ptr(), _28532_ident, _28544_binded);
				if (((_28717_ta != nullptr) && _20d439292_isAccessibleDefine(_self_, (*(_28717_ta))._field_Public, (*(_28717_ta))._field_Token))) {
					return _28717_ta;;
				};
			}
			_iter_next_211a4625d:;
			++it;
			goto _iter_begin_211a4625d;
		}
		_iter_end_211a4625d:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d38c58b_Struct> _20d437081_FindStruct(_20d435de8_Sema* _self_, jule::Str _31729_ident, jule::Bool _31741_binded) {
	jule::Ptr<_20d38c58b_Struct> _31917_s = _20d412c2c_findStructInPackage(&((*(_self_))._field_files), &(_31729_ident), _31741_binded);;
	if ((_31917_s != nullptr)) {
		return _31917_s;;
	};
	if ((!(_20d432ee4_IsPub(&(_31729_ident))))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211a491b7:;
		if (it != expr_end) {
			jule::Ptr<_20d414d94_ImportInfo> _33021_imp = *it;
			{
				if ((!(_20d433e3a_impIsLookupable(&(_33021_imp), &(_31729_ident))))) {
					goto _iter_next_211a491b7;
				};
				_31917_s=_20d416071_FindStruct(_33021_imp.ptr(), _31729_ident, _31741_binded);
				if (((_31917_s != nullptr) && _20d439292_isAccessibleDefine(_self_, (*(_31917_s))._field_Public, (*(_31917_s))._field_Token))) {
					return _31917_s;;
				};
			}
			_iter_next_211a491b7:;
			++it;
			goto _iter_begin_211a491b7;
		}
		_iter_end_211a491b7:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d3a2b45_Fn> _20d43747c_FindFn(_20d435de8_Sema* _self_, jule::Str _34825_ident, jule::Bool _34837_binded) {
	jule::Ptr<_20d3a2b45_Fn> _35017_f = _20d4131d3_findFnInPackage(&((*(_self_))._field_files), &(_34825_ident), _34837_binded);;
	if ((_35017_f != nullptr)) {
		return _35017_f;;
	};
	if ((!(_20d432ee4_IsPub(&(_34825_ident))))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211a4c121:;
		if (it != expr_end) {
			jule::Ptr<_20d414d94_ImportInfo> _36121_imp = *it;
			{
				if ((!(_20d433e3a_impIsLookupable(&(_36121_imp), &(_34825_ident))))) {
					goto _iter_next_211a4c121;
				};
				_35017_f=_20d41646c_FindFn(_36121_imp.ptr(), _34825_ident, _34837_binded);
				if (((_35017_f != nullptr) && _20d439292_isAccessibleDefine(_self_, (*(_35017_f))._field_Public, (*(_35017_f))._field_Token))) {
					return _35017_f;;
				};
			}
			_iter_next_211a4c121:;
			++it;
			goto _iter_begin_211a4c121;
		}
		_iter_end_211a4c121:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d3b5dde_Trait> _20d4377bd_FindTrait(_20d435de8_Sema* _self_, jule::Str _38028_ident) {
	jule::Ptr<_20d3b5dde_Trait> _38217_t = _20d413524_findTraitInPackage(&((*(_self_))._field_files), &(_38028_ident));;
	if ((_38217_t != nullptr)) {
		return _38217_t;;
	};
	if ((!(_20d432ee4_IsPub(&(_38028_ident))))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211a4ed27:;
		if (it != expr_end) {
			jule::Ptr<_20d414d94_ImportInfo> _39321_imp = *it;
			{
				if ((!(_20d433e3a_impIsLookupable(&(_39321_imp), &(_38028_ident))))) {
					goto _iter_next_211a4ed27;
				};
				_38217_t=_20d4167ad_FindTrait(_39321_imp.ptr(), _38028_ident);
				if (((_38217_t != nullptr) && _20d439292_isAccessibleDefine(_self_, (*(_38217_t))._field_Public, (*(_38217_t))._field_Token))) {
					return _38217_t;;
				};
			}
			_iter_next_211a4ed27:;
			++it;
			goto _iter_begin_211a4ed27;
		}
		_iter_end_211a4ed27:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d3b85d9_Enum> _20d437b0e_FindEnum(_20d435de8_Sema* _self_, jule::Str _41227_ident) {
	jule::Ptr<_20d3b85d9_Enum> _41417_e = _20d413898_findEnumInPackage(&((*(_self_))._field_files), &(_41227_ident));;
	if ((_41417_e != nullptr)) {
		return _41417_e;;
	};
	if ((!(_20d432ee4_IsPub(&(_41227_ident))))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211a52a2d:;
		if (it != expr_end) {
			jule::Ptr<_20d414d94_ImportInfo> _42521_imp = *it;
			{
				if ((!(_20d433e3a_impIsLookupable(&(_42521_imp), &(_41227_ident))))) {
					goto _iter_next_211a52a2d;
				};
				_41417_e=_20d416aee_FindEnum(_42521_imp.ptr(), _41227_ident);
				if (((_41417_e != nullptr) && _20d439292_isAccessibleDefine(_self_, (*(_41417_e))._field_Public, (*(_41417_e))._field_Token))) {
					return _41417_e;;
				};
			}
			_iter_next_211a52a2d:;
			++it;
			goto _iter_begin_211a52a2d;
		}
		_iter_end_211a52a2d:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d3b9ce4_TypeEnum> _20d437e50_FindTypeEnum(_20d435de8_Sema* _self_, jule::Str _44431_ident) {
	jule::Ptr<_20d3b9ce4_TypeEnum> _44617_e = _20d413c1c_findTypeEnumInPackage(&((*(_self_))._field_files), &(_44431_ident));;
	if ((_44617_e != nullptr)) {
		return _44617_e;;
	};
	if ((!(_20d432ee4_IsPub(&(_44431_ident))))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211a55734:;
		if (it != expr_end) {
			jule::Ptr<_20d414d94_ImportInfo> _45721_imp = *it;
			{
				if ((!(_20d433e3a_impIsLookupable(&(_45721_imp), &(_44431_ident))))) {
					goto _iter_next_211a55734;
				};
				_44617_e=_20d416e40_FindTypeEnum(_45721_imp.ptr(), _44431_ident);
				if (((_44617_e != nullptr) && _20d439292_isAccessibleDefine(_self_, (*(_44617_e))._field_Public, (*(_44617_e))._field_Token))) {
					return _44617_e;;
				};
			}
			_iter_next_211a55734:;
			++it;
			goto _iter_begin_211a55734;
		}
		_iter_end_211a55734:;
	};
	return nullptr;;
}



inline jule::Bool _20d43835c_isFlag(_20d435de8_Sema* _self_, jule::I64 _47321_flags) {
	return (((*(_self_))._field_flags & _47321_flags) == _47321_flags);;
}



inline void _20d438615_setCurrentFile(_20d435de8_Sema* _self_, jule::Ptr<_20d081e40_SymbolTable> _47537_f) {
	(*(_self_))._field_file=_47537_f;
}



inline void _20d438a33_pushErr(_20d435de8_Sema* _self_, jule::Ptr<_20d3510bb_Token> _47726_token, jule::Str _47741_fmt, jule::Slice<jule::Any> _47754_args) {
	{ jule::Slice<_22730be5e_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_20d433ab6_compilerErr(&(_47726_token), true, _47741_fmt, _47754_args)); };
}



inline void _20d438d96_pushSuggestion(_20d435de8_Sema* _self_, jule::Str _48233_fmt, jule::Slice<jule::Any> _48246_args) {
	{
		_20d4350e5_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _48233_fmt, _48246_args);
	};
}



inline jule::Bool _20d439292_isAccessibleDefine(_20d435de8_Sema* _self_, jule::Bool _48733_public, jule::Ptr<_20d3510bb_Token> _48747_token) {
	return ((_48733_public || ((*(_48747_token))._field_File == nullptr)) || (_20d357006_Dir((*((*(_self_))._field_file))._field_File.ptr()) == _20d357006_Dir((*(_48747_token))._field_File.ptr())));;
}



inline jule::Bool _20d439748_isDuplicatedIdent(_20d435de8_Sema* _self_, jule::Uintptr _49432_itself, jule::Str* _49450_ident, jule::Bool _49462_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211a5c2b8:;
		if (it != expr_end) {
			jule::Ptr<_20d081e40_SymbolTable> *_49516_f = it;
			{
				if (_20d085460_isDuplicatedIdent((*(_49516_f)).ptr(), _49432_itself, _49450_ident, _49462_binded)) {
					return true;;
				};
				{
					auto expr = &((*((*(_49516_f))))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_211a5cbae:;
					if (it != expr_end) {
						jule::Ptr<_20d414d94_ImportInfo> *_50020_imp = it;
						{
							{
								auto expr = &((*((*(_50020_imp))))._field_Selected);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_211a5dab1:;
								if (it != expr_end) {
									jule::Ptr<_20d3510bb_Token> *_50124_selected = it;
									{
										if (((*((*(_50124_selected))))._field_Kind == (*(_49450_ident)))) {
											return true;;
										};
									}
									_iter_next_211a5dab1:;
									++it;
									goto _iter_begin_211a5dab1;
								}
								_iter_end_211a5dab1:;
							};
						}
						_iter_next_211a5cbae:;
						++it;
						goto _iter_begin_211a5cbae;
					}
					_iter_end_211a5cbae:;
				};
			}
			_iter_next_211a5c2b8:;
			++it;
			goto _iter_begin_211a5c2b8;
		}
		_iter_end_211a5c2b8:;
	};
	return false;;
}



inline void _20d439aab_checkDirectives(jule::Ptr<_20d435de8_Sema> _self_, jule::Slice<jule::Ptr<_20d36adb6_Directive>>* _51140_d, jule::Any _51166_o) {
	_20d40d651_directiveChecker _51217_dc = _20d40d651_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_20d36adb6_Directive>>>)(_51140_d)), ._field_o=_51166_o};;
	_20d40eda0_check(&_51217_dc);
}



inline jule::Bool _20d43a062_checkGenericQuantity(_20d435de8_Sema* _self_, jule::I64 _52039_required, jule::I64 _52054_given, jule::Ptr<_20d3510bb_Token> _52066_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_52039_required == 0LL) && (_52054_given > 0LL))) {
			_case_begin_211a613aa:;
			{
				_20d438a33_pushErr(_self_, _52066_token, jule::Str("type have not generics but instantiate like generics", 52), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_52039_required > 0LL) && (_52054_given == 0LL))) {
			_case_begin_211a61432:;
			{
				_20d438a33_pushErr(_self_, _52066_token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52039_required < _52054_given)) {
			_case_begin_211a614a9:;
			{
				_20d438a33_pushErr(_self_, _52066_token, jule::Str("overflow generics", 17), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52039_required > _52054_given)) {
			_case_begin_211a616c9:;
			{
				_20d438a33_pushErr(_self_, _52066_token, jule::Str("missing generics", 16), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_211a612bc:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_211a61201:;
	};
}



inline jule::Bool _20d43a45d_isDuplicatedImportSelection(_20d435de8_Sema* _self_, jule::Uintptr _53942_itself, jule::Str* _53960_ident) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211a63951:;
		if (it != expr_end) {
			jule::Ptr<_20d414d94_ImportInfo> *_54016_imp = it;
			{
				if ((static_cast<jule::Uintptr>((*(_54016_imp))) == _53942_itself)) {
					goto _iter_end_211a63951;
				};
				if (_20d417726_existIdent((*(_54016_imp)).ptr(), (*(_53960_ident)))) {
					return true;;
				};
			}
			_iter_next_211a63951:;
			++it;
			goto _iter_begin_211a63951;
		}
		_iter_end_211a63951:;
	};
	return false;;
}



inline jule::Any _20d43a859_getImportDef(_20d435de8_Sema* _self_, jule::Str* _55228_ident, jule::Ptr<_20d414d94_ImportInfo>* _55245_imp) {
	if ((_20d567018_findPackageBuiltinDef(&((*((*(_55245_imp))))._field_LinkPath), _55228_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type3);;
	};
	{
		auto expr = &((*((*((*(_55245_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211a65843:;
		if (it != expr_end) {
			jule::Ptr<_20d081e40_SymbolTable> _55621_f = *it;
			{
				;
				jule::Any _55921_def = _20d084ea9_defByIdent(_55621_f.ptr(), _55228_ident, false);;
				if ((_55921_def != nullptr)) {
					return _55921_def;;
				};
			}
			_iter_next_211a65843:;
			++it;
			goto _iter_begin_211a65843;
		}
		_iter_end_211a65843:;
	};
	return nullptr;;
}



inline jule::Bool _211a6c76d_checkImportSelection(_20d435de8_Sema* _self_, jule::Ptr<_20d3510bb_Token>* _56743_ident, jule::Ptr<_20d458aca_Var>* _56759_s) {
	if ((!(_20d439292_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_20d438a33_pushErr(_self_, (*(_56743_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_20d438d96_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_20d41425b_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_20d438a33_pushErr(_self_, (*(_56743_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _211a718b5_checkImportSelection(_20d435de8_Sema* _self_, jule::Ptr<_20d3510bb_Token>* _56743_ident, jule::Ptr<_20d4dd49a_TypeAlias>* _56759_s) {
	if ((!(_20d439292_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_20d438a33_pushErr(_self_, (*(_56743_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_20d438d96_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_20d41425b_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_20d438a33_pushErr(_self_, (*(_56743_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _211a759b8_checkImportSelection(_20d435de8_Sema* _self_, jule::Ptr<_20d3510bb_Token>* _56743_ident, jule::Ptr<_20d38c58b_Struct>* _56759_s) {
	if ((!(_20d439292_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_20d438a33_pushErr(_self_, (*(_56743_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_20d438d96_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_20d41425b_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_20d438a33_pushErr(_self_, (*(_56743_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _211a79d85_checkImportSelection(_20d435de8_Sema* _self_, jule::Ptr<_20d3510bb_Token>* _56743_ident, jule::Ptr<_20d3b5dde_Trait>* _56759_s) {
	if ((!(_20d439292_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_20d438a33_pushErr(_self_, (*(_56743_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_20d438d96_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_20d41425b_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_20d438a33_pushErr(_self_, (*(_56743_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _211a7de88_checkImportSelection(_20d435de8_Sema* _self_, jule::Ptr<_20d3510bb_Token>* _56743_ident, jule::Ptr<_20d3b85d9_Enum>* _56759_s) {
	if ((!(_20d439292_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_20d438a33_pushErr(_self_, (*(_56743_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_20d438d96_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_20d41425b_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_20d438a33_pushErr(_self_, (*(_56743_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _211a8308b_checkImportSelection(_20d435de8_Sema* _self_, jule::Ptr<_20d3510bb_Token>* _56743_ident, jule::Ptr<_20d3b9ce4_TypeEnum>* _56759_s) {
	if ((!(_20d439292_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_20d438a33_pushErr(_self_, (*(_56743_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_20d438d96_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_20d41425b_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_20d438a33_pushErr(_self_, (*(_56743_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _211a8718e_checkImportSelection(_20d435de8_Sema* _self_, jule::Ptr<_20d3510bb_Token>* _56743_ident, jule::Ptr<_20d3a2b45_Fn>* _56759_s) {
	if ((!(_20d439292_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_20d438a33_pushErr(_self_, (*(_56743_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_20d438d96_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_20d41425b_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_20d438a33_pushErr(_self_, (*(_56743_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}



inline jule::Bool _20d43b096_checkImportSelectedSelections(_20d435de8_Sema* _self_, jule::Ptr<_20d414d94_ImportInfo>* _58153_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_58153_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211a67b86:;
		if (it != expr_end) {
			jule::Ptr<_20d3510bb_Token> _58316_ident = *it;
			{
				if ((*(_58316_ident))._field_Kind.equal("self", 4)) {
					goto _iter_next_211a67b86;
				};
				if (_20d43a45d_isDuplicatedImportSelection(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_58153_imp)))), &((*(_58316_ident))._field_Kind))) {
					_20d438a33_pushErr(_self_, _58316_ident, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_58316_ident))._field_Kind, &__jule_any_type4)}));
					_20d438d96_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_211a67b86;
				};
				jule::Any _59521_def = _20d43a859_getImportDef(_self_, &((*(_58316_ident))._field_Kind), _58153_imp);;
				{
					auto &_match_expr{ _59521_def };
					
					if (_match_expr.type == &__jule_any_type3) {
						_case_begin_211a6a408:;
						{
							goto _iter_next_211a67b86;
						}
					}
					else if (_match_expr.type == &__jule_any_type8) {
						_case_begin_211a6a97a:;
						{
							jule::Ptr<_20d458aca_Var> _60125_v = _59521_def.cast_ptr<_20d458aca_Var>(&__jule_any_type8);;
							__jule_func_result=(_211a6c76d_checkImportSelection(_self_, &(_58316_ident), &(_60125_v)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type67) {
						_case_begin_211a6a9e1:;
						{
							jule::Ptr<_20d4dd49a_TypeAlias> _60425_ta = _59521_def.cast_ptr<_20d4dd49a_TypeAlias>(&__jule_any_type67);;
							__jule_func_result=(_211a718b5_checkImportSelection(_self_, &(_58316_ident), &(_60425_ta)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type66) {
						_case_begin_211a6b5a2:;
						{
							jule::Ptr<_20d38c58b_Struct> _60725_s = _59521_def.cast_ptr<_20d38c58b_Struct>(&__jule_any_type66);;
							__jule_func_result=(_211a759b8_checkImportSelection(_self_, &(_58316_ident), &(_60725_s)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_211a6b618:;
						{
							jule::Ptr<_20d3b5dde_Trait> _61025_t = _59521_def.cast_ptr<_20d3b5dde_Trait>(&__jule_any_type10);;
							__jule_func_result=(_211a79d85_checkImportSelection(_self_, &(_58316_ident), &(_61025_t)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type68) {
						_case_begin_211a6b67e:;
						{
							jule::Ptr<_20d3b85d9_Enum> _61325_e = _59521_def.cast_ptr<_20d3b85d9_Enum>(&__jule_any_type68);;
							__jule_func_result=(_211a7de88_checkImportSelection(_self_, &(_58316_ident), &(_61325_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type69) {
						_case_begin_211a6b6e5:;
						{
							jule::Ptr<_20d3b9ce4_TypeEnum> _61625_e = _59521_def.cast_ptr<_20d3b9ce4_TypeEnum>(&__jule_any_type69);;
							__jule_func_result=(_211a8308b_checkImportSelection(_self_, &(_58316_ident), &(_61625_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type65) {
						_case_begin_211a6b75b:;
						{
							jule::Ptr<_20d3a2b45_Fn> _61925_f = _59521_def.cast_ptr<_20d3a2b45_Fn>(&__jule_any_type65);;
							__jule_func_result=(_211a8718e_checkImportSelection(_self_, &(_58316_ident), &(_61925_f)) && __jule_func_result);
						}
					}
					else {
						_case_begin_211a6a86a:;
						{
							_20d438a33_pushErr(_self_, _58316_ident, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_58316_ident))._field_Kind, &__jule_any_type4)}));
							__jule_func_result=false;
							goto _iter_next_211a67b86;
						}
					}
					_match_end_211a6a815:;
				};
			}
			_iter_next_211a67b86:;
			++it;
			goto _iter_begin_211a67b86;
		}
		_iter_end_211a67b86:;
	};
	return __jule_func_result;;
}



inline jule::Bool _211a8b869_checkImportsAllSelectionsFromCollection(_20d435de8_Sema* _self_, jule::Slice<jule::Ptr<_20d458aca_Var>>* _63062_s, jule::Ptr<_20d3510bb_Token>* _63071_et) {
	jule::Bool _63117_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211a8d45e:;
		if (it != expr_end) {
			jule::Ptr<_20d458aca_Var> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63117_ok=(_211a6c76d_checkImportSelection(_self_, _63071_et, _63216_d) && _63117_ok);
				};
			}
			_iter_next_211a8d45e:;
			++it;
			goto _iter_begin_211a8d45e;
		}
		_iter_end_211a8d45e:;
	};
	return _63117_ok;;
}

inline jule::Bool _211a8c9ad_checkImportsAllSelectionsFromCollection(_20d435de8_Sema* _self_, jule::Slice<jule::Ptr<_20d4dd49a_TypeAlias>>* _63062_s, jule::Ptr<_20d3510bb_Token>* _63071_et) {
	jule::Bool _63117_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211a91385:;
		if (it != expr_end) {
			jule::Ptr<_20d4dd49a_TypeAlias> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63117_ok=(_211a718b5_checkImportSelection(_self_, _63071_et, _63216_d) && _63117_ok);
				};
			}
			_iter_next_211a91385:;
			++it;
			goto _iter_begin_211a91385;
		}
		_iter_end_211a91385:;
	};
	return _63117_ok;;
}

inline jule::Bool _211a90928_checkImportsAllSelectionsFromCollection(_20d435de8_Sema* _self_, jule::Slice<jule::Ptr<_20d38c58b_Struct>>* _63062_s, jule::Ptr<_20d3510bb_Token>* _63071_et) {
	jule::Bool _63117_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211a9429a:;
		if (it != expr_end) {
			jule::Ptr<_20d38c58b_Struct> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63117_ok=(_211a759b8_checkImportSelection(_self_, _63071_et, _63216_d) && _63117_ok);
				};
			}
			_iter_next_211a9429a:;
			++it;
			goto _iter_begin_211a9429a;
		}
		_iter_end_211a9429a:;
	};
	return _63117_ok;;
}

inline jule::Bool _211a937e9_checkImportsAllSelectionsFromCollection(_20d435de8_Sema* _self_, jule::Slice<jule::Ptr<_20d3a2b45_Fn>>* _63062_s, jule::Ptr<_20d3510bb_Token>* _63071_et) {
	jule::Bool _63117_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211a971d2:;
		if (it != expr_end) {
			jule::Ptr<_20d3a2b45_Fn> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63117_ok=(_211a8718e_checkImportSelection(_self_, _63071_et, _63216_d) && _63117_ok);
				};
			}
			_iter_next_211a971d2:;
			++it;
			goto _iter_begin_211a971d2;
		}
		_iter_end_211a971d2:;
	};
	return _63117_ok;;
}

inline jule::Bool _211a96775_checkImportsAllSelectionsFromCollection(_20d435de8_Sema* _self_, jule::Slice<jule::Ptr<_20d3b5dde_Trait>>* _63062_s, jule::Ptr<_20d3510bb_Token>* _63071_et) {
	jule::Bool _63117_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211a9a0a3:;
		if (it != expr_end) {
			jule::Ptr<_20d3b5dde_Trait> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63117_ok=(_211a79d85_checkImportSelection(_self_, _63071_et, _63216_d) && _63117_ok);
				};
			}
			_iter_next_211a9a0a3:;
			++it;
			goto _iter_begin_211a9a0a3;
		}
		_iter_end_211a9a0a3:;
	};
	return _63117_ok;;
}

inline jule::Bool _211a99646_checkImportsAllSelectionsFromCollection(_20d435de8_Sema* _self_, jule::Slice<jule::Ptr<_20d3b85d9_Enum>>* _63062_s, jule::Ptr<_20d3510bb_Token>* _63071_et) {
	jule::Bool _63117_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211a9ce74:;
		if (it != expr_end) {
			jule::Ptr<_20d3b85d9_Enum> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63117_ok=(_211a7de88_checkImportSelection(_self_, _63071_et, _63216_d) && _63117_ok);
				};
			}
			_iter_next_211a9ce74:;
			++it;
			goto _iter_begin_211a9ce74;
		}
		_iter_end_211a9ce74:;
	};
	return _63117_ok;;
}

inline jule::Bool _211a9c517_checkImportsAllSelectionsFromCollection(_20d435de8_Sema* _self_, jule::Slice<jule::Ptr<_20d3b9ce4_TypeEnum>>* _63062_s, jule::Ptr<_20d3510bb_Token>* _63071_et) {
	jule::Bool _63117_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211aa0dcd:;
		if (it != expr_end) {
			jule::Ptr<_20d3b9ce4_TypeEnum> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63117_ok=(_211a8308b_checkImportSelection(_self_, _63071_et, _63216_d) && _63117_ok);
				};
			}
			_iter_next_211aa0dcd:;
			++it;
			goto _iter_begin_211aa0dcd;
		}
		_iter_end_211aa0dcd:;
	};
	return _63117_ok;;
}



inline jule::Bool _20d43b7d3_checkImportAllSelections(_20d435de8_Sema* _self_, jule::Ptr<_20d414d94_ImportInfo>* _64044_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*((*(_64044_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211a6b904:;
		if (it != expr_end) {
			jule::Ptr<_20d081e40_SymbolTable> *_64216_file = it;
			{
				__jule_func_result=(_211a8b869_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64216_file))))._field_Vars), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_211a8c9ad_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64216_file))))._field_TypeAliases), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_211a90928_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64216_file))))._field_Structs), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_211a937e9_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64216_file))))._field_Funcs), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_211a96775_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64216_file))))._field_Traits), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_211a99646_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64216_file))))._field_Enums), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_211a9c517_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64216_file))))._field_TypeEnums), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
			}
			_iter_next_211a6b904:;
			++it;
			goto _iter_begin_211a6b904;
		}
		_iter_end_211a6b904:;
	};
	return __jule_func_result;;
}



inline jule::Bool _20d43bb24_checkImportSelections(_20d435de8_Sema* _self_, jule::Ptr<_20d414d94_ImportInfo>* _65445_imp) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_65445_imp))))._field_Selected.len() > 0LL)) {
		__jule_func_result = _20d43b096_checkImportSelectedSelections(_self_, _65445_imp);
		return __jule_func_result;;
	} else if ((*((*(_65445_imp))))._field_ImportAll) {
		__jule_func_result = _20d43b7d3_checkImportAllSelections(_self_, _65445_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _20d43be65_isUseAliasDuplication(_20d435de8_Sema* _self_, jule::Ptr<_20d414d94_ImportInfo>* _66341_imp) {
	if (((*((*(_66341_imp))))._field_Alias.len() == 0LL)) {
		return false;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211aa35d9:;
		if (it != expr_end) {
			jule::Ptr<_20d414d94_ImportInfo> _66821_imp2 = *it;
			{
				if ((_66821_imp2 == (*(_66341_imp)))) {
					goto _iter_end_211aa35d9;
				};
				if (((*(_66821_imp2))._field_Alias == (*((*(_66341_imp))))._field_Alias)) {
					return true;;
				};
				if ((((*(_66821_imp2))._field_Ident == (*(_66821_imp2))._field_LinkPath) && ((*(_66821_imp2))._field_Ident == (*((*(_66341_imp))))._field_Alias))) {
					return true;;
				};
			}
			_iter_next_211aa35d9:;
			++it;
			goto _iter_begin_211aa35d9;
		}
		_iter_end_211aa35d9:;
	};
	return false;;
}



inline jule::Bool _20d43c2a6_checkImport(_20d435de8_Sema* _self_, jule::Ptr<_20d414d94_ImportInfo>* _68335_imp) {
	if (((*((*(_68335_imp))))._field_Binded || ((*((*((*(_68335_imp))))._field_Package))._field_Files.len() == 0LL))) {
		return true;;
	};
	if (_20d43be65_isUseAliasDuplication(_self_, _68335_imp)) {
		_20d438a33_pushErr(_self_, (*((*(_68335_imp))))._field_Token, jule::Str("identifier duplication: @ is already used for another use declaration above", 75), jule::Slice<jule::Any>::make({jule::Any((*((*(_68335_imp))))._field_Alias, &__jule_any_type4)}));
		_20d438d96_pushSuggestion(_self_, jule::Str("rename alias for this use declaration to avoid duplication", 58), jule::Slice<jule::Any>());
	};
	if ((!((*((*(_68335_imp))))._field_Duplicate))) {
		jule::Ptr<_20d435de8_Sema> _69421_sema = jule::new_ptr<_20d435de8_Sema>(_20d435de8_Sema{._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_20d455104_check(_69421_sema, &((*((*((*(_68335_imp))))._field_Package))._field_Files));
		if (((*(_69421_sema))._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append((*(_69421_sema))._field_errors);;
			(*(_69421_sema))._field_errors=nullptr;
			return false;;
		};
	};
	return _20d43bb24_checkImportSelections(_self_, _68335_imp);;
}



inline void _20d43c4a4_checkImports(_20d435de8_Sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211aa806c:;
		if (it != expr_end) {
			jule::Ptr<_20d081e40_SymbolTable> _70921_file = *it;
			{
				_20d438615_setCurrentFile(_self_, _70921_file);
				{
					auto expr = &((*(_70921_file))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_211aab070:;
					if (it != expr_end) {
						jule::Ptr<_20d414d94_ImportInfo> _71125_imp = *it;
						{
							jule::Bool _71221_ok = _20d43c2a6_checkImport(_self_, &(_71125_imp));;
							if ((!(_71221_ok))) {
								return;;
							};
						}
						_iter_next_211aab070:;
						++it;
						goto _iter_begin_211aab070;
					}
					_iter_end_211aab070:;
				};
			}
			_iter_next_211aa806c:;
			++it;
			goto _iter_begin_211aa806c;
		}
		_iter_end_211aa806c:;
	};
}



inline void _20d43c6a2_implFileImpls(jule::Ptr<_20d435de8_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211aaaeb5:;
		if (it != expr_end) {
			jule::Ptr<_20d3dd268_Impl> _72221_imp = *it;
			{
				_20d44adb9_implImpl(_self_, &(_72221_imp));
			}
			_iter_next_211aaaeb5:;
			++it;
			goto _iter_begin_211aaaeb5;
		}
		_iter_end_211aaaeb5:;
	};
}



inline void _20d43c8a0_implImpls(jule::Ptr<_20d435de8_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211aacbcb:;
		if (it != expr_end) {
			jule::Ptr<_20d081e40_SymbolTable> _72821_file = *it;
			{
				_20d438615_setCurrentFile(_self_.ptr(), _72821_file);
				_20d43c6a2_implFileImpls(_self_);
			}
			_iter_next_211aacbcb:;
			++it;
			goto _iter_begin_211aacbcb;
		}
		_iter_end_211aacbcb:;
	};
}



inline void _20d43ca9d_checkEnums(jule::Ptr<_20d435de8_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211aad924:;
		if (it != expr_end) {
			jule::Ptr<_20d081e40_SymbolTable> _73521_file = *it;
			{
				_20d438615_setCurrentFile(_self_.ptr(), _73521_file);
				{
					
					if ((!(_20d447305_checkEnumDecls(_self_)))) {
						_case_begin_211ab01a6:;
					}
					else if ((!(_20d44758b_checkTypeEnumDecls(_self_)))) {
						_case_begin_211ab022d:;
					}
					_match_end_211ab011d:;
				};
			}
			_iter_next_211aad924:;
			++it;
			goto _iter_begin_211aad924;
		}
		_iter_end_211aad924:;
	};
}



inline void _20d43cc9b_checkFileInherits(jule::Ptr<_20d435de8_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211aae7c1:;
		if (it != expr_end) {
			jule::Ptr<_20d3b5dde_Trait> _74521_t = *it;
			{
				jule::Bool _74617_ok = _20d448e50__checkTraitDeclInherits(_self_, &(_74521_t));;
				if ((!(_74617_ok))) {
					return;;
				};
			}
			_iter_next_211aae7c1:;
			++it;
			goto _iter_begin_211aae7c1;
		}
		_iter_end_211aae7c1:;
	};
}



inline void _20d43ce99_checkInherits(jule::Ptr<_20d435de8_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211ab142c:;
		if (it != expr_end) {
			jule::Ptr<_20d081e40_SymbolTable> _75421_file = *it;
			{
				_20d438615_setCurrentFile(_self_.ptr(), _75421_file);
				_20d43cc9b_checkFileInherits(_self_);
			}
			_iter_next_211ab142c:;
			++it;
			goto _iter_begin_211ab142c;
		}
		_iter_end_211ab142c:;
	};
}



inline _20d5013e2_typeChecker _20d43d450_typeChecker(jule::Ptr<_20d435de8_Sema> _self_, jule::Trait<_20d50e06a_Lookup> _76035_l, jule::Slice<jule::Ptr<_20d4dd49a_TypeAlias>> _76050_generics, jule::Ptr<_20d500402_referencer> _76113_referencer) {
	_20d5013e2_typeChecker _76217_tc = _20d5013e2_typeChecker{._field_s=_self_, ._field_rootLookup=_76035_l, ._field_lookup=_76035_l, ._field_referencer=_76113_referencer, ._field_useGenerics=_76050_generics, };;
	{
		auto &_match_expr{ _76035_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_211ab42ba:;
			{
				jule::Ptr<_20d3ea9a1_scopeChecker> _77121_hard = _20d3edd28_getHardRoot(_76035_l.cast_ptr<_20d3ea9a1_scopeChecker>(0));;
				_76217_tc._field_refers=(*((*(_77121_hard))._field_owner))._field_Refers;
			}
		}
		_match_end_211ab4265:;
	};
	if (((_76113_referencer != nullptr) && ((*(_76113_referencer))._field_refs != nullptr))) {
		{
			auto &_match_expr{ (*(_76113_referencer))._field_owner };
			
			if (_match_expr.type == &__jule_any_type67) {
				_case_begin_211ab5b07:;
				{
					_76217_tc._field_ownerAlias=(*(_76113_referencer))._field_owner.cast_ptr<_20d4dd49a_TypeAlias>(&__jule_any_type67);
				}
			}
			_match_end_211ab5aa2:;
		};
	};
	return _76217_tc;;
}



inline jule::Ptr<_20d4de28c_TypeKind> _20d43d9b1_buildTypeWithRefers(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d36b999_TypeDecl>* _78744_t, jule::Trait<_20d50e06a_Lookup> _78767_l, jule::Slice<jule::Ptr<_20d4dd49a_TypeAlias>> _78813_generics, jule::Ptr<_20d500402_referencer> _78841_referencer) {
	return ({ auto _wrap_copy = _20d43d450_typeChecker(_self_, _78767_l, _78813_generics, _78841_referencer); _20d508a8c_checkDecl(&_wrap_copy, _78744_t); });;
}



inline jule::Bool _20d43e022_checkTypeWithRefers(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d4e6706_TypeSymbol>* _79444_t, jule::Trait<_20d50e06a_Lookup> _79464_l, jule::Slice<jule::Ptr<_20d4dd49a_TypeAlias>> _79513_generics, jule::Ptr<_20d500402_referencer> _79541_referencer) {
	jule::Bool __jule_func_result = false;
	if (_20d4e6a7a_checked((*(_79444_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_79444_t))))._field_Kind=_20d43d9b1_buildTypeWithRefers(_self_, &((*((*(_79444_t))))._field_Decl), _79464_l, _79513_generics, _79541_referencer);
	__jule_func_result = _20d4e6a7a_checked((*(_79444_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_20d3db233_constraintChecker> _20d43e2a8_constraintChecker(jule::Ptr<_20d435de8_Sema> _self_) {
	return jule::new_ptr<_20d3db233_constraintChecker>(_20d3db233_constraintChecker{._field_s=_self_, });;
}



inline jule::Bool _20d43e6a4_checkType(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d4e6706_TypeSymbol>* _80934_t, jule::Trait<_20d50e06a_Lookup> _80954_l) {
	return _20d43e022_checkTypeWithRefers(_self_, _80934_t, _80954_l, nullptr, nullptr);;
}



inline jule::Ptr<_20d4de28c_TypeKind> _20d43eb5a_buildTypeWithGenerics(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d36b999_TypeDecl>* _81546_t, jule::Slice<jule::Ptr<_20d4dd49a_TypeAlias>> _81613_generics, jule::Ptr<_20d3a8be5_ReferenceStack> _81641_refers) {
	jule::Ptr<_20d5013e2_typeChecker> _81717_tc = jule::new_ptr<_20d5013e2_typeChecker>(_20d5013e2_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_20d50e06a_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_20d50e06a_Lookup>(_self_, 3), ._field_refers=_81641_refers, ._field_useGenerics=_81613_generics, });;
	return _20d508a8c_checkDecl(_81717_tc.ptr(), _81546_t);;
}



inline jule::Ptr<_20d4de28c_TypeKind> _20d4402dc_selectType(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d36b999_TypeDecl>* _83335_t) {
	jule::Ptr<_20d5013e2_typeChecker> _83417_tc = jule::new_ptr<_20d5013e2_typeChecker>(_20d5013e2_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_20d50e06a_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_20d50e06a_Lookup>(_self_, 3), ._field_selection=true, });;
	return _20d508a8c_checkDecl(_83417_tc.ptr(), _83335_t);;
}



inline jule::Ptr<_20d088d59_Eval> _20d440793_evalpd(jule::Ptr<_20d435de8_Sema> _self_, jule::Trait<_20d50e06a_Lookup> _84530_l, jule::Ptr<_20d4de28c_TypeKind> _84545_p, jule::Ptr<_20d458aca_Var> _84563_owner) {
	jule::Ptr<_20d088d59_Eval> _84617_e = jule::new_ptr<_20d088d59_Eval>(_20d088d59_Eval{._field_s=_self_, ._field_lookup=_84530_l, ._field_owner=_84563_owner, });;
	{
		auto &_match_expr{ _84530_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_211abee41:;
			{
				(*(_84617_e))._field_unsafety=_20d3ecd5a_isUnsafe(_84530_l.cast_ptr<_20d3ea9a1_scopeChecker>(0));
			}
		}
		_match_end_211abeddb:;
	};
	(*(_84617_e))._field_prefix=_84545_p;
	return _84617_e;;
}



inline jule::Ptr<_20d088d59_Eval> _20d440b8e_evalp(jule::Ptr<_20d435de8_Sema> _self_, jule::Trait<_20d50e06a_Lookup> _86029_l, jule::Ptr<_20d4de28c_TypeKind> _86044_p) {
	return _20d440793_evalpd(_self_, _86029_l, _86044_p, nullptr);;
}



inline jule::Ptr<_20d088d59_Eval> _20d440ed0_eval(jule::Ptr<_20d435de8_Sema> _self_, jule::Trait<_20d50e06a_Lookup> _86528_l) {
	return _20d440b8e_evalp(_self_, _86528_l, nullptr);;
}



inline jule::Bool _20d441541_checkAssignType(jule::Ptr<_20d435de8_Sema> _self_, jule::Bool _86935_destIsRef, jule::Ptr<_20d4de28c_TypeKind>* _86957_dest, jule::Ptr<_20d087165_Data>* _87014_d, jule::Ptr<_20d3510bb_Token> _87028_errorToken) {
	if ((*((*(_87014_d))))._field_Decl) {
		_20d438a33_pushErr(_self_.ptr(), _87028_errorToken, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return false;;
	};
	if (_86935_destIsRef) {
		if ((!(_20d4de996_Equal((*(_86957_dest)), (*((*(_87014_d))))._field_Kind)))) {
			_20d438a33_pushErr(_self_.ptr(), _87028_errorToken, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_86957_dest)).ptr()), &__jule_any_type4),jule::Any(_20d4de655_Str((*((*(_87014_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			return false;;
		};
	} else {
		jule::Ptr<_20d070b87_assignTypeChecker> _88121_atc = jule::new_ptr<_20d070b87_assignTypeChecker>(_20d070b87_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_86957_dest)), ._field_d=(*(_87014_d)), ._field_errorToken=_87028_errorToken});;
		jule::Bool _88717_ok = _20d071dec_check(_88121_atc.ptr());;
		if ((!(_88717_ok))) {
			return false;;
		};
	};
	if (((!(_20d087a39_IsConst((*(_87014_d)).ptr()))) || (_20d4e1b85_Prim((*(_86957_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _89717_kind = (*(_20d4e1b85_Prim((*(_86957_dest)).ptr())))._field_Kind;;
	{
		
		if (_20b064441_IsSigInt(_89717_kind)) {
			_case_begin_211ac7696:;
			{
				_20b068566_SetI64((*((*(_87014_d))))._field_Constant.ptr(), static_cast<jule::I64>(_20b067c91_AsI64((*((*(_87014_d))))._field_Constant.ptr())));
			}
		}
		else if (_20b06474e_IsUnsigInt(_89717_kind)) {
			_case_begin_211ac771d:;
			{
				_20b06881e_SetU64((*((*(_87014_d))))._field_Constant.ptr(), static_cast<jule::U64>(_20b068027_AsU64((*((*(_87014_d))))._field_Constant.ptr())));
			}
		}
		else if (_20b064d59_IsFloat(_89717_kind)) {
			_case_begin_211ac7795:;
			{
				_20b069138_SetF64((*((*(_87014_d))))._field_Constant.ptr(), static_cast<jule::F64>(_20b0682ad_AsF64((*((*(_87014_d))))._field_Constant.ptr())));
			}
		}
		_match_end_211ac75ca:;
	};
	return true;;
}



inline jule::Bool _20d4419e7_checkTypeCompatibility(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d4de28c_TypeKind>* _91147_dest, jule::Ptr<_20d4de28c_TypeKind>* _91214_src, jule::Ptr<_20d3510bb_Token>* _91235_errorToken) {
	if (((*(_91214_src)) == nullptr)) {
		_20d438a33_pushErr(_self_.ptr(), (*(_91235_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_91147_dest)).ptr()), &__jule_any_type4),jule::Any(_20d4de655_Str((*(_91214_src)).ptr()), &__jule_any_type4)}));
		return false;;
	};
	if ((_20d4e39ab_Tup((*(_91214_src)).ptr()) != nullptr)) {
		_20d438a33_pushErr(_self_.ptr(), (*(_91235_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_91147_dest)).ptr()), &__jule_any_type4),jule::Any(_20d4de655_Str((*(_91214_src)).ptr()), &__jule_any_type4)}));
		return false;;
	};
	_20d06ddd8_typeCompatibilityChecker _92617_tcc = _20d06ddd8_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_91147_dest)), ._field_src=(*(_91214_src)), ._field_errorToken=(*(_91235_errorToken))};;
	if (_20d07059e_check(&_92617_tcc)) {
		return true;;
	};
	_20d438a33_pushErr(_self_.ptr(), (*(_91235_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_91147_dest)).ptr()), &__jule_any_type4),jule::Any(_20d4de655_Str((*(_91214_src)).ptr()), &__jule_any_type4)}));
	return false;;
}



inline jule::Ptr<_20d4de28c_TypeKind> _20d441e9d_buildNonGenericTypeKind(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d36b999_TypeDecl>* _94748_ast, jule::Slice<jule::Ptr<_20d378ba4_GenericDecl>>* _94814_generics, jule::Slice<jule::Ptr<_20d4de28c_TypeKind>>* _94850_ignored) {
	jule::Ptr<_20d5013e2_typeChecker> _94917_tc = jule::new_ptr<_20d5013e2_typeChecker>(_20d5013e2_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_20d50e06a_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_20d50e06a_Lookup>(_self_, 3), ._field_ignoreGenerics=(*(_94814_generics)), ._field_ignoredGenerics=_94850_ignored, });;
	return _20d508a8c_checkDecl(_94917_tc.ptr(), _94748_ast);;
}



inline jule::Bool _20d442399_buildFnNonGenericTypeKinds(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d3a5a49_FnIns>* _95951_f, jule::Slice<jule::Ptr<_20d4de28c_TypeKind>>* _95967_ignored) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Slice<jule::Ptr<_20d378ba4_GenericDecl>> _96117_generics = nullptr;;
	if (_20d3a334e_IsMethod((*((*(_95951_f))))._field_Decl.ptr())) {
		_96117_generics=jule::append((*((*((*(_95951_f))))._field_Decl))._field_Generics,(*((*((*((*(_95951_f))))._field_Decl))._field_Owner))._field_Generics);
	} else {
		_96117_generics=(*((*((*(_95951_f))))._field_Decl))._field_Generics;
	};
	{
		auto expr = &((*((*(_95951_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211ad7486:;
		if (it != expr_end) {
			jule::Ptr<_20d3a4a9d_ParamIns> _96821_p = *it;
			{
				if ((!(_20d3a178c_IsSelf((*(_96821_p))._field_Decl.ptr())))) {
					(*(_96821_p))._field_Kind=_20d441e9d_buildNonGenericTypeKind(_self_, &((*((*((*(_96821_p))._field_Decl))._field_Kind))._field_Decl), &(_96117_generics), _95967_ignored);
					__jule_func_result=(__jule_func_result && ((*(_96821_p))._field_Kind != nullptr));
				};
			}
			_iter_next_211ad7486:;
			++it;
			goto _iter_begin_211ad7486;
		}
		_iter_end_211ad7486:;
	};
	if ((!(_20d3a30b8_IsVoid((*((*(_95951_f))))._field_Decl.ptr())))) {
		(*((*(_95951_f))))._field_Result=_20d441e9d_buildNonGenericTypeKind(_self_, &((*((*((*((*((*(_95951_f))))._field_Decl))._field_Result))._field_Kind))._field_Decl), &(_96117_generics), _95967_ignored);
		__jule_func_result=(__jule_func_result && ((*((*(_95951_f))))._field_Result != nullptr));
	};
	return __jule_func_result;;
}



inline jule::Ptr<_20d3a5a49_FnIns> _20d4426da_getTraitCheckFnKind(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d3a2b45_Fn>* _98144_f) {
	if (((*((*(_98144_f))))._field_Instances.len() == 1LL)) {
		return (*((*(_98144_f))))._field_Instances[0LL];;
	};
	jule::Ptr<_20d3a5a49_FnIns> _98517_ins = _20d3a411e_instanceForce((*(_98144_f)));;
	jule::Ptr<_20d5013e2_typeChecker> _98717_tc = jule::new_ptr<_20d5013e2_typeChecker>(_20d5013e2_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_20d50e06a_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_20d50e06a_Lookup>(_self_, 3), });;
	{
		auto expr = &((*(_98517_ins))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211adc744:;
		if (it != expr_end) {
			jule::Ptr<_20d3a4a9d_ParamIns> _99221_p = *it;
			{
				if ((!(_20d3a178c_IsSelf((*(_99221_p))._field_Decl.ptr())))) {
					(*(_99221_p))._field_Kind=_20d508a8c_checkDecl(_98717_tc.ptr(), &((*((*((*(_99221_p))._field_Decl))._field_Kind))._field_Decl));
				};
			}
			_iter_next_211adc744:;
			++it;
			goto _iter_begin_211adc744;
		}
		_iter_end_211adc744:;
	};
	if ((!(_20d3a30b8_IsVoid((*(_98144_f)).ptr())))) {
		(*(_98517_ins))._field_Result=_20d508a8c_checkDecl(_98717_tc.ptr(), &((*((*((*((*(_98144_f))))._field_Result))._field_Kind))._field_Decl));
	};
	return _98517_ins;;
}



inline jule::Bool _20d442b91_checkConstraintsFn(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d3a5a49_FnIns>* _100443_f, jule::Ptr<_20d3510bb_Token>* _100459_et, jule::Ptr<_20d3a5a49_FnIns> _100475_exist) {
	jule::Ptr<_20d3db233_constraintChecker> _100517_cc = _20d43e2a8_constraintChecker(_self_);;
	(*(_100517_cc))._field_et=(*(_100459_et));
	(*(_100517_cc))._field_fi=(*(_100443_f));
	if ((_100475_exist != nullptr)) {
		{
			auto expr = &((*(_100475_exist))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_211ae389e:;
			if (it != expr_end) {
				jule::I64 _100918_i = it - expr->begin();
				jule::Ptr<_20d4dc8a6_InsGeneric> _100925_g = *it;
				{
					(*((*((*(_100443_f))))._field_Generics[_100918_i]))._field_Constraint=(*(_100925_g))._field_Constraint;
				}
				_iter_next_211ae389e:;
				++it;
				_100918_i++;
				goto _iter_begin_211ae389e;
			}
			_iter_end_211ae389e:;
		};
	} else {
		(*(_100517_cc))._field_uniq=true;
	};
	return _20d3dc168_check(_100517_cc);;
}



inline jule::Bool _20d443147_checkConstraintsStruct(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d39066b_StructIns>* _101847_s, jule::Ptr<_20d3510bb_Token>* _101867_et, jule::Ptr<_20d39066b_StructIns> _101883_exist) {
	jule::Ptr<_20d3db233_constraintChecker> _101917_cc = _20d43e2a8_constraintChecker(_self_);;
	(*(_101917_cc))._field_et=(*(_101867_et));
	(*(_101917_cc))._field_si=(*(_101847_s));
	if ((_101883_exist != nullptr)) {
		{
			auto expr = &((*(_101883_exist))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_211ae6ab1:;
			if (it != expr_end) {
				jule::I64 _102318_i = it - expr->begin();
				jule::Ptr<_20d4dc8a6_InsGeneric> _102325_g = *it;
				{
					(*((*((*(_101847_s))))._field_Generics[_102318_i]))._field_Constraint=(*(_102325_g))._field_Constraint;
				}
				_iter_next_211ae6ab1:;
				++it;
				_102318_i++;
				goto _iter_begin_211ae6ab1;
			}
			_iter_end_211ae6ab1:;
		};
	} else {
		(*(_101917_cc))._field_uniq=true;
	};
	return _20d3dc168_check(_101917_cc);;
}



inline jule::Bool _20d443543_fnEnvironment(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d3a5a49_FnIns>* _103538_f, jule::Fn<jule::Bool(jule::Ptr<_20d435de8_Sema>*,jule::Slice<jule::Ptr<_20d4dd49a_TypeAlias>>*)> _103549_algo) {
	jule::Ptr<_20d435de8_Sema> _103617_sema = (*((*((*(_103538_f))))._field_Decl))._field_sema;;
	jule::Ptr<_20d081e40_SymbolTable> _103717_old = (*((*((*((*(_103538_f))))._field_Decl))._field_sema))._field_file;;
	__JULE_DEFER({
		_20d438615_setCurrentFile((*((*((*(_103538_f))))._field_Decl))._field_sema.ptr(), _103717_old);
	});;
	jule::Ptr<_20d081e40_SymbolTable> _103917_file = _20d434b3e_findFile(&((*((*((*((*(_103538_f))))._field_Decl))._field_sema))._field_files), &((*((*((*((*(_103538_f))))._field_Decl))._field_Token))._field_File));;
	if ((_103917_file != nullptr)) {
		_20d438615_setCurrentFile((*((*((*(_103538_f))))._field_Decl))._field_sema.ptr(), _103917_file);
	};
	jule::I64 _104417_size = (*((*(_103538_f))))._field_Generics.len();;
	if ((((*((*(_103538_f))))._field_Decl != nullptr) && ((*((*((*(_103538_f))))._field_Decl))._field_Owner != nullptr))) {
		_104417_size+=(*((*((*((*(_103538_f))))._field_Decl))._field_Owner))._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_20d4dd49a_TypeAlias>> _104917_generics = jule::Slice<jule::Ptr<_20d4dd49a_TypeAlias>>::alloc(0LL, _104417_size);;
	_20d4347ba_appendGenericTypeAliases(&(_104917_generics), _103538_f);
	jule::Bool _105213_ok = _103549_algo(&(_103617_sema), &(_104917_generics));;
	if ((_103617_sema != _self_)) {
		((*(_self_))._field_errors).append((*(_103617_sema))._field_errors);;
		(*(_103617_sema))._field_errors=nullptr;
	};
	return _105213_ok;;
}



inline void _20d4437eb_checkFnParamKind(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d3a4a9d_ParamIns>* _106241_p) {
	(*((*((*(_106241_p))))._field_Kind))._field_Variadic=(*((*((*(_106241_p))))._field_Decl))._field_Variadic;
	if (((*((*((*(_106241_p))))._field_Decl))._field_Reference && (!(_20d50aa28_isValidForRef(&((*((*(_106241_p))))._field_Kind)))))) {
		_20d438a33_pushErr(_self_.ptr(), (*((*((*(_106241_p))))._field_Decl))._field_Token, jule::Str("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*((*(_106241_p))))._field_Kind.ptr()), &__jule_any_type4)}));
	};
}



inline jule::Bool _20d443b3c_reloadFnInsTypes(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d3a5a49_FnIns> _106940_f) {
	if ((_20d3a6ece_IsBuiltin(_106940_f.ptr()) || _20d3a7265_IsAnon(_106940_f.ptr()))) {
		return true;;
	};
	return _20d443543_fnEnvironment(_self_, &(_106940_f), jule::Fn<jule::Bool(jule::Ptr<_20d435de8_Sema>*,jule::Slice<jule::Ptr<_20d4dd49a_TypeAlias>>*)>([=](jule::Ptr<_20d435de8_Sema>* _107343_sema, jule::Slice<jule::Ptr<_20d4dd49a_TypeAlias>>* _107361_generics) mutable -> jule::Bool {
		jule::Bool _107421_ok = true;;
		{
			auto expr = &((*(_106940_f))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_211b05790:;
			if (it != expr_end) {
				jule::Ptr<_20d3a4a9d_ParamIns> _107525_p = *it;
				{
					if (_20d3a178c_IsSelf((*(_107525_p))._field_Decl.ptr())) {
						if (_20d3a1a23_IsRef((*(_107525_p))._field_Decl.ptr())) {
							(*(_107525_p))._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(jule::new_ptr<_20d4eab39_Sptr>(_20d4eab39_Sptr{._field_Elem=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>((*(_106940_f))._field_Owner, 0)})}), 21)});
						} else {
							(*(_107525_p))._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>((*(_106940_f))._field_Owner, 0)});
						};
					} else {
						(*(_107525_p))._field_Kind=_20d43eb5a_buildTypeWithGenerics((*(_107343_sema)), &((*((*((*(_107525_p))._field_Decl))._field_Kind))._field_Decl), (*(_107361_generics)), (*(_106940_f))._field_Refers);
						if (((*(_107525_p))._field_Kind != nullptr)) {
							_20d4437eb_checkFnParamKind(_self_, &(_107525_p));
						} else {
							_107421_ok=false;
						};
					};
				}
				_iter_next_211b05790:;
				++it;
				goto _iter_begin_211b05790;
			}
			_iter_end_211b05790:;
		};
		if ((!(_20d3a30b8_IsVoid((*(_106940_f))._field_Decl.ptr())))) {
			(*(_106940_f))._field_Result=_20d43eb5a_buildTypeWithGenerics((*(_107343_sema)), &((*((*((*((*(_106940_f))._field_Decl))._field_Result))._field_Kind))._field_Decl), (*(_107361_generics)), (*(_106940_f))._field_Refers);
			_107421_ok=(((*(_106940_f))._field_Result != nullptr) && _107421_ok);
		};
		return _107421_ok;;
	}));;
}



inline jule::Bool _20d4440e3_checkRefValidityForInitExpr(jule::Ptr<_20d435de8_Sema> _self_, jule::Bool _110547_leftMut, jule::Ptr<_20d087165_Data>* _110567_d, jule::Ptr<_20d3510bb_Token>* _110582_errorToken) {
	{
		auto &_match_expr{ (*((*(_110567_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_211b0bed3:;
			{
				goto _match_end_211b0c2be;
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_211b0cc5e:;
			{
				jule::Ptr<_20d398cd4_TraitSubIdentExprModel> _111021_model = (*((*(_110567_d))))._field_Model.cast_ptr<_20d398cd4_TraitSubIdentExprModel>(&__jule_any_type70);;
				if ((!(_20d433588_isValidModelForRef(&((*(_111021_model))._field_Expr))))) {
					_20d438a33_pushErr(_self_.ptr(), (*(_110582_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any((*((*(_111021_model))._field_Method))._field_Ident, &__jule_any_type4)}));
					return false;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_211b0ccc5:;
			{
				jule::Ptr<_20d399675_StructSubIdentExprModel> _111621_model = (*((*(_110567_d))))._field_Model.cast_ptr<_20d399675_StructSubIdentExprModel>(&__jule_any_type71);;
				if ((!(_20d433588_isValidModelForRef(&((*((*(_111621_model))._field_Expr))._field_Model))))) {
					_20d438a33_pushErr(_self_.ptr(), (*(_110582_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_111621_model))._field_Field))._field_Decl))._field_Ident, &__jule_any_type4)}));
					return false;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_211b0cd3b:;
			{
				jule::Ptr<_20d394ecd_UnaryExprModel> _112221_unary = (*((*(_110567_d))))._field_Model.cast_ptr<_20d394ecd_UnaryExprModel>(&__jule_any_type72);;
				if (((*((*(_112221_unary))._field_Op))._field_Id == static_cast<jule::U64>(62LLU))) {
					if ((!(_20d433588_isValidModelForRef(&((*((*(_110567_d))))._field_Model))))) {
						_20d438a33_pushErr(_self_.ptr(), (*(_110582_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(jule::Str("address from * &T", 17), &__jule_any_type4)}));
						return false;;
					};
					goto _match_end_211b0c2be;
				};
				goto _case_begin_211b0c324;
			}
		}
		else {
			_case_begin_211b0c324:;
			{
				_20d438a33_pushErr(_self_.ptr(), (*(_110582_errorToken)), jule::Str("references requires variable for assignment", 43), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_211b0c2be:;
	};
	if ((_110547_leftMut && (!((*((*(_110567_d))))._field_Mutable)))) {
		_20d438a33_pushErr(_self_.ptr(), (*(_110582_errorToken)), jule::Str("mutable reference cannot point to immutable data", 48), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _20d444434_isMutRiskyStruct(_20d435de8_Sema* _self_, jule::Ptr<_20d39066b_StructIns>* _114732_s) {
	{
		auto expr = &((*((*(_114732_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211b1457e:;
		if (it != expr_end) {
			jule::Ptr<_20d38eabb_FieldIns> *_114816_f = it;
			{
				if ((((*((*((*(_114816_f))))._field_Decl))._field_Mutable && _20d4e0b2e_Mutable((*((*(_114816_f))))._field_Kind.ptr())) && _20d439292_isAccessibleDefine(_self_, (*((*((*(_114816_f))))._field_Decl))._field_Public, (*((*((*(_114816_f))))._field_Decl))._field_Token))) {
					return true;;
				};
			}
			_iter_next_211b1457e:;
			++it;
			goto _iter_begin_211b1457e;
		}
		_iter_end_211b1457e:;
	};
	return false;;
}



inline jule::Bool _20d444a50_checkValidityForInitExpr(jule::Ptr<_20d435de8_Sema> _self_, jule::Bool _117444_leftMut, jule::Bool _117459_leftRef, jule::Ptr<_20d4de28c_TypeKind>* _117510_leftKind, jule::Ptr<_20d087165_Data>* _117536_d, jule::Ptr<_20d3510bb_Token>* _117551_errorToken) {
	if ((_117444_leftMut && (!((*((*(_117536_d))))._field_Mutable)))) {
		if (_20d4e0b2e_Mutable((*((*(_117536_d))))._field_Kind.ptr())) {
			_20d438a33_pushErr(_self_.ptr(), (*(_117551_errorToken)), jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*((*(_117536_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			return false;;
		};
		jule::Ptr<_20d39066b_StructIns> _118317_s = _20d4e3208_Struct((*((*(_117536_d))))._field_Kind.ptr());;
		if (((_118317_s != nullptr) && _20d444434_isMutRiskyStruct(_self_.ptr(), &(_118317_s)))) {
			_20d438a33_pushErr(_self_.ptr(), (*(_117551_errorToken)), jule::Str("struct @ cannot copied due to field which is stores mutable data", 64), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*((*(_117536_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			return false;;
		};
	};
	if (_117459_leftRef) {
		if ((!(_20d4440e3_checkRefValidityForInitExpr(_self_, _117444_leftMut, _117536_d, _117551_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_20d070b87_assignTypeChecker> _119417_atc = jule::new_ptr<_20d070b87_assignTypeChecker>(_20d070b87_assignTypeChecker{._field_s=_self_, ._field_d=(*(_117536_d)), ._field_errorToken=(*(_117551_errorToken))});;
	return _20d0713b3_checkValidity(_119417_atc.ptr());;
}



inline jule::Bool _20d444e4b_checkTypeAliasDeclKind(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d4dd49a_TypeAlias>* _120247_ta, jule::Trait<_20d50e06a_Lookup> _120267_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_20d081e40_SymbolTable> _120317_old = (*(_self_))._field_file;;
	__JULE_DEFER({
		_20d438615_setCurrentFile(_self_.ptr(), _120317_old);
	});;
	if (((*((*(_120247_ta))))._field_Token != nullptr)) {
		jule::Ptr<_20d081e40_SymbolTable> _120821_file = _20d434b3e_findFile(&((*(_self_))._field_files), &((*((*((*(_120247_ta))))._field_Token))._field_File));;
		if ((_120821_file != nullptr)) {
			_20d438615_setCurrentFile(_self_.ptr(), _120821_file);
		};
	};
	__jule_func_result=_20d43e022_checkTypeWithRefers(_self_, &((*((*(_120247_ta))))._field_Kind), _120267_l, nullptr, jule::new_ptr<_20d500402_referencer>(_20d500402_referencer{._field_ident=(*((*(_120247_ta))))._field_Ident, ._field_owner=jule::Any((*(_120247_ta)), &__jule_any_type67), ._field_refs=(&((*((*(_120247_ta))))._field_Refers))}));
	if (((__jule_func_result && (_20d4e2955_Arr((*((*((*(_120247_ta))))._field_Kind))._field_Kind.ptr()) != nullptr)) && (*(_20d4e2955_Arr((*((*((*(_120247_ta))))._field_Kind))._field_Kind.ptr())))._field_Auto)) {
		_20d438a33_pushErr(_self_.ptr(), (*((*((*((*(_120247_ta))))._field_Kind))._field_Decl))._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _20d4452ae_checkTypeAliasDecl(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d4dd49a_TypeAlias>* _122543_ta, jule::Trait<_20d50e06a_Lookup> _122563_l) {
	if (_20d353a2a_IsIgnoreIdent((*((*(_122543_ta))))._field_Ident)) {
		_20d438a33_pushErr(_self_.ptr(), (*((*(_122543_ta))))._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_20d444e4b_checkTypeAliasDeclKind(_self_, _122543_ta, _122563_l);
}



inline void _20d445567_checkTypeAliasDeclDup(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d4dd49a_TypeAlias>* _123346_ta) {
	if (_20d353a2a_IsIgnoreIdent((*((*(_123346_ta))))._field_Ident)) {
		_20d438a33_pushErr(_self_.ptr(), (*((*(_123346_ta))))._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_20d439748_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_123346_ta)))), &((*((*(_123346_ta))))._field_Ident), (*((*(_123346_ta))))._field_Binded)) {
		_20d438a33_pushErr(_self_.ptr(), (*((*(_123346_ta))))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_123346_ta))))._field_Ident, &__jule_any_type4)}));
		_20d438d96_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_20d444e4b_checkTypeAliasDeclKind(_self_, _123346_ta, jule::Trait<_20d50e06a_Lookup>(_self_, 3));
}



inline jule::Bool _20d4457ed_checkTypeAliasDecls(jule::Ptr<_20d435de8_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211b26dcc:;
		if (it != expr_end) {
			jule::Ptr<_20d4dd49a_TypeAlias> _124621_ta = *it;
			{
				_20d445567_checkTypeAliasDeclDup(_self_, &(_124621_ta));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_211b26dcc:;
			++it;
			goto _iter_begin_211b26dcc;
		}
		_iter_end_211b26dcc:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _211b555ae_checkEnumItemsDup(_20d435de8_Sema* _self_, jule::Slice<jule::Ptr<_20d3b7a6c_EnumItem>> _125739_items) {
	{
		auto expr = &(_125739_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211b5688a:;
		if (it != expr_end) {
			jule::Ptr<_20d3b7a6c_EnumItem> *_125816_item = it;
			{
				if ((*((*(_125816_item))))._field_Ident.empty()) {
					goto _iter_next_211b5688a;
				} else if (_20d353a2a_IsIgnoreIdent((*((*(_125816_item))))._field_Ident)) {
					_20d438a33_pushErr(_self_, (*((*(_125816_item))))._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_125739_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_211b57b88:;
						if (it != expr_end) {
							jule::Ptr<_20d3b7a6c_EnumItem> *_126424_citem = it;
							{
								if (((*(_125816_item)) == (*(_126424_citem)))) {
									goto _iter_end_211b57b88;
								} else if (((*((*(_125816_item))))._field_Ident == (*((*(_126424_citem))))._field_Ident)) {
									_20d438a33_pushErr(_self_, (*((*(_125816_item))))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_125816_item))))._field_Ident, &__jule_any_type4)}));
									_20d438d96_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_211b57b88;
								};
							}
							_iter_next_211b57b88:;
							++it;
							goto _iter_begin_211b57b88;
						}
						_iter_end_211b57b88:;
					};
				};
			}
			_iter_next_211b5688a:;
			++it;
			goto _iter_begin_211b5688a;
		}
		_iter_end_211b5688a:;
	};
}

inline void _211b626a9_checkEnumItemsDup(_20d435de8_Sema* _self_, jule::Slice<jule::Ptr<_20d3b971c_TypeEnumItem>> _125739_items) {
	{
		auto expr = &(_125739_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211b63941:;
		if (it != expr_end) {
			jule::Ptr<_20d3b971c_TypeEnumItem> *_125816_item = it;
			{
				if ((*((*(_125816_item))))._field_Ident.empty()) {
					goto _iter_next_211b63941;
				} else if (_20d353a2a_IsIgnoreIdent((*((*(_125816_item))))._field_Ident)) {
					_20d438a33_pushErr(_self_, (*((*(_125816_item))))._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_125739_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_211b64c3e:;
						if (it != expr_end) {
							jule::Ptr<_20d3b971c_TypeEnumItem> *_126424_citem = it;
							{
								if (((*(_125816_item)) == (*(_126424_citem)))) {
									goto _iter_end_211b64c3e;
								} else if (((*((*(_125816_item))))._field_Ident == (*((*(_126424_citem))))._field_Ident)) {
									_20d438a33_pushErr(_self_, (*((*(_125816_item))))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_125816_item))))._field_Ident, &__jule_any_type4)}));
									_20d438d96_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_211b64c3e;
								};
							}
							_iter_next_211b64c3e:;
							++it;
							goto _iter_begin_211b64c3e;
						}
						_iter_end_211b64c3e:;
					};
				};
			}
			_iter_next_211b63941:;
			++it;
			goto _iter_begin_211b63941;
		}
		_iter_end_211b63941:;
	};
}



inline void _20d445d5e_checkEnumItemsStr(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d3b85d9_Enum>* _127742_e) {
	jule::Ptr<_20d088d59_Eval> _127817_eval = _20d440ed0_eval(_self_, jule::Trait<_20d50e06a_Lookup>(_self_, 3));;
	{
		auto expr = &((*((*(_127742_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211b28d79:;
		if (it != expr_end) {
			jule::Ptr<_20d3b7a6c_EnumItem> _127921_item = *it;
			{
				if (_20d3b7e24_AutoExpr(_127921_item.ptr())) {
					(*(_127921_item))._field_Value=jule::new_ptr<_20d0882a9_Value>(_20d0882a9_Value{._field_Data=jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Constant=static__20b066388_NewStr((*(_127921_item))._field_Ident)})});
					(*((*((*(_127921_item))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*(_127921_item))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
				} else {
					jule::Ptr<_20d087165_Data> _128825_d = _20d4cdc93_evalExpr(_127817_eval, (*((*(_127921_item))._field_Value))._field_Expr);;
					if ((_128825_d == nullptr)) {
						goto _iter_next_211b28d79;
					};
					if ((!(_20d087a39_IsConst(_128825_d.ptr())))) {
						_20d438a33_pushErr(_self_.ptr(), (*((*((*(_127921_item))._field_Value))._field_Expr))._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
					};
					_20d441541_checkAssignType(_self_, false, &((*((*((*(_127742_e))))._field_Kind))._field_Kind), &(_128825_d), (*(_127921_item))._field_Token);
					(*((*(_127921_item))._field_Value))._field_Data=_128825_d;
				};
			}
			_iter_next_211b28d79:;
			++it;
			goto _iter_begin_211b28d79;
		}
		_iter_end_211b28d79:;
	};
}



inline void _211b34813_checkEnumItemInt(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d088d59_Eval>* _130346_eval, jule::Ptr<_20d3b85d9_Enum>* _130364_e, jule::Ptr<_20d4e710d_Prim>* _130375_prim, jule::Ptr<_20d3b7a6c_EnumItem>* _130393_item, jule::U64* _1303115_n) {
	if (_20d3b7e24_AutoExpr((*(_130393_item)).ptr())) {
		(*((*(_130393_item))))._field_Value=jule::new_ptr<_20d0882a9_Value>(_20d0882a9_Value{._field_Data=jule::new_ptr<_20d087165_Data>()});
		{
			
{
				_case_begin_211b3763a:;
				{
					(*((*((*((*(_130393_item))))._field_Value))._field_Data))._field_Constant=static__20b065d05_NewU64((*(_1303115_n)));
				}
			}
			_match_end_211b3755d:;
		};
		(*((*((*((*(_130393_item))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_130393_item))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_20d087165_Data> _131821_d = _20d4cdc93_evalExpr((*(_130346_eval)), (*((*((*(_130393_item))))._field_Value))._field_Expr);;
		if ((_131821_d == nullptr)) {
			return;;
		};
		if ((!(_20d087a39_IsConst(_131821_d.ptr())))) {
			_20d438a33_pushErr(_self_.ptr(), (*((*((*((*(_130393_item))))._field_Value))._field_Expr))._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_20d441541_checkAssignType(_self_, false, &((*((*((*(_130364_e))))._field_Kind))._field_Kind), &(_131821_d), (*((*(_130393_item))))._field_Token);
		(*((*((*(_130393_item))))._field_Value))._field_Data=_131821_d;
		{
			
{
				_case_begin_211b3c453:;
				{
					(*(_1303115_n))=static_cast<jule::U64>(_20b067257_ReadU64((*((*((*((*(_130393_item))))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_211b3c365:;
		};
	};
}

inline void _211b45538_checkEnumItemInt(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d088d59_Eval>* _130346_eval, jule::Ptr<_20d3b85d9_Enum>* _130364_e, jule::Ptr<_20d4e710d_Prim>* _130375_prim, jule::Ptr<_20d3b7a6c_EnumItem>* _130393_item, jule::I64* _1303115_n) {
	if (_20d3b7e24_AutoExpr((*(_130393_item)).ptr())) {
		(*((*(_130393_item))))._field_Value=jule::new_ptr<_20d0882a9_Value>(_20d0882a9_Value{._field_Data=jule::new_ptr<_20d087165_Data>()});
		{
			
{
				_case_begin_211b48294:;
				{
					(*((*((*((*(_130393_item))))._field_Value))._field_Data))._field_Constant=static__20b065a3b_NewI64((*(_1303115_n)));
				}
			}
			_match_end_211b4823e:;
		};
		(*((*((*((*(_130393_item))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_130393_item))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_20d087165_Data> _131821_d = _20d4cdc93_evalExpr((*(_130346_eval)), (*((*((*(_130393_item))))._field_Value))._field_Expr);;
		if ((_131821_d == nullptr)) {
			return;;
		};
		if ((!(_20d087a39_IsConst(_131821_d.ptr())))) {
			_20d438a33_pushErr(_self_.ptr(), (*((*((*((*(_130393_item))))._field_Value))._field_Expr))._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_20d441541_checkAssignType(_self_, false, &((*((*((*(_130364_e))))._field_Kind))._field_Kind), &(_131821_d), (*((*(_130393_item))))._field_Token);
		(*((*((*(_130393_item))))._field_Value))._field_Data=_131821_d;
		{
			
{
				_case_begin_211b4d244:;
				{
					(*(_1303115_n))=static_cast<jule::I64>(_20b066ec1_ReadI64((*((*((*((*(_130393_item))))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_211b4d1cd:;
		};
	};
}



inline void _211b309da_checkEnumItemsInt1(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d4e710d_Prim>* _133844_prim, jule::Ptr<_20d3b85d9_Enum>* _133862_e) {
	jule::U64 _133917_max = 0LLU;;
	{
		
{
			_case_begin_211b32888:;
			{
				_133917_max=static_cast<jule::U64>(_20b05dbee_MaxU(_20d4e744e_Str((*(_133844_prim)).ptr())));
			}
		}
		_match_end_211b32679:;
	};
	jule::Ptr<_20d088d59_Eval> _134917_eval = _20d440ed0_eval(_self_, jule::Trait<_20d50e06a_Lookup>(_self_, 3));;
	jule::U64 _135017_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_20d3b7a6c_EnumItem> _135117_first = (*((*(_133862_e))))._field_Items[0LL];;
	_211b34813_checkEnumItemInt(_self_, &(_134917_eval), _133862_e, _133844_prim, &(_135117_first), &(_135017_n));
	if (((*((*(_135117_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_211b3ca5d:;
				{
					_135017_n=static_cast<jule::U64>(_20b068027_AsU64((*((*((*(_135117_first))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_211b35acd:;
		};
	};
	{
		auto expr = (*((*(_133862_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_211b39252:;
		if (it != expr_end) {
			jule::Ptr<_20d3b7a6c_EnumItem> _136321_item = *it;
			{
				if (((_20d3b7e24_AutoExpr(_136321_item.ptr()) && (_135017_n > 0LLU)) && ((_133917_max - _135017_n) <= 0LLU))) {
					_20d438a33_pushErr(_self_.ptr(), (*(_136321_item))._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_211b39252;
				};
				(_135017_n)++;
				_211b34813_checkEnumItemInt(_self_, &(_134917_eval), _133862_e, _133844_prim, &(_136321_item), &(_135017_n));
			}
			_iter_next_211b39252:;
			++it;
			goto _iter_begin_211b39252;
		}
		_iter_end_211b39252:;
	};
}

inline void _211b3e169_checkEnumItemsInt1(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d4e710d_Prim>* _133844_prim, jule::Ptr<_20d3b85d9_Enum>* _133862_e) {
	jule::I64 _133917_max = 0LL;;
	{
		
{
			_case_begin_211b4339e:;
			{
				_133917_max=static_cast<jule::I64>(_20b05d935_MaxI(_20d4e744e_Str((*(_133844_prim)).ptr())));
			}
		}
		_match_end_211b43217:;
	};
	jule::Ptr<_20d088d59_Eval> _134917_eval = _20d440ed0_eval(_self_, jule::Trait<_20d50e06a_Lookup>(_self_, 3));;
	jule::I64 _135017_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_20d3b7a6c_EnumItem> _135117_first = (*((*(_133862_e))))._field_Items[0LL];;
	_211b45538_checkEnumItemInt(_self_, &(_134917_eval), _133862_e, _133844_prim, &(_135117_first), &(_135017_n));
	if (((*((*(_135117_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_211b44449:;
				{
					_135017_n=static_cast<jule::I64>(_20b067c91_AsI64((*((*((*(_135117_first))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_211b44ba8:;
		};
	};
	{
		auto expr = (*((*(_133862_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_211b4ede4:;
		if (it != expr_end) {
			jule::Ptr<_20d3b7a6c_EnumItem> _136321_item = *it;
			{
				if (((_20d3b7e24_AutoExpr(_136321_item.ptr()) && (_135017_n > 0LL)) && ((_133917_max - _135017_n) <= 0LL))) {
					_20d438a33_pushErr(_self_.ptr(), (*(_136321_item))._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_211b4ede4;
				};
				(_135017_n)++;
				_211b45538_checkEnumItemInt(_self_, &(_134917_eval), _133862_e, _133844_prim, &(_136321_item), &(_135017_n));
			}
			_iter_next_211b4ede4:;
			++it;
			goto _iter_begin_211b4ede4;
		}
		_iter_end_211b4ede4:;
	};
}



inline void _20d446a0d_checkEnumItemsInt(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d3b85d9_Enum>* _137342_e) {
	jule::Ptr<_20d4e710d_Prim> _137413_prim = _20d4e1b85_Prim((*((*((*(_137342_e))))._field_Kind))._field_Kind.ptr());;
	{
		
		if (_20b064441_IsSigInt((*(_137413_prim))._field_Kind)) {
			_case_begin_211b40e3a:;
			{
				_211b3e169_checkEnumItemsInt1(_self_, &(_137413_prim), _137342_e);
			}
		}
		else {
			_case_begin_211b30226:;
			{
				_211b309da_checkEnumItemsInt1(_self_, &(_137413_prim), _137342_e);
			}
		}
		_match_end_211b301b0:;
	};
}



inline void _20d446cb6_checkEnumDecl(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d3b85d9_Enum>* _138338_e) {
	if (_20d353a2a_IsIgnoreIdent((*((*(_138338_e))))._field_Ident)) {
		_20d438a33_pushErr(_self_.ptr(), (*((*(_138338_e))))._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_20d439748_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_138338_e)))), &((*((*(_138338_e))))._field_Ident), false)) {
		_20d438a33_pushErr(_self_.ptr(), (*((*(_138338_e))))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_138338_e))))._field_Ident, &__jule_any_type4)}));
		_20d438d96_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_138338_e))))._field_Items.len() == 0LL)) {
		_20d438a33_pushErr(_self_.ptr(), (*((*(_138338_e))))._field_Token, jule::Str("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*((*(_138338_e))))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	_211b555ae_checkEnumItemsDup(_self_.ptr(), (*((*(_138338_e))))._field_Items);
	if (((*((*(_138338_e))))._field_Kind != nullptr)) {
		if ((!(_20d43e6a4_checkType(_self_, &((*((*(_138338_e))))._field_Kind), jule::Trait<_20d50e06a_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		(*((*(_138338_e))))._field_Kind=(*(_20d565bd7_findBuiltinTypeAlias(jule::Str("int", 3))))._field_Kind;
	};
	jule::Ptr<_20d4e710d_Prim> _140717_t = _20d4e1b85_Prim((*((*((*(_138338_e))))._field_Kind))._field_Kind.ptr());;
	if ((_140717_t == nullptr)) {
		_20d438a33_pushErr(_self_.ptr(), (*((*(_138338_e))))._field_Token, jule::Str("invalid type source", 19), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_20d4ea595_IsStr(_140717_t.ptr())) {
			_case_begin_211b5c2db:;
			{
				_20d445d5e_checkEnumItemsStr(_self_, _138338_e);
			}
		}
		else if (_20b064a18_IsInt(_20d4e744e_Str(_140717_t.ptr()))) {
			_case_begin_211b5bede:;
			{
				_20d446a0d_checkEnumItemsInt(_self_, _138338_e);
			}
		}
		else {
			_case_begin_211b5be78:;
			{
				_20d438a33_pushErr(_self_.ptr(), (*((*(_138338_e))))._field_Token, jule::Str("invalid type source", 19), jule::Slice<jule::Any>());
			}
		}
		_match_end_211b5b5b5:;
	};
}



inline void _20d44706e_checkTypeEnumDecl(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d3b9ce4_TypeEnum>* _142442_e) {
	if (_20d353a2a_IsIgnoreIdent((*((*(_142442_e))))._field_Ident)) {
		_20d438a33_pushErr(_self_.ptr(), (*((*(_142442_e))))._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_20d439748_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_142442_e)))), &((*((*(_142442_e))))._field_Ident), false)) {
		_20d438a33_pushErr(_self_.ptr(), (*((*(_142442_e))))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_142442_e))))._field_Ident, &__jule_any_type4)}));
		_20d438d96_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_142442_e))))._field_Items.len() == 0LL)) {
		_20d438a33_pushErr(_self_.ptr(), (*((*(_142442_e))))._field_Token, jule::Str("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*((*(_142442_e))))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	_211b626a9_checkEnumItemsDup(_self_.ptr(), (*((*(_142442_e))))._field_Items);
	{
		auto expr = &((*((*(_142442_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211b5e057:;
		if (it != expr_end) {
			jule::Ptr<_20d3b971c_TypeEnumItem> _143821_item = *it;
			{
				if (((*(_143821_item))._field_Kind == nullptr)) {
					_20d438a33_pushErr(_self_.ptr(), (*(_143821_item))._field_Token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
					goto _iter_next_211b5e057;
				};
				jule::Bool _144317_ok = _20d43e6a4_checkType(_self_, &((*(_143821_item))._field_Kind), jule::Trait<_20d50e06a_Lookup>(_self_, 3));;
				if ((!(_144317_ok))) {
					goto _iter_next_211b5e057;
				};
				jule::Ptr<_20d4e710d_Prim> _144717_p = _20d4e1b85_Prim((*((*(_143821_item))._field_Kind))._field_Kind.ptr());;
				if (((_144717_p != nullptr) && _20d4ea82b_IsAny(_144717_p.ptr()))) {
					_20d438a33_pushErr(_self_.ptr(), (*(_143821_item))._field_Token, jule::Str("the <any> type is not allowed for type-enum declarations", 56), jule::Slice<jule::Any>());
				};
			}
			_iter_next_211b5e057:;
			++it;
			goto _iter_begin_211b5e057;
		}
		_iter_end_211b5e057:;
	};
	if (((*((*(_142442_e))))._field_Items.len() == 1LL)) {
		jule::Ptr<_20d3b971c_TypeEnumItem> _145321_item = (*((*(_142442_e))))._field_Items[0LL];;
		_20d4de28c_TypeKind _145417_tk = _20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>((*(_142442_e)), 4)};;
		if ((((*((*(_145321_item))._field_Kind))._field_Kind != nullptr) && _20d4de996_Equal((*((*(_145321_item))._field_Kind))._field_Kind, ((jule::Ptr<_20d4de28c_TypeKind>)((&(_145417_tk))))))) {
			_20d438a33_pushErr(_self_.ptr(), (*(_145321_item))._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_20d3ba135_Str((*(_142442_e)).ptr()), &__jule_any_type4)}));
		};
	};
}



inline jule::Bool _20d447305_checkEnumDecls(jule::Ptr<_20d435de8_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211b6d297:;
		if (it != expr_end) {
			jule::Ptr<_20d3b85d9_Enum> _146521_e = *it;
			{
				_20d446cb6_checkEnumDecl(_self_, &(_146521_e));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_211b6d297:;
			++it;
			goto _iter_begin_211b6d297;
		}
		_iter_end_211b6d297:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _20d44758b_checkTypeEnumDecls(jule::Ptr<_20d435de8_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211b6dc8c:;
		if (it != expr_end) {
			jule::Ptr<_20d3b9ce4_TypeEnum> _147721_e = *it;
			{
				_20d44706e_checkTypeEnumDecl(_self_, &(_147721_e));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_211b6dc8c:;
			++it;
			goto _iter_begin_211b6dc8c;
		}
		_iter_end_211b6dc8c:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _20d4478cc_checkDeclGenerics(_20d435de8_Sema* _self_, jule::Slice<jule::Ptr<_20d378ba4_GenericDecl>>* _148737_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _148737_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211b713bb:;
		if (it != expr_end) {
			jule::I64 _148913_i = it - expr->begin();
			jule::Ptr<_20d378ba4_GenericDecl> *_148916_g = it;
			{
				if (_20d353a2a_IsIgnoreIdent((*((*(_148916_g))))._field_Ident)) {
					_20d438a33_pushErr(_self_, (*((*(_148916_g))))._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_211b713bb;
				};
				_julec_label_211b72a60:;
				{
					auto expr = _148737_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_211b72c5d:;
					if (it != expr_end) {
						jule::I64 _149817_j = it - expr->begin();
						jule::Ptr<_20d378ba4_GenericDecl> *_149820_ct = it;
						{
							{
								
								if ((_149817_j >= _148913_i)) {
									_case_begin_211b73896:;
									{
										goto _iter_end_211b72c5d;
									}
								}
								else if (((*((*(_148916_g))))._field_Ident == (*((*(_149820_ct))))._field_Ident)) {
									_case_begin_211b7391d:;
									{
										_20d438a33_pushErr(_self_, (*((*(_148916_g))))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_148916_g))))._field_Ident, &__jule_any_type4)}));
										_20d438d96_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_211b72c5d;
									}
								}
								_match_end_211b73797:;
							};
						}
						_iter_next_211b72c5d:;
						++it;
						_149817_j++;
						goto _iter_begin_211b72c5d;
					}
					_iter_end_211b72c5d:;
				};
			}
			_iter_next_211b713bb:;
			++it;
			_148913_i++;
			goto _iter_begin_211b713bb;
		}
		_iter_end_211b713bb:;
	};
	return __jule_func_result;;
}



inline jule::Bool _20d447c1d_checkFnDeclParamsDup(_20d435de8_Sema* _self_, jule::Ptr<_20d3a2b45_Fn>* _151440_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_211b745de:;
	{
		auto expr = &((*((*(_151440_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211b75c1c:;
		if (it != expr_end) {
			jule::I64 _151713_i = it - expr->begin();
			jule::Ptr<_20d3a1171_Param> *_151716_p = it;
			{
				{
					auto expr = &((*((*(_151440_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_211b75bb7:;
					if (it != expr_end) {
						jule::Ptr<_20d378ba4_GenericDecl> *_151920_g = it;
						{
							if (((*((*(_151716_p))))._field_Ident == (*((*(_151920_g))))._field_Ident)) {
								__jule_func_result=false;
								_20d438a33_pushErr(_self_, (*((*(_151716_p))))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_151716_p))))._field_Ident, &__jule_any_type4)}));
								_20d438d96_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								goto _iter_next_211b75c1c;
							};
						}
						_iter_next_211b75bb7:;
						++it;
						goto _iter_begin_211b75bb7;
					}
					_iter_end_211b75bb7:;
				};
				_julec_label_211b76844:;
				{
					auto expr = &((*((*(_151440_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_211b774c1:;
					if (it != expr_end) {
						jule::I64 _152917_j = it - expr->begin();
						jule::Ptr<_20d3a1171_Param> *_152920_jp = it;
						{
							{
								
								if ((_152917_j >= _151713_i)) {
									_case_begin_211b79319:;
									{
										goto _iter_end_211b774c1;
									}
								}
								else if (_20d353a2a_IsIgnoreIdent((*((*(_151716_p))))._field_Ident) || _20d353a2a_IsIgnoreIdent((*((*(_152920_jp))))._field_Ident) || _20d353ce4_IsAnonIdent((*((*(_151716_p))))._field_Ident) || _20d353ce4_IsAnonIdent((*((*(_152920_jp))))._field_Ident)) {
									_case_begin_211b79391:;
									{
										goto _iter_end_211b774c1;
									}
								}
								else if (((*((*(_151716_p))))._field_Ident == (*((*(_152920_jp))))._field_Ident)) {
									_case_begin_211b79418:;
									{
										__jule_func_result=false;
										_20d438a33_pushErr(_self_, (*((*(_151716_p))))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_151716_p))))._field_Ident, &__jule_any_type4)}));
										_20d438d96_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_next_211b75c1c;
									}
								}
								_match_end_211b79209:;
							};
						}
						_iter_next_211b774c1:;
						++it;
						_152917_j++;
						goto _iter_begin_211b774c1;
					}
					_iter_end_211b774c1:;
				};
			}
			_iter_next_211b75c1c:;
			++it;
			_151713_i++;
			goto _iter_begin_211b75c1c;
		}
		_iter_end_211b75c1c:;
	};
	return __jule_func_result;;
}



inline jule::Bool _20d44805e_checkFnDeclResultDup(_20d435de8_Sema* _self_, jule::Ptr<_20d3a2b45_Fn>* _155140_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_20d3a30b8_IsVoid((*(_155140_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*((*((*(_155140_f))))._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211b7c790:;
		if (it != expr_end) {
			jule::I64 _155813_i = it - expr->begin();
			jule::Ptr<_20d3510bb_Token> *_155816_v = it;
			{
				if ((_20d353a2a_IsIgnoreIdent((*((*(_155816_v))))._field_Kind) || _20d353ce4_IsAnonIdent((*((*(_155816_v))))._field_Kind))) {
					goto _iter_next_211b7c790;
				};
				{
					auto expr = &((*((*(_155140_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_211b7d928:;
					if (it != expr_end) {
						jule::Ptr<_20d378ba4_GenericDecl> *_156320_g = it;
						{
							if (((*((*(_155816_v))))._field_Kind == (*((*(_156320_g))))._field_Ident)) {
								goto _julec_label_211b80078;
							};
						}
						_iter_next_211b7d928:;
						++it;
						goto _iter_begin_211b7d928;
					}
					_iter_end_211b7d928:;
				};
				{
					auto expr = &((*((*(_155140_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_211b803db:;
					if (it != expr_end) {
						jule::Ptr<_20d3a1171_Param> *_156920_p = it;
						{
							if (((*((*(_155816_v))))._field_Kind == (*((*(_156920_p))))._field_Ident)) {
								goto _julec_label_211b80078;
							};
						}
						_iter_next_211b803db:;
						++it;
						goto _iter_begin_211b803db;
					}
					_iter_end_211b803db:;
				};
				_julec_label_211b81640:;
				{
					auto expr = &((*((*((*(_155140_f))))._field_Result))._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_211b81563:;
					if (it != expr_end) {
						jule::I64 _157717_j = it - expr->begin();
						jule::Ptr<_20d3510bb_Token> *_157720_jv = it;
						{
							{
								
								if ((_157717_j >= _155813_i)) {
									_case_begin_211b82b6e:;
									{
										goto _iter_end_211b81563;
									}
								}
								else if (((*((*(_157720_jv))))._field_Kind == (*((*(_155816_v))))._field_Kind)) {
									_case_begin_211b82be6:;
									{
										goto _julec_label_211b80078;
									}
								}
								_match_end_211b82a5e:;
							};
						}
						_iter_next_211b81563:;
						++it;
						_157717_j++;
						goto _iter_begin_211b81563;
					}
					_iter_end_211b81563:;
				};
				goto _iter_next_211b7c790;
				_julec_label_211b80078:;
				_20d438a33_pushErr(_self_, (*(_155816_v)), jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_155816_v))))._field_Kind, &__jule_any_type4)}));
				_20d438d96_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_211b7c790:;
			++it;
			_155813_i++;
			goto _iter_begin_211b7c790;
		}
		_iter_end_211b7c790:;
	};
	return __jule_func_result;;
}



inline jule::Bool _20d4483a0_checkFnVariadicParam(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d3a2b45_Fn>* _159645_f) {
	if (((*((*(_159645_f))))._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_20d3a1171_Param> _160017_param = (*((*(_159645_f))))._field_Params[((*((*(_159645_f))))._field_Params.len() - 1LL)];;
	if (((*(_160017_param))._field_Variadic && (*(_160017_param))._field_Reference)) {
		_20d438a33_pushErr(_self_.ptr(), (*(_160017_param))._field_Token, jule::Str("variadic storage cannot be reference", 36), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _20d448658_checkFnDeclPrototype(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d3a2b45_Fn>* _160945_f) {
	if (((*((*(_160945_f))))._field_Exceptional && (*((*(_160945_f))))._field_Binded)) {
		_20d438a33_pushErr(_self_.ptr(), (*((*(_160945_f))))._field_Token, jule::Str("binded defines cannot be exceptional", 36), jule::Slice<jule::Any>());
		return;;
	};
	if ((*((*(_160945_f))))._field_Exceptional) {
		if (_20d3a35d5_IsEntryPoint((*(_160945_f)).ptr())) {
			_20d438a33_pushErr(_self_.ptr(), (*((*(_160945_f))))._field_Token, jule::Str("entry point cannot be exceptional", 33), jule::Slice<jule::Any>());
		} else if (_20d3a386b_IsInit((*(_160945_f)).ptr())) {
			_20d438a33_pushErr(_self_.ptr(), (*((*(_160945_f))))._field_Token, jule::Str("initializer function cannot be exceptional", 42), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_20d4478cc_checkDeclGenerics(_self_.ptr(), &((*((*(_160945_f))))._field_Generics))))) {
			_case_begin_211b8a13d:;
		}
		else if ((!(_20d447c1d_checkFnDeclParamsDup(_self_.ptr(), _160945_f)))) {
			_case_begin_211b8a1b5:;
		}
		else if ((!(_20d44805e_checkFnDeclResultDup(_self_.ptr(), _160945_f)))) {
			_case_begin_211b8a23c:;
		}
		else if ((!(_20d4483a0_checkFnVariadicParam(_self_, _160945_f)))) {
			_case_begin_211b8a2b4:;
		}
		_match_end_211b887ac:;
	};
}



inline jule::Bool _20d448b0e_catchTraitInheritCycle(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d3b5dde_Trait> _163142_t1, jule::Ptr<_20d3b5dde_Trait> _163158_t2, _2240a0ad5_StrBuilder* _163175_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_163158_t2))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211b8c55d:;
		if (it != expr_end) {
			jule::Ptr<_20d4e6706_TypeSymbol> _163321_i = *it;
			{
				if (((*(_163321_i))._field_Kind == nullptr)) {
					goto _iter_next_211b8c55d;
				};
				jule::Ptr<_20d3b5dde_Trait> _163721_t3 = _20d4e348e_Trait((*(_163321_i))._field_Kind.ptr());;
				if ((_163142_t1 == _163721_t3)) {
					_20d44d88e_pushCycleError(_self_.ptr(), &((*(_163158_t2))._field_Ident), &((*(_163721_t3))._field_Ident), _163175_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_20d448b0e_catchTraitInheritCycle(_self_, _163142_t1, _163721_t3, _163175_message)))) {
					_20d44d88e_pushCycleError(_self_.ptr(), &((*(_163158_t2))._field_Ident), &((*(_163721_t3))._field_Ident), _163175_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_211b8c55d:;
			++it;
			goto _iter_begin_211b8c55d;
		}
		_iter_end_211b8c55d:;
	};
	return __jule_func_result;;
}



inline jule::Bool _20d448e50__checkTraitDeclInherits(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d3b5dde_Trait>* _165048_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_165048_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211b90d36:;
		if (it != expr_end) {
			jule::I64 _165214_i = it - expr->begin();
			jule::Ptr<_20d4e6706_TypeSymbol> _165221_it = *it;
			{
				if ((!(_20d43e6a4_checkType(_self_, &(_165221_it), jule::Trait<_20d50e06a_Lookup>(_self_, 3))))) {
					__jule_func_result=false;
					goto _iter_next_211b90d36;
				};
				jule::Ptr<_20d3b5dde_Trait> _165721_t2 = _20d4e348e_Trait((*(_165221_it))._field_Kind.ptr());;
				if ((_165721_t2 == nullptr)) {
					_20d438a33_pushErr(_self_.ptr(), (*((*(_165221_it))._field_Decl))._field_Token, jule::Str("trait @ cannot implement @, type should be trait", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_165048_t))))._field_Ident, &__jule_any_type4),jule::Any(_20d4de655_Str((*(_165221_it))._field_Kind.ptr()), &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_211b90d36;
				};
				{
					auto expr = &((*((*(_165048_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_211b92d9e:;
					if (it != expr_end) {
						jule::I64 _166317_j = it - expr->begin();
						jule::Ptr<_20d4e6706_TypeSymbol> _166320_it2 = *it;
						{
							if ((_166317_j >= _165214_i)) {
								goto _iter_end_211b92d9e;
							};
							if ((((*(_166320_it2))._field_Kind != nullptr) && _20d4de996_Equal((*(_165221_it))._field_Kind, (*(_166320_it2))._field_Kind))) {
								_20d438a33_pushErr(_self_.ptr(), (*((*(_165221_it))._field_Decl))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_165721_t2))._field_Ident, &__jule_any_type4)}));
								__jule_func_result=false;
								goto _iter_end_211b92d9e;
							};
						}
						_iter_next_211b92d9e:;
						++it;
						_166317_j++;
						goto _iter_begin_211b92d9e;
					}
					_iter_end_211b92d9e:;
				};
				if (((*(_165048_t)) == _165721_t2)) {
					_20d438a33_pushErr(_self_.ptr(), (*((*(_165221_it))._field_Decl))._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_165048_t))))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
				} else {
					_2240a0ad5_StrBuilder _167725_message = static__2240a0e04_New(64LL);;
					__jule_func_result=(__jule_func_result && _20d448b0e_catchTraitInheritCycle(_self_, (*(_165048_t)), _165721_t2, &(_167725_message)));
					if ((_2240aa628_Len(&_167725_message) > 0LL)) {
						jule::Str _168029_errMsg = _2240aa194_Str(&_167725_message);;
						_2240aa392_Clear(&_167725_message);
						_20d44d88e_pushCycleError(_self_.ptr(), &((*((*(_165048_t))))._field_Ident), &((*(_165721_t2))._field_Ident), &(_167725_message));
						_168029_errMsg+=_2240aa194_Str(&_167725_message);
						_20d438a33_pushErr(_self_.ptr(), (*((*(_165221_it))._field_Decl))._field_Token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_168029_errMsg, &__jule_any_type4)}));
					};
				};
			}
			_iter_next_211b90d36:;
			++it;
			_165214_i++;
			goto _iter_begin_211b90d36;
		}
		_iter_end_211b90d36:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _20d449208_checkTraitDeclInherits(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d3b5dde_Trait>* _169147_t) {
	{
		auto expr = &((*((*(_169147_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211b97bea:;
		if (it != expr_end) {
			jule::I64 _169214_i = it - expr->begin();
			jule::Ptr<_20d4e6706_TypeSymbol> _169221_it = *it;
			{
				jule::Ptr<_20d3b5dde_Trait> _169321_t1 = _20d4e348e_Trait((*(_169221_it))._field_Kind.ptr());;
				{
					auto expr = &((*((*(_169147_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_211b9c0a6:;
					if (it != expr_end) {
						jule::I64 _169418_j = it - expr->begin();
						jule::Ptr<_20d4e6706_TypeSymbol> _169425_it2 = *it;
						{
							if ((_169418_j == _169214_i)) {
								goto _iter_next_211b9c0a6;
							};
							jule::Ptr<_20d3b5dde_Trait> _169825_t2 = _20d4e348e_Trait((*(_169425_it2))._field_Kind.ptr());;
							{
								auto expr = &((*(_169321_t1))._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_211b9d728:;
								if (it != expr_end) {
									jule::Ptr<_20d3a2b45_Fn> _169929_t1m = *it;
									{
										jule::Ptr<_20d3a2b45_Fn> _170029_t2m = _20d3b6a8d_FindMethod(_169825_t2.ptr(), (*(_169929_t1m))._field_Ident);;
										if ((_170029_t2m == nullptr)) {
											goto _iter_next_211b9d728;
										};
										jule::Ptr<_20d3a5a49_FnIns> _170425_t1f = _20d4426da_getTraitCheckFnKind(_self_, &(_169929_t1m));;
										jule::Ptr<_20d3a5a49_FnIns> _170525_t2f = _20d4426da_getTraitCheckFnKind(_self_, &(_170029_t2m));;
										if ((!(_20d3a69b2_equalTrait(_170425_t1f, &(_170525_t2f))))) {
											_20d438a33_pushErr(_self_.ptr(), (*((*(_169221_it))._field_Decl))._field_Token, jule::Str("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87), jule::Slice<jule::Any>::make({jule::Any((*((*(_169147_t))))._field_Ident, &__jule_any_type4),jule::Any((*(_169825_t2))._field_Ident, &__jule_any_type4),jule::Any(_20d3a78e7_GetKindStr(_170425_t1f.ptr(), true), &__jule_any_type4),jule::Any(_20d3a78e7_GetKindStr(_170525_t2f.ptr(), true), &__jule_any_type4)}));
											return;;
										};
									}
									_iter_next_211b9d728:;
									++it;
									goto _iter_begin_211b9d728;
								}
								_iter_end_211b9d728:;
							};
						}
						_iter_next_211b9c0a6:;
						++it;
						_169418_j++;
						goto _iter_begin_211b9c0a6;
					}
					_iter_end_211b9c0a6:;
				};
			}
			_iter_next_211b97bea:;
			++it;
			_169214_i++;
			goto _iter_begin_211b97bea;
		}
		_iter_end_211b97bea:;
	};
}



inline void _20d4494b1_checkTraitDeclMethod(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d3a2b45_Fn>* _171645_f) {
	if (_20d353a2a_IsIgnoreIdent((*((*(_171645_f))))._field_Ident)) {
		_20d438a33_pushErr(_self_.ptr(), (*((*(_171645_f))))._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_20d353ce4_IsAnonIdent((*((*(_171645_f))))._field_Ident)) {
		_20d438a33_pushErr(_self_.ptr(), (*((*(_171645_f))))._field_Token, jule::Str("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	(*((*(_171645_f))))._field_sema=_self_;
	_20d448658_checkFnDeclPrototype(_self_, _171645_f);
	jule::Ptr<_20d3a5a49_FnIns> _172417_ins = _20d3a43a5_instance((*(_171645_f)));;
	_20d443b3c_reloadFnInsTypes(_self_, _172417_ins);
	(*(_172417_ins))._field_reloaded=true;
	_20d3a46b3_appendInstance((*(_171645_f)).ptr(), &(_172417_ins));
}



inline void _20d449769_checkTraitDeclMethods(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d3b5dde_Trait>* _173046_t) {
	{
		auto expr = &((*((*(_173046_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211ba580c:;
		if (it != expr_end) {
			jule::I64 _173114_i = it - expr->begin();
			jule::Ptr<_20d3a2b45_Fn> _173121_f = *it;
			{
				_20d4494b1_checkTraitDeclMethod(_self_, &(_173121_f));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_20d3b7220_findMethodInherit((*(_173046_t)).ptr(), &((*(_173121_f))._field_Ident)) != nullptr)) {
					_20d438a33_pushErr(_self_.ptr(), (*(_173121_f))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_173121_f))._field_Ident, &__jule_any_type4)}));
					_20d438d96_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					goto _iter_next_211ba580c;
				};
				_julec_label_211ba817d:;
				{
					auto expr = &((*((*(_173046_t))))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_211ba6d5d:;
					if (it != expr_end) {
						jule::I64 _174717_j = it - expr->begin();
						jule::Ptr<_20d3a2b45_Fn> _174720_jf = *it;
						{
							{
								
								if ((_174717_j >= _173114_i)) {
									_case_begin_211ba9547:;
									{
										goto _iter_end_211ba6d5d;
									}
								}
								else if (((*(_173121_f))._field_Ident == (*(_174720_jf))._field_Ident)) {
									_case_begin_211ba95be:;
									{
										_20d438a33_pushErr(_self_.ptr(), (*(_173121_f))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_173121_f))._field_Ident, &__jule_any_type4)}));
										_20d438d96_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_end_211ba6d5d;
									}
								}
								_match_end_211ba9437:;
							};
						}
						_iter_next_211ba6d5d:;
						++it;
						_174717_j++;
						goto _iter_begin_211ba6d5d;
					}
					_iter_end_211ba6d5d:;
				};
			}
			_iter_next_211ba580c:;
			++it;
			_173114_i++;
			goto _iter_begin_211ba580c;
		}
		_iter_end_211ba580c:;
	};
}



inline void _20d449a22_checkTraitDecl(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d3b5dde_Trait>* _176639_t) {
	if (_20d353a2a_IsIgnoreIdent((*((*(_176639_t))))._field_Ident)) {
		_20d438a33_pushErr(_self_.ptr(), (*((*(_176639_t))))._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_20d439748_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_176639_t)))), &((*((*(_176639_t))))._field_Ident), false)) {
		_20d438a33_pushErr(_self_.ptr(), (*((*(_176639_t))))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_176639_t))))._field_Ident, &__jule_any_type4)}));
		_20d438d96_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_20d449208_checkTraitDeclInherits(_self_, _176639_t);
	_20d449769_checkTraitDeclMethods(_self_, _176639_t);
}



inline jule::Bool _20d449ca8_checkTraitDecls(jule::Ptr<_20d435de8_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211bae3a4:;
		if (it != expr_end) {
			jule::Ptr<_20d3b5dde_Trait> _178021_t = *it;
			{
				_20d449a22_checkTraitDecl(_self_, &(_178021_t));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_211bae3a4:;
			++it;
			goto _iter_begin_211bae3a4;
		}
		_iter_end_211bae3a4:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _20d44a1a4_checkTraitImplMethods(_20d435de8_Sema* _self_, jule::Ptr<_20d3b5dde_Trait>* _179045_base, jule::Ptr<_20d3dd268_Impl>* _179060_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_179060_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211bb0edd:;
		if (it != expr_end) {
			jule::Ptr<_20d3a2b45_Fn> *_179216_f = it;
			{
				if ((_20d3b6a8d_FindMethod((*(_179045_base)).ptr(), (*((*(_179216_f))))._field_Ident) == nullptr)) {
					_20d438a33_pushErr(_self_, (*((*(_179216_f))))._field_Token, jule::Str("undefined identifier: trait @ has no define @", 45), jule::Slice<jule::Any>::make({jule::Any((*((*(_179045_base))))._field_Ident, &__jule_any_type4),jule::Any((*((*(_179216_f))))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
				};
			}
			_iter_next_211bb0edd:;
			++it;
			goto _iter_begin_211bb0edd;
		}
		_iter_end_211bb0edd:;
	};
	return __jule_func_result;;
}



inline jule::Bool _20d44a5a0_implToStruct(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d38c58b_Struct>* _180137_dest, jule::Ptr<_20d3dd268_Impl>* _180157_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_180157_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211bb363e:;
		if (it != expr_end) {
			jule::Ptr<_20d3a2b45_Fn> _180521_f = *it;
			{
				if (((_20d38d218_FindMethod((*(_180137_dest)).ptr(), (*(_180521_f))._field_Ident, (*(_180521_f))._field_Statically) != nullptr) || (_20d38d89a_FindField((*(_180137_dest)).ptr(), (*(_180521_f))._field_Ident) != nullptr))) {
					_20d438a33_pushErr(_self_.ptr(), (*(_180521_f))._field_Token, jule::Str("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*((*(_180137_dest))))._field_Ident, &__jule_any_type4),jule::Any((*(_180521_f))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_211bb363e;
				};
				if ((((*((*(_180137_dest))))._field_Generics.len() > 0LL) && ((*(_180521_f))._field_Generics.len() > 0LL))) {
					{
						auto expr = &((*(_180521_f))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_211bb6532:;
						if (it != expr_end) {
							jule::Ptr<_20d378ba4_GenericDecl> _181324_fg = *it;
							{
								{
									auto expr = &((*((*(_180137_dest))))._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_211bb6e06:;
									if (it != expr_end) {
										jule::Ptr<_20d378ba4_GenericDecl> _181428_dg = *it;
										{
											if (((*(_181324_fg))._field_Ident == (*(_181428_dg))._field_Ident)) {
												_20d438a33_pushErr(_self_.ptr(), (*(_181324_fg))._field_Token, jule::Str("methods cannot have same generic identifier with owner same time", 64), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_211bb6e06:;
										++it;
										goto _iter_begin_211bb6e06;
									}
									_iter_end_211bb6e06:;
								};
							}
							_iter_next_211bb6532:;
							++it;
							goto _iter_begin_211bb6532;
						}
						_iter_end_211bb6532:;
					};
				};
				_20d439aab_checkDirectives(_self_, &((*(_180521_f))._field_Directives), jule::Any(_180521_f, &__jule_any_type65));
				(*(_180521_f))._field_sema=_self_;
				(*(_180521_f))._field_Owner=(*(_180137_dest));
				{ jule::Slice<jule::Ptr<_20d3a2b45_Fn>> &__jule_push_dest = (*((*(_180137_dest))))._field_Methods; __jule_push_dest.push(_180521_f); };
			}
			_iter_next_211bb363e:;
			++it;
			goto _iter_begin_211bb363e;
		}
		_iter_end_211bb363e:;
	};
	{
		auto expr = &((*((*(_180157_ipl))))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211bb351d:;
		if (it != expr_end) {
			jule::Ptr<_20d458aca_Var> _183021_v = *it;
			{
				;
				if (((_20d38d218_FindMethod((*(_180137_dest)).ptr(), (*(_183021_v))._field_Ident, true) != nullptr) || (_20d38d559_FindStatic((*(_180137_dest)).ptr(), (*(_183021_v))._field_Ident) != nullptr))) {
					_20d438a33_pushErr(_self_.ptr(), (*(_183021_v))._field_Token, jule::Str("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*((*(_180137_dest))))._field_Ident, &__jule_any_type4),jule::Any((*(_183021_v))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_211bb351d;
				};
				{ jule::Slice<jule::Ptr<_20d458aca_Var>> &__jule_push_dest = (*((*(_180137_dest))))._field_Statics; __jule_push_dest.push(_183021_v); };
			}
			_iter_next_211bb351d:;
			++it;
			goto _iter_begin_211bb351d;
		}
		_iter_end_211bb351d:;
	};
	return __jule_func_result;;
}



inline void _20d44a858_implTrait(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d3dd268_Impl>* _184334_decl) {
	jule::Ptr<_20d4de28c_TypeKind> _184417_base_t = _20d4402dc_selectType(_self_, &((*((*(_184334_decl))))._field_Base));;
	if ((_184417_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_20d3b5dde_Trait> _184817_base = _20d4e348e_Trait(_184417_base_t.ptr());;
	if ((_184817_base == nullptr)) {
		_20d438a33_pushErr(_self_.ptr(), (*((*((*(_184334_decl))))._field_Base))._field_Token, jule::Str("invalid base type for impl: @", 29), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str(_184417_base_t.ptr()), &__jule_any_type4)}));
		_20d438d96_pushSuggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_20d4de28c_TypeKind> _185517_destT = _20d4402dc_selectType(_self_, &((*((*(_184334_decl))))._field_Dest));;
	if ((_185517_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_20d39066b_StructIns> _185917_destS = _20d4e3208_Struct(_185517_destT.ptr());;
	if ((_185917_destS == nullptr)) {
		_20d438a33_pushErr(_self_.ptr(), (*((*((*(_184334_decl))))._field_Dest))._field_Token, jule::Str("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str(_185517_destT.ptr()), &__jule_any_type4)}));
		_20d438d96_pushSuggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_20d38c58b_Struct> _186617_dest = (*(_185917_destS))._field_Decl;;
	if ((_20d357006_Dir((*((*(_186617_dest))._field_Token))._field_File.ptr()) != _20d357006_Dir((*((*(_self_))._field_file))._field_File.ptr()))) {
		_20d438a33_pushErr(_self_.ptr(), (*((*((*(_184334_decl))))._field_Dest))._field_Token, jule::Str("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	_20d456db4_pushImplemented(_184817_base, &(_186617_dest));
	_20d4571a0_pushImplements(&(_186617_dest), _184817_base);
	if (((*((*(_184334_decl))))._field_Statics.len() > 0LL)) {
		_20d438a33_pushErr(_self_.ptr(), (*((*((*(_184334_decl))))._field_Statics[0LL]))._field_Token, jule::Str("trait implementations cannot implement static field", 51), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_20d44a1a4_checkTraitImplMethods(_self_.ptr(), &(_184817_base), _184334_decl)))) {
			_case_begin_211bc6113:;
		}
		else if ((!(_20d44a5a0_implToStruct(_self_, &(_186617_dest), _184334_decl)))) {
			_case_begin_211bc618a:;
		}
		_match_end_211bc3660:;
	};
}



inline void _20d44ab11_implStruct(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d3dd268_Impl>* _188635_decl) {
	jule::Ptr<_20d4de28c_TypeKind> _188717_destT = _20d4402dc_selectType(_self_, &((*((*(_188635_decl))))._field_Dest));;
	if ((_188717_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_20d39066b_StructIns> _189117_destS = _20d4e3208_Struct(_188717_destT.ptr());;
	if ((_189117_destS == nullptr)) {
		_20d438a33_pushErr(_self_.ptr(), (*((*((*(_188635_decl))))._field_Dest))._field_Token, jule::Str("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str(_188717_destT.ptr()), &__jule_any_type4)}));
		_20d438d96_pushSuggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_20d38c58b_Struct> _189817_dest = (*(_189117_destS))._field_Decl;;
	if ((_20d357006_Dir((*((*(_189817_dest))._field_Token))._field_File.ptr()) != _20d357006_Dir((*((*(_self_))._field_file))._field_File.ptr()))) {
		_20d438a33_pushErr(_self_.ptr(), (*((*((*(_188635_decl))))._field_Dest))._field_Token, jule::Str("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_20d44a5a0_implToStruct(_self_, &(_189817_dest), _188635_decl)))) {
			_case_begin_211bcbc73:;
		}
		_match_end_211bca469:;
	};
}



inline void _20d44adb9_implImpl(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d3dd268_Impl>* _191033_decl) {
	{
		
		if (_20d3dd631_IsTraitImpl((*(_191033_decl)).ptr())) {
			_case_begin_211bcc856:;
			{
				_20d44a858_implTrait(_self_, _191033_decl);
			}
		}
		else if (_20d3dd8b7_IsStructImpl((*(_191033_decl)).ptr())) {
			_case_begin_211bcc8cd:;
			{
				_20d44ab11_implStruct(_self_, _191033_decl);
			}
		}
		_match_end_211bcc746:;
	};
}



inline void _20d44b22c_checkVarDecl(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d458aca_Var>* _192137_decl, jule::Trait<_20d50e06a_Lookup> _192153_l) {
	if (_20d353a2a_IsIgnoreIdent((*((*(_192137_decl))))._field_Ident)) {
		_20d438a33_pushErr(_self_.ptr(), (*((*(_192137_decl))))._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_20d4591e6_IsTypeInferred((*(_192137_decl)).ptr())) {
		if ((!(_20d458e60_IsInitialized((*(_192137_decl)).ptr())))) {
			_20d438a33_pushErr(_self_.ptr(), (*((*(_192137_decl))))._field_Token, jule::Str("type inferred declarations should have a initializer expression", 63), jule::Slice<jule::Any>());
		};
	} else {
		_20d43e6a4_checkType(_self_, &((*((*(_192137_decl))))._field_Kind), _192153_l);
	};
	if (((*((*(_192137_decl))))._field_Constant && (*((*(_192137_decl))))._field_Reference)) {
		_20d438a33_pushErr(_self_.ptr(), (*((*(_192137_decl))))._field_Token, jule::Str("references cannot be constant", 29), jule::Slice<jule::Any>());
	};
	if ((!(_20d458e60_IsInitialized((*(_192137_decl)).ptr())))) {
		if ((*((*(_192137_decl))))._field_Constant) {
			_20d438a33_pushErr(_self_.ptr(), (*((*(_192137_decl))))._field_Token, jule::Str("missing expression for constant variable initialization", 55), jule::Slice<jule::Any>());
		};
		if ((*((*(_192137_decl))))._field_Statically) {
			_20d438a33_pushErr(_self_.ptr(), (*((*(_192137_decl))))._field_Token, jule::Str("static variables must be have initialize expression", 51), jule::Slice<jule::Any>());
		};
		if ((*((*(_192137_decl))))._field_Reference) {
			_20d438a33_pushErr(_self_.ptr(), (*((*(_192137_decl))))._field_Token, jule::Str("reference variables must be have lvalue initialize expression", 61), jule::Slice<jule::Any>());
		};
	};
}



inline void _20d44b4d5_checkGlobalVarDecl(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d458aca_Var>* _195343_decl) {
	if (_20d439748_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_195343_decl)))), &((*((*(_195343_decl))))._field_Ident), (*((*(_195343_decl))))._field_Binded)) {
		_20d438a33_pushErr(_self_.ptr(), (*((*(_195343_decl))))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_195343_decl))))._field_Ident, &__jule_any_type4)}));
		_20d438d96_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_195343_decl))))._field_Binded && (*((*(_195343_decl))))._field_Constant)) {
		_20d438a33_pushErr(_self_.ptr(), (*((*(_195343_decl))))._field_Token, jule::Str("binded variables cannot be constant", 35), jule::Slice<jule::Any>());
	};
	if ((((!((*((*(_195343_decl))))._field_Binded)) && (!((*((*(_195343_decl))))._field_Constant))) && (!((*((*(_195343_decl))))._field_Statically)))) {
		_20d438a33_pushErr(_self_.ptr(), (*((*(_195343_decl))))._field_Token, jule::Str("global variables must be static", 31), jule::Slice<jule::Any>());
		_20d438d96_pushSuggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30), jule::Slice<jule::Any>());
	};
	_20d439aab_checkDirectives(_self_, &((*((*(_195343_decl))))._field_Directives), jule::Any((*(_195343_decl)), &__jule_any_type8));
	_20d44b22c_checkVarDecl(_self_, _195343_decl, jule::Trait<_20d50e06a_Lookup>(_self_, 3));
}



inline jule::Bool _20d44b76b_checkGlobalDecls(jule::Ptr<_20d435de8_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211bd98da:;
		if (it != expr_end) {
			jule::Ptr<_20d458aca_Var> _197121_decl = *it;
			{
				_20d44b4d5_checkGlobalVarDecl(_self_, &(_197121_decl));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_211bd98da:;
			++it;
			goto _iter_begin_211bd98da;
		}
		_iter_end_211bd98da:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _20d44bb67_checkStructTraitImpl(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d38c58b_Struct>* _198145_strct, jule::Ptr<_20d3b5dde_Trait>* _198166_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_198166_trt))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211bdb513:;
		if (it != expr_end) {
			jule::Ptr<_20d3a2b45_Fn> _198221_tf = *it;
			{
				jule::Bool _198321_exist = false;;
				jule::Ptr<_20d3a2b45_Fn> _198421_sf = _20d38d218_FindMethod((*(_198145_strct)).ptr(), (*(_198221_tf))._field_Ident, (*(_198221_tf))._field_Statically);;
				jule::Ptr<_20d3a5a49_FnIns> _198517_tfK = _20d4426da_getTraitCheckFnKind(_self_, &(_198221_tf));;
				if ((_198421_sf != nullptr)) {
					jule::Ptr<_20d3a5a49_FnIns> _198725_sfK = _20d4426da_getTraitCheckFnKind(_self_, &(_198421_sf));;
					_198321_exist=_20d3a69b2_equalTrait(_198517_tfK, &(_198725_sfK));
				};
				if (_198321_exist) {
					jule::Ptr<_20d36adb6_Directive> _199121_d = _20d4d76a3_findDirective(&((*(_198421_sf))._field_Directives), jule::Str("deprecated", 10));;
					if ((_199121_d != nullptr)) {
						_20d438a33_pushErr(_self_.ptr(), (*(_199121_d))._field_Tag, jule::Str("trait implementations cannot have deprecated code", 49), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_20d438a33_pushErr(_self_.ptr(), (*((*(_198145_strct))))._field_Token, jule::Str("trait @ derived but not implemented define @", 44), jule::Slice<jule::Any>::make({jule::Any((*((*(_198166_trt))))._field_Ident, &__jule_any_type4),jule::Any(_20d3a78e7_GetKindStr(_198517_tfK.ptr(), true), &__jule_any_type4)}));
					__jule_func_result=false;
				};
			}
			_iter_next_211bdb513:;
			++it;
			goto _iter_begin_211bdb513;
		}
		_iter_end_211bdb513:;
	};
	return __jule_func_result;;
}



inline jule::Bool _20d44bea8_checkStructImpls(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d38c58b_Struct>* _200541_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_200541_s))))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211be2151:;
		if (it != expr_end) {
			jule::Ptr<_20d3b5dde_Trait> _200721_trt = *it;
			{
				__jule_func_result=(_20d44bb67_checkStructTraitImpl(_self_, _200541_s, &(_200721_trt)) && __jule_func_result);
			}
			_iter_next_211be2151:;
			++it;
			goto _iter_begin_211be2151;
		}
		_iter_end_211be2151:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _20d44c2e9_checkStructFields(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d38c58b_Struct>* _201342_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_201342_st))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211be35c5:;
		if (it != expr_end) {
			jule::Ptr<_20d389698_Field> _201521_f = *it;
			{
				(*(_201521_f))._field_Owner=(*(_201342_st));
				{
					auto expr = &((*((*(_201342_st))))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_211be431d:;
					if (it != expr_end) {
						jule::Ptr<_20d389698_Field> _201720_cf = *it;
						{
							if ((_201521_f == _201720_cf)) {
								goto _iter_end_211be431d;
							} else if (((*(_201521_f))._field_Ident == (*(_201720_cf))._field_Ident)) {
								_20d438a33_pushErr(_self_.ptr(), (*(_201521_f))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_201521_f))._field_Ident, &__jule_any_type4)}));
								_20d438d96_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_211be431d:;
						++it;
						goto _iter_begin_211be431d;
					}
					_iter_end_211be431d:;
				};
			}
			_iter_next_211be35c5:;
			++it;
			goto _iter_begin_211be35c5;
		}
		_iter_end_211be35c5:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _20d44c5a2_checkStructDecl(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d38c58b_Struct>* _203040_s) {
	if (_20d353a2a_IsIgnoreIdent((*((*(_203040_s))))._field_Ident)) {
		_20d438a33_pushErr(_self_.ptr(), (*((*(_203040_s))))._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_20d439748_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_203040_s)))), &((*((*(_203040_s))))._field_Ident), (*((*(_203040_s))))._field_Binded)) {
		_20d438a33_pushErr(_self_.ptr(), (*((*(_203040_s))))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_203040_s))))._field_Ident, &__jule_any_type4)}));
		_20d438d96_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_20d439aab_checkDirectives(_self_, &((*((*(_203040_s))))._field_Directives), jule::Any((*(_203040_s)), &__jule_any_type66));
	{
		
		if ((!(_20d4478cc_checkDeclGenerics(_self_.ptr(), &((*((*(_203040_s))))._field_Generics))))) {
			_case_begin_211be91ad:;
		}
		else if ((!(_20d44c2e9_checkStructFields(_self_, _203040_s)))) {
			_case_begin_211be9224:;
		}
		else if ((!(_20d44bea8_checkStructImpls(_self_, _203040_s)))) {
			_case_begin_211be928a:;
		}
		else if ((!(_20d44d1da_checkFuncDeclsBy(_self_, &((*((*(_203040_s))))._field_Methods))))) {
			_case_begin_211be9312:;
		}
		_match_end_211be8bd5:;
	};
}



inline jule::Bool _20d44c838_checkStructDecls(jule::Ptr<_20d435de8_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211beb0b1:;
		if (it != expr_end) {
			jule::Ptr<_20d38c58b_Struct> _205021_s = *it;
			{
				_20d44c5a2_checkStructDecl(_self_, &(_205021_s));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_211beb0b1:;
			++it;
			goto _iter_begin_211beb0b1;
		}
		_iter_end_211beb0b1:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _20d44cae1_checkAnonFuncDecl(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d3a2b45_Fn>* _206042_f) {
	(*((*(_206042_f))))._field_sema=_self_;
	_20d448658_checkFnDeclPrototype(_self_, _206042_f);
}



inline void _20d44cd99_checkFuncDecl(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d3a2b45_Fn>* _206538_f) {
	if (_20d353a2a_IsIgnoreIdent((*((*(_206538_f))))._field_Ident)) {
		_20d438a33_pushErr(_self_.ptr(), (*((*(_206538_f))))._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_20d3a3b02_IsAnon((*(_206538_f)).ptr())) {
		_20d438a33_pushErr(_self_.ptr(), (*((*(_206538_f))))._field_Token, jule::Str("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	_20d439aab_checkDirectives(_self_, &((*((*(_206538_f))))._field_Directives), jule::Any((*(_206538_f)), &__jule_any_type65));
	_20d44cae1_checkAnonFuncDecl(_self_, _206538_f);
	if ((((*((*(_206538_f))))._field_Owner == nullptr) && _20d439748_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_206538_f)))), &((*((*(_206538_f))))._field_Ident), (*((*(_206538_f))))._field_Binded))) {
		if ((*((*(_206538_f))))._field_Ident.equal("init", 4)) {
			jule::Ptr<_20d3a2b45_Fn> _207721_init = _20d43747c_FindFn(_self_.ptr(), jule::Str("init", 4), false);;
			if ((_207721_init != nullptr)) {
				return;;
			};
		};
		_20d438a33_pushErr(_self_.ptr(), (*((*(_206538_f))))._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_206538_f))))._field_Ident, &__jule_any_type4)}));
		_20d438d96_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _20d44d1da_checkFuncDeclsBy(jule::Ptr<_20d435de8_Sema> _self_, jule::Slice<jule::Ptr<_20d3a2b45_Fn>>* _208741_funcs) {
	{
		auto expr = _208741_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211c036c3:;
		if (it != expr_end) {
			jule::Ptr<_20d3a2b45_Fn> _208821_f = *it;
			{
				_20d44cd99_checkFuncDecl(_self_, &(_208821_f));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_211c036c3:;
			++it;
			goto _iter_begin_211c036c3;
		}
		_iter_end_211c036c3:;
	};
	return true;;
}



inline jule::Bool _20d44d471_checkFuncDecls(jule::Ptr<_20d435de8_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _20d44d1da_checkFuncDeclsBy(_self_, &((*((*(_self_))._field_file))._field_Funcs));
	return __jule_func_result;;
}



inline void _20d44d88e_pushCycleError(_20d435de8_Sema* _self_, jule::Str* _210330_st1, jule::Str* _210341_st2, _2240a0ad5_StrBuilder* _210356_message) {
	;
	jule::Str _210513_refersTo = _22730c3c1_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_210330_st1)), &__jule_any_type4),jule::Any((*(_210341_st2)), &__jule_any_type4)}));;
	jule::Slice<jule::U8> _210617_buf = _2240aab45_Buf(_210356_message);;
	_2240a989c_WriteStr(_210356_message, _2248a97b7_Repeat(jule::Str(" ", 1), 7LL));
	_2240a989c_WriteStr(_210356_message, _210513_refersTo);
	_2240a9b55_WriteByte(_210356_message, '\n');
	_2240a95e4_Write(_210356_message, _210617_buf);
}



inline jule::Bool _20d44dd45_checkCrossCycle(_20d435de8_Sema* _self_, jule::Ptr<_20d38c58b_Struct>* _211331_st1, jule::Ptr<_20d38c58b_Struct>* _211346_st2, _2240a0ad5_StrBuilder* _211365_message) {
	{
		auto expr = &((*((*(_211346_st2))))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211c07ebe:;
		if (it != expr_end) {
			jule::Ptr<_20d38c58b_Struct> *_211416_u = it;
			{
				if (((*(_211416_u)) == (*(_211331_st1)))) {
					_20d44d88e_pushCycleError(_self_, &((*((*(_211346_st2))))._field_Ident), &((*((*(_211416_u))))._field_Ident), _211365_message);
					return false;;
				};
				if ((!(_20d44dd45_checkCrossCycle(_self_, _211331_st1, _211416_u, _211365_message)))) {
					_20d44d88e_pushCycleError(_self_, &((*((*(_211346_st2))))._field_Ident), &((*((*(_211416_u))))._field_Ident), _211365_message);
					return false;;
				};
			}
			_iter_next_211c07ebe:;
			++it;
			goto _iter_begin_211c07ebe;
		}
		_iter_end_211c07ebe:;
	};
	return true;;
}



inline jule::Bool _20d44e2eb_checkStructDeriveIllegalCycles(_20d435de8_Sema* _self_, jule::Str _212749_derive, jule::Ptr<_20d38c58b_Struct>* _212763_st1, jule::Ptr<_20d4de28c_TypeKind>* _212782_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_20d38c58b_Struct> _212817_st2 = _20d50b71b_getStructFromKind((*(_212782_k)));;
	if ((_212817_st2 == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_212763_st1)) == _212817_st2)) {
		_20d438a33_pushErr(_self_, (*((*(_212763_st1))))._field_Token, jule::Str("illegal cycle for derive @, struct @ refers to itself", 53), jule::Slice<jule::Any>::make({jule::Any(_212749_derive, &__jule_any_type4),jule::Any((*((*(_212763_st1))))._field_Ident, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_2240a0ad5_StrBuilder _214017_message = static__2240a0e04_New(32LL);;
	if ((!(_20d44dd45_checkCrossCycle(_self_, _212763_st1, &(_212817_st2), &(_214017_message))))) {
		jule::Str _214221_errMsg = _2240aa194_Str(&_214017_message);;
		_2240aa392_Clear(&_214017_message);
		_20d44d88e_pushCycleError(_self_, &((*((*(_212763_st1))))._field_Ident), &((*(_212817_st2))._field_Ident), &(_214017_message));
		_214221_errMsg+=_2240aa194_Str(&_214017_message);
		_20d438a33_pushErr(_self_, (*((*(_212763_st1))))._field_Token, jule::Str("illegal cross cycle for derive @;\n@", 35), jule::Slice<jule::Any>::make({jule::Any(_212749_derive, &__jule_any_type4),jule::Any(_214221_errMsg, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _20d44e63c_checkStructInsDeriveClone(_20d435de8_Sema* _self_, jule::Ptr<_20d39066b_StructIns> _215248_st) {
	jule::Bool __jule_func_result = false;
	if ((!(_20d38e02c_IsDerives((*(_215248_st))._field_Decl.ptr(), jule::Str("Clone", 5))))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_215248_st))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211c0eec6:;
		if (it != expr_end) {
			jule::Ptr<_20d38eabb_FieldIns> _215621_f = *it;
			{
				if (((*(_215621_f))._field_Kind == nullptr)) {
					goto _iter_next_211c0eec6;
				};
				if ((!(_20d4e1668_SupportsCloning((*(_215621_f))._field_Kind.ptr())))) {
					_20d438a33_pushErr(_self_, (*((*(_215248_st))._field_Decl))._field_Token, jule::Str("type @ is not compatible to derive @", 36), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_215621_f))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str("Clone", 5), &__jule_any_type4)}));
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_20d44e2eb_checkStructDeriveIllegalCycles(_self_, jule::Str("Clone", 5), &((*(_215248_st))._field_Decl), &((*(_215621_f))._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_211c0eec6:;
			++it;
			goto _iter_begin_211c0eec6;
		}
		_iter_end_211c0eec6:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _20d44e83a_checkPackageDecls(jule::Ptr<_20d435de8_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211c0e5ad:;
		if (it != expr_end) {
			jule::Ptr<_20d081e40_SymbolTable> _217421_f = *it;
			{
				_20d438615_setCurrentFile(_self_.ptr(), _217421_f);
				if ((!(_20d4457ed_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_211c0e5ad:;
			++it;
			goto _iter_begin_211c0e5ad;
		}
		_iter_end_211c0e5ad:;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211c13e42:;
		if (it != expr_end) {
			jule::Ptr<_20d081e40_SymbolTable> _218121_f = *it;
			{
				_20d438615_setCurrentFile(_self_.ptr(), _218121_f);
				if ((!(_20d449ca8_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_211c13e42:;
			++it;
			goto _iter_begin_211c13e42;
		}
		_iter_end_211c13e42:;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211c13705:;
		if (it != expr_end) {
			jule::Ptr<_20d081e40_SymbolTable> _218821_f = *it;
			{
				_20d438615_setCurrentFile(_self_.ptr(), _218821_f);
				if ((!(_20d44b76b_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_211c13705:;
			++it;
			goto _iter_begin_211c13705;
		}
		_iter_end_211c13705:;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211c15dcd:;
		if (it != expr_end) {
			jule::Ptr<_20d081e40_SymbolTable> _219521_f = *it;
			{
				_20d438615_setCurrentFile(_self_.ptr(), _219521_f);
				{
					
					if ((!(_20d44d471_checkFuncDecls(_self_)))) {
						_case_begin_211c16c25:;
					}
					else if ((!(_20d44c838_checkStructDecls(_self_)))) {
						_case_begin_211c16c8b:;
					}
					else {
						_case_begin_211c16bae:;
						{
							goto _iter_next_211c15dcd;
						}
					}
					_match_end_211c16b59:;
				};
				return;;
			}
			_iter_next_211c15dcd:;
			++it;
			goto _iter_begin_211c15dcd;
		}
		_iter_end_211c15dcd:;
	};
}



inline void _20d44eb9d_checkDataForTypeInference(_20d435de8_Sema* _self_, jule::Ptr<_20d087165_Data>* _220745_d, jule::Ptr<_20d3510bb_Token>* _220756_err_token) {
	{
		
		if (_20d08751c_IsNil((*(_220745_d)).ptr())) {
			_case_begin_211c17d69:;
			{
				_20d438a33_pushErr(_self_, (*(_220756_err_token)), jule::Str("nil is cannot use with type inferred definitions", 48), jule::Slice<jule::Any>());
			}
		}
		else if (_20d0877a3_IsVoid((*(_220745_d)).ptr())) {
			_case_begin_211c17de1:;
			{
				_20d438a33_pushErr(_self_, (*(_220756_err_token)), jule::Str("void data is cannot use for type inferred definitions", 53), jule::Slice<jule::Any>());
			}
		}
		else if ((*((*((*(_220745_d))))._field_Kind))._field_Variadic) {
			_case_begin_211c17e68:;
			{
				_20d438a33_pushErr(_self_, (*(_220756_err_token)), jule::Str("invalid expression for type inference", 37), jule::Slice<jule::Any>());
			}
		}
		_match_end_211c17c48:;
	};
}



inline void _20d44ee56_checkVarValue(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d458aca_Var>* _221938_v) {
	if (_20d4591e6_IsTypeInferred((*(_221938_v)).ptr())) {
		(*((*(_221938_v))))._field_Kind=jule::new_ptr<_20d4e6706_TypeSymbol>(_20d4e6706_TypeSymbol{._field_Kind=(*((*((*((*(_221938_v))))._field_Value))._field_Data))._field_Kind});
		_20d44eb9d_checkDataForTypeInference(_self_.ptr(), &((*((*((*(_221938_v))))._field_Value))._field_Data), &((*((*((*((*(_221938_v))))._field_Value))._field_Expr))._field_Token));
		_20d444a50_checkValidityForInitExpr(_self_, (*((*(_221938_v))))._field_Mutable, (*((*(_221938_v))))._field_Reference, &((*((*((*(_221938_v))))._field_Kind))._field_Kind), &((*((*((*(_221938_v))))._field_Value))._field_Data), &((*((*((*((*(_221938_v))))._field_Value))._field_Expr))._field_Token));
	} else {
		jule::Ptr<_20d4ed92d_Arr> _223221_arr = _20d4e2955_Arr((*((*((*(_221938_v))))._field_Kind))._field_Kind.ptr());;
		if ((_223221_arr != nullptr)) {
			if ((*(_223221_arr))._field_Auto) {
				jule::Ptr<_20d4ed92d_Arr> _223525_dataArr = _20d4e2955_Arr((*((*((*((*(_221938_v))))._field_Value))._field_Data))._field_Kind.ptr());;
				if ((_223525_dataArr != nullptr)) {
					(*(_223221_arr))._field_N=(*(_223525_dataArr))._field_N;
				};
			};
		};
		if (_20d441541_checkAssignType(_self_, (*((*(_221938_v))))._field_Reference, &((*((*((*(_221938_v))))._field_Kind))._field_Kind), &((*((*((*(_221938_v))))._field_Value))._field_Data), (*((*((*((*(_221938_v))))._field_Value))._field_Expr))._field_Token)) {
			_20d444a50_checkValidityForInitExpr(_self_, (*((*(_221938_v))))._field_Mutable, (*((*(_221938_v))))._field_Reference, &((*((*((*(_221938_v))))._field_Kind))._field_Kind), &((*((*((*(_221938_v))))._field_Value))._field_Data), &((*((*((*((*(_221938_v))))._field_Value))._field_Expr))._field_Token));
		};
	};
	if (((*((*(_221938_v))))._field_Reference && (!(_20d50aa28_isValidForRef(&((*((*((*(_221938_v))))._field_Kind))._field_Kind)))))) {
		_20d438a33_pushErr(_self_.ptr(), (*((*(_221938_v))))._field_Token, jule::Str("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*((*((*(_221938_v))))._field_Kind))._field_Kind.ptr()), &__jule_any_type4)}));
	};
	if ((*((*(_221938_v))))._field_Constant) {
		jule::Bool _225717_comptime = _20d4e3c42_comptime((*((*((*((*(_221938_v))))._field_Value))._field_Data))._field_Kind.ptr());;
		if (((!(_20d087a39_IsConst((*((*((*(_221938_v))))._field_Value))._field_Data.ptr()))) && (!(_225717_comptime)))) {
			_20d438a33_pushErr(_self_.ptr(), (*((*((*((*(_221938_v))))._field_Value))._field_Expr))._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		if ((_225717_comptime && (_20d4e502e_comptimeRange((*((*((*((*(_221938_v))))._field_Value))._field_Data))._field_Kind.ptr()) != nullptr))) {
			_20d438a33_pushErr(_self_.ptr(), (*((*((*((*(_221938_v))))._field_Value))._field_Expr))._field_Token, jule::Str("@ is invalid data-type for constant", 35), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*((*((*((*(_221938_v))))._field_Value))._field_Data))._field_Kind.ptr()), &__jule_any_type4)}));
		};
	} else {
		(*((*((*((*(_221938_v))))._field_Value))._field_Data))._field_Constant=nullptr;
	};
	if ((_20d4e39ab_Tup((*((*((*(_221938_v))))._field_Kind))._field_Kind.ptr()) != nullptr)) {
		(*((*((*(_221938_v))))._field_Kind))._field_Kind=nullptr;
	};
}



inline void _20d4502b9_evalVarValue(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d458aca_Var>* _227537_decl, jule::Trait<_20d50e06a_Lookup> _227553_l) {
	if ((!(_20d458e60_IsInitialized((*(_227537_decl)).ptr())))) {
		return;;
	};
	jule::Ptr<_20d088d59_Eval> _228017_eval = nullptr;;
	if (((*((*(_227537_decl))))._field_Kind != nullptr)) {
		_228017_eval=_20d440793_evalpd(_self_, _227553_l, (*((*((*(_227537_decl))))._field_Kind))._field_Kind, (*(_227537_decl)));
	} else {
		_228017_eval=_20d440793_evalpd(_self_, _227553_l, nullptr, (*(_227537_decl)));
	};
	(*(_228017_eval))._field_immutable=(!((*((*(_227537_decl))))._field_Mutable));
	(*((*((*(_227537_decl))))._field_Value))._field_Data=_20d4cdc93_evalExpr(_228017_eval, (*((*((*(_227537_decl))))._field_Value))._field_Expr);
}



inline void _20d45062c_checkVar(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d458aca_Var>* _229233_decl, jule::Trait<_20d50e06a_Lookup> _229249_l) {
	_20d4502b9_evalVarValue(_self_, _229233_decl, _229249_l);
	if (((*((*((*(_229233_decl))))._field_Value))._field_Data == nullptr)) {
		return;;
	};
	_20d44ee56_checkVarValue(_self_, _229233_decl);
}



inline void _20d45082a_checkGlobals(jule::Ptr<_20d435de8_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211c312c2:;
		if (it != expr_end) {
			jule::Ptr<_20d458aca_Var> _230221_decl = *it;
			{
				if ((*(_230221_decl))._field_Binded) {
					goto _iter_next_211c312c2;
				};
				if (((_20d458e60_IsInitialized(_230221_decl.ptr()) && ((*((*(_230221_decl))._field_Value))._field_Data == nullptr)) || (_20d4591e6_IsTypeInferred(_230221_decl.ptr()) && ((*((*(_230221_decl))._field_Kind))._field_Kind == nullptr)))) {
					_20d45062c_checkVar(_self_, &(_230221_decl), jule::Trait<_20d50e06a_Lookup>(_self_, 3));
				};
			}
			_iter_next_211c312c2:;
			++it;
			goto _iter_begin_211c312c2;
		}
		_iter_end_211c312c2:;
	};
}



inline jule::Ptr<_20d3a5a49_FnIns> _20d450c26_readyToCheckFn(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d39066b_StructIns>* _231639_s, jule::Ptr<_20d3a2b45_Fn>* _231659_f) {
	jule::Ptr<_20d3a5a49_FnIns> _231717_ins = _20d3a43a5_instance((*(_231659_f)));;
	if (((*((*(_231659_f))))._field_Instances.len() != 0LL)) {
		return _231717_ins;;
	};
	(*(_231717_ins))._field_Owner=(*(_231639_s));
	_20d3a46b3_appendInstance((*(_231659_f)).ptr(), &(_231717_ins));
	(*(_231717_ins))._field_reloaded=true;
	if (_20d443b3c_reloadFnInsTypes(_self_, _231717_ins)) {
		return _231717_ins;;
	};
	return nullptr;;
}



inline void _20d451089_checkTypeMethod(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d39066b_StructIns>* _233040_s, jule::Ptr<_20d3a2b45_Fn>* _233060_f) {
	if (((*((*(_233060_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_20d3a5a49_FnIns> _233517_ins = (*((*(_233060_f))))._field_Instances[0LL];;
	if (((*((*(_233517_ins))._field_Scope))._field_Stmts.len() > 0LL)) {
		return;;
	};
	_20d453a3c_checkFnIns(_self_, &(_233517_ins));
}



inline jule::Ptr<_20d3a5a49_FnIns> _20d451540_checkStructInsOp(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d39066b_StructIns>* _234341_s, jule::Ptr<_20d3a2b45_Fn>* _234361_f, jule::Fn<jule::Bool(jule::Ptr<_20d3a2b45_Fn>)> _234369_p) {
	if (((((*(_234361_f)) == nullptr) || ((*((*(_234361_f))))._field_Generics.len() > 0LL)) || (!(_234369_p((*(_234361_f))))))) {
		return nullptr;;
	};
	return (*((*(_234361_f))))._field_Instances[0LL];;
}



inline jule::Bool _20d45193b_checkStructEnv(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d39066b_StructIns>* _235339_s, jule::Ptr<_20d3510bb_Token> _235358_errorToken) {
	jule::Bool __jule_func_result = false;
	_20d5013e2_typeChecker _235417_tc = _20d5013e2_typeChecker{._field_s=(*((*((*(_235339_s))))._field_Decl))._field_sema, ._field_rootLookup=jule::Trait<_20d50e06a_Lookup>((*((*((*(_235339_s))))._field_Decl))._field_sema, 3), ._field_lookup=jule::Trait<_20d50e06a_Lookup>((*((*((*(_235339_s))))._field_Decl))._field_sema, 3), ._field_referencer=jule::new_ptr<_20d500402_referencer>(_20d500402_referencer{._field_ident=(*((*((*(_235339_s))))._field_Decl))._field_Ident, ._field_owner=jule::Any((*((*(_235339_s))))._field_Decl, &__jule_any_type66), }), ._field_refers=(*((*(_235339_s))))._field_Refers, };;
	if (((*((*(_235339_s))))._field_Generics.len() > 0LL)) {
		_235417_tc._field_useGenerics=jule::Slice<jule::Ptr<_20d4dd49a_TypeAlias>>::alloc(0LL, (*((*(_235339_s))))._field_Generics.len());
		{
			auto expr = &((*((*(_235339_s))))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_211c425d0:;
			if (it != expr_end) {
				jule::I64 _236718_i = it - expr->begin();
				jule::Ptr<_20d4dc8a6_InsGeneric> _236725_g = *it;
				{
					jule::Ptr<_20d378ba4_GenericDecl> _236825_decl = (*((*((*(_235339_s))))._field_Decl))._field_Generics[_236718_i];;
					{ jule::Slice<jule::Ptr<_20d4dd49a_TypeAlias>> &__jule_push_dest = _235417_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_20d4dd49a_TypeAlias>(_20d4dd49a_TypeAlias{._field_Token=(*(_236825_decl))._field_Token, ._field_Ident=(*(_236825_decl))._field_Ident, ._field_Kind=jule::new_ptr<_20d4e6706_TypeSymbol>(_20d4e6706_TypeSymbol{._field_Kind=(*(_236725_g))._field_Kind}), })); };
				}
				_iter_next_211c425d0:;
				++it;
				_236718_i++;
				goto _iter_begin_211c425d0;
			}
			_iter_end_211c425d0:;
		};
	};
	jule::Ptr<_20d081e40_SymbolTable> _237717_oldFile = (*(_self_))._field_file;;
	__JULE_DEFER({
		_20d438615_setCurrentFile(_self_.ptr(), _237717_oldFile);
	});;
	if (((*((*(_self_))._field_file))._field_File != (*((*((*((*(_235339_s))))._field_Decl))._field_Token))._field_File)) {
		jule::Ptr<_20d081e40_SymbolTable> _238121_file = _20d434b3e_findFile(&((*(_self_))._field_files), &((*((*((*((*(_235339_s))))._field_Decl))._field_Token))._field_File));;
		if ((_238121_file != nullptr)) {
			_20d438615_setCurrentFile(_self_.ptr(), _238121_file);
		};
	};
	if (((*((*(_235339_s))))._field_Generics.len() > 0LL)) {
		jule::Ptr<_20d3db233_constraintChecker> _238821_cc = _20d43e2a8_constraintChecker(_self_);;
		(*(_238821_cc))._field_et=_235358_errorToken;
		(*(_238821_cc))._field_si=(*(_235339_s));
		(*(_238821_cc))._field_genericsA=_235417_tc._field_useGenerics;
		(*(_238821_cc))._field_uniq=true;
		if ((!(_20d3dc168_check(_238821_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*((*(_235339_s))))._field_Statics.len() > 0LL)) {
		jule::I64 _240121_n = (*(_self_))._field_errors.len();;
		(*((*(_self_))._field_files[0LL]))._field_TypeAliases=jule::append(_235417_tc._field_useGenerics,(*((*(_self_))._field_files[0LL]))._field_TypeAliases);
		{
			auto expr = &((*((*(_235339_s))))._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_211c4a9c3:;
			if (it != expr_end) {
				jule::Ptr<_20d458aca_Var> _240325_v = *it;
				{
					_20d44b22c_checkVarDecl(_self_, &(_240325_v), jule::Trait<_20d50e06a_Lookup>(_self_, 3));
					_20d45062c_checkVar(_self_, &(_240325_v), jule::Trait<_20d50e06a_Lookup>(_self_, 3));
					__jule_func_result=((((*(_self_))._field_errors.len() - _240121_n) == 0LL) && __jule_func_result);
				}
				_iter_next_211c4a9c3:;
				++it;
				goto _iter_begin_211c4a9c3;
			}
			_iter_end_211c4a9c3:;
		};
		(*((*(_self_))._field_files[0LL]))._field_TypeAliases=(*((*(_self_))._field_files[0LL]))._field_TypeAliases.slice(_235417_tc._field_useGenerics.len());
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_20d088d59_Eval> _241417_eval = _20d440ed0_eval(_self_, jule::Trait<_20d50e06a_Lookup>(_self_, 3));;
	(*((*(_235339_s))))._field_Comparable=(!((*((*((*(_235339_s))))._field_Decl))._field_Binded));
	{
		auto expr = &((*((*(_235339_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211c4e598:;
		if (it != expr_end) {
			jule::Ptr<_20d38eabb_FieldIns> _241621_f = *it;
			{
				jule::Ptr<_20d4de28c_TypeKind> _241721_kind = _20d508a8c_checkDecl(&_235417_tc, &((*((*((*(_241621_f))._field_Decl))._field_Kind))._field_Decl));;
				__jule_func_result=((_241721_kind != nullptr) && __jule_func_result);
				if ((_241721_kind == nullptr)) {
					if (((_self_ != (*((*((*(_235339_s))))._field_Decl))._field_sema) && ((*((*((*((*(_235339_s))))._field_Decl))._field_sema))._field_errors.len() > 0LL))) {
						((*(_self_))._field_errors).append((*((*((*((*(_235339_s))))._field_Decl))._field_sema))._field_errors);;
						(*((*((*((*(_235339_s))))._field_Decl))._field_sema))._field_errors=nullptr;
					};
					goto _iter_next_211c4e598;
				};
				(*(_241621_f))._field_Kind=_241721_kind;
				(*((*(_235339_s))))._field_Mutable=((*((*(_235339_s))))._field_Mutable || ((!((*((*(_241621_f))._field_Decl))._field_Mutable)) && _20d4e0b2e_Mutable((*(_241621_f))._field_Kind.ptr())));
				(*((*(_235339_s))))._field_Comparable=((*((*(_235339_s))))._field_Comparable && _20d4e0898_Comparable((*(_241621_f))._field_Kind.ptr()));
				_20d44e63c_checkStructInsDeriveClone(_self_.ptr(), (*(_235339_s)));
				if (((*((*(_241621_f))._field_Decl))._field_Default == nullptr)) {
					goto _iter_next_211c4e598;
				};
				(*(_241417_eval))._field_prefix=(*(_241621_f))._field_Kind;
				(*(_241417_eval))._field_field=_241621_f;
				(*(_241621_f))._field_Default=_20d4cdc93_evalExpr(_241417_eval, (*((*(_241621_f))._field_Decl))._field_Default);
				if (((*(_241621_f))._field_Default == nullptr)) {
					goto _iter_next_211c4e598;
				};
				;
				_20d441541_checkAssignType(_self_, false, &((*(_241621_f))._field_Kind), &((*(_241621_f))._field_Default), (*((*((*(_241621_f))._field_Decl))._field_Default))._field_Token);
			}
			_iter_next_211c4e598:;
			++it;
			goto _iter_begin_211c4e598;
		}
		_iter_end_211c4e598:;
	};
	return __jule_func_result;;
}



inline jule::Bool _20d451d37_precheckStructIns(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d39066b_StructIns>* _245142_s, jule::Ptr<_20d3510bb_Token> _245161_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_20d45193b_checkStructEnv(_self_, _245142_s, _245161_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*((*(_245142_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211c59d34:;
		if (it != expr_end) {
			jule::Ptr<_20d3a2b45_Fn> _245621_f = *it;
			{
				if (((*(_245621_f))._field_Generics.len() == 0LL)) {
					if ((_20d450c26_readyToCheckFn(_self_, _245142_s, &(_245621_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_211c59d34:;
			++it;
			goto _iter_begin_211c59d34;
		}
		_iter_end_211c59d34:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _20d4520e0_checkStructIns(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d39066b_StructIns>* _246639_s) {
	{
		auto expr = &((*((*(_246639_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211c5a719:;
		if (it != expr_end) {
			jule::Ptr<_20d3a2b45_Fn> _246721_f = *it;
			{
				_20d451089_checkTypeMethod(_self_, _246639_s, &(_246721_f));
			}
			_iter_next_211c5a719:;
			++it;
			goto _iter_begin_211c5a719;
		}
		_iter_end_211c5a719:;
	};
}



inline void _20d452398_checkTypeStruct(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d38c58b_Struct>* _247240_s) {
	if ((*((*(_247240_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_247240_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_247240_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211c5c7a4:;
		if (it != expr_end) {
			jule::Ptr<_20d39066b_StructIns> _248521_ins = *it;
			{
				_20d4520e0_checkStructIns(_self_, &(_248521_ins));
			}
			_iter_next_211c5c7a4:;
			++it;
			goto _iter_begin_211c5c7a4;
		}
		_iter_end_211c5c7a4:;
	};
}



inline void _20d452596_checkStructTypes(jule::Ptr<_20d435de8_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211c5db7e:;
		if (it != expr_end) {
			jule::Ptr<_20d38c58b_Struct> _249121_s = *it;
			{
				_20d452398_checkTypeStruct(_self_, &(_249121_s));
			}
			_iter_next_211c5db7e:;
			++it;
			goto _iter_begin_211c5db7e;
		}
		_iter_end_211c5db7e:;
	};
}



inline void _20d45284e_checkStructInsOperators(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d39066b_StructIns> _249647_s) {
	{
		auto expr = &((*(_249647_s))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211c601d0:;
		if (it != expr_end) {
			jule::Ptr<_20d3a2b45_Fn> _249721_m = *it;
			{
				{
					auto &_match_expr{ (*(_249721_m))._field_Ident };
					
					if (_match_expr == jule::Str("Eq", 2)) {
						_case_begin_211c6116a:;
						{
							(*(_249647_s))._field_Operators._field_Eq=_20d451540_checkStructInsOp(_self_, &(_249647_s), &(_249721_m), static__20d45a934_Eq);
							(*(_249647_s))._field_Comparable=((*(_249647_s))._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str("Gt", 2)) {
						_case_begin_211c611e2:;
						{
							(*(_249647_s))._field_Operators._field_Gt=_20d451540_checkStructInsOp(_self_, &(_249647_s), &(_249721_m), static__20d45abed_Gt);
						}
					}
					else if (_match_expr == jule::Str("GtEq", 4)) {
						_case_begin_211c61269:;
						{
							(*(_249647_s))._field_Operators._field_GtEq=_20d451540_checkStructInsOp(_self_, &(_249647_s), &(_249721_m), static__20d45aeb7_GtEq);
						}
					}
					else if (_match_expr == jule::Str("Lt", 2)) {
						_case_begin_211c612e1:;
						{
							(*(_249647_s))._field_Operators._field_Lt=_20d451540_checkStructInsOp(_self_, &(_249647_s), &(_249721_m), static__20d45b281_Lt);
						}
					}
					else if (_match_expr == jule::Str("LtEq", 4)) {
						_case_begin_211c61368:;
						{
							(*(_249647_s))._field_Operators._field_LtEq=_20d451540_checkStructInsOp(_self_, &(_249647_s), &(_249721_m), static__20d45b54a_LtEq);
						}
					}
					else if (_match_expr == jule::Str("Shl", 3)) {
						_case_begin_211c613e0:;
						{
							(*(_249647_s))._field_Operators._field_Shl=_20d451540_checkStructInsOp(_self_, &(_249647_s), &(_249721_m), static__20d45bb88_Shl);
						}
					}
					else if (_match_expr == jule::Str("Shr", 3)) {
						_case_begin_211c61467:;
						{
							(*(_249647_s))._field_Operators._field_Shr=_20d451540_checkStructInsOp(_self_, &(_249647_s), &(_249721_m), static__20d45be52_Shr);
						}
					}
					else if (_match_expr == jule::Str("Add", 3)) {
						_case_begin_211c614de:;
						{
							(*(_249647_s))._field_Operators._field_Add=_20d451540_checkStructInsOp(_self_, &(_249647_s), &(_249721_m), static__20d45c21b_Add);
						}
					}
					else if (_match_expr == jule::Str("Sub", 3)) {
						_case_begin_211c61566:;
						{
							(*(_249647_s))._field_Operators._field_Sub=_20d451540_checkStructInsOp(_self_, &(_249647_s), &(_249721_m), static__20d45c4d5_Sub);
						}
					}
					else if (_match_expr == jule::Str("Div", 3)) {
						_case_begin_211c615dd:;
						{
							(*(_249647_s))._field_Operators._field_Div=_20d451540_checkStructInsOp(_self_, &(_249647_s), &(_249721_m), static__20d45c79e_Div);
						}
					}
					else if (_match_expr == jule::Str("Mul", 3)) {
						_case_begin_211c61665:;
						{
							(*(_249647_s))._field_Operators._field_Mul=_20d451540_checkStructInsOp(_self_, &(_249647_s), &(_249721_m), static__20d45ca68_Mul);
						}
					}
					else if (_match_expr == jule::Str("Mod", 3)) {
						_case_begin_211c616dc:;
						{
							(*(_249647_s))._field_Operators._field_Mod=_20d451540_checkStructInsOp(_self_, &(_249647_s), &(_249721_m), static__20d45cd32_Mod);
						}
					}
					else if (_match_expr == jule::Str("BitAnd", 6)) {
						_case_begin_211c61764:;
						{
							(*(_249647_s))._field_Operators._field_BitAnd=_20d451540_checkStructInsOp(_self_, &(_249647_s), &(_249721_m), static__20d45d0eb_BitAnd);
						}
					}
					else if (_match_expr == jule::Str("BitOr", 5)) {
						_case_begin_211c617db:;
						{
							(*(_249647_s))._field_Operators._field_BitOr=_20d451540_checkStructInsOp(_self_, &(_249647_s), &(_249721_m), static__20d45d3b5_BitOr);
						}
					}
					else if (_match_expr == jule::Str("BitXor", 6)) {
						_case_begin_211c61863:;
						{
							(*(_249647_s))._field_Operators._field_BitXor=_20d451540_checkStructInsOp(_self_, &(_249647_s), &(_249721_m), static__20d45d67e_BitXor);
						}
					}
					else if (_match_expr == jule::Str("Neg", 3)) {
						_case_begin_211c618da:;
						{
							(*(_249647_s))._field_Operators._field_Neg=_20d451540_checkStructInsOp(_self_, &(_249647_s), &(_249721_m), static__20d45dcbc_Neg);
						}
					}
					else if (_match_expr == jule::Str("Pos", 3)) {
						_case_begin_211c61962:;
						{
							(*(_249647_s))._field_Operators._field_Pos=_20d451540_checkStructInsOp(_self_, &(_249647_s), &(_249721_m), static__20d45e086_Pos);
						}
					}
					else if (_match_expr == jule::Str("BitNot", 6)) {
						_case_begin_211c619d9:;
						{
							(*(_249647_s))._field_Operators._field_BitNot=_20d451540_checkStructInsOp(_self_, &(_249647_s), &(_249721_m), static__20d45e350_BitNot);
						}
					}
					else if (_match_expr == jule::Str("AddAssign", 9)) {
						_case_begin_211c61a61:;
						{
							(*(_249647_s))._field_Operators._field_AddAssign=_20d451540_checkStructInsOp(_self_, &(_249647_s), &(_249721_m), static__20d45e98d_AddAssign);
						}
					}
					else if (_match_expr == jule::Str("SubAssign", 9)) {
						_case_begin_211c61ad8:;
						{
							(*(_249647_s))._field_Operators._field_SubAssign=_20d451540_checkStructInsOp(_self_, &(_249647_s), &(_249721_m), static__20d45ec57_SubAssign);
						}
					}
					else if (_match_expr == jule::Str("DivAssign", 9)) {
						_case_begin_211c61b60:;
						{
							(*(_249647_s))._field_Operators._field_DivAssign=_20d451540_checkStructInsOp(_self_, &(_249647_s), &(_249721_m), static__20d460021_DivAssign);
						}
					}
					else if (_match_expr == jule::Str("MulAssign", 9)) {
						_case_begin_211c61bd7:;
						{
							(*(_249647_s))._field_Operators._field_MulAssign=_20d451540_checkStructInsOp(_self_, &(_249647_s), &(_249721_m), static__20d4602da_MulAssign);
						}
					}
					else if (_match_expr == jule::Str("ModAssign", 9)) {
						_case_begin_211c61c5e:;
						{
							(*(_249647_s))._field_Operators._field_ModAssign=_20d451540_checkStructInsOp(_self_, &(_249647_s), &(_249721_m), static__20d4605a4_ModAssign);
						}
					}
					else if (_match_expr == jule::Str("ShlAssign", 9)) {
						_case_begin_211c61cd6:;
						{
							(*(_249647_s))._field_Operators._field_ShlAssign=_20d451540_checkStructInsOp(_self_, &(_249647_s), &(_249721_m), static__20d46086d_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str("ShrAssign", 9)) {
						_case_begin_211c61d5d:;
						{
							(*(_249647_s))._field_Operators._field_ShrAssign=_20d451540_checkStructInsOp(_self_, &(_249647_s), &(_249721_m), static__20d460b37_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str("BitOrAssign", 11)) {
						_case_begin_211c61dd5:;
						{
							(*(_249647_s))._field_Operators._field_BitOrAssign=_20d451540_checkStructInsOp(_self_, &(_249647_s), &(_249721_m), static__20d460e01_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str("BitAndAssign", 12)) {
						_case_begin_211c61e5c:;
						{
							(*(_249647_s))._field_Operators._field_BitAndAssign=_20d451540_checkStructInsOp(_self_, &(_249647_s), &(_249721_m), static__20d4611ba_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str("BitXorAssign", 12)) {
						_case_begin_211c61ed4:;
						{
							(*(_249647_s))._field_Operators._field_BitXorAssign=_20d451540_checkStructInsOp(_self_, &(_249647_s), &(_249721_m), static__20d461484_BitXorAssign);
						}
					}
					_match_end_211c60dc3:;
				};
			}
			_iter_next_211c601d0:;
			++it;
			goto _iter_begin_211c601d0;
		}
		_iter_end_211c601d0:;
	};
}



inline void _20d452b07_precheckStructType(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d38c58b_Struct>* _256043_s) {
	if ((*((*(_256043_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_256043_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_256043_s))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_20d39066b_StructIns> _257121_ins = _20d38ca0e_instance((*(_256043_s)));;
		(*(_257121_ins))._field_Checked=true;
		_20d38cd1c_appendInstance((*(_256043_s)).ptr(), &(_257121_ins));
		_20d451d37_precheckStructIns(_self_, &(_257121_ins), nullptr);
	};
	_20d45284e_checkStructInsOperators(_self_, (*((*(_256043_s))))._field_Instances[0LL]);
}



inline void _20d452d05_precheckStructTypes(jule::Ptr<_20d435de8_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211c77e95:;
		if (it != expr_end) {
			jule::Ptr<_20d38c58b_Struct> _258121_s = *it;
			{
				_20d452b07_precheckStructType(_self_, &(_258121_s));
			}
			_iter_next_211c77e95:;
			++it;
			goto _iter_begin_211c77e95;
		}
		_iter_end_211c77e95:;
	};
}



inline void _20d4530ad_checkRets(_20d435de8_Sema* _self_, jule::Ptr<_20d3a5a49_FnIns>* _258633_f) {
	if (_20d3a30b8_IsVoid((*((*(_258633_f))))._field_Decl.ptr())) {
		return;;
	};
	_20d455533_missingRetChecker _259013_mrc = static__20d4558eb_new();;
	jule::Bool _259113_ok = _20d456a1d_check(&_259013_mrc, (*((*(_258633_f))))._field_Scope);;
	if ((!(_259113_ok))) {
		_20d438a33_pushErr(_self_, (*((*((*(_258633_f))))._field_Decl))._field_Token, jule::Str("missing return at end of function", 33), jule::Slice<jule::Any>());
	};
}



inline void _20d453421_checkFnInsSc(_20d435de8_Sema* _self_, jule::Ptr<_20d3a5a49_FnIns>* _259736_f, jule::Ptr<_20d3ea9a1_scopeChecker>* _259752_sc) {
	_20d4341e3_appendRetVars(&((*((*((*(_259752_sc))))._field_table))._field_Vars), _259736_f);
	_20d4344ce_appendParamVars(&((*((*((*(_259752_sc))))._field_table))._field_Vars), _259736_f);
	_20d4347ba_appendGenericTypeAliases(&((*((*((*(_259752_sc))))._field_table))._field_TypeAliases), _259736_f);
	_20d40c463_check((*(_259752_sc)), &((*((*((*(_259736_f))))._field_Decl))._field_Scope), &((*((*(_259736_f))))._field_Scope));
	if ((!(_20d3ed575_stopped((*(_259752_sc)).ptr())))) {
		_20d4530ad_checkRets(_self_, _259736_f);
	};
}



inline void _20d453784_checkFnInsCaller(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d3a5a49_FnIns>* _261041_f, jule::Ptr<_20d3510bb_Token> _261056_caller) {
	if ((*((*((*(_261041_f))))._field_Decl))._field_Binded) {
		return;;
	};
	jule::Ptr<_20d081e40_SymbolTable> _261517_old = (*((*((*((*(_261041_f))))._field_Decl))._field_sema))._field_file;;
	__JULE_DEFER({
		_20d438615_setCurrentFile((*((*((*(_261041_f))))._field_Decl))._field_sema.ptr(), _261517_old);
	});;
	jule::Ptr<_20d081e40_SymbolTable> _261717_file = _20d434b3e_findFile(&((*((*((*((*(_261041_f))))._field_Decl))._field_sema))._field_files), &((*((*((*((*(_261041_f))))._field_Decl))._field_Token))._field_File));;
	if ((_261717_file != nullptr)) {
		_20d438615_setCurrentFile((*((*((*(_261041_f))))._field_Decl))._field_sema.ptr(), _261717_file);
	};
	jule::Ptr<_20d3ea9a1_scopeChecker> _262217_sc = _20d3e0842_newScopeChecker(&((*((*((*(_261041_f))))._field_Decl))._field_sema), (*(_261041_f)));;
	(*(_262217_sc))._field_calledFrom=_261056_caller;
	_20d453421_checkFnInsSc(_self_.ptr(), _261041_f, &(_262217_sc));
	if (((*((*((*(_261041_f))))._field_Decl))._field_sema != _self_)) {
		((*(_self_))._field_errors).append((*((*((*((*(_261041_f))))._field_Decl))._field_sema))._field_errors);;
		(*((*((*((*(_261041_f))))._field_Decl))._field_sema))._field_errors=nullptr;
	};
}



inline void _20d453a3c_checkFnIns(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d3a5a49_FnIns>* _263235_f) {
	_20d453784_checkFnInsCaller(_self_, _263235_f, nullptr);
}



inline void _20d453ce5_checkFunc(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d3a2b45_Fn>* _263634_f) {
	if ((*((*(_263634_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_263634_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_263634_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211c85c61:;
		if (it != expr_end) {
			jule::Ptr<_20d3a5a49_FnIns> _264621_ins = *it;
			{
				_20d453a3c_checkFnIns(_self_, &(_264621_ins));
			}
			_iter_next_211c85c61:;
			++it;
			goto _iter_begin_211c85c61;
		}
		_iter_end_211c85c61:;
	};
}



inline void _20d45409d_checkTestFn(_20d435de8_Sema* _self_, jule::Ptr<_20d3a5a49_FnIns>* _265135_f) {
	if ((*((*((*(_265135_f))))._field_Decl))._field_Public) {
		_20d438a33_pushErr(_self_, (*((*((*(_265135_f))))._field_Decl))._field_Token, jule::Str("test function cannot be public", 30), jule::Slice<jule::Any>());
		_20d438d96_pushSuggestion(_self_, jule::Str("dont use identifier which is starts with capital letter to avoid define as public", 81), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*((*((*(_265135_f))))._field_Decl))._field_Unsafety || (!(_20d3a30b8_IsVoid((*((*(_265135_f))))._field_Decl.ptr())))) || ((*((*((*(_265135_f))))._field_Decl))._field_Generics.len() != 0LL)) || ((*((*(_265135_f))))._field_Params.len() != 1LL)) || (*((*((*((*(_265135_f))))._field_Decl))._field_Params[0LL]))._field_Mutable) || (*((*((*((*(_265135_f))))._field_Decl))._field_Params[0LL]))._field_Reference)) {
		_20d438a33_pushErr(_self_, (*((*((*(_265135_f))))._field_Decl))._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_20d438d96_pushSuggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_20d4eab39_Sptr> _266917_sptr = _20d4e1e1b_Sptr((*((*((*(_265135_f))))._field_Params[0LL]))._field_Kind.ptr());;
	if ((_266917_sptr == nullptr)) {
		_20d438a33_pushErr(_self_, (*((*((*(_265135_f))))._field_Decl))._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_20d438d96_pushSuggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_20d39066b_StructIns> _267613_s = _20d4e3208_Struct((*(_266917_sptr))._field_Elem.ptr());;
	if (((_267613_s == nullptr) || (!(_20d41a295_isStdPackage(&((*((*((*((*(_267613_s))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str("testing", 7)))))) {
		_20d438a33_pushErr(_self_, (*((*((*(_265135_f))))._field_Decl))._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_20d438d96_pushSuggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _20d454356_precheckFunc(jule::Ptr<_20d435de8_Sema> _self_, jule::Ptr<_20d3a2b45_Fn>* _268437_f) {
	if ((*((*(_268437_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_268437_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_268437_f))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_20d3a5a49_FnIns> _269521_ins = _20d3a411e_instanceForce((*(_268437_f)));;
		{ jule::Slice<jule::Ptr<_20d3a5a49_FnIns>> &__jule_push_dest = (*((*(_268437_f))))._field_Instances; __jule_push_dest.push(_269521_ins); };
		jule::Bool _269717_ok = _20d443b3c_reloadFnInsTypes(_self_, _269521_ins);;
		(*(_269521_ins))._field_reloaded=true;
		if ((_269717_ok && _20d50a154_hasDirective(&((*((*(_268437_f))))._field_Directives), jule::Str("test", 4)))) {
			_20d45409d_checkTestFn(_self_.ptr(), &(_269521_ins));
		};
	};
}



inline void _20d454554_precheckFuncs(jule::Ptr<_20d435de8_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211c946dc:;
		if (it != expr_end) {
			jule::Ptr<_20d3b5dde_Trait> _270821_decl = *it;
			{
				{
					auto expr = &((*(_270821_decl))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_211c95325:;
					if (it != expr_end) {
						jule::Ptr<_20d3a2b45_Fn> _270925_m = *it;
						{
							_20d454356_precheckFunc(_self_, &(_270925_m));
						}
						_iter_next_211c95325:;
						++it;
						goto _iter_begin_211c95325;
					}
					_iter_end_211c95325:;
				};
			}
			_iter_next_211c946dc:;
			++it;
			goto _iter_begin_211c946dc;
		}
		_iter_end_211c946dc:;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211c95cb5:;
		if (it != expr_end) {
			jule::Ptr<_20d3a2b45_Fn> _271321_decl = *it;
			{
				_20d454356_precheckFunc(_self_, &(_271321_decl));
			}
			_iter_next_211c95cb5:;
			++it;
			goto _iter_begin_211c95cb5;
		}
		_iter_end_211c95cb5:;
	};
}



inline void _20d454752_checkFuncs(jule::Ptr<_20d435de8_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211c9658a:;
		if (it != expr_end) {
			jule::Ptr<_20d3a2b45_Fn> _272021_decl = *it;
			{
				_20d453ce5_checkFunc(_self_, &(_272021_decl));
			}
			_iter_next_211c9658a:;
			++it;
			goto _iter_begin_211c9658a;
		}
		_iter_end_211c9658a:;
	};
}



inline void _20d454950_checkPackageTypes(jule::Ptr<_20d435de8_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211c9748c:;
		if (it != expr_end) {
			jule::Ptr<_20d081e40_SymbolTable> _272821_f = *it;
			{
				_20d438615_setCurrentFile(_self_.ptr(), _272821_f);
				_20d45082a_checkGlobals(_self_);
				_20d454554_precheckFuncs(_self_);
				_20d452d05_precheckStructTypes(_self_);
			}
			_iter_next_211c9748c:;
			++it;
			goto _iter_begin_211c9748c;
		}
		_iter_end_211c9748c:;
	};
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211c99291:;
		if (it != expr_end) {
			jule::Ptr<_20d081e40_SymbolTable> _273921_f = *it;
			{
				_20d438615_setCurrentFile(_self_.ptr(), _273921_f);
				_20d454752_checkFuncs(_self_);
				_20d452596_checkStructTypes(_self_);
			}
			_iter_next_211c99291:;
			++it;
			goto _iter_begin_211c99291;
		}
		_iter_end_211c99291:;
	};
}



inline void _20d454b4d_setFileSemaFields(jule::Ptr<_20d435de8_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211c99c64:;
		if (it != expr_end) {
			jule::Ptr<_20d3a2b45_Fn> _274721_f = *it;
			{
				(*(_274721_f))._field_sema=_self_;
			}
			_iter_next_211c99c64:;
			++it;
			goto _iter_begin_211c99c64;
		}
		_iter_end_211c99c64:;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211c9b491:;
		if (it != expr_end) {
			jule::Ptr<_20d38c58b_Struct> _275021_st = *it;
			{
				(*(_275021_st))._field_sema=_self_;
			}
			_iter_next_211c9b491:;
			++it;
			goto _iter_begin_211c9b491;
		}
		_iter_end_211c9b491:;
	};
}



inline void _20d454d4b_setSemaFields(jule::Ptr<_20d435de8_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211c9beb9:;
		if (it != expr_end) {
			jule::Ptr<_20d081e40_SymbolTable> _275621_file = *it;
			{
				_20d438615_setCurrentFile(_self_.ptr(), _275621_file);
				_20d454b4d_setFileSemaFields(_self_);
			}
			_iter_next_211c9beb9:;
			++it;
			goto _iter_begin_211c9beb9;
		}
		_iter_end_211c9beb9:;
	};
}



inline void _20d455104_check(jule::Ptr<_20d435de8_Sema> _self_, jule::Slice<jule::Ptr<_20d081e40_SymbolTable>>* _276230_files) {
	(*(_self_))._field_files=(*(_276230_files));
	_20d43c4a4_checkImports(_self_.ptr());
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_20d454d4b_setSemaFields(_self_);
	_20d43ce99_checkInherits(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_20d43c8a0_implImpls(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_20d43ca9d_checkEnums(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_20d44e83a_checkPackageDecls(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_20d454950_checkPackageTypes(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _20d435de8_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags << ", ";
	_Stream << "meta:" << _Src._field_meta;
	_Stream << "}";
	return _Stream;
}



inline _20d455533_missingRetChecker static__20d4558eb_new(void) {
	return _20d455533_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU, 0), };;
}



inline jule::Bool _20d455c09_checkConditional(_20d455533_missingRetChecker* _self_, jule::Ptr<_20d3e42d5_Conditional> _281035_c) {
	{
		auto expr = &((*(_281035_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211ca2420:;
		if (it != expr_end) {
			jule::Ptr<_20d3e3aba_If> _281121_elif = *it;
			{
				if ((_281121_elif == nullptr)) {
					return false;;
				};
				if ((!(_20d4566cc_checkScope(_self_, (*(_281121_elif))._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_211ca2420:;
			++it;
			goto _iter_begin_211ca2420;
		}
		_iter_end_211ca2420:;
	};
	return (((*(_281035_c))._field_Default != nullptr) && _20d4566cc_checkScope(_self_, (*((*(_281035_c))._field_Default))._field_Scope));;
}



inline jule::Bool _20d45604a_checkMatch(_20d455533_missingRetChecker* _self_, jule::Ptr<_20d3e77d3_Match> _282229_m) {
	{
		auto expr = &((*(_282229_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211ca39c6:;
		if (it != expr_end) {
			jule::Ptr<_20d3e841b_Case> _282321_c = *it;
			{
				if ((_282321_c == nullptr)) {
					return false;;
				};
				jule::I64 _282717_n = (*(_self_))._field_breaked.len();;
				jule::Bool _282817_ok = _20d4566cc_checkScope(_self_, (*(_282321_c))._field_Scope);;
				{
					
					if ((_282717_n != (*(_self_))._field_breaked.len())) {
						_case_begin_211ca6853:;
						{
							return false;;
						}
					}
					else if ((!(_282817_ok))) {
						_case_begin_211ca68b9:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_211ca6941;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_211ca6941:;
						{
							(*(_self_))._field_falled=false;
							if (((*(_282321_c))._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_211ca39c6;
						}
					}
					_match_end_211ca67a9:;
				};
			}
			_iter_next_211ca39c6:;
			++it;
			goto _iter_begin_211ca39c6;
		}
		_iter_end_211ca39c6:;
	};
	return (((*(_282229_m))._field_Default != nullptr) && _20d4566cc_checkScope(_self_, (*((*(_282229_m))._field_Default))._field_Scope));;
}



inline jule::Bool _20d45638b_checkInfIter(_20d455533_missingRetChecker* _self_, jule::Ptr<_20d3e45d2_InfIter> _284831_it) {
	jule::I64 _284913_n = (*(_self_))._field_breaked.len();;
	if (_20d4566cc_checkScope(_self_, (*(_284831_it))._field_Scope)) {
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _284913_n);
		return true;;
	};
	if ((_284913_n != (*(_self_))._field_breaked.len())) {
		jule::Uintptr _285517_itaddr = static_cast<jule::Uintptr>(_284831_it);;
		{
			auto expr = (*(_self_))._field_breaked.slice(_284913_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_211caa6ae:;
			if (it != expr_end) {
				jule::Uintptr _285620_addr = *it;
				{
					if ((_285517_itaddr == _285620_addr)) {
						(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _284913_n);
						return false;;
					};
				}
				_iter_next_211caa6ae:;
				++it;
				goto _iter_begin_211caa6ae;
			}
			_iter_end_211caa6ae:;
		};
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _284913_n);
	};
	return true;;
}



inline jule::Bool _20d4566cc_checkScope(_20d455533_missingRetChecker* _self_, jule::Ptr<_20d3e369c_Scope> _286729_s) {
	if ((_286729_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &((*(_286729_s))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211cabc32:;
		if (it != expr_end) {
			jule::Any _287121_st = *it;
			{
				{
					auto &_match_expr{ _287121_st };
					
					if (_match_expr.type == &__jule_any_type49) {
						_case_begin_211caca46:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type50) {
						_case_begin_211cacaac:;
						{
							jule::Uintptr _287721_addr = (*(_287121_st.cast_ptr<_20d3e5c43_BreakSt>(&__jule_any_type50)))._field_It;;
							if ((_287721_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_287721_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type42) {
						_case_begin_211cacb23:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type37) {
						_case_begin_211cacb9a:;
						{
							if (_20d45638b_checkInfIter(_self_, _287121_st.cast_ptr<_20d3e45d2_InfIter>(&__jule_any_type37))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type51) {
						_case_begin_211cacc22:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type22) {
						_case_begin_211cacc99:;
						{
							if (_20d4566cc_checkScope(_self_, _287121_st.cast_ptr<_20d3e369c_Scope>(&__jule_any_type22))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type24) {
						_case_begin_211cacd21:;
						{
							{
								auto &_match_expr{ (*(_287121_st.cast_ptr<_20d087165_Data>(&__jule_any_type24)))._field_Model };
								
								if (_match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type23) {
									_case_begin_211cb183b:;
									{
										return true;;
									}
								}
								_match_end_211cb17a3:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type36) {
						_case_begin_211cacd98:;
						{
							if (_20d455c09_checkConditional(_self_, _287121_st.cast_ptr<_20d3e42d5_Conditional>(&__jule_any_type36))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type48) {
						_case_begin_211cace20:;
						{
							if (_20d45604a_checkMatch(_self_, _287121_st.cast_ptr<_20d3e77d3_Match>(&__jule_any_type48))) {
								return true;;
							};
						}
					}
					_match_end_211cac936:;
				};
			}
			_iter_next_211cabc32:;
			++it;
			goto _iter_begin_211cabc32;
		}
		_iter_end_211cabc32:;
	};
	return false;;
}



inline jule::Bool _20d456a1d_check(_20d455533_missingRetChecker* _self_, jule::Ptr<_20d3e369c_Scope> _291324_s) {
	return _20d4566cc_checkScope(_self_, _291324_s);;
}







std::ostream &operator<<(std::ostream &_Stream, _20d455533_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d457920_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "Range:" << _Src._field_Range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20d458e60_IsInitialized(_20d458aca_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _20d4591e6_IsTypeInferred(_20d458aca_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*((*(_self_))._field_Kind))._field_Decl == nullptr));;
}



inline jule::Bool _20d45947c_untypedConstant(_20d458aca_Var* _self_) {
	return (_20d4591e6_IsTypeInferred(_self_) && (*((*((*(_self_))._field_Value))._field_Data))._field_untyped);;
}







std::ostream &operator<<(std::ostream &_Stream, _20d458aca_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "IterRelation:" << _Src._field_IterRelation << ", ";
	_Stream << "RetOrder:" << _Src._field_RetOrder << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__20d45a02c_Dispose(jule::Ptr<_20d3a2b45_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && ((*(_1023_f))._field_Owner != nullptr)) && (*(_1023_f))._field_Ident.equal("Dispose", 7)) && (!((*(_1023_f))._field_Statically))) && (!((*(_1023_f))._field_Unsafety))) && _20d3a30b8_IsVoid(_1023_f.ptr())) && ((*(_1023_f))._field_Generics.len() == 0LL)) && ((*(_1023_f))._field_Params.len() == 1LL)) && (*((*(_1023_f))._field_Params[0LL]))._field_Mutable) && (!(_20d3a1a23_IsRef((*(_1023_f))._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__20d45a2e6_Str(jule::Ptr<_20d3a2b45_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || ((*(_2419_f))._field_Owner == nullptr)) || (!(*(_2419_f))._field_Ident.equal("Str", 3))) || (*(_2419_f))._field_Statically) || (*(_2419_f))._field_Unsafety) || _20d3a30b8_IsVoid(_2419_f.ptr())) || ((*(_2419_f))._field_Generics.len() != 0LL)) || ((*(_2419_f))._field_Params.len() != 1LL)) || (*((*(_2419_f))._field_Params[0LL]))._field_Mutable) || _20d3a1a23_IsRef((*(_2419_f))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_20d3a5a49_FnIns> _3817_ins = (*(_2419_f))._field_Instances[0LL];;
	jule::Ptr<_20d4e710d_Prim> _3913_prim = _20d4e1b85_Prim((*(_3817_ins))._field_Result.ptr());;
	if ((_3913_prim == nullptr)) {
		return false;;
	};
	return _20d4ea595_IsStr(_3913_prim.ptr());;
}



inline jule::Bool static__20d45a66a_logical(jule::Ptr<_20d3a2b45_Fn>* _4624_f, jule::Str _4632_ident) {
	if (((((((((((((((*(_4624_f)) == nullptr) || ((*((*(_4624_f))))._field_Ident != _4632_ident)) || ((*((*(_4624_f))))._field_Owner == nullptr)) || ((*((*(_4624_f))))._field_Instances.len() == 0LL)) || (*((*(_4624_f))))._field_Statically) || (*((*(_4624_f))))._field_Unsafety) || _20d3a30b8_IsVoid((*(_4624_f)).ptr())) || ((*((*(_4624_f))))._field_Generics.len() != 0LL)) || ((*((*(_4624_f))))._field_Params.len() != 2LL)) || (*((*((*(_4624_f))))._field_Params[0LL]))._field_Mutable) || _20d3a1a23_IsRef((*((*(_4624_f))))._field_Params[0LL].ptr())) || (*((*((*(_4624_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_4624_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_20d3a5a49_FnIns> _6317_ins = (*((*(_4624_f))))._field_Instances[0LL];;
	jule::Ptr<_20d4e710d_Prim> _6413_prim = _20d4e1b85_Prim((*(_6317_ins))._field_Result.ptr());;
	if (((_6413_prim == nullptr) || (!(_20d4ea30e_IsBool(_6413_prim.ptr()))))) {
		return false;;
	};
	return ((*(_6317_ins))._field_Owner == _20d4e3208_Struct((*((*(_6317_ins))._field_Params[1LL]))._field_Kind.ptr()));;
}



inline jule::Bool static__20d45a934_Eq(jule::Ptr<_20d3a2b45_Fn> _7218_f) {
	return static__20d45a66a_logical(&(_7218_f), jule::Str("Eq", 2));;
}



inline jule::Bool static__20d45abed_Gt(jule::Ptr<_20d3a2b45_Fn> _7718_f) {
	return static__20d45a66a_logical(&(_7718_f), jule::Str("Gt", 2));;
}



inline jule::Bool static__20d45aeb7_GtEq(jule::Ptr<_20d3a2b45_Fn> _8220_f) {
	return static__20d45a66a_logical(&(_8220_f), jule::Str("GtEq", 4));;
}



inline jule::Bool static__20d45b281_Lt(jule::Ptr<_20d3a2b45_Fn> _8718_f) {
	return static__20d45a66a_logical(&(_8718_f), jule::Str("Lt", 2));;
}



inline jule::Bool static__20d45b54a_LtEq(jule::Ptr<_20d3a2b45_Fn> _9220_f) {
	return static__20d45a66a_logical(&(_9220_f), jule::Str("LtEq", 4));;
}



inline jule::Bool static__20d45b8be_result(jule::Ptr<_20d3a2b45_Fn>* _9623_f, jule::Str _9631_ident) {
	if (((((((((((((((*(_9623_f)) == nullptr) || ((*((*(_9623_f))))._field_Ident != _9631_ident)) || ((*((*(_9623_f))))._field_Owner == nullptr)) || ((*((*(_9623_f))))._field_Instances.len() == 0LL)) || (*((*(_9623_f))))._field_Statically) || (*((*(_9623_f))))._field_Unsafety) || _20d3a30b8_IsVoid((*(_9623_f)).ptr())) || ((*((*(_9623_f))))._field_Generics.len() != 0LL)) || ((*((*(_9623_f))))._field_Params.len() != 2LL)) || (*((*((*(_9623_f))))._field_Params[0LL]))._field_Mutable) || _20d3a1a23_IsRef((*((*(_9623_f))))._field_Params[0LL].ptr())) || (*((*((*(_9623_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_9623_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_20d3a5a49_FnIns> _11317_ins = (*((*(_9623_f))))._field_Instances[0LL];;
	return (_20d4e3208_Struct((*(_11317_ins))._field_Result.ptr()) == (*(_11317_ins))._field_Owner);;
}



inline jule::Bool static__20d45bb88_Shl(jule::Ptr<_20d3a2b45_Fn> _11819_f) {
	return static__20d45b8be_result(&(_11819_f), jule::Str("Shl", 3));;
}



inline jule::Bool static__20d45be52_Shr(jule::Ptr<_20d3a2b45_Fn> _12319_f) {
	return static__20d45b8be_result(&(_12319_f), jule::Str("Shr", 3));;
}



inline jule::Bool static__20d45c21b_Add(jule::Ptr<_20d3a2b45_Fn> _12819_f) {
	return static__20d45b8be_result(&(_12819_f), jule::Str("Add", 3));;
}



inline jule::Bool static__20d45c4d5_Sub(jule::Ptr<_20d3a2b45_Fn> _13319_f) {
	return static__20d45b8be_result(&(_13319_f), jule::Str("Sub", 3));;
}



inline jule::Bool static__20d45c79e_Div(jule::Ptr<_20d3a2b45_Fn> _13819_f) {
	return static__20d45b8be_result(&(_13819_f), jule::Str("Div", 3));;
}



inline jule::Bool static__20d45ca68_Mul(jule::Ptr<_20d3a2b45_Fn> _14319_f) {
	return static__20d45b8be_result(&(_14319_f), jule::Str("Mul", 3));;
}



inline jule::Bool static__20d45cd32_Mod(jule::Ptr<_20d3a2b45_Fn> _14819_f) {
	return static__20d45b8be_result(&(_14819_f), jule::Str("Mod", 3));;
}



inline jule::Bool static__20d45d0eb_BitAnd(jule::Ptr<_20d3a2b45_Fn> _15322_f) {
	return static__20d45b8be_result(&(_15322_f), jule::Str("BitAnd", 6));;
}



inline jule::Bool static__20d45d3b5_BitOr(jule::Ptr<_20d3a2b45_Fn> _15821_f) {
	return static__20d45b8be_result(&(_15821_f), jule::Str("BitOr", 5));;
}



inline jule::Bool static__20d45d67e_BitXor(jule::Ptr<_20d3a2b45_Fn> _16322_f) {
	return static__20d45b8be_result(&(_16322_f), jule::Str("BitXor", 6));;
}



inline jule::Bool static__20d45da03_unary(jule::Ptr<_20d3a2b45_Fn>* _16722_f, jule::Str _16730_ident) {
	if (((((((((((((*(_16722_f)) == nullptr) || ((*((*(_16722_f))))._field_Ident != _16730_ident)) || ((*((*(_16722_f))))._field_Owner == nullptr)) || ((*((*(_16722_f))))._field_Instances.len() == 0LL)) || (*((*(_16722_f))))._field_Statically) || (*((*(_16722_f))))._field_Unsafety) || _20d3a30b8_IsVoid((*(_16722_f)).ptr())) || ((*((*(_16722_f))))._field_Generics.len() != 0LL)) || ((*((*(_16722_f))))._field_Params.len() != 1LL)) || (*((*((*(_16722_f))))._field_Params[0LL]))._field_Mutable) || _20d3a1a23_IsRef((*((*(_16722_f))))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_20d3a5a49_FnIns> _18217_ins = (*((*(_16722_f))))._field_Instances[0LL];;
	return (_20d4e3208_Struct((*(_18217_ins))._field_Result.ptr()) == (*(_18217_ins))._field_Owner);;
}



inline jule::Bool static__20d45dcbc_Neg(jule::Ptr<_20d3a2b45_Fn> _18719_f) {
	return static__20d45da03_unary(&(_18719_f), jule::Str("Neg", 3));;
}



inline jule::Bool static__20d45e086_Pos(jule::Ptr<_20d3a2b45_Fn> _19219_f) {
	return static__20d45da03_unary(&(_19219_f), jule::Str("Pos", 3));;
}



inline jule::Bool static__20d45e350_BitNot(jule::Ptr<_20d3a2b45_Fn> _19722_f) {
	return static__20d45da03_unary(&(_19722_f), jule::Str("BitNot", 6));;
}



inline jule::Bool static__20d45e6c4_assign(jule::Ptr<_20d3a2b45_Fn>* _20123_f, jule::Str _20131_ident) {
	if (((((((((((((((*(_20123_f)) == nullptr) || ((*((*(_20123_f))))._field_Ident != _20131_ident)) || ((*((*(_20123_f))))._field_Owner == nullptr)) || ((*((*(_20123_f))))._field_Instances.len() == 0LL)) || (*((*(_20123_f))))._field_Statically) || (*((*(_20123_f))))._field_Unsafety) || (!(_20d3a30b8_IsVoid((*(_20123_f)).ptr())))) || ((*((*(_20123_f))))._field_Generics.len() != 0LL)) || ((*((*(_20123_f))))._field_Params.len() != 2LL)) || (!((*((*((*(_20123_f))))._field_Params[0LL]))._field_Mutable))) || _20d3a1a23_IsRef((*((*(_20123_f))))._field_Params[0LL].ptr())) || (*((*((*(_20123_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_20123_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__20d45e98d_AddAssign(jule::Ptr<_20d3a2b45_Fn> _22125_f) {
	return static__20d45e6c4_assign(&(_22125_f), jule::Str("AddAssign", 9));;
}



inline jule::Bool static__20d45ec57_SubAssign(jule::Ptr<_20d3a2b45_Fn> _22625_f) {
	return static__20d45e6c4_assign(&(_22625_f), jule::Str("SubAssign", 9));;
}



inline jule::Bool static__20d460021_DivAssign(jule::Ptr<_20d3a2b45_Fn> _23125_f) {
	return static__20d45e6c4_assign(&(_23125_f), jule::Str("DivAssign", 9));;
}



inline jule::Bool static__20d4602da_MulAssign(jule::Ptr<_20d3a2b45_Fn> _23625_f) {
	return static__20d45e6c4_assign(&(_23625_f), jule::Str("MulAssign", 9));;
}



inline jule::Bool static__20d4605a4_ModAssign(jule::Ptr<_20d3a2b45_Fn> _24125_f) {
	return static__20d45e6c4_assign(&(_24125_f), jule::Str("ModAssign", 9));;
}



inline jule::Bool static__20d46086d_ShlAssign(jule::Ptr<_20d3a2b45_Fn> _24625_f) {
	return static__20d45e6c4_assign(&(_24625_f), jule::Str("ShlAssign", 9));;
}



inline jule::Bool static__20d460b37_ShrAssign(jule::Ptr<_20d3a2b45_Fn> _25125_f) {
	return static__20d45e6c4_assign(&(_25125_f), jule::Str("ShrAssign", 9));;
}



inline jule::Bool static__20d460e01_BitOrAssign(jule::Ptr<_20d3a2b45_Fn> _25627_f) {
	return static__20d45e6c4_assign(&(_25627_f), jule::Str("BitOrAssign", 11));;
}



inline jule::Bool static__20d4611ba_BitAndAssign(jule::Ptr<_20d3a2b45_Fn> _26128_f) {
	return static__20d45e6c4_assign(&(_26128_f), jule::Str("BitAndAssign", 12));;
}



inline jule::Bool static__20d461484_BitXorAssign(jule::Ptr<_20d3a2b45_Fn> _26628_f) {
	return static__20d45e6c4_assign(&(_26628_f), jule::Str("BitXorAssign", 12));;
}







std::ostream &operator<<(std::ostream &_Stream, _20d4598de_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _20d06e3d3_pushErr(_20d06ddd8_typeCompatibilityChecker* _self_, jule::Str _11826_fmt, jule::Slice<jule::Any> _11839_args) {
	_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _11826_fmt, _11839_args);
}



inline jule::Bool _20d06e669_checkTrait(_20d06ddd8_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_20d4e037b_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_20d3b5dde_Trait> _12617_trt = _20d4e348e_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _12717_ref = false;;
	{
		
		if ((_20d4e1e1b_Sptr((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_211d0396b:;
			{
				_12717_ref=true;
				(*(_self_))._field_src=(*(_20d4e1e1b_Sptr((*(_self_))._field_src.ptr())))._field_Elem;
				if ((_20d4e3208_Struct((*(_self_))._field_src.ptr()) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_211d039e3;
			}
		}
		else if ((_20d4e3208_Struct((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_211d039e3:;
			{
				jule::Ptr<_20d39066b_StructIns> _13717_s = _20d4e3208_Struct((*(_self_))._field_src.ptr());;
				if ((!(_20d38dbdb_IsImplements((*(_13717_s))._field_Decl.ptr(), _12617_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_12717_ref)) && _20d06c9a8_traitHasReferenceReceiver(&(_12617_trt)))) {
					_20d06e3d3_pushErr(_self_, jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_20d4e348e_Trait((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_211d03a6a:;
			{
				jule::Ptr<_20d3b5dde_Trait> _14721_base = _20d4e348e_Trait((*(_self_))._field_src.ptr());;
				if ((_12617_trt == _14721_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_211d08553:;
				{
					auto expr = &((*(_14721_base))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_211d0893d:;
					if (it != expr_end) {
						jule::Ptr<_20d38c58b_Struct> _15220_s1 = *it;
						{
							{
								auto expr = &((*(_12617_trt))._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_211d0939a:;
								if (it != expr_end) {
									jule::Ptr<_20d38c58b_Struct> _15324_s2 = *it;
									{
										if ((_15220_s1 == _15324_s2)) {
											goto _iter_next_211d0893d;
										};
									}
									_iter_next_211d0939a:;
									++it;
									goto _iter_begin_211d0939a;
								}
								_iter_end_211d0939a:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_211d0893d:;
						++it;
						goto _iter_begin_211d0893d;
					}
					_iter_end_211d0893d:;
				};
				{
					auto expr = &((*(_12617_trt))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_211d086eb:;
					if (it != expr_end) {
						jule::Ptr<_20d3a2b45_Fn> _16025_m1 = *it;
						{
							jule::Ptr<_20d3a2b45_Fn> _16125_m2 = _20d3b6a8d_FindMethod(_14721_base.ptr(), (*(_16025_m1))._field_Ident);;
							if ((_16125_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_20d3a5a49_FnIns> _16521_m1k = _20d4426da_getTraitCheckFnKind((*(_self_))._field_s, &(_16025_m1));;
							jule::Ptr<_20d3a5a49_FnIns> _16621_m2k = _20d4426da_getTraitCheckFnKind((*(_self_))._field_s, &(_16125_m2));;
							if ((!(_20d3a69b2_equalTrait(_16521_m1k, &(_16621_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_211d086eb:;
						++it;
						goto _iter_begin_211d086eb;
					}
					_iter_end_211d086eb:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_211d038b1:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_211d0385b:;
	};
}



inline jule::Bool _20d06e900_checkPtr(_20d06ddd8_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_20d4e037b_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_20d4ee401_Ptr> _18117_dest = _20d4e21a2_Ptr((*(_self_))._field_dest.ptr());;
	if (_20d4eee3a_IsUnsafe(_18117_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _20d4de996_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _20d06eb86_checkPrim(_20d06ddd8_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*((*(_self_))._field_dest))._field_Variadic))) {
		jule::Ptr<_20d4e710d_Prim> _19017_prim = _20d4e1b85_Prim((*(_self_))._field_dest.ptr());;
		if (((_19017_prim != nullptr) && _20d4ea82b_IsAny(_19017_prim.ptr()))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _20d4de996_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _20d070082_typeEnum(_20d06ddd8_typeCompatibilityChecker* _self_, jule::Ptr<_20d3b9ce4_TypeEnum>* _19828_e, jule::Ptr<_20d4de28c_TypeKind>* _19847_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_19828_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211d11759:;
		if (it != expr_end) {
			jule::Ptr<_20d3b971c_TypeEnumItem> _19921_item = *it;
			{
				if (_20d4de996_Equal((*((*(_19921_item))._field_Kind))._field_Kind, (*(_19847_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_20d3b9ce4_TypeEnum> _20321_ke = _20d4e26be_TypeEnum((*((*(_19921_item))._field_Kind))._field_Kind.ptr());;
				if ((_20321_ke == nullptr)) {
					goto _iter_next_211d11759;
				};
				if (_20d070082_typeEnum(_self_, &(_20321_ke), _19847_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_211d11759:;
			++it;
			goto _iter_begin_211d11759;
		}
		_iter_end_211d11759:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _20d070318_checkTypeEnum(_20d06ddd8_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_20d4de996_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_20d3b9ce4_TypeEnum> _21817_e = _20d4e26be_TypeEnum((*(_self_))._field_dest.ptr());;
	__jule_func_result = _20d070082_typeEnum(_self_, &(_21817_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _20d07059e_check(_20d06ddd8_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_20d4e21a2_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _20d06e900_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_20d4e114b_NilCompatible((*(_self_))._field_dest.ptr())) {
		if (_20d4e037b_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_20d4e1b85_Prim((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_211d17265:;
			{
				__jule_func_result = _20d06eb86_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_20d4e26be_TypeEnum((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_211d1682a:;
			{
				__jule_func_result = _20d070318_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_20d4e348e_Trait((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_211d16891:;
			{
				__jule_func_result = _20d06e669_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_211d167b4:;
			{
				__jule_func_result = _20d4de996_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_211d16033:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20d06ddd8_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _20d07112c_pushErr(_20d070b87_assignTypeChecker* _self_, jule::Str _25426_fmt, jule::Slice<jule::Any> _25439_args) {
	_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _25426_fmt, _25439_args);
}



inline jule::Bool _20d0713b3_checkValidity(_20d070b87_assignTypeChecker* _self_) {
	jule::Bool _25917_valid = true;;
	{
		
		if ((_20d4e2e72_Fn((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_211d1a059:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _26217_f = _20d4e2e72_Fn((*((*(_self_))._field_d))._field_Kind.ptr());;
				{
					
					if (_20d3a6ece_IsBuiltin(_26217_f.ptr())) {
						_case_begin_211d1b885:;
						{
							_20d07112c_pushErr(_self_, jule::Str("builtin define cannot use as anonymous function", 47), jule::Slice<jule::Any>());
							_25917_valid=false;
						}
					}
					else if ((*((*(_26217_f))._field_Decl))._field_Binded) {
						_case_begin_211d1b90c:;
						{
							_20d07112c_pushErr(_self_, jule::Str("binded functions cannot use as anonymous function", 49), jule::Slice<jule::Any>());
							_25917_valid=false;
						}
					}
					else if (((!((*((*(_26217_f))._field_Decl))._field_Statically)) && _20d3a334e_IsMethod((*(_26217_f))._field_Decl.ptr()))) {
						_case_begin_211d1b984:;
						{
							_20d07112c_pushErr(_self_, jule::Str("non-static methods cannot use as anonymous function", 51), jule::Slice<jule::Any>());
							_25917_valid=false;
						}
					}
					else if ((((*((*(_26217_f))._field_Decl))._field_Generics.len() > 0LL) && ((*(_26217_f))._field_Generics.len() == 0LL))) {
						_case_begin_211d1ba0b:;
						{
							_20d07112c_pushErr(_self_, jule::Str("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
							_20d438d96_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("instantiate generic function to use as anonymous function", 57), jule::Slice<jule::Any>());
							_25917_valid=false;
						}
					}
					_match_end_211d1b7b9:;
				};
			}
		}
		else if ((_20d4e39ab_Tup((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_211d1a0d1:;
			{
				_20d07112c_pushErr(_self_, jule::Str("tuples cannot assign to single define in same time", 50), jule::Slice<jule::Any>());
				_25917_valid=false;
			}
		}
		_match_end_211d19e9e:;
	};
	return _25917_valid;;
}



inline jule::Bool _20d071649_checkConst(_20d070b87_assignTypeChecker* _self_) {
	if (((((!(_20d087a39_IsConst((*(_self_))._field_d.ptr()))) || (_20d4e1b85_Prim((*(_self_))._field_dest.ptr()) == nullptr)) || (_20d4e1b85_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) == nullptr)) || (!(_20b065123_IsNum((*(_20d4e1b85_Prim((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Kind))))) {
		return false;;
	};
	if ((!__jule_any_type19_compare((*((*(_self_))._field_d))._field_Model, (*((*(_self_))._field_d))._field_Constant))) {
		return false;;
	};
	jule::Str _29913_kind = (*(_20d4e1b85_Prim((*(_self_))._field_dest.ptr())))._field_Kind;;
	{
		
		if (_20b064d59_IsFloat(_29913_kind)) {
			_case_begin_211d24618:;
			{
				if ((!(_20d06cd3d_floatAssignable(&(_29913_kind), &((*(_self_))._field_d))))) {
					_20d07112c_pushErr(_self_, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*((*((*(_self_))._field_d))._field_Constant))._field_Kind=_29913_kind;
			}
		}
		else if (_20b064a18_IsInt(_29913_kind)) {
			_case_begin_211d24690:;
			{
				if ((!(_20d06d8ee_intAssignable(_29913_kind, &((*(_self_))._field_d))))) {
					_20d07112c_pushErr(_self_, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*((*((*(_self_))._field_d))._field_Constant))._field_Kind=_29913_kind;
			}
		}
		else {
			_case_begin_211d2456e:;
			{
				return false;;
			}
		}
		_match_end_211d24519:;
	};
	return true;;
}



inline jule::Bool _20d0718d0_isPrim(_20d070b87_assignTypeChecker* _self_) {
	if (((*((*(_self_))._field_dest))._field_Variadic || (*((*((*(_self_))._field_d))._field_Kind))._field_Variadic)) {
		return false;;
	};
	if ((_20d4e00e5_Binded((*(_self_))._field_dest.ptr()) || _20d4e00e5_Binded((*((*(_self_))._field_d))._field_Kind.ptr()))) {
		return false;;
	};
	return ((_20d4e1b85_Prim((*(_self_))._field_dest.ptr()) != nullptr) && (_20d4e1b85_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr));;
}



inline jule::Bool _20d071b66_checkCompatibility(_20d070b87_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_211d29783:;
			{
				return false;;
			}
		}
		else if ((!(_20d0713b3_checkValidity(_self_)))) {
			_case_begin_211d2980a:;
			{
				return false;;
			}
		}
		else if (_20d071649_checkConst(_self_)) {
			_case_begin_211d29882:;
			{
				return true;;
			}
		}
		else if ((_20d4e2438_Enum((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_211d29909:;
			{
				jule::Ptr<_20d4de28c_TypeKind> _34321_dkind = (*(_self_))._field_dest;;
				if ((_20d4e2438_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_34321_dkind=(*((*(_20d4e2438_Enum((*(_self_))._field_dest.ptr())))._field_Kind))._field_Kind;
				} else if ((_20d4e1b85_Prim((*(_self_))._field_dest.ptr()) == nullptr)) {
					goto _match_end_211d29651;
				};
				if (_20b061680_TypesAreCompatible((*(_20d4e1b85_Prim((*((*(_20d4e2438_Enum((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Kind))._field_Kind.ptr())))._field_Kind, (*(_20d4e1b85_Prim(_34321_dkind.ptr())))._field_Kind)) {
					return true;;
				};
			}
		}
		else if (_20d0718d0_isPrim(_self_)) {
			_case_begin_211d29981:;
			{
				jule::Ptr<_20d4e710d_Prim> _35317_dest = _20d4e1b85_Prim((*(_self_))._field_dest.ptr());;
				if (_20d4ea82b_IsAny(_35317_dest.ptr())) {
					return true;;
				};
				jule::Ptr<_20d4e710d_Prim> _35721_src = _20d4e1b85_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (_20b061680_TypesAreCompatible((*(_35317_dest))._field_Kind, (*(_35721_src))._field_Kind)) {
					return true;;
				};
			}
		}
		_match_end_211d29651:;
	};
	return _20d4419e7_checkTypeCompatibility((*(_self_))._field_s, &((*(_self_))._field_dest), &((*((*(_self_))._field_d))._field_Kind), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _20d071dec_check(_20d070b87_assignTypeChecker* _self_) {
	jule::Bool _36613_ok = _20d071b66_checkCompatibility(_self_);;
	if ((_36613_ok && (!((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic)))) {
		_20d50ba07_applyImplicitCast(&((*(_self_))._field_dest), &((*(_self_))._field_d));
	};
	return _36613_ok;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d070b87_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _211d45b34_annotateConstraintElem(_20d072804_dynamicTypeAnnotation* _self_, jule::Ptr<_20d4de28c_TypeKind>* _38649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_211d4731c:;
			{
				jule::Ptr<_20d4de28c_TypeKind> _38921_elem = nullptr;;
				{
					
{
						_case_begin_211d48197:;
						{
							_38921_elem=(*(_20d4e2955_Arr((*(_38649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_211d480dc:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_20d36dc65_ArrTypeDecl>(&__jule_any_type73)))._field_Elem;
				return _20d07400e_annotateConstraint(_self_, &(_38921_elem));;
			}
		}
		_match_end_211d472b7:;
	};
	return false;;
}

inline jule::Bool _211d45491_annotateConstraintElem(_20d072804_dynamicTypeAnnotation* _self_, jule::Ptr<_20d4de28c_TypeKind>* _38649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_211d4ace3:;
			{
				jule::Ptr<_20d4de28c_TypeKind> _38921_elem = nullptr;;
				{
					
{
						_case_begin_211d4bbd4:;
						{
							_38921_elem=(*(_20d4e2bdb_Slc((*(_38649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_211d4bab3:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_20d36cdc9_SlcTypeDecl>(&__jule_any_type74)))._field_Elem;
				return _20d07400e_annotateConstraint(_self_, &(_38921_elem));;
			}
		}
		_match_end_211d4ac8d:;
	};
	return false;;
}

inline jule::Bool _211d4765d_annotateConstraintElem(_20d072804_dynamicTypeAnnotation* _self_, jule::Ptr<_20d4de28c_TypeKind>* _38649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_211d4e885:;
			{
				jule::Ptr<_20d4de28c_TypeKind> _38921_elem = nullptr;;
				{
					
{
						_case_begin_211d507dc:;
						{
							_38921_elem=(*(_20d4e21a2_Ptr((*(_38649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_211d50655:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_20d36d4c3_PtrTypeDecl>(&__jule_any_type75)))._field_Elem;
				return _20d07400e_annotateConstraint(_self_, &(_38921_elem));;
			}
		}
		_match_end_211d4e830:;
	};
	return false;;
}

inline jule::Bool _211d4d433_annotateConstraintElem(_20d072804_dynamicTypeAnnotation* _self_, jule::Ptr<_20d4de28c_TypeKind>* _38649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_211d52ec6:;
			{
				jule::Ptr<_20d4de28c_TypeKind> _38921_elem = nullptr;;
				{
					
{
						_case_begin_211d53e94:;
						{
							_38921_elem=(*(_20d4e1e1b_Sptr((*(_38649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_211d53c96:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_20d36ca44_SptrTypeDecl>(&__jule_any_type76)))._field_Elem;
				return _20d07400e_annotateConstraint(_self_, &(_38921_elem));;
			}
		}
		_match_end_211d52e71:;
	};
	return false;;
}



inline jule::Bool _20d0731ea_annotateConstraintMap(_20d072804_dynamicTypeAnnotation* _self_, jule::Ptr<_20d4de28c_TypeKind>* _40645_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_211d33a67:;
			{
				jule::Ptr<_20d4ecca1_Map> _40921_m = _20d4e3725_Map((*(_40645_k)).ptr());;
				jule::Ptr<_20d36e4b3_MapTypeDecl> _41021_m2 = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_20d36e4b3_MapTypeDecl>(&__jule_any_type77);;
				(*(_self_))._field_c=(*(_41021_m2))._field_Key;
				if ((!(_20d07400e_annotateConstraint(_self_, &((*(_40921_m))._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=(*(_41021_m2))._field_Val;
				__jule_func_result = _20d07400e_annotateConstraint(_self_, &((*(_40921_m))._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_211d33a12:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _20d07353b_annotateConstraintTup(_20d072804_dynamicTypeAnnotation* _self_, jule::Ptr<_20d4de28c_TypeKind>* _42145_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_211d3698d:;
			{
				jule::Ptr<_20d36d1c6_TupleTypeDecl> _42421_tup = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_20d36d1c6_TupleTypeDecl>(&__jule_any_type78);;
				jule::Ptr<_20d4ec201_Tuple> _42521_tup2 = _20d4e39ab_Tup((*(_42145_k)).ptr());;
				{
					auto expr = &((*(_42521_tup2))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_211d37e56:;
					if (it != expr_end) {
						jule::Ptr<_20d4de28c_TypeKind> _42625_t2 = *it;
						{
							{
								auto expr = &((*(_42421_tup))._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_211d37b37:;
								if (it != expr_end) {
									jule::Ptr<_20d36b999_TypeDecl> _42729_t = *it;
									{
										(*(_self_))._field_c=_42729_t;
										if (_20d07400e_annotateConstraint(_self_, &(_42625_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_211d37b37:;
									++it;
									goto _iter_begin_211d37b37;
								}
								_iter_end_211d37b37:;
							};
						}
						_iter_next_211d37e56:;
						++it;
						goto _iter_begin_211d37e56;
					}
					_iter_end_211d37e56:;
				};
			}
		}
		_match_end_211d36938:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _20d07387c_annotateConstraintFn(_20d072804_dynamicTypeAnnotation* _self_, jule::Ptr<_20d4de28c_TypeKind>* _43844_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type14) {
			_case_begin_211d3886e:;
			{
				jule::Ptr<_20d37d659_FnDecl> _44121_pf = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_20d37d659_FnDecl>(&__jule_any_type14);;
				jule::Ptr<_20d3a5a49_FnIns> _44221_f = _20d4e2e72_Fn((*(_43844_k)).ptr());;
				{
					auto expr = &((*(_44221_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_211d3ad6b:;
					if (it != expr_end) {
						jule::I64 _44318_i = it - expr->begin();
						jule::Ptr<_20d3a4a9d_ParamIns> _44325_fp = *it;
						{
							(*(_self_))._field_c=(*((*(_44121_pf))._field_Params[_44318_i]))._field_Kind;
							if (_20d07400e_annotateConstraint(_self_, &((*(_44325_fp))._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_211d3ad6b:;
						++it;
						_44318_i++;
						goto _iter_begin_211d3ad6b;
					}
					_iter_end_211d3ad6b:;
				};
				if (((*(_44121_pf))._field_Result != nullptr)) {
					(*(_self_))._field_c=(*((*(_44121_pf))._field_Result))._field_Kind;
					if (_20d07400e_annotateConstraint(_self_, &((*(_44221_f))._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_211d38819:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _20d073bbd_annotateConstraintIdent(_20d072804_dynamicTypeAnnotation* _self_, jule::Ptr<_20d4de28c_TypeKind>* _45947_k) {
	jule::Ptr<_20d36c0a4_IdentTypeDecl> _46017_ident = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_20d36c0a4_IdentTypeDecl>(&__jule_any_type20);;
	jule::Ptr<_20d39066b_StructIns> _46117_s = _20d4e3208_Struct((*(_45947_k)).ptr());;
	{
		auto expr = &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211d3e501:;
		if (it != expr_end) {
			jule::I64 _46213_i = it - expr->begin();
			jule::Ptr<_20d378ba4_GenericDecl> _46216_g = *it;
			{
				if (((*(_46216_g))._field_Ident == (*(_46017_ident))._field_Ident)) {
					jule::Ptr<_20d4dc8a6_InsGeneric> _46425_fg = (*((*(_self_))._field_f))._field_Generics[_46213_i];;
					if ((_46425_fg != nullptr)) {
						return false;;
					};
					_20d074372_pushGeneric(_self_, _45947_k, _46213_i);
					return true;;
				};
				if ((_46117_s == nullptr)) {
					goto _iter_next_211d3e501;
				};
				jule::Ptr<_20d36b999_TypeDecl> _47421_c = (*(_self_))._field_c;;
				{
					auto expr = &((*(_46017_ident))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_211d404e1:;
					if (it != expr_end) {
						jule::Ptr<_20d36b999_TypeDecl> _47525_ig = *it;
						{
							(*(_self_))._field_c=_47525_ig;
							{
								auto expr = &((*(_46117_s))._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_211d42e83:;
								if (it != expr_end) {
									jule::Ptr<_20d4dc8a6_InsGeneric> _47729_sg = *it;
									{
										if (_20d07400e_annotateConstraint(_self_, &((*(_47729_sg))._field_Kind))) {
											return true;;
										};
									}
									_iter_next_211d42e83:;
									++it;
									goto _iter_begin_211d42e83;
								}
								_iter_end_211d42e83:;
							};
						}
						_iter_next_211d404e1:;
						++it;
						goto _iter_begin_211d404e1;
					}
					_iter_end_211d404e1:;
				};
				(*(_self_))._field_c=_47421_c;
			}
			_iter_next_211d3e501:;
			++it;
			_46213_i++;
			goto _iter_begin_211d3e501;
		}
		_iter_end_211d3e501:;
	};
	return false;;
}



inline jule::Bool _20d07400e_annotateConstraint(_20d072804_dynamicTypeAnnotation* _self_, jule::Ptr<_20d4de28c_TypeKind>* _48842_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_211d42b75:;
			{
				return _20d073bbd_annotateConstraintIdent(_self_, _48842_k);;
			}
		}
		_match_end_211d42b20:;
	};
	{
		
		if ((_20d4e2955_Arr((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_211d4436e:;
			{
				return _211d45b34_annotateConstraintElem(_self_, _48842_k);;
			}
		}
		else if ((_20d4e2bdb_Slc((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_211d443e6:;
			{
				return _211d45491_annotateConstraintElem(_self_, _48842_k);;
			}
		}
		else if ((_20d4e21a2_Ptr((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_211d4446d:;
			{
				return _211d4765d_annotateConstraintElem(_self_, _48842_k);;
			}
		}
		else if ((_20d4e1e1b_Sptr((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_211d44b77:;
			{
				return _211d4d433_annotateConstraintElem(_self_, _48842_k);;
			}
		}
		else if ((_20d4e3725_Map((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_211d44bdd:;
			{
				return _20d0731ea_annotateConstraintMap(_self_, _48842_k);;
			}
		}
		else if ((_20d4e2e72_Fn((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_211d44c54:;
			{
				return _20d07387c_annotateConstraintFn(_self_, _48842_k);;
			}
		}
		else if ((_20d4e39ab_Tup((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_211d44cba:;
			{
				return _20d07353b_annotateConstraintTup(_self_, _48842_k);;
			}
		}
		else {
			_case_begin_211d44759:;
			{
				return false;;
			}
		}
		_match_end_211d44704:;
	};
}



inline void _20d074372_pushGeneric(_20d072804_dynamicTypeAnnotation* _self_, jule::Ptr<_20d4de28c_TypeKind>* _51335_k, jule::I64 _51349_i) {
	(*((*(_self_))._field_f))._field_Generics[_51349_i]=jule::new_ptr<_20d4dc8a6_InsGeneric>(_20d4dc8a6_InsGeneric{._field_Kind=(*(_51335_k)), });
	jule::Ptr<_20d378ba4_GenericDecl> _51517_gd = (*((*((*(_self_))._field_f))._field_Decl))._field_Generics[_51349_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211d57052:;
		if (it != expr_end) {
			jule::Ptr<_20d4de28c_TypeKind> _51621_ignored = *it;
			{
				if (((*(_51517_gd))._field_Ident == _20d4de655_Str(_51621_ignored.ptr()))) {
					(*(_51621_ignored))._field_Kind=(*((*(_51335_k))))._field_Kind;
				};
			}
			_iter_next_211d57052:;
			++it;
			goto _iter_begin_211d57052;
		}
		_iter_end_211d57052:;
	};
	if ((((*(_51517_gd))._field_Constraint == nullptr) || ((*((*(_51517_gd))._field_Constraint))._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=(*((*(_51517_gd))._field_Constraint))._field_Mask[0LL];
	_20d07400e_annotateConstraint(_self_, _51335_k);
}



inline jule::Bool _20d0746b3_annotatePrim(_20d072804_dynamicTypeAnnotation* _self_, jule::Ptr<_20d4de28c_TypeKind>* _52843_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _20d0766d7_annotateAny(_self_, _52843_k);
	return __jule_func_result;;
}



inline jule::Bool _20d074a04_annotateArr(_20d072804_dynamicTypeAnnotation* _self_, jule::Ptr<_20d4de28c_TypeKind>* _53242_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_20d4ed92d_Arr> _53317_parr = _20d4e2955_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_53317_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_20d4ed92d_Arr> _53717_arr = _20d4e2955_Arr((*(_53242_k)).ptr());;
	(*(_self_))._field_k=(&((*(_53317_parr))._field_Elem));
	__jule_func_result = _20d076a28_annotateKind(_self_, &((*(_53717_arr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _20d074d45_annotateSlc(_20d072804_dynamicTypeAnnotation* _self_, jule::Ptr<_20d4de28c_TypeKind>* _54242_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_20d4eb60c_Slc> _54317_pslc = _20d4e2bdb_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_54317_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_20d4eb60c_Slc> _54717_slc = _20d4e2bdb_Slc((*(_54242_k)).ptr());;
	(*(_self_))._field_k=(&((*(_54317_pslc))._field_Elem));
	__jule_func_result = _20d076a28_annotateKind(_self_, &((*(_54717_slc))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _20d075241_checkMapKey(_20d072804_dynamicTypeAnnotation* _self_, jule::Ptr<_20d4de28c_TypeKind>* _55241_k, jule::Ptr<_20d4de28c_TypeKind>* _55261_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_20d4de28c_TypeKind>* _55317_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_55241_k;
	__jule_func_result=_20d076a28_annotateKind(_self_, _55261_ck);
	(*(_self_))._field_k=_55317_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _20d075582_annotateMap(_20d072804_dynamicTypeAnnotation* _self_, jule::Ptr<_20d4de28c_TypeKind>* _56042_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_20d4ecca1_Map> _56117_pmap = _20d4e3725_Map((*((*(_self_))._field_k)).ptr());;
	if ((_56117_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_20d4ecca1_Map> _56517_m = _20d4e3725_Map((*(_56042_k)).ptr());;
	__jule_func_result = (_20d075241_checkMapKey(_self_, (&((*(_56117_pmap))._field_Key)), &((*(_56517_m))._field_Key)) && _20d075241_checkMapKey(_self_, (&((*(_56117_pmap))._field_Val)), &((*(_56517_m))._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _20d0758c3_annotateFn(_20d072804_dynamicTypeAnnotation* _self_, jule::Ptr<_20d4de28c_TypeKind>* _57041_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_20d3a5a49_FnIns> _57117_pf = _20d4e2e72_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_57117_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_20d3a5a49_FnIns> _57517_f = _20d4e2e72_Fn((*(_57041_k)).ptr());;
	{
		
		if (((*(_57117_pf))._field_Params.len() != (*(_57517_f))._field_Params.len())) {
			_case_begin_211d64878:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_20d3a30b8_IsVoid((*(_57117_pf))._field_Decl.ptr()) != _20d3a30b8_IsVoid((*(_57517_f))._field_Decl.ptr()))) {
			_case_begin_211d64900:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_211d64823:;
	};
	__jule_func_result=true;
	jule::Ptr<_20d4de28c_TypeKind>* _58417_old = (*(_self_))._field_k;;
	{
		auto expr = &((*(_57517_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211d649bb:;
		if (it != expr_end) {
			jule::I64 _58514_i = it - expr->begin();
			jule::Ptr<_20d3a4a9d_ParamIns> _58521_fp = *it;
			{
				(*(_self_))._field_k=(&((*((*(_57117_pf))._field_Params[_58514_i]))._field_Kind));
				__jule_func_result=(_20d076a28_annotateKind(_self_, &((*(_58521_fp))._field_Kind)) && __jule_func_result);
			}
			_iter_next_211d649bb:;
			++it;
			_58514_i++;
			goto _iter_begin_211d649bb;
		}
		_iter_end_211d649bb:;
	};
	if ((!(_20d3a30b8_IsVoid((*(_57117_pf))._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&((*(_57117_pf))._field_Result));
		__jule_func_result=(_20d076a28_annotateKind(_self_, &((*(_57517_f))._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_58417_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _20d075c14_annotatePtr(_20d072804_dynamicTypeAnnotation* _self_, jule::Ptr<_20d4de28c_TypeKind>* _59942_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_20d4ee401_Ptr> _60017_pptr = _20d4e21a2_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_60017_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_20d4ee401_Ptr> _60417_ptr = _20d4e21a2_Ptr((*(_59942_k)).ptr());;
	(*(_self_))._field_k=(&((*(_60017_pptr))._field_Elem));
	__jule_func_result = _20d076a28_annotateKind(_self_, &((*(_60417_ptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _20d076055_annotateSptr(_20d072804_dynamicTypeAnnotation* _self_, jule::Ptr<_20d4de28c_TypeKind>* _60943_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_20d4eab39_Sptr> _61017_ssptr = _20d4e1e1b_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_61017_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_20d4eab39_Sptr> _61417_sptr = _20d4e1e1b_Sptr((*(_60943_k)).ptr());;
	(*(_self_))._field_k=(&((*(_61017_ssptr))._field_Elem));
	__jule_func_result = _20d076a28_annotateKind(_self_, &((*(_61417_sptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _20d076396_annotateStruct(_20d072804_dynamicTypeAnnotation* _self_, jule::Ptr<_20d4de28c_TypeKind>* _61945_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_20d39066b_StructIns> _62017_s = _20d4e3208_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_62017_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_20d39066b_StructIns> _62417_s2 = _20d4e3208_Struct((*(_61945_k)).ptr());;
	if (((*(_62017_s))._field_Generics.len() != (*(_62417_s2))._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_62017_s))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211d6ee27:;
		if (it != expr_end) {
			jule::I64 _62814_i = it - expr->begin();
			jule::Ptr<_20d4dc8a6_InsGeneric> _62821_g = *it;
			{
				jule::Ptr<_20d4dc8a6_InsGeneric> _62921_g2 = (*(_62417_s2))._field_Generics[_62814_i];;
				if (_20d4de996_Equal((*(_62821_g))._field_Kind, (*(_62921_g2))._field_Kind)) {
					goto _iter_next_211d6ee27;
				};
				(*(_self_))._field_k=(&((*(_62821_g))._field_Kind));
				if ((!(_20d076a28_annotateKind(_self_, &((*(_62921_g2))._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_211d6ee27:;
			++it;
			_62814_i++;
			goto _iter_begin_211d6ee27;
		}
		_iter_end_211d6ee27:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _20d0766d7_annotateAny(_20d072804_dynamicTypeAnnotation* _self_, jule::Ptr<_20d4de28c_TypeKind>* _64142_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _64213_kind = _20d4de655_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211d738dc:;
		if (it != expr_end) {
			jule::I64 _64313_i = it - expr->begin();
			jule::Ptr<_20d378ba4_GenericDecl> _64316_g = *it;
			{
				if ((_64213_kind != (*(_64316_g))._field_Ident)) {
					goto _iter_next_211d738dc;
				};
				jule::Ptr<_20d4dc8a6_InsGeneric> _64717_t = (*((*(_self_))._field_f))._field_Generics[_64313_i];;
				{
					
					if ((_64717_t == nullptr) || ((*(_64717_t))._field_Kind == nullptr)) {
						_case_begin_211d75757:;
						{
							_20d074372_pushGeneric(_self_, _64142_k, _64313_i);
						}
					}
					else if ((!(_20d4de996_Equal((*(_64717_t))._field_Kind, (*(_64142_k)))))) {
						_case_begin_211d757ce:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_211d75625:;
				};
				(*((*((*(_self_))._field_k))))._field_Kind=(*((*(_64142_k))))._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_211d738dc:;
			++it;
			_64313_i++;
			goto _iter_begin_211d738dc;
		}
		_iter_end_211d738dc:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _20d076a28_annotateKind(_20d072804_dynamicTypeAnnotation* _self_, jule::Ptr<_20d4de28c_TypeKind>* _66243_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_20d0766d7_annotateAny(_self_, _66243_k)) {
			_case_begin_211d77d42:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_20d4e1b85_Prim((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_211d77db9:;
			{
				__jule_func_result = _20d0746b3_annotatePrim(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_20d4e2955_Arr((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_211d7812d:;
			{
				__jule_func_result = _20d074a04_annotateArr(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_20d4e2bdb_Slc((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_211d78194:;
			{
				__jule_func_result = _20d074d45_annotateSlc(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_20d4e3725_Map((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_211d7820a:;
			{
				__jule_func_result = _20d075582_annotateMap(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_20d4e2e72_Fn((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_211d78282:;
			{
				__jule_func_result = _20d0758c3_annotateFn(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_20d4e21a2_Ptr((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_211d78309:;
			{
				__jule_func_result = _20d075c14_annotatePtr(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_20d4e1e1b_Sptr((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_211d78419:;
			{
				__jule_func_result = _20d076055_annotateSptr(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_20d4e3208_Struct((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_211d78480:;
			{
				__jule_func_result = _20d076396_annotateStruct(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_211d77c21:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_211d7777b:;
	};
}



inline jule::Bool _20d076cae_annotate(_20d072804_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*((*(_self_))._field_p))._field_Kind));
	__jule_func_result = _20d076a28_annotateKind(_self_, &((*((*(_self_))._field_a))._field_Kind));
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d072804_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _20d077c05_pushErrToken(_20d077661_fnCallArgChecker* _self_, jule::Ptr<_20d3510bb_Token> _70731_token, jule::Str _70746_fmt, jule::Slice<jule::Any> _70759_args) {
	_20d438a33_pushErr((*((*(_self_))._field_e))._field_s.ptr(), _70731_token, _70746_fmt, _70759_args);
}



inline void _20d078068_pushErr(_20d077661_fnCallArgChecker* _self_, jule::Str _71126_fmt, jule::Slice<jule::Any> _71139_args) {
	_20d077c05_pushErrToken(_self_, (*(_self_))._field_errorToken, _71126_fmt, _71139_args);
}



inline jule::Slice<jule::Ptr<_20d3a4a9d_ParamIns>> _20d0782ee_getParams(_20d077661_fnCallArgChecker* _self_) {
	if (((((*((*(_self_))._field_f))._field_Params.len() > 0LL) && ((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl != nullptr)) && _20d3a178c_IsSelf((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl.ptr()))) {
		return (*((*(_self_))._field_f))._field_Params.slice(1LL);;
	};
	return (*((*(_self_))._field_f))._field_Params;;
}



inline jule::Bool _20d07860c_checkCounts(_20d077661_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_20d3a4a9d_ParamIns>>* _72431_params) {
	jule::Bool __jule_func_result = false;
	jule::I64 _72517_n = (*(_72431_params)).len();;
	if (((_72517_n > 0LL) && _20d3a178c_IsSelf((*((*(_72431_params))[0LL]))._field_Decl.ptr()))) {
		(_72517_n)--;
	};
	jule::I64 _73017_diff = (_72517_n - (*(_self_))._field_args.len());;
	jule::Str _73117_log = jule::Str();;
	{
		
		if ((_73017_diff == 0LL)) {
			_case_begin_211d84dc6:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_72517_n > 0LL) && (*((*((*(_72431_params))[(_72517_n - 1LL)]))._field_Decl))._field_Variadic)) {
			_case_begin_211d84ce9:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_73017_diff < 0LL) || (_73017_diff > (*(_72431_params)).len()))) {
			_case_begin_211d849ec:;
			{
				_73117_log=jule::Str("argument overflow: passed more argument than expected to call @", 63);
			}
		}
		else {
			_case_begin_211d84986:;
			{
				_73117_log=jule::Str("missing arguments to call @", 27);
			}
		}
		_match_end_211d84931:;
	};
	_2240a0ad5_StrBuilder _74217_err = static__2240a0e04_New(32LL);;
	_2240a989c_WriteStr(&_74217_err, (*((*((*(_self_))._field_f))._field_Decl))._field_Ident);
	_2240a989c_WriteStr(&_74217_err, jule::Str("\n       wanted (", 16));
	{
		auto expr = _72431_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211d86ea5:;
		if (it != expr_end) {
			jule::I64 _74513_i = it - expr->begin();
			jule::Ptr<_20d3a4a9d_ParamIns> *_74516_p = it;
			{
				_2240a989c_WriteStr(&_74217_err, _20d4de655_Str((*((*(_74516_p))))._field_Kind.ptr()));
				if ((((*(_72431_params)).len() - _74513_i) > 1LL)) {
					_2240a989c_WriteStr(&_74217_err, jule::Str(", ", 2));
				};
			}
			_iter_next_211d86ea5:;
			++it;
			_74513_i++;
			goto _iter_begin_211d86ea5;
		}
		_iter_end_211d86ea5:;
	};
	_2240a9b55_WriteByte(&_74217_err, ')');
	_20d078068_pushErr(_self_, _73117_log, jule::Slice<jule::Any>::make({jule::Any(_2240aa194_Str(&_74217_err), &__jule_any_type4)}));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _20d078ab3_checkArg(_20d077661_fnCallArgChecker* _self_, jule::Ptr<_20d3a4a9d_ParamIns>* _75632_p, jule::Ptr<_20d087165_Data>* _75651_arg, jule::Ptr<_20d3510bb_Token>* _75668_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _20d3a7d26_parameterUsesGenerics(_75632_p, &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics)))) {
		__jule_func_result=((!((*((*((*(_75632_p))))._field_Decl))._field_Variadic)) && _20d080ea5_isGoodValueToInfer(_75651_arg));
		if (__jule_func_result) {
			_20d072804_dynamicTypeAnnotation _76125_dta = _20d072804_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_75632_p)), ._field_a=(*(_75651_arg)), ._field_errorToken=(*(_75668_errorToken)), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_20d076cae_annotate(&_76125_dta);
		};
		if ((!(__jule_func_result))) {
			_20d077c05_pushErrToken(_self_, (*(_75668_errorToken)), jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_20d444a50_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, (*((*((*(_75632_p))))._field_Decl))._field_Mutable, (*((*((*(_75632_p))))._field_Decl))._field_Reference, &((*((*(_75632_p))))._field_Kind), _75651_arg, _75668_errorToken)) {
		_20d441541_checkAssignType((*((*(_self_))._field_e))._field_s, (*((*((*(_75632_p))))._field_Decl))._field_Reference, &((*((*(_75632_p))))._field_Kind), _75651_arg, (*(_75668_errorToken)));
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _20d078eae_push(_20d077661_fnCallArgChecker* _self_, jule::Ptr<_20d3a4a9d_ParamIns>* _78528_p, jule::Ptr<_20d370ccd_Expr> _78546_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_20d4de28c_TypeKind> _78617_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _78713_oldImmut = (*((*(_self_))._field_e))._field_immutable;;
	(*((*(_self_))._field_e))._field_immutable=(!((*((*((*(_78528_p))))._field_Decl))._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*((*((*(_78528_p))))._field_Decl))._field_Variadic)))) {
		(*((*(_self_))._field_e))._field_prefix=(*((*(_78528_p))))._field_Kind;
	} else {
		(*((*(_self_))._field_e))._field_prefix=nullptr;
	};
	jule::Ptr<_20d087165_Data> _79517_d = _20d4cdc93_evalExpr((*(_self_))._field_e, _78546_arg);;
	(*((*(_self_))._field_e))._field_prefix=_78617_old;
	(*((*(_self_))._field_e))._field_immutable=_78713_oldImmut;
	if ((_79517_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_20d078ab3_checkArg(_self_, _78528_p, &(_79517_d), &((*(_78546_arg))._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_79517_d))._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _20d0793aa_pushVariadic(_20d077661_fnCallArgChecker* _self_, jule::Ptr<_20d3a4a9d_ParamIns>* _80936_p, jule::I64 _80954_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _81117_variadiced = false;;
	jule::Bool _81213_more = ((_80954_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_20d396ead_SliceExprModel> _81317_model = jule::new_ptr<_20d396ead_SliceExprModel>(_20d396ead_SliceExprModel{._field_ElemKind=(*((*(_80936_p))))._field_Kind, });;
	jule::Ptr<_20d4de28c_TypeKind> _81717_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _82213_variadic = (*((*((*(_80936_p))))._field_Kind))._field_Variadic;;
	(*((*((*(_80936_p))))._field_Kind))._field_Variadic=false;
	__JULE_DEFER({
		(*((*((*(_80936_p))))._field_Kind))._field_Variadic=_82213_variadic;
	});;
	for (; (_80954_i < (*(_self_))._field_args.len()); (_80954_i)++) {
		{
			jule::Ptr<_20d370ccd_Expr> _82921_arg = (*(_self_))._field_args[_80954_i];;
			{
				auto &_match_expr{ (*(_82921_arg))._field_Kind };
				
				if (_match_expr.type == &__jule_any_type79) {
					_case_begin_211d9e6d7:;
					{
						(*((*(_self_))._field_e))._field_prefix=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(jule::new_ptr<_20d4eb60c_Slc>(_20d4eb60c_Slc{._field_Elem=(*((*(_80936_p))))._field_Kind}), 22)});
					}
				}
				else {
					_case_begin_211d9e330:;
					{
						(*((*(_self_))._field_e))._field_prefix=(*((*(_80936_p))))._field_Kind;
					}
				}
				_match_end_211d9e2ca:;
			};
			jule::Ptr<_20d087165_Data> _84221_d = _20d4cd611_eval((*(_self_))._field_e, _82921_arg);;
			if ((_84221_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_211d9c99e;
			};
			if ((*((*(_84221_d))._field_Kind))._field_Variadic) {
				_81117_variadiced=true;
				(*((*((*(_80936_p))))._field_Kind))._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _20d078ab3_checkArg(_self_, _80936_p, &(_84221_d), &((*(_82921_arg))._field_Token)));
				{
					auto &_match_expr{ (*(_84221_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type80) {
						_case_begin_211da2e16:;
						{
							_81317_model=(*(_84221_d))._field_Model.cast_ptr<_20d396ead_SliceExprModel>(&__jule_any_type80);
							(*(_81317_model))._field_ElemKind=(*((*(_80936_p))))._field_Kind;
						}
					}
					else {
						_case_begin_211da2a4d:;
						{
							_81317_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_84221_d))._field_Model); };
						}
					}
					_match_end_211da29e8:;
				};
				(_80954_i)++;
				goto _iter_end_211d9c99e;
			};
			__jule_func_result=(__jule_func_result && _20d078ab3_checkArg(_self_, _80936_p, &(_84221_d), &((*(_82921_arg))._field_Token)));
			{ jule::Slice<jule::Any> &__jule_push_dest = (*(_81317_model))._field_Elems; __jule_push_dest.push((*(_84221_d))._field_Model); };
		}
	_iter_next_211d9c99e:;
	}
	_iter_end_211d9c99e:;;
	(*((*(_self_))._field_e))._field_prefix=_81717_old;
	if ((_81117_variadiced && _81213_more)) {
		_20d077c05_pushErrToken(_self_, (*((*(_self_))._field_args[_80954_i]))._field_Token, jule::Str("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
	};
	if ((_81317_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_81317_model, &__jule_any_type80)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _20d0796eb_checkArgs(_20d077661_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_20d3a4a9d_ParamIns>>* _88533_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _88613_arg = (*((*(_self_))._field_e))._field_arg;;
	(*((*(_self_))._field_e))._field_arg=true;
	__jule_func_result=true;
	jule::I64 _89017_i = 0LL;;
	if ((((*(_88533_params)).len() > 0LL) && _20d3a178c_IsSelf((*((*(_88533_params))[0LL]))._field_Decl.ptr()))) {
		(_89017_i)++;
	};
	_julec_label_211da7d2d:;
	while ((_89017_i < (*(_88533_params)).len())) {
		{
			jule::Ptr<_20d3a4a9d_ParamIns> _89721_p = (*(_88533_params))[_89017_i];;
			{
				
				if ((*((*(_89721_p))._field_Decl))._field_Variadic) {
					_case_begin_211da98bd:;
					{
						__jule_func_result=(_20d0793aa_pushVariadic(_self_, &(_89721_p), _89017_i) && __jule_func_result);
						goto _iter_end_211da813b;
					}
				}
				else if (((*(_self_))._field_args.len() <= _89017_i)) {
					_case_begin_211da99ab:;
					{
						__jule_func_result=false;
						goto _iter_end_211da813b;
					}
				}
				else {
					_case_begin_211da9527:;
					{
						__jule_func_result=(_20d078eae_push(_self_, &(_89721_p), (*(_self_))._field_args[_89017_i]) && __jule_func_result);
					}
				}
				_match_end_211da94b1:;
			};
			(_89017_i)++;
		}
	_iter_next_211da813b:;
	}
	_iter_end_211da813b:;;
	(*((*(_self_))._field_e))._field_arg=_88613_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _20d079982_checkDynamicTypeAnnotation(_20d077661_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_f))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211dab88c:;
		if (it != expr_end) {
			jule::Ptr<_20d4dc8a6_InsGeneric> _91716_g = *it;
			{
				if ((_91716_g == nullptr)) {
					_20d078068_pushErr(_self_, jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_211dab88c:;
			++it;
			goto _iter_begin_211dab88c;
		}
		_iter_end_211dab88c:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _20d079c18_check(_20d077661_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_20d3a4a9d_ParamIns>> _92717_params = _20d0782ee_getParams(_self_);;
	__jule_func_result=_20d07860c_checkCounts(_self_, &(_92717_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_20d0796eb_checkArgs(_self_, &(_92717_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_20d079982_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d077661_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _20d07aae8_pushErr(_20d07a598_structLitChecker* _self_, jule::Ptr<_20d3510bb_Token> _96526_token, jule::Str _96541_fmt, jule::Slice<jule::Any> _96554_args) {
	_20d0893a9_pushErr((*(_self_))._field_e.ptr(), _96526_token, _96541_fmt, _96554_args);
}



inline void _20d07ae5b_pushSuggestion(_20d07a598_structLitChecker* _self_, jule::Str _97033_fmt, jule::Slice<jule::Any> _97046_args) {
	_20d08971c_pushSuggestion((*(_self_))._field_e.ptr(), _97033_fmt, _97046_args);
}



inline void _20d07b379_pushMatch(_20d07a598_structLitChecker* _self_, jule::Ptr<_20d38eabb_FieldIns>* _97433_f, jule::Ptr<_20d087165_Data>* _97452_d, jule::Ptr<_20d3510bb_Token>* _97467_errorToken) {
	;
	jule::Bool _98013_mutable = ((!((*((*(_self_))._field_e))._field_immutable)) || ((*((*((*(_97433_f))))._field_Decl))._field_Mutable && ((*((*(_self_))._field_s))._field_Methods.len() > 0LL)));;
	if (_20d444a50_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, _98013_mutable, false, &((*((*(_97433_f))))._field_Kind), _97452_d, _97467_errorToken)) {
		_20d441541_checkAssignType((*((*(_self_))._field_e))._field_s, false, &((*((*(_97433_f))))._field_Kind), _97452_d, (*(_97467_errorToken)));
	};
	{ jule::Slice<jule::Ptr<_20d39550b_StructArgExprModel>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_20d39550b_StructArgExprModel>(_20d39550b_StructArgExprModel{._field_Token=(*(_97467_errorToken)), ._field_Field=(*(_97433_f)), ._field_Expr=(*(_97452_d))})); };
}



inline void _20d07b6dc_checkPair(_20d07a598_structLitChecker* _self_, jule::Ptr<_20d3754ec_FieldExprPair>* _99333_pair, jule::Slice<jule::Ptr<_20d370ccd_Expr>>* _99360_exprs) {
	jule::Ptr<_20d38eabb_FieldIns> _99517_f = _20d391a24_FindField((*(_self_))._field_s.ptr(), (*((*((*(_99333_pair))))._field_Field))._field_Kind);;
	if ((_99517_f == nullptr)) {
		_20d07aae8_pushErr(_self_, (*((*(_99333_pair))))._field_Field, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_99333_pair))))._field_Field))._field_Kind, &__jule_any_type4)}));
		return;;
	};
	if ((!(_20d439292_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_99517_f))._field_Decl))._field_Public, (*((*(_99517_f))._field_Decl))._field_Token)))) {
		_20d07aae8_pushErr(_self_, (*((*(_99333_pair))))._field_Field, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_99333_pair))))._field_Field))._field_Kind, &__jule_any_type4)}));
		_20d07ae5b_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	_julec_label_211db5cd6:;
	{
		auto expr = _99360_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211db87cd:;
		if (it != expr_end) {
			jule::Ptr<_20d370ccd_Expr> _100721_expr = *it;
			{
				{
					auto &_match_expr{ (*(_100721_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type81) {
						_case_begin_211db927e:;
						{
							jule::Ptr<_20d3754ec_FieldExprPair> _101025_dpair = (*(_100721_expr))._field_Kind.cast_ptr<_20d3754ec_FieldExprPair>(&__jule_any_type81);;
							{
								
								if (((*(_99333_pair)) == _101025_dpair)) {
									_case_begin_211dba219:;
									{
										goto _iter_end_211db87cd;
									}
								}
								else if (((*((*((*(_99333_pair))))._field_Field))._field_Kind == (*((*(_101025_dpair))._field_Field))._field_Kind)) {
									_case_begin_211dba291:;
									{
										_20d07aae8_pushErr(_self_, (*((*(_99333_pair))))._field_Field, jule::Str("@ already has expression", 24), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_99333_pair))))._field_Field))._field_Kind, &__jule_any_type4)}));
										goto _iter_end_211db87cd;
									}
								}
								_match_end_211dba15e:;
							};
						}
					}
					_match_end_211db9229:;
				};
			}
			_iter_next_211db87cd:;
			++it;
			goto _iter_begin_211db87cd;
		}
		_iter_end_211db87cd:;
	};
	jule::Ptr<_20d4de28c_TypeKind> _102117_prefix = (*((*(_self_))._field_e))._field_prefix;;
	__JULE_DEFER({
		(*((*(_self_))._field_e))._field_prefix=_102117_prefix;
	});;
	(*((*(_self_))._field_e))._field_prefix=(*(_99517_f))._field_Kind;
	jule::Ptr<_20d087165_Data> _102517_d = _20d4cdc93_evalExpr((*(_self_))._field_e, (*((*(_99333_pair))))._field_Expr);;
	if ((_102517_d == nullptr)) {
		return;;
	};
	_20d07b379_pushMatch(_self_, &(_99517_f), &(_102517_d), &((*((*(_99333_pair))))._field_Field));
}



inline jule::Bool _20d07ba2d_readyExprs(_20d07a598_structLitChecker* _self_, jule::Slice<jule::Ptr<_20d370ccd_Expr>>* _103234_exprs) {
	jule::Bool _103317_ok = true;;
	{
		auto expr = _103234_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211dbe5b4:;
		if (it != expr_end) {
			jule::I64 _103414_i = it - expr->begin();
			jule::Ptr<_20d370ccd_Expr> _103421_expr = *it;
			{
				{
					auto &_match_expr{ (*(_103421_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type82) {
						_case_begin_211dc0340:;
						{
							jule::Ptr<_20d376b08_KeyValPair> _103725_pair = (*(_103421_expr))._field_Kind.cast_ptr<_20d376b08_KeyValPair>(&__jule_any_type82);;
							{
								auto &_match_expr{ (*((*(_103725_pair))._field_Key))._field_Kind };
								
								if (_match_expr.type == &__jule_any_type83) {
									_case_begin_211dc1165:;
									{
										goto _match_end_211dc164e;
									}
								}
								else {
									_case_begin_211dc16a4:;
									{
										_20d07aae8_pushErr(_self_, (*(_103725_pair))._field_Colon, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
										_103317_ok=false;
										goto _iter_next_211dbe5b4;
									}
								}
								_match_end_211dc164e:;
							};
							(*((*(_103234_exprs))[_103414_i]))._field_Kind=jule::Any(jule::new_ptr<_20d3754ec_FieldExprPair>(_20d3754ec_FieldExprPair{._field_Field=(*((*(_103725_pair))._field_Key))._field_Token, ._field_Expr=(*(_103725_pair))._field_Val}), &__jule_any_type81);
						}
					}
					_match_end_211dc02da:;
				};
			}
			_iter_next_211dbe5b4:;
			++it;
			_103414_i++;
			goto _iter_begin_211dbe5b4;
		}
		_iter_end_211dbe5b4:;
	};
	return _103317_ok;;
}



inline void _20d07bcd6_check(_20d07a598_structLitChecker* _self_, jule::Slice<jule::Ptr<_20d370ccd_Expr>>* _105629_exprs) {
	if (((*(_105629_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_20d07ba2d_readyExprs(_self_, _105629_exprs)))) {
		return;;
	};
	jule::Bool _106317_paired = false;;
	{
		auto expr = _105629_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211dc3e37:;
		if (it != expr_end) {
			jule::I64 _106414_i = it - expr->begin();
			jule::Ptr<_20d370ccd_Expr> _106421_expr = *it;
			{
				{
					auto &_match_expr{ (*(_106421_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type81) {
						_case_begin_211dca0c5:;
						{
							jule::Ptr<_20d3754ec_FieldExprPair> _106725_pair = (*(_106421_expr))._field_Kind.cast_ptr<_20d3754ec_FieldExprPair>(&__jule_any_type81);;
							if (((_106414_i > 0LL) && (!(_106317_paired)))) {
								_20d07aae8_pushErr(_self_, (*(_106725_pair))._field_Field, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							_106317_paired=true;
							_20d07b6dc_checkPair(_self_, &(_106725_pair), _105629_exprs);
						}
					}
					else {
						_case_begin_211dc4b19:;
						{
							if (_106317_paired) {
								_20d07aae8_pushErr(_self_, (*(_106421_expr))._field_Token, jule::Str("argument must target to field", 29), jule::Slice<jule::Any>());
							};
							if ((_106414_i >= (*((*(_self_))._field_s))._field_Fields.len())) {
								_20d07aae8_pushErr(_self_, (*(_106421_expr))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>());
								goto _iter_next_211dc3e37;
							};
							jule::Ptr<_20d38eabb_FieldIns> _108225_field = (*((*(_self_))._field_s))._field_Fields[_106414_i];;
							if ((!(_20d439292_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_108225_field))._field_Decl))._field_Public, (*((*(_108225_field))._field_Decl))._field_Token)))) {
								_20d07aae8_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("structure cannot instantiating because it has non-public fields", 63), jule::Slice<jule::Any>());
								_20d07ae5b_pushSuggestion(_self_, jule::Str("use field:expression pairs to instantiate", 41), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_20d4de28c_TypeKind> _109025_prefix = (*((*(_self_))._field_e))._field_prefix;;
							__JULE_DEFER({
								(*((*(_self_))._field_e))._field_prefix=_109025_prefix;
							});;
							(*((*(_self_))._field_e))._field_prefix=(*(_108225_field))._field_Kind;
							jule::Ptr<_20d087165_Data> _109425_d = _20d4cdc93_evalExpr((*(_self_))._field_e, _106421_expr);;
							if ((_109425_d == nullptr)) {
								goto _iter_next_211dc3e37;
							};
							_20d07b379_pushMatch(_self_, &(_108225_field), &(_109425_d), &((*(_106421_expr))._field_Token));
						}
					}
					_match_end_211dc4ab4:;
				};
			}
			_iter_next_211dc3e37:;
			++it;
			_106414_i++;
			goto _iter_begin_211dc3e37;
		}
		_iter_end_211dc3e37:;
	};
	if ((!(_106317_paired))) {
		jule::I64 _110517_n = (*((*(_self_))._field_s))._field_Fields.len();;
		jule::I64 _110621_diff = (_110517_n - (*(_105629_exprs)).len());;
		{
			
			if ((_110621_diff <= 0LL)) {
				_case_begin_211dccbee:;
				{
					return;;
				}
			}
			_match_end_211dccacd:;
		};
		_2240a0ad5_StrBuilder _111221_idents = static__2240a0e04_New(32LL);;
		for (; (_110621_diff > 0LL); (_110621_diff)--) {
			{
				_2240a989c_WriteStr(&_111221_idents, jule::Str(", ", 2));
				_2240a989c_WriteStr(&_111221_idents, (*((*((*((*(_self_))._field_s))._field_Fields[(_110517_n - _110621_diff)]))._field_Decl))._field_Ident);
			}
		_iter_next_211dcd46e:;
		}
		_iter_end_211dcd46e:;;
		_20d07aae8_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(static_cast<jule::Str>(_2240aab45_Buf(&_111221_idents).slice(2LL)), &__jule_any_type4)}));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20d07a598_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20d458aca_Var> _20d07c864_buildVar(_20d07c37a_rangeChecker* _self_, jule::Ptr<_20d37e737_VarDecl>* _113228_decl) {
	jule::Ptr<_20d458aca_Var> _113317_v = _20d3ae17e_buildVar((*(_113228_decl)));;
	return _113317_v;;
}



inline void _20d07ca62_setSizeKey(_20d07c37a_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _20d353a2a_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyA))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyA=_20d07c864_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyA));
	(*((*((*(_self_))._field_Kind))._field_KeyA))._field_Kind=(*(_20d565bd7_findBuiltinTypeAlias(jule::Str("int", 3))))._field_Kind;
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_211dd3045:;
			{
				(*((*((*(_self_))._field_Kind))._field_KeyA))._field_IterRelation=jule::new_ptr<_20d457920_IterRelation>(_20d457920_IterRelation{._field_Range=(*((*(_self_))._field_d))._field_Model.cast_ptr<_20d458aca_Var>(&__jule_any_type8)});
			}
		}
		_match_end_211dd2ee0:;
	};
}



inline void _20d07ce80_checkRangeExprValidity(_20d07c37a_rangeChecker* _self_, jule::Ptr<_20d087165_Data>* _115946_d, jule::Ptr<_20d458aca_Var>* _115957_key, jule::Ptr<_20d4de28c_TypeKind>* _115973_k) {
	jule::Bool _116017__mut = (*((*(_115957_key))))._field_Mutable;;
	if ((_116017__mut && (!(_20d4e0b2e_Mutable((*(_115973_k)).ptr()))))) {
		_116017__mut=false;
	};
	_20d444a50_checkValidityForInitExpr((*((*(_self_))._field_sc))._field_s, _116017__mut, (*((*(_115957_key))))._field_Reference, &((*((*((*(_115957_key))))._field_Kind))._field_Kind), _115946_d, &((*((*(_self_))._field_rang))._field_InToken));
}



inline void _20d07d17d_checkSlice(_20d07c37a_rangeChecker* _self_) {
	_20d07ca62_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _20d353a2a_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_20d4eb60c_Slc> _117817_slc = _20d4e2bdb_Slc((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_20d07c864_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=jule::new_ptr<_20d4e6706_TypeSymbol>(_20d4e6706_TypeSymbol{._field_Kind=(*(_117817_slc))._field_Elem});
	_20d07ce80_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*((*(_self_))._field_Kind))._field_KeyB), &((*(_117817_slc))._field_Elem));
}



inline void _20d07d37b_checkArray(_20d07c37a_rangeChecker* _self_) {
	_20d07ca62_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _20d353a2a_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_20d4ed92d_Arr> _119117_arr = _20d4e2955_Arr((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_20d07c864_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=jule::new_ptr<_20d4e6706_TypeSymbol>(_20d4e6706_TypeSymbol{._field_Kind=(*(_119117_arr))._field_Elem});
	_20d07ce80_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*((*(_self_))._field_Kind))._field_KeyB), &((*(_119117_arr))._field_Elem));
}



inline void _20d07d579_checkMapKeyA(_20d07c37a_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _20d353a2a_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyA))._field_Ident))) {
		return;;
	};
	jule::Ptr<_20d4ecca1_Map> _120317_m = _20d4e3725_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyA=_20d07c864_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyA));
	(*((*((*(_self_))._field_Kind))._field_KeyA))._field_Kind=jule::new_ptr<_20d4e6706_TypeSymbol>(_20d4e6706_TypeSymbol{._field_Kind=(*(_120317_m))._field_Key});
	jule::Ptr<_20d087165_Data> _120717_d = jule::new_ptr<_20d087165_Data>((*((*(_self_))._field_d)));;
	(*(_120717_d))._field_Kind=(*(_120317_m))._field_Key;
	_20d07ce80_checkRangeExprValidity(_self_, &(_120717_d), &((*((*(_self_))._field_Kind))._field_KeyA), &((*(_120317_m))._field_Key));
}



inline void _20d07d777_checkMapKeyB(_20d07c37a_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _20d353a2a_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_20d4ecca1_Map> _121817_m = _20d4e3725_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_20d07c864_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=jule::new_ptr<_20d4e6706_TypeSymbol>(_20d4e6706_TypeSymbol{._field_Kind=(*(_121817_m))._field_Val});
	jule::Ptr<_20d087165_Data> _122217_d = jule::new_ptr<_20d087165_Data>((*((*(_self_))._field_d)));;
	(*(_122217_d))._field_Kind=(*(_121817_m))._field_Val;
	_20d07ce80_checkRangeExprValidity(_self_, &(_122217_d), &((*((*(_self_))._field_Kind))._field_KeyB), &((*(_121817_m))._field_Val));
}



inline void _20d07d975_checkMap(_20d07c37a_rangeChecker* _self_) {
	_20d07d579_checkMapKeyA(_self_);
	_20d07d777_checkMapKeyB(_self_);
}



inline void _20d07db73_checkStr(_20d07c37a_rangeChecker* _self_) {
	_20d07ca62_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _20d353a2a_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_20d07c864_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=(*(_20d565bd7_findBuiltinTypeAlias(jule::Str("u8", 2))))._field_Kind;
}



inline void _20d07dd71_checkComptime(_20d07c37a_rangeChecker* _self_) {
	_20d07ca62_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyA != nullptr) && (*((*((*(_self_))._field_rang))._field_KeyA))._field_Mutable)) {
		_20d438a33_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*((*(_self_))._field_rang))._field_KeyA))._field_Token, jule::Str("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_rang))._field_KeyA))._field_Ident, &__jule_any_type4)}));
	};
	if ((((*((*(_self_))._field_rang))._field_KeyB != nullptr) && (*((*((*(_self_))._field_rang))._field_KeyB))._field_Mutable)) {
		_20d438a33_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*((*(_self_))._field_rang))._field_KeyB))._field_Token, jule::Str("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident, &__jule_any_type4)}));
	};
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _20d353a2a_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_20d07c864_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
}



inline jule::Bool _20d07e107_checkComptimeRange(_20d07c37a_rangeChecker* _self_) {
	jule::Ptr<_20d3bc18c_comptimeRange> _125717_range = _20d4e502e_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_125717_range))._field_kind };
		
		if (_match_expr.type_is(true, 0) || _match_expr.type_is(true, 2) || _match_expr.type_is(true, 3) || _match_expr.type_is(true, 4) || _match_expr.type_is(true, 1) || _match_expr.type_is(true, 5)) {
			_case_begin_211e011c8:;
			{
				_20d07dd71_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_211e00d21:;
			{
				_20d438a33_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_211e0098b:;
	};
}



inline jule::Bool _20d07e38d_check(_20d07c37a_rangeChecker* _self_) {
	{
		
		if ((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic) {
			_case_begin_211e03d68:;
		}
		else if ((_20d4e2bdb_Slc((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_211e02d78:;
			{
				_20d07d17d_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_20d4e2955_Arr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_211e02dde:;
			{
				_20d07d37b_checkArray(_self_);
				return true;;
			}
		}
		else if ((_20d4e3725_Map((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_211e02e55:;
			{
				_20d07d975_checkMap(_self_);
				return true;;
			}
		}
		else if ((_20d4e502e_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_211e02ebb:;
			{
				return _20d07e107_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_211e02619:;
			{
				jule::Ptr<_20d4e710d_Prim> _128917_prim = _20d4e1b85_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (((_128917_prim != nullptr) && _20d4ea595_IsStr(_128917_prim.ptr()))) {
					_20d07db73_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_211e024d7:;
	};
	_20d438a33_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d07c37a_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _20d080009_prepareTypes(_20d07eadb_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_20d3a6c48_Types((*(_self_))._field_f.ptr());
	};
}



inline void _20d0802b2_prepareExprs(_20d07eadb_retTypeChecker* _self_, jule::Ptr<_20d370ccd_Expr>* _131736_e) {
	if (((*(_131736_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_131736_e))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type84) {
			_case_begin_211e0990c:;
			{
				(*(_self_))._field_exprs=(*((*((*(_131736_e))))._field_Kind.cast_ptr<_20d37199e_TupleExpr>(&__jule_any_type84)))._field_Expr;
			}
		}
		else {
			_case_begin_211e09b3d:;
			{
				{ jule::Slice<jule::Ptr<_20d370ccd_Expr>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push((*(_131736_e))); };
			}
		}
		_match_end_211e09ad8:;
	};
}



inline void _20d0804b0_checkExprs(_20d07eadb_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_20d087165_Data>> _133317_datas = jule::Slice<jule::Ptr<_20d087165_Data>>::alloc(0LL, (*(_self_))._field_exprs.len());;
	jule::Ptr<_20d088d59_Eval> _133417_eval = _20d440ed0_eval((*((*(_self_))._field_sc))._field_s, jule::Trait<_20d50e06a_Lookup>((*(_self_))._field_sc, 0));;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211e09bb5:;
		if (it != expr_end) {
			jule::I64 _133514_i = it - expr->begin();
			jule::Ptr<_20d370ccd_Expr> _133521_expr = *it;
			{
				if ((_133514_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_211e09bb5;
				};
				jule::Ptr<_20d4de28c_TypeKind> _134021_t = (*(_self_))._field_types[_133514_i];;
				(*(_133417_eval))._field_prefix=_134021_t;
				jule::Ptr<_20d087165_Data> _134321_d = _20d4cdc93_evalExpr(_133417_eval, _133521_expr);;
				if ((_134321_d == nullptr)) {
					goto _iter_next_211e09bb5;
				};
				{ jule::Slice<jule::Ptr<_20d087165_Data>> &__jule_push_dest = _133317_datas; __jule_push_dest.push(_134321_d); };
				if (((!((*(_134321_d))._field_Mutable)) && _20d4e0b2e_Mutable((*(_134321_d))._field_Kind.ptr()))) {
					_20d438a33_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("mutable typed return expressions should be mutable", 50), jule::Slice<jule::Any>());
					return;;
				};
				_20d070b87_assignTypeChecker _135521_ac = _20d070b87_assignTypeChecker{._field_s=(*((*(_self_))._field_sc))._field_s, ._field_dest=_134021_t, ._field_d=_134321_d, ._field_errorToken=(*(_self_))._field_errorToken};;
				_20d071dec_check(&_135521_ac);
			}
			_iter_next_211e09bb5:;
			++it;
			_133514_i++;
			goto _iter_begin_211e09bb5;
		}
		_iter_end_211e09bb5:;
	};
	if ((_133317_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_20d39a302_TupleExprModel>(_20d39a302_TupleExprModel{._field_Datas=_133317_datas}), &__jule_any_type85);
	} else if ((_133317_datas.len() == 1LL)) {
		(*(_self_))._field_model=(*(_133317_datas[0LL]))._field_Model;
	};
}



inline jule::Bool _20d080801_check(_20d07eadb_retTypeChecker* _self_, jule::Ptr<_20d370ccd_Expr>* _137429_e) {
	_20d080009_prepareTypes(_self_);
	_20d0802b2_prepareExprs(_self_, _137429_e);
	jule::I64 _137813_n = (*(_self_))._field_exprs.len();;
	if (((_137813_n == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
		if ((!(_20d3a3d88_AnyVar((*((*(_self_))._field_f))._field_Decl.ptr())))) {
			_20d438a33_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("return statements of non-void functions should have return expression", 69), jule::Slice<jule::Any>());
			return false;;
		};
		return true;;
	};
	if ((((_137813_n > 0LL) && ((*(_self_))._field_f != nullptr)) && _20d3a30b8_IsVoid((*((*(_self_))._field_f))._field_Decl.ptr()))) {
		_20d438a33_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("void functions is cannot returns any value", 42), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_137813_n > (*(_self_))._field_types.len())) {
		_20d438a33_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("overflow return expressions", 27), jule::Slice<jule::Any>());
	} else if ((_137813_n < (*(_self_))._field_types.len())) {
		_20d438a33_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
	};
	_20d0804b0_checkExprs(_self_);
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d07eadb_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20d414d94_ImportInfo> _20d082429_SelectPackage(_20d081e40_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_20d414d94_ImportInfo>)> _2732_selector) {
	if ((_2732_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211e18e27:;
		if (it != expr_end) {
			jule::Ptr<_20d414d94_ImportInfo> _3121_pkg = *it;
			{
				if (_2732_selector(_3121_pkg)) {
					return _3121_pkg;;
				};
			}
			_iter_next_211e18e27:;
			++it;
			goto _iter_begin_211e18e27;
		}
		_iter_end_211e18e27:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d458aca_Var> _20d082825_FindVar(_20d081e40_SymbolTable* _self_, jule::Str _4126_ident, jule::Bool _4138_binded) {
	return _20d084607_findVar(_self_, &(_4126_ident), _4138_binded, false);;
}



inline jule::Ptr<_20d4dd49a_TypeAlias> _20d082c21_FindTypeAlias(_20d081e40_SymbolTable* _self_, jule::Str _4732_ident, jule::Bool _4744_binded) {
	return _20d084aad_findTypeAlias(_self_, &(_4732_ident), _4744_binded, false);;
}



inline jule::Ptr<_20d38c58b_Struct> _20d08311c_FindStruct(_20d081e40_SymbolTable* _self_, jule::Str _5329_ident, jule::Bool _5341_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211e1b666:;
		if (it != expr_end) {
			jule::Ptr<_20d38c58b_Struct> _5421_s = *it;
			{
				if ((((*(_5421_s))._field_Ident == _5329_ident) && ((*(_5421_s))._field_Binded == _5341_binded))) {
					return _5421_s;;
				};
			}
			_iter_next_211e1b666:;
			++it;
			goto _iter_begin_211e1b666;
		}
		_iter_end_211e1b666:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d3a2b45_Fn> _20d083518_FindFn(_20d081e40_SymbolTable* _self_, jule::Str _6425_ident, jule::Bool _6437_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211e1cbea:;
		if (it != expr_end) {
			jule::Ptr<_20d3a2b45_Fn> _6521_f = *it;
			{
				if ((((*(_6521_f))._field_Ident == _6425_ident) && ((*(_6521_f))._field_Binded == _6437_binded))) {
					return _6521_f;;
				};
			}
			_iter_next_211e1cbea:;
			++it;
			goto _iter_begin_211e1cbea;
		}
		_iter_end_211e1cbea:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d3b5dde_Trait> _20d083859_FindTrait(_20d081e40_SymbolTable* _self_, jule::Str _7528_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211e1e01a:;
		if (it != expr_end) {
			jule::Ptr<_20d3b5dde_Trait> _7621_t = *it;
			{
				if (((*(_7621_t))._field_Ident == _7528_ident)) {
					return _7621_t;;
				};
			}
			_iter_next_211e1e01a:;
			++it;
			goto _iter_begin_211e1e01a;
		}
		_iter_end_211e1e01a:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d3b85d9_Enum> _20d083b9a_FindEnum(_20d081e40_SymbolTable* _self_, jule::Str _8627_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211e1e6e1:;
		if (it != expr_end) {
			jule::Ptr<_20d3b85d9_Enum> _8721_e = *it;
			{
				if (((*(_8721_e))._field_Ident == _8627_ident)) {
					return _8721_e;;
				};
			}
			_iter_next_211e1e6e1:;
			++it;
			goto _iter_begin_211e1e6e1;
		}
		_iter_end_211e1e6e1:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d3b9ce4_TypeEnum> _20d083edb_FindTypeEnum(_20d081e40_SymbolTable* _self_, jule::Str _9731_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211e206e2:;
		if (it != expr_end) {
			jule::Ptr<_20d3b9ce4_TypeEnum> _9821_e = *it;
			{
				if (((*(_9821_e))._field_Ident == _9731_ident)) {
					return _9821_e;;
				};
			}
			_iter_next_211e206e2:;
			++it;
			goto _iter_begin_211e206e2;
		}
		_iter_end_211e206e2:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d458aca_Var> _20d084607_findVar(_20d081e40_SymbolTable* _self_, jule::Str* _10827_ident, jule::Bool _10839_binded, jule::Bool _10853_reverse) {
	if (_10853_reverse) {
		jule::I64 _11021_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_11021_i >= 0LL); (_11021_i)--) {
			{
				jule::Ptr<_20d458aca_Var> _11225_v = (*(_self_))._field_Vars[_11021_i];;
				if ((((*(_11225_v))._field_Ident == (*(_10827_ident))) && ((*(_11225_v))._field_Binded == _10839_binded))) {
					return _11225_v;;
				};
			}
		_iter_next_211e22aac:;
		}
		_iter_end_211e22aac:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_211e23030:;
			if (it != expr_end) {
				jule::Ptr<_20d458aca_Var> _11825_v = *it;
				{
					if ((((*(_11825_v))._field_Ident == (*(_10827_ident))) && ((*(_11825_v))._field_Binded == _10839_binded))) {
						return _11825_v;;
					};
				}
				_iter_next_211e23030:;
				++it;
				goto _iter_begin_211e23030;
			}
			_iter_end_211e23030:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_20d4dd49a_TypeAlias> _20d084aad_findTypeAlias(_20d081e40_SymbolTable* _self_, jule::Str* _12733_ident, jule::Bool _12745_binded, jule::Bool _12759_reverse) {
	if (_12759_reverse) {
		jule::I64 _12921_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_12921_i >= 0LL); (_12921_i)--) {
			{
				jule::Ptr<_20d4dd49a_TypeAlias> _13125_ta = (*(_self_))._field_TypeAliases[_12921_i];;
				if ((((*(_13125_ta))._field_Ident == (*(_12733_ident))) && ((*(_13125_ta))._field_Binded == _12745_binded))) {
					return _13125_ta;;
				};
			}
		_iter_next_211e25e78:;
		}
		_iter_end_211e25e78:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_211e263eb:;
			if (it != expr_end) {
				jule::Ptr<_20d4dd49a_TypeAlias> _13725_ta = *it;
				{
					if ((((*(_13725_ta))._field_Ident == (*(_12733_ident))) && ((*(_13725_ta))._field_Binded == _12745_binded))) {
						return _13725_ta;;
					};
				}
				_iter_next_211e263eb:;
				++it;
				goto _iter_begin_211e263eb;
			}
			_iter_end_211e263eb:;
		};
	};
	return nullptr;;
}



inline jule::Any _20d084ea9_defByIdent(_20d081e40_SymbolTable* _self_, jule::Str* _14830_ident, jule::Bool _14842_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211e27e58:;
		if (it != expr_end) {
			jule::Ptr<_20d458aca_Var> _14921_v = *it;
			{
				if ((((*(_14921_v))._field_Ident == (*(_14830_ident))) && ((*(_14921_v))._field_Binded == _14842_binded))) {
					return jule::Any(_14921_v, &__jule_any_type8);;
				};
			}
			_iter_next_211e27e58:;
			++it;
			goto _iter_begin_211e27e58;
		}
		_iter_end_211e27e58:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211e2981c:;
		if (it != expr_end) {
			jule::Ptr<_20d4dd49a_TypeAlias> _15521_ta = *it;
			{
				if ((((*(_15521_ta))._field_Ident == (*(_14830_ident))) && ((*(_15521_ta))._field_Binded == _14842_binded))) {
					return jule::Any(_15521_ta, &__jule_any_type67);;
				};
			}
			_iter_next_211e2981c:;
			++it;
			goto _iter_begin_211e2981c;
		}
		_iter_end_211e2981c:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211e2a6db:;
		if (it != expr_end) {
			jule::Ptr<_20d38c58b_Struct> _16121_s = *it;
			{
				if ((((*(_16121_s))._field_Ident == (*(_14830_ident))) && ((*(_16121_s))._field_Binded == _14842_binded))) {
					return jule::Any(_16121_s, &__jule_any_type66);;
				};
			}
			_iter_next_211e2a6db:;
			++it;
			goto _iter_begin_211e2a6db;
		}
		_iter_end_211e2a6db:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211e2a257:;
		if (it != expr_end) {
			jule::Ptr<_20d3a2b45_Fn> _16721_f = *it;
			{
				if ((((*(_16721_f))._field_Ident == (*(_14830_ident))) && ((*(_16721_f))._field_Binded == _14842_binded))) {
					return jule::Any(_16721_f, &__jule_any_type65);;
				};
			}
			_iter_next_211e2a257:;
			++it;
			goto _iter_begin_211e2a257;
		}
		_iter_end_211e2a257:;
	};
	if (_14842_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211e2bd08:;
		if (it != expr_end) {
			jule::Ptr<_20d3b5dde_Trait> _17721_t = *it;
			{
				if (((*(_17721_t))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_17721_t, &__jule_any_type10);;
				};
			}
			_iter_next_211e2bd08:;
			++it;
			goto _iter_begin_211e2bd08;
		}
		_iter_end_211e2bd08:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211e2bc2b:;
		if (it != expr_end) {
			jule::Ptr<_20d3b85d9_Enum> _18321_e = *it;
			{
				if (((*(_18321_e))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_18321_e, &__jule_any_type68);;
				};
			}
			_iter_next_211e2bc2b:;
			++it;
			goto _iter_begin_211e2bc2b;
		}
		_iter_end_211e2bc2b:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211e2ddc6:;
		if (it != expr_end) {
			jule::Ptr<_20d3b9ce4_TypeEnum> _18921_te = *it;
			{
				if (((*(_18921_te))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_18921_te, &__jule_any_type69);;
				};
			}
			_iter_next_211e2ddc6:;
			++it;
			goto _iter_begin_211e2ddc6;
		}
		_iter_end_211e2ddc6:;
	};
	return nullptr;;
}



inline jule::Bool _20d085460_isDuplicatedIdent(_20d081e40_SymbolTable* _self_, jule::Uintptr _20132_itself, jule::Str* _20150_ident, jule::Bool _20162_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211e3035b:;
		if (it != expr_end) {
			jule::Ptr<_20d458aca_Var> *_20216_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20216_v))) != _20132_itself) && ((*((*(_20216_v))))._field_Ident == (*(_20150_ident)))) && ((*((*(_20216_v))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_211e3035b:;
			++it;
			goto _iter_begin_211e3035b;
		}
		_iter_end_211e3035b:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211e31082:;
		if (it != expr_end) {
			jule::Ptr<_20d4dd49a_TypeAlias> *_20816_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20816_ta))) != _20132_itself) && ((*((*(_20816_ta))))._field_Ident == (*(_20150_ident)))) && ((*((*(_20816_ta))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_211e31082:;
			++it;
			goto _iter_begin_211e31082;
		}
		_iter_end_211e31082:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211e321c6:;
		if (it != expr_end) {
			jule::Ptr<_20d38c58b_Struct> *_21416_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21416_s))) != _20132_itself) && ((*((*(_21416_s))))._field_Ident == (*(_20150_ident)))) && ((*((*(_21416_s))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_211e321c6:;
			++it;
			goto _iter_begin_211e321c6;
		}
		_iter_end_211e321c6:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211e31d30:;
		if (it != expr_end) {
			jule::Ptr<_20d3a2b45_Fn> *_22016_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22016_f))) != _20132_itself) && ((*((*(_22016_f))))._field_Ident == (*(_20150_ident)))) && ((*((*(_22016_f))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_211e31d30:;
			++it;
			goto _iter_begin_211e31d30;
		}
		_iter_end_211e31d30:;
	};
	if (_20162_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211e33dba:;
		if (it != expr_end) {
			jule::Ptr<_20d3b5dde_Trait> *_23016_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23016_t))) != _20132_itself) && ((*((*(_23016_t))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_211e33dba:;
			++it;
			goto _iter_begin_211e33dba;
		}
		_iter_end_211e33dba:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211e33cdd:;
		if (it != expr_end) {
			jule::Ptr<_20d3b85d9_Enum> *_23616_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23616_e))) != _20132_itself) && ((*((*(_23616_e))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_211e33cdd:;
			++it;
			goto _iter_begin_211e33cdd;
		}
		_iter_end_211e33cdd:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211e3640b:;
		if (it != expr_end) {
			jule::Ptr<_20d3b9ce4_TypeEnum> *_24216_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24216_te))) != _20132_itself) && ((*((*(_24216_te))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_211e3640b:;
			++it;
			goto _iter_begin_211e3640b;
		}
		_iter_end_211e3640b:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d081e40_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20d08751c_IsNil(_20d087165_Data* _self_) {
	return _20d4e037b_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _20d0877a3_IsVoid(_20d087165_Data* _self_) {
	return _20d4e0612_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _20d087a39_IsConst(_20d087165_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _20d087d7a_GoodOperand(_20d087165_Data* _self_, jule::Ptr<_20d087165_Data>* _10231_other) {
	if ((_20d4e26be_TypeEnum((*((*(_10231_other))))._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_20d4e1b85_Prim((*((*(_10231_other))))._field_Kind.ptr()) == nullptr) || (!(_20d4ea82b_IsAny(_20d4e1b85_Prim((*((*(_10231_other))))._field_Kind.ptr()).ptr())))) && (_20d4e348e_Trait((*((*(_10231_other))))._field_Kind.ptr()) == nullptr)) && (!(_20d4e037b_IsNil((*(_self_))._field_Kind.ptr()))));;
}







std::ostream &operator<<(std::ostream &_Stream, _20d087165_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d0882a9_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _20d0893a9_pushErr(_20d088d59_Eval* _self_, jule::Ptr<_20d3510bb_Token> _13326_token, jule::Str _13341_fmt, jule::Slice<jule::Any> _13354_args) {
	_20d438a33_pushErr((*(_self_))._field_s.ptr(), _13326_token, _13341_fmt, _13354_args);
}



inline void _20d08971c_pushSuggestion(_20d088d59_Eval* _self_, jule::Str _13833_fmt, jule::Slice<jule::Any> _13846_args) {
	_20d438d96_pushSuggestion((*(_self_))._field_s.ptr(), _13833_fmt, _13846_args);
}



inline void _20d08991a_allowBuiltin(_20d088d59_Eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _20d089b18_disallowBuiltin(_20d088d59_Eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _20d089d9e_isUnsafe(_20d088d59_Eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _20d08a135_isGlobal(_20d088d59_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_211e7a21e:;
			{
				return true;;
			}
		}
		else {
			_case_begin_211e7a5d7:;
			{
				return false;;
			}
		}
		_match_end_211e7a582:;
	};
}



inline jule::Bool _20d08a443_applyNumericPrefix(_20d088d59_Eval* _self_, jule::Ptr<_20d087165_Data>* _16542_d) {
	if ((((((*(_16542_d)) == nullptr) || (!(_20d087a39_IsConst((*(_16542_d)).ptr())))) || (_20d4e1b85_Prim((*((*(_16542_d))))._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_20d4e710d_Prim> _17213_prim = _20d4e1b85_Prim((*(_self_))._field_prefix.ptr());;
	if ((_17213_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_20b064d59_IsFloat(_20d4e744e_Str(_17213_prim.ptr()))) {
			_case_begin_211e7cead:;
			{
				(*((*(_16542_d))))._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>((*((*(_self_))._field_prefix)));
				_20b069138_SetF64((*((*(_16542_d))))._field_Constant.ptr(), static_cast<jule::F64>(_20b0682ad_AsF64((*((*(_16542_d))))._field_Constant.ptr())));
				(*((*((*(_16542_d))))._field_Constant))._field_Kind=(*(_17213_prim))._field_Kind;
			}
		}
		else if (_20b064441_IsSigInt(_20d4e744e_Str(_17213_prim.ptr()))) {
			_case_begin_211e7d024:;
			{
				if ((!(_20d06d1b2_sigAssignable(_20d4e744e_Str(_17213_prim.ptr()), _16542_d)))) {
					return false;;
				};
				(*((*(_16542_d))))._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>((*((*(_self_))._field_prefix)));
				_20b068566_SetI64((*((*(_16542_d))))._field_Constant.ptr(), static_cast<jule::I64>(_20b067c91_AsI64((*((*(_16542_d))))._field_Constant.ptr())));
				(*((*((*(_16542_d))))._field_Constant))._field_Kind=(*(_17213_prim))._field_Kind;
			}
		}
		else if (_20b06474e_IsUnsigInt(_20d4e744e_Str(_17213_prim.ptr()))) {
			_case_begin_211e7d08a:;
			{
				if ((!(_20d06d57a_unsigAssignable(_20d4e744e_Str(_17213_prim.ptr()), _16542_d)))) {
					return false;;
				};
				(*((*(_16542_d))))._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>((*((*(_self_))._field_prefix)));
				_20b06881e_SetU64((*((*(_16542_d))))._field_Constant.ptr(), static_cast<jule::U64>(_20b068027_AsU64((*((*(_16542_d))))._field_Constant.ptr())));
				(*((*((*(_16542_d))))._field_Constant))._field_Kind=(*(_17213_prim))._field_Kind;
			}
		}
		_match_end_211e7cbd3:;
	};
	return true;;
}



inline jule::Ptr<_20d087165_Data> _20d08a784_litStr(_20d088d59_Eval* _self_, jule::Ptr<_20d371d78_LitExpr>* _20022_l) {
	jule::Str _20117_s = (*((*(_20022_l))))._field_Value.slice(1LL, ((*((*(_20022_l))))._field_Value.len() - 1LL));;
	if (_20d3524da_IsRawStr((*((*(_20022_l))))._field_Value)) {
		_20117_s=_20d06b358_ToRawStr(static_cast<jule::Slice<jule::U8>>(_20117_s));
	} else {
		_20117_s=_20d06b699_ToStr(static_cast<jule::Slice<jule::U8>>(_20117_s));
	};
	jule::Ptr<_20b0655eb_Const> _20717_constant = static__20b066388_NewStr(_20117_s);;
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562a91_primStr, ._field_Mutable=true, ._field_Model=jule::Any(_20717_constant, &__jule_any_type19), ._field_Constant=_20717_constant});;
}



inline jule::Ptr<_20d087165_Data> _20d08aac5_litRune(_20d088d59_Eval* _self_, jule::Ptr<_20d371d78_LitExpr>* _21723_l) {
	jule::Str _21913_lt = (*((*(_21723_l))))._field_Value.slice(1LL, ((*((*(_21723_l))))._field_Value.len() - 1LL));;
	jule::I32 _22013_r = _20d06b08e_ToRune(static_cast<jule::Slice<jule::U8>>(_21913_lt));;
	jule::Ptr<_20d087165_Data> _22117_data = jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Constant=static__20b065a3b_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_22013_r)))});;
	jule::Bool _22513_isAscii = _20d05374c_IsAscii(_22013_r);;
	if (_22513_isAscii) {
		(*(_22117_data))._field_Kind=_20d564697_primU8;
	} else {
		(*(_22117_data))._field_Kind=_20d564114_primI32;
	};
	(*(_22117_data))._field_Mutable=true;
	(*(_22117_data))._field_Model=jule::Any(jule::new_ptr<_20d39e23a_RuneExprModel>(_20d39e23a_RuneExprModel{._field_Code=_22013_r}), &__jule_any_type86);
	(*(_22117_data))._field_IsRune=true;
	(*(_22117_data))._field_untyped=true;
	return _22117_data;;
}



inline jule::Ptr<_20d087165_Data> _20d08ae16_litFloat(_20d088d59_Eval* _self_, jule::Ptr<_20d371d78_LitExpr>* _23924_l) {
	jule::F64 _24013_f = ({
		auto except = _20b04a46b_ParseFloat((*((*(_23924_l))))._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_20b0655eb_Const> _24117_constant = static__20b066652_NewF64(_24013_f);;
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_untyped=true, ._field_Kind=_20d565731_primF64, ._field_Mutable=true, ._field_Model=jule::Any(_24117_constant, &__jule_any_type19), ._field_Constant=_24117_constant});;
}



inline jule::Ptr<_20d087165_Data> _20d08b257_litInt(_20d088d59_Eval* _self_, jule::Ptr<_20d371d78_LitExpr>* _25126_l) {
	;
	jule::Str _25417_lit = (*((*(_25126_l))))._field_Value;;
	jule::I64 _25517_base = 0LL;;
	{
		
		if (_2248aa0ae_HasPrefix(_25417_lit, jule::Str("0x", 2))) {
			_case_begin_211e8dbc2:;
			{
				(_25417_lit).mut_slice(2LL);;
				_25517_base=16LLU;
			}
		}
		else if (_2248aa0ae_HasPrefix(_25417_lit, jule::Str("0b", 2))) {
			_case_begin_211e8dcb0:;
			{
				(_25417_lit).mut_slice(2LL);;
				_25517_base=2LLU;
			}
		}
		else if (_2248aa0ae_HasPrefix(_25417_lit, jule::Str("0o", 2))) {
			_case_begin_211e8d8b4:;
			{
				(_25417_lit).mut_slice(2LL);;
				_25517_base=8LLU;
			}
		}
		else if (((_25417_lit[0LL] == '0') && (_25417_lit.len() > 1LL))) {
			_case_begin_211e8d92a:;
			{
				(_25417_lit).mut_slice(1LL);;
				_25517_base=8LLU;
			}
		}
		else {
			_case_begin_211e8d84d:;
			{
				_25517_base=10LLU;
			}
		}
		_match_end_211e8d7e8:;
	};
	jule::Ptr<_20d087165_Data> _27517_d = jule::new_ptr<_20d087165_Data>();;
	jule::Bool _27717_ok = true;;
	jule::I64 _27813_sig = ({
		auto except = _20b043a19_ParseInt(_25417_lit, _25517_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_27717_ok=false;

			0LL;
		});
	});;
	if (_27717_ok) {
		(*(_27517_d))._field_Constant=static__20b065a3b_NewI64(_27813_sig);
		(*(_27517_d))._field_Kind=_20d5637b7_primInt;
	} else {
		jule::U64 _28617_unsig = ({
			auto except = _20b043563_ParseUint(_25417_lit, _25517_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_20d0893a9_pushErr(_self_, (*((*(_25126_l))))._field_Token, jule::Str("arithmetic value overflow: this value too big", 45), jule::Slice<jule::Any>());
				_20d08971c_pushSuggestion(_self_, jule::Str("floating-point literals may solve your problem", 46), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		(*(_27517_d))._field_Constant=static__20b065d05_NewU64(_28617_unsig);
		(*(_27517_d))._field_Kind=_20d5633dd_primUint;
	};
	(*(_27517_d))._field_Model=jule::Any((*(_27517_d))._field_Constant, &__jule_any_type19);
	if ((!(_20d08a443_applyNumericPrefix(_self_, &(_27517_d))))) {
		_20d4d7c9c_fitBitsize(&(_27517_d));
	};
	(*(_27517_d))._field_Mutable=true;
	(*(_27517_d))._field_untyped=true;
	return _27517_d;;
}



inline jule::Ptr<_20d087165_Data> _20d08b598_litNum(_20d088d59_Eval* _self_, jule::Ptr<_20d371d78_LitExpr>* _30726_l) {
	{
		
		if (_20d3531cd_IsFloat((*((*(_30726_l))))._field_Value)) {
			_case_begin_211e96647:;
			{
				return _20d08ae16_litFloat(_self_, _30726_l);;
			}
		}
		else {
			_case_begin_211e95e93:;
			{
				return _20d08b257_litInt(_self_, _30726_l);;
			}
		}
		_match_end_211e95de9:;
	};
}



inline jule::Ptr<_20d087165_Data> _20d08b8d9_evalLit(_20d088d59_Eval* _self_, jule::Ptr<_20d371d78_LitExpr> _31626_lit) {
	{
		
		if (_20d352221_IsStr((*(_31626_lit))._field_Value)) {
			_case_begin_211e971d6:;
			{
				return _20d08a784_litStr(_self_, &(_31626_lit));;
			}
		}
		else if (_20d3527a4_IsRune((*(_31626_lit))._field_Value)) {
			_case_begin_211e9725d:;
			{
				return _20d08aac5_litRune(_self_, &(_31626_lit));;
			}
		}
		else if (_20d353497_IsNum((*(_31626_lit))._field_Value)) {
			_case_begin_211e972d5:;
			{
				return _20d08b598_litNum(_self_, &(_31626_lit));;
			}
		}
		else {
			_case_begin_211e96aed:;
			{
				return nullptr;;
			}
		}
		_match_end_211e96a32:;
	};
}



inline jule::Any _20d08bc2a_findBuiltins(_20d088d59_Eval* _self_, jule::Str* _32932_ident) {
	if (_20d432ee4_IsPub(_32932_ident)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 1)) {
				_case_begin_211e99518:;
				{
					jule::Any _33325_def = _20d4d7a6b_findBuiltinsImport(_32932_ident, (*(_self_))._field_lookup.cast_ptr<_20d414d94_ImportInfo>(1));;
					if ((_33325_def != nullptr)) {
						return _33325_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, 3)) {
				_case_begin_211e9957e:;
				{
					jule::Any _33825_def = _20d4d87c5_findBuiltinsSema(_32932_ident, (*(_self_))._field_lookup.cast_ptr<_20d435de8_Sema>(3));;
					if ((_33825_def != nullptr)) {
						return _33825_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, 0)) {
				_case_begin_211e995e5:;
				{
					jule::Any _34325_def = _20d4d87c5_findBuiltinsSema(_32932_ident, (*((*(_self_))._field_lookup.cast_ptr<_20d3ea9a1_scopeChecker>(0)))._field_s);;
					if ((_34325_def != nullptr)) {
						return _34325_def;;
					};
				}
			}
			_match_end_211e994b3:;
		};
		return nullptr;;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _20d565ea1_findBuiltinDef(_32932_ident);;
}



inline jule::Any _20d08c126_getDef(_20d088d59_Eval* _self_, jule::Str* _35626_ident, jule::Bool _35638_binded) {
	jule::Ptr<_20d458aca_Var> _36117_v = _20d50e06a_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._20d50c750_FindVar((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_36117_v != nullptr)) {
		return jule::Any(_36117_v, &__jule_any_type8);;
	};
	jule::Ptr<_20d4dd49a_TypeAlias> _36617_ta = _20d50e06a_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._20d50cb4b_FindTypeAlias((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_36617_ta != nullptr)) {
		return jule::Any(_36617_ta, &__jule_any_type67);;
	};
	if ((!(_35638_binded))) {
		jule::Ptr<_20d3b85d9_Enum> _37221_enm = _20d50e06a_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._20d50dac5_FindEnum((*(_self_))._field_lookup, (*(_35626_ident)));;
		if ((_37221_enm != nullptr)) {
			return jule::Any(_37221_enm, &__jule_any_type68);;
		};
		jule::Ptr<_20d3b9ce4_TypeEnum> _37721_tenm = _20d50e06a_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._20d50de16_FindTypeEnum((*(_self_))._field_lookup, (*(_35626_ident)));;
		if ((_37721_tenm != nullptr)) {
			return jule::Any(_37721_tenm, &__jule_any_type69);;
		};
	};
	jule::Ptr<_20d3a2b45_Fn> _38317_f = _20d50e06a_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._20d50d443_FindFn((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_38317_f != nullptr)) {
		return jule::Any(_38317_f, &__jule_any_type65);;
	};
	jule::Ptr<_20d38c58b_Struct> _38817_s = _20d50e06a_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._20d50d047_FindStruct((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_38817_s != nullptr)) {
		return jule::Any(_38817_s, &__jule_any_type66);;
	};
	return _20d08bc2a_findBuiltins(_self_, _35626_ident);;
}



inline void _211eb2850_pushReference(_20d088d59_Eval* _self_, jule::Ptr<_20d3a5a49_FnIns>* _39640_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_211eb4346:;
			{
				jule::Ptr<_20d3ea9a1_scopeChecker> _39921_sc = _20d3edd28_getHardRoot((*(_self_))._field_lookup.cast_ptr<_20d3ea9a1_scopeChecker>(0));;
				if ((!(_211eb57a9_Exist((*((*(_39921_sc))._field_owner))._field_Refers.ptr(), (*(_39640_ref)))))) {
					_20d3a99d7_Push((*((*(_39921_sc))._field_owner))._field_Refers.ptr(), jule::Any((*(_39640_ref)), &__jule_any_type7));
				};
			}
		}
		else {
			_case_begin_211eb3cc4:;
			{
				if (((((*(_self_))._field_owner != nullptr) && ((*((*(_self_))._field_owner))._field_Scope == nullptr)) && (!(_211eb57a9_Exist((*((*(_self_))._field_owner))._field_Refers.ptr(), (*(_39640_ref))))))) {
					_20d3a99d7_Push((*((*(_self_))._field_owner))._field_Refers.ptr(), jule::Any((*(_39640_ref)), &__jule_any_type7));
				};
			}
		}
		_match_end_211eb3c6e:;
	};
}

inline void _211eca15e_pushReference(_20d088d59_Eval* _self_, jule::Ptr<_20d458aca_Var>* _39640_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_211ecbb11:;
			{
				jule::Ptr<_20d3ea9a1_scopeChecker> _39921_sc = _20d3edd28_getHardRoot((*(_self_))._field_lookup.cast_ptr<_20d3ea9a1_scopeChecker>(0));;
				if ((!(_211ecd074_Exist((*((*(_39921_sc))._field_owner))._field_Refers.ptr(), (*(_39640_ref)))))) {
					_20d3a99d7_Push((*((*(_39921_sc))._field_owner))._field_Refers.ptr(), jule::Any((*(_39640_ref)), &__jule_any_type8));
				};
			}
		}
		else {
			_case_begin_211ecb58e:;
			{
				if (((((*(_self_))._field_owner != nullptr) && ((*((*(_self_))._field_owner))._field_Scope == nullptr)) && (!(_211ecd074_Exist((*((*(_self_))._field_owner))._field_Refers.ptr(), (*(_39640_ref))))))) {
					_20d3a99d7_Push((*((*(_self_))._field_owner))._field_Refers.ptr(), jule::Any((*(_39640_ref)), &__jule_any_type8));
				};
			}
		}
		_match_end_211ecb539:;
	};
}

inline void _212090bc5_pushReference(_20d088d59_Eval* _self_, jule::Ptr<_20d39066b_StructIns>* _39640_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_2120926bb:;
			{
				jule::Ptr<_20d3ea9a1_scopeChecker> _39921_sc = _20d3edd28_getHardRoot((*(_self_))._field_lookup.cast_ptr<_20d3ea9a1_scopeChecker>(0));;
				if ((!(_212093b2e_Exist((*((*(_39921_sc))._field_owner))._field_Refers.ptr(), (*(_39640_ref)))))) {
					_20d3a99d7_Push((*((*(_39921_sc))._field_owner))._field_Refers.ptr(), jule::Any((*(_39640_ref)), &__jule_any_type9));
				};
			}
		}
		else {
			_case_begin_212092149:;
			{
				if (((((*(_self_))._field_owner != nullptr) && ((*((*(_self_))._field_owner))._field_Scope == nullptr)) && (!(_212093b2e_Exist((*((*(_self_))._field_owner))._field_Refers.ptr(), (*(_39640_ref))))))) {
					_20d3a99d7_Push((*((*(_self_))._field_owner))._field_Refers.ptr(), jule::Any((*(_39640_ref)), &__jule_any_type9));
				};
			}
		}
		_match_end_2120920e4:;
	};
}



inline jule::Ptr<_20d087165_Data> _20d08c720__evalEnum(_20d088d59_Eval* _self_, jule::Ptr<_20d3b85d9_Enum> _41328_enm) {
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(_41328_enm, 3)}), ._field_Decl=true, });;
}



inline jule::Ptr<_20d087165_Data> _20d08cb1b_evalEnum(_20d088d59_Eval* _self_, jule::Ptr<_20d3b85d9_Enum> _42231_enm, jule::Ptr<_20d3510bb_Token> _42243_errorToken) {
	if ((!(_20d439292_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_42231_enm))._field_Public, (*(_42231_enm))._field_Token)))) {
		_20d0893a9_pushErr(_self_, _42243_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_42231_enm))._field_Ident, &__jule_any_type4)}));
		_20d08971c_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _20d08c720__evalEnum(_self_, _42231_enm);;
}



inline jule::Ptr<_20d087165_Data> _20d08ce5c__evalTypeEnum(_20d088d59_Eval* _self_, jule::Ptr<_20d3b9ce4_TypeEnum> _43132_enm) {
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(_43132_enm, 4)}), ._field_Decl=true, });;
}



inline jule::Ptr<_20d087165_Data> _20d08d358_evalTypeEnum(_20d088d59_Eval* _self_, jule::Ptr<_20d3b9ce4_TypeEnum> _44035_enm, jule::Ptr<_20d3510bb_Token> _44051_errorToken) {
	if ((!(_20d439292_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_44035_enm))._field_Public, (*(_44035_enm))._field_Token)))) {
		_20d0893a9_pushErr(_self_, _44051_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_44035_enm))._field_Ident, &__jule_any_type4)}));
		_20d08971c_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _20d08ce5c__evalTypeEnum(_self_, _44035_enm);;
}



inline jule::Ptr<_20d087165_Data> _20d08d699__evalStruct(_20d088d59_Eval* _self_, jule::Ptr<_20d39066b_StructIns> _44930_s) {
	jule::Ptr<_20d087165_Data> _45017_d = jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(_44930_s, 0)}), ._field_Model=jule::Any(_44930_s, &__jule_any_type9), ._field_Decl=true, });;
	if ((((*(_44930_s))._field_Decl != nullptr) && (*((*(_44930_s))._field_Decl))._field_Binded)) {
		(*((*(_45017_d))._field_Kind))._field_BindIdent=(*((*(_44930_s))._field_Decl))._field_Ident;
	};
	return _45017_d;;
}



inline jule::Ptr<_20d087165_Data> _20d08da95_evalStruct(_20d088d59_Eval* _self_, jule::Ptr<_20d39066b_StructIns> _46333_s, jule::Ptr<_20d3510bb_Token> _46348_errorToken) {
	if ((!(_20d439292_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_46333_s))._field_Decl))._field_Public, (*((*(_46333_s))._field_Decl))._field_Token)))) {
		_20d0893a9_pushErr(_self_, _46348_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_46333_s))._field_Decl))._field_Ident, &__jule_any_type4)}));
		_20d08971c_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_20d08e249_checkDeprecated(_self_, &((*((*(_46333_s))._field_Decl))._field_Directives), _46348_errorToken);
	return _20d08d699__evalStruct(_self_, _46333_s);;
}



inline jule::Ptr<_20d087165_Data> _20d08ddd6_evalFnIns(_20d088d59_Eval* _self_, jule::Ptr<_20d3a5a49_FnIns> _47328_f) {
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(_47328_f, 1)}), ._field_Model=jule::Any(_47328_f, &__jule_any_type7), });;
}



inline void _20d08e249_checkDeprecated(_20d088d59_Eval* _self_, jule::Slice<jule::Ptr<_20d36adb6_Directive>>* _48239_directives, jule::Ptr<_20d3510bb_Token> _48270_tok) {
	if (_20d089d9e_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_20d36adb6_Directive> _48713_d = _20d4d76a3_findDirective(_48239_directives, jule::Str("deprecated", 10));;
	if ((_48713_d != nullptr)) {
		if (((*(_48713_d))._field_Args.len() == 0LL)) {
			_20d0893a9_pushErr(_self_, _48270_tok, jule::Str("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(jule::Str("this code is deprecated", 23), &__jule_any_type4)}));
		} else {
			_20d0893a9_pushErr(_self_, _48270_tok, jule::Str("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any((*((*(_48713_d))._field_Args[0LL]))._field_Kind, &__jule_any_type4)}));
		};
		_20d08971c_pushSuggestion(_self_, jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_20d087165_Data> _20d08e645_evalFn(_20d088d59_Eval* _self_, jule::Ptr<_20d3a2b45_Fn> _49829_f, jule::Ptr<_20d3510bb_Token> _49837_errorToken) {
	if ((!(_20d439292_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_49829_f))._field_Public, (*(_49829_f))._field_Token)))) {
		_20d0893a9_pushErr(_self_, _49837_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_49829_f))._field_Ident, &__jule_any_type4)}));
		_20d08971c_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_20d08e249_checkDeprecated(_self_, &((*(_49829_f))._field_Directives), _49837_errorToken);
	jule::Ptr<_20d3a5a49_FnIns> _50717_ins = _20d3a43a5_instance(_49829_f);;
	_211eb2850_pushReference(_self_, &(_50717_ins));
	return _20d08ddd6_evalFnIns(_self_, _50717_ins);;
}



inline void _20d08ea63_pushIllegalCycleError(_20d088d59_Eval* _self_, jule::Ptr<_20d458aca_Var>* _51241_v1, jule::Ptr<_20d458aca_Var>* _51252_v2, _2240a0ad5_StrBuilder* _51267_message) {
	;
	jule::Str _51413_refers_to = _22730c3c1_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*((*(_51241_v1))))._field_Ident, &__jule_any_type4),jule::Any((*((*(_51252_v2))))._field_Ident, &__jule_any_type4)}));;
	jule::Slice<jule::U8> _51513_buf = _2240aab45_Buf(_51267_message);;
	_2240a989c_WriteStr(_51267_message, _2248a97b7_Repeat(jule::Str(" ", 1), 7LL));
	_2240a989c_WriteStr(_51267_message, _51413_refers_to);
	_2240a9b55_WriteByte(_51267_message, '\n');
	_2240a95e4_Write(_51267_message, _51513_buf);
}



inline jule::Bool _20d08ee5e_checkCrossCycle(_20d088d59_Eval* _self_, jule::Ptr<_20d458aca_Var>* _52235_v, _2240a0ad5_StrBuilder* _52249_message) {
	{
		auto expr = &((*((*(_52235_v))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211ebab88:;
		if (it != expr_end) {
			jule::Ptr<_20d458aca_Var> *_52316_d = it;
			{
				if (((*(_52316_d)) == (*(_self_))._field_owner)) {
					_20d08ea63_pushIllegalCycleError(_self_, _52235_v, _52316_d, _52249_message);
					return false;;
				};
				if ((!(_20d08ee5e_checkCrossCycle(_self_, _52316_d, _52249_message)))) {
					_20d08ea63_pushIllegalCycleError(_self_, _52235_v, _52316_d, _52249_message);
					return false;;
				};
			}
			_iter_next_211ebab88:;
			++it;
			goto _iter_begin_211ebab88;
		}
		_iter_end_211ebab88:;
	};
	return true;;
}



inline jule::Bool _20d09035a_checkIllegalCycles(_20d088d59_Eval* _self_, jule::Ptr<_20d458aca_Var>* _53942_v, jule::Ptr<_20d3510bb_Token> _53951_declToken) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*((*(_self_))._field_owner))._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_53942_v)))) {
		_20d0893a9_pushErr(_self_, (*((*(_self_))._field_owner))._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_owner))._field_Ident, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_2240a0ad5_StrBuilder _55217_message = static__2240a0e04_New(32LL);;
	if ((!(_20d08ee5e_checkCrossCycle(_self_, _53942_v, &(_55217_message))))) {
		jule::Str _55521_errMsg = _2240aa194_Str(&_55217_message);;
		_2240aa392_Clear(&_55217_message);
		_20d08ea63_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _53942_v, &(_55217_message));
		_55521_errMsg+=_2240aa194_Str(&_55217_message);
		_20d0893a9_pushErr(_self_, _53951_declToken, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_55521_errMsg, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{ jule::Slice<jule::Ptr<_20d458aca_Var>> &__jule_push_dest = (*((*(_self_))._field_owner))._field_Depends; __jule_push_dest.push((*(_53942_v))); };
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_20d087165_Data> _20d090756_evalVar(_20d088d59_Eval* _self_, jule::Ptr<_20d458aca_Var> _56730_v, jule::Ptr<_20d3510bb_Token> _56739_errorToken) {
	if ((!(_20d439292_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_56730_v))._field_Public, (*(_56730_v))._field_Token)))) {
		_20d0893a9_pushErr(_self_, _56739_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_56730_v))._field_Ident, &__jule_any_type4)}));
		_20d08971c_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_20d08e249_checkDeprecated(_self_, &((*(_56730_v))._field_Directives), _56739_errorToken);
	if (((*(_56730_v))._field_Token == nullptr)) {
		goto _julec_label_211ed518b;
	};
	(*(_56730_v))._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_211ec5742:;
			{
				jule::Bool _58617_ok = _20d09035a_checkIllegalCycles(_self_, &(_56730_v), _56739_errorToken);;
				if ((!(_58617_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_211ec57a8:;
			{
				if (((!((*(_56730_v))._field_Reference)) || _20d089d9e_isUnsafe(_self_))) {
					goto _match_end_211ec56dc;
				};
				jule::Ptr<_20d3ea9a1_scopeChecker> _59421_s = (*(_self_))._field_lookup.cast_ptr<_20d3ea9a1_scopeChecker>(0);;
				while ((((*(_59421_s))._field_owner == nullptr) && ((*(_59421_s))._field_parent != nullptr))) {
					{
						_59421_s=(*(_59421_s))._field_parent;
					}
				_iter_next_211ec6b1c:;
				}
				_iter_end_211ec6b1c:;;
				if (((((*(_59421_s))._field_owner != nullptr) && (*((*(_59421_s))._field_owner))._field_Anon) && ((*(_56730_v))._field_Scope != (*((*(_59421_s))._field_owner))._field_Scope))) {
					_20d0893a9_pushErr(_self_, _56739_errorToken, jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75), jule::Slice<jule::Any>::make({jule::Any((*(_56730_v))._field_Ident, &__jule_any_type4)}));
				};
			}
		}
		_match_end_211ec56dc:;
	};
	if (((*(_56730_v))._field_Scope == nullptr)) {
		_211eca15e_pushReference(_self_, &(_56730_v));
	};
	if (((!((*(_56730_v))._field_Binded)) && (((*(_56730_v))._field_Value == nullptr) || ((*((*(_56730_v))._field_Value))._field_Data == nullptr)))) {
		if ((*(_56730_v))._field_Constant) {
			_20d45062c_checkVar((*(_self_))._field_s, &(_56730_v), jule::Trait<_20d50e06a_Lookup>((*(_self_))._field_s, 3));
			if ((((*(_56730_v))._field_Value == nullptr) || ((*((*(_56730_v))._field_Value))._field_Data == nullptr))) {
				return nullptr;;
			};
		};
	};
	if ((((*(_56730_v))._field_Kind == nullptr) || ((*((*(_56730_v))._field_Kind))._field_Kind == nullptr))) {
		if (((*(_56730_v))._field_Scope != nullptr)) {
			return nullptr;;
		};
		_20d45062c_checkVar((*(_self_))._field_s, &(_56730_v), (*(_self_))._field_lookup);
		if ((((*(_56730_v))._field_Kind == nullptr) || ((*((*(_56730_v))._field_Kind))._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	_julec_label_211ed518b:;
	jule::Ptr<_20d087165_Data> _63817_d = jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=(*((*(_56730_v))._field_Kind))._field_Kind, ._field_Mutable=(*(_56730_v))._field_Mutable, ._field_Reference=(*(_56730_v))._field_Reference, ._field_Lvalue=(!((*(_56730_v))._field_Constant)), ._field_Model=jule::Any(_56730_v, &__jule_any_type8), });;
	if ((((!((*(_56730_v))._field_Binded)) && _20d458e60_IsInitialized(_56730_v.ptr())) && ((*((*(_56730_v))._field_Value))._field_Data != nullptr))) {
		(*(_63817_d))._field_IsRune=(*((*((*(_56730_v))._field_Value))._field_Data))._field_IsRune;
	};
	if (((*(_56730_v))._field_Constant && ((*((*((*(_56730_v))._field_Value))._field_Data))._field_Constant != nullptr))) {
		(*(_63817_d))._field_Constant=jule::new_ptr<_20b0655eb_Const>((*((*((*((*(_56730_v))._field_Value))._field_Data))._field_Constant)));
		(*(_63817_d))._field_Model=jule::Any((*(_63817_d))._field_Constant, &__jule_any_type19);
		if (_20d45947c_untypedConstant(_56730_v.ptr())) {
			_20d08a443_applyNumericPrefix(_self_, &(_63817_d));
			(*(_63817_d))._field_untyped=true;
		};
	};
	return _63817_d;;
}



inline jule::Ptr<_20d087165_Data> _20d090b52_evalTypeAlias(_20d088d59_Eval* _self_, jule::Ptr<_20d4dd49a_TypeAlias> _66236_ta, jule::Ptr<_20d3510bb_Token> _66252_errorToken) {
	if ((!(_20d439292_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_66236_ta))._field_Public, (*(_66236_ta))._field_Token)))) {
		_20d0893a9_pushErr(_self_, _66252_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_66236_ta))._field_Ident, &__jule_any_type4)}));
		_20d08971c_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_66236_ta))._field_Used=true;
	jule::Trait<_20d4ddcd6_Kind> _67117_kind = (*((*((*(_66236_ta))._field_Kind))._field_Kind))._field_Kind;;
	jule::Ptr<_20d087165_Data> _67217_d = nullptr;;
	{
		auto &_match_expr{ _67117_kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_211ee1230:;
			{
				_67217_d=_20d08d699__evalStruct(_self_, _67117_kind.cast_ptr<_20d39066b_StructIns>(0));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_211ee1054:;
			{
				_67217_d=_20d08c720__evalEnum(_self_, _67117_kind.cast_ptr<_20d3b85d9_Enum>(3));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_211ede31b:;
			{
				_67217_d=_20d08ce5c__evalTypeEnum(_self_, _67117_kind.cast_ptr<_20d3b9ce4_TypeEnum>(4));
			}
		}
		else {
			_case_begin_211ede2a5:;
			{
				_67217_d=jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=(*((*((*(_66236_ta))._field_Kind))._field_Kind))._field_Kind}), ._field_Decl=true, });
				if ((*(_66236_ta))._field_Binded) {
					(*((*(_67217_d))._field_Kind))._field_BindIdent=(*(_66236_ta))._field_Ident;
				} else {
					(*((*(_67217_d))._field_Kind))._field_BindIdent=(*((*((*(_66236_ta))._field_Kind))._field_Kind))._field_BindIdent;
				};
				(*(_67217_d))._field_Model=jule::Any((*(_67217_d))._field_Kind, &__jule_any_type87);
			}
		}
		_match_end_211ede250:;
	};
	(*((*(_67217_d))._field_Kind))._field_Generic=(*(_66236_ta))._field_Generic;
	return _67217_d;;
}



inline jule::Ptr<_20d087165_Data> _20d09104d_evalDef(_20d088d59_Eval* _self_, jule::Any* _69831_def, jule::Ptr<_20d3510bb_Token> _69841_ident) {
	{
		auto &_match_expr{ (*(_69831_def)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_211ee46b7:;
			{
				return _20d090756_evalVar(_self_, (*(_69831_def)).cast_ptr<_20d458aca_Var>(&__jule_any_type8), _69841_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_211ee472d:;
			{
				return _20d08cb1b_evalEnum(_self_, (*(_69831_def)).cast_ptr<_20d3b85d9_Enum>(&__jule_any_type68), _69841_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_211ee4794:;
			{
				return _20d08d358_evalTypeEnum(_self_, (*(_69831_def)).cast_ptr<_20d3b9ce4_TypeEnum>(&__jule_any_type69), _69841_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_211ee480a:;
			{
				return _20d08da95_evalStruct(_self_, _20d38ca0e_instance((*(_69831_def)).cast_ptr<_20d38c58b_Struct>(&__jule_any_type66)), _69841_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_211ee4871:;
			{
				jule::Ptr<_20d3a2b45_Fn> _70921_f = (*(_69831_def)).cast_ptr<_20d3a2b45_Fn>(&__jule_any_type65);;
				if ((!(*(_70921_f))._field_Ident.equal("init", 4))) {
					return _20d08e645_evalFn(_self_, _70921_f, _69841_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_211ee48e8:;
			{
				return _20d08ddd6_evalFnIns(_self_, (*(_69831_def)).cast_ptr<_20d3a5a49_FnIns>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_211ee4970:;
			{
				return _20d090b52_evalTypeAlias(_self_, (*(_69831_def)).cast_ptr<_20d4dd49a_TypeAlias>(&__jule_any_type67), _69841_ident);;
			}
		}
		_match_end_211ee4662:;
	};
	_20d0893a9_pushErr(_self_, _69841_ident, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_69841_ident))._field_Kind, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_20d087165_Data> _20d09138e_evalIdent(_20d088d59_Eval* _self_, jule::Ptr<_20d372708_IdentExpr> _72228_ident) {
	jule::Any _72317_def = _20d08c126_getDef(_self_, &((*(_72228_ident))._field_Ident), (*(_72228_ident))._field_Binded);;
	return _20d09104d_evalDef(_self_, &(_72317_def), (*(_72228_ident))._field_Token);;
}



inline jule::Ptr<_20d087165_Data> _20d0916d0_evalUnary(jule::Ptr<_20d088d59_Eval> _self_, jule::Ptr<_20d372d8a_UnaryExpr> _72733_u) {
	_20d4ce25a_unaryEval _72817_unary = static__20d4ce69a_new(_self_);;
	return _20d4d0aca_eval(&_72817_unary, _72733_u);;
}



inline jule::Ptr<_20d087165_Data> _20d091a21_evalVariadic(jule::Ptr<_20d088d59_Eval> _self_, jule::Ptr<_20d373264_VariadicExpr> _73236_v) {
	if (((*(_73236_v))._field_Expr == nullptr)) {
		_20d0893a9_pushErr(_self_.ptr(), (*(_73236_v))._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20d4de28c_TypeKind> _73817_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_73817_prefix;
	});;
	jule::Ptr<_20d087165_Data> _74217_d = _20d4cdc93_evalExpr(_self_, (*(_73236_v))._field_Expr);;
	if ((_74217_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_20d4e18ee_Variadicable((*(_74217_d))._field_Kind.ptr())))) {
		_20d0893a9_pushErr(_self_.ptr(), (*(_73236_v))._field_Token, jule::Str("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_74217_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20d4eb60c_Slc> _75217_slc = _20d4e2bdb_Slc((*(_74217_d))._field_Kind.ptr());;
	(*(_74217_d))._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_BindIdent=(*((*(_75217_slc))._field_Elem))._field_BindIdent, ._field_Generic=(*((*(_75217_slc))._field_Elem))._field_Generic, ._field_Variadic=true, ._field_Kind=(*((*(_75217_slc))._field_Elem))._field_Kind});
	return _74217_d;;
}



inline jule::Ptr<_20d087165_Data> _20d091d62_evalUnsafe(jule::Ptr<_20d088d59_Eval> _self_, jule::Ptr<_20d372252_UnsafeExpr> _76234_u) {
	jule::Bool _76313_unsafety = (*(_self_))._field_unsafety;;
	(*(_self_))._field_unsafety=true;
	jule::Ptr<_20d087165_Data> _76517_d = _20d4cdc93_evalExpr(_self_, (*(_76234_u))._field_Expr);;
	(*(_self_))._field_unsafety=_76313_unsafety;
	return _76517_d;;
}



inline jule::Ptr<_20d087165_Data> _20d0921a3_evalArr(jule::Ptr<_20d088d59_Eval> _self_, jule::Ptr<_20d377301_SliceExpr> _77031_s) {
	jule::Ptr<_20d4ed92d_Arr> _77217_pt = _20d4e2955_Arr((*(_self_))._field_prefix.ptr());;
	jule::Ptr<_20d4ed92d_Arr> _77417_arr = jule::new_ptr<_20d4ed92d_Arr>(_20d4ed92d_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=(*(_77217_pt))._field_Elem});;
	jule::Bool _78017_filled = false;;
	if (((*(_77031_s))._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ (*((*(_77031_s))._field_Exprs[1LL]))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type79) {
				_case_begin_21200ad3d:;
				{
					if (((*((*((*(_77031_s))._field_Exprs[1LL]))._field_Kind.cast_ptr<_20d373264_VariadicExpr>(&__jule_any_type79)))._field_Expr != nullptr)) {
						goto _match_end_21200ac94;
					};
					if ((*(_77217_pt))._field_Auto) {
						_20d0893a9_pushErr(_self_.ptr(), (*(_77031_s))._field_Token, jule::Str("auto-sized arrays cannot filled", 31), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_78017_filled=true;
					(*(_77031_s))._field_Exprs=(*(_77031_s))._field_Exprs.slice(0LL, 1LL);
				}
			}
			_match_end_21200ac94:;
		};
	};
	(*(_77417_arr))._field_N=static_cast<jule::I64>((*(_77031_s))._field_Exprs.len());
	if ((!((*(_77217_pt))._field_Auto))) {
		if (((*(_77417_arr))._field_N > (*(_77217_pt))._field_N)) {
			_20d0893a9_pushErr(_self_.ptr(), (*(_77031_s))._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else if (((*(_77417_arr))._field_N < (*(_77217_pt))._field_N)) {
			(*(_77417_arr))._field_N=(*(_77217_pt))._field_N;
		};
	};
	jule::Ptr<_20d39a005_ArrayExprModel> _80917_model = jule::new_ptr<_20d39a005_ArrayExprModel>(_20d39a005_ArrayExprModel{._field_Kind=_77417_arr, });;
	if (_78017_filled) {
		(*(_80917_model))._field_Elems=jule::Slice<jule::Any>::alloc(0LL, 2LL, jule::Any(nullptr));
	} else {
		(*(_80917_model))._field_Elems=jule::Slice<jule::Any>::alloc(0LL, (*(_77031_s))._field_Exprs.len(), jule::Any(nullptr));
	};
	jule::Ptr<_20d4de28c_TypeKind> _81817_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=(*(_77417_arr))._field_Elem;
	{
		auto expr = &((*(_77031_s))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212011162:;
		if (it != expr_end) {
			jule::Ptr<_20d370ccd_Expr> _82021_elem = *it;
			{
				jule::Ptr<_20d087165_Data> _82121_d = _20d4cdc93_evalExpr(_self_, _82021_elem);;
				if ((_82121_d == nullptr)) {
					goto _iter_next_212011162;
				};
				_20d441541_checkAssignType((*(_self_))._field_s, false, &((*(_77417_arr))._field_Elem), &(_82121_d), (*(_77031_s))._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = (*(_80917_model))._field_Elems; __jule_push_dest.push((*(_82121_d))._field_Model); };
			}
			_iter_next_212011162:;
			++it;
			goto _iter_begin_212011162;
		}
		_iter_end_212011162:;
	};
	(*(_self_))._field_prefix=_81817_prefix;
	if (_78017_filled) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_80917_model))._field_Elems; __jule_push_dest.push(nullptr); };
	};
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(_77417_arr, 25)}), ._field_Mutable=true, ._field_Model=jule::Any(_80917_model, &__jule_any_type88), });;
}



inline jule::Ptr<_20d087165_Data> _20d092659_evalExpSlc(jule::Ptr<_20d088d59_Eval> _self_, jule::Ptr<_20d377301_SliceExpr> _84434_s, jule::Ptr<_20d4de28c_TypeKind> _84453_t, jule::Any _84471_first) {
	jule::Ptr<_20d4eb60c_Slc> _84517_slc = jule::new_ptr<_20d4eb60c_Slc>(_20d4eb60c_Slc{._field_Elem=_84453_t});;
	jule::I64 _84917_i = 0LL;;
	jule::Ptr<_20d396ead_SliceExprModel> _85017_model = jule::new_ptr<_20d396ead_SliceExprModel>(_20d396ead_SliceExprModel{._field_ElemKind=_84453_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, (*(_84434_s))._field_Exprs.len(), jule::Any(nullptr))});;
	if ((_84471_first != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_85017_model))._field_Elems; __jule_push_dest.push(_84471_first); };
		_84917_i=1LL;
	};
	jule::Ptr<_20d4de28c_TypeKind> _85917_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=(*(_84517_slc))._field_Elem;
	{
		auto expr = (*(_84434_s))._field_Exprs.slice(_84917_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_212018b92:;
		if (it != expr_end) {
			jule::Ptr<_20d370ccd_Expr> _86121_elem = *it;
			{
				jule::Ptr<_20d087165_Data> _86221_d = _20d4cdc93_evalExpr(_self_, _86121_elem);;
				if ((_86221_d == nullptr)) {
					goto _iter_next_212018b92;
				};
				_20d441541_checkAssignType((*(_self_))._field_s, false, &((*(_84517_slc))._field_Elem), &(_86221_d), (*(_84434_s))._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = (*(_85017_model))._field_Elems; __jule_push_dest.push((*(_86221_d))._field_Model); };
			}
			_iter_next_212018b92:;
			++it;
			goto _iter_begin_212018b92;
		}
		_iter_end_212018b92:;
	};
	(*(_self_))._field_prefix=_85917_prefix;
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(_84517_slc, 22)}), ._field_Mutable=true, ._field_Model=jule::Any(_85017_model, &__jule_any_type80), });;
}



inline jule::Ptr<_20d087165_Data> _20d09299a_evalSliceExpr(jule::Ptr<_20d088d59_Eval> _self_, jule::Ptr<_20d377301_SliceExpr> _88037_s) {
	if (((*(_self_))._field_prefix != nullptr)) {
		{
			
			if ((_20d4e2955_Arr((*(_self_))._field_prefix.ptr()) != nullptr)) {
				_case_begin_21201cdd8:;
				{
					return _20d0921a3_evalArr(_self_, _88037_s);;
				}
			}
			else if ((_20d4e2bdb_Slc((*(_self_))._field_prefix.ptr()) != nullptr)) {
				_case_begin_21201ce60:;
				{
					jule::Ptr<_20d4eb60c_Slc> _88625_pt = _20d4e2bdb_Slc((*(_self_))._field_prefix.ptr());;
					return _20d092659_evalExpSlc(_self_, _88037_s, (*(_88625_pt))._field_Elem, nullptr);;
				}
			}
			_match_end_21201ccc8:;
		};
	};
	jule::Ptr<_20d4de28c_TypeKind> _89117_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	if (((*(_88037_s))._field_Exprs.len() == 0LL)) {
		_20d0893a9_pushErr(_self_.ptr(), (*(_88037_s))._field_Token, jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20d087165_Data> _89917_firstElem = _20d4cdc93_evalExpr(_self_, (*(_88037_s))._field_Exprs[0LL]);;
	if ((_89917_firstElem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_20d087165_Data> _90417_d = _20d092659_evalExpSlc(_self_, _88037_s, (*(_89917_firstElem))._field_Kind, (*(_89917_firstElem))._field_Model);;
	(*(_self_))._field_prefix=_89117_prefix;
	return _90417_d;;
}



inline void _20d092d0d_checkIntegerIndexingByData(_20d088d59_Eval* _self_, jule::Ptr<_20d087165_Data>* _91050_d, jule::Ptr<_20d3510bb_Token> _91060_token) {
	jule::Str _91113_err_key = _20d4d9d8c_checkDataForIntegerIndexing(_91050_d);;
	{
		auto &_match_expr{ _91113_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_212024a49:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_212024054:;
			{
				_20d0893a9_pushErr(_self_, _91060_token, _91113_err_key, jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*((*(_91050_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			}
		}
		else {
			_case_begin_212024461:;
			{
				_20d0893a9_pushErr(_self_, _91060_token, _91113_err_key, jule::Slice<jule::Any>());
			}
		}
		_match_end_21202440b:;
	};
}



inline void _20d09322b_indexingPtr(_20d088d59_Eval* _self_, jule::Ptr<_20d087165_Data>* _92235_d, jule::Ptr<_20d087165_Data>* _92250_index, jule::Ptr<_20d377c91_IndexingExpr>* _92265_i) {
	_20d092d0d_checkIntegerIndexingByData(_self_, _92250_index, (*((*(_92265_i))))._field_Token);
	(*((*(_92235_d))))._field_Lvalue=true;
	jule::Ptr<_20d4ee401_Ptr> _92617_ptr = _20d4e21a2_Ptr((*((*(_92235_d))))._field_Kind.ptr());;
	{
		
		if (_20d4eee3a_IsUnsafe(_92617_ptr.ptr())) {
			_case_begin_212027255:;
			{
				_20d0893a9_pushErr(_self_, (*((*(_92265_i))))._field_Token, jule::Str("unsafe pointers are not supports indexing", 41), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_20d089d9e_isUnsafe(_self_)))) {
			_case_begin_2120272cc:;
			{
				_20d0893a9_pushErr(_self_, (*((*(_92265_i))))._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
			}
		}
		_match_end_212027200:;
	};
	(*((*(_92235_d))))._field_Kind=(*(_92617_ptr))._field_Elem;
}



inline void _20d093649_indexingArr(_20d088d59_Eval* _self_, jule::Ptr<_20d087165_Data>* _93835_d, jule::Ptr<_20d087165_Data>* _93850_index, jule::Ptr<_20d377c91_IndexingExpr>* _93865_i) {
	jule::Ptr<_20d4ed92d_Arr> _93917_arr = _20d4e2955_Arr((*((*(_93835_d))))._field_Kind.ptr());;
	(*((*(_93835_d))))._field_Kind=(*(_93917_arr))._field_Elem;
	_20d092d0d_checkIntegerIndexingByData(_self_, _93850_index, (*((*(_93865_i))))._field_Token);
	(*((*(_93835_d))))._field_Lvalue=true;
	if ((_20d087a39_IsConst((*(_93850_index)).ptr()) && (_20b0682ad_AsF64((*((*(_93850_index))))._field_Constant.ptr()) >= static_cast<jule::F64>((*(_93917_arr))._field_N)))) {
		_20d0893a9_pushErr(_self_, (*((*(_93865_i))))._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
	};
}



inline void _20d093a67_indexingSlc(_20d088d59_Eval* _self_, jule::Ptr<_20d087165_Data>* _94835_d, jule::Ptr<_20d087165_Data>* _94850_index, jule::Ptr<_20d377c91_IndexingExpr>* _94865_i) {
	jule::Ptr<_20d4eb60c_Slc> _94917_slc = _20d4e2bdb_Slc((*((*(_94835_d))))._field_Kind.ptr());;
	(*((*(_94835_d))))._field_Kind=(*(_94917_slc))._field_Elem;
	_20d092d0d_checkIntegerIndexingByData(_self_, _94850_index, (*((*(_94865_i))))._field_Token);
	(*((*(_94835_d))))._field_Lvalue=true;
	if ((!(_20d087a39_IsConst((*(_94850_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_94835_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_21202e603:;
			{
				jule::Ptr<_20d396ead_SliceExprModel> _96021_m = (*((*(_94835_d))))._field_Model.cast_ptr<_20d396ead_SliceExprModel>(&__jule_any_type80);;
				jule::F64 _96117_indx = _20b0682ad_AsF64((*((*(_94850_index))))._field_Constant.ptr());;
				if ((_96117_indx >= static_cast<jule::F64>((*(_96021_m))._field_Elems.len()))) {
					_20d0893a9_pushErr(_self_, (*((*(_94865_i))))._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
				} else {
					(*((*(_94835_d))))._field_Model=(*(_96021_m))._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_96117_indx))];
					(*((*(_94835_d))))._field_Decl=true;
				};
			}
		}
		_match_end_21202e59d:;
	};
}



inline void _20d093e85_indexingMap(_20d088d59_Eval* _self_, jule::Ptr<_20d087165_Data>* _97135_d, jule::Ptr<_20d087165_Data>* _97150_index, jule::Ptr<_20d377c91_IndexingExpr>* _97169_i) {
	(*((*(_97135_d))))._field_Lvalue=true;
	if (((*(_97150_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_20d4ecca1_Map> _97617_m = _20d4e3725_Map((*((*(_97135_d))))._field_Kind.ptr());;
	_20d070b87_assignTypeChecker _97717_atc = _20d070b87_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_97617_m))._field_Key, ._field_d=(*(_97150_index)), ._field_errorToken=(*((*(_97169_i))))._field_Token};;
	_20d071dec_check(&_97717_atc);
	(*((*(_97135_d))))._field_Kind=(*(_97617_m))._field_Val;
}



inline void _20d0943a3_indexingStr(_20d088d59_Eval* _self_, jule::Ptr<_20d087165_Data>* _98735_d, jule::Ptr<_20d087165_Data>* _98750_index, jule::Ptr<_20d377c91_IndexingExpr>* _98765_i) {
	(*((*(_98735_d))))._field_Kind=_20d564697_primU8;
	(*((*(_98735_d))))._field_Mutable=false;
	(*((*(_98735_d))))._field_Lvalue=true;
	if (((*(_98750_index)) == nullptr)) {
		return;;
	};
	_20d092d0d_checkIntegerIndexingByData(_self_, _98750_index, (*((*(_98765_i))))._field_Token);
	if ((!(_20d087a39_IsConst((*(_98750_index)).ptr())))) {
		(*((*(_98735_d))))._field_Constant=nullptr;
		return;;
	};
	if (_20d087a39_IsConst((*(_98735_d)).ptr())) {
		jule::Ptr<_20d3510bb_Token> _100417_errorToken = (*((*(_98765_i))))._field_Token;;
		jule::I64 _100517_j = _20b067c91_AsI64((*((*(_98750_index))))._field_Constant.ptr());;
		jule::Str _100617_s = _20b067774_ReadStr((*((*(_98735_d))))._field_Constant.ptr());;
		if ((static_cast<jule::I64>(_100517_j) >= _100617_s.len())) {
			_20d0893a9_pushErr(_self_, _100417_errorToken, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else {
			_20b06881e_SetU64((*((*(_98735_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_100617_s[_100517_j])));
		};
	};
}



inline void _20d0947c1_toIndexing(_20d088d59_Eval* _self_, jule::Ptr<_20d087165_Data>* _101534_d, jule::Ptr<_20d087165_Data>* _101549_index, jule::Ptr<_20d377c91_IndexingExpr>* _101568_i) {
	{
		
		if ((_20d4e21a2_Ptr((*((*(_101534_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_21203a895:;
			{
				_20d09322b_indexingPtr(_self_, _101534_d, _101549_index, _101568_i);
				return;;
			}
		}
		else if ((_20d4e2955_Arr((*((*(_101534_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_21203a91c:;
			{
				_20d093649_indexingArr(_self_, _101534_d, _101549_index, _101568_i);
				return;;
			}
		}
		else if ((_20d4e2bdb_Slc((*((*(_101534_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_21203a994:;
			{
				_20d093a67_indexingSlc(_self_, _101534_d, _101549_index, _101568_i);
				return;;
			}
		}
		else if ((_20d4e3725_Map((*((*(_101534_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_21203aa1b:;
			{
				_20d093e85_indexingMap(_self_, _101534_d, _101549_index, _101568_i);
				return;;
			}
		}
		else if ((_20d4e1b85_Prim((*((*(_101534_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_21203aa93:;
			{
				jule::Ptr<_20d4e710d_Prim> _103017_prim = _20d4e1b85_Prim((*((*(_101534_d))))._field_Kind.ptr());;
				{
					
					if (_20d4ea595_IsStr(_103017_prim.ptr())) {
						_case_begin_21203edb6:;
						{
							_20d0943a3_indexingStr(_self_, _101534_d, _101549_index, _101568_i);
							return;;
						}
					}
					_match_end_21203ed2d:;
				};
			}
		}
		_match_end_21203a752:;
	};
	_20d0893a9_pushErr(_self_, (*((*(_101568_i))))._field_Token, jule::Str("type @ is not support indexing", 30), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*((*(_101534_d))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Bool _20d094c77_pushGenericsFromExprSubIdent(jule::Ptr<_20d088d59_Eval> _self_, jule::Ptr<_20d373de1_SubIdentExpr>* _104053_sexpr, jule::Slice<jule::Ptr<_20d36b999_TypeDecl>>* _104114_generics, jule::Ptr<_20d370ccd_Expr>* _104142_expr) {
	jule::Ptr<_20d36c3a1_SubIdentTypeDecl> _104217_t = jule::new_ptr<_20d36c3a1_SubIdentTypeDecl>();;
	if ((!(_20d4dac7d_pushSubIdentFromExpr(jule::Any((*(_104053_sexpr)), &__jule_any_type89), &(_104217_t))))) {
		_20d0893a9_pushErr(_self_.ptr(), (*((*(_104142_expr))))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_20d36b999_TypeDecl>> &__jule_push_dest = (*(_104114_generics)); __jule_push_dest.push(jule::new_ptr<_20d36b999_TypeDecl>(_20d36b999_TypeDecl{._field_Kind=jule::Any(_104217_t, &__jule_any_type90)})); };
	return true;;
}



inline jule::Bool _20d095173_pushGenericsFromData(jule::Ptr<_20d088d59_Eval> _self_, jule::Slice<jule::Ptr<_20d36b999_TypeDecl>>* _105145_generics, jule::Ptr<_20d370ccd_Expr>* _105173_expr) {
	{
		auto &_match_expr{ (*((*(_105173_expr))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type91) {
			_case_begin_212043491:;
			{
				jule::Ptr<_20d372d8a_UnaryExpr> _105421_u = (*((*(_105173_expr))))._field_Kind.cast_ptr<_20d372d8a_UnaryExpr>(&__jule_any_type91);;
				{
					auto &_match_expr{ (*((*(_105421_u))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(62LLU)) {
						_case_begin_2120451b8:;
						{
							jule::Ptr<_20d36d4c3_PtrTypeDecl> _105725_kind = jule::new_ptr<_20d36d4c3_PtrTypeDecl>();;
							jule::Slice<jule::Ptr<_20d36b999_TypeDecl>> _105825__generics = jule::Slice<jule::Ptr<_20d36b999_TypeDecl>>::alloc(0LL, 1LL);;
							_20d095173_pushGenericsFromData(_self_, &(_105825__generics), &((*(_105421_u))._field_Expr));
							(*(_105725_kind))._field_Elem=_105825__generics[0LL];
							{ jule::Slice<jule::Ptr<_20d36b999_TypeDecl>> &__jule_push_dest = (*(_105145_generics)); __jule_push_dest.push(jule::new_ptr<_20d36b999_TypeDecl>(_20d36b999_TypeDecl{._field_Token=(*((*(_105173_expr))))._field_Token, ._field_Kind=jule::Any(_105725_kind, &__jule_any_type75)})); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(65LLU)) {
						_case_begin_21204632e:;
						{
							jule::Ptr<_20d36ca44_SptrTypeDecl> _106625_kind = jule::new_ptr<_20d36ca44_SptrTypeDecl>();;
							jule::Slice<jule::Ptr<_20d36b999_TypeDecl>> _106725__generics = jule::Slice<jule::Ptr<_20d36b999_TypeDecl>>::alloc(0LL, 1LL);;
							_20d095173_pushGenericsFromData(_self_, &(_106725__generics), &((*(_105421_u))._field_Expr));
							(*(_106625_kind))._field_Elem=_106725__generics[0LL];
							{ jule::Slice<jule::Ptr<_20d36b999_TypeDecl>> &__jule_push_dest = (*(_105145_generics)); __jule_push_dest.push(jule::new_ptr<_20d36b999_TypeDecl>(_20d36b999_TypeDecl{._field_Token=(*((*(_105173_expr))))._field_Token, ._field_Kind=jule::Any(_106625_kind, &__jule_any_type76)})); };
						}
					}
					else {
						_case_begin_212045707:;
						{
							_20d0893a9_pushErr(_self_.ptr(), (*(_105421_u))._field_Op, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_2120456a2:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_2120443c6:;
			{
				{ jule::Slice<jule::Ptr<_20d36b999_TypeDecl>> &__jule_push_dest = (*(_105145_generics)); __jule_push_dest.push((*((*(_105173_expr))))._field_Kind.cast_ptr<_20d36b999_TypeDecl>(&__jule_any_type92)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_21204443c:;
			{
				jule::Ptr<_20d373de1_SubIdentExpr> _108121_sexpr = (*((*(_105173_expr))))._field_Kind.cast_ptr<_20d373de1_SubIdentExpr>(&__jule_any_type89);;
				return _20d094c77_pushGenericsFromExprSubIdent(_self_, &(_108121_sexpr), _105145_generics, _105173_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_2120444a3:;
			{
				jule::Ptr<_20d372708_IdentExpr> _108421_ident = (*((*(_105173_expr))))._field_Kind.cast_ptr<_20d372708_IdentExpr>(&__jule_any_type83);;
				{ jule::Slice<jule::Ptr<_20d36b999_TypeDecl>> &__jule_push_dest = (*(_105145_generics)); __jule_push_dest.push(jule::new_ptr<_20d36b999_TypeDecl>(_20d36b999_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_20d36c0a4_IdentTypeDecl>(_20d36c0a4_IdentTypeDecl{._field_Token=(*(_108421_ident))._field_Token, ._field_Ident=(*(_108421_ident))._field_Ident, ._field_Binded=(*(_108421_ident))._field_Binded, }), &__jule_any_type20)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_212043815:;
			{
				{
					auto expr = &((*((*((*(_105173_expr))))._field_Kind.cast_ptr<_20d37199e_TupleExpr>(&__jule_any_type84)))._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21204c5dd:;
					if (it != expr_end) {
						jule::Ptr<_20d370ccd_Expr> _109325_texpr = *it;
						{
							if ((!(_20d095173_pushGenericsFromData(_self_, _105145_generics, &(_109325_texpr))))) {
								return false;;
							};
						}
						_iter_next_21204c5dd:;
						++it;
						goto _iter_begin_21204c5dd;
					}
					_iter_end_21204c5dd:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_21204387b:;
			{
				jule::Ptr<_20d373a17_NsSelectionExpr> _109921_ns = (*((*(_105173_expr))))._field_Kind.cast_ptr<_20d373a17_NsSelectionExpr>(&__jule_any_type93);;
				jule::Ptr<_20d36c0a4_IdentTypeDecl> _110021_decl = jule::new_ptr<_20d36c0a4_IdentTypeDecl>(_20d36c0a4_IdentTypeDecl{._field_Token=(*(_109921_ns))._field_Ident, ._field_Ident=(*((*(_109921_ns))._field_Ident))._field_Kind, });;
				{ jule::Slice<jule::Ptr<_20d36b999_TypeDecl>> &__jule_push_dest = (*(_105145_generics)); __jule_push_dest.push(jule::new_ptr<_20d36b999_TypeDecl>(_20d36b999_TypeDecl{._field_Token=(*(_110021_decl))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_20d36c747_NamespaceTypeDecl>(_20d36c747_NamespaceTypeDecl{._field_Idents=(*(_109921_ns))._field_Ns, ._field_Kind=jule::new_ptr<_20d36b999_TypeDecl>(_20d36b999_TypeDecl{._field_Token=(*(_110021_decl))._field_Token, ._field_Kind=jule::Any(_110021_decl, &__jule_any_type20)})}), &__jule_any_type94)})); };
			}
		}
		else {
			_case_begin_21204379e:;
			{
				_20d0893a9_pushErr(_self_.ptr(), (*((*(_105173_expr))))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_212043749:;
	};
	return true;;
}



inline void _20d0954d6_evalIdentDeclFromIndexing(jule::Ptr<_20d088d59_Eval> _self_, jule::Ptr<_20d087165_Data>* _112150_d, jule::Ptr<_20d377c91_IndexingExpr>* _112165_i) {
	jule::Ptr<_20d39066b_StructIns> _112217_s = _20d4e3208_Struct((*((*(_112150_d))))._field_Kind.ptr());;
	if ((_112217_s == nullptr)) {
		_20d0893a9_pushErr(_self_.ptr(), (*((*((*(_112165_i))))._field_Expr))._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*((*(_112150_d))))._field_Kind.ptr()), &__jule_any_type4)}));
		(*(_112150_d))=nullptr;
		return;;
	};
	jule::Ptr<_20d36c0a4_IdentTypeDecl> _112917_decl = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_112165_i))))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_212054518:;
			{
				jule::Ptr<_20d372708_IdentExpr> _113221_expr = (*((*((*(_112165_i))))._field_Expr))._field_Kind.cast_ptr<_20d372708_IdentExpr>(&__jule_any_type83);;
				_112917_decl=jule::new_ptr<_20d36c0a4_IdentTypeDecl>(_20d36c0a4_IdentTypeDecl{._field_Token=(*(_113221_expr))._field_Token, ._field_Ident=(*(_113221_expr))._field_Ident, ._field_Binded=(*(_113221_expr))._field_Binded, });
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_21205578e:;
			{
				jule::Ptr<_20d373a17_NsSelectionExpr> _113921_expr = (*((*((*(_112165_i))))._field_Expr))._field_Kind.cast_ptr<_20d373a17_NsSelectionExpr>(&__jule_any_type93);;
				_112917_decl=jule::new_ptr<_20d36c0a4_IdentTypeDecl>(_20d36c0a4_IdentTypeDecl{._field_Token=(*(_113921_expr))._field_Ident, ._field_Ident=(*((*(_113921_expr))._field_Ident))._field_Kind, });
			}
		}
		else {
			_case_begin_21205498b:;
			{
				_20d0893a9_pushErr(_self_.ptr(), (*((*(_112165_i))))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				(*(_112150_d))=nullptr;
				return;;
			}
		}
		_match_end_212054936:;
	};
	if ((!(_20d095173_pushGenericsFromData(_self_, &((*(_112917_decl))._field_Generics), &((*((*(_112165_i))))._field_Index))))) {
		(*(_112150_d))=nullptr;
		return;;
	};
	_112217_s=({ auto _wrap_copy = _20d4c3e42_typeChecker(_self_.ptr()); _20d50533b_fromStruct(&_wrap_copy, &(_112917_decl), &((*(_112217_s))._field_Decl)); });
	if ((_112217_s == nullptr)) {
		(*(_112150_d))=nullptr;
		return;;
	};
	(*((*((*(_112150_d))))._field_Kind))._field_Kind=jule::Trait<_20d4ddcd6_Kind>(_112217_s, 0);
}



inline jule::Bool _20d09598c_checkGenericFn(jule::Ptr<_20d088d59_Eval> _self_, jule::Ptr<_20d3a5a49_FnIns>* _116439_f, jule::Ptr<_20d3510bb_Token>* _116455_et, jule::Any* _116472_model) {
	jule::Bool _116513_ok = _20d443b3c_reloadFnInsTypes((*(_self_))._field_s, (*(_116439_f)));;
	(*((*(_116439_f))))._field_reloaded=true;
	if ((!(_116513_ok))) {
		return false;;
	};
	jule::Ptr<_20d3a5a49_FnIns> _117017_existInstance = _20d3a46b3_appendInstance((*((*(_116439_f))))._field_Decl.ptr(), _116439_f);;
	if ((!(_20d442b91_checkConstraintsFn((*(_self_))._field_s, _116439_f, _116455_et, _117017_existInstance)))) {
		return false;;
	};
	if ((_117017_existInstance != nullptr)) {
		(*(_116439_f))=_117017_existInstance;
		_20d4da909_updateModelToGenericIns(_116472_model, &(_117017_existInstance));
	} else {
		_20d453784_checkFnInsCaller((*(_self_))._field_s, _116439_f, (*(_116455_et)));
	};
	return true;;
}



inline void _20d095d00_evalFnGenericFromIndexing(jule::Ptr<_20d088d59_Eval> _self_, jule::Ptr<_20d087165_Data>* _118950_d, jule::Ptr<_20d377c91_IndexingExpr>* _118965_i) {
	jule::Slice<jule::Ptr<_20d36b999_TypeDecl>> _119017_generics = jule::Slice<jule::Ptr<_20d36b999_TypeDecl>>::alloc(0LL, 8LLU);;
	if ((!(_20d095173_pushGenericsFromData(_self_, &(_119017_generics), &((*((*(_118965_i))))._field_Index))))) {
		(*(_118950_d))=nullptr;
		return;;
	};
	jule::Ptr<_20d3a5a49_FnIns> _119617_f = _20d4e2e72_Fn((*((*(_118950_d))))._field_Kind.ptr());;
	jule::I64 _119717_genericsLen = 0LL;;
	if (((*(_119617_f))._field_Decl != nullptr)) {
		_119717_genericsLen=static_cast<jule::I64>((*((*(_119617_f))._field_Decl))._field_Generics.len());
	};
	if ((!(_20d43a062_checkGenericQuantity((*(_self_))._field_s.ptr(), _119717_genericsLen, static_cast<jule::I64>(_119017_generics.len()), (*((*((*(_118965_i))))._field_Expr))._field_Token)))) {
		(*(_118950_d))=nullptr;
		return;;
	};
	(*(_119617_f))._field_Generics=jule::Slice<jule::Ptr<_20d4dc8a6_InsGeneric>>::alloc(0LL, (*((*(_119617_f))._field_Decl))._field_Generics.len());
	{
		auto expr = &(_119017_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21206302c:;
		if (it != expr_end) {
			jule::Ptr<_20d36b999_TypeDecl> _120821_g = *it;
			{
				jule::Ptr<_20d087165_Data> _120921_k = _20d4c4283_evalType(_self_.ptr(), _120821_g);;
				if ((_120921_k == nullptr)) {
					(*(_118950_d))=nullptr;
					return;;
				};
				{ jule::Slice<jule::Ptr<_20d4dc8a6_InsGeneric>> &__jule_push_dest = (*(_119617_f))._field_Generics; __jule_push_dest.push(jule::new_ptr<_20d4dc8a6_InsGeneric>(_20d4dc8a6_InsGeneric{._field_Kind=(*(_120921_k))._field_Kind, })); };
			}
			_iter_next_21206302c:;
			++it;
			goto _iter_begin_21206302c;
		}
		_iter_end_21206302c:;
	};
	if (_20d3a6ece_IsBuiltin(_119617_f.ptr())) {
		return;;
	};
	if (_20d09598c_checkGenericFn(_self_, &(_119617_f), &((*((*((*(_118965_i))))._field_Expr))._field_Token), &((*((*(_118950_d))))._field_Model))) {
		(*((*((*(_118950_d))))._field_Kind))._field_Kind=jule::Trait<_20d4ddcd6_Kind>(_119617_f, 1);
	} else {
		(*(_118950_d))=nullptr;
	};
}



inline jule::Ptr<_20d087165_Data> _20d096141_evalIndexing(jule::Ptr<_20d088d59_Eval> _self_, jule::Ptr<_20d377c91_IndexingExpr> _122836_i) {
	jule::Ptr<_20d4de28c_TypeKind> _122917_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_122917_prefix;
	});;
	jule::Ptr<_20d087165_Data> _123317_d = _20d4cce7e_evalExprKind(_self_, (*((*(_122836_i))._field_Expr))._field_Kind);;
	if ((_123317_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_123317_d))._field_Decl) {
		_20d0954d6_evalIdentDeclFromIndexing(_self_, &(_123317_d), &(_122836_i));
		return _123317_d;;
	};
	if ((_20d4e2e72_Fn((*(_123317_d))._field_Kind.ptr()) != nullptr)) {
		_20d095d00_evalFnGenericFromIndexing(_self_, &(_123317_d), &(_122836_i));
		return _123317_d;;
	};
	_20d087165_Data _124917_oldData = (*(_123317_d));;
	jule::Ptr<_20d087165_Data> _125117_index = _20d4cdc93_evalExpr(_self_, (*(_122836_i))._field_Index);;
	if ((_125117_index == nullptr)) {
		return nullptr;;
	};
	(*(_123317_d))._field_Decl=false;
	_20d0947c1_toIndexing(_self_.ptr(), &(_123317_d), &(_125117_index), &(_122836_i));
	if (_20d087a39_IsConst(_123317_d.ptr())) {
		(*(_123317_d))._field_Decl=false;
		(*(_123317_d))._field_Model=jule::Any((*(_123317_d))._field_Constant, &__jule_any_type19);
	} else if ((*(_123317_d))._field_Decl) {
		(*(_123317_d))._field_Decl=false;
	} else {
		(*(_123317_d))._field_Model=jule::Any(jule::new_ptr<_20d397464_IndexingExprModel>(_20d397464_IndexingExprModel{._field_Token=(*(_122836_i))._field_Token, ._field_Expr=jule::new_ptr<_20d087165_Data>(_124917_oldData), ._field_Index=_125117_index}), &__jule_any_type46);
	};
	return _123317_d;;
}



inline __jule_tuple_x_20d087165_Data__jule_tuple_x_20d087165_Data _20d096482_evalSlicingExprs(jule::Ptr<_20d088d59_Eval> _self_, jule::Ptr<_20d378401_SlicingExpr>* _128241_s) {
	__jule_tuple_x_20d087165_Data__jule_tuple_x_20d087165_Data __jule_func_result;
	jule::Ptr<_20d4de28c_TypeKind> _128317_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_128317_prefix;
	});;
	jule::Ptr<_20d087165_Data> _128717_l = nullptr;;
	jule::Ptr<_20d087165_Data> _128817_r = nullptr;;
	if (((*((*(_128241_s))))._field_Start != nullptr)) {
		_128717_l=_20d4cdc93_evalExpr(_self_, (*((*(_128241_s))))._field_Start);
		if ((_128717_l != nullptr)) {
			_20d092d0d_checkIntegerIndexingByData(_self_.ptr(), &(_128717_l), (*((*(_128241_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_128717_l=jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d5637b7_primInt, ._field_Constant=static__20b065a3b_NewI64(0LL)});
		(*((*(_128717_l))._field_Constant))._field_Kind=jule::Str("int", 3);
		(*(_128717_l))._field_Model=jule::Any((*(_128717_l))._field_Constant, &__jule_any_type19);
	};
	if (((*((*(_128241_s))))._field_To != nullptr)) {
		_128817_r=_20d4cdc93_evalExpr(_self_, (*((*(_128241_s))))._field_To);
		if ((_128817_r != nullptr)) {
			_20d092d0d_checkIntegerIndexingByData(_self_.ptr(), &(_128817_r), (*((*(_128241_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _128717_l;
	__jule_func_result.__jule_result_arg1 = _128817_r;
	return __jule_func_result;;
}



inline void _20d09673a_slicingArr(_20d088d59_Eval* _self_, jule::Ptr<_20d087165_Data>* _131830_d) {
	jule::Ptr<_20d4de28c_TypeKind> _131917_elemType = (*(_20d4e2955_Arr((*((*(_131830_d))))._field_Kind.ptr())))._field_Elem;;
	(*((*(_131830_d))))._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(jule::new_ptr<_20d4eb60c_Slc>(_20d4eb60c_Slc{._field_Elem=_131917_elemType}), 22)});
	(*((*(_131830_d))))._field_Lvalue=false;
	(*((*(_131830_d))))._field_Mutable=((*((*(_131830_d))))._field_Mutable || (!(_20d4e0b2e_Mutable(_131917_elemType.ptr()))));
}



inline void _20d4bdab8_slicingStr(_20d088d59_Eval* _self_, jule::Ptr<_20d087165_Data>* _133330_d, jule::Ptr<_20d087165_Data>* _133341_l, jule::Ptr<_20d087165_Data>* _133352_r) {
	(*((*(_133330_d))))._field_Lvalue=false;
	(*((*(_133330_d))))._field_Mutable=true;
	if ((!(_20d087a39_IsConst((*(_133330_d)).ptr())))) {
		return;;
	};
	if ((((*(_133341_l)) == nullptr) || ((*(_133352_r)) == nullptr))) {
		(*((*(_133330_d))))._field_Constant=nullptr;
		return;;
	};
	if ((_20d087a39_IsConst((*(_133341_l)).ptr()) && _20d087a39_IsConst((*(_133352_r)).ptr()))) {
		jule::I64 _134617_left = _20b067c91_AsI64((*((*(_133341_l))))._field_Constant.ptr());;
		if ((_134617_left < 0LL)) {
			return;;
		};
		jule::Str _135117_s = _20b067774_ReadStr((*((*(_133330_d))))._field_Constant.ptr());;
		jule::I64 _135221_right = 0LL;;
		if (((*(_133352_r)) == nullptr)) {
			_135221_right=static_cast<jule::I64>(static_cast<jule::I64>(_135117_s.len()));
		} else {
			_135221_right=static_cast<jule::I64>(_20b067c91_AsI64((*((*(_133352_r))))._field_Constant.ptr()));
		};
		if ((_134617_left > _135221_right)) {
			return;;
		};
		_20b068d80_SetStr((*((*(_133330_d))))._field_Constant.ptr(), _135117_s.slice(_134617_left, _135221_right));
		(*((*(_133330_d))))._field_Decl=true;
	} else {
		(*((*(_133330_d))))._field_Constant=nullptr;
	};
}



inline void _20d4be091_checkSlicing(_20d088d59_Eval* _self_, jule::Ptr<_20d087165_Data>* _136936_d, jule::Ptr<_20d087165_Data>* _136947_l, jule::Ptr<_20d087165_Data>* _136958_r, jule::Ptr<_20d378401_SlicingExpr>* _136969_s) {
	{
		
		if ((_20d4e2955_Arr((*((*(_136936_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_21207d113:;
			{
				_20d09673a_slicingArr(_self_, _136936_d);
				return;;
			}
		}
		else if ((_20d4e2bdb_Slc((*((*(_136936_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_21207d18a:;
			{
				return;;
			}
		}
		else if ((_20d4e1b85_Prim((*((*(_136936_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_21207d212:;
			{
				jule::Ptr<_20d4e710d_Prim> _137717_prim = _20d4e1b85_Prim((*((*(_136936_d))))._field_Kind.ptr());;
				{
					
					if (_20d4ea595_IsStr(_137717_prim.ptr())) {
						_case_begin_212080984:;
						{
							_20d4bdab8_slicingStr(_self_, _136936_d, _136947_l, _136958_r);
							return;;
						}
					}
					_match_end_2120808eb:;
				};
			}
		}
		_match_end_21207cee2:;
	};
	_20d0893a9_pushErr(_self_, (*((*(_136969_s))))._field_Token, jule::Str("type @ is not support slicing", 29), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*((*(_136936_d))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Ptr<_20d087165_Data> _20d4be3d2_evalSlicing(jule::Ptr<_20d088d59_Eval> _self_, jule::Ptr<_20d378401_SlicingExpr> _138835_s) {
	jule::Ptr<_20d087165_Data> _138917_d = _20d4cdc93_evalExpr(_self_, (*(_138835_s))._field_Expr);;
	if ((_138917_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_20d087165_Data> _139418_l;;
	jule::Ptr<_20d087165_Data> _139425_r;;
	({
		__jule_tuple_x_20d087165_Data__jule_tuple_x_20d087165_Data __jule_assign_result = _20d096482_evalSlicingExprs(_self_, &(_138835_s));
		_139418_l = __jule_assign_result.__jule_result_arg0;
		_139425_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_139418_l == nullptr)) {
		return _138917_d;;
	};
	(*(_138917_d))._field_Decl=false;
	_20d4be091_checkSlicing(_self_.ptr(), &(_138917_d), &(_139418_l), &(_139425_r), &(_138835_s));
	if (_20d087a39_IsConst(_138917_d.ptr())) {
		(*(_138917_d))._field_Decl=false;
		(*(_138917_d))._field_Model=jule::Any((*(_138917_d))._field_Constant, &__jule_any_type19);
	} else if ((*(_138917_d))._field_Decl) {
		(*(_138917_d))._field_Decl=false;
	} else {
		jule::Ptr<_20d398751_SlicingExprModel> _141221_model = jule::new_ptr<_20d398751_SlicingExprModel>(_20d398751_SlicingExprModel{._field_Token=(*(_138835_s))._field_Token, ._field_Expr=(*(_138917_d))._field_Model, ._field_Left=(*(_139418_l))._field_Model, });;
		if ((_139425_r != nullptr)) {
			(*(_141221_model))._field_Right=(*(_139425_r))._field_Model;
		};
		(*(_138917_d))._field_Model=jule::Any(_141221_model, &__jule_any_type95);
	};
	return _138917_d;;
}



inline void _20d4be800_castPtr(_20d088d59_Eval* _self_, jule::Ptr<_20d4de28c_TypeKind> _142530_t, jule::Ptr<_20d087165_Data> _142548_d, jule::Ptr<_20d3510bb_Token> _142558_errorToken) {
	(*(_142548_d))._field_Constant=nullptr;
	jule::Ptr<_20d4eab39_Sptr> _142713_sptr = _20d4e1e1b_Sptr((*(_142548_d))._field_Kind.ptr());;
	if ((_142713_sptr != nullptr)) {
		if ((!(_20d4de996_Equal((*(_20d4e21a2_Ptr(_142530_t.ptr())))._field_Elem, (*(_142713_sptr))._field_Elem)))) {
			_20d0893a9_pushErr(_self_, _142558_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_142548_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_20d4de655_Str(_142530_t.ptr()), &__jule_any_type4)}));
		};
		return;;
	};
	if ((!(_20d089d9e_isUnsafe(_self_)))) {
		_20d0893a9_pushErr(_self_, _142558_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_20d4e710d_Prim> _144013_prim = _20d4e1b85_Prim((*(_142548_d))._field_Kind.ptr());;
	if (((_20d4e21a2_Ptr((*(_142548_d))._field_Kind.ptr()) == nullptr) && ((_144013_prim == nullptr) || (!(_20b064a18_IsInt(_20d4e744e_Str(_144013_prim.ptr()))))))) {
		_20d0893a9_pushErr(_self_, _142558_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_142548_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_20d4de655_Str(_142530_t.ptr()), &__jule_any_type4)}));
	};
}



inline void _20d4bec1d_castStruct(_20d088d59_Eval* _self_, jule::Ptr<_20d4de28c_TypeKind> _144633_t, jule::Ptr<_20d087165_Data> _144651_d, jule::Ptr<_20d3510bb_Token> _144661_errorToken) {
	(*(_144651_d))._field_Constant=nullptr;
	jule::Ptr<_20d3b5dde_Trait> _144817_tr = _20d4e348e_Trait((*(_144651_d))._field_Kind.ptr());;
	if ((_144817_tr == nullptr)) {
		_20d0893a9_pushErr(_self_, _144661_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_144651_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_20d4de655_Str(_144633_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_20d39066b_StructIns> _145417_s = _20d4e3208_Struct(_144633_t.ptr());;
	_212090bc5_pushReference(_self_, &(_145417_s));
	if ((!(_20d38dbdb_IsImplements((*(_145417_s))._field_Decl.ptr(), _144817_tr)))) {
		_20d0893a9_pushErr(_self_, _144661_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_144651_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_20d4de655_Str(_144633_t.ptr()), &__jule_any_type4)}));
	};
}



inline void _20d4c013b_castRef(_20d088d59_Eval* _self_, jule::Ptr<_20d4de28c_TypeKind> _146230_t, jule::Ptr<_20d087165_Data> _146248_d, jule::Ptr<_20d3510bb_Token> _146258_errorToken) {
	(*(_146248_d))._field_Constant=nullptr;
	jule::Ptr<_20d4eab39_Sptr> _146417_sptr = _20d4e1e1b_Sptr(_146230_t.ptr());;
	jule::Ptr<_20d4ee401_Ptr> _146617_ptr = _20d4e21a2_Ptr((*(_146248_d))._field_Kind.ptr());;
	if (((_146617_ptr != nullptr) && _20d4de996_Equal((*(_146417_sptr))._field_Elem, (*(_146617_ptr))._field_Elem))) {
		if ((!(_20d089d9e_isUnsafe(_self_)))) {
			_20d0893a9_pushErr(_self_, _146258_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_20d4e3208_Struct((*(_146417_sptr))._field_Elem.ptr()) != nullptr)) {
		_20d4bec1d_castStruct(_self_, (*(_146417_sptr))._field_Elem, _146248_d, _146258_errorToken);
		return;;
	};
	_20d0893a9_pushErr(_self_, _146258_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_146248_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_20d4de655_Str(_146230_t.ptr()), &__jule_any_type4)}));
}



inline void _20d4c0559_castSlc(_20d088d59_Eval* _self_, jule::Ptr<_20d4de28c_TypeKind> _148430_t, jule::Ptr<_20d087165_Data> _148448_d, jule::Ptr<_20d3510bb_Token> _148458_errorToken) {
	jule::Ptr<_20b0655eb_Const> _148513_c = (*(_148448_d))._field_Constant;;
	(*(_148448_d))._field_Constant=nullptr;
	if ((_20d4e2438_Enum((*(_148448_d))._field_Kind.ptr()) != nullptr)) {
		if (((_20d4e1b85_Prim((*((*(_20d4e2438_Enum((*(_148448_d))._field_Kind.ptr())))._field_Kind))._field_Kind.ptr()) == nullptr) || (!(_20d4ea595_IsStr(_20d4e1b85_Prim((*((*(_20d4e2438_Enum((*(_148448_d))._field_Kind.ptr())))._field_Kind))._field_Kind.ptr()).ptr()))))) {
			_20d0893a9_pushErr(_self_, _148458_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_148448_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_20d4de655_Str(_148430_t.ptr()), &__jule_any_type4)}));
			return;;
		};
	} else if (((_20d4e1b85_Prim((*(_148448_d))._field_Kind.ptr()) == nullptr) || (!(_20d4ea595_IsStr(_20d4e1b85_Prim((*(_148448_d))._field_Kind.ptr()).ptr()))))) {
		_20d0893a9_pushErr(_self_, _148458_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_148448_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_20d4de655_Str(_148430_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	_148430_t=(*(_20d4e2bdb_Slc(_148430_t.ptr())))._field_Elem;
	jule::Ptr<_20d4e710d_Prim> _149913_prim = _20d4e1b85_Prim(_148430_t.ptr());;
	if (((_149913_prim == nullptr) || ((!(_20d4e8a05_IsU8(_149913_prim.ptr()))) && (!(_20d4e84d8_IsI32(_149913_prim.ptr())))))) {
		_20d0893a9_pushErr(_self_, _148458_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_148448_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_20d4de655_Str(_148430_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	if ((_148513_c != nullptr)) {
		{
			
			if (_20d4e8a05_IsU8(_149913_prim.ptr())) {
				_case_begin_2120a6a54:;
				{
					jule::Str _150921_s = _20b067774_ReadStr(_148513_c.ptr());;
					jule::Ptr<_20d396ead_SliceExprModel> _151025_model = jule::new_ptr<_20d396ead_SliceExprModel>(_20d396ead_SliceExprModel{._field_ElemKind=_148430_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _150921_s.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_150921_s);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_2120a8490:;
						if (it != expr_end) {
							jule::U8 *_151424_b = it;
							{
								jule::Ptr<_20b0655eb_Const> _151529_bc = static__20b065d05_NewU64(static_cast<jule::U64>(static_cast<jule::U64>((*(_151424_b)))));;
								(*(_151529_bc))._field_Kind=(*(_149913_prim))._field_Kind;
								{ jule::Slice<jule::Any> &__jule_push_dest = (*(_151025_model))._field_Elems; __jule_push_dest.push(jule::Any(_151529_bc, &__jule_any_type19)); };
							}
							_iter_next_2120a8490:;
							++it;
							goto _iter_begin_2120a8490;
						}
						_iter_end_2120a8490:;
					};
					(*(_148448_d))._field_Model=jule::Any(_151025_model, &__jule_any_type80);
					(*(_148448_d))._field_Decl=true;
				}
			}
			else if (_20d4e84d8_IsI32(_149913_prim.ptr())) {
				_case_begin_2120a6acb:;
				{
					jule::Slice<jule::I32> _152221_runes = static_cast<jule::Slice<jule::I32>>(_20b067774_ReadStr(_148513_c.ptr()));;
					jule::Ptr<_20d396ead_SliceExprModel> _152325_model = jule::new_ptr<_20d396ead_SliceExprModel>(_20d396ead_SliceExprModel{._field_ElemKind=_148430_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _152221_runes.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_152221_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_2120ab806:;
						if (it != expr_end) {
							jule::I32 *_152724_r = it;
							{
								jule::Ptr<_20b0655eb_Const> _152829_rc = static__20b065a3b_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_152724_r)))));;
								(*(_152829_rc))._field_Kind=(*(_149913_prim))._field_Kind;
								{ jule::Slice<jule::Any> &__jule_push_dest = (*(_152325_model))._field_Elems; __jule_push_dest.push(jule::Any(_152829_rc, &__jule_any_type19)); };
							}
							_iter_next_2120ab806:;
							++it;
							goto _iter_begin_2120ab806;
						}
						_iter_end_2120ab806:;
					};
					(*(_148448_d))._field_Model=jule::Any(_152325_model, &__jule_any_type80);
					(*(_148448_d))._field_Decl=true;
				}
			}
			_match_end_2120a6944:;
		};
	};
}



inline void _20d4c08bc_castStr(_20d088d59_Eval* _self_, jule::Ptr<_20d087165_Data> _153830_d, jule::Ptr<_20d3510bb_Token> _153840_errorToken) {
	if ((_20d4e2438_Enum((*(_153830_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_20d3b85d9_Enum> _154021_e = _20d4e2438_Enum((*(_153830_d))._field_Kind.ptr());;
		if (((_20d4e1b85_Prim((*((*(_154021_e))._field_Kind))._field_Kind.ptr()) != nullptr) && _20d4ea595_IsStr(_20d4e1b85_Prim((*((*(_154021_e))._field_Kind))._field_Kind.ptr()).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_20b0655eb_Const> _154613_c = (*(_153830_d))._field_Constant;;
	(*(_153830_d))._field_Constant=nullptr;
	if ((_20d4e1b85_Prim((*(_153830_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_20d4e710d_Prim> _154917_prim = _20d4e1b85_Prim((*(_153830_d))._field_Kind.ptr());;
		if (((!(_20d4e8a05_IsU8(_154917_prim.ptr()))) && (!(_20d4e84d8_IsI32(_154917_prim.ptr()))))) {
			_20d0893a9_pushErr(_self_, _153840_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type4),jule::Any(_20d4de655_Str((*(_153830_d))._field_Kind.ptr()), &__jule_any_type4)}));
			return;;
		};
		if ((_154613_c != nullptr)) {
			{
				
				if (_20d4e8a05_IsU8(_154917_prim.ptr())) {
					_case_begin_2120b3c3c:;
					{
						(*(_153830_d))._field_Constant=static__20b066388_NewStr(jule::Str::from_byte(static_cast<jule::U8>(_20b068027_AsU64(_154613_c.ptr()))));
						(*(_153830_d))._field_Model=jule::Any((*(_153830_d))._field_Constant, &__jule_any_type19);
						(*(_153830_d))._field_Decl=true;
					}
				}
				else if (_20d4e84d8_IsI32(_154917_prim.ptr())) {
					_case_begin_2120b3cb4:;
					{
						(*(_153830_d))._field_Constant=static__20b066388_NewStr(jule::Str::from_rune(static_cast<jule::I32>(_20b067c91_AsI64(_154613_c.ptr()))));
						(*(_153830_d))._field_Model=jule::Any((*(_153830_d))._field_Constant, &__jule_any_type19);
						(*(_153830_d))._field_Decl=true;
					}
				}
				_match_end_2120b3b3d:;
			};
		};
		return;;
	};
	jule::Ptr<_20d4eb60c_Slc> _157017_s = _20d4e2bdb_Slc((*(_153830_d))._field_Kind.ptr());;
	if ((_157017_s == nullptr)) {
		_20d0893a9_pushErr(_self_, _153840_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type4),jule::Any(_20d4de655_Str((*(_153830_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_20d4de28c_TypeKind> _157617_t = (*(_157017_s))._field_Elem;;
	jule::Ptr<_20d4e710d_Prim> _157713_prim = _20d4e1b85_Prim(_157617_t.ptr());;
	if (((_157713_prim == nullptr) || ((!(_20d4e8a05_IsU8(_157713_prim.ptr()))) && (!(_20d4e84d8_IsI32(_157713_prim.ptr())))))) {
		_20d0893a9_pushErr(_self_, _153840_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type4),jule::Any(_20d4de655_Str((*(_153830_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return;;
	};
}



inline void _20d4c0cda_castInt(_20d088d59_Eval* _self_, jule::Ptr<_20d4de28c_TypeKind> _158430_t, jule::Ptr<_20d087165_Data> _158448_d, jule::Ptr<_20d3510bb_Token> _158458_errorToken) {
	if (_20d087a39_IsConst(_158448_d.ptr())) {
		jule::Ptr<_20d4e710d_Prim> _158617_prim = _20d4e1b85_Prim(_158430_t.ptr());;
		{
			
			if (_20b064441_IsSigInt((*(_158617_prim))._field_Kind)) {
				_case_begin_2120bbdee:;
				{
					_20b068566_SetI64((*(_158448_d))._field_Constant.ptr(), static_cast<jule::I64>(_20b067c91_AsI64((*(_158448_d))._field_Constant.ptr())));
				}
			}
			else if (_20b06474e_IsUnsigInt((*(_158617_prim))._field_Kind)) {
				_case_begin_2120bbe76:;
				{
					_20b06881e_SetU64((*(_158448_d))._field_Constant.ptr(), static_cast<jule::U64>(_20b068027_AsU64((*(_158448_d))._field_Constant.ptr())));
				}
			}
			_match_end_2120bbd55:;
		};
	} else {
		(*(_158448_d))._field_Constant=nullptr;
	};
	if ((_20d4e2438_Enum((*(_158448_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_20d3b85d9_Enum> _159817_e = _20d4e2438_Enum((*(_158448_d))._field_Kind.ptr());;
		if (_20b065123_IsNum(_20d4de655_Str((*((*(_159817_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_20d4e1e1b_Sptr((*(_158448_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_20d4e710d_Prim> _160517_prim = _20d4e1b85_Prim(_158430_t.ptr());;
		if ((!(_20d4ea078_IsUintptr(_160517_prim.ptr())))) {
			_20d0893a9_pushErr(_self_, _158458_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_158448_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_20d4de655_Str(_158430_t.ptr()), &__jule_any_type4)}));
		};
		return;;
	};
	if ((_20d4e21a2_Ptr((*(_158448_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_20d4e710d_Prim> _161217_prim = _20d4e1b85_Prim(_158430_t.ptr());;
		if (_20d4ea078_IsUintptr(_161217_prim.ptr())) {
		} else if ((!(_20d089d9e_isUnsafe(_self_)))) {
			_20d0893a9_pushErr(_self_, _158458_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_20d4e710d_Prim> _162113_prim = _20d4e1b85_Prim((*(_158448_d))._field_Kind.ptr());;
	if (((_162113_prim != nullptr) && _20b065123_IsNum(_20d4e744e_Str(_162113_prim.ptr())))) {
		return;;
	};
	_20d0893a9_pushErr(_self_, _158458_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_158448_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_20d4de655_Str(_158430_t.ptr()), &__jule_any_type4)}));
}



inline void _20d4c1208_castNum(_20d088d59_Eval* _self_, jule::Ptr<_20d4de28c_TypeKind> _162930_t, jule::Ptr<_20d087165_Data> _162948_d, jule::Ptr<_20d3510bb_Token> _162958_errorToken) {
	if (_20d087a39_IsConst(_162948_d.ptr())) {
		jule::Ptr<_20d4e710d_Prim> _163117_prim = _20d4e1b85_Prim(_162930_t.ptr());;
		{
			
			if (_20b064d59_IsFloat((*(_163117_prim))._field_Kind)) {
				_case_begin_2120c7cea:;
				{
					_20b069138_SetF64((*(_162948_d))._field_Constant.ptr(), static_cast<jule::F64>(_20b0682ad_AsF64((*(_162948_d))._field_Constant.ptr())));
				}
			}
			else if (_20b064441_IsSigInt((*(_163117_prim))._field_Kind)) {
				_case_begin_2120c7d72:;
				{
					_20b068566_SetI64((*(_162948_d))._field_Constant.ptr(), static_cast<jule::I64>(_20b067c91_AsI64((*(_162948_d))._field_Constant.ptr())));
				}
			}
			else if (_20b06474e_IsUnsigInt((*(_163117_prim))._field_Kind)) {
				_case_begin_2120c7de9:;
				{
					_20b06881e_SetU64((*(_162948_d))._field_Constant.ptr(), static_cast<jule::U64>(_20b068027_AsU64((*(_162948_d))._field_Constant.ptr())));
				}
			}
			_match_end_2120c7c40:;
		};
	} else {
		(*(_162948_d))._field_Constant=nullptr;
	};
	if ((_20d4e2438_Enum((*(_162948_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_20d3b85d9_Enum> _164517_e = _20d4e2438_Enum((*(_162948_d))._field_Kind.ptr());;
		if (_20b065123_IsNum(_20d4de655_Str((*((*(_164517_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_20d4e710d_Prim> _165113_prim = _20d4e1b85_Prim((*(_162948_d))._field_Kind.ptr());;
	if (((_165113_prim != nullptr) && _20b065123_IsNum(_20d4e744e_Str(_165113_prim.ptr())))) {
		return;;
	};
	_20d0893a9_pushErr(_self_, _162958_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_162948_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_20d4de655_Str(_162930_t.ptr()), &__jule_any_type4)}));
}



inline void _20d4c1626_castPrim(_20d088d59_Eval* _self_, jule::Ptr<_20d4de28c_TypeKind> _165931_t, jule::Ptr<_20d087165_Data> _165949_d, jule::Ptr<_20d3510bb_Token> _165959_errorToken) {
	jule::Ptr<_20d4e710d_Prim> _166013_prim = _20d4e1b85_Prim(_165931_t.ptr());;
	{
		
		if (_20d4ea82b_IsAny(_166013_prim.ptr())) {
			_case_begin_2120d1089:;
			{
				(*(_165949_d))._field_Constant=nullptr;
			}
		}
		else if (_20d4ea595_IsStr(_166013_prim.ptr())) {
			_case_begin_2120d1111:;
			{
				_20d4c08bc_castStr(_self_, _165949_d, _165959_errorToken);
			}
		}
		else if (_20b064a18_IsInt(_20d4e744e_Str(_166013_prim.ptr()))) {
			_case_begin_2120d0c04:;
			{
				_20d4c0cda_castInt(_self_, _165931_t, _165949_d, _165959_errorToken);
			}
		}
		else if (_20b065123_IsNum(_20d4e744e_Str(_166013_prim.ptr()))) {
			_case_begin_2120d0c7b:;
			{
				_20d4c1208_castNum(_self_, _165931_t, _165949_d, _165959_errorToken);
			}
		}
		else {
			_case_begin_2120d0b8d:;
			{
				_20d0893a9_pushErr(_self_, _165959_errorToken, jule::Str("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str(_165931_t.ptr()), &__jule_any_type4)}));
			}
		}
		_match_end_2120d0b38:;
	};
}



inline void _20d4c1989_castConstant(_20d088d59_Eval* _self_, jule::Ptr<_20d4de28c_TypeKind>* _167636_t, jule::Ptr<_20d087165_Data>* _167655_d) {
	if ((((*(_167655_d)) == nullptr) || (!(_20d087a39_IsConst((*(_167655_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_20d4e710d_Prim> _168013_prim = _20d4e1b85_Prim((*(_167636_t)).ptr());;
	_20d4da464_castConstByType(&((*(_168013_prim))._field_Kind), _167655_d);
	(*((*(_167655_d))))._field_Model=jule::Any((*((*(_167655_d))))._field_Constant, &__jule_any_type19);
}



inline void _20d4c1da7_castTypeEnum(_20d088d59_Eval* _self_, jule::Ptr<_20d4de28c_TypeKind>* _168536_t, jule::Ptr<_20d087165_Data>* _168555_d, jule::Ptr<_20d3510bb_Token>* _168570_errorToken) {
	jule::I64 _168613_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_20d4419e7_checkTypeCompatibility((*(_self_))._field_s, &((*((*(_168555_d))))._field_Kind), _168536_t, _168570_errorToken)))) {
		(*((*(_self_))._field_s))._field_errors=(*((*(_self_))._field_s))._field_errors.slice(0LL, _168613_n);
		_20d0893a9_pushErr(_self_, (*(_168570_errorToken)), jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*((*(_168555_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_20d4de655_Str((*(_168536_t)).ptr()), &__jule_any_type4)}));
	};
	(*((*(_168555_d))))._field_Constant=nullptr;
}



inline void _20d4c22c5_castTypeEnumT(_20d088d59_Eval* _self_, jule::Ptr<_20d4de28c_TypeKind>* _169437_t, jule::Ptr<_20d087165_Data>* _169456_d, jule::Ptr<_20d3510bb_Token>* _169471_errorToken) {
	jule::I64 _169513_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_20d4419e7_checkTypeCompatibility((*(_self_))._field_s, _169437_t, &((*((*(_169456_d))))._field_Kind), _169471_errorToken)))) {
		(*((*(_self_))._field_s))._field_errors=(*((*(_self_))._field_s))._field_errors.slice(0LL, _169513_n);
		_20d0893a9_pushErr(_self_, (*(_169471_errorToken)), jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*((*(_169456_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_20d4de655_Str((*(_169437_t)).ptr()), &__jule_any_type4)}));
	};
	(*((*(_169456_d))))._field_Constant=nullptr;
}



inline jule::Ptr<_20d087165_Data> _20d4c277b_evalCastByTypeNData(_20d088d59_Eval* _self_, jule::Ptr<_20d4de28c_TypeKind> _170342_t, jule::Ptr<_20d087165_Data> _170360_d, jule::Ptr<_20d3510bb_Token> _170374_errorToken) {
	if (((_170360_d != nullptr) && (*(_170360_d))._field_Decl)) {
		_20d0893a9_pushErr(_self_, _170374_errorToken, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_20d08751c_IsNil(_170360_d.ptr())) {
			_case_begin_2120dd052:;
			{
				if ((!(_20d4e114b_NilCompatible(_170342_t.ptr())))) {
					_20d0893a9_pushErr(_self_, _170374_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("<nil>", 5), &__jule_any_type4),jule::Any(_20d4de655_Str(_170342_t.ptr()), &__jule_any_type4)}));
				};
				(*(_170360_d))._field_Constant=nullptr;
			}
		}
		else if (((_20d4e1b85_Prim((*(_170360_d))._field_Kind.ptr()) != nullptr) && _20d4ea82b_IsAny(_20d4e1b85_Prim((*(_170360_d))._field_Kind.ptr()).ptr()))) {
			_case_begin_2120dce64:;
			{
				if ((_20d4e2438_Enum(_170342_t.ptr()) != nullptr)) {
					_20d0893a9_pushErr(_self_, _170374_errorToken, jule::Str("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
					_20d08971c_pushSuggestion(_self_, jule::Str("try cast to type of enum fields instead of enum", 47), jule::Slice<jule::Any>());
				} else if ((_20d4e26be_TypeEnum(_170342_t.ptr()) != nullptr)) {
					_20d0893a9_pushErr(_self_, _170374_errorToken, jule::Str("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
				};
				(*(_170360_d))._field_Constant=nullptr;
			}
		}
		else if ((_20d4e26be_TypeEnum((*(_170360_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_2120dcc11:;
			{
				_20d4c1da7_castTypeEnum(_self_, &(_170342_t), &(_170360_d), &(_170374_errorToken));
			}
		}
		else if ((_20d4e26be_TypeEnum(_170342_t.ptr()) != nullptr)) {
			_case_begin_2120dcc77:;
			{
				_20d4c22c5_castTypeEnumT(_self_, &(_170342_t), &(_170360_d), &(_170374_errorToken));
			}
		}
		else if ((_20d4e21a2_Ptr(_170342_t.ptr()) != nullptr)) {
			_case_begin_2120dd937:;
			{
				_20d4be800_castPtr(_self_, _170342_t, _170360_d, _170374_errorToken);
			}
		}
		else if ((_20d4e1e1b_Sptr(_170342_t.ptr()) != nullptr)) {
			_case_begin_2120dd99d:;
			{
				_20d4c013b_castRef(_self_, _170342_t, _170360_d, _170374_errorToken);
			}
		}
		else if ((_20d4e2bdb_Slc(_170342_t.ptr()) != nullptr)) {
			_case_begin_2120dda14:;
			{
				_20d4c0559_castSlc(_self_, _170342_t, _170360_d, _170374_errorToken);
			}
		}
		else if ((_20d4e3208_Struct(_170342_t.ptr()) != nullptr)) {
			_case_begin_2120dda7a:;
			{
				_20d4bec1d_castStruct(_self_, _170342_t, _170360_d, _170374_errorToken);
			}
		}
		else if ((_20d4e1b85_Prim(_170342_t.ptr()) != nullptr)) {
			_case_begin_2120ddae1:;
			{
				_20d4c1626_castPrim(_self_, _170342_t, _170360_d, _170374_errorToken);
				_20d4c1989_castConstant(_self_, &(_170342_t), &(_170360_d));
			}
		}
		else {
			_case_begin_2120dcae0:;
			{
				_20d0893a9_pushErr(_self_, _170374_errorToken, jule::Str("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str(_170342_t.ptr()), &__jule_any_type4)}));
				_170360_d=nullptr;
			}
		}
		_match_end_2120dc3c5:;
	};
	if ((_170360_d == nullptr)) {
		return nullptr;;
	};
	(*(_170360_d))._field_Mutable=((*(_170360_d))._field_Mutable || (!(_20d4e0b2e_Mutable((*(_170360_d))._field_Kind.ptr()))));
	if (((!((*(_170360_d))._field_Decl)) && ((_20d4e2438_Enum((*(_170360_d))._field_Kind.ptr()) == nullptr) || (!(_20d4de996_Equal((*((*(_20d4e2438_Enum((*(_170360_d))._field_Kind.ptr())))._field_Kind))._field_Kind, _170342_t)))))) {
		_20d4d98b4_applyCastKind(&(_170360_d), &(_170342_t));
		(*((*(_170360_d))._field_Model.cast_ptr<_20d396232_CastingExprModel>(&__jule_any_type96)))._field_Token=_170374_errorToken;
	} else {
		(*(_170360_d))._field_Kind=_170342_t;
	};
	(*(_170360_d))._field_Decl=false;
	(*(_170360_d))._field_Lvalue=false;
	(*(_170360_d))._field_untyped=false;
	if (_20d087a39_IsConst(_170360_d.ptr())) {
		(*((*(_170360_d))._field_Constant))._field_Kind=(*(_20d4e1b85_Prim(_170342_t.ptr())))._field_Kind;
	};
	return _170360_d;;
}



inline jule::Ptr<_20d087165_Data> _20d4c2c32_evalCastT(jule::Ptr<_20d088d59_Eval> _self_, jule::Ptr<_20d4de28c_TypeKind>* _177434_t, jule::Ptr<_20d370ccd_Expr>* _177453_e, jule::Ptr<_20d3510bb_Token>* _177468_et) {
	jule::Ptr<_20d4de28c_TypeKind> _177517_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_177517_prefix;
	});;
	if ((_20d4e2bdb_Slc((*(_177434_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_177453_e))))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type97) {
				_case_begin_2120ed392:;
				{
					(*(_self_))._field_prefix=(*(_177434_t));
				}
			}
			_match_end_2120ed33c:;
		};
	};
	jule::Ptr<_20d087165_Data> _178417_d = _20d4cdc93_evalExpr(_self_, (*(_177453_e)));;
	if (((_178417_d == nullptr) || ((*(_self_))._field_prefix != nullptr))) {
		return _178417_d;;
	};
	return _20d4c277b_evalCastByTypeNData(_self_.ptr(), (*(_177434_t)), _178417_d, (*(_177468_et)));;
}



inline jule::Ptr<_20d087165_Data> _20d4c3073_evalCast(jule::Ptr<_20d088d59_Eval> _self_, jule::Ptr<_20d37363d_CastExpr> _179132_c) {
	jule::Ptr<_20d4e6706_TypeSymbol> _179217_t = _20d3aa576_buildType((*(_179132_c))._field_Kind);;
	jule::Bool _179313_ok = _20d43e6a4_checkType((*(_self_))._field_s, &(_179217_t), (*(_self_))._field_lookup);;
	if ((!(_179313_ok))) {
		return nullptr;;
	};
	return _20d4c2c32_evalCastT(_self_, &((*(_179217_t))._field_Kind), &((*(_179132_c))._field_Expr), &((*((*(_179132_c))._field_Kind))._field_Token));;
}



inline jule::Ptr<_20d087165_Data> _20d4c33b4_evalNsSelection(_20d088d59_Eval* _self_, jule::Ptr<_20d373a17_NsSelectionExpr> _180034_s) {
	jule::Str _180113_path = _20d50b0ab_buildLinkPathByTokens(&((*(_180034_s))._field_Ns));;
	jule::Ptr<_20d414d94_ImportInfo> _180217_imp = _20d50e06a_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._20d50c354_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_20d414d94_ImportInfo>)>([=](jule::Ptr<_20d414d94_ImportInfo> _180252_imp) mutable -> jule::Bool {
		if ((((*(_180034_s))._field_Ns.len() == 1LL) && ((*(_180252_imp))._field_Alias == _180113_path))) {
			return true;;
		};
		return (((*(_180252_imp))._field_LinkPath == _180113_path) && _20d4179ac_isAccessibleViaSelection(_180252_imp.ptr()));;
	}));;
	if ((_180217_imp == nullptr)) {
		_20d0893a9_pushErr(_self_, (*(_180034_s))._field_Ns[0LL], jule::Str("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_180113_path, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Trait<_20d50e06a_Lookup> _181417_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_20d50e06a_Lookup>(_180217_imp, 1);
	;
	_20d089b18_disallowBuiltin(_self_);
	jule::Any _181917_def = _20d08c126_getDef(_self_, &((*((*(_180034_s))._field_Ident))._field_Kind), false);;
	_20d08991a_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_181417_lookup;
	jule::Ptr<_20d087165_Data> _182217_d = _20d09104d_evalDef(_self_, &(_181917_def), (*(_180034_s))._field_Ident);;
	return _182217_d;;
}



inline jule::Ptr<_20d087165_Data> _20d4c386a_evalStructLitExplicit(jule::Ptr<_20d088d59_Eval> _self_, jule::Ptr<_20d39066b_StructIns> _182645_s, jule::Slice<jule::Ptr<_20d370ccd_Expr>> _182713_exprs, jule::Ptr<_20d3510bb_Token> _182733_errorToken) {
	jule::Bool _182813_ok = _20d43a062_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I64>((*((*(_182645_s))._field_Decl))._field_Generics.len()), static_cast<jule::I64>((*(_182645_s))._field_Generics.len()), _182733_errorToken);;
	if ((!(_182813_ok))) {
		return nullptr;;
	};
	if ((((*(_self_))._field_field != nullptr) && ((*((*((*(_self_))._field_field))._field_Decl))._field_Owner == (*(_182645_s))._field_Decl))) {
		_20d0893a9_pushErr(_self_.ptr(), _182733_errorToken, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_182645_s))._field_Decl))._field_Ident, &__jule_any_type4)}));
	};
	_212090bc5_pushReference(_self_.ptr(), &(_182645_s));
	_20d08e249_checkDeprecated(_self_.ptr(), &((*((*(_182645_s))._field_Decl))._field_Directives), _182733_errorToken);
	_20d07a598_structLitChecker _184117_slc = _20d07a598_structLitChecker{._field_e=_self_, ._field_errorToken=_182733_errorToken, ._field_s=_182645_s, };;
	_20d07bcd6_check(&_184117_slc, &(_182713_exprs));
	jule::Ptr<_20d087165_Data> _184817_d = jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(_182645_s, 0)}), ._field_Mutable=(!((*(_self_))._field_immutable)), ._field_Model=jule::Any(jule::new_ptr<_20d3958a2_StructLitExprModel>(_20d3958a2_StructLitExprModel{._field_Strct=_182645_s, ._field_Args=_184117_slc._field_args}), &__jule_any_type98), });;
	if ((*((*(_182645_s))._field_Decl))._field_Binded) {
		(*((*(_184817_d))._field_Kind))._field_BindIdent=(*((*(_182645_s))._field_Decl))._field_Ident;
	};
	return _184817_d;;
}



inline jule::Ptr<_20d087165_Data> _20d4c3bab_evalStructLit(jule::Ptr<_20d088d59_Eval> _self_, jule::Ptr<_20d375d27_StructLit> _186437_lit) {
	jule::Ptr<_20d4e6706_TypeSymbol> _186517_t = _20d3aa576_buildType((*(_186437_lit))._field_Kind);;
	jule::Bool _186613_ok = _20d43e6a4_checkType((*(_self_))._field_s, &(_186517_t), (*(_self_))._field_lookup);;
	if ((!(_186613_ok))) {
		return nullptr;;
	};
	jule::Ptr<_20d39066b_StructIns> _187117_s = _20d4e3208_Struct((*(_186517_t))._field_Kind.ptr());;
	if ((_187117_s == nullptr)) {
		if ((_20d4e1e1b_Sptr((*(_186517_t))._field_Kind.ptr()) != nullptr)) {
			_187117_s=_20d4e3208_Struct((*(_20d4e1e1b_Sptr((*(_186517_t))._field_Kind.ptr())))._field_Elem.ptr());
			if ((_187117_s != nullptr)) {
				goto _julec_label_2121152cc;
			};
		};
		_20d0893a9_pushErr(_self_.ptr(), (*((*(_186437_lit))._field_Kind))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_2121152cc:;
	jule::Ptr<_20d087165_Data> _188417_d = _20d4c386a_evalStructLitExplicit(_self_, _187117_s, (*(_186437_lit))._field_Exprs, (*((*(_186437_lit))._field_Kind))._field_Token);;
	if ((_20d4e1e1b_Sptr((*(_186517_t))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_20d3958a2_StructLitExprModel> _188621_model = (*(_188417_d))._field_Model.cast_ptr<_20d3958a2_StructLitExprModel>(&__jule_any_type98);;
		_20d4d80cc_makeStructLitAlloc(&(_188417_d), &(_188621_model));
	};
	return _188417_d;;
}



inline _20d5013e2_typeChecker _20d4c3e42_typeChecker(_20d088d59_Eval* _self_) {
	return _20d43d450_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_20d087165_Data> _20d4c4283_evalType(_20d088d59_Eval* _self_, jule::Ptr<_20d36b999_TypeDecl> _189631_t) {
	jule::Ptr<_20d4e6706_TypeSymbol> _189717_tk = _20d3aa576_buildType(_189631_t);;
	jule::Bool _189813_ok = _20d43e6a4_checkType((*(_self_))._field_s, &(_189717_tk), (*(_self_))._field_lookup);;
	if ((!(_189813_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=(*(_189717_tk))._field_Kind, ._field_Model=jule::Any((*(_189717_tk))._field_Kind, &__jule_any_type87), ._field_Decl=true, });;
}



inline void _20d4c45e6_callTypeFn(jule::Ptr<_20d088d59_Eval> _self_, jule::Ptr<_20d374a07_FnCallExpr>* _190935_fc, jule::Ptr<_20d087165_Data>* _190957_d) {
	if (((*((*(_190935_fc))))._field_Args.len() < 1LL)) {
		_20d0893a9_pushErr(_self_.ptr(), (*((*(_190935_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1), &__jule_any_type4)}));
	} else if (((*((*(_190935_fc))))._field_Args.len() > 1LL)) {
		_20d0893a9_pushErr(_self_.ptr(), (*((*((*(_190935_fc))))._field_Args[1LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*((*(_190957_d))))._field_Kind.ptr()), &__jule_any_type4)}));
	} else if ((*((*(_190935_fc))))._field_IsCo) {
		_20d0893a9_pushErr(_self_.ptr(), (*((*(_190935_fc))))._field_Token, jule::Str("concurrent calls are not allowed for type-cast calls", 52), jule::Slice<jule::Any>());
		(*(_190957_d))=nullptr;
		return;;
	} else if (((*((*(_190935_fc))))._field_Exception != nullptr)) {
		_20d0893a9_pushErr(_self_.ptr(), (*((*(_190935_fc))))._field_Token, jule::Str("exceptionals are not supported for type-cast call", 49), jule::Slice<jule::Any>());
		(*(_190957_d))=nullptr;
		return;;
	};
	if (((*((*(_190935_fc))))._field_Args.len() > 0LL)) {
		jule::Ptr<_20d370ccd_Expr> _192521_arg = (*((*(_190935_fc))))._field_Args[0LL];;
		(*(_190957_d))=_20d4c2c32_evalCastT(_self_, &((*((*(_190957_d))))._field_Kind), &(_192521_arg), &((*(_192521_arg))._field_Token));
		return;;
	};
	if (((*(_190957_d)) != nullptr)) {
		(*((*(_190957_d))))._field_Decl=false;
	};
}



inline void _20d4c4959_callBuiltinFn(jule::Ptr<_20d088d59_Eval> _self_, jule::Ptr<_20d374a07_FnCallExpr>* _193538_fc, jule::Ptr<_20d087165_Data>* _193560_d) {
	if ((!(_20d374d7b_Unhandled((*(_193538_fc)).ptr())))) {
		_20d0893a9_pushErr(_self_.ptr(), (*((*(_193538_fc))))._field_Token, jule::Str("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	(*(_193560_d))=(*(_20d4e2e72_Fn((*((*(_193560_d))))._field_Kind.ptr())))._field_caller(&(_self_), _193538_fc, _193560_d);
	if (((*(_193560_d)) == nullptr)) {
		return;;
	};
	(*((*(_193560_d))))._field_Mutable=true;
}



inline void _20d4c4cbc_checkFnOfConcurrentCall(_20d088d59_Eval* _self_, jule::Ptr<_20d3a5a49_FnIns>* _194743_f, jule::Ptr<_20d3510bb_Token> _194754_errorToken) {
	if (_20d089d9e_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*((*(_194743_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2121246c6:;
		if (it != expr_end) {
			jule::Ptr<_20d3a4a9d_ParamIns> *_195116_p = it;
			{
				if (_20d3a178c_IsSelf((*((*(_195116_p))))._field_Decl.ptr())) {
					if ((!(_20d3a1a23_IsRef((*((*(_195116_p))))._field_Decl.ptr())))) {
						_20d0893a9_pushErr(_self_, _194754_errorToken, jule::Str("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97), jule::Slice<jule::Any>());
						_20d08971c_pushSuggestion(_self_, jule::Str("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99), jule::Slice<jule::Any>());
					};
				};
				if ((*((*((*(_195116_p))))._field_Decl))._field_Reference) {
					_20d0893a9_pushErr(_self_, _194754_errorToken, jule::Str("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96), jule::Slice<jule::Any>());
					_20d08971c_pushSuggestion(_self_, jule::Str("use Unsafe Jule with unsafe {} scope to make concurrent call", 60), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_2121246c6:;
			++it;
			goto _iter_begin_2121246c6;
		}
		_iter_end_2121246c6:;
	};
}



inline void _20d4c51da_processExceptionalHandler(_20d088d59_Eval* _self_, jule::Ptr<_20d3a5a49_FnIns>* _196649_f, jule::Ptr<_20d374a07_FnCallExpr>* _196665_fc, jule::Ptr<_20d087165_Data>* _196687_d) {
	jule::Bool _196713_resultNeeded = ((!(_20d3a30b8_IsVoid((*((*(_196649_f))))._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_20d3ea9a1_scopeChecker> _196817_csc = nullptr;;
	jule::Ptr<_20d3e369c_Scope> _196917_ch = nullptr;;
	jule::Ptr<_20d396ad4_FnCallExprModel> _197117_model = (*((*(_196687_d))))._field_Model.cast_ptr<_20d396ad4_FnCallExprModel>(&__jule_any_type35);;
	jule::Ptr<_20d3ea9a1_scopeChecker> _197517_sc = (*(_self_))._field_lookup.cast_ptr<_20d3ea9a1_scopeChecker>(0);;
	_196817_csc=_20d40c6e9_newChildChecker(_197517_sc);
	if (_196713_resultNeeded) {
		(*(_196817_csc))._field_result=(*(_196649_f));
	};
	_196917_ch=_20d400797_getChild(_197517_sc.ptr());
	(*((*((*(_196665_fc))))._field_Exception))._field_Parent=(*(_197517_sc))._field_tree;
	{ jule::Slice<jule::Ptr<_20d458aca_Var>> &__jule_push_dest = (*((*(_196817_csc))._field_table))._field_Vars; __jule_push_dest.push(_20d4d8451_buildErrorVar(&(_196917_ch), _196665_fc)); };
	_20d400bb5_checkChildSsc(_197517_sc, &((*((*(_196665_fc))))._field_Exception), &(_196917_ch), &(_196817_csc));
	(*(_197117_model))._field_Assigned=_196713_resultNeeded;
	(*(_197117_model))._field_Except=_196917_ch;
	if ((_196713_resultNeeded && ((*(_196817_csc))._field_result != nullptr))) {
		_20d0893a9_pushErr(_self_, (*((*(_196665_fc))))._field_Token, jule::Str("exceptional returns an expression, therefore else block should return expression", 80), jule::Slice<jule::Any>());
	};
}



inline void _20d4c554d_callFn(jule::Ptr<_20d088d59_Eval> _self_, jule::Ptr<_20d374a07_FnCallExpr>* _199331_fc, jule::Ptr<_20d087165_Data>* _199353_d) {
	jule::Ptr<_20d3a5a49_FnIns> _199417_f = _20d4e2e72_Fn((*((*(_199353_d))))._field_Kind.ptr());;
	if (_20d3a6ece_IsBuiltin(_199417_f.ptr())) {
		_20d4c4959_callBuiltinFn(_self_, _199331_fc, _199353_d);
		return;;
	};
	if ((_20d08a135_isGlobal(_self_.ptr()) && (*((*(_199417_f))._field_Decl))._field_Exceptional)) {
		_20d0893a9_pushErr(_self_.ptr(), (*((*(_199331_fc))))._field_Token, jule::Str("exceptionals are not allowed in global scope", 44), jule::Slice<jule::Any>());
		_20d08971c_pushSuggestion(_self_.ptr(), jule::Str("wrap exceptional with a non-exceptional function", 48), jule::Slice<jule::Any>());
		(*(_199353_d))=nullptr;
		return;;
	};
	if (((!(_20d3a334e_IsMethod((*(_199417_f))._field_Decl.ptr()))) && _20d50a154_hasDirective(&((*((*(_199417_f))._field_Decl))._field_Directives), jule::Str("test", 4)))) {
		_20d0893a9_pushErr(_self_.ptr(), (*((*(_199331_fc))))._field_Token, jule::Str("you cannot call test functions", 30), jule::Slice<jule::Any>());
		(*(_199353_d))=nullptr;
		return;;
	};
	if (((((!((*((*(_199353_d))))._field_Mutable)) && _20d3a334e_IsMethod((*(_199417_f))._field_Decl.ptr())) && (!((*((*(_199417_f))._field_Decl))._field_Statically))) && (*((*((*(_199417_f))._field_Decl))._field_Params[0LL]))._field_Mutable)) {
		if ((!((*(_self_))._field_immutable))) {
			_20d0893a9_pushErr(_self_.ptr(), (*((*(_199331_fc))))._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		} else {
			jule::Ptr<_20d3958a2_StructLitExprModel> _202021_lit = _20d4db685_isLitBased(&((*((*(_199353_d))))._field_Model));;
			if ((_202021_lit == nullptr)) {
				_20d0893a9_pushErr(_self_.ptr(), (*((*(_199331_fc))))._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
			} else {
				_20d07a0ae_checkMutRiskOfStructLit(&((*(_self_))._field_s), &(_202021_lit));
			};
		};
	} else if (((!(_20d089d9e_isUnsafe(_self_.ptr()))) && (*((*(_199417_f))._field_Decl))._field_Unsafety)) {
		_20d0893a9_pushErr(_self_.ptr(), (*((*(_199331_fc))))._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	jule::Bool _203217_dynamicAnnotation = ((((*((*(_199417_f))._field_Decl))._field_Generics.len() > 0LL) && ((*(_199417_f))._field_Generics.len() == 0LL)) && ((*(_199417_f))._field_Params.len() > 0LL));;
	if (_203217_dynamicAnnotation) {
		(*(_199417_f))._field_Generics=jule::Slice<jule::Ptr<_20d4dc8a6_InsGeneric>>::alloc((*((*(_199417_f))._field_Decl))._field_Generics.len(), (*((*(_199417_f))._field_Decl))._field_Generics.len());
	} else if (((*(_199417_f))._field_Generics.len() != (*((*(_199417_f))._field_Decl))._field_Generics.len())) {
		_20d43a062_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I64>((*((*(_199417_f))._field_Decl))._field_Generics.len()), static_cast<jule::I64>((*(_199417_f))._field_Generics.len()), (*((*(_199331_fc))))._field_Token);
		(*(_199353_d))=nullptr;
		return;;
	};
	jule::Ptr<_20d435de8_Sema> _204117_old = (*(_self_))._field_s;;
	if (((*((*(_199417_f))._field_Decl))._field_Owner != nullptr)) {
		(*(_self_))._field_s=(*((*((*(_199417_f))._field_Decl))._field_Owner))._field_sema;
	};
	__JULE_DEFER({
		if ((_204117_old != (*(_self_))._field_s)) {
			((*(_204117_old))._field_errors).append((*((*(_self_))._field_s))._field_errors);;
			(*((*(_self_))._field_s))._field_errors=nullptr;
		};
		(*(_self_))._field_s=_204117_old;
	});;
	_20d077661_fnCallArgChecker _205417_fcac = _20d077661_fnCallArgChecker{._field_e=_self_, ._field_args=(*((*(_199331_fc))))._field_Args, ._field_errorToken=(*((*(_199331_fc))))._field_Token, ._field_dynamicAnnotation=_203217_dynamicAnnotation, };;
	if ((!(_203217_dynamicAnnotation))) {
		if ((!((*(_199417_f))._field_reloaded))) {
			jule::Bool _206321_ok = _20d443b3c_reloadFnInsTypes((*(_self_))._field_s, _199417_f);;
			(*(_199417_f))._field_reloaded=true;
			if ((!(_206321_ok))) {
				(*(_199353_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_20d3a5a49_FnIns> _207021_existInstance = _20d3a46b3_appendInstance((*(_199417_f))._field_Decl.ptr(), &(_199417_f));;
		if ((_207021_existInstance != nullptr)) {
			_199417_f=_207021_existInstance;
		};
	} else if ((!(_20d442399_buildFnNonGenericTypeKinds((*(_self_))._field_s, &(_199417_f), &(_205417_fcac._field_ignored))))) {
		(*(_199353_d))=nullptr;
		return;;
	};
	_205417_fcac._field_f=_199417_f;
	jule::Bool _208117_ok = false;;
	if (((*((*(_199417_f))._field_Decl))._field_Owner != nullptr)) {
		({
			jule::Ptr<_20d435de8_Sema> ___jule_assign_arg = (*(_self_))._field_s;
			jule::Ptr<_20d435de8_Sema> _1___jule_assign_arg = _204117_old;
			_204117_old = ___jule_assign_arg;
			(*(_self_))._field_s = _1___jule_assign_arg;
		});
		_208117_ok=_20d079c18_check(&_205417_fcac);
		({
			jule::Ptr<_20d435de8_Sema> ___jule_assign_arg = (*(_self_))._field_s;
			jule::Ptr<_20d435de8_Sema> _1___jule_assign_arg = _204117_old;
			_204117_old = ___jule_assign_arg;
			(*(_self_))._field_s = _1___jule_assign_arg;
		});
	} else {
		_208117_ok=_20d079c18_check(&_205417_fcac);
	};
	if (_203217_dynamicAnnotation) {
		if ((!(_208117_ok))) {
			(*(_199353_d))=nullptr;
			return;;
		};
		if ((!(_20d09598c_checkGenericFn(_self_, &(_199417_f), &((*((*(_199331_fc))))._field_Token), &((*((*(_199353_d))))._field_Model))))) {
			(*(_199353_d))=nullptr;
			return;;
		};
	};
	jule::Any _210117_callModel = (*((*(_199353_d))))._field_Model;;
	if (_20d3a30b8_IsVoid((*(_199417_f))._field_Decl.ptr())) {
		(*(_199353_d))=_20d4d9ac3_buildVoidData();
	} else {
		(*((*(_199353_d))))._field_Kind=(*(_199417_f))._field_Result;
		(*((*(_199353_d))))._field_Lvalue=false;
	};
	jule::Ptr<_20d396ad4_FnCallExprModel> _211017_model = jule::new_ptr<_20d396ad4_FnCallExprModel>(_20d396ad4_FnCallExprModel{._field_Token=(*((*(_199331_fc))))._field_Token, ._field_Func=_199417_f, ._field_IsCo=(*((*(_199331_fc))))._field_IsCo, ._field_Expr=_210117_callModel, ._field_Args=_205417_fcac._field_argModels, });;
	(*((*(_199353_d))))._field_Model=jule::Any(_211017_model, &__jule_any_type35);
	(*((*(_199353_d))))._field_Mutable=true;
	if ((*((*(_199417_f))._field_Decl))._field_Exceptional) {
		if ((*((*(_199331_fc))))._field_IsCo) {
			_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*((*(_199331_fc))))._field_Token, jule::Str("concurrent calls not supports exceptionals", 42), jule::Slice<jule::Any>());
			_20d438d96_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63), jule::Slice<jule::Any>());
		};
		{
			
			if (_20d374d7b_Unhandled((*(_199331_fc)).ptr())) {
				_case_begin_21214aab5:;
				{
					_20d0893a9_pushErr(_self_.ptr(), (*((*(_199331_fc))))._field_Token, jule::Str("exceptionals must be handled", 28), jule::Slice<jule::Any>());
					_20d08971c_pushSuggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47), jule::Slice<jule::Any>());
				}
			}
			else if (_20d375112_Ignored((*(_199331_fc)).ptr())) {
				_case_begin_21214ab2b:;
				{
					goto _match_end_2121495a8;
				}
			}
			else {
				_case_begin_21214960d:;
				{
					_20d4c51da_processExceptionalHandler(_self_.ptr(), &(_199417_f), _199331_fc, _199353_d);
				}
			}
			_match_end_2121495a8:;
		};
	} else if ((!(_20d374d7b_Unhandled((*(_199331_fc)).ptr())))) {
		_20d0893a9_pushErr(_self_.ptr(), (*((*(_199331_fc))))._field_Token, jule::Str("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	if ((*((*(_199331_fc))))._field_IsCo) {
		_20d4c4cbc_checkFnOfConcurrentCall(_self_.ptr(), &((*(_211017_model))._field_Func), (*((*(_199331_fc))))._field_Token);
	};
}



inline jule::Ptr<_20d087165_Data> _20d4c588e_evalFnCall(jule::Ptr<_20d088d59_Eval> _self_, jule::Ptr<_20d374a07_FnCallExpr> _214534_fc) {
	jule::Ptr<_20d4de28c_TypeKind> _214617_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_214617_prefix;
	});;
	{
		auto &_match_expr{ (*((*(_214534_fc))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_2121501c4:;
			{
				if ((*((*((*(_214534_fc))._field_Expr))._field_Token))._field_Kind.equal("error", 5)) {
					return _20d5677bb_builtinCallerError(&(_self_), &(_214534_fc));;
				};
			}
		}
		_match_end_21215016e:;
	};
	jule::Ptr<_20d087165_Data> _215917_d = _20d4cce7e_evalExprKind(_self_, (*((*(_214534_fc))._field_Expr))._field_Kind);;
	if ((_215917_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_215917_d))._field_Decl) {
		_20d4c45e6_callTypeFn(_self_, &(_214534_fc), &(_215917_d));
		return _215917_d;;
	};
	if ((_20d4e2e72_Fn((*(_215917_d))._field_Kind.ptr()) == nullptr)) {
		_20d0893a9_pushErr(_self_.ptr(), (*(_214534_fc))._field_Token, jule::Str("attempting to call a non-function", 33), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_20d4c554d_callFn(_self_, &(_214534_fc), &(_215917_d));
	return _215917_d;;
}



inline jule::Ptr<_20d087165_Data> _20d4c5c8a_evalEnumStatic(_20d088d59_Eval* _self_, jule::Ptr<_20d3b85d9_Enum> _217837_enm, jule::Ptr<_20d3510bb_Token> _217849_ident) {
	jule::Ptr<_20d3b7a6c_EnumItem> _217917_item = _20d3b91cd_FindItem(_217837_enm.ptr(), (*(_217849_ident))._field_Kind);;
	if ((_217917_item == nullptr)) {
		_20d0893a9_pushErr(_self_, _217849_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_217837_enm))._field_Ident, &__jule_any_type4),jule::Any((*(_217849_ident))._field_Kind, &__jule_any_type4)}));
	};
	return _20d4db3bb_evalEnumStatic(&(_217837_enm), &(_217917_item));;
}



inline jule::Ptr<_20d087165_Data> _20d4c6186_evalTypeEnumStatic(_20d088d59_Eval* _self_, jule::Ptr<_20d3b9ce4_TypeEnum> _218641_enm, jule::Ptr<_20d3510bb_Token> _218657_ident) {
	jule::Ptr<_20d3b971c_TypeEnumItem> _218717_item = _20d3ba8a5_FindItem(_218641_enm.ptr(), (*(_218657_ident))._field_Kind);;
	if ((_218717_item == nullptr)) {
		_20d0893a9_pushErr(_self_, _218657_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_218641_enm))._field_Ident, &__jule_any_type4),jule::Any((*(_218657_ident))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		
		if ((_20d4e2438_Enum((*((*(_218717_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_21215884d:;
			{
				return _20d08c720__evalEnum(_self_, _20d4e2438_Enum((*((*(_218717_item))._field_Kind))._field_Kind.ptr()));;
			}
		}
		else if ((_20d4e26be_TypeEnum((*((*(_218717_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_212158562:;
			{
				return _20d08ce5c__evalTypeEnum(_self_, _20d4e26be_TypeEnum((*((*(_218717_item))._field_Kind))._field_Kind.ptr()));;
			}
		}
		else if ((_20d4e3208_Struct((*((*(_218717_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_2121585c8:;
			{
				return _20d08d699__evalStruct(_self_, _20d4e3208_Struct((*((*(_218717_item))._field_Kind))._field_Kind.ptr()));;
			}
		}
		else {
			_case_begin_21215683a:;
			{
				jule::Ptr<_20d087165_Data> _220021_d = jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=(*((*(_218717_item))._field_Kind))._field_Kind, ._field_Decl=true, });;
				(*(_220021_d))._field_Model=jule::Any((*(_220021_d))._field_Kind, &__jule_any_type87);
				return _220021_d;;
			}
		}
		_match_end_212157583:;
	};
}



inline jule::Ptr<_20d087165_Data> _20d4c6582_evalStructStatic(_20d088d59_Eval* _self_, jule::Ptr<_20d39066b_StructIns> _220939_s, jule::Ptr<_20d3510bb_Token> _220954_ident) {
	jule::Ptr<_20d087165_Data> _221017_d = jule::new_ptr<_20d087165_Data>();;
	;
	jule::Ptr<_20d3a2b45_Fn> _221417_method = _20d3916d3_FindMethod(_220939_s.ptr(), (*(_220954_ident))._field_Kind, true);;
	if ((_221417_method != nullptr)) {
		if ((!(_20d439292_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_221417_method))._field_Public, (*(_221417_method))._field_Token)))) {
			_20d0893a9_pushErr(_self_, _220954_ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_220954_ident))._field_Kind, &__jule_any_type4)}));
			_20d08971c_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		jule::Ptr<_20d3a5a49_FnIns> _222121_ins = _20d3a43a5_instance(_221417_method);;
		(*(_222121_ins))._field_Owner=_220939_s;
		_211eb2850_pushReference(_self_, &(_222121_ins));
		(*(_221017_d))._field_Model=jule::Any(jule::new_ptr<_20d399b2b_StructStaticIdentExprModel>(_20d399b2b_StructStaticIdentExprModel{._field_Structure=_220939_s, ._field_Expr=(*(_221017_d))._field_Model, ._field_Method=_222121_ins}), &__jule_any_type99);
		(*(_221017_d))._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(_222121_ins, 1)});
		return _221017_d;;
	};
	jule::Ptr<_20d458aca_Var> _223517_sttc = _20d391d65_FindStatic(_220939_s.ptr(), (*(_220954_ident))._field_Kind);;
	if ((_223517_sttc != nullptr)) {
		return _20d090756_evalVar(_self_, _223517_sttc, _220954_ident);;
	};
	_20d0893a9_pushErr(_self_, _220954_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*(_220939_s))._field_Decl))._field_Ident, &__jule_any_type4),jule::Any((*(_220954_ident))._field_Kind, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_20d087165_Data> _20d4c6a38_evalTraitSubIdent(_20d088d59_Eval* _self_, jule::Ptr<_20d087165_Data> _224440_d, jule::Ptr<_20d3b5dde_Trait> _224454_trt, jule::Ptr<_20d3510bb_Token> _224471_ident) {
	jule::Ptr<_20d3a2b45_Fn> _224517_f = _20d3b6a8d_FindMethod(_224454_trt.ptr(), (*(_224471_ident))._field_Kind);;
	if ((_224517_f == nullptr)) {
		_20d0893a9_pushErr(_self_, _224471_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_224454_trt))._field_Ident, &__jule_any_type4),jule::Any((*(_224471_ident))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(_20d3a43a5_instance(_224517_f), 1)}), ._field_Model=jule::Any(jule::new_ptr<_20d398cd4_TraitSubIdentExprModel>(_20d398cd4_TraitSubIdentExprModel{._field_Token=_224471_ident, ._field_Expr=(*(_224440_d))._field_Model, ._field_Method=_224517_f, ._field_Trt=_224454_trt}), &__jule_any_type70), });;
}



inline jule::Ptr<_20d087165_Data> _20d4c7099_evalStructSubIdentField(_20d088d59_Eval* _self_, jule::Ptr<_20d087165_Data>* _226447_d, jule::Ptr<_20d39066b_StructIns>* _226462_s, jule::Ptr<_20d3510bb_Token>* _226482_tok, jule::Ptr<_20d38eabb_FieldIns>* _2264100_f) {
	jule::Ptr<_20d399675_StructSubIdentExprModel> _226517_model = jule::new_ptr<_20d399675_StructSubIdentExprModel>(_20d399675_StructSubIdentExprModel{._field_Token=(*(_226482_tok)), ._field_Expr=jule::new_ptr<_20d087165_Data>((*((*(_226447_d))))), ._field_Field=(*(_2264100_f)), ._field_Owner=(*(_226462_s))});;
	(*((*(_226447_d))))._field_Model=jule::Any(_226517_model, &__jule_any_type71);
	(*((*(_226447_d))))._field_Kind=(*((*(_2264100_f))))._field_Kind;
	(*((*(_226447_d))))._field_Lvalue=true;
	if (((*((*((*(_2264100_f))))._field_Decl))._field_Mutable && (!((*((*(_226447_d))))._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_21216ecb5:;
				{
					jule::Ptr<_20d3ea9a1_scopeChecker> _227921_scope = _20d3eda92_getRoot((*(_self_))._field_lookup.cast_ptr<_20d3ea9a1_scopeChecker>(0));;
					(*((*(_226447_d))))._field_Mutable=(((*(_227921_scope))._field_owner != nullptr) && ((*((*(_227921_scope))._field_owner))._field_Owner == (*(_226462_s))));
				}
			}
			_match_end_21216ec60:;
		};
	};
	return (*(_226447_d));;
}



inline jule::Ptr<_20d087165_Data> _20d4c760a_evalStructSubIdent(_20d088d59_Eval* _self_, jule::Ptr<_20d087165_Data> _228741_d, jule::Ptr<_20d39066b_StructIns> _228755_s, jule::Ptr<_20d373de1_SubIdentExpr> _228774_si, jule::Bool _228793_ref) {
	jule::Ptr<_20d38eabb_FieldIns> _228817_f = _20d391a24_FindField(_228755_s.ptr(), (*((*(_228774_si))._field_Ident))._field_Kind);;
	if ((_228817_f != nullptr)) {
		if ((!(_20d439292_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_228817_f))._field_Decl))._field_Public, (*((*(_228817_f))._field_Decl))._field_Token)))) {
			_20d0893a9_pushErr(_self_, (*(_228774_si))._field_Ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_228817_f))._field_Decl))._field_Ident, &__jule_any_type4)}));
			_20d08971c_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		return _20d4c7099_evalStructSubIdentField(_self_, &(_228741_d), &(_228755_s), &((*(_228774_si))._field_Ident), &(_228817_f));;
	};
	;
	jule::Ptr<_20d3a2b45_Fn> _229817_m = _20d3916d3_FindMethod(_228755_s.ptr(), (*((*(_228774_si))._field_Ident))._field_Kind, false);;
	if ((_229817_m == nullptr)) {
		_20d0893a9_pushErr(_self_, (*(_228774_si))._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*(_228755_s))._field_Decl))._field_Ident, &__jule_any_type4),jule::Any((*((*(_228774_si))._field_Ident))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	if ((!(_20d439292_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_229817_m))._field_Public, (*(_229817_m))._field_Token)))) {
		_20d0893a9_pushErr(_self_, (*(_228774_si))._field_Ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_229817_m))._field_Ident, &__jule_any_type4)}));
		_20d08971c_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	if ((_20d3a1a23_IsRef((*(_229817_m))._field_Params[0LL].ptr()) && (!(_228793_ref)))) {
		_20d0893a9_pushErr(_self_, (*(_228774_si))._field_Ident, jule::Str("reference method cannot use with non-reference instance", 55), jule::Slice<jule::Any>());
	};
	_20d08e249_checkDeprecated(_self_, &((*(_229817_m))._field_Directives), (*(_228774_si))._field_Ident);
	jule::Ptr<_20d3a5a49_FnIns> _231417_ins = _20d3a43a5_instance(_229817_m);;
	(*(_231417_ins))._field_Owner=_228755_s;
	_211eb2850_pushReference(_self_, &(_231417_ins));
	jule::Ptr<_20d087165_Data> _231717_model = jule::new_ptr<_20d087165_Data>((*(_228741_d)));;
	(*(_228741_d))._field_Model=jule::Any(jule::new_ptr<_20d399675_StructSubIdentExprModel>(_20d399675_StructSubIdentExprModel{._field_Token=(*(_228774_si))._field_Ident, ._field_Expr=_231717_model, ._field_Method=_231417_ins, ._field_Owner=_228755_s}), &__jule_any_type71);
	(*(_228741_d))._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(_231417_ins, 1)});
	return _228741_d;;
}



inline jule::Ptr<_20d087165_Data> _20d4c794b_evalIntTypeStatic(_20d088d59_Eval* _self_, jule::Ptr<_20d3510bb_Token> _232836_ident) {
	;
	{
		auto &_match_expr{ (*(_232836_ident))._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_21217e29c:;
			{
				jule::Ptr<_20b0655eb_Const> _233221_c = static__20b065a3b_NewI64(static_cast<jule::I64>(_20b05d935_MaxI(jule::Str("int", 3))));;
				(*(_233221_c))._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d5637b7_primInt, ._field_Model=jule::Any(_233221_c, &__jule_any_type19), ._field_Constant=_233221_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_21217eb0a:;
			{
				jule::Ptr<_20b0655eb_Const> _234021_c = static__20b065a3b_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_20b05de30_Min(jule::Str("int", 3)))));;
				(*(_234021_c))._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d5637b7_primInt, ._field_Model=jule::Any(_234021_c, &__jule_any_type19), ._field_Constant=_234021_c});;
			}
		}
		else {
			_case_begin_21217de39:;
			{
				_20d0893a9_pushErr(_self_, _232836_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("int", 3), &__jule_any_type4),jule::Any((*(_232836_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_21217ddd4:;
	};
}



inline jule::Ptr<_20d087165_Data> _20d4c7c8c_evalUintTypeStatic(_20d088d59_Eval* _self_, jule::Ptr<_20d3510bb_Token> _235337_ident) {
	;
	{
		auto &_match_expr{ (*(_235337_ident))._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_21217e148:;
			{
				jule::Ptr<_20b0655eb_Const> _235721_c = static__20b065d05_NewU64(static_cast<jule::U64>(_20b05dbee_MaxU(jule::Str("uint", 4))));;
				(*(_235721_c))._field_Kind=jule::Str("uint", 4);
				return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d5633dd_primUint, ._field_Model=jule::Any(_235721_c, &__jule_any_type19), ._field_Constant=_235721_c});;
			}
		}
		else {
			_case_begin_212182965:;
			{
				_20d0893a9_pushErr(_self_, _235337_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("uint", 4), &__jule_any_type4),jule::Any((*(_235337_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_212182910:;
	};
}



inline jule::Ptr<_20d087165_Data> _20d4c80cd_evalI8TypeStatic(_20d088d59_Eval* _self_, jule::Ptr<_20d3510bb_Token> _237035_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_237035_ident))._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_212185d31:;
			{
				jule::Ptr<_20b0655eb_Const> _237621_c = static__20b065a3b_NewI64(127LL);;
				(*(_237621_c))._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d563a81_primI8, ._field_Model=jule::Any(_237621_c, &__jule_any_type19), ._field_Constant=_237621_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_21218668e:;
			{
				jule::Ptr<_20b0655eb_Const> _238421_c = static__20b065a3b_NewI64(-128LL);;
				(*(_238421_c))._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d563a81_primI8, ._field_Model=jule::Any(_238421_c, &__jule_any_type19), ._field_Constant=_238421_c});;
			}
		}
		else {
			_case_begin_2121859bd:;
			{
				_20d0893a9_pushErr(_self_, _237035_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i8", 2), &__jule_any_type4),jule::Any((*(_237035_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_212185968:;
	};
}



inline jule::Ptr<_20d087165_Data> _20d4c841e_evalI16TypeStatic(_20d088d59_Eval* _self_, jule::Ptr<_20d3510bb_Token> _239736_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_239736_ident))._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_212189cbe:;
			{
				jule::Ptr<_20b0655eb_Const> _240321_c = static__20b065a3b_NewI64(32767LL);;
				(*(_240321_c))._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d563d4a_primI16, ._field_Model=jule::Any(_240321_c, &__jule_any_type19), ._field_Constant=_240321_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_21218a62c:;
			{
				jule::Ptr<_20b0655eb_Const> _241121_c = static__20b065a3b_NewI64(-32768LL);;
				(*(_241121_c))._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d563d4a_primI16, ._field_Model=jule::Any(_241121_c, &__jule_any_type19), ._field_Constant=_241121_c});;
			}
		}
		else {
			_case_begin_21218995b:;
			{
				_20d0893a9_pushErr(_self_, _239736_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i16", 3), &__jule_any_type4),jule::Any((*(_239736_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_212189906:;
	};
}



inline jule::Ptr<_20d087165_Data> _20d4c8760_evalI32TypeStatic(_20d088d59_Eval* _self_, jule::Ptr<_20d3510bb_Token> _242436_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_242436_ident))._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_21218dc5c:;
			{
				jule::Ptr<_20b0655eb_Const> _243021_c = static__20b065a3b_NewI64(2147483647LL);;
				(*(_243021_c))._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d564114_primI32, ._field_Model=jule::Any(_243021_c, &__jule_any_type19), ._field_Constant=_243021_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_21218e5ba:;
			{
				jule::Ptr<_20b0655eb_Const> _243821_c = static__20b065a3b_NewI64(-2147483648LL);;
				(*(_243821_c))._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d564114_primI32, ._field_Model=jule::Any(_243821_c, &__jule_any_type19), ._field_Constant=_243821_c});;
			}
		}
		else {
			_case_begin_21218d8e9:;
			{
				_20d0893a9_pushErr(_self_, _242436_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i32", 3), &__jule_any_type4),jule::Any((*(_242436_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_21218d894:;
	};
}



inline jule::Ptr<_20d087165_Data> _20d4c8aa1_evalI64TypeStatic(_20d088d59_Eval* _self_, jule::Ptr<_20d3510bb_Token> _245136_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_245136_ident))._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_212192bea:;
			{
				jule::Ptr<_20b0655eb_Const> _245721_c = static__20b065a3b_NewI64(jule::MAX_I64);;
				(*(_245721_c))._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d5643cd_primI64, ._field_Model=jule::Any(_245721_c, &__jule_any_type19), ._field_Constant=_245721_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_212193558:;
			{
				jule::Ptr<_20b0655eb_Const> _246521_c = static__20b065a3b_NewI64(jule::MIN_I64);;
				(*(_246521_c))._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d5643cd_primI64, ._field_Model=jule::Any(_246521_c, &__jule_any_type19), ._field_Constant=_246521_c});;
			}
		}
		else {
			_case_begin_212192887:;
			{
				_20d0893a9_pushErr(_self_, _245136_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i64", 3), &__jule_any_type4),jule::Any((*(_245136_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_212192832:;
	};
}



inline jule::Ptr<_20d087165_Data> _20d4c8de2_evalU8TypeStatic(_20d088d59_Eval* _self_, jule::Ptr<_20d3510bb_Token> _247835_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_247835_ident))._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_212196759:;
			{
				jule::Ptr<_20b0655eb_Const> _248321_c = static__20b065d05_NewU64(255LLU);;
				(*(_248321_c))._field_Kind=jule::Str("u8", 2);
				return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d564697_primU8, ._field_Model=jule::Any(_248321_c, &__jule_any_type19), ._field_Constant=_248321_c});;
			}
		}
		else {
			_case_begin_212195ec8:;
			{
				_20d0893a9_pushErr(_self_, _247835_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u8", 2), &__jule_any_type4),jule::Any((*(_247835_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_212196391:;
	};
}



inline jule::Ptr<_20d087165_Data> _20d4c9233_evalU16TypeStatic(_20d088d59_Eval* _self_, jule::Ptr<_20d3510bb_Token> _249636_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_249636_ident))._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_2121992c8:;
			{
				jule::Ptr<_20b0655eb_Const> _250121_c = static__20b065d05_NewU64(65535LLU);;
				(*(_250121_c))._field_Kind=jule::Str("u16", 3);
				return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d564961_primU16, ._field_Model=jule::Any(_250121_c, &__jule_any_type19), ._field_Constant=_250121_c});;
			}
		}
		else {
			_case_begin_212198a47:;
			{
				_20d0893a9_pushErr(_self_, _249636_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u16", 3), &__jule_any_type4),jule::Any((*(_249636_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_212198e10:;
	};
}



inline jule::Ptr<_20d087165_Data> _20d4c9574_evalU32TypeStatic(_20d088d59_Eval* _self_, jule::Ptr<_20d3510bb_Token> _251436_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_251436_ident))._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_21219bd47:;
			{
				jule::Ptr<_20b0655eb_Const> _251921_c = static__20b065d05_NewU64(4294967295LLU);;
				(*(_251921_c))._field_Kind=jule::Str("u32", 3);
				return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d564c2a_primU32, ._field_Model=jule::Any(_251921_c, &__jule_any_type19), ._field_Constant=_251921_c});;
			}
		}
		else {
			_case_begin_21219b5b6:;
			{
				_20d0893a9_pushErr(_self_, _251436_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u32", 3), &__jule_any_type4),jule::Any((*(_251436_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_21219b97e:;
	};
}



inline jule::Ptr<_20d087165_Data> _20d4c98b5_evalU64TypeStatic(_20d088d59_Eval* _self_, jule::Ptr<_20d3510bb_Token> _253236_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_253236_ident))._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_21219e8b6:;
			{
				jule::Ptr<_20b0655eb_Const> _253721_c = static__20b065d05_NewU64(jule::MAX_U64);;
				(*(_253721_c))._field_Kind=jule::Str("u64", 3);
				return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d56519d_primU64, ._field_Model=jule::Any(_253721_c, &__jule_any_type19), ._field_Constant=_253721_c});;
			}
		}
		else {
			_case_begin_21219e135:;
			{
				_20d0893a9_pushErr(_self_, _253236_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u64", 3), &__jule_any_type4),jule::Any((*(_253236_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_21219e4ed:;
	};
}



inline jule::Ptr<_20d087165_Data> _20d4c9c06_evalF32TypeStatic(_20d088d59_Eval* _self_, jule::Ptr<_20d3510bb_Token> _255036_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_255036_ident))._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_2121a2bb6:;
			{
				jule::Ptr<_20b0655eb_Const> _255721_c = static__20b066652_NewF64(340282346638528860000000000000000000000.0);;
				(*(_255721_c))._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d565467_primF32, ._field_Model=jule::Any(_255721_c, &__jule_any_type19), ._field_Constant=_255721_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_2121a3524:;
			{
				jule::Ptr<_20b0655eb_Const> _256521_c = static__20b066652_NewF64(-340282346638528860000000000000000000000.0);;
				(*(_256521_c))._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d565467_primF32, ._field_Model=jule::Any(_256521_c, &__jule_any_type19), ._field_Constant=_256521_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_2121a358a:;
			{
				jule::Ptr<_20b0655eb_Const> _257321_c = static__20b066652_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				(*(_257321_c))._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d565467_primF32, ._field_Model=jule::Any(_257321_c, &__jule_any_type19), ._field_Constant=_257321_c});;
			}
		}
		else {
			_case_begin_2121a2853:;
			{
				_20d0893a9_pushErr(_self_, _255036_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("f32", 3), &__jule_any_type4),jule::Any((*(_255036_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_2121a27ed:;
	};
}



inline jule::Ptr<_20d087165_Data> _20d4ca047_evalF64TypeStatic(_20d088d59_Eval* _self_, jule::Ptr<_20d3510bb_Token> _258636_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_258636_ident))._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_2121a800c:;
			{
				jule::Ptr<_20b0655eb_Const> _259321_c = static__20b066652_NewF64(jule::MAX_F64);;
				(*(_259321_c))._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d565731_primF64, ._field_Model=jule::Any(_259321_c, &__jule_any_type19), ._field_Constant=_259321_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_2121a886a:;
			{
				jule::Ptr<_20b0655eb_Const> _260121_c = static__20b066652_NewF64(jule::MIN_F64);;
				(*(_260121_c))._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d565731_primF64, ._field_Model=jule::Any(_260121_c, &__jule_any_type19), ._field_Constant=_260121_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_2121a88d1:;
			{
				jule::Ptr<_20b0655eb_Const> _260921_c = static__20b066652_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				(*(_260921_c))._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d565731_primF64, ._field_Model=jule::Any(_260921_c, &__jule_any_type19), ._field_Constant=_260921_c});;
			}
		}
		else {
			_case_begin_2121a7b99:;
			{
				_20d0893a9_pushErr(_self_, _258636_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("f64", 3), &__jule_any_type4),jule::Any((*(_258636_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_2121a7b44:;
	};
}



inline jule::Ptr<_20d087165_Data> _20d4ca443_evalPrimStatic(_20d088d59_Eval* _self_, jule::Str _262233_kind, jule::Ptr<_20d3510bb_Token> _262244_ident) {
	{
		auto &_match_expr{ _262233_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_2121ac40c:;
			{
				return _20d4c794b_evalIntTypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_2121abd02:;
			{
				return _20d4c7c8c_evalUintTypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_2121abeab:;
			{
				return _20d4c80cd_evalI8TypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_2121ac022:;
			{
				return _20d4c841e_evalI16TypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_2121ac088:;
			{
				return _20d4c8760_evalI32TypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_2121ac0ee:;
			{
				return _20d4c8aa1_evalI64TypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_2121acbe3:;
			{
				return _20d4c8de2_evalU8TypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_2121acc59:;
			{
				return _20d4c9233_evalU16TypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_2121accc0:;
			{
				return _20d4c9574_evalU32TypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_2121acd36:;
			{
				return _20d4c98b5_evalU64TypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_2121acd9c:;
			{
				return _20d4c9c06_evalF32TypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_2121ace13:;
			{
				return _20d4ca047_evalF64TypeStatic(_self_, _262244_ident);;
			}
		}
		else {
			_case_begin_2121a7d97:;
			{
				_20d0893a9_pushErr(_self_, _262244_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_262233_kind, &__jule_any_type4),jule::Any((*(_262244_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_2121a7d42:;
	};
}



inline jule::Ptr<_20d087165_Data> _20d4ca83e_evalTypeStatic(_20d088d59_Eval* _self_, jule::Ptr<_20d087165_Data> _265437_d, jule::Ptr<_20d373de1_SubIdentExpr> _265451_si) {
	{
		
		if ((_20d4e1b85_Prim((*(_265437_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_2121b2412:;
			{
				return _20d4ca443_evalPrimStatic(_self_, _20d4e744e_Str(_20d4e1b85_Prim((*(_265437_d))._field_Kind.ptr()).ptr()), (*(_265451_si))._field_Ident);;
			}
		}
		else if ((_20d4e2438_Enum((*(_265437_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_2121b3138:;
			{
				return _20d4c5c8a_evalEnumStatic(_self_, _20d4e2438_Enum((*(_265437_d))._field_Kind.ptr()), (*(_265451_si))._field_Ident);;
			}
		}
		else if ((_20d4e26be_TypeEnum((*(_265437_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_2121b319e:;
			{
				return _20d4c6186_evalTypeEnumStatic(_self_, _20d4e26be_TypeEnum((*(_265437_d))._field_Kind.ptr()), (*(_265451_si))._field_Ident);;
			}
		}
		else if ((_20d4e3208_Struct((*(_265437_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_2121b3215:;
			{
				return _20d4c6582_evalStructStatic(_self_, _20d4e3208_Struct((*(_265437_d))._field_Kind.ptr()), (*(_265451_si))._field_Ident);;
			}
		}
		else {
			_case_begin_2121b205a:;
			{
				_20d0893a9_pushErr(_self_, (*(_265451_si))._field_Ident, jule::Str("type @ is not supports sub-defines", 34), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_265437_d))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_2121b1eb1:;
	};
}



inline jule::Ptr<_20d087165_Data> _2121ba140_comptimeObjSubIdent(_20d088d59_Eval* _self_, jule::Ptr<_20d3cbb5d_comptimeTypeInfo>* _267057_ct, jule::Ptr<_20d087165_Data>* _267077_d, jule::Ptr<_20d373de1_SubIdentExpr>* _267088_si) {
	jule::Ptr<_20d087165_Data> _267117_cd = _20d3d2d62_subIdent((*(_267057_ct)), &((*((*((*(_267088_si))))._field_Ident))._field_Kind));;
	if ((_267117_cd == nullptr)) {
		_20d0893a9_pushErr(_self_, (*((*(_267088_si))))._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*((*(_267077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267088_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267117_cd;;
}

inline jule::Ptr<_20d087165_Data> _2121be6e9_comptimeObjSubIdent(_20d088d59_Eval* _self_, jule::Ptr<_20d3bcbe8_comptimeStructField>* _267057_ct, jule::Ptr<_20d087165_Data>* _267077_d, jule::Ptr<_20d373de1_SubIdentExpr>* _267088_si) {
	jule::Ptr<_20d087165_Data> _267117_cd = _20d3be513_subIdent((*(_267057_ct)), &((*((*((*(_267088_si))))._field_Ident))._field_Kind));;
	if ((_267117_cd == nullptr)) {
		_20d0893a9_pushErr(_self_, (*((*(_267088_si))))._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*((*(_267077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267088_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267117_cd;;
}

inline jule::Ptr<_20d087165_Data> _2121c3c5e_comptimeObjSubIdent(_20d088d59_Eval* _self_, jule::Ptr<_20d3c4260_comptimeEnumField>* _267057_ct, jule::Ptr<_20d087165_Data>* _267077_d, jule::Ptr<_20d373de1_SubIdentExpr>* _267088_si) {
	jule::Ptr<_20d087165_Data> _267117_cd = _20d3c5261_subIdent((*(_267057_ct)), &((*((*((*(_267088_si))))._field_Ident))._field_Kind));;
	if ((_267117_cd == nullptr)) {
		_20d0893a9_pushErr(_self_, (*((*(_267088_si))))._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*((*(_267077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267088_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267117_cd;;
}

inline jule::Ptr<_20d087165_Data> _2121c8318_comptimeObjSubIdent(_20d088d59_Eval* _self_, jule::Ptr<_20d3c6c02_comptimeParam>* _267057_ct, jule::Ptr<_20d087165_Data>* _267077_d, jule::Ptr<_20d373de1_SubIdentExpr>* _267088_si) {
	jule::Ptr<_20d087165_Data> _267117_cd = _20d3c8929_subIdent((*(_267057_ct)), &((*((*((*(_267088_si))))._field_Ident))._field_Kind));;
	if ((_267117_cd == nullptr)) {
		_20d0893a9_pushErr(_self_, (*((*(_267088_si))))._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*((*(_267077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267088_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267117_cd;;
}

inline jule::Ptr<_20d087165_Data> _2121ccb03_comptimeObjSubIdent(_20d088d59_Eval* _self_, jule::Ptr<_20d3c0ea4_comptimeStatic>* _267057_ct, jule::Ptr<_20d087165_Data>* _267077_d, jule::Ptr<_20d373de1_SubIdentExpr>* _267088_si) {
	jule::Ptr<_20d087165_Data> _267117_cd = _20d3c27be_subIdent((*(_267057_ct)), &((*((*((*(_267088_si))))._field_Ident))._field_Kind));;
	if ((_267117_cd == nullptr)) {
		_20d0893a9_pushErr(_self_, (*((*(_267088_si))))._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*((*(_267077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267088_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267117_cd;;
}

inline jule::Ptr<_20d087165_Data> _2121d2168_comptimeObjSubIdent(_20d088d59_Eval* _self_, jule::Ptr<_20d3d3170_comptimeValue>* _267057_ct, jule::Ptr<_20d087165_Data>* _267077_d, jule::Ptr<_20d373de1_SubIdentExpr>* _267088_si) {
	jule::Ptr<_20d087165_Data> _267117_cd = _20d3d56b1_subIdent((*(_267057_ct)), &((*((*((*(_267088_si))))._field_Ident))._field_Kind));;
	if ((_267117_cd == nullptr)) {
		_20d0893a9_pushErr(_self_, (*((*(_267088_si))))._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*((*(_267077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267088_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267117_cd;;
}

inline jule::Ptr<_20d087165_Data> _2121d66cd_comptimeObjSubIdent(_20d088d59_Eval* _self_, jule::Ptr<_20d3d70b9_comptimeFile>* _267057_ct, jule::Ptr<_20d087165_Data>* _267077_d, jule::Ptr<_20d373de1_SubIdentExpr>* _267088_si) {
	jule::Ptr<_20d087165_Data> _267117_cd = _20d3d88d4_subIdent((*(_267057_ct)), &((*((*((*(_267088_si))))._field_Ident))._field_Kind));;
	if ((_267117_cd == nullptr)) {
		_20d0893a9_pushErr(_self_, (*((*(_267088_si))))._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*((*(_267077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267088_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267117_cd;;
}



inline __jule_tuple_x_20d087165_Data__jule_tuple_bool _20d4cb1e1_tryComptimeObjSubIdent(_20d088d59_Eval* _self_, jule::Ptr<_20d087165_Data>* _267846_d, jule::Ptr<_20d373de1_SubIdentExpr> _267860_si) {
	__jule_tuple_x_20d087165_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((_20d4e554b_comptimeTypeInfo((*((*(_267846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_2121b8490:;
			{
				jule::Ptr<_20d3cbb5d_comptimeTypeInfo> _268121_ct = _20d4e554b_comptimeTypeInfo((*((*(_267846_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _2121ba140_comptimeObjSubIdent(_self_, &(_268121_ct), _267846_d, &(_267860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_20d4e425e_comptimeStructField((*((*(_267846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_2121b80d8:;
			{
				jule::Ptr<_20d3bcbe8_comptimeStructField> _268421_ct = _20d4e425e_comptimeStructField((*((*(_267846_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _2121be6e9_comptimeObjSubIdent(_self_, &(_268421_ct), _267846_d, &(_267860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_20d4e477b_comptimeEnumField((*((*(_267846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_2121b814e:;
			{
				jule::Ptr<_20d3c4260_comptimeEnumField> _268721_ct = _20d4e477b_comptimeEnumField((*((*(_267846_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _2121c3c5e_comptimeObjSubIdent(_self_, &(_268721_ct), _267846_d, &(_267860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_20d4e4c98_comptimeParam((*((*(_267846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_2121b81b5:;
			{
				jule::Ptr<_20d3c6c02_comptimeParam> _269021_ct = _20d4e4c98_comptimeParam((*((*(_267846_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _2121c8318_comptimeObjSubIdent(_self_, &(_269021_ct), _267846_d, &(_267860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_20d4e5a68_comptimeStatic((*((*(_267846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_2121b822b:;
			{
				jule::Ptr<_20d3c0ea4_comptimeStatic> _269321_ct = _20d4e5a68_comptimeStatic((*((*(_267846_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _2121ccb03_comptimeObjSubIdent(_self_, &(_269321_ct), _267846_d, &(_267860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_20d4e5cee_comptimeValue((*((*(_267846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_2121b8814:;
			{
				jule::Ptr<_20d3d3170_comptimeValue> _269621_ct = _20d4e5cee_comptimeValue((*((*(_267846_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _2121d2168_comptimeObjSubIdent(_self_, &(_269621_ct), _267846_d, &(_267860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_20d4e6085_comptimeFile((*((*(_267846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_2121b887a:;
			{
				jule::Ptr<_20d3d70b9_comptimeFile> _269921_ct = _20d4e6085_comptimeFile((*((*(_267846_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _2121d66cd_comptimeObjSubIdent(_self_, &(_269921_ct), _267846_d, &(_267860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_2121b8072:;
			{
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		_match_end_2121b7ec8:;
	};
}



inline jule::Ptr<_20d087165_Data> _20d4cb5dc_evalObjSubIdent(_20d088d59_Eval* _self_, jule::Ptr<_20d087165_Data> _270638_d, jule::Ptr<_20d373de1_SubIdentExpr> _270652_si) {
	if (_20d353a2a_IsIgnoreIdent((*((*(_270652_si))._field_Ident))._field_Kind)) {
		_20d0893a9_pushErr(_self_, (*(_270652_si))._field_Ident, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		jule::Ptr<_20d087165_Data> _271322_compData;;
		jule::Bool _271332_ok = false;;
		({
			__jule_tuple_x_20d087165_Data__jule_tuple_bool __jule_assign_result = _20d4cb1e1_tryComptimeObjSubIdent(_self_, &(_270638_d), _270652_si);
			_271322_compData = __jule_assign_result.__jule_result_arg0;
			_271332_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_271332_ok) {
			return _271322_compData;;
		};
	};
	jule::Ptr<_20d4de28c_TypeKind> _271917_kind = (*(_270638_d))._field_Kind;;
	{
		
		if ((_20d4e21a2_Ptr((*(_270638_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_2121db9be:;
			{
				jule::Ptr<_20d4ee401_Ptr> _272217_ptr = _20d4e21a2_Ptr((*(_270638_d))._field_Kind.ptr());;
				if (_20d4eee3a_IsUnsafe(_272217_ptr.ptr())) {
					goto _match_end_2121db958;
				};
				if ((!(_20d089d9e_isUnsafe(_self_)))) {
					_20d0893a9_pushErr(_self_, (*(_270652_si))._field_Ident, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				_271917_kind=(*(_20d4e21a2_Ptr((*(_270638_d))._field_Kind.ptr())))._field_Elem;
				_20d4db971_makeImplicitDeref(&(_270638_d), (*(_270652_si))._field_Ident);
			}
		}
		else if ((_20d4e1e1b_Sptr((*(_270638_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_2121dba46:;
			{
				_271917_kind=(*(_20d4e1e1b_Sptr((*(_270638_d))._field_Kind.ptr())))._field_Elem;
				_20d4db971_makeImplicitDeref(&(_270638_d), (*(_270652_si))._field_Ident);
			}
		}
		_match_end_2121db958:;
	};
	{
		
		if ((_20d4e348e_Trait((*(_270638_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_2121ded24:;
			{
				return _20d4c6a38_evalTraitSubIdent(_self_, _270638_d, _20d4e348e_Trait((*(_270638_d))._field_Kind.ptr()), (*(_270652_si))._field_Ident);;
			}
		}
		else if ((_20d4e3208_Struct(_271917_kind.ptr()) != nullptr)) {
			_case_begin_2121ded9b:;
			{
				jule::Ptr<_20d39066b_StructIns> _274017_s = _20d4e3208_Struct(_271917_kind.ptr());;
				if (_20d4d8e68_isInstancedStruct(_274017_s)) {
					jule::Bool _274225_usedReferenceElem = (_20d4e1e1b_Sptr((*(_270638_d))._field_Kind.ptr()) != nullptr);;
					return _20d4c760a_evalStructSubIdent(_self_, _270638_d, _20d4e3208_Struct(_271917_kind.ptr()), _270652_si, _274225_usedReferenceElem);;
				};
			}
		}
		_match_end_2121decbe:;
	};
	_20d0893a9_pushErr(_self_, (*(_270652_si))._field_Ident, jule::Str("object @ is not supports sub-defines", 36), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_270638_d))._field_Kind.ptr()), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_20d087165_Data> _20d4cb92d_evalSubIdent(jule::Ptr<_20d088d59_Eval> _self_, jule::Ptr<_20d373de1_SubIdentExpr> _275036_si) {
	jule::Ptr<_20d4de28c_TypeKind> _275117_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_275117_prefix;
	});;
	jule::Ptr<_20d087165_Data> _275417_d = _20d4cce7e_evalExprKind(_self_, (*((*(_275036_si))._field_Expr))._field_Kind);;
	if ((_275417_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_275417_d))._field_Decl) {
		return _20d4ca83e_evalTypeStatic(_self_.ptr(), _275417_d, _275036_si);;
	};
	return _20d4cb5dc_evalObjSubIdent(_self_.ptr(), _275417_d, _275036_si);;
}



inline jule::Ptr<_20d087165_Data> _20d4cbc6e_evalTuple(jule::Ptr<_20d088d59_Eval> _self_, jule::Ptr<_20d37199e_TupleExpr> _276433_tup) {
	jule::Ptr<_20d4ec201_Tuple> _276517_tupT = jule::new_ptr<_20d4ec201_Tuple>();;
	(*(_276517_tupT))._field_Types=jule::Slice<jule::Ptr<_20d4de28c_TypeKind>>::alloc(0LL, (*(_276433_tup))._field_Expr.len());
	jule::Ptr<_20d39a302_TupleExprModel> _276817_model = jule::new_ptr<_20d39a302_TupleExprModel>(_20d39a302_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_20d087165_Data>>::alloc(0LL, (*(_276433_tup))._field_Expr.len())});;
	jule::Bool _277217_ok = true;;
	{
		auto expr = &((*(_276433_tup))._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2121e98bc:;
		if (it != expr_end) {
			jule::Ptr<_20d370ccd_Expr> _277321_expr = *it;
			{
				jule::Ptr<_20d087165_Data> _277421_d = _20d4cdc93_evalExpr(_self_, _277321_expr);;
				if ((_277421_d == nullptr)) {
					_277217_ok=false;
					goto _iter_next_2121e98bc;
				};
				{ jule::Slice<jule::Ptr<_20d4de28c_TypeKind>> &__jule_push_dest = (*(_276517_tupT))._field_Types; __jule_push_dest.push((*(_277421_d))._field_Kind); };
				{ jule::Slice<jule::Ptr<_20d087165_Data>> &__jule_push_dest = (*(_276817_model))._field_Datas; __jule_push_dest.push(_277421_d); };
			}
			_iter_next_2121e98bc:;
			++it;
			goto _iter_begin_2121e98bc;
		}
		_iter_end_2121e98bc:;
	};
	if ((!(_277217_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(_276517_tupT, 23)}), ._field_Model=jule::Any(_276817_model, &__jule_any_type85), });;
}



inline jule::Ptr<_20d087165_Data> _20d4cc16a_evalMap(jule::Ptr<_20d088d59_Eval> _self_, jule::Ptr<_20d4ecca1_Map> _279331_m, jule::Ptr<_20d3762cd_BraceLit> _279344_lit) {
	jule::Ptr<_20d3981bd_MapExprModel> _279417_model = jule::new_ptr<_20d3981bd_MapExprModel>(_20d3981bd_MapExprModel{._field_KeyKind=(*(_279331_m))._field_Key, ._field_ValKind=(*(_279331_m))._field_Val, });;
	{
		auto expr = &((*(_279344_lit))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2121ed65c:;
		if (it != expr_end) {
			jule::Ptr<_20d370ccd_Expr> _279921_expr = *it;
			{
				{
					auto &_match_expr{ (*(_279921_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type82) {
						_case_begin_2121ee6e6:;
						{
							goto _match_end_2121ee2ea;
						}
					}
					else {
						_case_begin_2121ee350:;
						{
							_20d0893a9_pushErr(_self_.ptr(), (*(_279344_lit))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_2121ee2ea:;
				};
				jule::Ptr<_20d376b08_KeyValPair> _280921_pair = (*(_279921_expr))._field_Kind.cast_ptr<_20d376b08_KeyValPair>(&__jule_any_type82);;
				jule::Ptr<_20d087165_Data> _281121_key = _20d4cdc93_evalExpr(_self_, (*(_280921_pair))._field_Key);;
				if ((_281121_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_20d087165_Data> _281621_val = _20d4cdc93_evalExpr(_self_, (*(_280921_pair))._field_Val);;
				if ((_281621_val == nullptr)) {
					return nullptr;;
				};
				_20d441541_checkAssignType((*(_self_))._field_s, false, &((*(_279331_m))._field_Key), &(_281121_key), (*(_280921_pair))._field_Colon);
				_20d441541_checkAssignType((*(_self_))._field_s, false, &((*(_279331_m))._field_Val), &(_281621_val), (*(_280921_pair))._field_Colon);
				{ jule::Slice<jule::Ptr<_20d397c17_KeyValPairExprModel>> &__jule_push_dest = (*(_279417_model))._field_Entries; __jule_push_dest.push(jule::new_ptr<_20d397c17_KeyValPairExprModel>(_20d397c17_KeyValPairExprModel{._field_Key=(*(_281121_key))._field_Model, ._field_Val=(*(_281621_val))._field_Model})); };
			}
			_iter_next_2121ed65c:;
			++it;
			goto _iter_begin_2121ed65c;
		}
		_iter_end_2121ed65c:;
	};
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(_279331_m, 24)}), ._field_Mutable=true, ._field_Model=jule::Any(_279417_model, &__jule_any_type100), });;
}



inline jule::Ptr<_20d087165_Data> _20d4cc4ab_evalBraceLit(jule::Ptr<_20d088d59_Eval> _self_, jule::Ptr<_20d3762cd_BraceLit> _283736_lit) {
	{
		
		if (((*(_self_))._field_prefix == nullptr)) {
			_case_begin_212205a71:;
			{
				_20d0893a9_pushErr(_self_.ptr(), (*(_283736_lit))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_20d4e3725_Map((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_2122051be:;
			{
				return _20d4cc16a_evalMap(_self_, _20d4e3725_Map((*(_self_))._field_prefix.ptr()), _283736_lit);;
			}
		}
		else if ((_20d4e3208_Struct((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_212205235:;
			{
				return _20d4c386a_evalStructLitExplicit(_self_, _20d4e3208_Struct((*(_self_))._field_prefix.ptr()), (*(_283736_lit))._field_Exprs, (*(_283736_lit))._field_Token);;
			}
		}
		else {
			_case_begin_212204d17:;
			{
				_20d0893a9_pushErr(_self_.ptr(), (*(_283736_lit))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_212204c5c:;
	};
}



inline jule::Ptr<_20d087165_Data> _20d4cc7ec_evalAnonFunc(jule::Ptr<_20d088d59_Eval> _self_, jule::Ptr<_20d37d659_FnDecl> _285236_decl) {
	_20d5013e2_typeChecker _285317_tc = _20d5013e2_typeChecker{._field_s=(*(_self_))._field_s, ._field_rootLookup=(*(_self_))._field_lookup, ._field_lookup=(*(_self_))._field_lookup, };;
	jule::Ptr<_20d3a5a49_FnIns> _285817_ins = _20d5080b9_buildFunc(&_285317_tc, _285236_decl);;
	if ((_285817_ins == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_21220aceb:;
			{
				jule::Ptr<_20d3ea9a1_scopeChecker> _286421_sc = (*(_self_))._field_lookup.cast_ptr<_20d3ea9a1_scopeChecker>(0);;
				jule::Ptr<_20d3ea9a1_scopeChecker> _286521_scc = _20d40c6e9_newChildChecker(_286421_sc);;
				(*(_286521_scc))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_20d3e950a_scopeLabel>>>(nullptr);
				(*(_286521_scc))._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_20d3e9a8d_scopeGoto>>>(nullptr);
				(*(_286521_scc))._field_owner=nullptr;
				(*(_286521_scc))._field_childIndex=0LL;
				(*(_286521_scc))._field_it=0LLU;
				(*(_286521_scc))._field_cse=0LLU;
				(*(_286521_scc))._field_owner=_285817_ins;
				_20d453421_checkFnInsSc((*(_self_))._field_s.ptr(), &(_285817_ins), &(_286521_scc));
			}
		}
		else {
			_case_begin_21220a977:;
			{
				_20d453a3c_checkFnIns((*(_self_))._field_s, &(_285817_ins));
			}
		}
		_match_end_21220a878:;
	};
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(_285817_ins, 1)}), ._field_Model=jule::Any(jule::new_ptr<_20d39783d_AnonFnExprModel>(_20d39783d_AnonFnExprModel{._field_Func=_285817_ins, ._field_Global=_20d08a135_isGlobal(_self_.ptr())}), &__jule_any_type101), });;
}



inline jule::Ptr<_20d087165_Data> _20d4ccb3d_evalBinop(jule::Ptr<_20d088d59_Eval> _self_, jule::Ptr<_20d374397_BinopExpr> _288733_op) {
	_20d4d11e6_binaryEval _288817_bs = static__20d4d17ce_newPlain(_self_);;
	if (((*(_self_))._field_prefix != nullptr)) {
		jule::Ptr<_20d4e710d_Prim> _289117_prim = _20d4e1b85_Prim((*(_self_))._field_prefix.ptr());;
		if (((_289117_prim == nullptr) || (!(_20b065123_IsNum(_20d4e744e_Str(_289117_prim.ptr())))))) {
			jule::Ptr<_20d4de28c_TypeKind> _289325_prefix = (*(_self_))._field_prefix;;
			(*(_self_))._field_prefix=nullptr;
			__JULE_DEFER({
				(*(_self_))._field_prefix=_289325_prefix;
			});;
			return _20d4d7274_eval(&_288817_bs, &(_288733_op));;
		};
	};
	return _20d4d7274_eval(&_288817_bs, &(_288733_op));;
}



inline jule::Ptr<_20d087165_Data> _20d4cce7e_evalExprKind(jule::Ptr<_20d088d59_Eval> _self_, jule::Any _290236_kind) {
	{
		auto &_match_expr{ _290236_kind };
		
		if (_match_expr.type == &__jule_any_type102) {
			_case_begin_212214002:;
			{
				jule::Ptr<_20d3710ca_RangeExpr> _290521_e = _290236_kind.cast_ptr<_20d3710ca_RangeExpr>(&__jule_any_type102);;
				return _20d4cce7e_evalExprKind(_self_, (*((*(_290521_e))._field_Expr))._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_212213b8e:;
			{
				return _20d08b8d9_evalLit(_self_.ptr(), _290236_kind.cast_ptr<_20d371d78_LitExpr>(&__jule_any_type103));;
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_212214233:;
			{
				return _20d09138e_evalIdent(_self_.ptr(), _290236_kind.cast_ptr<_20d372708_IdentExpr>(&__jule_any_type83));;
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_2122142aa:;
			{
				return _20d0916d0_evalUnary(_self_, _290236_kind.cast_ptr<_20d372d8a_UnaryExpr>(&__jule_any_type91));;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_212214332:;
			{
				return _20d091a21_evalVariadic(_self_, _290236_kind.cast_ptr<_20d373264_VariadicExpr>(&__jule_any_type79));;
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_2122143a9:;
			{
				return _20d091d62_evalUnsafe(_self_, _290236_kind.cast_ptr<_20d372252_UnsafeExpr>(&__jule_any_type104));;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_212214486:;
			{
				return _20d09299a_evalSliceExpr(_self_, _290236_kind.cast_ptr<_20d377301_SliceExpr>(&__jule_any_type97));;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_21221450d:;
			{
				return _20d096141_evalIndexing(_self_, _290236_kind.cast_ptr<_20d377c91_IndexingExpr>(&__jule_any_type105));;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_212214585:;
			{
				return _20d4be3d2_evalSlicing(_self_, _290236_kind.cast_ptr<_20d378401_SlicingExpr>(&__jule_any_type106));;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_21221460c:;
			{
				return _20d4c3073_evalCast(_self_, _290236_kind.cast_ptr<_20d37363d_CastExpr>(&__jule_any_type107));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_212214684:;
			{
				return _20d4c33b4_evalNsSelection(_self_.ptr(), _290236_kind.cast_ptr<_20d373a17_NsSelectionExpr>(&__jule_any_type93));;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_21221470b:;
			{
				return _20d4c3bab_evalStructLit(_self_, _290236_kind.cast_ptr<_20d375d27_StructLit>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_212214783:;
			{
				return _20d4c4283_evalType(_self_.ptr(), _290236_kind.cast_ptr<_20d36b999_TypeDecl>(&__jule_any_type92));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_21221480a:;
			{
				return _20d4c588e_evalFnCall(_self_, _290236_kind.cast_ptr<_20d374a07_FnCallExpr>(&__jule_any_type109));;
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_212214882:;
			{
				return _20d4cb92d_evalSubIdent(_self_, _290236_kind.cast_ptr<_20d373de1_SubIdentExpr>(&__jule_any_type89));;
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_212214909:;
			{
				return _20d4cbc6e_evalTuple(_self_, _290236_kind.cast_ptr<_20d37199e_TupleExpr>(&__jule_any_type84));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_212214981:;
			{
				return _20d4cc4ab_evalBraceLit(_self_, _290236_kind.cast_ptr<_20d3762cd_BraceLit>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_212214a08:;
			{
				return _20d4cc7ec_evalAnonFunc(_self_, _290236_kind.cast_ptr<_20d37d659_FnDecl>(&__jule_any_type14));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_212214a80:;
			{
				return _20d4ccb3d_evalBinop(_self_, _290236_kind.cast_ptr<_20d374397_BinopExpr>(&__jule_any_type111));;
			}
		}
		else {
			_case_begin_212213d26:;
			{
				return nullptr;;
			}
		}
		_match_end_212213cc1:;
	};
}



inline jule::Ptr<_20d087165_Data> _20d4cd2c0_eval1(jule::Ptr<_20d088d59_Eval> _self_, jule::Ptr<_20d370ccd_Expr> _295029_expr) {
	jule::Ptr<_20d087165_Data> _295117_d = _20d4cce7e_evalExprKind(_self_, (*(_295029_expr))._field_Kind);;
	if (((_295117_d == nullptr) || ((*(_295117_d))._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_20d4e2e72_Fn((*(_295117_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_2122209c0:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _295821_f = _20d4e2e72_Fn((*(_295117_d))._field_Kind.ptr());;
				if (_20d3a6ece_IsBuiltin(_295821_f.ptr())) {
					_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_295029_expr))._field_Token, jule::Str("built-in functions should be invoked", 36), jule::Slice<jule::Any>());
					goto _match_end_2122200da;
				};
				if (((*(_295821_f))._field_Generics.len() != (*((*(_295821_f))._field_Decl))._field_Generics.len())) {
					_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_295029_expr))._field_Token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				};
				if (((!((*((*(_295821_f))._field_Decl))._field_Statically)) && _20d3a334e_IsMethod((*(_295821_f))._field_Decl.ptr()))) {
					_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_295029_expr))._field_Token, jule::Str("methods should be invoked", 25), jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_2122200da:;
	};
	return _295117_d;;
}



inline jule::Ptr<_20d087165_Data> _20d4cd611_eval(jule::Ptr<_20d088d59_Eval> _self_, jule::Ptr<_20d370ccd_Expr> _297728_expr) {
	jule::Ptr<_20d087165_Data> _297817_d = _20d4cd2c0_eval1(_self_, _297728_expr);;
	if ((_297817_d == nullptr)) {
		return nullptr;;
	};
	if (((((*(_self_))._field_owner == nullptr) || (!((*((*(_self_))._field_owner))._field_Constant))) && _20d4e3c42_comptime((*(_297817_d))._field_Kind.ptr()))) {
		_20d438a33_pushErr((*(_self_))._field_s.ptr(), (*(_297728_expr))._field_Token, jule::Str("compile-time evaluations cannot used as expression", 50), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _297817_d;;
}



inline jule::Ptr<_20d087165_Data> _20d4cd952_evalExpr1(jule::Ptr<_20d088d59_Eval> _self_, jule::Ptr<_20d370ccd_Expr> _299233_expr) {
	jule::Ptr<_20d087165_Data> _299317_d = _20d4cd2c0_eval1(_self_, _299233_expr);;
	{
		
		if ((_299317_d == nullptr)) {
			_case_begin_212228962:;
			{
				return nullptr;;
			}
		}
		else if ((*(_299317_d))._field_Decl) {
			_case_begin_2122289d9:;
			{
				_20d0893a9_pushErr(_self_.ptr(), (*(_299233_expr))._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_212228896:;
			{
				return _299317_d;;
			}
		}
		_match_end_212228830:;
	};
}



inline jule::Ptr<_20d087165_Data> _20d4cdc93_evalExpr(jule::Ptr<_20d088d59_Eval> _self_, jule::Ptr<_20d370ccd_Expr> _300832_expr) {
	jule::Ptr<_20d087165_Data> _300917_d = _20d4cd611_eval(_self_, _300832_expr);;
	{
		
		if ((_300917_d == nullptr)) {
			_case_begin_21222a887:;
			{
				return nullptr;;
			}
		}
		else if ((*(_300917_d))._field_Decl) {
			_case_begin_21222a90e:;
			{
				_20d0893a9_pushErr(_self_.ptr(), (*(_300832_expr))._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_21222a7bb:;
			{
				return _300917_d;;
			}
		}
		_match_end_21222a755:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20d088d59_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _20d4ce25a_unaryEval static__20d4ce69a_new(jule::Ptr<_20d088d59_Eval> _302923_e) {
	return _20d4ce25a_unaryEval{._field_e=_302923_e, };;
}



inline void _20d4ce898_minus(_20d4ce25a_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_21222c526:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_20d4e1b85_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_21222c1e6:;
			{
				if ((!(_20b065123_IsNum(_20d4de655_Str((*((*(_self_))._field_d))._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_20d4e3208_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_21222c25c:;
			{
				if (((*(_20d4e3208_Struct((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_21222c180:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_21222b24a:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_20d087a39_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_20b06a106_IsF64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_212231c01:;
				{
					_20b069138_SetF64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::F64>((-(_20b067a0a_ReadF64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_20b0695bc_IsI64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_212231dee:;
				{
					_20b068566_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((-(_20b066ec1_ReadI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_20b069853_IsU64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_212231e65:;
				{
					_20b068566_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((-(_20b067c91_AsI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_21223185a:;
				{
					jule::panic(jule::Str("unimplemented constant type for unary.minus, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3067:17"));;
				}
			}
			_match_end_2122317a0:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_20d394ecd_UnaryExprModel>(_20d394ecd_UnaryExprModel{._field_Expr=jule::new_ptr<_20d087165_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type72);
}



inline void _20d4cea96_plus(_20d4ce25a_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_2122373aa:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_20d4e1b85_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_21223707a:;
			{
				if ((!(_20b065123_IsNum(_20d4de655_Str((*((*(_self_))._field_d))._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_20d4e3208_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_2122370e1:;
			{
				if (((*(_20d4e3208_Struct((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_212237014:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_212236e48:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_20d087a39_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_20b06a106_IsF64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_21223ba85:;
				{
					_20b069138_SetF64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::F64>((+(_20b067a0a_ReadF64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_20b0695bc_IsI64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_21223bc83:;
				{
					_20b068566_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((+(_20b066ec1_ReadI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_20b069853_IsU64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_21223bce9:;
				{
					_20b068566_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((+(_20b067c91_AsI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_21223b6de:;
				{
					jule::panic(jule::Str("unimplemented constant type for unary.plus, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3112:17"));;
				}
			}
			_match_end_21223b634:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_20d394ecd_UnaryExprModel>(_20d394ecd_UnaryExprModel{._field_Expr=jule::new_ptr<_20d087165_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type72);
}



inline void _20d4cec94_caret(_20d4ce25a_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_21224223e:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_20d4e1b85_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_212241e0e:;
			{
				if ((!(_20b064a18_IsInt(_20d4de655_Str((*((*(_self_))._field_d))._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_20d4e3208_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_212241e75:;
			{
				if (((*(_20d4e3208_Struct((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_212241d98:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_212241ccc:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_20d087a39_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_20b0695bc_IsI64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_212246919:;
				{
					_20b068566_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((~(_20b066ec1_ReadI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_20b069853_IsU64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_212246b17:;
				{
					_20b06881e_SetU64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::U64>((~(_20b067257_ReadU64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_212246573:;
				{
					jule::panic(jule::Str("unimplemented constant type for unary.caret, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3155:17"));;
				}
			}
			_match_end_2122464b8:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_20d394ecd_UnaryExprModel>(_20d394ecd_UnaryExprModel{._field_Expr=jule::new_ptr<_20d087165_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type72);
}



inline void _20d4cee92_excl(_20d4ce25a_unaryEval* _self_) {
	jule::Ptr<_20d4e710d_Prim> _316913_t = _20d4e1b85_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
	if (((_316913_t == nullptr) || (!(_20d4ea30e_IsBool(_316913_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_20d087a39_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_20b069ad9_IsBool((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_21224cb73:;
				{
					_20b068ac7_SetBool((*((*(_self_))._field_d))._field_Constant.ptr(), (!(_20b0674dd_ReadBool((*((*(_self_))._field_d))._field_Constant.ptr()))));
				}
			}
			else {
				_case_begin_21224c7cc:;
				{
					jule::panic(jule::Str("unimplemented constant type for unary.excl, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3183:17"));;
				}
			}
			_match_end_21224c711:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_20d394ecd_UnaryExprModel>(_20d394ecd_UnaryExprModel{._field_Expr=jule::new_ptr<_20d087165_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type72);
}



inline void _20d4d0190_star(_20d4ce25a_unaryEval* _self_) {
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_20d394ecd_UnaryExprModel>(_20d394ecd_UnaryExprModel{._field_Expr=jule::new_ptr<_20d087165_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type72);
	{
		
		if ((_20d4e21a2_Ptr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_2122514b2:;
			{
				if ((!(_20d089d9e_isUnsafe((*(_self_))._field_e.ptr())))) {
					_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				jule::Ptr<_20d4ee401_Ptr> _320821_t = _20d4e21a2_Ptr((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (_20d4eee3a_IsUnsafe(_320821_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*((*(_self_))._field_d))._field_Kind=(*(_320821_t))._field_Elem;
				(*((*(_self_))._field_d))._field_Mutable=true;
			}
		}
		else if ((_20d4e1e1b_Sptr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_212251193:;
			{
				(*((*(_self_))._field_d))._field_Kind=(*(_20d4e1e1b_Sptr((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Elem;
			}
		}
		else {
			_case_begin_21225112c:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_2122501b4:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*((*(_self_))._field_d))._field_Lvalue=true;
}



inline void _20d4d038d_amper(_20d4ce25a_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type98) {
			_case_begin_212259696:;
			{
				jule::Ptr<_20d3958a2_StructLitExprModel> _322921_lit = (*((*(_self_))._field_d))._field_Model.cast_ptr<_20d3958a2_StructLitExprModel>(&__jule_any_type98);;
				_20d4d80cc_makeStructLitAlloc(&((*(_self_))._field_d), &(_322921_lit));
			}
		}
		else {
			_case_begin_212256b9e:;
			{
				{
					
					if (_20d50a41d_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_21225674d:;
						{
							(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(jule::new_ptr<_20d4ee401_Ptr>(_20d4ee401_Ptr{._field_Elem=(*((*(_self_))._field_d))._field_Kind}), 26)});
							(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_20d394ecd_UnaryExprModel>(_20d394ecd_UnaryExprModel{._field_Expr=jule::new_ptr<_20d087165_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type72);
						}
					}
					else {
						_case_begin_2122571cc:;
						{
							(*(_self_))._field_d=nullptr;
							return;;
						}
					}
					_match_end_212257111:;
				};
			}
		}
		_match_end_212256b49:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
}



inline void _20d4d058b_typeDecl(_20d4ce25a_unaryEval* _self_) {
	_20d5013e2_typeChecker _325317_tc = _20d5013e2_typeChecker{._field_s=(*((*(_self_))._field_e))._field_s, ._field_rootLookup=(*((*(_self_))._field_e))._field_lookup, ._field_lookup=(*((*(_self_))._field_e))._field_lookup, ._field_errorToken=(*((*(_self_))._field_u))._field_Op, };;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_21225b16a:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(_20d5067d2_buildPtrFromType(&_325317_tc, &((*((*(_self_))._field_d))._field_Kind)), 26)});
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_21225e5d0:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(_20d506150_buildSptrFromType(&_325317_tc, &((*((*(_self_))._field_d))._field_Kind)), 21)});
			}
		}
		else {
			_case_begin_21225c90d:;
			{
				_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_u))._field_Op))._field_Kind, &__jule_any_type4),jule::Any(_20d4de655_Str((*((*(_self_))._field_d))._field_Kind.ptr()), &__jule_any_type4)}));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_21225c8a8:;
	};
	(*((*(_self_))._field_d))._field_Decl=true;
}



inline void _20d4d0789_evalData(_20d4ce25a_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_212262270:;
			{
				jule::Ptr<_20d4de28c_TypeKind> _327621_prefix = (*((*(_self_))._field_e))._field_prefix;;
				(*((*(_self_))._field_e))._field_prefix=nullptr;
				(*(_self_))._field_d=_20d4cd611_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
				(*((*(_self_))._field_e))._field_prefix=_327621_prefix;
			}
		}
		else {
			_case_begin_212261d85:;
			{
				(*(_self_))._field_d=_20d4cd611_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
			}
		}
		_match_end_212261d0d:;
	};
}



inline jule::Ptr<_20d087165_Data> _20d4d0aca_eval(_20d4ce25a_unaryEval* _self_, jule::Ptr<_20d372d8a_UnaryExpr> _328527_u) {
	(*(_self_))._field_u=_328527_u;
	_20d4d0789_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*((*(_self_))._field_d))._field_Decl) {
		_20d4d058b_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_20d4de28c_TypeKind> _329613_kind = (*((*(_self_))._field_d))._field_Kind;;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_212266b6a:;
			{
				_20d4ce898_minus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_21226686d:;
			{
				_20d4cea96_plus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_2122668d4:;
			{
				_20d4cec94_caret(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_21226694a:;
			{
				_20d4cee92_excl(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_2122669b1:;
			{
				_20d4d0190_star(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_212266ebc:;
			{
				_20d4d038d_amper(_self_);
			}
		}
		else {
			_case_begin_212266807:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_2122667a2:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_212267033:;
			{
				_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_u))._field_Op))._field_Kind, &__jule_any_type4),jule::Any(_20d4de655_Str(_329613_kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		else if (_20d087a39_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_212268793:;
			{
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Constant, &__jule_any_type19);
			}
		}
		_match_end_21226873d:;
	};
	return (*(_self_))._field_d;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d4ce25a_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _20d4d11e6_binaryEval static__20d4d17ce_newPlain(jule::Ptr<_20d088d59_Eval> _333328_e) {
	return _20d4d11e6_binaryEval{._field_e=_333328_e, };;
}



inline _20d4d11e6_binaryEval static__20d4d1b20_new(jule::Ptr<_20d088d59_Eval> _333923_e, jule::Ptr<_20d3510bb_Token> _333937_op) {
	return _20d4d11e6_binaryEval{._field_e=_333923_e, ._field_op=_333937_op};;
}



inline jule::Bool _20d4d1da6_checkTypeCompatibility(_20d4d11e6_binaryEval* _self_) {
	return _20d4419e7_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*((*(_self_))._field_l))._field_Kind), &((*((*(_self_))._field_r))._field_Kind), &((*(_self_))._field_op));;
}



inline jule::Bool _20d4d213c_checkStructCommonOperatorCompatibility(_20d4d11e6_binaryEval* _self_) {
	jule::Ptr<_20d3a5a49_FnIns> _335317_overload = nullptr;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_21226d6cc:;
			{
				_335317_overload=(*(_20d4e3208_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_212270228:;
			{
				_335317_overload=(*(_20d4e3208_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_21227028e:;
			{
				_335317_overload=(*(_20d4e3208_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Add;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_21226dc0a:;
			{
				_335317_overload=(*(_20d4e3208_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_21226dc71:;
			{
				_335317_overload=(*(_20d4e3208_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Div;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_21226dcd7:;
			{
				_335317_overload=(*(_20d4e3208_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_21226dd4d:;
			{
				_335317_overload=(*(_20d4e3208_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_21227037c:;
			{
				_335317_overload=(*(_20d4e3208_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_2122703e3:;
			{
				_335317_overload=(*(_20d4e3208_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_212270459:;
			{
				_335317_overload=(*(_20d4e3208_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_21226db94:;
			{
				_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_20d4de655_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return false;;
			}
		}
		_match_end_21226db3e:;
	};
	if ((_335317_overload == nullptr)) {
		_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_20d4de655_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
		return false;;
	};
	jule::Ptr<_20d3a4a9d_ParamIns> _338517_p = (*(_335317_overload))._field_Params[1LL];;
	return _20d441541_checkAssignType((*((*(_self_))._field_e))._field_s, (*((*(_338517_p))._field_Decl))._field_Reference, &((*(_338517_p))._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op);;
}



inline jule::Ptr<_20d087165_Data> _20d4d23c3_evalComptimeTypeInfo(_20d4d11e6_binaryEval* _self_) {
	jule::Ptr<_20d3cbb5d_comptimeTypeInfo> _339017_r = _20d4e554b_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((_339017_r == nullptr)) {
		_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("comptimeTypeInfo", 16), &__jule_any_type4),jule::Any(_20d4de655_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20d3cbb5d_comptimeTypeInfo> _339517_l = _20d4e554b_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_21227d368:;
			{
				jule::Ptr<_20b0655eb_Const> _339821_constant = static__20b0660be_NewBool(_20d4de996_Equal((*(_339517_l))._field_base, (*(_339017_r))._field_base));;
				return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562d5a_primBool, ._field_Model=jule::Any(_339821_constant, &__jule_any_type19), ._field_Constant=_339821_constant});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_21227ec2c:;
			{
				jule::Ptr<_20b0655eb_Const> _340521_constant = static__20b0660be_NewBool((!(_20d4de996_Equal((*(_339517_l))._field_base, (*(_339017_r))._field_base))));;
				return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562d5a_primBool, ._field_Model=jule::Any(_340521_constant, &__jule_any_type19), ._field_Constant=_340521_constant});;
			}
		}
		else {
			_case_begin_21227d6ba:;
			{
				_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_20d4de655_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_21227d665:;
	};
}



inline jule::Ptr<_20d087165_Data> _20d4d2659_evalNil(_20d4d11e6_binaryEval* _self_) {
	if ((!(_20d4e114b_NilCompatible((*((*(_self_))._field_r))._field_Kind.ptr())))) {
		_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("nil", 3), &__jule_any_type4),jule::Any(_20d4de655_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_212282856:;
			{
				return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562d5a_primBool, });;
			}
		}
		else {
			_case_begin_212283e84:;
			{
				_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str("nil", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_212283e2e:;
	};
}



inline jule::Ptr<_20d087165_Data> _20d4d28e0_evalEnum(_20d4d11e6_binaryEval* _self_) {
	jule::Ptr<_20d3b85d9_Enum> _343617_enm = _20d4e2438_Enum((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_21228641a:;
			{
				jule::Ptr<_20d4de28c_TypeKind> _344021_rkind = (*((*(_self_))._field_r))._field_Kind;;
				if ((_20d4e2438_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
					_344021_rkind=(*((*(_20d4e2438_Enum((*((*(_self_))._field_r))._field_Kind.ptr())))._field_Kind))._field_Kind;
				};
				if ((!(_20d4419e7_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*((*(_343617_enm))._field_Kind))._field_Kind), &(_344021_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562d5a_primBool, });;
			}
		}
		_match_end_2122863b5:;
	};
	if (((_20d4e2438_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) == nullptr) || (_343617_enm != _20d4e2438_Enum((*((*(_self_))._field_r))._field_Kind.ptr())))) {
		_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any((*(_343617_enm))._field_Ident, &__jule_any_type4),jule::Any(_20d4de655_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_21228bc28:;
			{
				if ((!(_20b065123_IsNum(_20d4de655_Str((*((*(_343617_enm))._field_Kind))._field_Kind.ptr()))))) {
					_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*(_343617_enm))._field_Ident, &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562d5a_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_21228cab4:;
			{
				jule::Ptr<_20d3b7a6c_EnumItem> _347017_first = (*(_343617_enm))._field_Items[0LL];;
				{
					
					if (_20b0695bc_IsI64((*((*((*(_347017_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_212290e19:;
						{
							if ((_20b066ec1_ReadI64((*((*((*(_347017_first))._field_Value))._field_Data))._field_Constant.ptr()) == 0LL)) {
								goto _julec_label_21229500b;
							};
							goto _julec_label_212293735;
						}
					}
					else if (_20b069853_IsU64((*((*((*(_347017_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_212290e91:;
						{
							if ((_20b067257_ReadU64((*((*((*(_347017_first))._field_Value))._field_Data))._field_Constant.ptr()) == 0LLU)) {
								goto _julec_label_21229500b;
							};
							goto _julec_label_212293735;
						}
					}
					else {
						_case_begin_212290a2e:;
						{
							jule::panic(jule::Str("unimplemented enum type, this panic call should be unreachable", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:3483:17"));;
						}
					}
					_match_end_2122909b8:;
				};
				_julec_label_212293735:;
				_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("the @ enum type is not supports @ operator", 42), jule::Slice<jule::Any>::make({jule::Any((*(_343617_enm))._field_Ident, &__jule_any_type4),jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				_20d08971c_pushSuggestion((*(_self_))._field_e.ptr(), jule::Str("define default enum field (the first one is default) with zero value to use & operator", 86), jule::Slice<jule::Any>());
				_julec_label_21229500b:;
				goto _case_begin_21228cb2a;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_21228cb2a:;
			{
				if (((_20d4e1b85_Prim((*((*(_343617_enm))._field_Kind))._field_Kind.ptr()) == nullptr) || (!(_20b064a18_IsInt(_20d4e744e_Str(_20d4e1b85_Prim((*((*(_343617_enm))._field_Kind))._field_Kind.ptr()).ptr())))))) {
					_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*(_343617_enm))._field_Ident, &__jule_any_type4)}));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_21228b8b5:;
			{
				_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*(_343617_enm))._field_Ident, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_21228b860:;
	};
}



inline jule::Ptr<_20d087165_Data> _20d4d2b76_evalTypeEnum(_20d4d11e6_binaryEval* _self_) {
	jule::Ptr<_20d3b9ce4_TypeEnum> _350317_enm = _20d4e26be_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr());;
	if ((!(_20d4d1da6_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_21229a75e:;
			{
				return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562d5a_primBool, });;
			}
		}
		else {
			_case_begin_212299ad2:;
			{
				_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_20d3ba135_Str(_350317_enm.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_21229a396:;
	};
}



inline jule::Ptr<_20d087165_Data> _20d4d2e0c_evalSptr(_20d4d11e6_binaryEval* _self_) {
	if ((!(_20d4d1da6_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_21229b8d6:;
			{
				return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562d5a_primBool, });;
			}
		}
		else {
			_case_begin_21229c662:;
			{
				_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_20d4de655_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_21229c60c:;
	};
}



inline jule::Ptr<_20d087165_Data> _20d4d3193_evalPtr(_20d4d11e6_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_21229ea3d:;
			{
				if ((!(_20d4d1da6_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562d5a_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_2122a0c5e:;
			{
				if ((_20d4e21a2_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) == nullptr)) {
					({
						jule::Ptr<_20d087165_Data> ___jule_assign_arg = (*(_self_))._field_r;
						jule::Ptr<_20d087165_Data> _1___jule_assign_arg = (*(_self_))._field_l;
						(*(_self_))._field_l = ___jule_assign_arg;
						(*(_self_))._field_r = _1___jule_assign_arg;
					});
				};
				if (_20d4eee3a_IsUnsafe(_20d4e21a2_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()).ptr())) {
					_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_20d4de655_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				};
				if ((!(_20d4d92dc_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is incompatible to use for pointer arithmetic", 52), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_21229e0ae:;
			{
				_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_20d4de655_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_21229e037:;
	};
}



inline jule::Ptr<_20d087165_Data> _20d4d3429_evalArr(_20d4d11e6_binaryEval* _self_) {
	if ((!(_20d4d1da6_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_212298d9a:;
			{
				return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562d5a_primBool, });;
			}
		}
		else {
			_case_begin_2122a6b66:;
			{
				_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_20d4de655_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_2122a6b11:;
	};
}



inline jule::Ptr<_20d087165_Data> _20d4d36b0_evalSlc(_20d4d11e6_binaryEval* _self_) {
	if ((!(_20d4d1da6_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_2122a83a4:;
			{
				return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562d5a_primBool, });;
			}
		}
		else {
			_case_begin_2122a9130:;
			{
				_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_20d4de655_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_2122a90ca:;
	};
}



inline jule::Ptr<_20d087165_Data> _20d4d3946_evalStruct(_20d4d11e6_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_2122ab20e:;
			{
				if (((*(_20d4e3208_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Gt == nullptr)) {
					_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_20d4de655_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562d5a_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_2122ab275:;
			{
				if (((*(_20d4e3208_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_GtEq == nullptr)) {
					_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_20d4de655_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562d5a_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_2122ab2db:;
			{
				if (((*(_20d4e3208_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Lt == nullptr)) {
					_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_20d4de655_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562d5a_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_2122ab363:;
			{
				if (((*(_20d4e3208_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_LtEq == nullptr)) {
					_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_20d4de655_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562d5a_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_2122ab3da:;
			{
				if ((!(_20d4d1da6_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562d5a_primBool, });;
			}
		}
		_match_end_2122aaa05:;
	};
	if ((!(_20d4d213c_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_20d087165_Data> _20d4d3bcc_evalTrait(_20d4d11e6_binaryEval* _self_) {
	if ((!(_20d4d1da6_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_2122b5dc8:;
			{
				return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562d5a_primBool, });;
			}
		}
		else {
			_case_begin_2122b6703:;
			{
				_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_20d4de655_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_2122b669d:;
	};
}



inline jule::Ptr<_20d087165_Data> _20d4d3e63_evalAny(_20d4d11e6_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_2122bd100:;
			{
				return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562d5a_primBool, });;
			}
		}
		else {
			_case_begin_2122bceac:;
			{
				_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str("any", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_2122bce35:;
	};
}



inline jule::Ptr<_20d087165_Data> _20d4d41e9_evalBool(_20d4d11e6_binaryEval* _self_) {
	if ((!(_20d4d1da6_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(54LLU) || _match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_2122be882:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_2122c060d:;
			{
				_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_20d4de655_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_2122c05a8:;
	};
}



inline jule::Ptr<_20d087165_Data> _20d4d4480_evalStr(_20d4d11e6_binaryEval* _self_) {
	jule::Str _370217_rk = _20d4de655_Str((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((!_370217_rk.equal("str", 3))) {
		_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type4),jule::Any(_370217_rk, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_2122c437b:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_2122c515c:;
			{
				return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562d5a_primBool, });;
			}
		}
		else {
			_case_begin_2122c3cb5:;
			{
				_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str("str", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_2122c3eb3:;
	};
}



inline void _20d4d467d_setTypeToGreater(_20d4d11e6_binaryEval* _self_) {
	jule::Ptr<_20d4e710d_Prim> _372713_lp = _20d4e1b85_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	jule::Ptr<_20d4e710d_Prim> _372813_rp = _20d4e1b85_Prim((*((*(_self_))._field_r))._field_Kind.ptr());;
	if (_20d087a39_IsConst((*(_self_))._field_l.ptr())) {
		if ((!(_20d087a39_IsConst((*(_self_))._field_r.ptr())))) {
			(*((*(_self_))._field_l))._field_Kind=(*((*(_self_))._field_r))._field_Kind;
			(*((*((*(_self_))._field_l))._field_Constant))._field_Kind=(*(_372813_rp))._field_Kind;
			return;;
		};
		goto _julec_label_2122c989d;
	};
	if (_20d087a39_IsConst((*(_self_))._field_r.ptr())) {
		(*((*((*(_self_))._field_r))._field_Constant))._field_Kind=(*(_372713_lp))._field_Kind;
		return;;
	};
	_julec_label_2122c989d:;
	if (((*((*(_self_))._field_l))._field_untyped && (!((*((*(_self_))._field_r))._field_untyped)))) {
		(*((*(_self_))._field_l))._field_Kind=(*((*(_self_))._field_r))._field_Kind;
		if (_20d087a39_IsConst((*(_self_))._field_l.ptr())) {
			(*((*((*(_self_))._field_l))._field_Constant))._field_Kind=(*(_372813_rp))._field_Kind;
		};
		(*((*(_self_))._field_l))._field_untyped=false;
		return;;
	} else if (((!((*((*(_self_))._field_l))._field_untyped)) && (*((*(_self_))._field_r))._field_untyped)) {
		return;;
	};
	if (_20b0633da_IsGreater((*(_372813_rp))._field_Kind, (*(_372713_lp))._field_Kind)) {
		(*((*(_self_))._field_l))._field_Kind=(*((*(_self_))._field_r))._field_Kind;
		if (_20d087a39_IsConst((*(_self_))._field_l.ptr())) {
			(*((*((*(_self_))._field_l))._field_Constant))._field_Kind=(*(_372813_rp))._field_Kind;
		};
	};
}



inline void _20d4d4936_checkModData(_20d4d11e6_binaryEval* _self_, jule::Ptr<_20d087165_Data>* _376036_d) {
	if ((!(_20d087a39_IsConst((*(_376036_d)).ptr())))) {
		if (((_20d4e1b85_Prim((*((*(_376036_d))))._field_Kind.ptr()) == nullptr) || (!(_20b064a18_IsInt((*(_20d4e1b85_Prim((*((*(_376036_d))))._field_Kind.ptr())))._field_Kind))))) {
			_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_20d06d1b2_sigAssignable(jule::Str("i64", 3), _376036_d)) {
			_case_begin_2122d260e:;
			{
				_20b068566_SetI64((*((*(_376036_d))))._field_Constant.ptr(), static_cast<jule::I64>(_20b067c91_AsI64((*((*(_376036_d))))._field_Constant.ptr())));
			}
		}
		else if (_20d06d57a_unsigAssignable(jule::Str("u64", 3), _376036_d)) {
			_case_begin_2122d2686:;
			{
				_20b06881e_SetU64((*((*(_376036_d))))._field_Constant.ptr(), static_cast<jule::U64>(_20b068027_AsU64((*((*(_376036_d))))._field_Constant.ptr())));
			}
		}
		else {
			_case_begin_2122d228a:;
			{
				_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
			}
		}
		_match_end_2122d2235:;
	};
}



inline void _20d4d4b34_mod(_20d4d11e6_binaryEval* _self_) {
	_20d4d4936_checkModData(_self_, &((*(_self_))._field_l));
	_20d4d4936_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _20d4d5030_numbersAreCompatibile(_20d4d11e6_binaryEval* _self_, jule::Str* _378237_lk, jule::Str* _378247_rk) {
	if ((!(_20b065123_IsNum((*(_378247_rk)))))) {
		return false;;
	};
	if ((_20d087a39_IsConst((*(_self_))._field_l.ptr()) && (*((*(_self_))._field_l))._field_untyped)) {
		return true;;
	};
	if ((*(_378237_lk)).equal("f32", 3)) {
		if ((_20d087a39_IsConst((*(_self_))._field_r.ptr()) && (*((*(_self_))._field_r))._field_untyped)) {
			return true;;
		};
		return (*(_378247_rk)).equal("f32", 3);;
	};
	if ((*(_378237_lk)).equal("f64", 3)) {
		if ((_20d087a39_IsConst((*(_self_))._field_r.ptr()) && (*((*(_self_))._field_r))._field_untyped)) {
			return true;;
		};
		return (*(_378247_rk)).equal("f64", 3);;
	};
	if ((_20d087a39_IsConst((*(_self_))._field_r.ptr()) && (*((*(_self_))._field_r))._field_untyped)) {
		return true;;
	};
	return ((*(_378237_lk)) == (*(_378247_rk)));;
}



inline jule::Ptr<_20d087165_Data> _20d4d52b6_evalFloat(_20d4d11e6_binaryEval* _self_) {
	jule::Str _380813_lk = (*(_20d4e1b85_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _380913_rk = (*(_20d4e1b85_Prim((*((*(_self_))._field_r))._field_Kind.ptr())))._field_Kind;;
	if ((!(_20d4d5030_numbersAreCompatibile(_self_, &(_380813_lk), &(_380913_rk))))) {
		_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_380813_lk, &__jule_any_type4),jule::Any(_380913_rk, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_2122dbc78:;
			{
				if (((!(_20d087a39_IsConst((*(_self_))._field_l.ptr()))) || (!(_20d06d8ee_intAssignable(jule::Str("i64", 3), &((*(_self_))._field_l)))))) {
					_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_380813_lk, &__jule_any_type4),jule::Any(_380913_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				if (((!(_20d087a39_IsConst((*(_self_))._field_r.ptr()))) || (!(_20d06d8ee_intAssignable(jule::Str("u64", 3), &((*(_self_))._field_r)))))) {
					_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_380813_lk, &__jule_any_type4),jule::Any(_380913_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				_20b068566_SetI64((*((*(_self_))._field_l))._field_Constant.ptr(), static_cast<jule::I64>(_20b067c91_AsI64((*((*(_self_))._field_l))._field_Constant.ptr())));
				_20b06881e_SetU64((*((*(_self_))._field_r))._field_Constant.ptr(), static_cast<jule::U64>(_20b068027_AsU64((*((*(_self_))._field_r))._field_Constant.ptr())));
				if ((!(_20d4d8a8e_isOkForShifting(&((*(_self_))._field_r))))) {
					_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_2122dbc23:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_2122dc31c:;
			{
				_20d4d467d_setTypeToGreater(_self_);
				return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562d5a_primBool, });;
			}
		}
		_match_end_2122ddb9d:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_2122daeb9:;
			{
				_20d4d467d_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_2122e46a9:;
			{
				if ((!(_20b064a18_IsInt(_380913_rk)))) {
					_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_380813_lk, &__jule_any_type4),jule::Any(_380913_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				_20d4d4b34_mod(_self_);
				_20d4d467d_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_2122e3004:;
			{
				_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for floating-point type(s)", 52), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_2122e39e9:;
	};
}



inline jule::Ptr<_20d087165_Data> _20d4d554c_evalInt(_20d4d11e6_binaryEval* _self_) {
	jule::Str _387213_lk = (*(_20d4e1b85_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _387313_rk = (*(_20d4e1b85_Prim((*((*(_self_))._field_r))._field_Kind.ptr())))._field_Kind;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_2122e7e0a:;
			{
				if (((!(_20b064a18_IsInt(_387213_lk))) || (!(_20b064a18_IsInt(_387313_rk))))) {
					_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_387213_lk, &__jule_any_type4),jule::Any(_387313_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				if ((!(_20d4d8a8e_isOkForShifting(&((*(_self_))._field_r))))) {
					_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_2122e827e:;
	};
	if ((!(_20d4d5030_numbersAreCompatibile(_self_, &(_387213_lk), &(_387313_rk))))) {
		_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_387213_lk, &__jule_any_type4),jule::Any(_387313_rk, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_2122eb529:;
			{
				return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562d5a_primBool, });;
			}
		}
		_match_end_2122eb4c4:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(65LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_2122e83c2:;
			{
				_20d4d467d_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_2122ed6a2:;
			{
				_20d4d4b34_mod(_self_);
				_20d4d467d_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_2122ec728:;
			{
				_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for integer type(s)", 45), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_2122ec6c3:;
	};
}



inline jule::Ptr<_20d087165_Data> _20d4d57d3_evalPrim(_20d4d11e6_binaryEval* _self_) {
	jule::Ptr<_20d4e710d_Prim> _392913_prim = _20d4e1b85_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		
		if (_20d4ea30e_IsBool(_392913_prim.ptr())) {
			_case_begin_212300b16:;
			{
				return _20d4d41e9_evalBool(_self_);;
			}
		}
		else if (_20d4ea595_IsStr(_392913_prim.ptr())) {
			_case_begin_212300b8d:;
			{
				return _20d4d4480_evalStr(_self_);;
			}
		}
		_match_end_212300a6c:;
	};
	if ((_20d4e1b85_Prim((*((*(_self_))._field_r))._field_Kind.ptr()) == nullptr)) {
		_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_20d4e744e_Str(_392913_prim.ptr()), &__jule_any_type4),jule::Any(_20d4de655_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		
		if (_20b064d59_IsFloat((*(_392913_prim))._field_Kind)) {
			_case_begin_212303520:;
			{
				return _20d4d52b6_evalFloat(_self_);;
			}
		}
		else if (_20b064a18_IsInt((*(_392913_prim))._field_Kind)) {
			_case_begin_212303597:;
			{
				return _20d4d554c_evalInt(_self_);;
			}
		}
		else {
			_case_begin_212303476:;
			{
				return nullptr;;
			}
		}
		_match_end_212300c48:;
	};
}



inline void _20d4d59d1_checkSpecialCases(_20d4d11e6_binaryEval* _self_) {
	if (((!(_20d4e0898_Comparable((*((*(_self_))._field_l))._field_Kind.ptr()))) && (!(_20d4e037b_IsNil((*((*(_self_))._field_r))._field_Kind.ptr()))))) {
		_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
	} else if (((!(_20d4e0898_Comparable((*((*(_self_))._field_r))._field_Kind.ptr()))) && (!(_20d4e037b_IsNil((*((*(_self_))._field_l))._field_Kind.ptr()))))) {
		_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
	};
}



inline jule::Ptr<_20d087165_Data> _20d4d5c67_evalOp(_20d4d11e6_binaryEval* _self_) {
	_20d4d59d1_checkSpecialCases(_self_);
	{
		
		if (_20d4e0612_Void((*((*(_self_))._field_l))._field_Kind.ptr())) {
			_case_begin_2123089cb:;
			{
				_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str("void", 4), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		else if ((_20d4e554b_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_21230839e:;
			{
				({
					jule::Ptr<_20d087165_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_20d087165_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_212308b74;
			}
		}
		else if ((_20d4e554b_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_212308b74:;
			{
				return _20d4d23c3_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_20d4e1b85_Prim((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr) && _20d4ea82b_IsAny(_20d4e1b85_Prim((*((*(_self_))._field_r))._field_Kind.ptr()).ptr()))) {
			_case_begin_212309d95:;
			{
				({
					jule::Ptr<_20d087165_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_20d087165_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_212309e0b;
			}
		}
		else if (_20d4e037b_IsNil((*((*(_self_))._field_r))._field_Kind.ptr())) {
			_case_begin_212309e0b:;
			{
				({
					jule::Ptr<_20d087165_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_20d087165_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_212309ee9;
			}
		}
		else if (_20d4e037b_IsNil((*((*(_self_))._field_l))._field_Kind.ptr())) {
			_case_begin_212309ee9:;
			{
				return _20d4d2659_evalNil(_self_);;
			}
		}
		else if (((_20d4e1b85_Prim((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr) && _20d4ea82b_IsAny(_20d4e1b85_Prim((*((*(_self_))._field_l))._field_Kind.ptr()).ptr()))) {
			_case_begin_21230a060:;
			{
				return _20d4d3e63_evalAny(_self_);;
			}
		}
		else if ((_20d4e26be_TypeEnum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_21230a0c6:;
			{
				({
					jule::Ptr<_20d087165_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_20d087165_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_21230a13c;
			}
		}
		else if ((_20d4e26be_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_21230a13c:;
			{
				return _20d4d2b76_evalTypeEnum(_self_);;
			}
		}
		else if ((_20d4e2438_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_21230a1a3:;
			{
				({
					jule::Ptr<_20d087165_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_20d087165_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_21230a219;
			}
		}
		else if ((_20d4e2438_Enum((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_21230a219:;
			{
				return _20d4d28e0_evalEnum(_self_);;
			}
		}
		else if ((_20d4e1e1b_Sptr((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_21230a291:;
			{
				({
					jule::Ptr<_20d087165_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_20d087165_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_21230a318;
			}
		}
		else if ((_20d4e1e1b_Sptr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_21230a318:;
			{
				return _20d4d2e0c_evalSptr(_self_);;
			}
		}
		else if ((_20d4e21a2_Ptr((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_21230a390:;
			{
				({
					jule::Ptr<_20d087165_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_20d087165_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_21230a417;
			}
		}
		else if ((_20d4e21a2_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_21230a417:;
			{
				return _20d4d3193_evalPtr(_self_);;
			}
		}
		else if ((_20d4e2955_Arr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_21230a48e:;
			{
				return _20d4d3429_evalArr(_self_);;
			}
		}
		else if ((_20d4e2bdb_Slc((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_21230a516:;
			{
				return _20d4d36b0_evalSlc(_self_);;
			}
		}
		else if ((_20d4e348e_Trait((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_21230a58d:;
			{
				({
					jule::Ptr<_20d087165_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_20d087165_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_21230a615;
			}
		}
		else if ((_20d4e348e_Trait((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_21230a615:;
			{
				return _20d4d3bcc_evalTrait(_self_);;
			}
		}
		else if ((_20d4e3208_Struct((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_21230a68c:;
			{
				return _20d4d3946_evalStruct(_self_);;
			}
		}
		else if ((_20d4e1b85_Prim((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_21230a714:;
			{
				return _20d4d57d3_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_2123087cd:;
			{
				_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_20d4de655_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_212308767:;
	};
}



inline void _20d4d6020_evalConst(_20d4d11e6_binaryEval* _self_, jule::Ptr<_20d087165_Data>* _402033_d) {
	{
		
		if (((*(_402033_d)) == nullptr) || ((*((*(_self_))._field_l))._field_Model == nullptr) || ((*((*(_self_))._field_r))._field_Model == nullptr)) {
			_case_begin_21231d44c:;
			{
				return;;
			}
		}
		else if ((!(_20d087a39_IsConst((*(_self_))._field_l.ptr()))) || (!(_20d087a39_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_21231d6a0:;
			{
				(*((*(_402033_d))))._field_Constant=nullptr;
				return;;
			}
		}
		_match_end_21231d370:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_212320839:;
			{
				(*((*(_402033_d))))._field_Constant=static__20b0660be_NewBool(_20b06b1a1_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_2123208a0:;
			{
				(*((*(_402033_d))))._field_Constant=static__20b0660be_NewBool((!(_20b06b1a1_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_212320916:;
			{
				(*((*(_402033_d))))._field_Constant=static__20b0660be_NewBool(_20b06ad60_Or((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_21232097c:;
			{
				(*((*(_402033_d))))._field_Constant=static__20b0660be_NewBool(_20b06aa1e_And((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_2123209e3:;
			{
				(*((*(_402033_d))))._field_Constant=static__20b0660be_NewBool(_20b06bb74_Gt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_212320a59:;
			{
				(*((*(_402033_d))))._field_Constant=static__20b0660be_NewBool(_20b06b4e2_Lt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_212320ad1:;
			{
				(*((*(_402033_d))))._field_Constant=static__20b0660be_NewBool(_20b06beb5_GtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_212320b58:;
			{
				(*((*(_402033_d))))._field_Constant=static__20b0660be_NewBool(_20b06b833_LtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_212320bd0:;
			{
				_20b06c306_Add((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_402033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_212320c57:;
			{
				_20b06c647_Sub((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_402033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_212320cce:;
			{
				_20b06c988_Mul((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_402033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_212320d56:;
			{
				jule::Bool _405917_ok = _20b06ccc9_Div((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_405917_ok)) && (_20b0682ad_AsF64((*((*(_self_))._field_r))._field_Constant.ptr()) == 0LL))) {
					_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_402033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
				jule::Ptr<_20d4e710d_Prim> _406421_prim = _20d4e1b85_Prim((*((*(_402033_d))))._field_Kind.ptr());;
				{
					
					if (_20b064441_IsSigInt((*(_406421_prim))._field_Kind)) {
						_case_begin_212331817:;
						{
							_20b068566_SetI64((*((*(_402033_d))))._field_Constant.ptr(), static_cast<jule::I64>(_20b067c91_AsI64((*((*(_402033_d))))._field_Constant.ptr())));
						}
					}
					else if (_20b06474e_IsUnsigInt((*(_406421_prim))._field_Kind)) {
						_case_begin_21233188e:;
						{
							_20b06881e_SetU64((*((*(_402033_d))))._field_Constant.ptr(), static_cast<jule::U64>(_20b068027_AsU64((*((*(_402033_d))))._field_Constant.ptr())));
						}
					}
					_match_end_21233176d:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_212320dcd:;
			{
				jule::Bool _407217_ok = _20b06d11a_Mod((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_407217_ok)) && (_20b0682ad_AsF64((*((*(_self_))._field_r))._field_Constant.ptr()) == 0LL))) {
					_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_402033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_212320e55:;
			{
				_20b06d79c_BitwiseOr((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_402033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_212320ecc:;
			{
				_20b06d45b_BitwiseAnd((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_402033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_212321054:;
			{
				_20b06dadd_Xor((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_402033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_2123210cb:;
			{
				_20b06de2e_Lshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_402033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_212321153:;
			{
				_20b06e270_Rshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_402033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		_match_end_2123200ec:;
	};
	(*((*(_402033_d))))._field_Model=jule::Any((*((*(_402033_d))))._field_Constant, &__jule_any_type19);
	_20d4da178_applyCastModelByEnum(_402033_d, _20d4e2438_Enum((*((*(_402033_d))))._field_Kind.ptr()));
}



inline void _20d4d62c8_checkData(_20d4d11e6_binaryEval* _self_, jule::Ptr<_20d087165_Data>* _409733_d) {
	jule::Ptr<_20d3a5a49_FnIns> _409813_f = _20d4e2e72_Fn((*((*(_409733_d))))._field_Kind.ptr());;
	if ((((_409813_f != nullptr) && ((*(_409813_f))._field_Decl != nullptr)) && _20d3a334e_IsMethod((*(_409813_f))._field_Decl.ptr()))) {
		_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("invalid expression used for binary operation", 44), jule::Slice<jule::Any>());
	};
}



inline void _20d4d64c6_checkDatas(_20d4d11e6_binaryEval* _self_) {
	_20d4d62c8_checkData(_self_, &((*(_self_))._field_l));
	_20d4d62c8_checkData(_self_, &((*(_self_))._field_r));
}



inline void _20d4d677e_setModel(_20d4d11e6_binaryEval* _self_, jule::Ptr<_20d087165_Data>* _410932_d) {
	if (_20d087a39_IsConst((*(_410932_d)).ptr())) {
		if (((_20d087a39_IsConst((*(_self_))._field_l.ptr()) && _20d087a39_IsConst((*(_self_))._field_r.ptr())) || (((*((*(_self_))._field_l))._field_Model == nullptr) && ((*((*(_self_))._field_r))._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_20d087165_Data> _411818_l;;
	jule::Ptr<_20d087165_Data> _411825_r;;
	({
		jule::Ptr<_20d087165_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_20d087165_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_411818_l = ___jule_assign_arg;
		_411825_r = _1___jule_assign_arg;
	});
	if ((!(_20d087d7a_GoodOperand(_411818_l.ptr(), &(_411825_r))))) {
		({
			jule::Ptr<_20d087165_Data> ___jule_assign_arg = _411825_r;
			jule::Ptr<_20d087165_Data> _1___jule_assign_arg = _411818_l;
			_411818_l = ___jule_assign_arg;
			_411825_r = _1___jule_assign_arg;
		});
	};
	(*((*(_410932_d))))._field_Model=jule::Any(jule::new_ptr<_20d394b04_BinopExprModel>(_20d394b04_BinopExprModel{._field_Left=jule::new_ptr<_20d394609_OperandExprModel>(_20d394609_OperandExprModel{._field_Kind=(*(_411818_l))._field_Kind, ._field_Model=(*(_411818_l))._field_Model}), ._field_Right=jule::new_ptr<_20d394609_OperandExprModel>(_20d394609_OperandExprModel{._field_Kind=(*(_411825_r))._field_Kind, ._field_Model=(*(_411825_r))._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type112);
}



inline void _20d4d6a37_postEval(_20d4d11e6_binaryEval* _self_, jule::Ptr<_20d087165_Data>* _413632_d) {
	(*((*(_413632_d))))._field_Lvalue=false;
	_20d4d677e_setModel(_self_, _413632_d);
}



inline jule::Ptr<_20d087165_Data> _20d4d6e33_solveExplicit(_20d4d11e6_binaryEval* _self_, jule::Ptr<_20d087165_Data>* _414137_l, jule::Ptr<_20d087165_Data>* _414152_r) {
	({
		jule::Ptr<_20d087165_Data> ___jule_assign_arg = (*(_414137_l));
		jule::Ptr<_20d087165_Data> _1___jule_assign_arg = (*(_414152_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_20d4d64c6_checkDatas(_self_);
	jule::Ptr<_20d087165_Data> _414617_d = _20d4d5c67_evalOp(_self_);;
	({
		jule::Ptr<_20d087165_Data> ___jule_assign_arg = (*(_414137_l));
		jule::Ptr<_20d087165_Data> _1___jule_assign_arg = (*(_414152_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_20d4d6020_evalConst(_self_, &(_414617_d));
	if ((_414617_d != nullptr)) {
		(*(_414617_d))._field_Mutable=true;
		_20d4d6a37_postEval(_self_, &(_414617_d));
	};
	return _414617_d;;
}



inline jule::Ptr<_20d087165_Data> _20d4d7274_eval(_20d4d11e6_binaryEval* _self_, jule::Ptr<_20d374397_BinopExpr>* _416128_op) {
	if (((*((*((*(_416128_op))))._field_Op))._field_Id == static_cast<jule::U64>(71LLU))) {
		_20d0893a9_pushErr((*(_self_))._field_e.ptr(), (*((*(_416128_op))))._field_Op, jule::Str("assignments not available for expressions", 41), jule::Slice<jule::Any>());
		_20d08971c_pushSuggestion((*(_self_))._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20d087165_Data> _416817_l = _20d4cd952_evalExpr1((*(_self_))._field_e, (*((*(_416128_op))))._field_Left);;
	if (((_416817_l == nullptr) || ((*(_416817_l))._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_20d4de28c_TypeKind> _417317_prefix = (*((*(_self_))._field_e))._field_prefix;;
	(*((*(_self_))._field_e))._field_prefix=(*(_416817_l))._field_Kind;
	__JULE_DEFER({
		(*((*(_self_))._field_e))._field_prefix=_417317_prefix;
	});;
	jule::Ptr<_20d087165_Data> _417617_r = _20d4cd952_evalExpr1((*(_self_))._field_e, (*((*(_416128_op))))._field_Right);;
	if (((_417617_r == nullptr) || ((*(_417617_r))._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*((*(_416128_op))))._field_Op;
	jule::Ptr<_20d087165_Data> _418317_d = _20d4d6e33_solveExplicit(_self_, &(_416817_l), &(_417617_r));;
	if ((((_418317_d != nullptr) && (*(_416817_l))._field_IsRune) && (*(_417617_r))._field_IsRune)) {
		(*(_418317_d))._field_IsRune=true;
	};
	return _418317_d;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d4d11e6_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d4dc8a6_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d4dd49a_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _20d4de655_Str(_20d4de28c_TypeKind* _self_) {
	if (_20d4e037b_IsNil(_self_)) {
		return jule::Str("nil", 3);;
	};
	_2240a0ad5_StrBuilder _7417_kind = static__2240a0e04_New(16LL);;
	if ((*(_self_))._field_Variadic) {
		_2240a989c_WriteStr(&_7417_kind, jule::Str("...", 3));
	};
	if (_20d4e00e5_Binded(_self_)) {
		_2240a989c_WriteStr(&_7417_kind, jule::Str("cpp.", 4));
		_2240a989c_WriteStr(&_7417_kind, (*(_self_))._field_BindIdent);
	} else {
		_2240a989c_WriteStr(&_7417_kind, _20d4ddcd6_Kind_mptr_data[((*(_self_))._field_Kind).type_offset]._20d4dd841_Str((*(_self_))._field_Kind));
	};
	return _2240aa194_Str(&_7417_kind);;
}



inline jule::Bool _20d4de996_Equal(jule::Ptr<_20d4de28c_TypeKind> _self_, jule::Ptr<_20d4de28c_TypeKind> _9021_other) {
	if (_20d4e037b_IsNil(_self_.ptr())) {
		return _20d4e037b_IsNil(_9021_other.ptr());;
	};
	if (_20d4e00e5_Binded(_self_.ptr())) {
		return (_20d4e00e5_Binded(_9021_other.ptr()) && ((*(_self_))._field_BindIdent == (*(_9021_other))._field_BindIdent));;
	};
	return _20d4ddcd6_Kind_mptr_data[((*(_self_))._field_Kind).type_offset]._20d4ddb82_Equal((*(_self_))._field_Kind, _9021_other);;
}



inline jule::Bool _20d4e00e5_Binded(_20d4de28c_TypeKind* _self_) {
	return ((*(_self_))._field_BindIdent.len() != 0LL);;
}



inline jule::Bool _20d4e037b_IsNil(_20d4de28c_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _20d4e0612_Void(_20d4de28c_TypeKind* _self_) {
	jule::Ptr<_20d4e710d_Prim> _11013_prim = _20d4e1b85_Prim(&(*(_self_)));;
	return ((_11013_prim != nullptr) && (*(_11013_prim))._field_Kind.equal("void", 4));;
}



inline jule::Bool _20d4e0898_Comparable(_20d4de28c_TypeKind* _self_) {
	{
		_20d4de28c_TypeKind* _11721__self = _self_;;
		if ((_20d4e3208_Struct(_11721__self) != nullptr)) {
			return (*(_20d4e3208_Struct(_11721__self)))._field_Comparable;;
		};
		return (((_20d4e3725_Map(_11721__self) == nullptr) && (_20d4e2bdb_Slc(_11721__self) == nullptr)) && (_20d4e2e72_Fn(_11721__self) == nullptr));;
	};
}



inline jule::Bool _20d4e0b2e_Mutable(_20d4de28c_TypeKind* _self_) {
	{
		_20d4de28c_TypeKind* _12821__self = _self_;;
		if ((_20d4e3208_Struct(_12821__self) != nullptr)) {
			return (*(_20d4e3208_Struct(_12821__self)))._field_Mutable;;
		};
		if ((_20d4e348e_Trait(_12821__self) != nullptr)) {
			return true;;
		};
		if ((_20d4e1b85_Prim(_12821__self) != nullptr)) {
			jule::Ptr<_20d4e710d_Prim> _13621_p = _20d4e1b85_Prim(_12821__self);;
			return _20d4ea82b_IsAny(_13621_p.ptr());;
		};
		if ((_20d4e2955_Arr(_12821__self) != nullptr)) {
			return _20d4e0b2e_Mutable((*(_20d4e2955_Arr(_12821__self)))._field_Elem.ptr());;
		};
		return (((_20d4e2bdb_Slc(_12821__self) != nullptr) || (_20d4e21a2_Ptr(_12821__self) != nullptr)) || (_20d4e1e1b_Sptr(_12821__self) != nullptr));;
	};
}



inline jule::Bool _20d4e0db5_Ordered(_20d4de28c_TypeKind* _self_) {
	{
		_20d4de28c_TypeKind* _15121__self = _self_;;
		jule::Ptr<_20d4e710d_Prim> _15217_prim = _20d4e1b85_Prim(_15121__self);;
		if ((_15217_prim != nullptr)) {
			return (_20b065123_IsNum((*(_15217_prim))._field_Kind) || _20d4ea595_IsStr(_15217_prim.ptr()));;
		};
		if ((_20d4e21a2_Ptr(_15121__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_20d39066b_StructIns> _15917_s = _20d4e3208_Struct(_15121__self);;
		if ((_15917_s != nullptr)) {
			return (((((*(_15917_s))._field_Operators._field_Gt != nullptr) && ((*(_15917_s))._field_Operators._field_GtEq != nullptr)) && ((*(_15917_s))._field_Operators._field_Lt != nullptr)) && ((*(_15917_s))._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_20d3b85d9_Enum> _16617_enm = _20d4e2438_Enum(_15121__self);;
		if ((_16617_enm != nullptr)) {
			return _20b065123_IsNum(_20d4de655_Str((*((*(_16617_enm))._field_Kind))._field_Kind.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _20d4e114b_NilCompatible(_20d4de28c_TypeKind* _self_) {
	{
		_20d4de28c_TypeKind* _17721__self = _self_;;
		jule::Ptr<_20d4e710d_Prim> _17917_prim = _20d4e1b85_Prim(_17721__self);;
		if (((_17917_prim != nullptr) && _20d4ea82b_IsAny(_17917_prim.ptr()))) {
			return true;;
		};
		return (((((((_20d4e037b_IsNil(_17721__self) || (_20d4e2e72_Fn(_17721__self) != nullptr)) || (_20d4e1e1b_Sptr(_17721__self) != nullptr)) || (_20d4e21a2_Ptr(_17721__self) != nullptr)) || (_20d4e348e_Trait(_17721__self) != nullptr)) || (_20d4e2bdb_Slc(_17721__self) != nullptr)) || (_20d4e3725_Map(_17721__self) != nullptr)) || (_20d4e26be_TypeEnum(_17721__self) != nullptr));;
	};
}



inline jule::Bool _20d4e13d2_PerformsRC(_20d4de28c_TypeKind* _self_) {
	{
		_20d4de28c_TypeKind* _19821__self = _self_;;
		jule::Ptr<_20d4e710d_Prim> _19917_prim = _20d4e1b85_Prim(_19821__self);;
		if ((_19917_prim != nullptr)) {
			return (_20d4ea82b_IsAny(_19917_prim.ptr()) || _20d4ea595_IsStr(_19917_prim.ptr()));;
		};
		return (((_20d4e1e1b_Sptr(_19821__self) != nullptr) || (_20d4e2bdb_Slc(_19821__self) != nullptr)) || (_20d4e348e_Trait(_19821__self) != nullptr));;
	};
}



inline jule::Bool _20d4e1668_SupportsCloning(_20d4de28c_TypeKind* _self_) {
	{
		_20d4de28c_TypeKind* _21021__self = _self_;;
		{
			
			if ((_20d4e1b85_Prim(_21021__self) != nullptr)) {
				_case_begin_21238014b:;
				{
					return (!(_20d4ea82b_IsAny(_20d4e1b85_Prim(_21021__self).ptr())));;
				}
			}
			else if ((_20d4e2438_Enum(_21021__self) != nullptr)) {
				_case_begin_2123801c3:;
				{
					return true;;
				}
			}
			else if ((_20d4e2e72_Fn(_21021__self) != nullptr)) {
				_case_begin_212380448:;
				{
					return true;;
				}
			}
			else if ((_20d4e21a2_Ptr(_21021__self) != nullptr)) {
				_case_begin_2123804ae:;
				{
					return true;;
				}
			}
			else if ((_20d4e2bdb_Slc(_21021__self) != nullptr)) {
				_case_begin_212380525:;
				{
					return _20d4e1668_SupportsCloning((*(_20d4e2bdb_Slc(_21021__self)))._field_Elem.ptr());;
				}
			}
			else if ((_20d4e3725_Map(_21021__self) != nullptr)) {
				_case_begin_21238059c:;
				{
					jule::Ptr<_20d4ecca1_Map> _22321_m = _20d4e3725_Map(_21021__self);;
					return (_20d4e1668_SupportsCloning((*(_22321_m))._field_Key.ptr()) && _20d4e1668_SupportsCloning((*(_22321_m))._field_Val.ptr()));;
				}
			}
			else if ((_20d4e2955_Arr(_21021__self) != nullptr)) {
				_case_begin_212380624:;
				{
					return _20d4e1668_SupportsCloning((*(_20d4e2955_Arr(_21021__self)))._field_Elem.ptr());;
				}
			}
			else if ((_20d4e1e1b_Sptr(_21021__self) != nullptr)) {
				_case_begin_212380734:;
				{
					return _20d4e1668_SupportsCloning((*(_20d4e1e1b_Sptr(_21021__self)))._field_Elem.ptr());;
				}
			}
			else if ((_20d4e3208_Struct(_21021__self) != nullptr)) {
				_case_begin_21238079a:;
				{
					jule::Ptr<_20d39066b_StructIns> _23025_s = _20d4e3208_Struct(_21021__self);;
					return ((((*(_23025_s))._field_Decl != nullptr) && (!((*((*(_23025_s))._field_Decl))._field_Binded))) && _20d38e02c_IsDerives((*(_23025_s))._field_Decl.ptr(), jule::Str("Clone", 5)));;
				}
			}
			else {
				_case_begin_212380008:;
				{
					return false;;
				}
			}
			_match_end_21237ee92:;
		};
	};
}



inline jule::Bool _20d4e18ee_Variadicable(_20d4de28c_TypeKind* _self_) {
	{
		_20d4de28c_TypeKind* _24121__self = _self_;;
		return (_20d4e2bdb_Slc(_24121__self) != nullptr);;
	};
}



inline jule::Ptr<_20d4e710d_Prim> _20d4e1b85_Prim(_20d4de28c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 20)) {
			_case_begin_212387807:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20d4e710d_Prim>(20);;
			}
		}
		else {
			_case_begin_212388bd2:;
			{
				return nullptr;;
			}
		}
		_match_end_212388b7c:;
	};
}



inline jule::Ptr<_20d4eab39_Sptr> _20d4e1e1b_Sptr(_20d4de28c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 21)) {
			_case_begin_21238930e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20d4eab39_Sptr>(21);;
			}
		}
		else {
			_case_begin_212389a7e:;
			{
				return nullptr;;
			}
		}
		_match_end_212389a29:;
	};
}



inline jule::Ptr<_20d4ee401_Ptr> _20d4e21a2_Ptr(_20d4de28c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_21238a365:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20d4ee401_Ptr>(26);;
			}
		}
		else {
			_case_begin_21238a761:;
			{
				return nullptr;;
			}
		}
		_match_end_21238a70b:;
	};
}



inline jule::Ptr<_20d3b85d9_Enum> _20d4e2438_Enum(_20d4de28c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_21238b047:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20d3b85d9_Enum>(3);;
			}
		}
		else {
			_case_begin_21238b443:;
			{
				return nullptr;;
			}
		}
		_match_end_21238b3dd:;
	};
}



inline jule::Ptr<_20d3b9ce4_TypeEnum> _20d4e26be_TypeEnum(_20d4de28c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_21238bc29:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20d3b9ce4_TypeEnum>(4);;
			}
		}
		else {
			_case_begin_21238c125:;
			{
				return nullptr;;
			}
		}
		_match_end_21238c0c0:;
	};
}



inline jule::Ptr<_20d4ed92d_Arr> _20d4e2955_Arr(_20d4de28c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 25)) {
			_case_begin_21238c90b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20d4ed92d_Arr>(25);;
			}
		}
		else {
			_case_begin_21238cd07:;
			{
				return nullptr;;
			}
		}
		_match_end_21238cca2:;
	};
}



inline jule::Ptr<_20d4eb60c_Slc> _20d4e2bdb_Slc(_20d4de28c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 22)) {
			_case_begin_21238d5dd:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20d4eb60c_Slc>(22);;
			}
		}
		else {
			_case_begin_21238d9d9:;
			{
				return nullptr;;
			}
		}
		_match_end_21238d984:;
	};
}



inline jule::Ptr<_20d3a5a49_FnIns> _20d4e2e72_Fn(_20d4de28c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_21238e2c0:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20d3a5a49_FnIns>(1);;
			}
		}
		else {
			_case_begin_21238e6bb:;
			{
				return nullptr;;
			}
		}
		_match_end_21238e666:;
	};
}



inline jule::Ptr<_20d39066b_StructIns> _20d4e3208_Struct(_20d4de28c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_21238eea2:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20d39066b_StructIns>(0);;
			}
		}
		else {
			_case_begin_21239039d:;
			{
				return nullptr;;
			}
		}
		_match_end_212390348:;
	};
}



inline jule::Ptr<_20d3b5dde_Trait> _20d4e348e_Trait(_20d4de28c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 2)) {
			_case_begin_212390b84:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20d3b5dde_Trait>(2);;
			}
		}
		else {
			_case_begin_212391080:;
			{
				return nullptr;;
			}
		}
		_match_end_21239102a:;
	};
}



inline jule::Ptr<_20d4ecca1_Map> _20d4e3725_Map(_20d4de28c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 24)) {
			_case_begin_212391866:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20d4ecca1_Map>(24);;
			}
		}
		else {
			_case_begin_212391c62:;
			{
				return nullptr;;
			}
		}
		_match_end_212391c0c:;
	};
}



inline jule::Ptr<_20d4ec201_Tuple> _20d4e39ab_Tup(_20d4de28c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 23)) {
			_case_begin_212392559:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20d4ec201_Tuple>(23);;
			}
		}
		else {
			_case_begin_212392966:;
			{
				return nullptr;;
			}
		}
		_match_end_212392911:;
	};
}



inline jule::Bool _20d4e3c42_comptime(_20d4de28c_TypeKind* _self_) {
	return ((((((((((((((_20d4e52b5_comptimeTypeInfos(_self_) != nullptr) || (_20d4e554b_comptimeTypeInfo(_self_) != nullptr)) || (_20d4e3ec8_comptimeStructFields(_self_) != nullptr)) || (_20d4e425e_comptimeStructField(_self_) != nullptr)) || (_20d4e44e5_comptimeEnumFields(_self_) != nullptr)) || (_20d4e477b_comptimeEnumField(_self_) != nullptr)) || (_20d4e57d2_comptimeStatics(_self_) != nullptr)) || (_20d4e5a68_comptimeStatic(_self_) != nullptr)) || (_20d4e4a12_comptimeParams(_self_) != nullptr)) || (_20d4e4c98_comptimeParam(_self_) != nullptr)) || (_20d4e502e_comptimeRange(_self_) != nullptr)) || (_20d4e5cee_comptimeValue(_self_) != nullptr)) || (_20d4e631b_comptimeFiles(_self_) != nullptr)) || (_20d4e6085_comptimeFile(_self_) != nullptr));;
}



inline jule::Ptr<_20d3be898_comptimeStructFields> _20d4e3ec8_comptimeStructFields(_20d4de28c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 7)) {
			_case_begin_2123935d2:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20d3be898_comptimeStructFields>(7);;
			}
		}
		else {
			_case_begin_21239740a:;
			{
				return nullptr;;
			}
		}
		_match_end_2123973a5:;
	};
}



inline jule::Ptr<_20d3bcbe8_comptimeStructField> _20d4e425e_comptimeStructField(_20d4de28c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 6)) {
			_case_begin_2123978c2:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20d3bcbe8_comptimeStructField>(6);;
			}
		}
		else {
			_case_begin_212397cac:;
			{
				return nullptr;;
			}
		}
		_match_end_212397c57:;
	};
}



inline jule::Ptr<_20d3c556e_comptimeEnumFields> _20d4e44e5_comptimeEnumFields(_20d4de28c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 11)) {
			_case_begin_2123985a4:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20d3c556e_comptimeEnumFields>(11);;
			}
		}
		else {
			_case_begin_2123989b1:;
			{
				return nullptr;;
			}
		}
		_match_end_21239895b:;
	};
}



inline jule::Ptr<_20d3c4260_comptimeEnumField> _20d4e477b_comptimeEnumField(_20d4de28c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 10)) {
			_case_begin_212398a49:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20d3c4260_comptimeEnumField>(10);;
			}
		}
		else {
			_case_begin_212399693:;
			{
				return nullptr;;
			}
		}
		_match_end_21239963d:;
	};
}



inline jule::Ptr<_20d3c8e68_comptimeParams> _20d4e4a12_comptimeParams(_20d4de28c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 13)) {
			_case_begin_212399e8a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20d3c8e68_comptimeParams>(13);;
			}
		}
		else {
			_case_begin_21239a397:;
			{
				return nullptr;;
			}
		}
		_match_end_21239a342:;
	};
}



inline jule::Ptr<_20d3c6c02_comptimeParam> _20d4e4c98_comptimeParam(_20d4de28c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 12)) {
			_case_begin_21239ab7d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20d3c6c02_comptimeParam>(12);;
			}
		}
		else {
			_case_begin_21239b079:;
			{
				return nullptr;;
			}
		}
		_match_end_21239b024:;
	};
}



inline jule::Ptr<_20d3bc18c_comptimeRange> _20d4e502e_comptimeRange(_20d4de28c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 5)) {
			_case_begin_21239b871:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20d3bc18c_comptimeRange>(5);;
			}
		}
		else {
			_case_begin_21239bc7d:;
			{
				return nullptr;;
			}
		}
		_match_end_21239bc28:;
	};
}



inline jule::Ptr<_20d3ca563_comptimeTypeInfos> _20d4e52b5_comptimeTypeInfos(_20d4de28c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 14)) {
			_case_begin_21239c575:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20d3ca563_comptimeTypeInfos>(14);;
			}
		}
		else {
			_case_begin_21239c982:;
			{
				return nullptr;;
			}
		}
		_match_end_21239c92c:;
	};
}



inline jule::Ptr<_20d3cbb5d_comptimeTypeInfo> _20d4e554b_comptimeTypeInfo(_20d4de28c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 15)) {
			_case_begin_21239ca1a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20d3cbb5d_comptimeTypeInfo>(15);;
			}
		}
		else {
			_case_begin_21239d664:;
			{
				return nullptr;;
			}
		}
		_match_end_21239d60e:;
	};
}



inline jule::Ptr<_20d3c2b65_comptimeStatics> _20d4e57d2_comptimeStatics(_20d4de28c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 9)) {
			_case_begin_21239d6ec:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20d3c2b65_comptimeStatics>(9);;
			}
		}
		else {
			_case_begin_21239e346:;
			{
				return nullptr;;
			}
		}
		_match_end_21239e2e1:;
	};
}



inline jule::Ptr<_20d3c0ea4_comptimeStatic> _20d4e5a68_comptimeStatic(_20d4de28c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 8)) {
			_case_begin_21239e3ce:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20d3c0ea4_comptimeStatic>(8);;
			}
		}
		else {
			_case_begin_2123a0028:;
			{
				return nullptr;;
			}
		}
		_match_end_21239eec3:;
	};
}



inline jule::Ptr<_20d3d3170_comptimeValue> _20d4e5cee_comptimeValue(_20d4de28c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 16)) {
			_case_begin_2123a0820:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20d3d3170_comptimeValue>(16);;
			}
		}
		else {
			_case_begin_2123a0c2c:;
			{
				return nullptr;;
			}
		}
		_match_end_2123a0bc7:;
	};
}



inline jule::Ptr<_20d3d70b9_comptimeFile> _20d4e6085_comptimeFile(_20d4de28c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 18)) {
			_case_begin_2123a1513:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20d3d70b9_comptimeFile>(18);;
			}
		}
		else {
			_case_begin_2123a190e:;
			{
				return nullptr;;
			}
		}
		_match_end_2123a18a9:;
	};
}



inline jule::Ptr<_20d3d59be_comptimeFiles> _20d4e631b_comptimeFiles(_20d4de28c_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 17)) {
			_case_begin_2123a21e5:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20d3d59be_comptimeFiles>(17);;
			}
		}
		else {
			_case_begin_2123a25e1:;
			{
				return nullptr;;
			}
		}
		_match_end_2123a258b:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20d4de28c_TypeKind _Src) {
	_Stream << _20d4de655_Str(&_Src);
	return _Stream;
}



inline jule::Bool _20d4e6a7a_checked(_20d4e6706_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _20d4e6706_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _20d4e744e_Str(_20d4e710d_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _20d4e7790_Equal(jule::Ptr<_20d4e710d_Prim> _self_, jule::Ptr<_20d4de28c_TypeKind> _53821_other) {
	jule::Ptr<_20d4e710d_Prim> _53913_prim = _20d4e1b85_Prim(_53821_other.ptr());;
	if ((_53913_prim == nullptr)) {
		return false;;
	};
	return ((*(_self_))._field_Kind == (*(_53913_prim))._field_Kind);;
}



inline jule::Bool _20d4e7c35_IsConstraint(_20d4e710d_Prim* _self_) {
	return ((((!(_20d4ea595_IsStr(_self_))) && (!(_20d4ea82b_IsAny(_self_)))) && (!(_20d4ea30e_IsBool(_self_)))) && (!(_20b065123_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _20d4e7ebb_IsI8(_20d4e710d_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i8", 2);;
}



inline jule::Bool _20d4e8252_IsI16(_20d4e710d_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i16", 3);;
}



inline jule::Bool _20d4e84d8_IsI32(_20d4e710d_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i32", 3);;
}



inline jule::Bool _20d4e876e_IsI64(_20d4e710d_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i64", 3);;
}



inline jule::Bool _20d4e8a05_IsU8(_20d4e710d_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u8", 2);;
}



inline jule::Bool _20d4e8c8b_IsU16(_20d4e710d_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u16", 3);;
}



inline jule::Bool _20d4e9022_IsU32(_20d4e710d_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u32", 3);;
}



inline jule::Bool _20d4e92a8_IsU64(_20d4e710d_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u64", 3);;
}



inline jule::Bool _20d4e953e_IsF32(_20d4e710d_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f32", 3);;
}



inline jule::Bool _20d4e97c5_IsF64(_20d4e710d_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f64", 3);;
}



inline jule::Bool _20d4e9a5b_IsInt(_20d4e710d_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("int", 3);;
}



inline jule::Bool _20d4e9ce2_IsUint(_20d4e710d_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uint", 4);;
}



inline jule::Bool _20d4ea078_IsUintptr(_20d4e710d_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uintptr", 7);;
}



inline jule::Bool _20d4ea30e_IsBool(_20d4e710d_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("bool", 4);;
}



inline jule::Bool _20d4ea595_IsStr(_20d4e710d_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("str", 3);;
}



inline jule::Bool _20d4ea82b_IsAny(_20d4e710d_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("any", 3);;
}







std::ostream &operator<<(std::ostream &_Stream, _20d4e710d_Prim _Src) {
	_Stream << _20d4e744e_Str(&_Src);
	return _Stream;
}



inline jule::Str _20d4eaead_Str(_20d4eab39_Sptr* _self_) {
	return (jule::Str("&", 1) + _20d4de655_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _20d4eb2ee_Equal(jule::Ptr<_20d4eab39_Sptr> _self_, jule::Ptr<_20d4de28c_TypeKind> _61521_other) {
	jule::Ptr<_20d4eab39_Sptr> _61613_sptr = _20d4e1e1b_Sptr(_61521_other.ptr());;
	if ((_61613_sptr == nullptr)) {
		return false;;
	};
	return _20d4de996_Equal((*(_self_))._field_Elem, (*(_61613_sptr))._field_Elem);;
}







std::ostream &operator<<(std::ostream &_Stream, _20d4eab39_Sptr _Src) {
	_Stream << _20d4eaead_Str(&_Src);
	return _Stream;
}



inline jule::Str _20d4eba91_Str(_20d4eb60c_Slc* _self_) {
	return (jule::Str("[]", 2) + _20d4de655_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _20d4ebdd2_Equal(jule::Ptr<_20d4eb60c_Slc> _self_, jule::Ptr<_20d4de28c_TypeKind> _63421_other) {
	jule::Ptr<_20d4eb60c_Slc> _63513_slc = _20d4e2bdb_Slc(_63421_other.ptr());;
	if ((_63513_slc == nullptr)) {
		return false;;
	};
	return _20d4de996_Equal((*(_self_))._field_Elem, (*(_63513_slc))._field_Elem);;
}







std::ostream &operator<<(std::ostream &_Stream, _20d4eb60c_Slc _Src) {
	_Stream << _20d4eba91_Str(&_Src);
	return _Stream;
}



inline jule::Str _20d4ec575_Str(_20d4ec201_Tuple* _self_) {
	_2240a0ad5_StrBuilder _65117_s = static__2240a0e04_New(16LL);;
	_2240a9b55_WriteByte(&_65117_s, '(');
	_2240a989c_WriteStr(&_65117_s, _20d4de655_Str((*(_self_))._field_Types[0LL].ptr()));
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_2123b2ca5:;
		if (it != expr_end) {
			jule::Ptr<_20d4de28c_TypeKind> *_65416_t = it;
			{
				_2240a9b55_WriteByte(&_65117_s, ',');
				_2240a989c_WriteStr(&_65117_s, _20d4de655_Str((*(_65416_t)).ptr()));
			}
			_iter_next_2123b2ca5:;
			++it;
			goto _iter_begin_2123b2ca5;
		}
		_iter_end_2123b2ca5:;
	};
	_2240a9b55_WriteByte(&_65117_s, ')');
	return _2240aa194_Str(&_65117_s);;
}



inline jule::Bool _20d4ec8b6_Equal(jule::Ptr<_20d4ec201_Tuple> _self_, jule::Ptr<_20d4de28c_TypeKind> _66321_other) {
	jule::Ptr<_20d4ec201_Tuple> _66413_tup = _20d4e39ab_Tup(_66321_other.ptr());;
	if ((_66413_tup == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Types.len() != (*(_66413_tup))._field_Types.len())) {
		return false;;
	};
	jule::I64 _67117_i = 0LL;;
	for (; (_67117_i < (*(_self_))._field_Types.len()); (_67117_i)++) {
		{
			if ((!(_20d4de996_Equal((*(_self_))._field_Types[_67117_i], (*(_66413_tup))._field_Types[_67117_i])))) {
				return false;;
			};
		}
	_iter_next_2123b5c86:;
	}
	_iter_end_2123b5c86:;;
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d4ec201_Tuple _Src) {
	_Stream << _20d4ec575_Str(&_Src);
	return _Stream;
}



inline jule::Str _20d4ed125_Str(_20d4ecca1_Map* _self_) {
	_2240a0ad5_StrBuilder _69117_s = static__2240a0e04_New(16LL);;
	_2240a989c_WriteStr(&_69117_s, jule::Str("map[", 4));
	_2240a989c_WriteStr(&_69117_s, _20d4de655_Str((*(_self_))._field_Key.ptr()));
	_2240a9b55_WriteByte(&_69117_s, ']');
	_2240a989c_WriteStr(&_69117_s, _20d4de655_Str((*(_self_))._field_Val.ptr()));
	return _2240aa194_Str(&_69117_s);;
}



inline jule::Bool _20d4ed466_Equal(jule::Ptr<_20d4ecca1_Map> _self_, jule::Ptr<_20d4de28c_TypeKind> _70021_other) {
	jule::Ptr<_20d4ecca1_Map> _70113_m = _20d4e3725_Map(_70021_other.ptr());;
	if ((_70113_m == nullptr)) {
		return false;;
	};
	return (_20d4de996_Equal((*(_self_))._field_Key, (*(_70113_m))._field_Key) && _20d4de996_Equal((*(_self_))._field_Val, (*(_70113_m))._field_Val));;
}







std::ostream &operator<<(std::ostream &_Stream, _20d4ecca1_Map _Src) {
	_Stream << _20d4ed125_Str(&_Src);
	return _Stream;
}



inline jule::Str _20d4edca2_Str(_20d4ed92d_Arr* _self_) {
	_2240a0ad5_StrBuilder _71917_s = static__2240a0e04_New(16LL);;
	_2240a9b55_WriteByte(&_71917_s, '[');
	_2240a989c_WriteStr(&_71917_s, _20b055388_Itoa((*(_self_))._field_N));
	_2240a9b55_WriteByte(&_71917_s, ']');
	_2240a989c_WriteStr(&_71917_s, _20d4de655_Str((*(_self_))._field_Elem.ptr()));
	return _2240aa194_Str(&_71917_s);;
}



inline jule::Bool _20d4ee0e3_Equal(jule::Ptr<_20d4ed92d_Arr> _self_, jule::Ptr<_20d4de28c_TypeKind> _72821_other) {
	jule::Ptr<_20d4ed92d_Arr> _72913_arr = _20d4e2955_Arr(_72821_other.ptr());;
	if ((_72913_arr == nullptr)) {
		return false;;
	};
	return (((*(_self_))._field_N == (*(_72913_arr))._field_N) && _20d4de996_Equal((*(_self_))._field_Elem, (*(_72913_arr))._field_Elem));;
}







std::ostream &operator<<(std::ostream &_Stream, _20d4ed92d_Arr _Src) {
	_Stream << _20d4edca2_Str(&_Src);
	return _Stream;
}



inline jule::Str _20d4ee775_Str(_20d4ee401_Ptr* _self_) {
	if (_20d4eee3a_IsUnsafe(_self_)) {
		return jule::Str("*unsafe", 7);;
	};
	return (jule::Str("*", 1) + _20d4de655_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _20d4eeab6_Equal(jule::Ptr<_20d4ee401_Ptr> _self_, jule::Ptr<_20d4de28c_TypeKind> _75221_other) {
	jule::Ptr<_20d4ee401_Ptr> _75313_ptr = _20d4e21a2_Ptr(_75221_other.ptr());;
	if ((_75313_ptr == nullptr)) {
		return false;;
	};
	return _20d4de996_Equal((*(_self_))._field_Elem, (*(_75313_ptr))._field_Elem);;
}



inline jule::Bool _20d4eee3a_IsUnsafe(_20d4ee401_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _20d4ee401_Ptr _Src) {
	_Stream << _20d4ee775_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d500402_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _20d501b2e_pushErr(_20d5013e2_typeChecker* _self_, jule::Ptr<_20d3510bb_Token> _83826_token, jule::Str _83841_fmt, jule::Slice<jule::Any> _83854_args) {
	_20d438a33_pushErr((*(_self_))._field_s.ptr(), _83826_token, _83841_fmt, _83854_args);
}



inline void _20d501d2c_allowBuiltin(_20d5013e2_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _20d50202a_disallowBuiltin(_20d5013e2_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _2123c568b_pushReference(_20d5013e2_typeChecker* _self_, jule::Ptr<_20d39066b_StructIns>* _85040_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_212093b2e_Exist((*(_self_))._field_refers.ptr(), (*(_85040_t)))) {
		return;;
	};
	_20d3a99d7_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_85040_t)), &__jule_any_type9));
}

inline void _2123c865b_pushReference(_20d5013e2_typeChecker* _self_, jule::Ptr<_20d3b5dde_Trait>* _85040_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_2123ca3a5_Exist((*(_self_))._field_refers.ptr(), (*(_85040_t)))) {
		return;;
	};
	_20d3a99d7_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_85040_t)), &__jule_any_type10));
}



inline void _20d50258b_pushReferenceByKind(_20d5013e2_typeChecker* _self_, jule::Ptr<_20d4de28c_TypeKind>* _86043_k) {
	{
		
		if ((_20d4e3208_Struct((*(_86043_k)).ptr()) != nullptr)) {
			_case_begin_2123c427d:;
			{
				jule::Ptr<_20d39066b_StructIns> _86321_t = _20d4e3208_Struct((*(_86043_k)).ptr());;
				_2123c568b_pushReference(_self_, &(_86321_t));
			}
		}
		else if ((_20d4e348e_Trait((*(_86043_k)).ptr()) != nullptr)) {
			_case_begin_2123c4305:;
			{
				jule::Ptr<_20d3b5dde_Trait> _86621_t = _20d4e348e_Trait((*(_86043_k)).ptr());;
				_2123c865b_pushReference(_self_, &(_86621_t));
			}
		}
		_match_end_2123c416d:;
	};
}



inline void _20d5029a9_pushCycleError(_20d5013e2_typeChecker* _self_, jule::Any _87129_def1, jule::Any _87140_def2, _2240a0ad5_StrBuilder* _87156_message) {
	;
	jule::Fn<jule::Str(jule::Any*)> _87313_getIdent = jule::Fn<jule::Str(jule::Any*)>([=](jule::Any* _87328_def) mutable -> jule::Str {
		{
			auto &_match_expr{ (*(_87328_def)) };
			
			if (_match_expr.type == &__jule_any_type67) {
				_case_begin_2123ccee0:;
				{
					return (*((*(_87328_def)).cast_ptr<_20d4dd49a_TypeAlias>(&__jule_any_type67)))._field_Ident;;
				}
			}
			else if (_match_expr.type == &__jule_any_type66) {
				_case_begin_2123cd595:;
				{
					return (*((*(_87328_def)).cast_ptr<_20d38c58b_Struct>(&__jule_any_type66)))._field_Ident;;
				}
			}
			else {
				_case_begin_2123cd188:;
				{
					return jule::Str();;
				}
			}
			_match_end_2123cd133:;
		};
	});;
	jule::Slice<jule::U8> _88313_buf = _2240aab45_Buf(_87156_message);;
	jule::Str _88413_def1Ident = _87313_getIdent(&(_87129_def1));;
	jule::Str _88513_def2Ident = _87313_getIdent(&(_87140_def2));;
	jule::Str _88613_refersTo = _22730c3c1_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_88413_def1Ident, &__jule_any_type4),jule::Any(_88513_def2Ident, &__jule_any_type4)}));;
	_2240a989c_WriteStr(_87156_message, _2248a97b7_Repeat(jule::Str(" ", 1), 7LL));
	_2240a989c_WriteStr(_87156_message, _88613_refersTo);
	_2240a9b55_WriteByte(_87156_message, '\n');
	_2240a95e4_Write(_87156_message, _88313_buf);
}



inline jule::Bool _20d502da5_checkCrossCycle(_20d5013e2_typeChecker* _self_, jule::Any _89330_decl, _2240a0ad5_StrBuilder* _89346_message) {
	{
		auto &_match_expr{ _89330_decl };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_2123d170d:;
			{
				jule::Ptr<_20d4dd49a_TypeAlias> _89617_ta = _89330_decl.cast_ptr<_20d4dd49a_TypeAlias>(&__jule_any_type67);;
				{
					auto expr = &((*(_89617_ta))._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2123d2401:;
					if (it != expr_end) {
						jule::Any *_89720_d = it;
						{
							{
								
								if (((*(_89720_d)) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_2123d2e4b:;
									{
										_20d5029a9_pushCycleError(_self_, jule::Any(_89617_ta, &__jule_any_type67), (*(_89720_d)), _89346_message);
										return false;;
									}
								}
								else if ((!(_20d502da5_checkCrossCycle(_self_, (*(_89720_d)), _89346_message)))) {
									_case_begin_2123d2ec3:;
									{
										_20d5029a9_pushCycleError(_self_, jule::Any(_89617_ta, &__jule_any_type67), (*(_89720_d)), _89346_message);
										return false;;
									}
								}
								_match_end_2123d2d3b:;
							};
						}
						_iter_next_2123d2401:;
						++it;
						goto _iter_begin_2123d2401;
					}
					_iter_end_2123d2401:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_2123d1774:;
			{
				jule::Ptr<_20d38c58b_Struct> _90817_s = _89330_decl.cast_ptr<_20d38c58b_Struct>(&__jule_any_type66);;
				{
					auto expr = &((*(_90817_s))._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2123d2b3d:;
					if (it != expr_end) {
						jule::Ptr<_20d38c58b_Struct> *_90920_d = it;
						{
							{
								
								if ((__jule_any_type66_compare((*((*(_self_))._field_referencer))._field_owner, (*(_90920_d))))) {
									_case_begin_2123d51a1:;
									{
										_20d5029a9_pushCycleError(_self_, jule::Any(_90817_s, &__jule_any_type66), jule::Any((*(_90920_d)), &__jule_any_type66), _89346_message);
										return false;;
									}
								}
								else if ((!(_20d502da5_checkCrossCycle(_self_, jule::Any((*(_90920_d)), &__jule_any_type66), _89346_message)))) {
									_case_begin_2123d5228:;
									{
										_20d5029a9_pushCycleError(_self_, jule::Any(_90817_s, &__jule_any_type66), jule::Any((*(_90920_d)), &__jule_any_type66), _89346_message);
										return false;;
									}
								}
								_match_end_2123d5091:;
							};
						}
						_iter_next_2123d2b3d:;
						++it;
						goto _iter_begin_2123d2b3d;
					}
					_iter_end_2123d2b3d:;
				};
			}
		}
		_match_end_2123d16a8:;
	};
	return true;;
}



inline jule::Bool _20d5032a1_checkIllegalCycles(_20d5013e2_typeChecker* _self_, jule::Ptr<_20d36c0a4_IdentTypeDecl>* _92738_ident, jule::Any _92765_decl) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_referencer == nullptr) || (!((*(_self_))._field_cycleRisk)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _92765_decl };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_2123d7181:;
			{
				if ((*(_92765_decl.cast_ptr<_20d38c58b_Struct>(&__jule_any_type66)))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_2123d71e7:;
			{
				if ((*(_92765_decl.cast_ptr<_20d4dd49a_TypeAlias>(&__jule_any_type67)))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_2123d712b:;
	};
	if ((_92765_decl == (*((*(_self_))._field_referencer))._field_owner)) {
		_20d501b2e_pushErr(_self_, (*((*(_92738_ident))))._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_referencer))._field_ident, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_2240a0ad5_StrBuilder _95017_message = static__2240a0e04_New(32LL);;
	if ((!(_20d502da5_checkCrossCycle(_self_, _92765_decl, &(_95017_message))))) {
		jule::Str _95321_errMsg = _2240aa194_Str(&_95017_message);;
		_2240aa392_Clear(&_95017_message);
		_20d5029a9_pushCycleError(_self_, (*((*(_self_))._field_referencer))._field_owner, _92765_decl, &(_95017_message));
		_95321_errMsg+=_2240aa194_Str(&_95017_message);
		_20d501b2e_pushErr(_self_, (*((*(_92738_ident))))._field_Token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_95321_errMsg, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_2123db85b:;
			{
				{
					{ jule::Slice<jule::Any> *__jule_push_dest = (*((*(_self_))._field_referencer))._field_refs; __jule_push_dest->push(_92765_decl); };
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_2123db8c2:;
			{
				{
					auto &_match_expr{ _92765_decl };
					
					if (_match_expr.type == &__jule_any_type66) {
						_case_begin_2123dc252:;
						{
							jule::Ptr<_20d38c58b_Struct> _96925_s = (*((*(_self_))._field_referencer))._field_owner.cast_ptr<_20d38c58b_Struct>(&__jule_any_type66);;
							{ jule::Slice<jule::Ptr<_20d38c58b_Struct>> &__jule_push_dest = (*(_96925_s))._field_Depends; __jule_push_dest.push(_92765_decl.cast_ptr<_20d38c58b_Struct>(&__jule_any_type66)); };
						}
					}
					_match_end_2123dbc46:;
				};
			}
		}
		_match_end_2123db806:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait<_20d4ddcd6_Kind> _20d50369c_fromTypeAlias(_20d5013e2_typeChecker* _self_, jule::Ptr<_20d36c0a4_IdentTypeDecl>* _97733_decl, jule::Ptr<_20d4dd49a_TypeAlias>* _97760_ta) {
	if ((!(_20d439292_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_97760_ta))))._field_Public, (*((*(_97760_ta))))._field_Token)))) {
		_20d501b2e_pushErr(_self_, (*((*(_97733_decl))))._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_97733_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	(*((*(_97760_ta))))._field_Used=true;
	if (((*((*(_97733_decl))))._field_Generics.len() > 0LL)) {
		_20d501b2e_pushErr(_self_, (*((*(_97733_decl))))._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_97733_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2123e2026:;
			if (it != expr_end) {
				jule::Ptr<_20d4dd49a_TypeAlias> _99420_bg = *it;
				{
					if (((_99420_bg == (*(_97760_ta))) || (((*((*((*(_97760_ta))))._field_Kind))._field_Kind != nullptr) && _20d4de996_Equal((*((*((*(_97760_ta))))._field_Kind))._field_Kind, (*((*(_99420_bg))._field_Kind))._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_2123e2026;
					};
				}
				_iter_next_2123e2026:;
				++it;
				goto _iter_begin_2123e2026;
			}
			_iter_end_2123e2026:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2123e2c19:;
			if (it != expr_end) {
				jule::Ptr<_20d4dd49a_TypeAlias> _100520_bg = *it;
				{
					if ((_100520_bg == (*(_97760_ta)))) {
						_20d501b2e_pushErr(_self_, (*((*(_97733_decl))))._field_Token, jule::Str("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*((*(_97733_decl))))._field_Ident, &__jule_any_type4)}));
						return nullptr;;
					};
					{
						auto expr = &((*((*(_97760_ta))))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_2123e59db:;
						if (it != expr_end) {
							jule::Ptr<_20d4dd49a_TypeAlias> _101024_dg = *it;
							{
								if ((_100520_bg == _101024_dg)) {
									_20d501b2e_pushErr(_self_, (*((*(_97733_decl))))._field_Token, jule::Str("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*((*(_97733_decl))))._field_Ident, &__jule_any_type4)}));
									return nullptr;;
								};
							}
							_iter_next_2123e59db:;
							++it;
							goto _iter_begin_2123e59db;
						}
						_iter_end_2123e59db:;
					};
				}
				_iter_next_2123e2c19:;
				++it;
				goto _iter_begin_2123e2c19;
			}
			_iter_end_2123e2c19:;
		};
	};
	jule::Bool _101917_ok = _20d5032a1_checkIllegalCycles(_self_, _97733_decl, jule::Any((*(_97760_ta)), &__jule_any_type67));;
	if ((!(_101917_ok))) {
		return nullptr;;
	};
	if (((*((*((*(_97760_ta))))._field_Kind))._field_Kind == nullptr)) {
		_101917_ok=_20d444e4b_checkTypeAliasDeclKind((*(_self_))._field_s, _97760_ta, (*(_self_))._field_lookup);
		if ((!(_101917_ok))) {
			return nullptr;;
		};
	};
	if (((*((*(_97760_ta))))._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		{ jule::Slice<jule::Ptr<_20d4dd49a_TypeAlias>> &__jule_push_dest = (*((*(_self_))._field_ownerAlias))._field_Generics; __jule_push_dest.push((*(_97760_ta))); };
	};
	jule::Ptr<_20d4de28c_TypeKind> _103817_tk = jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Generic=(*((*(_97760_ta))))._field_Generic, ._field_Kind=(*((*((*((*(_97760_ta))))._field_Kind))._field_Kind))._field_Kind});;
	_20d50258b_pushReferenceByKind(_self_, &(_103817_tk));
	if ((*((*(_97760_ta))))._field_Binded) {
		(*(_103817_tk))._field_BindIdent=(*((*(_97760_ta))))._field_Ident;
	} else {
		(*(_103817_tk))._field_BindIdent=(*((*((*((*(_97760_ta))))._field_Kind))._field_Kind))._field_BindIdent;
	};
	return jule::Trait<_20d4ddcd6_Kind>(_103817_tk, 19);;
}



inline jule::Ptr<_20d3b85d9_Enum> _20d503a98_fromEnum(_20d5013e2_typeChecker* _self_, jule::Ptr<_20d36c0a4_IdentTypeDecl>* _105128_decl, jule::Ptr<_20d3b85d9_Enum>* _105155_e) {
	if ((!(_20d439292_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_105155_e))))._field_Public, (*((*(_105155_e))))._field_Token)))) {
		_20d501b2e_pushErr(_self_, (*((*(_105128_decl))))._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_105128_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_105128_decl))))._field_Generics.len() > 0LL)) {
		_20d501b2e_pushErr(_self_, (*((*(_105128_decl))))._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_105128_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_105155_e));;
}



inline jule::Ptr<_20d3b9ce4_TypeEnum> _20d503e94_fromTypeEnum(_20d5013e2_typeChecker* _self_, jule::Ptr<_20d36c0a4_IdentTypeDecl>* _106332_decl, jule::Ptr<_20d3b9ce4_TypeEnum>* _106359_e) {
	if ((!(_20d439292_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_106359_e))))._field_Public, (*((*(_106359_e))))._field_Token)))) {
		_20d501b2e_pushErr(_self_, (*((*(_106332_decl))))._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_106332_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_106332_decl))))._field_Generics.len() > 0LL)) {
		_20d501b2e_pushErr(_self_, (*((*(_106332_decl))))._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_106332_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_106359_e));;
}



inline jule::Ptr<_20d3b5dde_Trait> _20d504390_fromTrait(_20d5013e2_typeChecker* _self_, jule::Ptr<_20d36c0a4_IdentTypeDecl>* _107529_decl, jule::Ptr<_20d3b5dde_Trait>* _107556_t) {
	if ((!(_20d439292_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_107556_t))))._field_Public, (*((*(_107556_t))))._field_Token)))) {
		_20d501b2e_pushErr(_self_, (*((*(_107529_decl))))._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_107529_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_107529_decl))))._field_Generics.len() > 0LL)) {
		_20d501b2e_pushErr(_self_, (*((*(_107529_decl))))._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_107529_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	_2123c865b_pushReference(_self_, _107556_t);
	return (*(_107556_t));;
}



inline jule::Bool _20d50478b_checkStructIns(_20d5013e2_typeChecker* _self_, jule::Ptr<_20d39066b_StructIns>* _108838_ins, jule::Ptr<_20d3510bb_Token>* _108860_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_108838_ins))))._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_108838_ins))))._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (__jule_any_type66_compare((*((*(_self_))._field_referencer))._field_owner, (*((*(_108838_ins))))._field_Decl)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_20d451d37_precheckStructIns((*(_self_))._field_s, _108838_ins, (*(_108860_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*((*(_108838_ins))))._field_Generics.len() > 0LL)) {
		_20d45284e_checkStructInsOperators((*(_self_))._field_s, (*(_108838_ins)));
		_20d4520e0_checkStructIns((*(_self_))._field_s, _108838_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _20d504a44_appendUsedStructReference(_20d5013e2_typeChecker* _self_, jule::Ptr<_20d38c58b_Struct>* _110949_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_212408b53:;
			{
				jule::Ptr<_20d38c58b_Struct> _111521_refS = (*((*(_self_))._field_referencer))._field_owner.cast_ptr<_20d38c58b_Struct>(&__jule_any_type66);;
				if ((!(_20d38e36d_IsUses(_111521_refS.ptr(), (*(_110949_s)))))) {
					{ jule::Slice<jule::Ptr<_20d38c58b_Struct>> &__jule_push_dest = (*(_111521_refS))._field_Uses; __jule_push_dest.push((*(_110949_s))); };
				};
			}
		}
		_match_end_212408aed:;
	};
}



inline jule::Ptr<_20d39066b_StructIns> _20d504e40_buildStructInstance(_20d5013e2_typeChecker* _self_, jule::Ptr<_20d36c0a4_IdentTypeDecl>* _112243_decl, jule::Ptr<_20d38c58b_Struct>* _112270_s) {
	jule::Ptr<_20d500402_referencer> _112417_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_20d4dd49a_TypeAlias>> _112617_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_21240bb23:;
				{
					jule::Ptr<_20d3ea9a1_scopeChecker> _113325_sc = (*(_self_))._field_lookup.cast_ptr<_20d3ea9a1_scopeChecker>(0);;
					jule::Ptr<_20d3ea9a1_scopeChecker> _113425_hard = _20d3edd28_getHardRoot(_113325_sc);;
					if ((((*((*(_113425_hard))._field_owner))._field_Owner == nullptr) || ((*((*((*(_113425_hard))._field_owner))._field_Owner))._field_Decl != (*(_112270_s))))) {
						goto _match_end_21240babd;
					};
					jule::I64 _113821_n = ((*((*(_113425_hard))._field_owner))._field_Generics.len() + (*((*((*(_113425_hard))._field_owner))._field_Owner))._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=(*((*(_113425_hard))._field_table))._field_TypeAliases.slice(0LL, _113821_n);
				}
			}
			_match_end_21240babd:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait<_20d50e06a_Lookup> _114817_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_20d39066b_StructIns> _115217_ins = _20d38ca0e_instance((*(_112270_s)));;
	(*(_115217_ins))._field_Generics=jule::Slice<jule::Ptr<_20d4dc8a6_InsGeneric>>::alloc(0LL, (*((*(_112243_decl))))._field_Generics.len());
	{
		auto expr = &((*((*(_112243_decl))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21241196e:;
		if (it != expr_end) {
			jule::Ptr<_20d36b999_TypeDecl> _115421_g = *it;
			{
				jule::Ptr<_20d4de28c_TypeKind> _115521_kind = _20d50874b_build(_self_, &((*(_115421_g))._field_Kind));;
				if ((_115521_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_20d4dc8a6_InsGeneric>> &__jule_push_dest = (*(_115217_ins))._field_Generics; __jule_push_dest.push(jule::new_ptr<_20d4dc8a6_InsGeneric>(_20d4dc8a6_InsGeneric{._field_Kind=_115521_kind, })); };
			}
			_iter_next_21241196e:;
			++it;
			goto _iter_begin_21241196e;
		}
		_iter_end_21241196e:;
	};
	(*(_self_))._field_lookup=_114817_lookup;
	(*(_self_))._field_bannedGenerics=_112617_bannedGenerics;
	(*(_self_))._field_referencer=_112417_referencer;
	return _115217_ins;;
}



inline jule::Ptr<_20d39066b_StructIns> _20d50533b_fromStruct(_20d5013e2_typeChecker* _self_, jule::Ptr<_20d36c0a4_IdentTypeDecl>* _117034_decl, jule::Ptr<_20d38c58b_Struct>* _117061_s) {
	if ((!(_20d439292_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_117061_s))))._field_Public, (*((*(_117061_s))))._field_Token)))) {
		_20d501b2e_pushErr(_self_, (*((*(_117034_decl))))._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_117034_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*((*(_117034_decl))))._field_Generics.len() > 0LL)) {
			_20d501b2e_pushErr(_self_, (*((*(_117034_decl))))._field_Token, jule::Str("generics are not allowed in this scope", 38), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_20d39066b_StructIns>(_20d39066b_StructIns{._field_Decl=(*(_117061_s)), });;
	};
	jule::Bool _118817_ok = _20d5032a1_checkIllegalCycles(_self_, _117034_decl, jule::Any((*(_117061_s)), &__jule_any_type66));;
	if ((!(_118817_ok))) {
		return nullptr;;
	};
	_20d504a44_appendUsedStructReference(_self_, _117061_s);
	jule::Ptr<_20d39066b_StructIns> _119417_ins = _20d504e40_buildStructInstance(_self_, _117034_decl, _117061_s);;
	if ((_119417_ins == nullptr)) {
		return nullptr;;
	};
	_118817_ok=_20d43a062_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I64>((*((*(_119417_ins))._field_Decl))._field_Generics.len()), static_cast<jule::I64>((*(_119417_ins))._field_Generics.len()), (*((*(_117034_decl))))._field_Token);
	if ((!(_118817_ok))) {
		return nullptr;;
	};
	jule::Ptr<_20d39066b_StructIns> _120417_existInstance = _20d38cd1c_appendInstance((*(_117061_s)).ptr(), &(_119417_ins));;
	if ((_120417_existInstance != nullptr)) {
		if ((!(_20d443147_checkConstraintsStruct((*(_self_))._field_s, &(_119417_ins), &((*((*(_117034_decl))))._field_Token), _120417_existInstance)))) {
			return nullptr;;
		};
		_2123c568b_pushReference(_self_, &(_120417_existInstance));
		return _120417_existInstance;;
	};
	if ((!(_20d50478b_checkStructIns(_self_, &(_119417_ins), &((*((*(_117034_decl))))._field_Token))))) {
		return nullptr;;
	};
	_2123c568b_pushReference(_self_, &(_119417_ins));
	return _119417_ins;;
}



inline jule::Trait<_20d4ddcd6_Kind> _20d50567c_getDef(_20d5013e2_typeChecker* _self_, jule::Ptr<_20d36c0a4_IdentTypeDecl>* _122830_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21241c31a:;
		if (it != expr_end) {
			jule::Ptr<_20d378ba4_GenericDecl> _122916_g = *it;
			{
				if (((*(_122916_g))._field_Ident == (*((*(_122830_decl))))._field_Ident)) {
					return jule::Trait<_20d4ddcd6_Kind>(_20d50b452_buildPrimType((*(_122916_g))._field_Ident), 20);;
				};
			}
			_iter_next_21241c31a:;
			++it;
			goto _iter_begin_21241c31a;
		}
		_iter_end_21241c31a:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21241d75b:;
		if (it != expr_end) {
			jule::Ptr<_20d4dd49a_TypeAlias> _123521_g = *it;
			{
				if (((*(_123521_g))._field_Ident == (*((*(_122830_decl))))._field_Ident)) {
					if (((*((*(_122830_decl))))._field_Generics.len() > 0LL)) {
						_20d501b2e_pushErr(_self_, (*((*(_122830_decl))))._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_122830_decl))))._field_Ident, &__jule_any_type4)}));
						return nullptr;;
					};
					jule::Ptr<_20d39066b_StructIns> _124125_st = _20d4e3208_Struct((*((*(_123521_g))._field_Kind))._field_Kind.ptr());;
					if ((_124125_st != nullptr)) {
						jule::Bool _124325_ok = _20d5032a1_checkIllegalCycles(_self_, _122830_decl, jule::Any((*(_124125_st))._field_Decl, &__jule_any_type66));;
						if ((!(_124325_ok))) {
							return nullptr;;
						};
					};
					return (*((*((*(_123521_g))._field_Kind))._field_Kind))._field_Kind;;
				};
			}
			_iter_next_21241d75b:;
			++it;
			goto _iter_begin_21241d75b;
		}
		_iter_end_21241d75b:;
	};
	if ((!((*((*(_122830_decl))))._field_Binded))) {
		jule::Ptr<_20d3b85d9_Enum> _125321_e = _20d50e06a_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._20d50dac5_FindEnum((*(_self_))._field_lookup, (*((*(_122830_decl))))._field_Ident);;
		if ((_125321_e != nullptr)) {
			return jule::Trait<_20d4ddcd6_Kind>(_20d503a98_fromEnum(_self_, _122830_decl, &(_125321_e)), 3);;
		};
		jule::Ptr<_20d3b9ce4_TypeEnum> _125821_te = _20d50e06a_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._20d50de16_FindTypeEnum((*(_self_))._field_lookup, (*((*(_122830_decl))))._field_Ident);;
		if ((_125821_te != nullptr)) {
			return jule::Trait<_20d4ddcd6_Kind>(_20d503e94_fromTypeEnum(_self_, _122830_decl, &(_125821_te)), 4);;
		};
		jule::Ptr<_20d3b5dde_Trait> _126321_t = _20d50e06a_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._20d50d784_FindTrait((*(_self_))._field_lookup, (*((*(_122830_decl))))._field_Ident);;
		if ((_126321_t != nullptr)) {
			return jule::Trait<_20d4ddcd6_Kind>(_20d504390_fromTrait(_self_, _122830_decl, &(_126321_t)), 2);;
		};
	} else if ((*(_self_))._field_selection) {
		_20d501b2e_pushErr(_self_, (*((*(_122830_decl))))._field_Token, jule::Str("binded definitions are not allowed in this scope", 48), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20d38c58b_Struct> _127217_s = _20d50e06a_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._20d50d047_FindStruct((*(_self_))._field_lookup, (*((*(_122830_decl))))._field_Ident, (*((*(_122830_decl))))._field_Binded);;
	if ((_127217_s != nullptr)) {
		return jule::Trait<_20d4ddcd6_Kind>(_20d50533b_fromStruct(_self_, _122830_decl, &(_127217_s)), 0);;
	};
	jule::Ptr<_20d4dd49a_TypeAlias> _127717_ta = _20d50e06a_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._20d50cb4b_FindTypeAlias((*(_self_))._field_lookup, (*((*(_122830_decl))))._field_Ident, (*((*(_122830_decl))))._field_Binded);;
	if (((_127717_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_127717_ta=_20d565bd7_findBuiltinTypeAlias((*((*(_122830_decl))))._field_Ident);
	};
	if ((_127717_ta != nullptr)) {
		return _20d50369c_fromTypeAlias(_self_, _122830_decl, &(_127717_ta));;
	};
	_20d501b2e_pushErr(_self_, (*((*(_122830_decl))))._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_122830_decl))))._field_Ident, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Trait<_20d4ddcd6_Kind> _20d5059bd_buildIdent(_20d5013e2_typeChecker* _self_, jule::Ptr<_20d36c0a4_IdentTypeDecl> _128933_decl) {
	return _20d50567c_getDef(_self_, &(_128933_decl));;
}



inline jule::Trait<_20d4ddcd6_Kind> _20d505d0e_buildSubIdent(_20d5013e2_typeChecker* _self_, jule::Ptr<_20d36c3a1_SubIdentTypeDecl> _129336_decl) {
	jule::Trait<_20d4ddcd6_Kind> _129417_ident = _20d5059bd_buildIdent(_self_, (*(_129336_decl))._field_Idents[0LL]);;
	if ((_129417_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _129417_ident };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_2124309b0:;
			{
				goto _match_end_21243042c;
			}
		}
		else {
			_case_begin_212430482:;
			{
				_20d501b2e_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_21243042c:;
	};
	jule::Ptr<_20d3b9ce4_TypeEnum> _130517_t = _129417_ident.cast_ptr<_20d3b9ce4_TypeEnum>(4);;
	jule::Slice<jule::Ptr<_20d36c0a4_IdentTypeDecl>> _130617_idents = (*(_129336_decl))._field_Idents.slice(1LL);;
	{
		auto expr = &(_130617_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212431a7c:;
		if (it != expr_end) {
			jule::I64 _130713_i = it - expr->begin();
			jule::Ptr<_20d36c0a4_IdentTypeDecl> _130716_id = *it;
			{
				jule::Ptr<_20d3b971c_TypeEnumItem> _130821_item = _20d3ba8a5_FindItem(_130517_t.ptr(), (*(_130716_id))._field_Ident);;
				if ((_130821_item == nullptr)) {
					_20d501b2e_pushErr(_self_, (*(_130716_id))._field_Token, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_130517_t))._field_Ident, &__jule_any_type4),jule::Any((*(_130716_id))._field_Ident, &__jule_any_type4)}));
					return nullptr;;
				};
				if (((_130617_idents.len() - _130713_i) == 1LL)) {
					_20d50258b_pushReferenceByKind(_self_, &((*((*(_130821_item))._field_Kind))._field_Kind));
					return jule::Trait<_20d4ddcd6_Kind>((*((*(_130821_item))._field_Kind))._field_Kind, 19);;
				};
				_130517_t=_20d4e26be_TypeEnum((*((*(_130821_item))._field_Kind))._field_Kind.ptr());
				if ((_130517_t == nullptr)) {
					_20d501b2e_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_212431a7c:;
			++it;
			_130713_i++;
			goto _iter_begin_212431a7c;
		}
		_iter_end_212431a7c:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d4eab39_Sptr> _20d506150_buildSptrFromType(_20d5013e2_typeChecker* _self_, jule::Ptr<_20d4de28c_TypeKind>* _132741_elem) {
	{
		
		if (((*(_132741_elem)) == nullptr)) {
			_case_begin_212436213:;
			{
				return nullptr;;
			}
		}
		else if ((_20d4e3208_Struct((*(_132741_elem)).ptr()) != nullptr)) {
			_case_begin_21243628a:;
			{
				jule::Ptr<_20d39066b_StructIns> _133317_s = _20d4e3208_Struct((*(_132741_elem)).ptr());;
				if ((((*(_133317_s))._field_Decl != nullptr) && (*((*(_133317_s))._field_Decl))._field_Binded)) {
					_20d501b2e_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_20d4e2955_Arr((*(_132741_elem)).ptr()) != nullptr) && (*(_20d4e2955_Arr((*(_132741_elem)).ptr())))._field_Auto)) {
			_case_begin_212436312:;
			{
				_20d501b2e_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_212435971:;
	};
	return jule::new_ptr<_20d4eab39_Sptr>(_20d4eab39_Sptr{._field_Elem=(*(_132741_elem))});;
}



inline jule::Ptr<_20d4eab39_Sptr> _20d506491_buildSptr(_20d5013e2_typeChecker* _self_, jule::Ptr<_20d36ca44_SptrTypeDecl> _134732_decl) {
	jule::Bool _134813_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_134813_cycleRisk;
	});;
	jule::Ptr<_20d4de28c_TypeKind> _135217_elem = _20d508a8c_checkDecl(_self_, &((*(_134732_decl))._field_Elem));;
	return _20d506150_buildSptrFromType(_self_, &(_135217_elem));;
}



inline jule::Ptr<_20d4ee401_Ptr> _20d5067d2_buildPtrFromType(_20d5013e2_typeChecker* _self_, jule::Ptr<_20d4de28c_TypeKind>* _135640_elem) {
	{
		
		if (((*(_135640_elem)) == nullptr)) {
			_case_begin_21243b3a0:;
			{
				return nullptr;;
			}
		}
		else if (((_20d4e2955_Arr((*(_135640_elem)).ptr()) != nullptr) && (*(_20d4e2955_Arr((*(_135640_elem)).ptr())))._field_Auto)) {
			_case_begin_21243b427:;
			{
				_20d501b2e_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return jule::new_ptr<_20d4ee401_Ptr>();;
			}
		}
		_match_end_21243b290:;
	};
	return jule::new_ptr<_20d4ee401_Ptr>(_20d4ee401_Ptr{._field_Elem=(*(_135640_elem))});;
}



inline jule::Ptr<_20d4ee401_Ptr> _20d506b23_buildPtr(_20d5013e2_typeChecker* _self_, jule::Ptr<_20d36d4c3_PtrTypeDecl> _137131_decl) {
	jule::Bool _137213_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_137213_cycleRisk;
	});;
	jule::Ptr<_20d4de28c_TypeKind> _137617_elem = nullptr;;
	if ((!(_20d36d836_IsUnsafe(_137131_decl.ptr())))) {
		_137617_elem=_20d508a8c_checkDecl(_self_, &((*(_137131_decl))._field_Elem));
		return _20d5067d2_buildPtrFromType(_self_, &(_137617_elem));;
	};
	return jule::new_ptr<_20d4ee401_Ptr>(_20d4ee401_Ptr{._field_Elem=_137617_elem});;
}



inline jule::Ptr<_20d4eb60c_Slc> _20d506e64_buildSlc(_20d5013e2_typeChecker* _self_, jule::Ptr<_20d36cdc9_SlcTypeDecl> _138831_decl) {
	jule::Bool _138913_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_138913_cycleRisk;
	});;
	jule::Ptr<_20d4de28c_TypeKind> _139317_elem = _20d508a8c_checkDecl(_self_, &((*(_138831_decl))._field_Elem));;
	{
		
		if ((_139317_elem == nullptr)) {
			_case_begin_21244151a:;
			{
				return nullptr;;
			}
		}
		else if (((_20d4e2955_Arr(_139317_elem.ptr()) != nullptr) && (*(_20d4e2955_Arr(_139317_elem.ptr())))._field_Auto)) {
			_case_begin_212441592:;
			{
				_20d501b2e_pushErr(_self_, (*((*(_138831_decl))._field_Elem))._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_212441493:;
	};
	return jule::new_ptr<_20d4eb60c_Slc>(_20d4eb60c_Slc{._field_Elem=_139317_elem});;
}



inline jule::Ptr<_20d4ed92d_Arr> _20d5072a5_buildArr(_20d5013e2_typeChecker* _self_, jule::Ptr<_20d36dc65_ArrTypeDecl> _140931_decl) {
	jule::I64 _141017_n = 0LL;;
	if ((!(_20d36e0c8_AutoSized(_140931_decl.ptr())))) {
		jule::Ptr<_20d087165_Data> _141321_size = _20d4cdc93_evalExpr(_20d440ed0_eval((*(_self_))._field_s, (*(_self_))._field_lookup), (*(_140931_decl))._field_Size);;
		if ((_141321_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_20d087a39_IsConst(_141321_size.ptr())))) {
			_20d501b2e_pushErr(_self_, (*((*(_140931_decl))._field_Size))._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_20d4e1b85_Prim((*(_141321_size))._field_Kind.ptr()) == nullptr) || (!(_20b064a18_IsInt((*(_20d4e1b85_Prim((*(_141321_size))._field_Kind.ptr())))._field_Kind))))) {
			_20d501b2e_pushErr(_self_, (*((*(_140931_decl))._field_Size))._field_Token, jule::Str("array size must be integer", 26), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_141017_n=static_cast<jule::I64>(static_cast<jule::I64>(_20b067c91_AsI64((*(_141321_size))._field_Constant.ptr())));
		if ((_141017_n < 0LL)) {
			_20d501b2e_pushErr(_self_, (*((*(_140931_decl))._field_Elem))._field_Token, jule::Str("array size must be positive integer", 35), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _143121_max = _20b05d935_MaxI(jule::Str("int", 3));;
			if (((_20b056642_BitSize != 64LL) && (static_cast<jule::I64>(_141017_n) > _143121_max))) {
				_20d501b2e_pushErr(_self_, (*((*(_140931_decl))._field_Size))._field_Token, jule::Str("array with size @ overflows limit (@) of the system", 51), jule::Slice<jule::Any>::make({jule::Any(_20d4db047_constoa(&((*(_141321_size))._field_Constant)), &__jule_any_type4),jule::Any(_20b0550be_FmtInt(_143121_max, 10LL), &__jule_any_type4)}));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_20d4de28c_TypeKind> _144017_elem = _20d508a8c_checkDecl(_self_, &((*(_140931_decl))._field_Elem));;
	{
		
		if ((_144017_elem == nullptr)) {
			_case_begin_21244b03b:;
			{
				return nullptr;;
			}
		}
		else if (((_20d4e2955_Arr(_144017_elem.ptr()) != nullptr) && (*(_20d4e2955_Arr(_144017_elem.ptr())))._field_Auto)) {
			_case_begin_21244b0b3:;
			{
				_20d501b2e_pushErr(_self_, (*((*(_140931_decl))._field_Elem))._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_212443ad3:;
	};
	return jule::new_ptr<_20d4ed92d_Arr>(_20d4ed92d_Arr{._field_Auto=_20d36e0c8_AutoSized(_140931_decl.ptr()), ._field_N=_141017_n, ._field_Elem=_144017_elem});;
}



inline jule::Ptr<_20d4ecca1_Map> _20d5075e6_buildMap(_20d5013e2_typeChecker* _self_, jule::Ptr<_20d36e4b3_MapTypeDecl> _145831_decl) {
	jule::Bool _145913_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_145913_cycleRisk;
	});;
	jule::Ptr<_20d4de28c_TypeKind> _146317_key = _20d508a8c_checkDecl(_self_, &((*(_145831_decl))._field_Key));;
	if ((_146317_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_20d4de28c_TypeKind> _146817_val = _20d508a8c_checkDecl(_self_, &((*(_145831_decl))._field_Val));;
	if ((_146817_val == nullptr)) {
		return nullptr;;
	};
	if ((_20d4e2438_Enum(_146817_val.ptr()) != nullptr)) {
		_20d501b2e_pushErr(_self_, (*((*(_145831_decl))._field_Val))._field_Token, jule::Str("maps do not support enums as map key type", 41), jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_20d4ecca1_Map>(_20d4ecca1_Map{._field_Key=_146317_key, ._field_Val=_146817_val});;
}



inline jule::Ptr<_20d4ec201_Tuple> _20d507937_buildTuple(_20d5013e2_typeChecker* _self_, jule::Ptr<_20d36d1c6_TupleTypeDecl> _148233_decl) {
	jule::Slice<jule::Ptr<_20d4de28c_TypeKind>> _148317_types = jule::Slice<jule::Ptr<_20d4de28c_TypeKind>>::alloc(0LL, (*(_148233_decl))._field_Types.len());;
	{
		auto expr = &((*(_148233_decl))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212452086:;
		if (it != expr_end) {
			jule::Ptr<_20d36b999_TypeDecl> _148421_t = *it;
			{
				jule::Ptr<_20d4de28c_TypeKind> _148521_kind = _20d508a8c_checkDecl(_self_, &(_148421_t));;
				if ((_148521_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_20d4de28c_TypeKind>> &__jule_push_dest = _148317_types; __jule_push_dest.push(_148521_kind); };
			}
			_iter_next_212452086:;
			++it;
			goto _iter_begin_212452086;
		}
		_iter_end_212452086:;
	};
	return jule::new_ptr<_20d4ec201_Tuple>(_20d4ec201_Tuple{._field_Types=_148317_types});;
}



inline jule::Bool _20d507c78_checkFuncTypes(_20d5013e2_typeChecker* _self_, jule::Ptr<_20d3a5a49_FnIns>* _149538_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_149538_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212453e34:;
		if (it != expr_end) {
			jule::Ptr<_20d3a4a9d_ParamIns> _149621_p = *it;
			{
				(*(_149621_p))._field_Kind=_20d50874b_build(_self_, &((*((*((*((*(_149621_p))._field_Decl))._field_Kind))._field_Decl))._field_Kind));
				__jule_func_result=((*(_149621_p))._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_20d4437eb_checkFnParamKind((*(_self_))._field_s, &(_149621_p));
			}
			_iter_next_212453e34:;
			++it;
			goto _iter_begin_212453e34;
		}
		_iter_end_212453e34:;
	};
	if ((!(_20d3a30b8_IsVoid((*((*(_149538_f))))._field_Decl.ptr())))) {
		(*((*(_149538_f))))._field_Result=_20d50874b_build(_self_, &((*((*((*((*((*((*(_149538_f))))._field_Decl))._field_Result))._field_Kind))._field_Decl))._field_Kind));
		__jule_func_result = ((*((*(_149538_f))))._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_20d3a5a49_FnIns> _20d5080b9_buildFunc(_20d5013e2_typeChecker* _self_, jule::Ptr<_20d37d659_FnDecl> _151332_decl) {
	jule::Bool _151413_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_151413_cycleRisk;
	});;
	if (((*(_151332_decl))._field_Generics.len() > 0LL)) {
		_20d501b2e_pushErr(_self_, (*(_151332_decl))._field_Token, jule::Str("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20d3a2b45_Fn> _152317_f = _20d3ac215_buildFunc(_151332_decl);;
	jule::I64 _152513_n = (*((*(_self_))._field_s))._field_errors.len();;
	_20d44cae1_checkAnonFuncDecl((*(_self_))._field_s, &(_152317_f));
	if ((_152513_n != (*((*(_self_))._field_s))._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_20d3a5a49_FnIns> _153117_ins = _20d3a411e_instanceForce(_152317_f);;
	(*(_153117_ins))._field_Anon=true;
	jule::Bool _153413_ok = _20d507c78_checkFuncTypes(_self_, &(_153117_ins));;
	if ((!(_153413_ok))) {
		return nullptr;;
	};
	return _153117_ins;;
}



inline jule::Trait<_20d4ddcd6_Kind> _20d50840a_buildByNamespace(_20d5013e2_typeChecker* _self_, jule::Ptr<_20d36c747_NamespaceTypeDecl> _154239_decl) {
	jule::Str _154313_path = _20d50b0ab_buildLinkPathByTokens(&((*(_154239_decl))._field_Idents));;
	jule::Ptr<_20d414d94_ImportInfo> _154417_imp = _20d50e06a_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._20d50c354_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_20d414d94_ImportInfo>)>([=](jule::Ptr<_20d414d94_ImportInfo> _154452_imp) mutable -> jule::Bool {
		if ((((*(_154239_decl))._field_Idents.len() == 1LL) && ((*(_154452_imp))._field_Alias == _154313_path))) {
			return true;;
		};
		return (((*(_154452_imp))._field_LinkPath == _154313_path) && _20d4179ac_isAccessibleViaSelection(_154452_imp.ptr()));;
	}));;
	jule::Str _155113_selfIdent = jule::Str("self", 4);;
	if (((_154417_imp == nullptr) || (!(_20d4173d5_isLookupable(_154417_imp.ptr(), &(_155113_selfIdent)))))) {
		_20d501b2e_pushErr(_self_, (*(_154239_decl))._field_Idents[0LL], jule::Str("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_154313_path, &__jule_any_type4)}));
		return nullptr;;
	};
	_20d50202a_disallowBuiltin(_self_);
	jule::Trait<_20d50e06a_Lookup> _155817_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_20d50e06a_Lookup>(_154417_imp, 1);
	jule::Ptr<_20d4de28c_TypeKind> _156017_kind = _20d508a8c_checkDecl(_self_, &((*(_154239_decl))._field_Kind));;
	(*(_self_))._field_lookup=_155817_lookup;
	_20d501d2c_allowBuiltin(_self_);
	return jule::Trait<_20d4ddcd6_Kind>(_156017_kind, 19);;
}



inline jule::Ptr<_20d4de28c_TypeKind> _20d50874b_build(_20d5013e2_typeChecker* _self_, jule::Any* _156629_declKind) {
	jule::Trait<_20d4ddcd6_Kind> _156717_kind = nullptr;;
	{
		auto &_match_expr{ (*(_156629_declKind)) };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_212463e00:;
			{
				jule::Trait<_20d4ddcd6_Kind> _157021_t = _20d5059bd_buildIdent(_self_, (*(_156629_declKind)).cast_ptr<_20d36c0a4_IdentTypeDecl>(&__jule_any_type20));;
				if ((_157021_t != nullptr)) {
					_156717_kind=_157021_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_2124632b7:;
			{
				jule::Trait<_20d4ddcd6_Kind> _157521_t = _20d505d0e_buildSubIdent(_self_, (*(_156629_declKind)).cast_ptr<_20d36c3a1_SubIdentTypeDecl>(&__jule_any_type90));;
				if ((_157521_t != nullptr)) {
					_156717_kind=_157521_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_2124634b5:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_20d4eab39_Sptr> _158121_t = _20d506491_buildSptr(_self_, (*(_156629_declKind)).cast_ptr<_20d36ca44_SptrTypeDecl>(&__jule_any_type76));;
				if ((_158121_t != nullptr)) {
					_156717_kind=jule::Trait<_20d4ddcd6_Kind>(_158121_t, 21);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_21246352b:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_20d4ee401_Ptr> _158721_t = _20d506b23_buildPtr(_self_, (*(_156629_declKind)).cast_ptr<_20d36d4c3_PtrTypeDecl>(&__jule_any_type75));;
				if ((_158721_t != nullptr)) {
					_156717_kind=jule::Trait<_20d4ddcd6_Kind>(_158721_t, 26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_212463592:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_20d4eb60c_Slc> _159321_t = _20d506e64_buildSlc(_self_, (*(_156629_declKind)).cast_ptr<_20d36cdc9_SlcTypeDecl>(&__jule_any_type74));;
				if ((_159321_t != nullptr)) {
					_156717_kind=jule::Trait<_20d4ddcd6_Kind>(_159321_t, 22);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_212463608:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_20d4ed92d_Arr> _159921_t = _20d5072a5_buildArr(_self_, (*(_156629_declKind)).cast_ptr<_20d36dc65_ArrTypeDecl>(&__jule_any_type73));;
				if ((_159921_t != nullptr)) {
					_156717_kind=jule::Trait<_20d4ddcd6_Kind>(_159921_t, 25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type77) {
			_case_begin_212463ecc:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_20d4ecca1_Map> _160521_t = _20d5075e6_buildMap(_self_, (*(_156629_declKind)).cast_ptr<_20d36e4b3_MapTypeDecl>(&__jule_any_type77));;
				if ((_160521_t != nullptr)) {
					_156717_kind=jule::Trait<_20d4ddcd6_Kind>(_160521_t, 24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type78) {
			_case_begin_212464043:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_20d4ec201_Tuple> _161121_t = _20d507937_buildTuple(_self_, (*(_156629_declKind)).cast_ptr<_20d36d1c6_TupleTypeDecl>(&__jule_any_type78));;
				if ((_161121_t != nullptr)) {
					_156717_kind=jule::Trait<_20d4ddcd6_Kind>(_161121_t, 23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_2124640a9:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_20d3a5a49_FnIns> _161721_t = _20d5080b9_buildFunc(_self_, (*(_156629_declKind)).cast_ptr<_20d37d659_FnDecl>(&__jule_any_type14));;
				if ((_161721_t != nullptr)) {
					_156717_kind=jule::Trait<_20d4ddcd6_Kind>(_161721_t, 1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_212464120:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait<_20d4ddcd6_Kind> _162321_t = _20d50840a_buildByNamespace(_self_, (*(_156629_declKind)).cast_ptr<_20d36c747_NamespaceTypeDecl>(&__jule_any_type94));;
				if ((_162321_t != nullptr)) {
					_156717_kind=_162321_t;
				};
			}
		}
		else {
			_case_begin_21246344e:;
			{
				_20d501b2e_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_2124633e9:;
	};
	if ((_156717_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _156717_kind };
		
		if (_match_expr.type_is(true, 19)) {
			_case_begin_212471e0d:;
			{
				return _156717_kind.cast_ptr<_20d4de28c_TypeKind>(19);;
			}
		}
		else {
			_case_begin_2124643c8:;
			{
				jule::Ptr<_20d4de28c_TypeKind> _163821_tk = jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=_156717_kind});;
				{
					auto &_match_expr{ _156717_kind };
					
					if (_match_expr.type_is(true, 20)) {
						_case_begin_2124701a3:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_20d4de28c_TypeKind>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_163821_tk); };
								};
							};
						}
					}
					else if (_match_expr.type_is(true, 0)) {
						_case_begin_21247022a:;
						{
							jule::Ptr<_20d39066b_StructIns> _164521_s = _156717_kind.cast_ptr<_20d39066b_StructIns>(0);;
							if ((((*(_164521_s))._field_Decl != nullptr) && (*((*(_164521_s))._field_Decl))._field_Binded)) {
								(*(_163821_tk))._field_BindIdent=(*((*(_164521_s))._field_Decl))._field_Ident;
							};
						}
					}
					_match_end_21247013c:;
				};
				return _163821_tk;;
			}
		}
		_match_end_21246e218:;
	};
}



inline jule::Ptr<_20d4de28c_TypeKind> _20d508a8c_checkDecl(_20d5013e2_typeChecker* _self_, jule::Ptr<_20d36b999_TypeDecl>* _165433_decl) {
	jule::Ptr<_20d3510bb_Token> _165617_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*((*(_165433_decl))))._field_Token;
	jule::Ptr<_20d4de28c_TypeKind> _165917_kind = _20d50874b_build(_self_, &((*((*(_165433_decl))))._field_Kind));;
	(*(_self_))._field_errorToken=_165617_errorToken;
	return _165917_kind;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d5013e2_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "ignoredGenerics:" << _Src._field_ignoredGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "cycleRisk:" << _Src._field_cycleRisk << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__20d5094d8_prim(jule::Str* _168121_ident, jule::Ptr<_20d4e710d_Prim> _168133_t) {
	return ((*(_168133_t))._field_Kind == (*(_168121_ident)));;
}



inline jule::Bool static__20d50985c_exist(jule::Str* _168522_ident, jule::Ptr<_20d4de28c_TypeKind>* _168539_k) {
	{
		
		if ((_20d4e1b85_Prim((*(_168539_k)).ptr()) != nullptr)) {
			_case_begin_212476b16:;
			{
				return static__20d5094d8_prim(_168522_ident, _20d4e1b85_Prim((*(_168539_k)).ptr()));;
			}
		}
		else if ((_20d4e1e1b_Sptr((*(_168539_k)).ptr()) != nullptr)) {
			_case_begin_212476b8d:;
			{
				jule::Ptr<_20d4eab39_Sptr> _169021_sptr = _20d4e1e1b_Sptr((*(_168539_k)).ptr());;
				return static__20d50985c_exist(_168522_ident, &((*(_169021_sptr))._field_Elem));;
			}
		}
		else if ((_20d4e21a2_Ptr((*(_168539_k)).ptr()) != nullptr)) {
			_case_begin_212476e13:;
			{
				jule::Ptr<_20d4ee401_Ptr> _169321_ptr = _20d4e21a2_Ptr((*(_168539_k)).ptr());;
				return static__20d50985c_exist(_168522_ident, &((*(_169321_ptr))._field_Elem));;
			}
		}
		else if ((_20d4e2bdb_Slc((*(_168539_k)).ptr()) != nullptr)) {
			_case_begin_212476e79:;
			{
				jule::Ptr<_20d4eb60c_Slc> _169621_slc = _20d4e2bdb_Slc((*(_168539_k)).ptr());;
				return static__20d50985c_exist(_168522_ident, &((*(_169621_slc))._field_Elem));;
			}
		}
		else if ((_20d4e2955_Arr((*(_168539_k)).ptr()) != nullptr)) {
			_case_begin_212476ee0:;
			{
				jule::Ptr<_20d4ed92d_Arr> _169921_arr = _20d4e2955_Arr((*(_168539_k)).ptr());;
				return static__20d50985c_exist(_168522_ident, &((*(_169921_arr))._field_Elem));;
			}
		}
		else if ((_20d4e3725_Map((*(_168539_k)).ptr()) != nullptr)) {
			_case_begin_212477067:;
			{
				jule::Ptr<_20d4ecca1_Map> _170221_m = _20d4e3725_Map((*(_168539_k)).ptr());;
				return (static__20d50985c_exist(_168522_ident, &((*(_170221_m))._field_Key)) || static__20d50985c_exist(_168522_ident, &((*(_170221_m))._field_Val)));;
			}
		}
		else if ((_20d4e3208_Struct((*(_168539_k)).ptr()) != nullptr)) {
			_case_begin_2124770de:;
			{
				jule::Ptr<_20d39066b_StructIns> _170621_s = _20d4e3208_Struct((*(_168539_k)).ptr());;
				{
					auto expr = &((*(_170621_s))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21247da30:;
					if (it != expr_end) {
						jule::Ptr<_20d4dc8a6_InsGeneric> _170725_g = *it;
						{
							if (static__20d50985c_exist(_168522_ident, &((*(_170725_g))._field_Kind))) {
								return true;;
							};
						}
						_iter_next_21247da30:;
						++it;
						goto _iter_begin_21247da30;
					}
					_iter_end_21247da30:;
				};
				return false;;
			}
		}
		else if ((_20d4e2e72_Fn((*(_168539_k)).ptr()) != nullptr)) {
			_case_begin_2124771ee:;
			{
				jule::Ptr<_20d3a5a49_FnIns> _171421_f = _20d4e2e72_Fn((*(_168539_k)).ptr());;
				{
					auto expr = &((*(_171421_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_212480548:;
					if (it != expr_end) {
						jule::Ptr<_20d3a4a9d_ParamIns> _171525_p = *it;
						{
							if (_20d3a178c_IsSelf((*(_171525_p))._field_Decl.ptr())) {
								goto _iter_next_212480548;
							};
							if (static__20d50985c_exist(_168522_ident, &((*(_171525_p))._field_Kind))) {
								return true;;
							};
						}
						_iter_next_212480548:;
						++it;
						goto _iter_begin_212480548;
					}
					_iter_end_212480548:;
				};
				if (((*(_171421_f))._field_Result != nullptr)) {
					return static__20d50985c_exist(_168522_ident, &((*(_171421_f))._field_Result));;
				};
				return false;;
			}
		}
		else if ((_20d4e39ab_Tup((*(_168539_k)).ptr()) != nullptr)) {
			_case_begin_212477265:;
			{
				jule::Ptr<_20d4ec201_Tuple> _172821_tup = _20d4e39ab_Tup((*(_168539_k)).ptr());;
				{
					auto expr = &((*(_172821_tup))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_212482d86:;
					if (it != expr_end) {
						jule::Ptr<_20d4de28c_TypeKind> _172925_t = *it;
						{
							if (static__20d50985c_exist(_168522_ident, &(_172925_t))) {
								return true;;
							};
						}
						_iter_next_212482d86:;
						++it;
						goto _iter_begin_212482d86;
					}
					_iter_end_212482d86:;
				};
				return false;;
			}
		}
		else {
			_case_begin_2124769c3:;
			{
				return false;;
			}
		}
		_match_end_212476918:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20d509076_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20de98bad_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20dee071b_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _20dee171c_stop(_20dee10ac_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _20dee19a3_stopped(_20dee10ac_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _20dee1c39_finished(_20dee10ac_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _20dee1ec0_isLastSt(_20dee10ac_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _20dee2333_pushErr(_20dee10ac_scopeParser* _self_, jule::Ptr<_20d3510bb_Token> _18926_token, jule::Str _18941_fmt) {
	_20e00ec35_pushErr((*(_self_))._field_p.ptr(), _18926_token, _18941_fmt, jule::Slice<jule::Any>());
}



inline void _20dee2696_pushSuggestion(_20dee10ac_scopeParser* _self_, jule::Str _19433_fmt, jule::Slice<jule::Any> _19446_args) {
	_20e010098_pushSuggestion((*(_self_))._field_p.ptr(), _19433_fmt, _19446_args);
}



inline void _20dee294e_insertAsNext(_20dee10ac_scopeParser* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _19836_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_20dee071b_stmt>(_20dee071b_stmt{._field_tokens=(*(_19836_tokens)), });
}



inline jule::Ptr<_20dee071b_stmt> _20dee2bd5_next(_20dee10ac_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_20d37b9ba_ScopeTree> _20dee30d1_buildScope(_20dee10ac_scopeParser* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _20834_tokens, jule::Ptr<_20d3510bb_Token> _20856_end) {
	jule::Ptr<_20d37b9ba_ScopeTree> _20917_s = _20dede4a6_newScope();;
	(*(_20917_s))._field_Parent=(*(_self_))._field_s;
	(*(_20917_s))._field_End=_20856_end;
	_20dee10ac_scopeParser _21217_ssp = _20dee10ac_scopeParser{._field_p=(*(_self_))._field_p, };;
	_20deecb13_build(&_21217_ssp, _20834_tokens, &(_20917_s));
	return _20917_s;;
}



inline jule::Ptr<_20d37e737_VarDecl> _20dee3422_buildVarSt(_20dee10ac_scopeParser* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _21934_tokens) {
	jule::Ptr<_20d37e737_VarDecl> _22017_v = _20e012ab2_buildVar((*(_self_))._field_p, (*(_21934_tokens)));;
	(*(_22017_v))._field_Scope=(*(_self_))._field_s;
	return _22017_v;;
}



inline jule::Ptr<_20d37eb11_RetSt> _20dee3763_buildRetSt(_20dee10ac_scopeParser* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>> _22533_tokens) {
	jule::Ptr<_20d37eb11_RetSt> _22617_st = jule::new_ptr<_20d37eb11_RetSt>(_20d37eb11_RetSt{._field_Token=_22533_tokens[0LL], });;
	if ((_22533_tokens.len() > 1LL)) {
		_22533_tokens=_22533_tokens.slice(1LL);
		(*(_22617_st))._field_Expr=_20e0103d9_buildExpr((*(_self_))._field_p, &(_22533_tokens));
	};
	return _22617_st;;
}



inline jule::Ptr<_20d3802a4_Iter> _20dee3aa4_buildWhileNextIter(_20dee10ac_scopeParser* _self_, jule::Ptr<_20dee071b_stmt>* _23642_s) {
	jule::Ptr<_20d3802a4_Iter> _23717_it = jule::new_ptr<_20d3802a4_Iter>(_20d3802a4_Iter{._field_Token=(*((*(_23642_s))))._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _24017_tokens = (*((*(_23642_s))))._field_tokens.slice(1LL);;
	jule::Ptr<_20d380ace_WhileKind> _24117_kind = jule::new_ptr<_20d380ace_WhileKind>();;
	if ((_24017_tokens.len() > 0LL)) {
		(*(_24117_kind))._field_Expr=_20e0103d9_buildExpr((*(_self_))._field_p, &(_24017_tokens));
	};
	if (_20dee1ec0_isLastSt(_self_)) {
		_20dee2333_pushErr(_self_, (*(_23717_it))._field_Token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	_24017_tokens=(*(_20dee2bd5_next(_self_)))._field_tokens;
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _25317_stTokens = _20e00947c_getBlockExpr(&(_24017_tokens));;
	if ((_25317_stTokens.len() > 0LL)) {
		jule::Ptr<_20dee071b_stmt> _25521_stmt = jule::new_ptr<_20dee071b_stmt>(_20dee071b_stmt{._field_tokens=_25317_stTokens, ._field_terminated=(*((*(_23642_s))))._field_terminated});;
		(*(_24117_kind))._field_NextToken=_25317_stTokens[0LL];
		(*(_24117_kind))._field_Next=_20deec7a0_buildSt(_self_, &(_25521_stmt));
	};
	jule::I64 _26317_i = _25317_stTokens.len();;
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _26417_blockTokens = _20e00c66c_range(&(_26317_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_24017_tokens));;
	if ((_26417_blockTokens == nullptr)) {
		_20dee171c_stop(_self_);
		_20dee2333_pushErr(_self_, (*(_23717_it))._field_Token, jule::Str("body is not exist", 17));
		_20dee2696_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_26317_i < _24017_tokens.len())) {
		_20dee2333_pushErr(_self_, _24017_tokens[_26317_i], jule::Str("invalid syntax", 14));
	};
	(*(_23717_it))._field_Scope=_20dee30d1_buildScope(_self_, &(_26417_blockTokens), _24017_tokens[(_26317_i - 1LL)]);
	(*(_23717_it))._field_Kind=jule::Any(_24117_kind, &__jule_any_type38);
	return _23717_it;;
}



inline jule::Ptr<_20d380ace_WhileKind> _20dee3de5_buildWhileIterKind(_20dee10ac_scopeParser* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _28142_tokens) {
	return jule::new_ptr<_20d380ace_WhileKind>(_20d380ace_WhileKind{._field_Expr=_20e0103d9_buildExpr((*(_self_))._field_p, _28142_tokens), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>> _20dee4236_getRangeKindKeysTokens(_20dee10ac_scopeParser* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _28746_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>> _28818_vars;;
	jule::Slice<_22730be5e_Log> _28824_errs;;
	({
		__jule_tuple_ssx_20d3510bb_Token__jule_tuple_s_22730be5e_Log __jule_assign_result = _20e00cddc_parts(_28746_toks, static_cast<jule::U64>(5LLU), true);
		_28818_vars = __jule_assign_result.__jule_result_arg0;
		_28824_errs = __jule_assign_result.__jule_result_arg1;
	});
	((*((*(_self_))._field_p))._field_errors).append(_28824_errs);;
	return _28818_vars;;
}



inline jule::Ptr<_20d37e737_VarDecl> _20dee4577_buildRangeKindKey(_20dee10ac_scopeParser* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _29341_tokens) {
	if (((*(_29341_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_20d37e737_VarDecl> _29717_key = jule::new_ptr<_20d37e737_VarDecl>(_20d37e737_VarDecl{._field_Token=(*(_29341_tokens))[0LL], });;
	if (((*((*(_29717_key))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*(_29717_key))._field_Mutable=true;
		if (((*(_29341_tokens)).len() == 1LL)) {
			_20dee2333_pushErr(_self_, (*(_29717_key))._field_Token, jule::Str("invalid syntax", 14));
		};
		(*(_29717_key))._field_Token=(*(_29341_tokens))[1LL];
	} else if (((*(_29341_tokens)).len() > 1LL)) {
		_20dee2333_pushErr(_self_, (*(_29341_tokens))[1LL], jule::Str("invalid syntax", 14));
	};
	if (((*((*(_29717_key))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_20dee2333_pushErr(_self_, (*(_29717_key))._field_Token, jule::Str("invalid syntax", 14));
		_20dee2696_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_29717_key))._field_Ident=(*((*(_29717_key))._field_Token))._field_Kind;
	return _29717_key;;
}



inline jule::Slice<jule::Ptr<_20d37e737_VarDecl>> _20dee48b8_buildRangeKindKeys(_20dee10ac_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>>* _31842_parts) {
	jule::Slice<jule::Ptr<_20d37e737_VarDecl>> _31917_keys = nullptr;;
	{
		auto expr = _31842_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2126625a4:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_20d3510bb_Token>> _32021_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_20d37e737_VarDecl>> &__jule_push_dest = _31917_keys; __jule_push_dest.push(_20dee4577_buildRangeKindKey(_self_, &(_32021_tokens))); };
			}
			_iter_next_2126625a4:;
			++it;
			goto _iter_begin_2126625a4;
		}
		_iter_end_2126625a4:;
	};
	return _31917_keys;;
}



inline void _20dee4c2b_setupRangeKindKeysPlain(_20dee10ac_scopeParser* _self_, jule::Ptr<_20d3814d6_RangeKind>* _32647_rng, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _32669_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>> _32717_keyTokens = _20dee4236_getRangeKindKeysTokens(_self_, _32669_tokens);;
	if ((_32717_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_32717_keyTokens.len() > 2LL)) {
		_20dee2333_pushErr(_self_, (*((*(_32647_rng))))._field_InToken, jule::Str("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_20d37e737_VarDecl>> _33417_keys = _20dee48b8_buildRangeKindKeys(_self_, &(_32717_keyTokens));;
	(*((*(_32647_rng))))._field_KeyA=_33417_keys[0LL];
	if ((_33417_keys.len() > 1LL)) {
		(*((*(_32647_rng))))._field_KeyB=_33417_keys[1LL];
	};
}



inline void _20dee508e_setupRangeKindKeysExplicit(_20dee10ac_scopeParser* _self_, jule::Ptr<_20d3814d6_RangeKind>* _34150_rng, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _34172_tokens) {
	jule::I64 _34217_i = 0LL;;
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _34317_rang = _20e00c66c_range(&(_34217_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _34172_tokens);;
	if ((_34217_i < (*(_34172_tokens)).len())) {
		_20dee2333_pushErr(_self_, (*((*(_34150_rng))))._field_InToken, jule::Str("invalid syntax", 14));
	};
	_20dee4c2b_setupRangeKindKeysPlain(_self_, _34150_rng, &(_34317_rang));
}



inline void _20dee5402_setupRangeKindKeys(_20dee10ac_scopeParser* _self_, jule::Ptr<_20d3814d6_RangeKind>* _35042_rng, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _35064_tokens) {
	if (((*((*(_35064_tokens))[0LL]))._field_Id == static_cast<jule::U64>(74LLU))) {
		_20dee508e_setupRangeKindKeysExplicit(_self_, _35042_rng, _35064_tokens);
		return;;
	};
	_20dee4c2b_setupRangeKindKeysPlain(_self_, _35042_rng, _35064_tokens);
}



inline jule::Ptr<_20d3814d6_RangeKind> _20dee58a8_buildRangeIterKind(_20dee10ac_scopeParser* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _35842_var_tokens, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _35914_exprTokens, jule::Ptr<_20d3510bb_Token>* _35941_inToken) {
	jule::Ptr<_20d3814d6_RangeKind> _36017_rng = jule::new_ptr<_20d3814d6_RangeKind>(_20d3814d6_RangeKind{._field_InToken=(*(_35941_inToken)), });;
	if (((*(_35914_exprTokens)).len() == 0LL)) {
		_20dee2333_pushErr(_self_, (*(_36017_rng))._field_InToken, jule::Str("expression missing", 18));
		return _36017_rng;;
	};
	(*(_36017_rng))._field_Expr=_20e0103d9_buildExpr((*(_self_))._field_p, _35914_exprTokens);
	if (((*(_35842_var_tokens)).len() > 0LL)) {
		_20dee5402_setupRangeKindKeys(_self_, &(_36017_rng), _35842_var_tokens);
	};
	return _36017_rng;;
}



inline jule::Any _20dee5ca4_buildCommonIterKind(_20dee10ac_scopeParser* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _37443_tokens, jule::Ptr<_20d3510bb_Token>* _37462_err_tok) {
	jule::I64 _37517_braceN = 0LL;;
	{
		auto expr = _37443_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21266bd72:;
		if (it != expr_end) {
			jule::I64 _37614_i = it - expr->begin();
			jule::Ptr<_20d3510bb_Token> _37621_tok = *it;
			{
				{
					auto &_match_expr{ (*(_37621_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_21266cda6:;
						{
							(_37517_braceN)++;
							goto _iter_next_21266bd72;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_21266ce2d:;
						{
							(_37517_braceN)--;
						}
					}
					_match_end_21266ccda:;
				};
				if ((_37517_braceN != 0LL)) {
					goto _iter_next_21266bd72;
				};
				{
					auto &_match_expr{ (*(_37621_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(12LLU)) {
						_case_begin_21266c9bb:;
						{
							jule::Slice<jule::Ptr<_20d3510bb_Token>> _39325_declTokens = (*(_37443_tokens)).slice(0LL, _37614_i);;
							jule::Slice<jule::Ptr<_20d3510bb_Token>> _39425_exprTokens = (*(_37443_tokens)).slice((_37614_i + 1LL));;
							return jule::Any(_20dee58a8_buildRangeIterKind(_self_, &(_39325_declTokens), &(_39425_exprTokens), &(_37621_tok)), &__jule_any_type40);;
						}
					}
					_match_end_21266e391:;
				};
			}
			_iter_next_21266bd72:;
			++it;
			_37614_i++;
			goto _iter_begin_21266bd72;
		}
		_iter_end_21266bd72:;
	};
	return jule::Any(_20dee3de5_buildWhileIterKind(_self_, _37443_tokens), &__jule_any_type38);;
}



inline jule::Ptr<_20d3802a4_Iter> _20dee60e5_buildCommonIter(_20dee10ac_scopeParser* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>> _40138_tokens) {
	jule::Ptr<_20d3802a4_Iter> _40217_it = jule::new_ptr<_20d3802a4_Iter>(_20d3802a4_Iter{._field_Token=_40138_tokens[0LL], });;
	_40138_tokens=_40138_tokens.slice(1LL);
	if ((_40138_tokens.len() == 0LL)) {
		_20dee171c_stop(_self_);
		_20dee2333_pushErr(_self_, (*(_40217_it))._field_Token, jule::Str("body is not exist", 17));
		_20dee2696_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _41217_exprTokens = _20e00947c_getBlockExpr(&(_40138_tokens));;
	if ((_41217_exprTokens.len() > 0LL)) {
		(*(_40217_it))._field_Kind=_20dee5ca4_buildCommonIterKind(_self_, &(_41217_exprTokens), &((*(_40217_it))._field_Token));
	};
	jule::I64 _41617_i = _41217_exprTokens.len();;
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _41717_scopeTokens = _20e00c66c_range(&(_41617_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_40138_tokens));;
	if ((_41717_scopeTokens == nullptr)) {
		_20dee171c_stop(_self_);
		_20dee2333_pushErr(_self_, (*(_40217_it))._field_Token, jule::Str("body is not exist", 17));
		_20dee2696_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_41617_i < _40138_tokens.len())) {
		_20dee2333_pushErr(_self_, _40138_tokens[_41617_i], jule::Str("invalid syntax", 14));
	};
	(*(_40217_it))._field_Scope=_20dee30d1_buildScope(_self_, &(_41717_scopeTokens), _40138_tokens[(_41617_i - 1LL)]);
	return _40217_it;;
}



inline jule::Ptr<_20d3802a4_Iter> _20dee6436_buildIterSt(_20dee10ac_scopeParser* _self_, jule::Ptr<_20dee071b_stmt>* _43135_st) {
	if ((*((*(_43135_st))))._field_terminated) {
		return _20dee3aa4_buildWhileNextIter(_self_, _43135_st);;
	};
	return _20dee60e5_buildCommonIter(_self_, (*((*(_43135_st))))._field_tokens);;
}



inline jule::Ptr<_20d3818b0_BreakSt> _20dee6777_buildBreakSt(_20dee10ac_scopeParser* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _43836_tokens) {
	jule::Ptr<_20d3818b0_BreakSt> _43917_brk = jule::new_ptr<_20d3818b0_BreakSt>(_20d3818b0_BreakSt{._field_Token=(*(_43836_tokens))[0LL], });;
	if (((*(_43836_tokens)).len() > 1LL)) {
		if (((*((*(_43836_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_20dee2333_pushErr(_self_, (*(_43836_tokens))[1LL], jule::Str("invalid syntax", 14));
			_20dee2696_pushSuggestion(_self_, jule::Str("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_43917_brk))._field_Label=(*(_43836_tokens))[1LL];
			if (((*(_43836_tokens)).len() > 2LL)) {
				_20dee2333_pushErr(_self_, (*(_43836_tokens))[1LL], jule::Str("invalid syntax", 14));
			};
		};
	};
	return _43917_brk;;
}



inline jule::Ptr<_20d381c89_ContSt> _20dee6ab8_buildContSt(_20dee10ac_scopeParser* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _45635_tokens) {
	jule::Ptr<_20d381c89_ContSt> _45717_cont = jule::new_ptr<_20d381c89_ContSt>(_20d381c89_ContSt{._field_Token=(*(_45635_tokens))[0LL], });;
	if (((*(_45635_tokens)).len() > 1LL)) {
		if (((*((*(_45635_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_20dee2333_pushErr(_self_, (*(_45635_tokens))[1LL], jule::Str("invalid syntax", 14));
			_20dee2696_pushSuggestion(_self_, jule::Str("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_45717_cont))._field_Label=(*(_45635_tokens))[1LL];
			if (((*(_45635_tokens)).len() > 2LL)) {
				_20dee2333_pushErr(_self_, (*(_45635_tokens))[1LL], jule::Str("invalid syntax", 14));
			};
		};
	};
	return _45717_cont;;
}



inline jule::Ptr<_20d382240_If> _20dee6e09_buildIf(_20dee10ac_scopeParser* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _47431_tokens) {
	jule::Ptr<_20d382240_If> _47517_model = jule::new_ptr<_20d382240_If>(_20d382240_If{._field_Token=(*(_47431_tokens))[0LL], });;
	(*(_47431_tokens))=(*(_47431_tokens)).slice(1LL);
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _47917_exprTokens = _20e00947c_getBlockExpr(_47431_tokens);;
	jule::I64 _48017_i = 0LL;;
	if ((_47917_exprTokens.len() == 0LL)) {
		_20dee2333_pushErr(_self_, (*(_47517_model))._field_Token, jule::Str("expression missing", 18));
	} else {
		_48017_i=static_cast<jule::I64>(_47917_exprTokens.len());
	};
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _48617_scopeTokens = _20e00c66c_range(&(_48017_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _47431_tokens);;
	if ((_48617_scopeTokens == nullptr)) {
		_20dee171c_stop(_self_);
		_20dee2333_pushErr(_self_, (*(_47517_model))._field_Token, jule::Str("body is not exist", 17));
		_20dee2696_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20d3510bb_Token> _49317_end = (*(_47431_tokens))[(_48017_i - 1LL)];;
	if ((_48017_i < (*(_47431_tokens)).len())) {
		if (((*((*(_47431_tokens))[_48017_i]))._field_Id == static_cast<jule::U64>(14LLU))) {
			(*(_47431_tokens))=(*(_47431_tokens)).slice(_48017_i);
		} else {
			_20dee2333_pushErr(_self_, (*(_47431_tokens))[_48017_i], jule::Str("invalid syntax", 14));
			(*(_47431_tokens))=nullptr;
		};
	};
	(*(_47517_model))._field_Expr=_20e0103d9_buildExpr((*(_self_))._field_p, &(_47917_exprTokens));
	(*(_47517_model))._field_Scope=_20dee30d1_buildScope(_self_, &(_48617_scopeTokens), _49317_end);
	return _47517_model;;
}



inline jule::Ptr<_20d382619_Else> _20dee724a_buildElse(_20dee10ac_scopeParser* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _50733_tokens) {
	jule::Ptr<_20d382619_Else> _50817_els = jule::new_ptr<_20d382619_Else>(_20d382619_Else{._field_Token=(*(_50733_tokens))[0LL], });;
	(*(_50733_tokens))=(*(_50733_tokens)).slice(1LL);
	jule::I64 _51217_i = 0LL;;
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _51317_scopeTokens = _20e00c66c_range(&(_51217_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _50733_tokens);;
	if ((_51317_scopeTokens == nullptr)) {
		if ((_51217_i < (*(_50733_tokens)).len())) {
			_20dee2333_pushErr(_self_, (*(_50817_els))._field_Token, jule::Str("else's cannot have any expression", 33));
		} else {
			_20dee171c_stop(_self_);
			_20dee2333_pushErr(_self_, (*(_50817_els))._field_Token, jule::Str("body is not exist", 17));
			_20dee2696_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_51217_i < (*(_50733_tokens)).len())) {
		_20dee2333_pushErr(_self_, (*(_50733_tokens))[_51217_i], jule::Str("invalid syntax", 14));
	};
	(*(_50817_els))._field_Scope=_20dee30d1_buildScope(_self_, &(_51317_scopeTokens), (*(_50733_tokens))[(_51217_i - 1LL)]);
	return _50817_els;;
}



inline jule::Ptr<_20d382ac0_Conditional> _20dee758b_buildIfElseChain(_20dee10ac_scopeParser* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>> _53139_tokens) {
	jule::Ptr<_20d382ac0_Conditional> _53217_chain = jule::new_ptr<_20d382ac0_Conditional>(_20d382ac0_Conditional{._field_Head=_20dee6e09_buildIf(_self_, &(_53139_tokens)), });;
	if (((*(_53217_chain))._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53139_tokens.len() != 0LL)) {
		{
			if (((*(_53139_tokens[0LL]))._field_Id != static_cast<jule::U64>(14LLU))) {
				goto _iter_end_212688c4b;
			};
			if (((_53139_tokens.len() > 1LL) && ((*(_53139_tokens[1LL]))._field_Id == static_cast<jule::U64>(13LLU)))) {
				_53139_tokens=_53139_tokens.slice(1LL);
				jule::Ptr<_20d382240_If> _54425_elif = _20dee6e09_buildIf(_self_, &(_53139_tokens));;
				{ jule::Slice<jule::Ptr<_20d382240_If>> &__jule_push_dest = (*(_53217_chain))._field_Tail; __jule_push_dest.push(_54425_elif); };
				goto _iter_next_212688c4b;
			};
			(*(_53217_chain))._field_Default=_20dee724a_buildElse(_self_, &(_53139_tokens));
			goto _iter_end_212688c4b;
		}
	_iter_next_212688c4b:;
	}
	_iter_end_212688c4b:;;
	return _53217_chain;;
}



inline jule::Ptr<_20d370ccd_Expr> _20dee78cc_buildCoCallSt(_20dee10ac_scopeParser* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>> _55436_tokens) {
	jule::Ptr<_20d3510bb_Token> _55513_token = _55436_tokens[0LL];;
	_55436_tokens=_55436_tokens.slice(1LL);
	jule::Ptr<_20d370ccd_Expr> _55717_e = _20e0103d9_buildExpr((*(_self_))._field_p, &(_55436_tokens));;
	if ((_55717_e == nullptr)) {
		return _55717_e;;
	};
	{
		auto &_match_expr{ (*(_55717_e))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type109) {
			_case_begin_21268d1a1:;
			{
				(*((*(_55717_e))._field_Kind.cast_ptr<_20d374a07_FnCallExpr>(&__jule_any_type109)))._field_IsCo=true;
			}
		}
		else {
			_case_begin_21268d723:;
			{
				_20dee2333_pushErr(_self_, _55513_token, jule::Str("statement must have function call expression", 44));
			}
		}
		_match_end_21268d6bd:;
	};
	return _55717_e;;
}



inline jule::Ptr<_20d379457_GotoSt> _20dee7c1d_buildGotoSt(_20dee10ac_scopeParser* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _57035_tokens) {
	jule::Ptr<_20d379457_GotoSt> _57117_gt = jule::new_ptr<_20d379457_GotoSt>(_20d379457_GotoSt{._field_Token=(*(_57035_tokens))[0LL], });;
	if (((*(_57035_tokens)).len() == 1LL)) {
		_20dee2333_pushErr(_self_, (*(_57117_gt))._field_Token, jule::Str("missing label identifier for goto statement", 43));
		return nullptr;;
	} else if (((*(_57035_tokens)).len() > 2LL)) {
		_20dee2333_pushErr(_self_, (*(_57035_tokens))[2LL], jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_20d3510bb_Token> _58017_identToken = (*(_57035_tokens))[1LL];;
	if (((*(_58017_identToken))._field_Id != static_cast<jule::U64>(1LLU))) {
		_20dee2333_pushErr(_self_, _58017_identToken, jule::Str("invalid syntax", 14));
		_20dee2696_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return _57117_gt;;
	};
	(*(_57117_gt))._field_Label=_58017_identToken;
	return _57117_gt;;
}



inline jule::Ptr<_20d379754_FallSt> _20dee805e_buildFallSt(_20dee10ac_scopeParser* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _59035_tokens) {
	jule::Ptr<_20d379754_FallSt> _59117_fll = jule::new_ptr<_20d379754_FallSt>(_20d379754_FallSt{._field_Token=(*(_59035_tokens))[0LL]});;
	if (((*(_59035_tokens)).len() > 1LL)) {
		_20dee2333_pushErr(_self_, (*(_59035_tokens))[1LL], jule::Str("invalid syntax", 14));
	};
	return _59117_fll;;
}



inline jule::Ptr<_20d38330c_TypeAliasDecl> _20dee83a0_buildTypeAliasSt(_20dee10ac_scopeParser* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _60040_tokens) {
	jule::Ptr<_20d38330c_TypeAliasDecl> _60117_tad = _20e011b7c_buildTypeAliasDecl((*(_self_))._field_p, _60040_tokens);;
	(*(_60117_tad))._field_Scope=(*(_self_))._field_s;
	return _60117_tad;;
}



inline void _20dee8878_pushCaseExpr(_20dee10ac_scopeParser* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>> _60635_tokens, jule::Ptr<_20d3510bb_Token> _60657_token, jule::Bool _6079_typeMatch, jule::Slice<jule::Ptr<_20d370ccd_Expr>>* _60731_exprs) {
	if ((_60635_tokens.len() == 0LL)) {
		return;;
	};
	if (_6079_typeMatch) {
		jule::I64 _61321_i = 0LL;;
		jule::Ptr<_20d36b999_TypeDecl> _61422_t;;
		jule::Bool _61425_ok = false;;
		({
			__jule_tuple_x_20d36b999_TypeDecl__jule_tuple_bool __jule_assign_result = _20e01183b_buildType((*(_self_))._field_p, &(_60635_tokens), (&(_61321_i)), true);
			_61422_t = __jule_assign_result.__jule_result_arg0;
			_61425_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_61425_ok) {
			{ jule::Slice<jule::Ptr<_20d370ccd_Expr>> &__jule_push_dest = (*(_60731_exprs)); __jule_push_dest.push(jule::new_ptr<_20d370ccd_Expr>(_20d370ccd_Expr{._field_Token=_60635_tokens[0LL], ._field_End=_60635_tokens[(_60635_tokens.len() - 1LL)], ._field_Kind=jule::Any(_61422_t, &__jule_any_type92)})); };
			if ((_61321_i < _60635_tokens.len())) {
				_20dee2333_pushErr(_self_, _60635_tokens[_61321_i], jule::Str("invalid syntax", 14));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_20d370ccd_Expr>> &__jule_push_dest = (*(_60731_exprs)); __jule_push_dest.push(_20e0103d9_buildExpr((*(_self_))._field_p, &(_60635_tokens))); };
}



inline jule::Slice<jule::Ptr<_20d370ccd_Expr>> _20dee8d2e_buildCaseExprs(_20dee10ac_scopeParser* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _63038_tokens, jule::Ptr<_20d3510bb_Token>* _63061_colon, jule::Bool _63076_typeMatch) {
	jule::Slice<jule::Ptr<_20d370ccd_Expr>> _63117_exprs = jule::Slice<jule::Ptr<_20d370ccd_Expr>>::alloc(0LL, 1LL);;
	jule::I64 _63317_braceN = 0LL;;
	jule::I64 _63417_j = 0LL;;
	{
		auto expr = _63038_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2126996a7:;
		if (it != expr_end) {
			jule::I64 _63514_i = it - expr->begin();
			jule::Ptr<_20d3510bb_Token> _63521_tok = *it;
			{
				{
					auto &_match_expr{ (*(_63521_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_21269b27a:;
						{
							(_63317_braceN)++;
							goto _iter_next_2126996a7;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_21269b302:;
						{
							(_63317_braceN)--;
							goto _iter_next_2126996a7;
						}
					}
					_match_end_21269b1ae:;
				};
				if ((_63317_braceN != 0LL)) {
					goto _iter_next_2126996a7;
				};
				{
					
					if (((*(_63521_tok))._field_Id == static_cast<jule::U64>(66LLU))) {
						_case_begin_21269c6aa:;
						{
							jule::Slice<jule::Ptr<_20d3510bb_Token>> _65421_exprTokens = (*(_63038_tokens)).slice(_63417_j, _63514_i);;
							if ((_65421_exprTokens.len() == 0LL)) {
								_20dee2333_pushErr(_self_, _63521_tok, jule::Str("expression missing", 18));
							} else {
								_20dee8878_pushCaseExpr(_self_, (*(_63038_tokens)).slice(_63417_j, _63514_i), _63521_tok, _63076_typeMatch, &(_63117_exprs));
							};
							_63417_j=static_cast<jule::I64>((_63514_i + 1LL));
						}
					}
					else if (((*(_63521_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
						_case_begin_21269c732:;
						{
							(*(_63061_colon))=_63521_tok;
							_20dee8878_pushCaseExpr(_self_, (*(_63038_tokens)).slice(_63417_j, _63514_i), _63521_tok, _63076_typeMatch, &(_63117_exprs));
							(*(_63038_tokens))=(*(_63038_tokens)).slice((_63514_i + 1LL));
							return _63117_exprs;;
						}
					}
					_match_end_21269c18d:;
				};
			}
			_iter_next_2126996a7:;
			++it;
			_63514_i++;
			goto _iter_begin_2126996a7;
		}
		_iter_end_2126996a7:;
	};
	_20dee2333_pushErr(_self_, (*(_63038_tokens))[0LL], jule::Str("invalid syntax", 14));
	(*(_63038_tokens))=nullptr;
	return nullptr;;
}



inline jule::Ptr<_20d37b9ba_ScopeTree> _20dee9170_buildCaseScope(_20dee10ac_scopeParser* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _67338_tokens) {
	jule::I64 _67417_n = 0LL;;
	for (;;) {
		{
			jule::I64 _67621_i = 0LL;;
			jule::Slice<jule::Ptr<_20d3510bb_Token>> _67722_next;;
			({
				__jule_tuple_sx_20d3510bb_Token__jule_tuple_bool __jule_assign_result = _20dee03db_skipSt(&(_67621_i), (*(_67338_tokens)).slice(_67417_n));
				_67722_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_67722_next.len() == 0LL)) {
				goto _iter_end_2126a0aed;
			};
			jule::Ptr<_20d3510bb_Token> _68117_tok = _67722_next[0LL];;
			if (((*(_68117_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_67417_n+=_67621_i;
				goto _iter_next_2126a0aed;
			};
			jule::Slice<jule::Ptr<_20d3510bb_Token>> _68621_scopeTokens = (*(_67338_tokens)).slice(0LL, _67417_n);;
			jule::Ptr<_20d37b9ba_ScopeTree> _68721_scope = _20dee30d1_buildScope(_self_, &(_68621_scopeTokens), (*(_67338_tokens))[_67417_n]);;
			(*(_67338_tokens))=(*(_67338_tokens)).slice(_67417_n);
			return _68721_scope;;
		}
	_iter_next_2126a0aed:;
	}
	_iter_end_2126a0aed:;;
	jule::Ptr<_20d3510bb_Token> _69117_end;;
	if (((*(_67338_tokens)).len() > 0LL)) {
		_69117_end=(*(_67338_tokens))[((*(_67338_tokens)).len() - 1LL)];
	};
	jule::Ptr<_20d37b9ba_ScopeTree> _69517_scope = _20dee30d1_buildScope(_self_, _67338_tokens, _69117_end);;
	(*(_67338_tokens))=nullptr;
	return _69517_scope;;
}



inline __jule_tuple_x_20d3837b3_Case__jule_tuple_bool _20dee956b_buildCase(_20dee10ac_scopeParser* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _70033_tokens, jule::Bool _70051_typeMatch) {
	__jule_tuple_x_20d3837b3_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_20d3837b3_Case> _70117_c = jule::new_ptr<_20d3837b3_Case>(_20d3837b3_Case{._field_Token=(*(_70033_tokens))[0LL], });;
	(*(_70033_tokens))=(*(_70033_tokens)).slice(1LL);
	jule::Ptr<_20d3510bb_Token> _70517_colon = nullptr;;
	(*(_70117_c))._field_Exprs=_20dee8d2e_buildCaseExprs(_self_, _70033_tokens, &(_70517_colon), _70051_typeMatch);
	(*(_70117_c))._field_Scope=_20dee9170_buildCaseScope(_self_, _70033_tokens);
	if (((*((*(_70117_c))._field_Scope))._field_End == nullptr)) {
		(*((*(_70117_c))._field_Scope))._field_End=_70517_colon;
	};
	jule::Bool _71113_isDefault = ((*(_70117_c))._field_Exprs.len() == 0LL);;
	__jule_func_result.__jule_result_arg0 = _70117_c;
	__jule_func_result.__jule_result_arg1 = _71113_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_20d3837b3_Case__jule_tuple_x_20d382619_Else _20dee9967_buildCases(_20dee10ac_scopeParser* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>> _71533_tokens, jule::Bool _71551_typeMatch) {
	__jule_tuple_sx_20d3837b3_Case__jule_tuple_x_20d382619_Else __jule_func_result;
	jule::Slice<jule::Ptr<_20d3837b3_Case>> _71617_cases = nullptr;;
	jule::Ptr<_20d382619_Else> _71717_def = nullptr;;
	jule::Bool _71817_defNotLast = false;;
	while ((_71533_tokens.len() > 0LL)) {
		{
			jule::Ptr<_20d3510bb_Token> _72021_tok = _71533_tokens[0LL];;
			if (((*(_72021_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_20dee2333_pushErr(_self_, _72021_tok, jule::Str("invalid syntax", 14));
				goto _iter_end_2126a8a5c;
			};
			jule::Ptr<_20d3837b3_Case> _72522_c;;
			jule::Bool _72525_isDefault = false;;
			({
				__jule_tuple_x_20d3837b3_Case__jule_tuple_bool __jule_assign_result = _20dee956b_buildCase(_self_, &(_71533_tokens), _71551_typeMatch);
				_72522_c = __jule_assign_result.__jule_result_arg0;
				_72525_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72525_isDefault) {
				(*(_72522_c))._field_Token=_72021_tok;
				if ((_71717_def == nullptr)) {
					_71717_def=jule::new_ptr<_20d382619_Else>(_20d382619_Else{._field_Token=(*(_72522_c))._field_Token, ._field_Scope=(*(_72522_c))._field_Scope});
				} else {
					_20dee2333_pushErr(_self_, _72021_tok, jule::Str("invalid syntax", 14));
				};
			} else {
				_71817_defNotLast=(_71817_defNotLast || (_71717_def != nullptr));
				{ jule::Slice<jule::Ptr<_20d3837b3_Case>> &__jule_push_dest = _71617_cases; __jule_push_dest.push(_72522_c); };
			};
		}
	_iter_next_2126a8a5c:;
	}
	_iter_end_2126a8a5c:;;
	if (_71817_defNotLast) {
		_20dee2333_pushErr(_self_, (*(_71717_def))._field_Token, jule::Str("default case should be last case", 32));
	};
	__jule_func_result.__jule_result_arg0 = _71617_cases;
	__jule_func_result.__jule_result_arg1 = _71717_def;
	return __jule_func_result;;
}



inline jule::Ptr<_20d384000_MatchCase> _20dee9ca8_buildMatchCase(_20dee10ac_scopeParser* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>> _74937_tokens) {
	jule::Ptr<_20d384000_MatchCase> _75017_m = jule::new_ptr<_20d384000_MatchCase>(_20d384000_MatchCase{._field_Token=_74937_tokens[0LL], });;
	_74937_tokens=_74937_tokens.slice(1LL);
	if (((_74937_tokens.len() > 0LL) && ((*(_74937_tokens[0LL]))._field_Id == static_cast<jule::U64>(7LLU)))) {
		(*(_75017_m))._field_TypeMatch=true;
		_74937_tokens=_74937_tokens.slice(1LL);
	};
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _76017_exprTokens = _20e00947c_getBlockExpr(&(_74937_tokens));;
	if ((_76017_exprTokens.len() > 0LL)) {
		(*(_75017_m))._field_Expr=_20e0103d9_buildExpr((*(_self_))._field_p, &(_76017_exprTokens));
	} else if ((*(_75017_m))._field_TypeMatch) {
		_20dee2333_pushErr(_self_, (*(_75017_m))._field_Token, jule::Str("expression missing", 18));
	};
	jule::I64 _76717_i = _76017_exprTokens.len();;
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _76817_blockToks = _20e00c66c_range(&(_76717_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_74937_tokens));;
	if ((_76817_blockToks == nullptr)) {
		_20dee171c_stop(_self_);
		_20dee2333_pushErr(_self_, (*(_75017_m))._field_Token, jule::Str("body is not exist", 17));
		_20dee2696_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_76717_i < _74937_tokens.len())) {
		_20dee2333_pushErr(_self_, _74937_tokens[_76717_i], jule::Str("invalid syntax", 14));
	};
	(*(_75017_m))._field_End=_74937_tokens[(_76717_i - 1LL)];
	({
		__jule_tuple_sx_20d3837b3_Case__jule_tuple_x_20d382619_Else __jule_assign_result = _20dee9967_buildCases(_self_, _76817_blockToks, (*(_75017_m))._field_TypeMatch);
		(*(_75017_m))._field_Cases = __jule_assign_result.__jule_result_arg0;
		(*(_75017_m))._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _75017_m;;
}



inline jule::Ptr<_20d37b9ba_ScopeTree> _20deea0e9_buildScopeSt(_20dee10ac_scopeParser* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>> _78235_tokens) {
	jule::Bool _78317_isUnsafe = false;;
	jule::Bool _78417_isDeferred = false;;
	jule::Ptr<_20d3510bb_Token> _78517_token = _78235_tokens[0LL];;
	if (((*(_78517_token))._field_Id == static_cast<jule::U64>(31LLU))) {
		_78317_isUnsafe=true;
		_78235_tokens=_78235_tokens.slice(1LL);
		if ((_78235_tokens.len() == 0LL)) {
			_20dee2333_pushErr(_self_, _78517_token, jule::Str("invalid syntax", 14));
			return nullptr;;
		};
		_78517_token=_78235_tokens[0LL];
		if (((*(_78517_token))._field_Id == static_cast<jule::U64>(33LLU))) {
			_78417_isDeferred=true;
			_78235_tokens=_78235_tokens.slice(1LL);
			if ((_78235_tokens.len() == 0LL)) {
				_20dee2333_pushErr(_self_, _78517_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			};
		};
	} else if (((*(_78517_token))._field_Id == static_cast<jule::U64>(33LLU))) {
		_78417_isDeferred=true;
		_78235_tokens=_78235_tokens.slice(1LL);
		if ((_78235_tokens.len() == 0LL)) {
			_20dee2333_pushErr(_self_, _78517_token, jule::Str("invalid syntax", 14));
			return nullptr;;
		};
	};
	jule::I64 _81117_i = 0LL;;
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _81217_scopeTokens = _20e00c66c_range(&(_81117_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_78235_tokens));;
	if ((_81217_scopeTokens == nullptr)) {
		_20dee2333_pushErr(_self_, _78517_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	} else if ((_81117_i < _78235_tokens.len())) {
		_20dee2333_pushErr(_self_, _78235_tokens[_81117_i], jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_20d37b9ba_ScopeTree> _81917_scope = _20dee30d1_buildScope(_self_, &(_81217_scopeTokens), _78235_tokens[(_81117_i - 1LL)]);;
	(*(_81917_scope))._field_Unsafety=_78317_isUnsafe;
	(*(_81917_scope))._field_Deferred=_78417_isDeferred;
	return _81917_scope;;
}



inline jule::Ptr<_20d37907d_LabelSt> _20deea43a_buildLabelSt(_20dee10ac_scopeParser* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _82536_tokens) {
	jule::Ptr<_20d37907d_LabelSt> _82617_lbl = jule::new_ptr<_20d37907d_LabelSt>(_20d37907d_LabelSt{._field_Token=(*(_82536_tokens))[0LL], ._field_Ident=(*((*(_82536_tokens))[0LL]))._field_Kind});;
	if (((*(_82536_tokens)).len() > 2LL)) {
		(*(_82536_tokens))=(*(_82536_tokens)).slice(2LL);
		_20dee294e_insertAsNext(_self_, _82536_tokens);
	};
	return _82617_lbl;;
}



inline __jule_tuple__20d37b107_StmtData__jule_tuple_bool _20deea77b_buildIdSt(_20dee10ac_scopeParser* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _84033_tokens) {
	__jule_tuple__20d37b107_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_84033_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_20d3510bb_Token> _84517_token = (*(_84033_tokens))[1LL];;
	{
		auto &_match_expr{ (*(_84517_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_2126be39c:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_20deea43a_buildLabelSt(_self_, _84033_tokens), &__jule_any_type57);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_2126beba5:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_20e00aadd_assignInfo> _20deeaabc_buildAssignInfo(_20dee10ac_scopeParser* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _85439_tokens) {
	jule::Ptr<_20e00aadd_assignInfo> _85517_info = jule::new_ptr<_20e00aadd_assignInfo>(_20e00aadd_assignInfo{._field_ok=true});;
	jule::I64 _85817_braceN = 0LL;;
	{
		auto expr = _85439_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2126c1305:;
		if (it != expr_end) {
			jule::I64 _85914_i = it - expr->begin();
			jule::Ptr<_20d3510bb_Token> _85921_token = *it;
			{
				{
					auto &_match_expr{ (*(_85921_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_2126c2191:;
						{
							(_85817_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_2126c2218:;
						{
							(_85817_braceN)--;
						}
					}
					_match_end_2126c20c5:;
				};
				{
					
					if ((_85817_braceN > 0LL)) {
						_case_begin_2126c3082:;
						{
							goto _iter_next_2126c1305;
						}
					}
					else if (((!(_20d356027_IsAssignOp((*(_85921_token))._field_Id))) && ((*(_85921_token))._field_Id != static_cast<jule::U64>(38LLU)))) {
						_case_begin_2126c3109:;
						{
							goto _iter_next_2126c1305;
						}
					}
					_match_end_2126c300a:;
				};
				(*(_85517_info))._field_l=(*(_85439_tokens)).slice(0LL, _85914_i);
				if (((*(_85517_info))._field_l.len() == 0LL)) {
					(*(_85517_info))._field_ok=false;
				};
				(*(_85517_info))._field_setter=_85921_token;
				if (((_85914_i + 1LL) >= (*(_85439_tokens)).len())) {
					(*(_85517_info))._field_r=nullptr;
					(*(_85517_info))._field_ok=_20d355c5d_IsPostfixOp((*((*(_85517_info))._field_setter))._field_Id);
					goto _iter_end_2126c1305;
				};
				(*(_85517_info))._field_r=(*(_85439_tokens)).slice((_85914_i + 1LL));
				if (_20d355c5d_IsPostfixOp((*((*(_85517_info))._field_setter))._field_Id)) {
					if (((*(_85517_info))._field_r.len() > 0LL)) {
						_20dee2333_pushErr(_self_, (*(_85517_info))._field_r[0LL], jule::Str("invalid syntax", 14));
						(*(_85517_info))._field_r=nullptr;
					};
				};
				goto _iter_end_2126c1305;
			}
			_iter_next_2126c1305:;
			++it;
			_85914_i++;
			goto _iter_begin_2126c1305;
		}
		_iter_end_2126c1305:;
	};
	return _85517_info;;
}



inline jule::Ptr<_20d379db4_AssignLeft> _20deeae0d_buildAssignL(_20dee10ac_scopeParser* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _89936_tokens) {
	jule::Ptr<_20d379db4_AssignLeft> _90017_l = jule::new_ptr<_20d379db4_AssignLeft>(_20d379db4_AssignLeft{._field_Token=(*(_89936_tokens))[0LL], });;
	if (((*((*(_89936_tokens))[0LL]))._field_Id == static_cast<jule::U64>(1LLU))) {
		(*(_90017_l))._field_Ident=(*((*(_90017_l))._field_Token))._field_Kind;
	};
	(*(_90017_l))._field_Expr=_20e0103d9_buildExpr((*(_self_))._field_p, _89936_tokens);
	return _90017_l;;
}



inline jule::Slice<jule::Ptr<_20d379db4_AssignLeft>> _20deeb24e_buildAssignLs(_20dee10ac_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>>* _91037_parts) {
	jule::Slice<jule::Ptr<_20d379db4_AssignLeft>> _91117_lefts = nullptr;;
	{
		auto expr = _91037_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2126cab28:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_20d3510bb_Token>> _91221_part = *it;
			{
				jule::Ptr<_20d379db4_AssignLeft> _91321_l = _20deeae0d_buildAssignL(_self_, &(_91221_part));;
				{ jule::Slice<jule::Ptr<_20d379db4_AssignLeft>> &__jule_push_dest = _91117_lefts; __jule_push_dest.push(_91321_l); };
			}
			_iter_next_2126cab28:;
			++it;
			goto _iter_begin_2126cab28;
		}
		_iter_end_2126cab28:;
	};
	return _91117_lefts;;
}



inline __jule_tuple_x_20d37a447_AssignSt__jule_tuple_bool _20deeb590_buildPlainAssign(_20dee10ac_scopeParser* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _92040_tokens) {
	__jule_tuple_x_20d37a447_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_20e00aadd_assignInfo> _92117_info = _20deeaabc_buildAssignInfo(_self_, _92040_tokens);;
	if ((!((*(_92117_info))._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_20d37a447_AssignSt> _92617_assign = jule::new_ptr<_20d37a447_AssignSt>(_20d37a447_AssignSt{._field_Setter=(*(_92117_info))._field_setter, });;
	if (((*((*(_92117_info))._field_setter))._field_Id == static_cast<jule::U64>(38LLU))) {
		(*(_92617_assign))._field_Declarative=true;
		(*(_92617_assign))._field_Right=_20e0103d9_buildExpr((*(_self_))._field_p, &((*(_92117_info))._field_r));
		jule::Bool _93417_ok = _20deeb98b_buildDeclAssign1(_self_, &((*(_92117_info))._field_l), &(_92617_assign));;
		__jule_func_result.__jule_result_arg0 = _92617_assign;
		__jule_func_result.__jule_result_arg1 = _93417_ok;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>> _93818_parts;;
	jule::Slice<_22730be5e_Log> _93825_errs;;
	({
		__jule_tuple_ssx_20d3510bb_Token__jule_tuple_s_22730be5e_Log __jule_assign_result = _20e00cddc_parts(&((*(_92117_info))._field_l), static_cast<jule::U64>(5LLU), true);
		_93818_parts = __jule_assign_result.__jule_result_arg0;
		_93825_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_93825_errs.len() > 0LL)) {
		((*((*(_self_))._field_p))._field_errors).append(_93825_errs);;
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(*(_92617_assign))._field_Left=_20deeb24e_buildAssignLs(_self_, &(_93818_parts));
	if (((*(_92117_info))._field_r != nullptr)) {
		(*(_92617_assign))._field_Right=_20e0103d9_buildExpr((*(_self_))._field_p, &((*(_92117_info))._field_r));
	};
	__jule_func_result.__jule_result_arg0 = _92617_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Bool _20deeb98b_buildDeclAssign1(_20dee10ac_scopeParser* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _95240_lefts, jule::Ptr<_20d37a447_AssignSt>* _95262_assign) {
	jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>> _95418_parts;;
	jule::Slice<_22730be5e_Log> _95425_errs;;
	({
		__jule_tuple_ssx_20d3510bb_Token__jule_tuple_s_22730be5e_Log __jule_assign_result = _20e00cddc_parts(_95240_lefts, static_cast<jule::U64>(5LLU), true);
		_95418_parts = __jule_assign_result.__jule_result_arg0;
		_95425_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_95425_errs.len() > 0LL)) {
		((*((*(_self_))._field_p))._field_errors).append(_95425_errs);;
		return false;;
	};
	{
		auto expr = &(_95418_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2126d4549:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_20d3510bb_Token>> _96021_part = *it;
			{
				jule::Bool _96121_isMut = false;;
				jule::Bool _96221_isRef = false;;
				jule::Ptr<_20d3510bb_Token> _96417_token = _96021_part[0LL];;
				if (((*(_96417_token))._field_Id == static_cast<jule::U64>(32LLU))) {
					_96121_isMut=true;
					_96021_part=_96021_part.slice(1LL);
					if ((_96021_part.len() == 0LL)) {
						_20dee2333_pushErr(_self_, _96417_token, jule::Str("invalid syntax", 14));
						goto _iter_next_2126d4549;
					};
				};
				if (((*(_96021_part[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
					_96221_isRef=true;
					_96021_part=_96021_part.slice(1LL);
					if ((_96021_part.len() == 0LL)) {
						_20dee2333_pushErr(_self_, _96417_token, jule::Str("invalid syntax", 14));
						goto _iter_next_2126d4549;
					};
				};
				if ((((*(_96021_part[0LL]))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(_96021_part[0LL]))._field_Id != static_cast<jule::U64>(74LLU)))) {
					_20dee2333_pushErr(_self_, _96417_token, jule::Str("invalid syntax", 14));
					goto _iter_next_2126d4549;
				};
				jule::Ptr<_20d379db4_AssignLeft> _98821_l = _20deeae0d_buildAssignL(_self_, &(_96021_part));;
				(*(_98821_l))._field_Mutable=_96121_isMut;
				(*(_98821_l))._field_Reference=_96221_isRef;
				{ jule::Slice<jule::Ptr<_20d379db4_AssignLeft>> &__jule_push_dest = (*((*(_95262_assign))))._field_Left; __jule_push_dest.push(_98821_l); };
			}
			_iter_next_2126d4549:;
			++it;
			goto _iter_begin_2126d4549;
		}
		_iter_end_2126d4549:;
	};
	return true;;
}



inline __jule_tuple_x_20d37a447_AssignSt__jule_tuple_bool _20deebccc_buildDeclAssign(_20dee10ac_scopeParser* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>> _99738_tokens) {
	__jule_tuple_x_20d37a447_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_99738_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_99738_tokens=_99738_tokens.slice(1LL);
	jule::Ptr<_20d3510bb_Token> _100317_token = _99738_tokens[0LL];;
	if (((*(_100317_token))._field_Id != static_cast<jule::U64>(74LLU))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_20d37a447_AssignSt> _100817_assign = jule::new_ptr<_20d37a447_AssignSt>(_20d37a447_AssignSt{._field_Declarative=true, });;
	jule::I64 _101217_i = 0LL;;
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _101317_rang = _20e00c66c_range(&(_101217_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_99738_tokens));;
	if ((_101317_rang == nullptr)) {
		_20dee2333_pushErr(_self_, _100317_token, jule::Str("invalid syntax", 14));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_101217_i + 1LL) < _99738_tokens.len())) {
		(*(_100817_assign))._field_Setter=_99738_tokens[_101217_i];
		if (((*((*(_100817_assign))._field_Setter))._field_Id != static_cast<jule::U64>(71LLU))) {
			_20dee2333_pushErr(_self_, (*(_100817_assign))._field_Setter, jule::Str("invalid syntax", 14));
		};
		(_101217_i)++;
		jule::Slice<jule::Ptr<_20d3510bb_Token>> _102321_exprTokens = _99738_tokens.slice(_101217_i);;
		(*(_100817_assign))._field_Right=_20e0103d9_buildExpr((*(_self_))._field_p, &(_102321_exprTokens));
	};
	jule::Bool _102713_ok = _20deeb98b_buildDeclAssign1(_self_, &(_101317_rang), &(_100817_assign));;
	__jule_func_result.__jule_result_arg0 = _100817_assign;
	__jule_func_result.__jule_result_arg1 = _102713_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_20d37a447_AssignSt__jule_tuple_bool _20deec11d_buildAssignSt(_20dee10ac_scopeParser* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _103137_tokens) {
	__jule_tuple_x_20d37a447_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_20e00ae95_checkAssignTokens(_103137_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_103137_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_2126e7a57:;
			{
				({
					__jule_tuple_x_20d37a447_AssignSt__jule_tuple_bool __jule_assign_result = _20deebccc_buildDeclAssign(_self_, (*(_103137_tokens)));
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_2126e765b:;
			{
				({
					__jule_tuple_x_20d37a447_AssignSt__jule_tuple_bool __jule_assign_result = _20deeb590_buildPlainAssign(_self_, _103137_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_2126e75e5:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_20d3716a2_UseExpr> _20deec45e_buildUseExpr(_20dee10ac_scopeParser* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _104636_tokens) {
	if (((*(_104636_tokens)).len() == 1LL)) {
		_20dee2333_pushErr(_self_, (*(_104636_tokens))[0LL], jule::Str("expression missing", 18));
		return nullptr;;
	};
	jule::Ptr<_20d3716a2_UseExpr> _105117_ue = jule::new_ptr<_20d3716a2_UseExpr>(_20d3716a2_UseExpr{._field_Token=(*(_104636_tokens))[0LL], });;
	(*(_104636_tokens))=(*(_104636_tokens)).slice(1LL);
	(*(_105117_ue))._field_Expr=_20e0103d9_buildExpr((*(_self_))._field_p, _104636_tokens);
	return _105117_ue;;
}



inline jule::Any _20deec7a0_buildSt(_20dee10ac_scopeParser* _self_, jule::Ptr<_20dee071b_stmt>* _105931_st) {
	jule::Ptr<_20d3510bb_Token> _106017_token = (*((*(_105931_st))))._field_tokens[0LL];;
	if (((*(_106017_token))._field_Id == static_cast<jule::U64>(1LLU))) {
		jule::Any _106222_s = jule::Any(nullptr);;
		jule::Bool _106225_ok = false;;
		({
			__jule_tuple__20d37b107_StmtData__jule_tuple_bool __jule_assign_result = _20deea77b_buildIdSt(_self_, &((*((*(_105931_st))))._field_tokens));
			_106222_s = __jule_assign_result.__jule_result_arg0;
			_106225_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_106225_ok) {
			return _106222_s;;
		};
	};
	jule::Ptr<_20d37a447_AssignSt> _106818_s;;
	jule::Bool _106821_ok = false;;
	({
		__jule_tuple_x_20d37a447_AssignSt__jule_tuple_bool __jule_assign_result = _20deec11d_buildAssignSt(_self_, &((*((*(_105931_st))))._field_tokens));
		_106818_s = __jule_assign_result.__jule_result_arg0;
		_106821_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_106821_ok) {
		return jule::Any(_106818_s, &__jule_any_type59);;
	};
	{
		auto &_match_expr{ (*(_106017_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_2126ed035:;
			{
				return jule::Any(_20deec45e_buildUseExpr(_self_, &((*((*(_105931_st))))._field_tokens)), &__jule_any_type64);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_2126ec9d5:;
			{
				return jule::Any(_20dee3422_buildVarSt(_self_, &((*((*(_105931_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_2126ed233:;
			{
				return jule::Any(_20dee3763_buildRetSt(_self_, (*((*(_105931_st))))._field_tokens), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_2126ed299:;
			{
				return jule::Any(_20dee6436_buildIterSt(_self_, _105931_st), &__jule_any_type55);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_2126ed310:;
			{
				return jule::Any(_20dee6777_buildBreakSt(_self_, &((*((*(_105931_st))))._field_tokens)), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_2126ed376:;
			{
				return jule::Any(_20dee6ab8_buildContSt(_self_, &((*((*(_105931_st))))._field_tokens)), &__jule_any_type56);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_2126ed3ed:;
			{
				return jule::Any(_20dee758b_buildIfElseChain(_self_, (*((*(_105931_st))))._field_tokens), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_2126ed475:;
			{
				return jule::Any(_20dee78cc_buildCoCallSt(_self_, (*((*(_105931_st))))._field_tokens), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(18LLU)) {
			_case_begin_2126ed4ec:;
			{
				return jule::Any(_20dee7c1d_buildGotoSt(_self_, &((*((*(_105931_st))))._field_tokens)), &__jule_any_type58);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_2126ed574:;
			{
				return jule::Any(_20dee805e_buildFallSt(_self_, &((*((*(_105931_st))))._field_tokens)), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_2126ed5eb:;
			{
				return jule::Any(_20dee83a0_buildTypeAliasSt(_self_, &((*((*(_105931_st))))._field_tokens)), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_2126ed673:;
			{
				return jule::Any(_20dee9ca8_buildMatchCase(_self_, (*((*(_105931_st))))._field_tokens), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU) || _match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_2126ed6ea:;
			{
				return jule::Any(_20deea0e9_buildScopeSt(_self_, (*((*(_105931_st))))._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_2126ed772:;
			{
				return jule::Any(_20deea0e9_buildScopeSt(_self_, (*((*(_105931_st))))._field_tokens), &__jule_any_type52);;
			}
		}
		_match_end_2126ecd48:;
	};
	jule::Ptr<_20d370ccd_Expr> _110717_expr = _20e0103d9_buildExpr((*(_self_))._field_p, &((*((*(_105931_st))))._field_tokens));;
	if ((_110717_expr != nullptr)) {
		return jule::Any(_110717_expr, &__jule_any_type53);;
	};
	_20dee2333_pushErr(_self_, _106017_token, jule::Str("invalid syntax", 14));
	return nullptr;;
}



inline void _20deecb13_build(_20dee10ac_scopeParser* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _111529_tokens, jule::Ptr<_20d37b9ba_ScopeTree>* _111552_s) {
	if (((*(_111552_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_20dee0ac3_splitStmts(_111529_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_111552_s));
	while (((!(_20dee1ec0_isLastSt(_self_))) && (!(_20dee1c39_finished(_self_))))) {
		{
			jule::Ptr<_20dee071b_stmt> _112321_st = _20dee2bd5_next(_self_);;
			jule::Any _112421_data = _20deec7a0_buildSt(_self_, &(_112321_st));;
			if ((_112421_data != nullptr)) {
				{ jule::Slice<_20d37b35a_Stmt> &__jule_push_dest = (*((*(_self_))._field_s))._field_Stmts; __jule_push_dest.push(_20d37b35a_Stmt{._field_Token=(*(_112321_st))._field_tokens[0LL], ._field_Data=_112421_data}); };
			};
			if (_20dee19a3_stopped(_self_)) {
				goto _iter_end_21270778c;
			};
		}
	_iter_next_21270778c:;
	}
	_iter_end_21270778c:;;
}







std::ostream &operator<<(std::ostream &_Stream, _20dee10ac_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _20deede44_pushErr(_20deed680_exprBuilder* _self_, jule::Ptr<_20d3510bb_Token> _4526_token, jule::Str _4541_fmt, jule::Slice<jule::Any> _4554_args) {
	_20e00ec35_pushErr((*(_self_))._field_p.ptr(), _4526_token, _4541_fmt, _4554_args);
}



inline void _20deee2a7_pushSuggestion(_20deed680_exprBuilder* _self_, jule::Str _5033_fmt, jule::Slice<jule::Any> _5046_args) {
	_20e010098_pushSuggestion((*(_self_))._field_p.ptr(), _5033_fmt, _5046_args);
}



inline jule::Ptr<_20d37199e_TupleExpr> _20deee5e8_buildTuple(_20deed680_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>>* _5434_parts) {
	jule::Ptr<_20d37199e_TupleExpr> _5517_tuple = jule::new_ptr<_20d37199e_TupleExpr>(_20d37199e_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_20d370ccd_Expr>>::alloc(0LL, (*(_5434_parts)).len())});;
	{
		auto expr = _5434_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212726778:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_20d3510bb_Token>> _5821_part = *it;
			{
				{ jule::Slice<jule::Ptr<_20d370ccd_Expr>> &__jule_push_dest = (*(_5517_tuple))._field_Expr; __jule_push_dest.push(_20e0089dc_buildFromTokens(_self_, _5821_part)); };
			}
			_iter_next_212726778:;
			++it;
			goto _iter_begin_212726778;
		}
		_iter_end_212726778:;
	};
	return _5517_tuple;;
}



inline jule::Ptr<_20d371d78_LitExpr> _20deee939_buildLit(_20deed680_exprBuilder* _self_, jule::Ptr<_20d3510bb_Token> _6427_token) {
	return jule::new_ptr<_20d371d78_LitExpr>(_20d371d78_LitExpr{._field_Token=_6427_token, ._field_Value=(*(_6427_token))._field_Kind});;
}



inline jule::Any _20e0000bb_buildSingle(_20deed680_exprBuilder* _self_, jule::Ptr<_20d3510bb_Token> _7534_token) {
	{
		auto &_match_expr{ (*(_7534_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_212728901:;
			{
				return jule::Any(_20deee939_buildLit(_self_, _7534_token), &__jule_any_type103);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_212728978:;
			{
				return jule::Any(jule::new_ptr<_20d373264_VariadicExpr>(_20d373264_VariadicExpr{._field_Token=_7534_token, }), &__jule_any_type79);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(24LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_212728a00:;
			{
				return jule::Any(_20e009dc8_buildIdentExpr(&(_7534_token)), &__jule_any_type83);;
			}
		}
		_match_end_212728824:;
	};
	_20deede44_pushErr(_self_, _7534_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_20d372708_IdentExpr> _20e00040c_buildBindIdent(_20deed680_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _9238_tokens) {
	if (((*((*(_9238_tokens))[0LL]))._field_Id != static_cast<jule::U64>(27LLU))) {
		return nullptr;;
	} else if (((*((*(_9238_tokens))[1LL]))._field_Id != static_cast<jule::U64>(17LLU))) {
		_20deede44_pushErr(_self_, (*(_9238_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_20deee2a7_pushSuggestion(_self_, jule::Str("use dot (.) to access binded defines", 36), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20d3510bb_Token> _10017_token = (*(_9238_tokens))[2LL];;
	if (((*(_10017_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_20deede44_pushErr(_self_, (*(_9238_tokens))[2LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_20deee2a7_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20d372708_IdentExpr> _10617_expr = _20e009dc8_buildIdentExpr(&(_10017_token));;
	(*(_10617_expr))._field_Binded=true;
	return _10617_expr;;
}



inline jule::Ptr<_20d372d8a_UnaryExpr> _20e00074d_buildUnary(_20deed680_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>> _11133_tokens) {
	jule::Ptr<_20d3510bb_Token> _11217_op = _11133_tokens[0LL];;
	if ((_11133_tokens.len() == 1LL)) {
		_20deede44_pushErr(_self_, _11217_op, jule::Str("missing expression for unary operator", 37), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_20d351808_IsUnaryOp((*(_11217_op))._field_Id)))) {
		_20deede44_pushErr(_self_, _11217_op, jule::Str("invalid unary operator: @", 25), jule::Slice<jule::Any>::make({jule::Any((*(_11217_op))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	_11133_tokens=_11133_tokens.slice(1LL);
	return jule::new_ptr<_20d372d8a_UnaryExpr>(_20d372d8a_UnaryExpr{._field_Op=_11217_op, ._field_Expr=_20e0089dc_buildFromTokens(_self_, _11133_tokens)});;
}



inline jule::Ptr<_20d373de1_SubIdentExpr> _20e000a8e_buildObjSubIdent(_20deed680_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>> _13239_tokens) {
	jule::I64 _13317_i = (_13239_tokens.len() - 1LL);;
	jule::Ptr<_20d3510bb_Token> _13417_identToken = _13239_tokens[_13317_i];;
	(_13317_i)--;
	_13239_tokens=_13239_tokens.slice(0LL, _13317_i);
	if ((_13239_tokens.len() == 0LL)) {
		_20deede44_pushErr(_self_, _13417_identToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_20d373de1_SubIdentExpr>(_20d373de1_SubIdentExpr{._field_Expr=_20e0089dc_buildFromTokens(_self_, _13239_tokens), ._field_Ident=_13417_identToken});;
}



inline jule::Ptr<_20d373a17_NsSelectionExpr> _20e000dd0_buildNsSubIdent(_20deed680_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _14739_tokens) {
	jule::Ptr<_20d373a17_NsSelectionExpr> _14817_ns = jule::new_ptr<_20d373a17_NsSelectionExpr>();;
	{
		auto expr = _14739_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212734049:;
		if (it != expr_end) {
			jule::I64 _14914_i = it - expr->begin();
			jule::Ptr<_20d3510bb_Token> _14921_token = *it;
			{
				if (((_14914_i & 1LL) == 0LL)) {
					if (((*(_14921_token))._field_Id != static_cast<jule::U64>(1LLU))) {
						_20deede44_pushErr(_self_, _14921_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
						_20deee2a7_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					};
					{ jule::Slice<jule::Ptr<_20d3510bb_Token>> &__jule_push_dest = (*(_14817_ns))._field_Ns; __jule_push_dest.push(_14921_token); };
				} else if (((*(_14921_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_20deede44_pushErr(_self_, _14921_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					_20deee2a7_pushSuggestion(_self_, jule::Str("expected double colon \"::\"", 26), jule::Slice<jule::Any>());
				};
			}
			_iter_next_212734049:;
			++it;
			_14914_i++;
			goto _iter_begin_212734049;
		}
		_iter_end_212734049:;
	};
	(*(_14817_ns))._field_Ident=(*(_14817_ns))._field_Ns[((*(_14817_ns))._field_Ns.len() - 1LL)];
	(*(_14817_ns))._field_Ns=(*(_14817_ns))._field_Ns.slice(0LL, ((*(_14817_ns))._field_Ns.len() - 1LL));
	return _14817_ns;;
}



inline jule::Ptr<_20d36b999_TypeDecl> _20e001221_buildType(_20deed680_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _16633_tokens) {
	jule::I64 _16717_i = 0LL;;
	jule::Ptr<_20d36b999_TypeDecl> _16818_t;;
	jule::Bool _16821_ok = false;;
	({
		__jule_tuple_x_20d36b999_TypeDecl__jule_tuple_bool __jule_assign_result = _20e01183b_buildType((*(_self_))._field_p, _16633_tokens, (&(_16717_i)), false);
		_16818_t = __jule_assign_result.__jule_result_arg0;
		_16821_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_16821_ok))) {
		_20deede44_pushErr(_self_, (*(_16633_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_16717_i < (*(_16633_tokens)).len())) {
		_20deede44_pushErr(_self_, (*(_16633_tokens))[_16717_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _16818_t;;
}



inline jule::Any _20e001562_buildSubIdent(_20deed680_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _18037_tokens) {
	jule::I64 _18113_i = ((*(_18037_tokens)).len() - 2LL);;
	jule::Ptr<_20d3510bb_Token> _18213_token = (*(_18037_tokens))[_18113_i];;
	{
		auto &_match_expr{ (*(_18213_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(17LLU)) {
			_case_begin_21273b4a2:;
			{
				return jule::Any(_20e000a8e_buildObjSubIdent(_self_, (*(_18037_tokens))), &__jule_any_type89);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_21273baac:;
			{
				return jule::Any(_20e000dd0_buildNsSubIdent(_self_, _18037_tokens), &__jule_any_type93);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_21273bb23:;
			{
				return jule::Any(_20e001221_buildType(_self_, _18037_tokens), &__jule_any_type92);;
			}
		}
		_match_end_21273b99c:;
	};
	_20deede44_pushErr(_self_, _18213_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_20d373264_VariadicExpr> _20e0018a3_buildVariadic(_20deed680_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>> _19636_tokens) {
	jule::Ptr<_20d3510bb_Token> _19717_token = _19636_tokens[(_19636_tokens.len() - 1LL)];;
	_19636_tokens=_19636_tokens.slice(0LL, (_19636_tokens.len() - 1LL));
	return jule::new_ptr<_20d373264_VariadicExpr>(_20d373264_VariadicExpr{._field_Token=_19717_token, ._field_Expr=_20e0089dc_buildFromTokens(_self_, _19636_tokens)});;
}



inline jule::Ptr<_20d3710ca_RangeExpr> _20e001be4_buildBetweenParentheses(_20deed680_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>> _20546_tokens) {
	if ((_20546_tokens.len() == 2LL)) {
		_20deede44_pushErr(_self_, _20546_tokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		_20deee2a7_pushSuggestion(_self_, jule::Str("empty parentheses are not valid expression, must include an expression in range", 79), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_20546_tokens=_20546_tokens.slice(1LL, (_20546_tokens.len() - 1LL));
	return jule::new_ptr<_20d3710ca_RangeExpr>(_20d3710ca_RangeExpr{._field_Expr=_20e0089dc_buildFromTokens(_self_, _20546_tokens)});;
}



inline jule::Ptr<_20d37363d_CastExpr> _20e002035_tryBuildCast(_20deed680_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _21736_tokens) {
	jule::I64 _21817_rangeN = 0LL;;
	{
		auto expr = _21736_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212741b8e:;
		if (it != expr_end) {
			jule::I64 _21913_i = it - expr->begin();
			jule::Ptr<_20d3510bb_Token> _21916_token = *it;
			{
				{
					auto &_match_expr{ (*(_21916_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_212742981:;
						{
							(_21817_rangeN)++;
							goto _iter_next_212741b8e;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_212742a08:;
						{
							(_21817_rangeN)--;
						}
					}
					_match_end_2127428b5:;
				};
				if ((_21817_rangeN > 0LL)) {
					goto _iter_next_212741b8e;
				} else if (((_21913_i + 1LL) == (*(_21736_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_20d3510bb_Token>> _23821_typeTokens = (*(_21736_tokens)).slice(0LL, (_21913_i + 1LL));;
				jule::Slice<jule::Ptr<_20d3510bb_Token>> _23921_exprTokens = (*(_21736_tokens)).slice((_21913_i + 1LL));;
				if ((_23921_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_20d3510bb_Token> _24617_tok = _23921_exprTokens[0LL];;
				if (((*(_24617_tok))._field_Id != static_cast<jule::U64>(74LLU))) {
					return nullptr;;
				};
				jule::Ptr<_20d37363d_CastExpr> _25121_cast = jule::new_ptr<_20d37363d_CastExpr>(_20d37363d_CastExpr{});;
				if ((_23921_exprTokens.len() == 2LL)) {
					_20deede44_pushErr(_self_, _23921_exprTokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
					_20deee2a7_pushSuggestion(_self_, jule::Str("give an expression for casting", 30), jule::Slice<jule::Any>());
				};
				if ((_23821_typeTokens.len() == 2LL)) {
					_20deede44_pushErr(_self_, _23821_typeTokens[0LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
					_20deee2a7_pushSuggestion(_self_, jule::Str("type declaration expected for casting", 37), jule::Slice<jule::Any>());
				} else {
					_23821_typeTokens=_23821_typeTokens.slice(1LL, (_23821_typeTokens.len() - 1LL));
					jule::I64 _26525_typeIndex = 0LL;;
					jule::Ptr<_20d36b999_TypeDecl> _26626_t;;
					jule::Bool _26629_ok = false;;
					({
						__jule_tuple_x_20d36b999_TypeDecl__jule_tuple_bool __jule_assign_result = _20e01183b_buildType((*(_self_))._field_p, &(_23821_typeTokens), (&(_26525_typeIndex)), true);
						_26626_t = __jule_assign_result.__jule_result_arg0;
						_26629_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_26629_ok && (_26525_typeIndex < _23821_typeTokens.len()))) {
						_20deede44_pushErr(_self_, _23821_typeTokens[_26525_typeIndex], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					} else if ((!(_26629_ok))) {
						return _25121_cast;;
					};
					(*(_25121_cast))._field_Kind=_26626_t;
					if ((_23921_exprTokens.len() > 2LL)) {
						jule::I64 _27629_j = 0LL;;
						_20e00c66c_range(&(_27629_j), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_23921_exprTokens));
						if ((_27629_j < _23921_exprTokens.len())) {
							return nullptr;;
						};
						_23921_exprTokens=_23921_exprTokens.slice(0LL, _27629_j);
						(*(_25121_cast))._field_Expr=_20e0089dc_buildFromTokens(_self_, _23921_exprTokens);
					};
				};
				return _25121_cast;;
			}
			_iter_next_212741b8e:;
			++it;
			_21913_i++;
			goto _iter_begin_212741b8e;
		}
		_iter_end_212741b8e:;
	};
	return nullptr;;
}



inline void _20e002453_pushArg(_20deed680_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d370ccd_Expr>>* _29131_args, jule::Slice<jule::Ptr<_20d3510bb_Token>> _29150_tokens, jule::Ptr<_20d3510bb_Token> _29168_err_token) {
	if ((_29150_tokens.len() == 0LL)) {
		_20deede44_pushErr(_self_, _29168_err_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_20deee2a7_pushSuggestion(_self_, jule::Str("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_20d370ccd_Expr>> &__jule_push_dest = (*(_29131_args)); __jule_push_dest.push(_20e0089dc_buildFromTokens(_self_, _29150_tokens)); };
}



inline jule::Slice<jule::Ptr<_20d370ccd_Expr>> _20e002794_buildArgs(_20deed680_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>> _30032_tokens) {
	if ((_30032_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_20d370ccd_Expr>> _30617_args = nullptr;;
	jule::I64 _30717_last = 0LL;;
	jule::I64 _30817_rangeN = 0LL;;
	_30032_tokens=_30032_tokens.slice(1LL, (_30032_tokens.len() - 1LL));
	{
		auto expr = &(_30032_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21274eae2:;
		if (it != expr_end) {
			jule::I64 _31013_i = it - expr->begin();
			jule::Ptr<_20d3510bb_Token> _31016_token = *it;
			{
				{
					auto &_match_expr{ (*(_31016_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_212750bc0:;
						{
							(_30817_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_212750c47:;
						{
							(_30817_rangeN)--;
						}
					}
					_match_end_212750b04:;
				};
				if (((_30817_rangeN > 0LL) || ((*(_31016_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_21274eae2;
				};
				_20e002453_pushArg(_self_, &(_30617_args), _30032_tokens.slice(_30717_last, _31013_i), _31016_token);
				_30717_last=static_cast<jule::I64>((_31013_i + 1LL));
			}
			_iter_next_21274eae2:;
			++it;
			_31013_i++;
			goto _iter_begin_21274eae2;
		}
		_iter_end_21274eae2:;
	};
	if ((_30717_last < _30032_tokens.len())) {
		if ((_30717_last == 0LL)) {
			if ((_30032_tokens.len() > 0LL)) {
				_20e002453_pushArg(_self_, &(_30617_args), _30032_tokens.slice(_30717_last), _30032_tokens[_30717_last]);
			};
		} else {
			_20e002453_pushArg(_self_, &(_30617_args), _30032_tokens.slice(_30717_last), _30032_tokens[(_30717_last - 1LL)]);
		};
	};
	return _30617_args;;
}



inline jule::Ptr<_20d374a07_FnCallExpr> _20e00308b_buildFnCall(_20deed680_exprBuilder* _self_, jule::Ptr<_20d3510bb_Token>* _36635_token, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _36655_expr, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _36676_args) {
	return jule::new_ptr<_20d374a07_FnCallExpr>(_20d374a07_FnCallExpr{._field_Token=(*(_36635_token)), ._field_Expr=_20e0089dc_buildFromTokens(_self_, (*(_36655_expr))), ._field_Args=_20e002794_buildArgs(_self_, (*(_36676_args))), });;
}



inline jule::Any _20e0033cc_buildParenthesesRange(_20deed680_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _37445_tokens) {
	jule::Ptr<_20d3510bb_Token> _37517_token = (*(_37445_tokens))[0LL];;
	if (((*(_37517_token))._field_Id == static_cast<jule::U64>(74LLU))) {
		jule::Ptr<_20d37363d_CastExpr> _37721_expr = _20e002035_tryBuildCast(_self_, _37445_tokens);;
		if ((_37721_expr != nullptr)) {
			return jule::Any(_37721_expr, &__jule_any_type107);;
		};
	};
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _38218_exprTokens;;
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _38234_args_tokens;;
	({
		__jule_tuple_sx_20d3510bb_Token__jule_tuple_sx_20d3510bb_Token __jule_assign_result = _20e00c936_rangeLast(_37445_tokens);
		_38218_exprTokens = __jule_assign_result.__jule_result_arg0;
		_38234_args_tokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_38218_exprTokens.len() == 0LL)) {
		return jule::Any(_20e001be4_buildBetweenParentheses(_self_, _38234_args_tokens), &__jule_any_type102);;
	};
	return jule::Any(_20e00308b_buildFnCall(_self_, &(_37517_token), &(_38218_exprTokens), &(_38234_args_tokens)), &__jule_any_type109);;
}



inline jule::Ptr<_20d372252_UnsafeExpr> _20e00371d_buildUnsafeExpr(_20deed680_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>> _39138_tokens) {
	jule::Ptr<_20d3510bb_Token> _39217_token = _39138_tokens[0LL];;
	_39138_tokens=_39138_tokens.slice(1LL);
	jule::I64 _39417_i = 0LL;;
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _39517_rangeTokens = _20e00c66c_range(&(_39417_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_39138_tokens));;
	if ((_39517_rangeTokens.len() == 0LL)) {
		_20deede44_pushErr(_self_, _39138_tokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_20d372252_UnsafeExpr>(_20d372252_UnsafeExpr{._field_Token=_39217_token, ._field_Expr=_20e0089dc_buildFromTokens(_self_, _39517_rangeTokens)});;
}



inline jule::Ptr<_20d37d659_FnDecl> _20e003a5e_buildAnonFn(_20deed680_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _40635_tokens) {
	jule::Ptr<_20d37d659_FnDecl> _40717_f = _20e015e7d_buildFn((*(_self_))._field_p, _40635_tokens, false, false);;
	if ((!(_20d37d9bc_IsAnon(_40717_f.ptr())))) {
		_20deede44_pushErr(_self_, (*(_40717_f))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_20deee2a7_pushSuggestion(_self_, jule::Str("anonymous function expected, remove identifier of function", 58), jule::Slice<jule::Any>());
	};
	return _40717_f;;
}



inline jule::Any _20e003da0_buildUnsafe(_20deed680_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _41535_tokens) {
	{
		auto &_match_expr{ (*((*(_41535_tokens))[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_2127617e6:;
			{
				return jule::Any(_20e003a5e_buildAnonFn(_self_, _41535_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_212761d24:;
			{
				return jule::Any(_20e00371d_buildUnsafeExpr(_self_, (*(_41535_tokens))), &__jule_any_type104);;
			}
		}
		_match_end_212761c58:;
	};
}



inline void _20e0042bd_pushRangeLitPart(_20deed680_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>> _42539_part, jule::Ptr<_20d3510bb_Token> _4269_errorToken, jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>>* _42634_parts) {
	if ((_42539_part.len() == 0LL)) {
		_20deede44_pushErr(_self_, _4269_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_20deee2a7_pushSuggestion(_self_, jule::Str("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>> &__jule_push_dest = (*(_42634_parts)); __jule_push_dest.push(_42539_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>> _20e00460e_getBraceRangeLitExprParts(_20deed680_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>> _43648_tokens) {
	if ((_43648_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>> _44217_parts = nullptr;;
	jule::I64 _44417_last = 0LL;;
	jule::I64 _44517_rangeN = 0LL;;
	_43648_tokens=_43648_tokens.slice(1LL, (_43648_tokens.len() - 1LL));
	{
		auto expr = &(_43648_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21276592c:;
		if (it != expr_end) {
			jule::I64 _44713_i = it - expr->begin();
			jule::Ptr<_20d3510bb_Token> _44716_token = *it;
			{
				{
					auto &_match_expr{ (*(_44716_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_212766a0a:;
						{
							(_44517_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_212766a82:;
						{
							(_44517_rangeN)--;
						}
					}
					_match_end_21276693e:;
				};
				if (((_44517_rangeN > 0LL) || ((*(_44716_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_21276592c;
				};
				_20e0042bd_pushRangeLitPart(_self_, _43648_tokens.slice(_44417_last, _44713_i), _44716_token, &(_44217_parts));
				_44417_last=static_cast<jule::I64>((_44713_i + 1LL));
			}
			_iter_next_21276592c:;
			++it;
			_44713_i++;
			goto _iter_begin_21276592c;
		}
		_iter_end_21276592c:;
	};
	if ((_44417_last < _43648_tokens.len())) {
		if ((_44417_last == 0LL)) {
			if ((_43648_tokens.len() > 0LL)) {
				_20e0042bd_pushRangeLitPart(_self_, _43648_tokens.slice(_44417_last), _43648_tokens[_44417_last], &(_44217_parts));
			};
		} else {
			_20e0042bd_pushRangeLitPart(_self_, _43648_tokens.slice(_44417_last), _43648_tokens[(_44417_last - 1LL)], &(_44217_parts));
		};
	};
	return _44217_parts;;
}



inline jule::Ptr<_20d3754ec_FieldExprPair> _20e004950_buildFieldExprPair(_20deed680_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>> _47841_tokens) {
	if (((_47841_tokens.len() - 2LL) == 0LL)) {
		_20deede44_pushErr(_self_, _47841_tokens[1LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20d3754ec_FieldExprPair> _48317_pair = jule::new_ptr<_20d3754ec_FieldExprPair>(_20d3754ec_FieldExprPair{._field_Field=_47841_tokens[0LL], });;
	_47841_tokens=_47841_tokens.slice(2LL);
	(*(_48317_pair))._field_Expr=_20e0089dc_buildFromTokens(_self_, _47841_tokens);
	return _48317_pair;;
}



inline jule::Ptr<_20d370ccd_Expr> _20e004c91_buildStructLitExpr(_20deed680_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _49142_tokens) {
	jule::Ptr<_20d3510bb_Token> _49217_token = (*(_49142_tokens))[0LL];;
	if ((((*(_49217_token))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_49142_tokens)).len() > 1LL))) {
		_49217_token=(*(_49142_tokens))[1LL];
		if (((*(_49217_token))._field_Id == static_cast<jule::U64>(8LLU))) {
			return jule::new_ptr<_20d370ccd_Expr>(_20d370ccd_Expr{._field_Token=_49217_token, ._field_End=(*(_49142_tokens))[((*(_49142_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_20e004950_buildFieldExprPair(_self_, (*(_49142_tokens))), &__jule_any_type81)});;
		};
	};
	return _20e0089dc_buildFromTokens(_self_, (*(_49142_tokens)));;
}



inline jule::Slice<jule::Ptr<_20d370ccd_Expr>> _20e0050d2_buildStructLitExprs(_20deed680_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _50643_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>> _50717_parts = _20e00460e_getBraceRangeLitExprParts(_self_, (*(_50643_tokens)));;
	if ((_50717_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_20d370ccd_Expr>> _51217_pairs = jule::Slice<jule::Ptr<_20d370ccd_Expr>>::alloc(0LL, _50717_parts.len());;
	{
		auto expr = &(_50717_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2127700c9:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_20d3510bb_Token>> _51321_part = *it;
			{
				{ jule::Slice<jule::Ptr<_20d370ccd_Expr>> &__jule_push_dest = _51217_pairs; __jule_push_dest.push(_20e004c91_buildStructLitExpr(_self_, &(_51321_part))); };
			}
			_iter_next_2127700c9:;
			++it;
			goto _iter_begin_2127700c9;
		}
		_iter_end_2127700c9:;
	};
	return _51217_pairs;;
}



inline jule::Ptr<_20d375d27_StructLit> _20e005423_buildTypedStructLiteral(_20deed680_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>> _51946_tokens) {
	jule::I64 _52017_i = 0LL;;
	jule::Ptr<_20d36b999_TypeDecl> _52118_t;;
	jule::Bool _52121_ok = false;;
	({
		__jule_tuple_x_20d36b999_TypeDecl__jule_tuple_bool __jule_assign_result = _20e01183b_buildType((*(_self_))._field_p, &(_51946_tokens), (&(_52017_i)), true);
		_52118_t = __jule_assign_result.__jule_result_arg0;
		_52121_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_52121_ok))) {
		return nullptr;;
	} else if ((_52017_i >= _51946_tokens.len())) {
		_20deede44_pushErr(_self_, _51946_tokens[_52017_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_51946_tokens=_51946_tokens.slice(_52017_i);
	jule::Ptr<_20d3510bb_Token> _53013_token = _51946_tokens[0LL];;
	if (((*(_53013_token))._field_Id != static_cast<jule::U64>(72LLU))) {
		_20deede44_pushErr(_self_, _53013_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_20d375d27_StructLit>(_20d375d27_StructLit{._field_End=_51946_tokens[(_51946_tokens.len() - 1LL)], ._field_Kind=_52118_t, ._field_Exprs=_20e0050d2_buildStructLitExprs(_self_, &(_51946_tokens))});;
}



inline jule::Ptr<_20d370ccd_Expr> _20e005764_buildBraceLitPart(_20deed680_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _54341_tokens) {
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _54418_l;;
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _54425_r;;
	({
		__jule_tuple_sx_20d3510bb_Token__jule_tuple_sx_20d3510bb_Token __jule_assign_result = _20e009845_splitDelim(_54341_tokens, static_cast<jule::U64>(8LLU));
		_54418_l = __jule_assign_result.__jule_result_arg0;
		_54425_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_54418_l != nullptr)) {
		return jule::new_ptr<_20d370ccd_Expr>(_20d370ccd_Expr{._field_Token=(*(_54341_tokens))[0LL], ._field_End=(*(_54341_tokens))[((*(_54341_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_20d376b08_KeyValPair>(_20d376b08_KeyValPair{._field_Key=_20e0089dc_buildFromTokens(_self_, _54418_l), ._field_Val=_20e0089dc_buildFromTokens(_self_, _54425_r), ._field_Colon=(*(_54341_tokens))[_54418_l.len()]}), &__jule_any_type82)});;
	};
	return _20e0089dc_buildFromTokens(_self_, (*(_54341_tokens)));;
}



inline jule::Ptr<_20d3762cd_BraceLit> _20e005aa5_buildBraceLit(_20deed680_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _56037_tokens) {
	jule::Ptr<_20d3762cd_BraceLit> _56117_lit = jule::new_ptr<_20d3762cd_BraceLit>(_20d3762cd_BraceLit{._field_Token=(*(_56037_tokens))[0LL], ._field_End=(*(_56037_tokens))[((*(_56037_tokens)).len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>> _56617_parts = _20e00460e_getBraceRangeLitExprParts(_self_, (*(_56037_tokens)));;
	if ((_56617_parts == nullptr)) {
		return _56117_lit;;
	};
	(*(_56117_lit))._field_Exprs=jule::Slice<jule::Ptr<_20d370ccd_Expr>>::alloc(0LL, _56617_parts.len());
	{
		auto expr = &(_56617_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212779787:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_20d3510bb_Token>> _57221_part = *it;
			{
				{ jule::Slice<jule::Ptr<_20d370ccd_Expr>> &__jule_push_dest = (*(_56117_lit))._field_Exprs; __jule_push_dest.push(_20e005764_buildBraceLitPart(_self_, &(_57221_part))); };
			}
			_iter_next_212779787:;
			++it;
			goto _iter_begin_212779787;
		}
		_iter_end_212779787:;
	};
	return _56117_lit;;
}



inline jule::Any _20e005de6_buildBraceRange(_20deed680_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _57939_tokens) {
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _58018_exprTokens;;
	jule::I64 _58030_rangeN = 0;;
	({
		__jule_tuple_sx_20d3510bb_Token__jule_tuple_int __jule_assign_result = _20e00a192_getRangeExprTokens(_57939_tokens);
		_58018_exprTokens = __jule_assign_result.__jule_result_arg0;
		_58030_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_58018_exprTokens.len() == 0LL)) {
			_case_begin_21277a7ee:;
			{
				return jule::Any(_20e005aa5_buildBraceLit(_self_, _57939_tokens), &__jule_any_type110);;
			}
		}
		else if ((_58030_rangeN > 0LL)) {
			_case_begin_21277b129:;
			{
				_20deede44_pushErr(_self_, (*(_57939_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_21277a535:;
	};
	jule::Ptr<_20d3510bb_Token> _59113_elseToken = _58018_exprTokens[(_58018_exprTokens.len() - 1LL)];;
	if (((*(_58018_exprTokens[(_58018_exprTokens.len() - 1LL)]))._field_Id == static_cast<jule::U64>(14LLU))) {
		_58018_exprTokens=_58018_exprTokens.slice(0LL, (_58018_exprTokens.len() - 1LL));
		jule::Any _59421_d = _20e00835a_build(_self_, &(_58018_exprTokens));;
		if ((_59421_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _59421_d };
			
			if (_match_expr.type == &__jule_any_type109) {
				_case_begin_21277e319:;
				{
					(*(_57939_tokens))=(*(_57939_tokens)).slice((_58018_exprTokens.len() + 1LL));
					jule::I64 _60125_i = 0LL;;
					jule::Slice<jule::Ptr<_20d3510bb_Token>> _60225_rangeTokens = _20e00c66c_range(&(_60125_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _57939_tokens);;
					jule::Ptr<_20d374a07_FnCallExpr> _60325_model = _59421_d.cast_ptr<_20d374a07_FnCallExpr>(&__jule_any_type109);;
					if (_20d375112_Ignored(_60325_model.ptr())) {
						_20deede44_pushErr(_self_, _59113_elseToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
						_20deee2a7_pushSuggestion(_self_, jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72), jule::Slice<jule::Any>());
					};
					(*(_60325_model))._field_Exception=_20e010dce_buildScope((*(_self_))._field_p, &(_60225_rangeTokens), (*(_57939_tokens))[(_60125_i - 1LL)]);
					return _59421_d;;
				}
			}
			else {
				_case_begin_21277dcdb:;
				{
					_20deede44_pushErr(_self_, _58018_exprTokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_21277dc86:;
		};
	};
	{
		auto &_match_expr{ (*(_58018_exprTokens[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_2127832a7:;
			{
				return _20e003da0_buildUnsafe(_self_, _57939_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_2127838d4:;
			{
				return jule::Any(_20e003a5e_buildAnonFn(_self_, _57939_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_21278394a:;
			{
				return jule::Any(_20e005423_buildTypedStructLiteral(_self_, (*(_57939_tokens))), &__jule_any_type108);;
			}
		}
		else {
			_case_begin_21277e7c0:;
			{
				_20deede44_pushErr(_self_, _58018_exprTokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_212782c8a:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>> _20e006237_getEnumerableParts(_20deed680_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>> _63141_tokens) {
	_63141_tokens=_63141_tokens.slice(1LL, (_63141_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>> _63318_parts;;
	jule::Slice<_22730be5e_Log> _63325_errors;;
	({
		__jule_tuple_ssx_20d3510bb_Token__jule_tuple_s_22730be5e_Log __jule_assign_result = _20e00cddc_parts(&(_63141_tokens), static_cast<jule::U64>(5LLU), true);
		_63318_parts = __jule_assign_result.__jule_result_arg0;
		_63325_errors = __jule_assign_result.__jule_result_arg1;
	});
	((*((*(_self_))._field_p))._field_errors).append(_63325_errors);;
	return _63318_parts;;
}



inline jule::Ptr<_20d377301_SliceExpr> _20e006578_buildSlice(_20deed680_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>> _63833_tokens) {
	jule::Ptr<_20d377301_SliceExpr> _63917_slc = jule::new_ptr<_20d377301_SliceExpr>(_20d377301_SliceExpr{._field_Token=_63833_tokens[0LL], ._field_End=_63833_tokens[(_63833_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>> _64417_parts = _20e006237_getEnumerableParts(_self_, _63833_tokens);;
	if ((_64417_parts.len() == 0LL)) {
		return _63917_slc;;
	};
	(*(_63917_slc))._field_Exprs=jule::Slice<jule::Ptr<_20d370ccd_Expr>>::alloc(0LL, _64417_parts.len());
	{
		auto expr = &(_64417_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2127885dc:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_20d3510bb_Token>> _65021_p = *it;
			{
				if ((_65021_p.len() == 0LL)) {
					goto _iter_next_2127885dc;
				};
				{ jule::Slice<jule::Ptr<_20d370ccd_Expr>> &__jule_push_dest = (*(_63917_slc))._field_Exprs; __jule_push_dest.push(_20e0089dc_buildFromTokens(_self_, _65021_p)); };
			}
			_iter_next_2127885dc:;
			++it;
			goto _iter_begin_2127885dc;
		}
		_iter_end_2127885dc:;
	};
	return _63917_slc;;
}



inline jule::Ptr<_20d377c91_IndexingExpr> _20e006a2e_buildIndexing(_20deed680_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>> _66036_exprTokens, jule::Slice<jule::Ptr<_20d3510bb_Token>> _66113_tokens, jule::Ptr<_20d3510bb_Token> _66135_errorToken) {
	jule::Ptr<_20d3510bb_Token> _66217_end = _66113_tokens[(_66113_tokens.len() - 1LL)];;
	_66113_tokens=_66113_tokens.slice(1LL, (_66113_tokens.len() - 1LL));
	if ((_66113_tokens.len() == 0LL)) {
		_20deede44_pushErr(_self_, _66135_errorToken, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20d370ccd_Expr> _66817_expr = _20e0089dc_buildFromTokens(_self_, _66036_exprTokens);;
	if ((_66817_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_20d370ccd_Expr> _67217_index = _20e0089dc_buildFromTokens(_self_, _66113_tokens);;
	if ((_67217_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_20d377c91_IndexingExpr>(_20d377c91_IndexingExpr{._field_Token=_66135_errorToken, ._field_End=_66217_end, ._field_Expr=_66817_expr, ._field_Index=_67217_index});;
}



inline jule::Ptr<_20d378401_SlicingExpr> _20e00714a_buildSlicing(_20deed680_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _68436_exprTokens, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _68463_start, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _68514_to, jule::Ptr<_20d3510bb_Token>* _68533_errorToken, jule::Ptr<_20d3510bb_Token> _68557_end) {
	jule::Ptr<_20d378401_SlicingExpr> _68617_slc = jule::new_ptr<_20d378401_SlicingExpr>(_20d378401_SlicingExpr{._field_Token=(*(_68533_errorToken)), ._field_End=_68557_end, ._field_Expr=_20e0089dc_buildFromTokens(_self_, (*(_68436_exprTokens))), });;
	if (((*(_68463_start)).len() > 0LL)) {
		(*(_68617_slc))._field_Start=_20e0089dc_buildFromTokens(_self_, (*(_68463_start)));
	};
	if (((*(_68514_to)).len() > 0LL)) {
		(*(_68617_slc))._field_To=_20e0089dc_buildFromTokens(_self_, (*(_68514_to)));
	};
	return _68617_slc;;
}



inline jule::Any _20e00748b_buildBracketRange(_20deed680_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>> _70040_tokens) {
	jule::Ptr<_20d3510bb_Token> _70117_errorToken = _70040_tokens[0LL];;
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _70218_exprTokens;;
	jule::I64 _70230_rangeN = 0;;
	({
		__jule_tuple_sx_20d3510bb_Token__jule_tuple_int __jule_assign_result = _20e00a192_getRangeExprTokens(&(_70040_tokens));
		_70218_exprTokens = __jule_assign_result.__jule_result_arg0;
		_70230_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_70218_exprTokens.len() == 0LL)) {
		return jule::Any(_20e006578_buildSlice(_self_, _70040_tokens), &__jule_any_type97);;
	} else if ((_70230_rangeN > 0LL)) {
		_20deede44_pushErr(_self_, _70117_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_70040_tokens=_70040_tokens.slice(_70218_exprTokens.len());
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _71717_splitTokens = _70040_tokens.slice(1LL, (_70040_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _71818_start;;
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _71829_to;;
	({
		__jule_tuple_sx_20d3510bb_Token__jule_tuple_sx_20d3510bb_Token __jule_assign_result = _20e009845_splitDelim(&(_71717_splitTokens), static_cast<jule::U64>(8LLU));
		_71818_start = __jule_assign_result.__jule_result_arg0;
		_71829_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_71818_start != nullptr) || (_71829_to != nullptr))) {
		return jule::Any(_20e00714a_buildSlicing(_self_, &(_70218_exprTokens), &(_71818_start), &(_71829_to), &(_70117_errorToken), _70040_tokens[(_70040_tokens.len() - 1LL)]), &__jule_any_type106);;
	};
	return jule::Any(_20e006a2e_buildIndexing(_self_, _70218_exprTokens, _70040_tokens, _70117_errorToken), &__jule_any_type105);;
}



inline jule::Any _20e0077cc_buildExclRight(_20deed680_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _72538_tokens) {
	jule::Ptr<_20d3510bb_Token> _72613_token = (*(_72538_tokens))[((*(_72538_tokens)).len() - 1LL)];;
	(*(_72538_tokens))=(*(_72538_tokens)).slice(0LL, ((*(_72538_tokens)).len() - 1LL));
	jule::Any _72817_d = _20e00835a_build(_self_, _72538_tokens);;
	if ((_72817_d == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _72817_d };
		
		if (_match_expr.type == &__jule_any_type109) {
			_case_begin_2127960de:;
			{
				(*(_72817_d.cast_ptr<_20d374a07_FnCallExpr>(&__jule_any_type109)))._field_Exception=jule::new_ptr<_20d37b9ba_ScopeTree>(_20d37b9ba_ScopeTree{._field_Deferred=true, });
				return _72817_d;;
			}
		}
		_match_end_212795d69:;
	};
	_20deede44_pushErr(_self_, _72613_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _20e007b1d_buildData(_20deed680_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _74333_tokens) {
	{
		auto _match_expr{ (*(_74333_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_212797783:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_2127977e9:;
			{
				return _20e0000bb_buildSingle(_self_, (*(_74333_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_212797871:;
			{
				if (((*((*(_74333_tokens))[0LL]))._field_Id == static_cast<jule::U64>(27LLU))) {
					return jule::Any(_20e00040c_buildBindIdent(_self_, _74333_tokens), &__jule_any_type83);;
				};
			}
		}
		_match_end_212797596:;
	};
	jule::Ptr<_20d3510bb_Token> _75517_token = (*(_74333_tokens))[((*(_74333_tokens)).len() - 1LL)];;
	if (((*(_75517_token))._field_Id == static_cast<jule::U64>(39LLU))) {
		return jule::Any(_20e0018a3_buildVariadic(_self_, (*(_74333_tokens))), &__jule_any_type79);;
	};
	_75517_token=(*(_74333_tokens))[0LL];
	if (_20d351808_IsUnaryOp((*(_75517_token))._field_Id)) {
		if (((*(_74333_tokens)).len() > 1LL)) {
			_75517_token=(*(_74333_tokens))[1LL];
			if (((*(_75517_token))._field_Id == static_cast<jule::U64>(31LLU))) {
				return jule::Any(_20e001221_buildType(_self_, _74333_tokens), &__jule_any_type92);;
			};
		};
		return jule::Any(_20e00074d_buildUnary(_self_, (*(_74333_tokens))), &__jule_any_type91);;
	};
	if (((*(_74333_tokens)).len() >= 3LL)) {
		{
			auto &_match_expr{ (*(_75517_token))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
				_case_begin_21279c07e:;
				{
					if (((*(_74333_tokens)).len() > 3LL)) {
						jule::Ptr<_20d3510bb_Token> _78125_t = (*(_74333_tokens))[((*(_74333_tokens)).len() - 1LL)];;
						if (((*(_78125_t))._field_Id == static_cast<jule::U64>(75LLU))) {
							goto _match_end_21279bec4;
						};
					};
					jule::Ptr<_20d3510bb_Token> _78721_next = (*(_74333_tokens))[1LL];;
					if (((*(_78721_next))._field_Id != static_cast<jule::U64>(77LLU))) {
						goto _match_end_21279bec4;
					};
					return jule::Any(_20e001221_buildType(_self_, _74333_tokens), &__jule_any_type92);;
				}
			}
			_match_end_21279bec4:;
		};
	};
	_75517_token=(*(_74333_tokens))[((*(_74333_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ (*(_75517_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_2127a00a4:;
			{
				return _20e001562_buildSubIdent(_self_, _74333_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_2127a011a:;
			{
				return _20e0077cc_buildExclRight(_self_, _74333_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_2127a0181:;
			{
				return _20e0033cc_buildParenthesesRange(_self_, _74333_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_2127a01e7:;
			{
				return _20e005de6_buildBraceRange(_self_, _74333_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_2127a026e:;
			{
				return _20e00748b_buildBracketRange(_self_, (*(_74333_tokens)));;
			}
		}
		_match_end_21279eed8:;
	};
	if (((*(_75517_token))._field_Id == static_cast<jule::U64>(29LLU))) {
		return jule::Any(_20e001221_buildType(_self_, _74333_tokens), &__jule_any_type92);;
	};
	_20deede44_pushErr(_self_, _75517_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _20e008019_buildBinop(_20deed680_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _81834_tokens, jule::I64 _81852_i) {
	jule::Ptr<_20d3510bb_Token> _81917_op = (*(_81834_tokens))[_81852_i];;
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _82017_leftTokens = (*(_81834_tokens)).slice(0LL, _81852_i);;
	if ((_20e008da5_isTypeOp(&((*(_81917_op))._field_Id)) && _20e0091b3_isTypeRange(&(_82017_leftTokens)))) {
		return jule::Any(_20e001221_buildType(_self_, _81834_tokens), &__jule_any_type92);;
	};
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _82517_rightTokens = (*(_81834_tokens)).slice((_81852_i + 1LL));;
	if ((_82017_leftTokens.len() == 0LL)) {
		_20deede44_pushErr(_self_, (*(_81834_tokens))[_81852_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_20deee2a7_pushSuggestion(_self_, jule::Str("left operand expected for binary operator", 41), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_82517_rightTokens.len() == 0LL)) {
		_20deede44_pushErr(_self_, (*(_81834_tokens))[_81852_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_20deee2a7_pushSuggestion(_self_, jule::Str("right operand expected for binary operator", 42), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_20d374397_BinopExpr>(_20d374397_BinopExpr{._field_Left=_20e0089dc_buildFromTokens(_self_, _82017_leftTokens), ._field_Right=_20e0089dc_buildFromTokens(_self_, _82517_rightTokens), ._field_Op=_81917_op}), &__jule_any_type111);;
}



inline jule::Any _20e00835a_build(_20deed680_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _84329_tokens) {
	if (((*((*(_84329_tokens))[0LL]))._field_Id == static_cast<jule::U64>(37LLU))) {
		return jule::Any(_20e001221_buildType(_self_, _84329_tokens), &__jule_any_type92);;
	};
	jule::I64 _84713_i = _20e009b0e_findLowestPrecOp(_84329_tokens);;
	if ((_84713_i == -1LL)) {
		return _20e007b1d_buildData(_self_, _84329_tokens);;
	};
	return _20e008019_buildBinop(_self_, _84329_tokens, _84713_i);;
}



inline jule::Any _20e00869b_buildKind(_20deed680_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _85433_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>> _85518_parts;;
	jule::Slice<_22730be5e_Log> _85525_errors;;
	({
		__jule_tuple_ssx_20d3510bb_Token__jule_tuple_s_22730be5e_Log __jule_assign_result = _20e00cddc_parts(_85433_tokens, static_cast<jule::U64>(5LLU), true);
		_85518_parts = __jule_assign_result.__jule_result_arg0;
		_85525_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_85525_errors != nullptr)) {
		((*((*(_self_))._field_p))._field_errors).append(_85525_errors);;
		return nullptr;;
	} else if ((_85518_parts.len() > 1LL)) {
		return jule::Any(_20deee5e8_buildTuple(_self_, &(_85518_parts)), &__jule_any_type84);;
	};
	return _20e00835a_build(_self_, _85433_tokens);;
}



inline jule::Ptr<_20d370ccd_Expr> _20e0089dc_buildFromTokens(_20deed680_exprBuilder* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>> _86538_tokens) {
	if ((_86538_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _86917_kind = _20e00869b_buildKind(_self_, &(_86538_tokens));;
	if ((_86917_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_20d370ccd_Expr>(_20d370ccd_Expr{._field_Token=_86538_tokens[0LL], ._field_End=_86538_tokens[(_86538_tokens.len() - 1LL)], ._field_Kind=_86917_kind});;
}







std::ostream &operator<<(std::ostream &_Stream, _20deed680_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20e00aadd_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _20e00e581_stop(_20e00e284_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _20e00e817_stopped(_20e00e284_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _20e00ec35_pushErr(_20e00e284_parser* _self_, jule::Ptr<_20d3510bb_Token> _23626_token, jule::Str _23641_fmt, jule::Slice<jule::Any> _23654_args) {
	{ jule::Slice<_22730be5e_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_20e00d5d5_compilerErr(&(_23626_token), &(_23641_fmt), _23654_args)); };
}



inline void _20e010098_pushSuggestion(_20e00e284_parser* _self_, jule::Str _24133_fmt, jule::Slice<jule::Any> _24146_args) {
	{
		_20e00d97b_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _24133_fmt, _24146_args);
	};
}



inline jule::Ptr<_20d370ccd_Expr> _20e0103d9_buildExpr(jule::Ptr<_20e00e284_parser> _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _24534_tokens) {
	return _20e0089dc_buildFromTokens((*(_self_))._field_ep.ptr(), (*(_24534_tokens)));;
}



inline jule::Ptr<_20d36adb6_Directive> _20e01072a_buildDirective(_20e00e284_parser* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>> _24937_tokens) {
	if ((_24937_tokens.len() == 1LL)) {
		_20e00ec35_pushErr(_self_, _24937_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_24937_tokens[1LL]))._field_Column != ((*(_24937_tokens[0LL]))._field_Column + 1LL))) {
		_20e00ec35_pushErr(_self_, _24937_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_20d36adb6_Directive>(_20d36adb6_Directive{._field_Tag=_24937_tokens[1LL], ._field_Args=_24937_tokens.slice(2LL)});;
}



inline void _20e0109d3_pushDirective(_20e00e284_parser* _self_, jule::Ptr<_20d36adb6_Directive> _26436_d) {
	if ((_26436_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2127cec82:;
		if (it != expr_end) {
			jule::Ptr<_20d36adb6_Directive> _26916_pd = *it;
			{
				if (((*((*(_26436_d))._field_Tag))._field_Kind == (*((*(_26916_pd))._field_Tag))._field_Kind)) {
					return;;
				};
			}
			_iter_next_2127cec82:;
			++it;
			goto _iter_begin_2127cec82;
		}
		_iter_end_2127cec82:;
	};
	{ jule::Slice<jule::Ptr<_20d36adb6_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_26436_d); };
}



inline jule::Ptr<_20d37b9ba_ScopeTree> _20e010dce_buildScope(jule::Ptr<_20e00e284_parser> _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _27735_tokens, jule::Ptr<_20d3510bb_Token> _27757_end) {
	jule::Ptr<_20d37b9ba_ScopeTree> _27817_s = _20dede4a6_newScope();;
	(*(_27817_s))._field_End=_27757_end;
	_20dee10ac_scopeParser _28017_sp = _20dee10ac_scopeParser{._field_p=_self_, };;
	_20deecb13_build(&_28017_sp, _27735_tokens, &(_27817_s));
	return _27817_s;;
}



inline __jule_tuple_x_20d36b999_TypeDecl__jule_tuple_bool _20e011385__buildType(jule::Ptr<_20e00e284_parser> _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _28742_tokens, jule::I64* _28813_i, jule::Bool _28822_err) {
	__jule_tuple_x_20d36b999_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_20e0210ed_typeBuilder _28917_tb = _20e0210ed_typeBuilder{._field_p=_self_, ._field_tokens=(*(_28742_tokens)), ._field_i=_28813_i, ._field_err=_28822_err};;
	jule::Ptr<_20d36b999_TypeDecl> _29518_decl;;
	jule::Bool _29524_ok = false;;
	({
		__jule_tuple_x_20d36b999_TypeDecl__jule_tuple_bool __jule_assign_result = _20e0240ce_build(&_28917_tb);
		_29518_decl = __jule_assign_result.__jule_result_arg0;
		_29524_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _29518_decl;
	__jule_func_result.__jule_result_arg1 = _29524_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_20d36b999_TypeDecl__jule_tuple_bool _20e01183b_buildType(jule::Ptr<_20e00e284_parser> _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _30041_tokens, jule::I64* _30113_i, jule::Bool _30122_err) {
	__jule_tuple_x_20d36b999_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_20d3510bb_Token> _30213_token = (*(_30041_tokens))[(*(_30113_i))];;
	jule::Ptr<_20d36b999_TypeDecl> _30318_t;;
	jule::Bool _30321_ok = false;;
	({
		__jule_tuple_x_20d36b999_TypeDecl__jule_tuple_bool __jule_assign_result = _20e011385__buildType(_self_, _30041_tokens, _30113_i, _30122_err);
		_30318_t = __jule_assign_result.__jule_result_arg0;
		_30321_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_30122_err && (!(_30321_ok)))) {
		_20e00ec35_pushErr(_self_.ptr(), _30213_token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _30318_t;
	__jule_func_result.__jule_result_arg1 = _30321_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_20d38330c_TypeAliasDecl> _20e011b7c_buildTypeAliasDecl(jule::Ptr<_20e00e284_parser> _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _31043_tokens) {
	jule::I64 _31117_i = 1LL;;
	if ((_31117_i >= (*(_31043_tokens)).len())) {
		_20e00ec35_pushErr(_self_.ptr(), (*(_31043_tokens))[(_31117_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20d38330c_TypeAliasDecl> _31617_tad = jule::new_ptr<_20d38330c_TypeAliasDecl>(_20d38330c_TypeAliasDecl{._field_Token=(*(_31043_tokens))[1LL], ._field_Ident=(*((*(_31043_tokens))[1LL]))._field_Kind, });;
	jule::Ptr<_20d3510bb_Token> _32017_token = (*(_31043_tokens))[_31117_i];;
	if (((*(_32017_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_20e00ec35_pushErr(_self_.ptr(), _32017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_20e010098_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_31117_i)++;
	if ((_31117_i >= (*(_31043_tokens)).len())) {
		_20e00ec35_pushErr(_self_.ptr(), (*(_31043_tokens))[(_31117_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return _31617_tad;;
	};
	_32017_token=(*(_31043_tokens))[_31117_i];
	if (((*(_32017_token))._field_Id != static_cast<jule::U64>(8LLU))) {
		_20e00ec35_pushErr(_self_.ptr(), (*(_31043_tokens))[(_31117_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_20e010098_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18), jule::Slice<jule::Any>());
		return _31617_tad;;
	};
	(_31117_i)++;
	if ((_31117_i >= (*(_31043_tokens)).len())) {
		_20e00ec35_pushErr(_self_.ptr(), (*(_31043_tokens))[(_31117_i - 1LL)], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return _31617_tad;;
	};
	jule::Ptr<_20d36b999_TypeDecl> _34118_t;;
	jule::Bool _34121_ok = false;;
	({
		__jule_tuple_x_20d36b999_TypeDecl__jule_tuple_bool __jule_assign_result = _20e01183b_buildType(_self_, _31043_tokens, (&(_31117_i)), true);
		_34118_t = __jule_assign_result.__jule_result_arg0;
		_34121_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_31617_tad))._field_Kind=_34118_t;
	if ((_34121_ok && (_31117_i < (*(_31043_tokens)).len()))) {
		_20e00ec35_pushErr(_self_.ptr(), (*(_31043_tokens))[_31117_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_31617_tad))._field_Public=_20d432ee4_IsPub(&((*(_31617_tad))._field_Ident));
	return _31617_tad;;
}



inline void _20e011ee0_buildVarTypeAndExpr(jule::Ptr<_20e00e284_parser> _self_, jule::Ptr<_20d37e737_VarDecl>* _35044_v, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _35062_tokens) {
	jule::I64 _35117_i = 0LL;;
	jule::Ptr<_20d3510bb_Token> _35217_tok = (*(_35062_tokens))[_35117_i];;
	if (((*(_35217_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_35117_i)++;
		if (((_35117_i >= (*(_35062_tokens)).len()) || ((*((*(_35062_tokens))[_35117_i]))._field_Id == static_cast<jule::U64>(71LLU)))) {
			_20e00ec35_pushErr(_self_.ptr(), _35217_tok, jule::Str("type missing", 12), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_20d36b999_TypeDecl> _35922_t;;
		jule::Bool _35925_ok = false;;
		({
			__jule_tuple_x_20d36b999_TypeDecl__jule_tuple_bool __jule_assign_result = _20e01183b_buildType(_self_, _35062_tokens, (&(_35117_i)), true);
			_35922_t = __jule_assign_result.__jule_result_arg0;
			_35925_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_35925_ok) {
			(*((*(_35044_v))))._field_Kind=_35922_t;
			if ((_35117_i >= (*(_35062_tokens)).len())) {
				return;;
			};
			_35217_tok=(*(_35062_tokens))[_35117_i];
		};
	};
	if (((*(_35217_tok))._field_Id != static_cast<jule::U64>(71LLU))) {
		_20e00ec35_pushErr(_self_.ptr(), _35217_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _37417_exprTokens = (*(_35062_tokens)).slice((_35117_i + 1LL));;
	if ((_37417_exprTokens.len() == 0LL)) {
		_20e00ec35_pushErr(_self_.ptr(), _35217_tok, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_35044_v))))._field_Expr=_20e0103d9_buildExpr(_self_, &(_37417_exprTokens));
}



inline void _20e012353_buildVarCommon(jule::Ptr<_20e00e284_parser> _self_, jule::Ptr<_20d37e737_VarDecl>* _38239_v, jule::Slice<jule::Ptr<_20d3510bb_Token>> _38256_tokens) {
	(*((*(_38239_v))))._field_Token=_38256_tokens[0LL];
	if (((*((*((*(_38239_v))))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_20e00ec35_pushErr(_self_.ptr(), (*((*(_38239_v))))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_20e010098_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_38239_v))))._field_Ident=(*((*((*(_38239_v))))._field_Token))._field_Kind;
	(*((*(_38239_v))))._field_Public=_20d432ee4_IsPub(&((*((*(_38239_v))))._field_Ident));
	(*((*(_38239_v))))._field_Kind=nullptr;
	if ((_38256_tokens.len() > 1LL)) {
		_38256_tokens=_38256_tokens.slice(1LL);
		_20e011ee0_buildVarTypeAndExpr(_self_, _38239_v, &(_38256_tokens));
	};
}



inline void _20e012771_buildVarBegin(_20e00e284_parser* _self_, jule::Ptr<_20d37e737_VarDecl>* _39837_v, jule::I64* _39855_i, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _39864_tokens) {
	jule::Ptr<_20d3510bb_Token> _39913_tok = (*(_39864_tokens))[(*(_39855_i))];;
	{
		auto &_match_expr{ (*(_39913_tok))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_2127ea42e:;
			{
				(*((*(_39837_v))))._field_Statically=true;
				goto _case_begin_2127ea8b3;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_2127ea8b3:;
			{
				((*(_39855_i)))++;
				if (((*(_39855_i)) >= (*(_39864_tokens)).len())) {
					_20e00ec35_pushErr(_self_, _39913_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				if (((*((*(_39864_tokens))[(*(_39855_i))]))._field_Id == static_cast<jule::U64>(32LLU))) {
					(*((*(_39837_v))))._field_Mutable=true;
					((*(_39855_i)))++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_2127ea0ee:;
			{
				((*(_39855_i)))++;
				(*((*(_39837_v))))._field_Constant=true;
			}
		}
		else {
			_case_begin_2127ea088:;
			{
				_20e00ec35_pushErr(_self_, _39913_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_2127ea033:;
	};
	if (((*(_39855_i)) >= (*(_39864_tokens)).len())) {
		_20e00ec35_pushErr(_self_, _39913_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_20d37e737_VarDecl> _20e012ab2_buildVar(jule::Ptr<_20e00e284_parser> _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>> _42832_tokens) {
	jule::I64 _42917_i = 0LL;;
	jule::Ptr<_20d37e737_VarDecl> _43017_v = jule::new_ptr<_20d37e737_VarDecl>(_20d37e737_VarDecl{._field_Token=_42832_tokens[0LL], });;
	_20e012771_buildVarBegin(_self_.ptr(), &(_43017_v), &(_42917_i), &(_42832_tokens));
	if ((_42917_i >= _42832_tokens.len())) {
		return nullptr;;
	};
	_42832_tokens=_42832_tokens.slice(_42917_i);
	if (((*(_42832_tokens[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
		(*(_43017_v))._field_Reference=true;
		if ((_42832_tokens.len() == 1LL)) {
			return nullptr;;
		};
		_42832_tokens=_42832_tokens.slice(1LL);
	};
	_20e012353_buildVarCommon(_self_, &(_43017_v), _42832_tokens);
	return _43017_v;;
}



inline jule::Ptr<_20d378ba4_GenericDecl> _20e012e03_buildGeneric(jule::Ptr<_20e00e284_parser> _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _45037_tokens) {
	jule::Ptr<_20d378ba4_GenericDecl> _45117_g = jule::new_ptr<_20d378ba4_GenericDecl>(_20d378ba4_GenericDecl{._field_Token=(*(_45037_tokens))[0LL], });;
	if (((*((*(_45117_g))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_20e00ec35_pushErr(_self_.ptr(), (*(_45117_g))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_20e010098_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_45117_g))._field_Ident=(*((*(_45117_g))._field_Token))._field_Kind;
	if (((*(_45037_tokens)).len() > 1LL)) {
		if (((*((*(_45037_tokens))[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
			_20e00ec35_pushErr(_self_.ptr(), (*(_45037_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_45037_tokens)).len() == 2LL)) {
			_20e00ec35_pushErr(_self_.ptr(), (*(_45037_tokens))[1LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_20d3510bb_Token>> _46821_constraintTokens = (*(_45037_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>> _46922_parts;;
		jule::Slice<_22730be5e_Log> _46929_errors;;
		({
			__jule_tuple_ssx_20d3510bb_Token__jule_tuple_s_22730be5e_Log __jule_assign_result = _20e00cddc_parts(&(_46821_constraintTokens), static_cast<jule::U64>(66LLU), true);
			_46922_parts = __jule_assign_result.__jule_result_arg0;
			_46929_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_46929_errors.len() > 0LL)) {
			((*(_self_))._field_errors).append(_46929_errors);;
			return nullptr;;
		};
		(*(_45117_g))._field_Constraint=jule::new_ptr<_20d3786ed_Constraint>(_20d3786ed_Constraint{._field_Mask=jule::Slice<jule::Ptr<_20d36b999_TypeDecl>>::alloc(0LL, _46922_parts.len())});
		{
			auto expr = &(_46922_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2128070d9:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_20d3510bb_Token>> _47525_part = *it;
				{
					jule::I64 _47625_i = 0LL;;
					jule::Ptr<_20d36b999_TypeDecl> _47726_kind;;
					({
						__jule_tuple_x_20d36b999_TypeDecl__jule_tuple_bool __jule_assign_result = _20e01183b_buildType(_self_, &(_47525_part), (&(_47625_i)), true);
						_47726_kind = __jule_assign_result.__jule_result_arg0;
					});
					{ jule::Slice<jule::Ptr<_20d36b999_TypeDecl>> &__jule_push_dest = (*((*(_45117_g))._field_Constraint))._field_Mask; __jule_push_dest.push(_47726_kind); };
					if ((_47625_i < _47525_part.len())) {
						_20e00ec35_pushErr(_self_.ptr(), _47525_part[_47625_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				}
				_iter_next_2128070d9:;
				++it;
				goto _iter_begin_2128070d9;
			}
			_iter_end_2128070d9:;
		};
	};
	return _45117_g;;
}



inline jule::Slice<jule::Ptr<_20d378ba4_GenericDecl>> _20e0132ee_buildGenerics(jule::Ptr<_20e00e284_parser> _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _48738_tokens, jule::Ptr<_20d3510bb_Token>* _48757_errorToken) {
	if (((*(_48738_tokens)).len() == 0LL)) {
		_20e00ec35_pushErr(_self_.ptr(), (*(_48757_errorToken)), jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>> _49318_parts;;
	jule::Slice<_22730be5e_Log> _49325_errors;;
	({
		__jule_tuple_ssx_20d3510bb_Token__jule_tuple_s_22730be5e_Log __jule_assign_result = _20e00cddc_parts(_48738_tokens, static_cast<jule::U64>(5LLU), true);
		_49318_parts = __jule_assign_result.__jule_result_arg0;
		_49325_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_49325_errors.len() > 0LL)) {
		((*(_self_))._field_errors).append(_49325_errors);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_20d378ba4_GenericDecl>> _49917_generics = jule::Slice<jule::Ptr<_20d378ba4_GenericDecl>>::alloc(0LL, _49318_parts.len());;
	{
		auto expr = &(_49318_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21280ba06:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_20d3510bb_Token>> _50021_part = *it;
			{
				{ jule::Slice<jule::Ptr<_20d378ba4_GenericDecl>> &__jule_push_dest = _49917_generics; __jule_push_dest.push(_20e012e03_buildGeneric(_self_, &(_50021_part))); };
			}
			_iter_next_21280ba06:;
			++it;
			goto _iter_begin_21280ba06;
		}
		_iter_end_21280ba06:;
	};
	return _49917_generics;;
}



inline jule::Ptr<_20d37c207_ParamDecl> _20e013640_buildSelfParam(_20e00e284_parser* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>> _50737_tokens) {
	if ((_50737_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_20d37c207_ParamDecl> _51217_param = jule::new_ptr<_20d37c207_ParamDecl>();;
	jule::I64 _51517_i = 0LL;;
	if (((*(_50737_tokens[_51517_i]))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*(_51217_param))._field_Mutable=true;
		(_51517_i)++;
		if ((_51517_i >= _50737_tokens.len())) {
			_20e00ec35_pushErr(_self_, _50737_tokens[(_51517_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	_2240a0ad5_StrBuilder _52517_ident = static__2240a0e04_New(5LL);;
	if (((*(_50737_tokens[_51517_i]))._field_Id == static_cast<jule::U64>(65LLU))) {
		_2240a989c_WriteStr(&_52517_ident, jule::Str("&", 1));
		(_51517_i)++;
		if ((_51517_i >= _50737_tokens.len())) {
			_20e00ec35_pushErr(_self_, _50737_tokens[(_51517_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if (((*(_50737_tokens[_51517_i]))._field_Id == static_cast<jule::U64>(24LLU))) {
		_2240a989c_WriteStr(&_52517_ident, jule::Str("self", 4));
		(*(_51217_param))._field_Token=_50737_tokens[_51517_i];
		(_51517_i)++;
		if ((_51517_i < _50737_tokens.len())) {
			_20e00ec35_pushErr(_self_, _50737_tokens[_51517_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	};
	(*(_51217_param))._field_Ident=_2240aa194_Str(&_52517_ident);
	return _51217_param;;
}



inline void _20e013a5d_paramTypeBegin(_20e00e284_parser* _self_, jule::Ptr<_20d37c207_ParamDecl>* _54938_param, jule::I64* _54962_i, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _54971_tokens) {
	for (; ((*(_54962_i)) < (*(_54971_tokens)).len()); ((*(_54962_i)))++) {
		{
			jule::Ptr<_20d3510bb_Token> _55117_token = (*(_54971_tokens))[(*(_54962_i))];;
			if (((*(_55117_token))._field_Id != static_cast<jule::U64>(39LLU))) {
				return;;
			};
			if ((*((*(_54938_param))))._field_Variadic) {
				_20e00ec35_pushErr(_self_, _55117_token, jule::Str("define is already variadic", 26), jule::Slice<jule::Any>());
				goto _iter_next_212814d0b;
			};
			(*((*(_54938_param))))._field_Variadic=true;
		}
	_iter_next_212814d0b:;
	}
	_iter_end_212814d0b:;;
}



inline void _20e013dc1_buildParamType(jule::Ptr<_20e00e284_parser> _self_, jule::Ptr<_20d37c207_ParamDecl>* _56439_param, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _56463_tokens) {
	jule::I64 _56517_i = 0LL;;
	_20e013a5d_paramTypeBegin(_self_.ptr(), _56439_param, &(_56517_i), _56463_tokens);
	if ((_56517_i >= (*(_56463_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_20d36b999_TypeDecl__jule_tuple_bool __jule_assign_result = _20e01183b_buildType(_self_, _56463_tokens, (&(_56517_i)), true);
		(*((*(_56439_param))))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_56517_i < (*(_56463_tokens)).len())) {
		_20e00ec35_pushErr(_self_.ptr(), (*(_56463_tokens))[_56517_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _20e014234_buildParamBody(jule::Ptr<_20e00e284_parser> _self_, jule::Ptr<_20d37c207_ParamDecl>* _57739_param, jule::Slice<jule::Ptr<_20d3510bb_Token>> _57762_tokens) {
	jule::Ptr<_20d3510bb_Token> _57817_tok = _57762_tokens[0LL];;
	if ((_57762_tokens.len() == 1LL)) {
		(*((*(_57739_param))))._field_Ident=(*(_57817_tok))._field_Kind;
		return;;
	} else if ((_57762_tokens.len() < 3LL)) {
		_20e00ec35_pushErr(_self_.ptr(), _57817_tok, jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_57762_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
		(*((*(_57739_param))))._field_Ident=jule::Str("<anonymous>", 11);
		_20e013dc1_buildParamType(_self_, _57739_param, &(_57762_tokens));
		return;;
	};
	(*((*(_57739_param))))._field_Ident=(*(_57817_tok))._field_Kind;
	_57762_tokens=_57762_tokens.slice(2LL);
	_20e013dc1_buildParamType(_self_, _57739_param, &(_57762_tokens));
}



inline jule::Ptr<_20d37c207_ParamDecl> _20e014575_buildParam(jule::Ptr<_20e00e284_parser> _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>> _59734_tokens) {
	jule::Ptr<_20d37c207_ParamDecl> _59817_param = jule::new_ptr<_20d37c207_ParamDecl>(_20d37c207_ParamDecl{._field_Token=_59734_tokens[0LL], });;
	if (((*((*(_59817_param))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*(_59817_param))._field_Mutable=true;
		if ((_59734_tokens.len() == 1LL)) {
			_20e00ec35_pushErr(_self_.ptr(), _59734_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_59734_tokens=_59734_tokens.slice(1LL);
		(*(_59817_param))._field_Token=_59734_tokens[0LL];
	};
	if ((_59734_tokens.len() >= 3LL)) {
		if (((*((*(_59817_param))._field_Token))._field_Id == static_cast<jule::U64>(65LLU))) {
			if ((_59734_tokens.len() == 1LL)) {
				_20e00ec35_pushErr(_self_.ptr(), _59734_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if ((((*(_59734_tokens[1LL]))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_59734_tokens[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
				(*(_59817_param))._field_Reference=true;
				_59734_tokens=_59734_tokens.slice(1LL);
				(*(_59817_param))._field_Token=_59734_tokens[0LL];
			};
		};
	};
	if (((*((*(_59817_param))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		(*(_59817_param))._field_Ident=jule::Str("<anonymous>", 11);
		_20e013dc1_buildParamType(_self_, &(_59817_param), &(_59734_tokens));
	} else {
		_20e014234_buildParamBody(_self_, &(_59817_param), _59734_tokens);
	};
	return _59817_param;;
}



inline void _20e01482d_checkParams(_20e00e284_parser* _self_, jule::Slice<jule::Ptr<_20d37c207_ParamDecl>>* _64035_params) {
	{
		auto expr = _64035_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212824b73:;
		if (it != expr_end) {
			jule::Ptr<_20d37c207_ParamDecl> _64121_param = *it;
			{
				if ((_20d37c57b_IsSelf(_64121_param.ptr()) || ((*(_64121_param))._field_Kind != nullptr))) {
					goto _iter_next_212824b73;
				};
				if (((*(_64121_param))._field_Token == nullptr)) {
					_20e00ec35_pushErr(_self_, (*(_64121_param))._field_Token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
				} else {
					(*(_64121_param))._field_Kind=jule::new_ptr<_20d36b999_TypeDecl>(_20d36b999_TypeDecl{._field_Token=(*(_64121_param))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_20d36c0a4_IdentTypeDecl>(_20d36c0a4_IdentTypeDecl{._field_Token=(*(_64121_param))._field_Token, ._field_Ident=(*((*(_64121_param))._field_Token))._field_Kind, }), &__jule_any_type20)});
					(*(_64121_param))._field_Ident=jule::Str("<anonymous>", 11);
				};
			}
			_iter_next_212824b73:;
			++it;
			goto _iter_begin_212824b73;
		}
		_iter_end_212824b73:;
	};
}



inline jule::Slice<jule::Ptr<_20d37c207_ParamDecl>> _20e014c29_buildParams(jule::Ptr<_20e00e284_parser> _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _66036_tokens, jule::Bool _66054_method) {
	jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>> _66118_parts;;
	jule::Slice<_22730be5e_Log> _66125_errs;;
	({
		__jule_tuple_ssx_20d3510bb_Token__jule_tuple_s_22730be5e_Log __jule_assign_result = _20e00cddc_parts(_66036_tokens, static_cast<jule::U64>(5LLU), true);
		_66118_parts = __jule_assign_result.__jule_result_arg0;
		_66125_errs = __jule_assign_result.__jule_result_arg1;
	});
	((*(_self_))._field_errors).append(_66125_errs);;
	if ((_66118_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_20d37c207_ParamDecl>> _66717_params = nullptr;;
	if ((_66054_method && (_66118_parts.len() > 0LL))) {
		jule::Ptr<_20d37c207_ParamDecl> _66921_param = _20e013640_buildSelfParam(_self_.ptr(), _66118_parts[0LL]);;
		if (((_66921_param != nullptr) && _20d37c57b_IsSelf(_66921_param.ptr()))) {
			{ jule::Slice<jule::Ptr<_20d37c207_ParamDecl>> &__jule_push_dest = _66717_params; __jule_push_dest.push(_66921_param); };
			_66118_parts=_66118_parts.slice(1LL);
		};
	};
	{
		auto expr = &(_66118_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212829d10:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_20d3510bb_Token>> _67621_part = *it;
			{
				jule::Ptr<_20d37c207_ParamDecl> _67721_param = _20e014575_buildParam(_self_, _67621_part);;
				if ((_67721_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_20d37c207_ParamDecl>> &__jule_push_dest = _66717_params; __jule_push_dest.push(_67721_param); };
				};
			}
			_iter_next_212829d10:;
			++it;
			goto _iter_begin_212829d10;
		}
		_iter_end_212829d10:;
	};
	_20e01482d_checkParams(_self_.ptr(), &(_66717_params));
	return _66717_params;;
}



inline __jule_tuple_x_20d36e88c_RetTypeDecl__jule_tuple_bool _20e015125_buildMultiRetType(jule::Ptr<_20e00e284_parser> _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _68742_tokens, jule::I64* _68765_i) {
	__jule_tuple_x_20d36e88c_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_20d36e88c_RetTypeDecl>();
	((*(_68765_i)))++;
	if (((*(_68765_i)) >= (*(_68742_tokens)).len())) {
		((*(_68765_i)))--;
		({
			__jule_tuple_x_20d36b999_TypeDecl__jule_tuple_bool __jule_assign_result = _20e01183b_buildType(_self_, _68742_tokens, _68765_i, false);
			(*(__jule_func_result.__jule_result_arg0))._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_68765_i)))--;
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _69717_rangeTokens = _20e00c66c_range(_68765_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _68742_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>> _69918_parts;;
	jule::Slice<_22730be5e_Log> _69925_errs;;
	({
		__jule_tuple_ssx_20d3510bb_Token__jule_tuple_s_22730be5e_Log __jule_assign_result = _20e00cddc_parts(&(_69717_rangeTokens), static_cast<jule::U64>(5LLU), true);
		_69918_parts = __jule_assign_result.__jule_result_arg0;
		_69925_errs = __jule_assign_result.__jule_result_arg1;
	});
	((*(_self_))._field_errors).append(_69925_errs);;
	if ((_69918_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_20d36b999_TypeDecl>> _70517_types = jule::Slice<jule::Ptr<_20d36b999_TypeDecl>>::alloc(0LL, _69918_parts.len());;
	(*(__jule_func_result.__jule_result_arg0))._field_Idents=jule::Slice<jule::Ptr<_20d3510bb_Token>>::alloc(0LL, _69918_parts.len());
	{
		auto expr = &(_69918_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212831bb3:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_20d3510bb_Token>> _70721_part = *it;
			{
				jule::Ptr<_20d3510bb_Token> _70821_token = _70721_part[0LL];;
				jule::I64 _70921_offset = 0LL;;
				if ((_70721_part.len() > 1LL)) {
					_70821_token=_70721_part[1LL];
					if (((*(_70821_token))._field_Id == static_cast<jule::U64>(8LLU))) {
						_70921_offset=2LL;
						if ((_70721_part.len() < 3LL)) {
							_20e00ec35_pushErr(_self_.ptr(), _70821_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
							goto _iter_next_212831bb3;
						};
					};
				};
				_70821_token=_70721_part[0LL];
				if ((_70921_offset != 2LL)) {
					jule::Ptr<_20d3510bb_Token> _72525_newToken = jule::new_ptr<_20d3510bb_Token>((*(_70821_token)));;
					(*(_72525_newToken))._field_Kind=jule::Str("<anonymous>", 11);
					{ jule::Slice<jule::Ptr<_20d3510bb_Token>> &__jule_push_dest = (*(__jule_func_result.__jule_result_arg0))._field_Idents; __jule_push_dest.push(_72525_newToken); };
				} else {
					{ jule::Slice<jule::Ptr<_20d3510bb_Token>> &__jule_push_dest = (*(__jule_func_result.__jule_result_arg0))._field_Idents; __jule_push_dest.push(_70821_token); };
				};
				jule::Ptr<_20d36b999_TypeDecl> _73222_tk;;
				({
					__jule_tuple_x_20d36b999_TypeDecl__jule_tuple_bool __jule_assign_result = _20e01183b_buildType(_self_, &(_70721_part), (&(_70921_offset)), true);
					_73222_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_70921_offset < _70721_part.len())) {
					_20e00ec35_pushErr(_self_.ptr(), _70721_part[_70921_offset], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_20d36b999_TypeDecl>> &__jule_push_dest = _70517_types; __jule_push_dest.push(_73222_tk); };
			}
			_iter_next_212831bb3:;
			++it;
			goto _iter_begin_212831bb3;
		}
		_iter_end_212831bb3:;
	};
	if ((_70517_types.len() > 1LL)) {
		(*(__jule_func_result.__jule_result_arg0))._field_Kind=jule::new_ptr<_20d36b999_TypeDecl>(_20d36b999_TypeDecl{._field_Token=(*(_68742_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_20d36d1c6_TupleTypeDecl>(_20d36d1c6_TupleTypeDecl{._field_Types=_70517_types}), &__jule_any_type78)});
	} else {
		(*(__jule_func_result.__jule_result_arg0))._field_Kind=_70517_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_20d36e88c_RetTypeDecl__jule_tuple_bool _20e015521_buildRetType(jule::Ptr<_20e00e284_parser> _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _75537_tokens, jule::I64* _75560_i) {
	__jule_tuple_x_20d36e88c_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_20d36e88c_RetTypeDecl>();
	if (((*(_75560_i)) >= (*(_75537_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_20d3510bb_Token> _76117_token = (*(_75537_tokens))[(*(_75560_i))];;
	{
		auto &_match_expr{ (*(_76117_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_21283a53a:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(71LLU)) {
			_case_begin_21283a5b2:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_21283a639:;
			{
				if ((((*(_75560_i)) + 1LL) >= (*(_75537_tokens)).len())) {
					_20e00ec35_pushErr(_self_.ptr(), _76117_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_75560_i)))++;
				_76117_token=(*(_75537_tokens))[(*(_75560_i))];
				{
					auto &_match_expr{ (*(_76117_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_21283c3c7:;
						{
							({
								__jule_tuple_x_20d36e88c_RetTypeDecl__jule_tuple_bool __jule_assign_result = _20e015125_buildMultiRetType(_self_, _75537_tokens, _75560_i);
								__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
								__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
							});
							return __jule_func_result;;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_21283c44e:;
						{
							_20e00ec35_pushErr(_self_.ptr(), _76117_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
							return __jule_func_result;;
						}
					}
					_match_end_21283c361:;
				};
				({
					__jule_tuple_x_20d36b999_TypeDecl__jule_tuple_bool __jule_assign_result = _20e01183b_buildType(_self_, _75537_tokens, _75560_i, true);
					(*(__jule_func_result.__jule_result_arg0))._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_21283a4b3:;
	};
	((*(_75560_i)))++;
	_20e00ec35_pushErr(_self_.ptr(), _76117_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_20d37d659_FnDecl> _20e0159c7_buildFnPrototype(jule::Ptr<_20e00e284_parser> _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _79441_tokens, jule::I64* _79464_i, jule::Bool _79472_method) {
	jule::Ptr<_20d37d659_FnDecl> _79517_f = jule::new_ptr<_20d37d659_FnDecl>(_20d37d659_FnDecl{._field_Token=(*(_79441_tokens))[(*(_79464_i))], });;
	if (((*((*(_79517_f))._field_Token))._field_Id == static_cast<jule::U64>(34LLU))) {
		(*(_79517_f))._field_Statically=true;
		((*(_79464_i)))++;
		if (((*(_79464_i)) >= (*(_79441_tokens)).len())) {
			_20e00ec35_pushErr(_self_.ptr(), (*(_79517_f))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*(_79517_f))._field_Token=(*(_79441_tokens))[(*(_79464_i))];
	};
	if (((*((*(_79517_f))._field_Token))._field_Id == static_cast<jule::U64>(31LLU))) {
		(*(_79517_f))._field_Unsafety=true;
		((*(_79464_i)))++;
		if (((*(_79464_i)) >= (*(_79441_tokens)).len())) {
			_20e00ec35_pushErr(_self_.ptr(), (*(_79517_f))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*(_79517_f))._field_Token=(*(_79441_tokens))[(*(_79464_i))];
	};
	((*(_79464_i)))++;
	if (((*(_79464_i)) >= (*(_79441_tokens)).len())) {
		_20e00ec35_pushErr(_self_.ptr(), (*(_79517_f))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20d3510bb_Token> _82813_tok = (*(_79441_tokens))[(*(_79464_i))];;
	if (((*(_82813_tok))._field_Id == static_cast<jule::U64>(1LLU))) {
		((*(_79464_i)))++;
		if (((*(_79464_i)) >= (*(_79441_tokens)).len())) {
			_20e00ec35_pushErr(_self_.ptr(), (*(_79517_f))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*(_79517_f))._field_Ident=(*(_82813_tok))._field_Kind;
	} else {
		(*(_79517_f))._field_Ident=jule::Str("<anonymous>", 11);
	};
	jule::Ptr<_20d3510bb_Token> _84013_errorToken = (*(_79441_tokens))[(*(_79464_i))];;
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _84117_genericsTokens = _20e00c66c_range(_79464_i, static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _79441_tokens);;
	if ((_84117_genericsTokens != nullptr)) {
		(*(_79517_f))._field_Generics=_20e0132ee_buildGenerics(_self_, &(_84117_genericsTokens), &(_84013_errorToken));
	};
	if (((*((*(_79441_tokens))[(*(_79464_i))]))._field_Id != static_cast<jule::U64>(74LLU))) {
		_20e00ec35_pushErr(_self_.ptr(), (*(_79441_tokens))[(*(_79464_i))], jule::Str("missing function parentheses", 28), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _85117_paramsToks = _20e00c66c_range(_79464_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _79441_tokens);;
	if ((_85117_paramsToks.len() > 0LL)) {
		(*(_79517_f))._field_Params=_20e014c29_buildParams(_self_, &(_85117_paramsToks), _79472_method);
	};
	if (((*(_79464_i)) < (*(_79441_tokens)).len())) {
		jule::Ptr<_20d3510bb_Token> _85717_token = (*(_79441_tokens))[(*(_79464_i))];;
		if (((*(_85717_token))._field_Id == static_cast<jule::U64>(68LLU))) {
			(*(_79517_f))._field_Exceptional=true;
			((*(_79464_i)))++;
		};
	};
	(*(_79517_f))._field_Public=_20d432ee4_IsPub(&((*(_79517_f))._field_Ident));
	({
		__jule_tuple_x_20d36e88c_RetTypeDecl__jule_tuple_bool __jule_assign_result = _20e015521_buildRetType(_self_, _79441_tokens, _79464_i);
		(*(_79517_f))._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _79517_f;;
}



inline jule::Ptr<_20d37d659_FnDecl> _20e015e7d_buildFn(jule::Ptr<_20e00e284_parser> _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _87132_tokens, jule::Bool _87150_method, jule::Bool _87164_prototype) {
	jule::I64 _87217_i = 0LL;;
	jule::Ptr<_20d37d659_FnDecl> _87317_f = _20e0159c7_buildFnPrototype(_self_, _87132_tokens, &(_87217_i), _87150_method);;
	if (_87164_prototype) {
		if ((_87217_i < (*(_87132_tokens)).len())) {
			_20e00ec35_pushErr(_self_.ptr(), (*(_87132_tokens))[(_87217_i + 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		return _87317_f;;
	} else if ((_87317_f == nullptr)) {
		return _87317_f;;
	};
	if ((_87217_i >= (*(_87132_tokens)).len())) {
		_20e00e581_stop(_self_.ptr());
		_20e00ec35_pushErr(_self_.ptr(), (*(_87317_f))._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_20e010098_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _88917_blockTokens = _20e00c66c_range(&(_87217_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _87132_tokens);;
	if ((_88917_blockTokens != nullptr)) {
		(*(_87317_f))._field_Scope=_20e010dce_buildScope(_self_, &(_88917_blockTokens), (*(_87132_tokens))[(_87217_i - 1LL)]);
		(*((*(_87317_f))._field_Scope))._field_Unsafety=(*(_87317_f))._field_Unsafety;
		if ((_87217_i < (*(_87132_tokens)).len())) {
			_20e00ec35_pushErr(_self_.ptr(), (*(_87132_tokens))[_87217_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	} else {
		_20e00e581_stop(_self_.ptr());
		_20e00ec35_pushErr(_self_.ptr(), (*(_87317_f))._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_20e010098_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _87317_f;;
}



inline jule::Slice<jule::Ptr<_20d3510bb_Token>> _20e0162be_getUseDeclSelectors(_20e00e284_parser* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>> _90542_tokens) {
	jule::I64 _90617_i = 0LL;;
	_90542_tokens=_20e00c66c_range(&(_90617_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_90542_tokens));
	jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>> _90818_parts;;
	jule::Slice<_22730be5e_Log> _90825_errs;;
	({
		__jule_tuple_ssx_20d3510bb_Token__jule_tuple_s_22730be5e_Log __jule_assign_result = _20e00cddc_parts(&(_90542_tokens), static_cast<jule::U64>(5LLU), true);
		_90818_parts = __jule_assign_result.__jule_result_arg0;
		_90825_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_90825_errs.len() > 0LL)) {
		((*(_self_))._field_errors).append(_90825_errs);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _91417_selectors = jule::Slice<jule::Ptr<_20d3510bb_Token>>::alloc(0LL, _90818_parts.len());;
	{
		auto expr = &(_90818_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21285aa44:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_20d3510bb_Token>> _91521_part = *it;
			{
				if ((_91521_part.len() > 1LL)) {
					_20e00ec35_pushErr(_self_, _91521_part[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				jule::Ptr<_20d3510bb_Token> _91921_tok = _91521_part[0LL];;
				if ((((*(_91921_tok))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(_91921_tok))._field_Id != static_cast<jule::U64>(24LLU)))) {
					_20e00ec35_pushErr(_self_, _91921_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					_20e010098_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					goto _iter_next_21285aa44;
				};
				{ jule::Slice<jule::Ptr<_20d3510bb_Token>> &__jule_push_dest = _91417_selectors; __jule_push_dest.push(_91921_tok); };
			}
			_iter_next_21285aa44:;
			++it;
			goto _iter_begin_21285aa44;
		}
		_iter_end_21285aa44:;
	};
	return _91417_selectors;;
}



inline void _20e016632_buildBindUseDecl(_20e00e284_parser* _self_, jule::Ptr<_20d384819_UseDecl>* _93040_decl, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _93057_tokens) {
	if (((*(_93057_tokens)).len() > 1LL)) {
		_20e00ec35_pushErr(_self_, (*(_93057_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	jule::Ptr<_20d3510bb_Token> _93413_token = (*(_93057_tokens))[0LL];;
	if ((((*(_93413_token))._field_Id != static_cast<jule::U64>(4LLU)) || (((*(_93413_token))._field_Kind[0LL] != '`') && ((*(_93413_token))._field_Kind[0LL] != '\"')))) {
		_20e00ec35_pushErr(_self_, _93413_token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_93040_decl))))._field_Binded=true;
	(*((*(_93040_decl))))._field_LinkPath=(*(_93413_token))._field_Kind.slice(1LL, ((*(_93413_token))._field_Kind.len() - 1LL));
}



inline void _20e016995_buildStdUseDecl(_20e00e284_parser* _self_, jule::Ptr<_20d384819_UseDecl>* _94339_decl, jule::Slice<jule::Ptr<_20d3510bb_Token>> _94359_tokens) {
	(*((*(_94339_decl))))._field_Std=true;
	jule::Ptr<_20d3510bb_Token> _94617_token = _94359_tokens[0LL];;
	if ((_94359_tokens.len() < 3LL)) {
		_20e00ec35_pushErr(_self_, _94617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	_94359_tokens=_94359_tokens.slice(2LL);
	_94617_token=_94359_tokens[(_94359_tokens.len() - 1LL)];
	{
		auto &_match_expr{ (*(_94617_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_212864058:;
			{
				_20e00ec35_pushErr(_self_, _94617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_2128640d0:;
			{
				jule::Slice<jule::Ptr<_20d3510bb_Token>> _95921_selectors = nullptr;;
				({
					__jule_tuple_sx_20d3510bb_Token__jule_tuple_sx_20d3510bb_Token __jule_assign_result = _20e00c936_rangeLast(&(_94359_tokens));
					_94359_tokens = __jule_assign_result.__jule_result_arg0;
					_95921_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_94339_decl))))._field_Selected=_20e0162be_getUseDeclSelectors(_self_, _95921_selectors);
				if ((_94359_tokens.len() == 0LL)) {
					_20e00ec35_pushErr(_self_, _94617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_94617_token=_94359_tokens[(_94359_tokens.len() - 1LL)];
				if (((*(_94617_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_20e00ec35_pushErr(_self_, _94617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_94359_tokens=_94359_tokens.slice(0LL, (_94359_tokens.len() - 1LL));
				if ((_94359_tokens.len() == 0LL)) {
					_20e00ec35_pushErr(_self_, _94617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_212864157:;
			{
				_94359_tokens=_94359_tokens.slice(0LL, (_94359_tokens.len() - 1LL));
				if ((_94359_tokens.len() == 0LL)) {
					_20e00ec35_pushErr(_self_, _94617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_94617_token=_94359_tokens[(_94359_tokens.len() - 1LL)];
				if (((*(_94617_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_20e00ec35_pushErr(_self_, _94617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_94359_tokens=_94359_tokens.slice(0LL, (_94359_tokens.len() - 1LL));
				if ((_94359_tokens.len() == 0LL)) {
					_20e00ec35_pushErr(_self_, _94617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_94339_decl))))._field_Full=true;
			}
		}
		_match_end_212863ed1:;
	};
	(*((*(_94339_decl))))._field_LinkPath=(jule::Str("std::", 5) + _20e00dd22_tokstoa(&(_94359_tokens)));
}



inline void _20e016d08_buildIdentUseDecl(_20e00e284_parser* _self_, jule::Ptr<_20d384819_UseDecl>* _99741_decl, jule::Slice<jule::Ptr<_20d3510bb_Token>> _99761_tokens) {
	(*((*(_99741_decl))))._field_Std=false;
	jule::Ptr<_20d3510bb_Token> _100017_token = _99761_tokens[(_99761_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ (*(_100017_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_21286c061:;
			{
				_20e00ec35_pushErr(_self_, _100017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_21286c803:;
			{
				jule::Slice<jule::Ptr<_20d3510bb_Token>> _100621_selectors = nullptr;;
				({
					__jule_tuple_sx_20d3510bb_Token__jule_tuple_sx_20d3510bb_Token __jule_assign_result = _20e00c936_rangeLast(&(_99761_tokens));
					_99761_tokens = __jule_assign_result.__jule_result_arg0;
					_100621_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_99741_decl))))._field_Selected=_20e0162be_getUseDeclSelectors(_self_, _100621_selectors);
				if ((_99761_tokens.len() == 0LL)) {
					_20e00ec35_pushErr(_self_, _100017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100017_token=_99761_tokens[(_99761_tokens.len() - 1LL)];
				if (((*(_100017_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_20e00ec35_pushErr(_self_, _100017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99761_tokens=_99761_tokens.slice(0LL, (_99761_tokens.len() - 1LL));
				if ((_99761_tokens.len() == 0LL)) {
					_20e00ec35_pushErr(_self_, _100017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_21286c869:;
			{
				_99761_tokens=_99761_tokens.slice(0LL, (_99761_tokens.len() - 1LL));
				if ((_99761_tokens.len() == 0LL)) {
					_20e00ec35_pushErr(_self_, _100017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100017_token=_99761_tokens[(_99761_tokens.len() - 1LL)];
				if (((*(_100017_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_20e00ec35_pushErr(_self_, _100017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99761_tokens=_99761_tokens.slice(0LL, (_99761_tokens.len() - 1LL));
				if ((_99761_tokens.len() == 0LL)) {
					_20e00ec35_pushErr(_self_, _100017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_99741_decl))))._field_Full=true;
			}
		}
		_match_end_21286c6e3:;
	};
	(*((*(_99741_decl))))._field_LinkPath=_20e00dd22_tokstoa(&(_99761_tokens));
}



inline void _20e01716b_parseUseDecl(_20e00e284_parser* _self_, jule::Ptr<_20d384819_UseDecl>* _104536_decl, jule::Slice<jule::Ptr<_20d3510bb_Token>> _104556_tokens) {
	if ((*((*(_104536_decl))))._field_Binded) {
		_20e016632_buildBindUseDecl(_self_, _104536_decl, &(_104556_tokens));
		return;;
	};
	jule::Ptr<_20d3510bb_Token> _105117_token = _104556_tokens[0LL];;
	if (((*(_105117_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_20e00ec35_pushErr(_self_, _105117_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_20e010098_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	if (((_104556_tokens.len() > 2LL) && ((*(_104556_tokens[1LL]))._field_Id == static_cast<jule::U64>(9LLU)))) {
		(*((*(_104536_decl))))._field_Alias=(*(_105117_token))._field_Kind;
		if (((*(_104556_tokens[2LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_20e00ec35_pushErr(_self_, _105117_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			_20e010098_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			return;;
		};
		_104556_tokens=_104556_tokens.slice(2LL);
		_105117_token=_104556_tokens[0LL];
	};
	;
	{
		
		if ((*(_105117_token))._field_Kind.equal("std", 3)) {
			_case_begin_212879722:;
			{
				_20e016995_buildStdUseDecl(_self_, _104536_decl, _104556_tokens);
			}
		}
		else {
			_case_begin_21287928d:;
			{
				_20e016d08_buildIdentUseDecl(_self_, _104536_decl, _104556_tokens);
			}
		}
		_match_end_212879227:;
	};
}



inline jule::Ptr<_20d384819_UseDecl> _20e017567_buildUseDecl(_20e00e284_parser* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>> _107935_tokens, jule::Bool _107953_binded) {
	jule::Ptr<_20d384819_UseDecl> _108017_decl = jule::new_ptr<_20d384819_UseDecl>(_20d384819_UseDecl{._field_Token=_107935_tokens[0LL], ._field_Binded=_107953_binded, });;
	if ((_107935_tokens.len() < 2LL)) {
		_20e00ec35_pushErr(_self_, (*(_108017_decl))._field_Token, jule::Str("missing path of use statement", 29), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_107935_tokens=_107935_tokens.slice(1LL);
	_20e01716b_parseUseDecl(_self_, &(_108017_decl), _107935_tokens);
	return _108017_decl;;
}



inline jule::Ptr<_20d36b999_TypeDecl> _20e017963_buildTypeEnumItemKind(jule::Ptr<_20e00e284_parser> _self_, jule::I64* _109346_i, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _109359_tokens) {
	jule::I64 _109417_braceN = 0LL;;
	jule::I64 _109513_exprStart = (*(_109346_i));;
	for (; ((*(_109346_i)) < (*(_109359_tokens)).len()); ((*(_109346_i)))++) {
		{
			jule::Ptr<_20d3510bb_Token> _109717_t = (*(_109359_tokens))[(*(_109346_i))];;
			{
				auto &_match_expr{ (*(_109717_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_21287da45:;
					{
						(_109417_braceN)++;
						goto _iter_next_21287cd1e;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_21287dabc:;
					{
						(_109417_braceN)--;
					}
				}
				_match_end_21287d9ce:;
			};
			if ((_109417_braceN > 0LL)) {
				goto _iter_next_21287cd1e;
			};
			if ((((*(_109717_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_109346_i)) + 1LL) >= (*(_109359_tokens)).len()))) {
				jule::Slice<jule::Ptr<_20d3510bb_Token>> _111325_kindTokens = nullptr;;
				if (((*(_109717_t))._field_Id == static_cast<jule::U64>(5LLU))) {
					_111325_kindTokens=(*(_109359_tokens)).slice(_109513_exprStart, (*(_109346_i)));
				} else {
					_111325_kindTokens=(*(_109359_tokens)).slice(_109513_exprStart);
				};
				jule::I64 _111925_j = 0LL;;
				jule::Ptr<_20d36b999_TypeDecl> _112026_kind;;
				({
					__jule_tuple_x_20d36b999_TypeDecl__jule_tuple_bool __jule_assign_result = _20e01183b_buildType(_self_, &(_111325_kindTokens), (&(_111925_j)), true);
					_112026_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_111925_j < _111325_kindTokens.len())) {
					_20e00ec35_pushErr(_self_.ptr(), _111325_kindTokens[_111925_j], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				return _112026_kind;;
			};
		}
	_iter_next_21287cd1e:;
	}
	_iter_end_21287cd1e:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_20d3861ab_TypeEnumItemDecl>> _20e017ca4_buildTypeEnumItems(jule::Ptr<_20e00e284_parser> _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _113043_tokens) {
	jule::Slice<jule::Ptr<_20d3861ab_TypeEnumItemDecl>> _113117_items = jule::Slice<jule::Ptr<_20d3861ab_TypeEnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _113217_i = 0LL;;
	for (; (_113217_i < (*(_113043_tokens)).len()); (_113217_i)++) {
		{
			jule::Ptr<_20d3510bb_Token> _113421_t = (*(_113043_tokens))[_113217_i];;
			jule::Ptr<_20d3861ab_TypeEnumItemDecl> _113521_item = jule::new_ptr<_20d3861ab_TypeEnumItemDecl>();;
			(*(_113521_item))._field_Token=_113421_t;
			if ((((*((*(_113521_item))._field_Token))._field_Id == static_cast<jule::U64>(1LLU)) && (((*(_113043_tokens)).len() - _113217_i) > 2LL))) {
				_113421_t=(*(_113043_tokens))[(_113217_i + 1LL)];
				if (((*(_113421_t))._field_Id == static_cast<jule::U64>(8LLU))) {
					(*(_113521_item))._field_Ident=(*((*(_113521_item))._field_Token))._field_Kind;
					_113217_i+=2LL;
					if (((_113217_i >= (*(_113043_tokens)).len()) || ((*((*(_113043_tokens))[_113217_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
						_20e00ec35_pushErr(_self_.ptr(), _113421_t, jule::Str("type missing", 12), jule::Slice<jule::Any>());
						goto _iter_next_212883d14;
					};
				};
			};
			(*(_113521_item))._field_Kind=_20e017963_buildTypeEnumItemKind(_self_, &(_113217_i), _113043_tokens);
			{ jule::Slice<jule::Ptr<_20d3861ab_TypeEnumItemDecl>> &__jule_push_dest = _113117_items; __jule_push_dest.push(_113521_item); };
		}
	_iter_next_212883d14:;
	}
	_iter_end_212883d14:;;
	return _113117_items;;
}



inline jule::Ptr<_20d38681b_TypeEnumDecl> _20e0180e5_buildTypeEnumDecl(jule::Ptr<_20e00e284_parser> _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _115442_tokens) {
	jule::I64 _115517_i = 1LL;;
	jule::Ptr<_20d38681b_TypeEnumDecl> _115617_e = jule::new_ptr<_20d38681b_TypeEnumDecl>(_20d38681b_TypeEnumDecl{._field_Token=(*(_115442_tokens))[_115517_i], });;
	if (((*((*(_115617_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_20e00ec35_pushErr(_self_.ptr(), (*(_115617_e))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_20e010098_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_115617_e))._field_Ident=(*((*(_115617_e))._field_Token))._field_Kind;
	_115517_i+=3LL;
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _116617_itemTokens = _20e00c66c_range(&(_115517_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _115442_tokens);;
	if ((_116617_itemTokens == nullptr)) {
		_20e00e581_stop(_self_.ptr());
		_20e00ec35_pushErr(_self_.ptr(), (*(_115617_e))._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_20e010098_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _115617_e;;
	} else if ((_115517_i < (*(_115442_tokens)).len())) {
		_20e00ec35_pushErr(_self_.ptr(), (*(_115442_tokens))[_115517_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_115617_e))._field_Public=_20d432ee4_IsPub(&((*(_115617_e))._field_Ident));
	(*(_115617_e))._field_End=(*(_115442_tokens))[(_115517_i - 1LL)];
	(*(_115617_e))._field_Items=_20e017ca4_buildTypeEnumItems(_self_, &(_116617_itemTokens));
	return _115617_e;;
}



inline jule::Ptr<_20d370ccd_Expr> _20e0184e1_buildEnumItemExpr(jule::Ptr<_20e00e284_parser> _self_, jule::I64* _118142_i, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _118155_tokens) {
	jule::I64 _118217_braceN = 0LL;;
	jule::I64 _118313_exprStart = (*(_118142_i));;
	for (; ((*(_118142_i)) < (*(_118155_tokens)).len()); ((*(_118142_i)))++) {
		{
			jule::Ptr<_20d3510bb_Token> _118517_t = (*(_118155_tokens))[(*(_118142_i))];;
			{
				auto &_match_expr{ (*(_118517_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_2128914d6:;
					{
						(_118217_braceN)++;
						goto _iter_next_2128907b0;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_21289155d:;
					{
						(_118217_braceN)--;
					}
				}
				_match_end_212891470:;
			};
			if ((_118217_braceN > 0LL)) {
				goto _iter_next_2128907b0;
			};
			if ((((*(_118517_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_118142_i)) + 1LL) >= (*(_118155_tokens)).len()))) {
				jule::Slice<jule::Ptr<_20d3510bb_Token>> _120125_exprTokens = nullptr;;
				if (((*(_118517_t))._field_Id == static_cast<jule::U64>(5LLU))) {
					_120125_exprTokens=(*(_118155_tokens)).slice(_118313_exprStart, (*(_118142_i)));
				} else {
					_120125_exprTokens=(*(_118155_tokens)).slice(_118313_exprStart);
				};
				return _20e0103d9_buildExpr(_self_, &(_120125_exprTokens));;
			};
		}
	_iter_next_2128907b0:;
	}
	_iter_end_2128907b0:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_20d384cc0_EnumItemDecl>> _20e018832_buildEnumItems(jule::Ptr<_20e00e284_parser> _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _121339_tokens) {
	jule::Slice<jule::Ptr<_20d384cc0_EnumItemDecl>> _121417_items = jule::Slice<jule::Ptr<_20d384cc0_EnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _121517_i = 0LL;;
	for (; (_121517_i < (*(_121339_tokens)).len()); (_121517_i)++) {
		{
			jule::Ptr<_20d3510bb_Token> _121721_t = (*(_121339_tokens))[_121517_i];;
			jule::Ptr<_20d384cc0_EnumItemDecl> _121821_item = jule::new_ptr<_20d384cc0_EnumItemDecl>();;
			(*(_121821_item))._field_Token=_121721_t;
			if (((*((*(_121821_item))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
				_20e00ec35_pushErr(_self_.ptr(), (*(_121821_item))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				_20e010098_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			};
			(*(_121821_item))._field_Ident=(*((*(_121821_item))._field_Token))._field_Kind;
			if ((((_121517_i + 1LL) >= (*(_121339_tokens)).len()) || ((*((*(_121339_tokens))[(_121517_i + 1LL)]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				if (((_121517_i + 1LL) < (*(_121339_tokens)).len())) {
					(_121517_i)++;
				};
				{ jule::Slice<jule::Ptr<_20d384cc0_EnumItemDecl>> &__jule_push_dest = _121417_items; __jule_push_dest.push(_121821_item); };
				goto _iter_next_2128954eb;
			};
			(_121517_i)++;
			_121721_t=(*(_121339_tokens))[_121517_i];
			(_121517_i)++;
			if (((*(_121721_t))._field_Id != static_cast<jule::U64>(8LLU))) {
				_20e00ec35_pushErr(_self_.ptr(), _121721_t, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				_20e010098_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\" for assignment", 33), jule::Slice<jule::Any>());
				goto _iter_next_2128954eb;
			};
			if (((_121517_i >= (*(_121339_tokens)).len()) || ((*((*(_121339_tokens))[_121517_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				_20e00ec35_pushErr(_self_.ptr(), _121721_t, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
				goto _iter_next_2128954eb;
			};
			(*(_121821_item))._field_Expr=_20e0184e1_buildEnumItemExpr(_self_, &(_121517_i), _121339_tokens);
			{ jule::Slice<jule::Ptr<_20d384cc0_EnumItemDecl>> &__jule_push_dest = _121417_items; __jule_push_dest.push(_121821_item); };
		}
	_iter_next_2128954eb:;
	}
	_iter_end_2128954eb:;;
	return _121417_items;;
}



inline jule::Ptr<_20d385881_EnumDecl> _20e018b73_buildEnumDecl(jule::Ptr<_20e00e284_parser> _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _125038_tokens) {
	if (((*(_125038_tokens)).len() < 3LL)) {
		_20e00ec35_pushErr(_self_.ptr(), (*(_125038_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20d385881_EnumDecl> _125517_e = jule::new_ptr<_20d385881_EnumDecl>(_20d385881_EnumDecl{._field_Token=(*(_125038_tokens))[1LL], });;
	if (((*((*(_125517_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_20e00ec35_pushErr(_self_.ptr(), (*(_125517_e))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_20e010098_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_125517_e))._field_Ident=(*((*(_125517_e))._field_Token))._field_Kind;
	jule::I64 _126317_i = 2LL;;
	if (((*((*(_125038_tokens))[_126317_i]))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_126317_i)++;
		if ((_126317_i >= (*(_125038_tokens)).len())) {
			_20e00ec35_pushErr(_self_.ptr(), (*(_125038_tokens))[(_126317_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return _125517_e;;
		};
		({
			__jule_tuple_x_20d36b999_TypeDecl__jule_tuple_bool __jule_assign_result = _20e01183b_buildType(_self_, _125038_tokens, (&(_126317_i)), true);
			(*(_125517_e))._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_126317_i >= (*(_125038_tokens)).len())) {
			_20e00e581_stop(_self_.ptr());
			_20e00ec35_pushErr(_self_.ptr(), (*(_125517_e))._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
			_20e010098_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
			return _125517_e;;
		};
	} else {
		(*(_125517_e))._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _128017_itemTokens = _20e00c66c_range(&(_126317_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _125038_tokens);;
	if ((_128017_itemTokens == nullptr)) {
		_20e00e581_stop(_self_.ptr());
		_20e00ec35_pushErr(_self_.ptr(), (*(_125517_e))._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_20e010098_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _125517_e;;
	} else if ((_126317_i < (*(_125038_tokens)).len())) {
		_20e00ec35_pushErr(_self_.ptr(), (*(_125038_tokens))[_126317_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_125517_e))._field_Public=_20d432ee4_IsPub(&((*(_125517_e))._field_Ident));
	(*(_125517_e))._field_End=(*(_125038_tokens))[(_126317_i - 1LL)];
	(*(_125517_e))._field_Items=_20e018832_buildEnumItems(_self_, &(_128017_itemTokens));
	return _125517_e;;
}



inline jule::Any _20e018eb4_buildNodeEnumDecl(jule::Ptr<_20e00e284_parser> _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _129542_tokens) {
	if ((((*(_129542_tokens)).len() > 3LL) && ((*((*(_129542_tokens))[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
		if (((*((*(_129542_tokens))[3LL]))._field_Id == static_cast<jule::U64>(7LLU))) {
			return jule::Any(_20e0180e5_buildTypeEnumDecl(_self_, _129542_tokens), &__jule_any_type18);;
		};
	};
	return jule::Any(_20e018b73_buildEnumDecl(_self_, _129542_tokens), &__jule_any_type17);;
}



inline jule::Ptr<_20d386ad5_FieldDecl> _20e019305_buildField(jule::Ptr<_20e00e284_parser> _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>> _130434_tokens) {
	jule::Ptr<_20d386ad5_FieldDecl> _130517_f = jule::new_ptr<_20d386ad5_FieldDecl>();;
	(*(_130517_f))._field_Mutable=((*(_130434_tokens[0LL]))._field_Id == static_cast<jule::U64>(32LLU));
	if ((*(_130517_f))._field_Mutable) {
		if ((_130434_tokens.len() == 1LL)) {
			_20e00ec35_pushErr(_self_.ptr(), _130434_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_130434_tokens=_130434_tokens.slice(1LL);
	};
	(*(_130517_f))._field_Token=_130434_tokens[0LL];
	if (((*((*(_130517_f))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_20e00ec35_pushErr(_self_.ptr(), (*(_130517_f))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_20e010098_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_130517_f))._field_Ident=(*((*(_130517_f))._field_Token))._field_Kind;
	if ((_130434_tokens.len() == 1LL)) {
		_20e00ec35_pushErr(_self_.ptr(), _130434_tokens[0LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if (((_130434_tokens.len() < 3LL) || ((*(_130434_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU)))) {
		_20e00ec35_pushErr(_self_.ptr(), _130434_tokens[1LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_130434_tokens=_130434_tokens.slice(2LL);
	jule::I64 _133317_i = 0LL;;
	({
		__jule_tuple_x_20d36b999_TypeDecl__jule_tuple_bool __jule_assign_result = _20e01183b_buildType(_self_, &(_130434_tokens), (&(_133317_i)), true);
		(*(_130517_f))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_133317_i < _130434_tokens.len())) {
		jule::Ptr<_20d3510bb_Token> _133617_token = _130434_tokens[_133317_i];;
		if (((*(_133617_token))._field_Id != static_cast<jule::U64>(71LLU))) {
			_20e00ec35_pushErr(_self_.ptr(), _130434_tokens[_133317_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_133317_i)++;
		if ((_133317_i >= _130434_tokens.len())) {
			_20e00ec35_pushErr(_self_.ptr(), _133617_token, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_130434_tokens=_130434_tokens.slice(_133317_i);
		(*(_130517_f))._field_Default=_20e0103d9_buildExpr(_self_, &(_130434_tokens));
	};
	(*(_130517_f))._field_Public=_20d432ee4_IsPub(&((*(_130517_f))._field_Ident));
	return _130517_f;;
}



inline jule::Slice<jule::Ptr<_20d386ad5_FieldDecl>> _20e019646_buildStructDeclFields(jule::Ptr<_20e00e284_parser> _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>> _135345_tokens) {
	jule::Slice<jule::Ptr<_20d386ad5_FieldDecl>> _135417_fields = nullptr;;
	jule::Slice<jule::Ptr<_20dee071b_stmt>> _135517_stmts = _20dee0ac3_splitStmts(&(_135345_tokens));;
	{
		auto expr = &(_135517_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2128b4b9c:;
		if (it != expr_end) {
			jule::Ptr<_20dee071b_stmt> _135621_stmt = *it;
			{
				_135345_tokens=(*(_135621_stmt))._field_tokens;
				jule::Ptr<_20d386ad5_FieldDecl> _135821_f = _20e019305_buildField(_self_, _135345_tokens);;
				{ jule::Slice<jule::Ptr<_20d386ad5_FieldDecl>> &__jule_push_dest = _135417_fields; __jule_push_dest.push(_135821_f); };
			}
			_iter_next_2128b4b9c:;
			++it;
			goto _iter_begin_2128b4b9c;
		}
		_iter_end_2128b4b9c:;
	};
	return _135417_fields;;
}



inline jule::Ptr<_20d3874cb_StructDecl> _20e019987_buildStructDecl(jule::Ptr<_20e00e284_parser> _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _136440_tokens) {
	if (((*(_136440_tokens)).len() < 3LL)) {
		_20e00ec35_pushErr(_self_.ptr(), (*(_136440_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _137017_i = 1LL;;
	jule::Ptr<_20d3874cb_StructDecl> _137117_s = jule::new_ptr<_20d3874cb_StructDecl>(_20d3874cb_StructDecl{._field_Token=(*(_136440_tokens))[_137017_i], });;
	if (((*((*(_137117_s))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_20e00ec35_pushErr(_self_.ptr(), (*(_137117_s))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_20e010098_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_137017_i)++;
	if ((_137017_i >= (*(_136440_tokens)).len())) {
		_20e00ec35_pushErr(_self_.ptr(), (*(_136440_tokens))[_137017_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return _137117_s;;
	};
	(*(_137117_s))._field_Ident=(*((*(_137117_s))._field_Token))._field_Kind;
	jule::Ptr<_20d3510bb_Token> _138513_errorToken = (*(_136440_tokens))[_137017_i];;
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _138617_genericsTokens = _20e00c66c_range(&(_137017_i), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _136440_tokens);;
	if ((_138617_genericsTokens != nullptr)) {
		(*(_137117_s))._field_Generics=_20e0132ee_buildGenerics(_self_, &(_138617_genericsTokens), &(_138513_errorToken));
	};
	if ((_137017_i >= (*(_136440_tokens)).len())) {
		_20e00ec35_pushErr(_self_.ptr(), (*(_136440_tokens))[(_137017_i - 1LL)], jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_20e010098_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _137117_s;;
	};
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _139617_bodyTokens = _20e00c66c_range(&(_137017_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _136440_tokens);;
	if ((_139617_bodyTokens == nullptr)) {
		_20e00e581_stop(_self_.ptr());
		_20e00ec35_pushErr(_self_.ptr(), (*(_137117_s))._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_20e010098_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _137117_s;;
	};
	if ((_137017_i < (*(_136440_tokens)).len())) {
		_20e00ec35_pushErr(_self_.ptr(), (*(_136440_tokens))[_137017_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_137117_s))._field_Public=_20d432ee4_IsPub(&((*(_137117_s))._field_Ident));
	(*(_137117_s))._field_Fields=_20e019646_buildStructDeclFields(_self_, _139617_bodyTokens);
	(*(_137117_s))._field_End=(*(_136440_tokens))[(_137017_i - 1LL)];
	return _137117_s;;
}



inline void _20e019c40_checkMethodReceiver(_20e00e284_parser* _self_, jule::Ptr<_20d37d659_FnDecl>* _141239_f) {
	if ((*((*(_141239_f))))._field_Statically) {
		if ((((*((*(_141239_f))))._field_Params.len() > 0LL) && _20d37c57b_IsSelf((*((*(_141239_f))))._field_Params[0LL].ptr()))) {
			_20e00ec35_pushErr(_self_, (*((*(_141239_f))))._field_Token, jule::Str("static functions cannot have receiver parameter", 47), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*((*(_141239_f))))._field_Params.len() == 0LL)) {
		_20e00ec35_pushErr(_self_, (*((*(_141239_f))))._field_Token, jule::Str("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_20d37c207_ParamDecl> _142413_param = (*((*(_141239_f))))._field_Params[0LL];;
	if ((!(_20d37c57b_IsSelf(_142413_param.ptr())))) {
		_20e00ec35_pushErr(_self_, (*((*(_141239_f))))._field_Token, jule::Str("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _20e01a0a3_buildTraitBody(jule::Ptr<_20e00e284_parser> _self_, jule::Ptr<_20d387c18_TraitDecl>* _143139_t, jule::Slice<jule::Ptr<_20d3510bb_Token>> _143158_tokens) {
	jule::Slice<jule::Ptr<_20dee071b_stmt>> _143217_stmts = _20dee0ac3_splitStmts(&(_143158_tokens));;
	{
		auto expr = &(_143217_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2128c540a:;
		if (it != expr_end) {
			jule::Ptr<_20dee071b_stmt> _143321_stmt = *it;
			{
				_143158_tokens=(*(_143321_stmt))._field_tokens;
				if ((_143158_tokens.len() == 0LL)) {
					goto _iter_next_2128c540a;
				};
				{
					auto &_match_expr{ (*(_143158_tokens[0LL]))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(29LLU)) {
						_case_begin_2128c830e:;
						{
							jule::Ptr<_20d37d659_FnDecl> _144025_f = _20e015e7d_buildFn(_self_, &(_143158_tokens), true, true);;
							if ((_144025_f == nullptr)) {
								goto _match_end_2128c686d;
							};
							_20e019c40_checkMethodReceiver(_self_.ptr(), &(_144025_f));
							if (((*(_144025_f))._field_Generics.len() > 0LL)) {
								_20e00ec35_pushErr(_self_.ptr(), (*(_144025_f))._field_Token, jule::Str("trait methods cannot have generics", 34), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_20d37d659_FnDecl>> &__jule_push_dest = (*((*(_143139_t))))._field_Methods; __jule_push_dest.push(_144025_f); };
						}
					}
					else {
						_case_begin_2128c6142:;
						{
							jule::I64 _145025_i = 0LL;;
							jule::Ptr<_20d36b999_TypeDecl> _145126_ti;;
							jule::Bool _145130_ok = false;;
							({
								__jule_tuple_x_20d36b999_TypeDecl__jule_tuple_bool __jule_assign_result = _20e01183b_buildType(_self_, &(_143158_tokens), (&(_145025_i)), true);
								_145126_ti = __jule_assign_result.__jule_result_arg0;
								_145130_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_145130_ok))) {
								goto _match_end_2128c686d;
							};
							if ((_145025_i < _143158_tokens.len())) {
								_20e00ec35_pushErr(_self_.ptr(), _143158_tokens[_145025_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_20d36b999_TypeDecl>> &__jule_push_dest = (*((*(_143139_t))))._field_Inherits; __jule_push_dest.push(_145126_ti); };
						}
					}
					_match_end_2128c686d:;
				};
			}
			_iter_next_2128c540a:;
			++it;
			goto _iter_begin_2128c540a;
		}
		_iter_end_2128c540a:;
	};
}



inline jule::Ptr<_20d387c18_TraitDecl> _20e01a3e4_buildTraitDecl(jule::Ptr<_20e00e284_parser> _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _146339_tokens) {
	if (((*(_146339_tokens)).len() < 3LL)) {
		_20e00ec35_pushErr(_self_.ptr(), (*(_146339_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20d387c18_TraitDecl> _146817_t = jule::new_ptr<_20d387c18_TraitDecl>(_20d387c18_TraitDecl{._field_Token=(*(_146339_tokens))[1LL], });;
	if (((*((*(_146817_t))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_20e00ec35_pushErr(_self_.ptr(), (*(_146817_t))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_20e010098_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_146817_t))._field_Ident=(*((*(_146817_t))._field_Token))._field_Kind;
	jule::I64 _147617_i = 2LL;;
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _147717_bodyTokens = _20e00c66c_range(&(_147617_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _146339_tokens);;
	if ((_147717_bodyTokens == nullptr)) {
		_20e00e581_stop(_self_.ptr());
		_20e00ec35_pushErr(_self_.ptr(), (*(_146817_t))._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_20e010098_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_147617_i < (*(_146339_tokens)).len())) {
		_20e00ec35_pushErr(_self_.ptr(), (*(_146339_tokens))[_147617_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_146817_t))._field_Public=_20d432ee4_IsPub(&((*(_146817_t))._field_Ident));
	_20e01a0a3_buildTraitBody(_self_, &(_146817_t), _147717_bodyTokens);
	(*(_146817_t))._field_End=(*(_146339_tokens))[(_147617_i - 1LL)];
	return _146817_t;;
}



inline jule::Ptr<_20d37d659_FnDecl> _20e01a735_buildBindFn(jule::Ptr<_20e00e284_parser> _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>> _149335_tokens) {
	_149335_tokens=_149335_tokens.slice(1LL);
	jule::Ptr<_20d37d659_FnDecl> _149517_f = _20e015e7d_buildFn(_self_, &(_149335_tokens), false, true);;
	if ((_149517_f != nullptr)) {
		(*(_149517_f))._field_Public=false;
		(*(_149517_f))._field_Binded=true;
	};
	return _149517_f;;
}



inline jule::Ptr<_20d37e737_VarDecl> _20e01aa76_buildBindVar(jule::Ptr<_20e00e284_parser> _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>> _150336_tokens) {
	_150336_tokens=_150336_tokens.slice(1LL);
	jule::Ptr<_20d37e737_VarDecl> _150517_v = _20e012ab2_buildVar(_self_, _150336_tokens);;
	if ((_150517_v != nullptr)) {
		(*(_150517_v))._field_Public=false;
		(*(_150517_v))._field_Binded=true;
		if (((*(_150517_v))._field_Expr != nullptr)) {
			_20e00ec35_pushErr(_self_.ptr(), (*(_150517_v))._field_Token, jule::Str("binded variables cannot have expression", 39), jule::Slice<jule::Any>());
		};
	};
	return _150517_v;;
}



inline jule::Ptr<_20d3874cb_StructDecl> _20e01adb7_buildBindStruct(jule::Ptr<_20e00e284_parser> _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>> _151639_tokens) {
	_151639_tokens=_151639_tokens.slice(1LL);
	jule::Ptr<_20d3874cb_StructDecl> _151817_s = _20e019987_buildStructDecl(_self_, &(_151639_tokens));;
	if ((_151817_s != nullptr)) {
		(*(_151817_s))._field_Public=false;
		{
			auto expr = &((*(_151817_s))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2128d7dce:;
			if (it != expr_end) {
				jule::Ptr<_20d386ad5_FieldDecl> _152125_f = *it;
				{
					(*(_152125_f))._field_Public=true;
				}
				_iter_next_2128d7dce:;
				++it;
				goto _iter_begin_2128d7dce;
			}
			_iter_end_2128d7dce:;
		};
		(*(_151817_s))._field_Binded=true;
	};
	return _151817_s;;
}



inline jule::Ptr<_20d38330c_TypeAliasDecl> _20e01b208_buildBindTypeAlias(jule::Ptr<_20e00e284_parser> _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>> _153042_tokens) {
	_153042_tokens=_153042_tokens.slice(1LL);
	jule::Ptr<_20d38330c_TypeAliasDecl> _153217_t = _20e011b7c_buildTypeAliasDecl(_self_, &(_153042_tokens));;
	if ((_153217_t != nullptr)) {
		(*(_153217_t))._field_Public=false;
		(*(_153217_t))._field_Binded=true;
	};
	return _153217_t;;
}



inline jule::Ptr<_20d384819_UseDecl> _20e01b549_buildBindUse(jule::Ptr<_20e00e284_parser> _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>> _154036_tokens) {
	if ((_154036_tokens.len() == 1LL)) {
		_20e00ec35_pushErr(_self_.ptr(), _154036_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_154036_tokens=_154036_tokens.slice(1LL);
	;
	return _20e017567_buildUseDecl(_self_.ptr(), _154036_tokens, true);;
}



inline jule::Any _20e01b88a_buildBind(jule::Ptr<_20e00e284_parser> _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _155134_tokens) {
	jule::Ptr<_20d3510bb_Token> _155217_token = (*(_155134_tokens))[0LL];;
	if (((*(_155134_tokens)).len() == 1LL)) {
		_20e00ec35_pushErr(_self_.ptr(), _155217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_155217_token=(*(_155134_tokens))[1LL];
	{
		auto &_match_expr{ (*(_155217_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_2128ddda2:;
			{
				return jule::Any(_20e01a735_buildBindFn(_self_, (*(_155134_tokens))), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_2128ddaa5:;
			{
				return jule::Any(_20e01aa76_buildBindVar(_self_, (*(_155134_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_2128ddb1b:;
			{
				return jule::Any(_20e01adb7_buildBindStruct(_self_, (*(_155134_tokens))), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_2128ddb82:;
			{
				return jule::Any(_20e01b208_buildBindTypeAlias(_self_, (*(_155134_tokens))), &__jule_any_type12);;
			}
		}
		else {
			_case_begin_2128dda3e:;
			{
				_20e00ec35_pushErr(_self_.ptr(), _155217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_2128dd9d9:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d37d659_FnDecl> _20e01bbcb_getMethod(jule::Ptr<_20e00e284_parser> _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _157534_tokens) {
	jule::I64 _157617_i = 0LL;;
	jule::Ptr<_20d3510bb_Token> _157717_token = (*(_157534_tokens))[_157617_i];;
	if (((*(_157717_token))._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_157617_i + 1LL) >= (*(_157534_tokens)).len())) {
			_20e00ec35_pushErr(_self_.ptr(), _157717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_157617_i)++;
		_157717_token=(*(_157534_tokens))[_157617_i];
	};
	if (((*(_157717_token))._field_Id == static_cast<jule::U64>(31LLU))) {
		if (((_157617_i + 1LL) >= (*(_157534_tokens)).len())) {
			_20e00ec35_pushErr(_self_.ptr(), _157717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_157617_i)++;
		_157717_token=(*(_157534_tokens))[_157617_i];
	};
	if (((*(_157717_token))._field_Id != static_cast<jule::U64>(29LLU))) {
		_20e00ec35_pushErr(_self_.ptr(), _157717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _20e015e7d_buildFn(_self_, _157534_tokens, true, false);;
}



inline void _20e01c03e_parseImplBody(jule::Ptr<_20e00e284_parser> _self_, jule::Ptr<_20d388378_Impl>* _160438_ipl, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _160455_tokens) {
	jule::Slice<jule::Ptr<_20dee071b_stmt>> _160517_stmts = _20dee0ac3_splitStmts(_160455_tokens);;
	{
		auto expr = &(_160517_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2128e62b6:;
		if (it != expr_end) {
			jule::Ptr<_20dee071b_stmt> _160621_stmt = *it;
			{
				(*(_160455_tokens))=(*(_160621_stmt))._field_tokens;
				jule::Ptr<_20d3510bb_Token> _160821_token = (*(_160455_tokens))[0LL];;
				{
					auto &_match_expr{ (*(_160821_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_2128e721d:;
						{
							_20e0109d3_pushDirective(_self_.ptr(), _20e01072a_buildDirective(_self_.ptr(), (*(_160455_tokens))));
							goto _iter_next_2128e62b6;
						}
					}
					_match_end_2128e76c4:;
				};
				{
					auto &_match_expr{ (*(_160821_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(6LLU)) {
						_case_begin_2128e7d01:;
						{
							jule::Ptr<_20d37e737_VarDecl> _161725_v = _20e012ab2_buildVar(_self_, (*(_160455_tokens)));;
							if ((_161725_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_20d37e737_VarDecl>> &__jule_push_dest = (*((*(_160438_ipl))))._field_Statics; __jule_push_dest.push(_161725_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_2128e7806:;
						{
							jule::Ptr<_20d37d659_FnDecl> _162425_f = _20e01bbcb_getMethod(_self_, _160455_tokens);;
							if ((_162425_f != nullptr)) {
								_20e019c40_checkMethodReceiver(_self_.ptr(), &(_162425_f));
								_20e01c979_applyFnMeta(_self_.ptr(), &(_162425_f));
								{ jule::Slice<jule::Ptr<_20d37d659_FnDecl>> &__jule_push_dest = (*((*(_160438_ipl))))._field_Methods; __jule_push_dest.push(_162425_f); };
							};
						}
					}
					else {
						_case_begin_2128e7c46:;
						{
							_20e00ec35_pushErr(_self_.ptr(), _160821_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							goto _iter_next_2128e62b6;
						}
					}
					_match_end_2128e7be1:;
				};
			}
			_iter_next_2128e62b6:;
			++it;
			goto _iter_begin_2128e62b6;
		}
		_iter_end_2128e62b6:;
	};
}



inline jule::Ptr<_20d388378_Impl> _20e01c380_buildImpl(jule::Ptr<_20e00e284_parser> _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>> _163733_tokens) {
	jule::Ptr<_20d3510bb_Token> _163817_token = _163733_tokens[0LL];;
	if ((_163733_tokens.len() < 2LL)) {
		_20e00ec35_pushErr(_self_.ptr(), _163817_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _164417_i = 1LL;;
	jule::Ptr<_20d36b999_TypeDecl> _164618_base;;
	jule::Bool _164628_ok = false;;
	({
		__jule_tuple_x_20d36b999_TypeDecl__jule_tuple_bool __jule_assign_result = _20e01183b_buildType(_self_, &(_163733_tokens), (&(_164417_i)), true);
		_164618_base = __jule_assign_result.__jule_result_arg0;
		_164628_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_164628_ok))) {
		return nullptr;;
	};
	if ((_164417_i >= _163733_tokens.len())) {
		_20e00ec35_pushErr(_self_.ptr(), _163817_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20d388378_Impl> _165517_ipl = jule::new_ptr<_20d388378_Impl>(_20d388378_Impl{._field_Base=_164618_base, });;
	_163817_token=_163733_tokens[_164417_i];
	if (((*(_163817_token))._field_Id != static_cast<jule::U64>(9LLU))) {
		if (((*(_163817_token))._field_Id == static_cast<jule::U64>(72LLU))) {
			({
				jule::Ptr<_20d36b999_TypeDecl> ___jule_assign_arg = (*(_165517_ipl))._field_Dest;
				jule::Ptr<_20d36b999_TypeDecl> _1___jule_assign_arg = (*(_165517_ipl))._field_Base;
				(*(_165517_ipl))._field_Base = ___jule_assign_arg;
				(*(_165517_ipl))._field_Dest = _1___jule_assign_arg;
			});
			goto _julec_label_212905b44;
		};
		_20e00e581_stop(_self_.ptr());
		_20e00ec35_pushErr(_self_.ptr(), _163817_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_20e010098_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_164417_i)++;
	if ((_164417_i >= _163733_tokens.len())) {
		_20e00e581_stop(_self_.ptr());
		_20e00ec35_pushErr(_self_.ptr(), _163817_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_20e010098_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_20d36b999_TypeDecl__jule_tuple_bool __jule_assign_result = _20e01183b_buildType(_self_, &(_163733_tokens), (&(_164417_i)), true);
		(*(_165517_ipl))._field_Dest = __jule_assign_result.__jule_result_arg0;
		_164628_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_164628_ok))) {
		return nullptr;;
	};
	if ((_164417_i >= _163733_tokens.len())) {
		_20e00e581_stop(_self_.ptr());
		_20e00ec35_pushErr(_self_.ptr(), _163817_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_20e010098_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_212905b44:;
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _169317_bodyTokens = _20e00c66c_range(&(_164417_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_163733_tokens));;
	if ((_169317_bodyTokens == nullptr)) {
		_20e00e581_stop(_self_.ptr());
		_20e00ec35_pushErr(_self_.ptr(), _163817_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_20e010098_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_164417_i < _163733_tokens.len())) {
		_20e00ec35_pushErr(_self_.ptr(), _163733_tokens[_164417_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_165517_ipl))._field_End=_163733_tokens[(_164417_i - 1LL)];
	_20e01c03e_parseImplBody(_self_, &(_165517_ipl), &(_169317_bodyTokens));
	return _165517_ipl;;
}



inline jule::Any _20e01c6c1_buildNodeData(jule::Ptr<_20e00e284_parser> _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _170838_tokens) {
	jule::Ptr<_20d3510bb_Token> _170917_token = (*(_170838_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_170917_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_212909e56:;
			{
				jule::Ptr<_20d37d659_FnDecl> _171321_f = _20e015e7d_buildFn(_self_, _170838_tokens, false, false);;
				if ((_171321_f != nullptr)) {
					(*(_171321_f))._field_Global=true;
				};
				return jule::Any(_171321_f, &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_21290975d:;
			{
				return jule::Any(_20e012ab2_buildVar(_self_, (*(_170838_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_21290a594:;
			{
				return jule::Any(_20e011b7c_buildTypeAliasDecl(_self_, _170838_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_212909b26:;
			{
				return _20e018eb4_buildNodeEnumDecl(_self_, _170838_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_212909b8c:;
			{
				return jule::Any(_20e019987_buildStructDecl(_self_, _170838_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_212909c03:;
			{
				return jule::Any(_20e01a3e4_buildTraitDecl(_self_, _170838_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_212909c69:;
			{
				return jule::Any(_20e01c380_buildImpl(_self_, (*(_170838_tokens))), &__jule_any_type11);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_21290a693:;
			{
				return _20e01b88a_buildBind(_self_, _170838_tokens);;
			}
		}
		else {
			_case_begin_212909ab0:;
			{
				_20e00ec35_pushErr(_self_.ptr(), _170917_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_212909a5a:;
	};
}



inline void _20e01c979_applyFnMeta(_20e00e284_parser* _self_, jule::Ptr<_20d37d659_FnDecl>* _174135_f) {
	(*((*(_174135_f))))._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _20e01cc32_applyMeta(_20e00e284_parser* _self_, _20d36a998_Node* _174633_node) {
	{
		auto &_match_expr{ (*(_174633_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_212910e4b:;
			{
				jule::Ptr<_20d37e737_VarDecl> _174921_v = (*(_174633_node))._field_Data.cast_ptr<_20d37e737_VarDecl>(&__jule_any_type16);;
				if ((_174921_v == nullptr)) {
					return;;
				};
				(*(_174921_v))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_212910eb2:;
			{
				jule::Ptr<_20d37d659_FnDecl> _175621_f = (*(_174633_node))._field_Data.cast_ptr<_20d37d659_FnDecl>(&__jule_any_type14);;
				if ((_175621_f == nullptr)) {
					return;;
				};
				_20e01c979_applyFnMeta(_self_, &(_175621_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_212911039:;
			{
				jule::Ptr<_20d3874cb_StructDecl> _176221_sd = (*(_174633_node))._field_Data.cast_ptr<_20d3874cb_StructDecl>(&__jule_any_type13);;
				if ((_176221_sd == nullptr)) {
					return;;
				};
				(*(_176221_sd))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_212910de6:;
	};
}



inline void _20e01ceda_pushUseDecl(jule::Ptr<_20e00e284_parser> _self_, jule::Ptr<_20d384819_UseDecl>* _177136_decl) {
	{ jule::Slice<jule::Ptr<_20d384819_UseDecl>> &__jule_push_dest = (*((*(_self_))._field_ast))._field_UseDecls; __jule_push_dest.push((*(_177136_decl))); };
	if (((*((*(_self_))._field_ast))._field_Nodes.len() > 0LL)) {
		_20e00ec35_pushErr(_self_.ptr(), (*((*(_177136_decl))))._field_Token, jule::Str("use declarations must declared top of source code", 49), jule::Slice<jule::Any>());
		_20e010098_pushSuggestion(_self_.ptr(), jule::Str("move this use declaration to top of source file", 47), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _20e01d32b_pushMetaNodes(jule::Ptr<_20e00e284_parser> _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _177938_tokens) {
	{
		auto &_match_expr{ (*((*(_177938_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_21291722c:;
			{
				;
				jule::Ptr<_20d384819_UseDecl> _178321_decl = _20e017567_buildUseDecl(_self_.ptr(), (*(_177938_tokens)), false);;
				_20e01ceda_pushUseDecl(_self_, &(_178321_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_2129172a4:;
			{
				if ((((*(_177938_tokens)).len() > 1LL) && ((*((*(_177938_tokens))[1LL]))._field_Id == static_cast<jule::U64>(16LLU)))) {
					jule::Ptr<_20d384819_UseDecl> _178825_decl = _20e01b549_buildBindUse(_self_, (*(_177938_tokens)));;
					_20e01ceda_pushUseDecl(_self_, &(_178825_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_21291732b:;
			{
				_20e0109d3_pushDirective(_self_.ptr(), _20e01072a_buildDirective(_self_.ptr(), (*(_177938_tokens))));
				return true;;
			}
		}
		_match_end_21291710b:;
	};
	return false;;
}



inline _20d36a998_Node _20e01d66c_parseNode(jule::Ptr<_20e00e284_parser> _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _179934_st) {
	_20d36a998_Node _180017_node = _20d36a998_Node{._field_Token=(*(_179934_st))[0LL], };;
	if (_20e01d32b_pushMetaNodes(_self_, _179934_st)) {
		return _180017_node;;
	};
	jule::Any _180817_data = _20e01c6c1_buildNodeData(_self_, _179934_st);;
	if ((_180817_data == nullptr)) {
		return _180017_node;;
	};
	_180017_node._field_Data=_180817_data;
	_20e01cc32_applyMeta(_self_.ptr(), &(_180017_node));
	if (((*(_self_))._field_directives.len() != 0LL)) {
		_20e00ec35_pushErr(_self_.ptr(), (*((*(_self_))._field_directives[0LL]))._field_Tag, jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
	(*(_self_))._field_directives=nullptr;
	return _180017_node;;
}



inline void _20e01d925_appendNode(jule::Ptr<_20e00e284_parser> _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _182335_st) {
	if (((*(_182335_st)).len() == 0LL)) {
		return;;
	};
	_20d36a998_Node _182717_node = _20e01d66c_parseNode(_self_, _182335_st);;
	if (((_182717_node._field_Data == nullptr) || _20e00e817_stopped(_self_.ptr()))) {
		return;;
	};
	{ jule::Slice<_20d36a998_Node> &__jule_push_dest = (*((*(_self_))._field_ast))._field_Nodes; __jule_push_dest.push(_182717_node); };
}



inline void _20e01dded_removeRange(_20e00e284_parser* _self_, jule::I64 _183430_i, jule::U64 _183438_id, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _183452_tokens, jule::Slice<jule::I64>* _183475_ranges) {
	jule::U64 _183513_close = _20e00d1a6_getCloseOfBrace(_183438_id);;
	for (; (_183430_i >= 0LL); (_183430_i)--) {
		{
			jule::Ptr<_20d3510bb_Token> _183717_tok = (*(_183452_tokens))[(*(_183475_ranges))[_183430_i]];;
			if (((*(_183717_tok))._field_Id != _183513_close)) {
				goto _iter_next_212922413;
			};
			(*(_183475_ranges))=jule::append((*(_183475_ranges)).slice(0LL, _183430_i),(*(_183475_ranges)).slice((_183430_i + 1LL)));
			goto _iter_end_212922413;
		}
	_iter_next_212922413:;
	}
	_iter_end_212922413:;;
}



inline void _20e01e31b_pushWrongOrderCloseErr(_20e00e284_parser* _self_, jule::Ptr<_20d3510bb_Token>* _184642_t, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _184654_tokens, jule::Slice<jule::I64>* _184673_ranges) {
	{
		auto &_match_expr{ (*((*(_184654_tokens))[(*(_184673_ranges))[((*(_184673_ranges)).len() - 1LL)]]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(74LLU)) {
			_case_begin_212924745:;
			{
				_20e00ec35_pushErr(_self_, (*(_184642_t)), jule::Str("was expected parentheses close", 30), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_2129247bc:;
			{
				_20e00ec35_pushErr(_self_, (*(_184642_t)), jule::Str("was expected brace close", 24), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_212924844:;
			{
				_20e00ec35_pushErr(_self_, (*(_184642_t)), jule::Str("was expected bracket close", 26), jule::Slice<jule::Any>());
			}
		}
		_match_end_212924624:;
	};
}



inline void _20e01e7e4_pushRangeClose(_20e00e284_parser* _self_, jule::Ptr<_20d3510bb_Token> _185733_t, jule::U64 _185744_left, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _185760_tokens, jule::Slice<jule::I64>* _185783_ranges) {
	jule::I64 _185813_n = (*(_185783_ranges)).len();;
	if ((_185813_n == 0LL)) {
		{
			auto &_match_expr{ (*(_185733_t))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(77LLU)) {
				_case_begin_21292735d:;
				{
					_20e00ec35_pushErr(_self_, _185733_t, jule::Str("extra closed brackets", 21), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(73LLU)) {
				_case_begin_2129273d5:;
				{
					_20e00ec35_pushErr(_self_, _185733_t, jule::Str("extra closed braces", 19), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(75LLU)) {
				_case_begin_21292745c:;
				{
					_20e00ec35_pushErr(_self_, _185733_t, jule::Str("extra closed parentheses", 24), jule::Slice<jule::Any>());
				}
			}
			_match_end_212927281:;
		};
		return;;
	} else if (((*((*(_185760_tokens))[(*(_185783_ranges))[(_185813_n - 1LL)]]))._field_Id != _185744_left)) {
		_20e01e31b_pushWrongOrderCloseErr(_self_, &(_185733_t), _185760_tokens, _185783_ranges);
	};
	_20e01dded_removeRange(_self_, static_cast<jule::I64>((_185813_n - 1LL)), (*(_185733_t))._field_Id, _185760_tokens, _185783_ranges);
}



inline void _20e01ea9c_checkRanges(_20e00e284_parser* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _187531_tokens) {
	jule::Slice<jule::I64> _187617_ranges = nullptr;;
	{
		auto expr = _187531_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21292a4a4:;
		if (it != expr_end) {
			jule::I64 _187813_i = it - expr->begin();
			jule::Ptr<_20d3510bb_Token> *_187816_token = it;
			{
				{
					auto &_match_expr{ (*((*(_187816_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_21292b2b8:;
						{
							{ jule::Slice<jule::I64> &__jule_push_dest = _187617_ranges; __jule_push_dest.push(_187813_i); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_21292b340:;
						{
							_20e01e7e4_pushRangeClose(_self_, (*(_187816_token)), static_cast<jule::U64>(74LLU), _187531_tokens, &(_187617_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU)) {
						_case_begin_21292b3b7:;
						{
							_20e01e7e4_pushRangeClose(_self_, (*(_187816_token)), static_cast<jule::U64>(72LLU), _187531_tokens, &(_187617_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_21292b43e:;
						{
							_20e01e7e4_pushRangeClose(_self_, (*(_187816_token)), static_cast<jule::U64>(76LLU), _187531_tokens, &(_187617_ranges));
						}
					}
					_match_end_21292b1ca:;
				};
			}
			_iter_next_21292a4a4:;
			++it;
			_187813_i++;
			goto _iter_begin_21292a4a4;
		}
		_iter_end_21292a4a4:;
	};
	{
		auto expr = &(_187617_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21292a43d:;
		if (it != expr_end) {
			jule::I64 _189316_i = *it;
			{
				jule::Ptr<_20d3510bb_Token> _189417_token = (*(_187531_tokens))[_189316_i];;
				{
					auto &_match_expr{ (*(_189417_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_21292de58:;
						{
							_20e00ec35_pushErr(_self_, _189417_token, jule::Str("parentheses waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_21292ded0:;
						{
							_20e00ec35_pushErr(_self_, _189417_token, jule::Str("brace waiting to close", 22), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_21292e057:;
						{
							_20e00ec35_pushErr(_self_, _189417_token, jule::Str("bracket are waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					_match_end_21292ddd1:;
				};
			}
			_iter_next_21292a43d:;
			++it;
			goto _iter_begin_21292a43d;
		}
		_iter_end_21292a43d:;
	};
}



inline void _20e01ed55_parse(jule::Ptr<_20e00e284_parser> _self_, jule::Ptr<_20d356885_File>* _190630_f) {
	(*(_self_))._field_ast=jule::new_ptr<_20d3699ec_Ast>(_20d3699ec_Ast{._field_File=(*(_190630_f)), });
	(*(_self_))._field_ep=jule::new_ptr<_20deed680_exprBuilder>(_20deed680_exprBuilder{._field_p=_self_});
	_20e01ea9c_checkRanges(_self_.ptr(), &((*((*(_190630_f))))._field_Tokens));
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_20dee071b_stmt>> _191917_stmts = _20dee0ac3_splitStmts(&((*((*(_190630_f))))._field_Tokens));;
	jule::I64 _192217_i = 0LL;;
	for (; (_192217_i < _191917_stmts.len()); (_192217_i)++) {
		{
			jule::Ptr<_20dee071b_stmt> _192421_stmt = _191917_stmts[_192217_i];;
			if (((*(_192421_stmt))._field_tokens.len() < 2LL)) {
				return;;
			};
			if (((*((*(_192421_stmt))._field_tokens[0LL]))._field_Id != static_cast<jule::U64>(35LLU))) {
				goto _iter_end_212932863;
			};
			if ((!(_22730de0b_IsTopDirective((*((*(_192421_stmt))._field_tokens[1LL]))._field_Kind)))) {
				goto _iter_end_212932863;
			};
			{ jule::Slice<jule::Ptr<_20d36adb6_Directive>> &__jule_push_dest = (*((*(_self_))._field_ast))._field_TopDirectives; __jule_push_dest.push(_20e01072a_buildDirective(_self_.ptr(), (*(_192421_stmt))._field_tokens)); };
		}
	_iter_next_212932863:;
	}
	_iter_end_212932863:;;
	(*(_self_))._field_errors=nullptr;
	for (; (_192217_i < _191917_stmts.len()); (_192217_i)++) {
		{
			jule::Ptr<_20dee071b_stmt> _194121_stmt = _191917_stmts[_192217_i];;
			_20e01d925_appendNode(_self_, &((*(_194121_stmt))._field_tokens));
			if (_20e00e817_stopped(_self_.ptr())) {
				goto _iter_end_212932c70;
			};
		}
	_iter_next_212932c70:;
	}
	_iter_end_212932c70:;;
	if (((*(_self_))._field_directives.len() != 0LL)) {
		_20e00ec35_pushErr(_self_.ptr(), (*((*(_self_))._field_directives[0LL]))._field_Tag, jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20e00e284_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ep:" << _Src._field_ep;
	_Stream << "}";
	return _Stream;
}



inline void _20e021692_pushErr(_20e0210ed_typeBuilder* _self_, jule::Ptr<_20d3510bb_Token> _4126_token, jule::Str _4141_fmt) {
	if ((*(_self_))._field_err) {
		_20e00ec35_pushErr((*(_self_))._field_p.ptr(), _4126_token, _4141_fmt, jule::Slice<jule::Any>());
	};
}



inline void _20e021a05_pushSuggestion(_20e0210ed_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args) {
	if ((*(_self_))._field_err) {
		_20e010098_pushSuggestion((*(_self_))._field_p.ptr(), _4833_fmt, _4846_args);
	};
}



inline jule::Ptr<_20d36b999_TypeDecl> _20e021c8b_buildNamespace(_20e0210ed_typeBuilder* _self_) {
	jule::Ptr<_20d36b999_TypeDecl> _5517_t = jule::new_ptr<_20d36b999_TypeDecl>(_20d36b999_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], });;
	jule::Ptr<_20d36c747_NamespaceTypeDecl> _5917_nst = jule::new_ptr<_20d36c747_NamespaceTypeDecl>();;
	jule::I64 _6017_n = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_20d3510bb_Token> _6221_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if (((_6017_n & 1LL) == 0LL)) {
				if (((*(_6221_token))._field_Id != static_cast<jule::U64>(1LLU))) {
					_20e021692_pushErr(_self_, _6221_token, jule::Str("invalid syntax", 14));
					_20e021a05_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_20d3510bb_Token>> &__jule_push_dest = (*(_5917_nst))._field_Idents; __jule_push_dest.push(_6221_token); };
			} else if (((*(_6221_token))._field_Id != static_cast<jule::U64>(19LLU))) {
				goto _iter_end_21293b6e6;
			};
			(_6017_n)++;
		}
	_iter_next_21293b6e6:;
	}
	_iter_end_21293b6e6:;;
	(*(_5917_nst))._field_Idents=(*(_5917_nst))._field_Idents.slice(0LL, ((*(_5917_nst))._field_Idents.len() - 1LL));
	((*((*(_self_))._field_i)))--;
	(*(_5917_nst))._field_Kind=_20e02253e_buildIdent(_self_);
	(*(_5517_t))._field_Kind=jule::Any(_5917_nst, &__jule_any_type94);
	return _5517_t;;
}



inline jule::Slice<jule::Ptr<_20d36b999_TypeDecl>> _20e022022_buildGenerics(_20e0210ed_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_20d3510bb_Token> _8813_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((*(_8813_token))._field_Id != static_cast<jule::U64>(76LLU))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>> _9317_parts = _20e0222a8_identGenerics(_self_);;
	if ((_9317_parts.len() == 0LL)) {
		_20e021692_pushErr(_self_, _8813_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_20d36b999_TypeDecl>> _9917_types = jule::Slice<jule::Ptr<_20d36b999_TypeDecl>>::alloc(0LL, _9317_parts.len());;
	{
		auto expr = &(_9317_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21294328b:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_20d3510bb_Token>> _10021_part = *it;
			{
				jule::I64 _10121_j = 0LL;;
				jule::Ptr<_20d36b999_TypeDecl> _10222_t;;
				({
					__jule_tuple_x_20d36b999_TypeDecl__jule_tuple_bool __jule_assign_result = _20e01183b_buildType((*(_self_))._field_p, &(_10021_part), (&(_10121_j)), true);
					_10222_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_10121_j < _10021_part.len())) {
					_20e021692_pushErr(_self_, _10021_part[_10121_j], jule::Str("invalid syntax", 14));
				};
				{ jule::Slice<jule::Ptr<_20d36b999_TypeDecl>> &__jule_push_dest = _9917_types; __jule_push_dest.push(_10222_t); };
			}
			_iter_next_21294328b:;
			++it;
			goto _iter_begin_21294328b;
		}
		_iter_end_21294328b:;
	};
	return _9917_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>> _20e0222a8_identGenerics(_20e0210ed_typeBuilder* _self_) {
	jule::I64 _11213_first = (*((*(_self_))._field_i));;
	jule::I64 _11317_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_20d3510bb_Token> _11517_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			{
				auto &_match_expr{ (*(_11517_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(76LLU)) {
					_case_begin_2129477e0:;
					{
						(_11317_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(77LLU)) {
					_case_begin_212947867:;
					{
						(_11317_rangeN)--;
					}
				}
				_match_end_212947779:;
			};
			if ((_11317_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_212946800;
			};
		}
	_iter_next_212946800:;
	}
	_iter_end_212946800:;;
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _12717_tokens = (*(_self_))._field_tokens.slice((_11213_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>> _12818_parts;;
	jule::Slice<_22730be5e_Log> _12825_errors;;
	({
		__jule_tuple_ssx_20d3510bb_Token__jule_tuple_s_22730be5e_Log __jule_assign_result = _20e00cddc_parts(&(_12717_tokens), static_cast<jule::U64>(5LLU), true);
		_12818_parts = __jule_assign_result.__jule_result_arg0;
		_12825_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		((*((*(_self_))._field_p))._field_errors).append(_12825_errors);;
	};
	return _12818_parts;;
}



inline jule::Ptr<_20d36b999_TypeDecl> _20e02253e_buildIdent(_20e0210ed_typeBuilder* _self_) {
	jule::Bool _13617_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_13617_next && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return _20e021c8b_buildNamespace(_self_);;
	};
	jule::Ptr<_20d3510bb_Token> _14017_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_20d36c0a4_IdentTypeDecl> _14117_it = jule::new_ptr<_20d36c0a4_IdentTypeDecl>(_20d36c0a4_IdentTypeDecl{._field_Token=_14017_token, ._field_Ident=(*(_14017_token))._field_Kind, ._field_Binded=false, });;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_20d36b999_TypeDecl> _14717_itd = jule::new_ptr<_20d36b999_TypeDecl>(_20d36b999_TypeDecl{._field_Token=_14017_token, ._field_Kind=jule::Any(_14117_it, &__jule_any_type20)});;
	if (((!(_13617_next)) || ((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		(*(_14117_it))._field_Generics=_20e022022_buildGenerics(_self_);
		return _14717_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_20e021692_pushErr(_self_, _14017_token, jule::Str("invalid syntax", 14));
		return _14717_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(1LLU))) {
		_20e021692_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("invalid syntax", 14));
		return _14717_itd;;
	};
	jule::Ptr<_20d36c3a1_SubIdentTypeDecl> _16417_sit = jule::new_ptr<_20d36c3a1_SubIdentTypeDecl>();;
	{ jule::Slice<jule::Ptr<_20d36c0a4_IdentTypeDecl>> &__jule_push_dest = (*(_16417_sit))._field_Idents; __jule_push_dest.push(_14117_it); };
	jule::Ptr<_20d36b999_TypeDecl> _16617_ident = _20e02253e_buildIdent(_self_);;
	{
		auto &_match_expr{ (*(_16617_ident))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_212953037:;
			{
				{ jule::Slice<jule::Ptr<_20d36c0a4_IdentTypeDecl>> &__jule_push_dest = (*(_16417_sit))._field_Idents; __jule_push_dest.push((*(_16617_ident))._field_Kind.cast_ptr<_20d36c0a4_IdentTypeDecl>(&__jule_any_type20)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_2129530ae:;
			{
				((*(_16417_sit))._field_Idents).append((*((*(_16617_ident))._field_Kind.cast_ptr<_20d36c3a1_SubIdentTypeDecl>(&__jule_any_type90)))._field_Idents);;
			}
		}
		_match_end_212952ec1:;
	};
	return jule::new_ptr<_20d36b999_TypeDecl>(_20d36b999_TypeDecl{._field_Token=_14017_token, ._field_Kind=jule::Any(_16417_sit, &__jule_any_type90)});;
}



inline jule::Ptr<_20d36b999_TypeDecl> _20e0227c5_buildCppLink(_20e0210ed_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		_20e021692_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_20d36b999_TypeDecl> _18517_t = _20e02253e_buildIdent(_self_);;
	(*((*(_18517_t))._field_Kind.cast_ptr<_20d36c0a4_IdentTypeDecl>(&__jule_any_type20)))._field_Binded=true;
	return _18517_t;;
}



inline jule::Ptr<_20d36b999_TypeDecl> _20e022a5b_buildFn(_20e0210ed_typeBuilder* _self_) {
	jule::Ptr<_20d3510bb_Token> _19117_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_20d37d659_FnDecl> _19217_f = _20e0159c7_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_19217_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_20d37d9bc_IsAnon(_19217_f.ptr())))) {
		_20e021692_pushErr(_self_, (*(_19217_f))._field_Token, jule::Str("invalid syntax", 14));
	};
	return jule::new_ptr<_20d36b999_TypeDecl>(_20d36b999_TypeDecl{._field_Token=_19117_token, ._field_Kind=jule::Any(_19217_f, &__jule_any_type14)});;
}



inline jule::Ptr<_20d36b999_TypeDecl> _20e022ce2_buildPtr(_20e0210ed_typeBuilder* _self_) {
	jule::Ptr<_20d3510bb_Token> _20617_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_20e021692_pushErr(_self_, _20617_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id == static_cast<jule::U64>(31LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_20d36b999_TypeDecl>(_20d36b999_TypeDecl{._field_Token=_20617_token, ._field_Kind=jule::Any(jule::new_ptr<_20d36d4c3_PtrTypeDecl>(_20d36d4c3_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type75)});;
	};
	jule::Ptr<_20d36b999_TypeDecl> _22317_elem = _20e023d48_step(_self_);;
	if ((_22317_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_20d36b999_TypeDecl>(_20d36b999_TypeDecl{._field_Token=_20617_token, ._field_Kind=jule::Any(jule::new_ptr<_20d36d4c3_PtrTypeDecl>(_20d36d4c3_PtrTypeDecl{._field_Elem=_22317_elem}), &__jule_any_type75)});;
}



inline jule::Ptr<_20d36b999_TypeDecl> _20e023078_buildSptr(_20e0210ed_typeBuilder* _self_) {
	jule::Ptr<_20d3510bb_Token> _23717_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_20e021692_pushErr(_self_, _23717_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_20d36b999_TypeDecl> _24417_elem = _20e023d48_step(_self_);;
	if ((_24417_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_20d36b999_TypeDecl>(_20d36b999_TypeDecl{._field_Token=_23717_token, ._field_Kind=jule::Any(jule::new_ptr<_20d36ca44_SptrTypeDecl>(_20d36ca44_SptrTypeDecl{._field_Elem=_24417_elem}), &__jule_any_type76)});;
}



inline jule::Ptr<_20d36b999_TypeDecl> _20e02330e_buildSlc(_20e0210ed_typeBuilder* _self_) {
	jule::Ptr<_20d3510bb_Token> _25817_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_20d36b999_TypeDecl> _26017_elem = _20e023d48_step(_self_);;
	if ((_26017_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_20d36b999_TypeDecl>(_20d36b999_TypeDecl{._field_Token=_25817_token, ._field_Kind=jule::Any(jule::new_ptr<_20d36cdc9_SlcTypeDecl>(_20d36cdc9_SlcTypeDecl{._field_Elem=_26017_elem}), &__jule_any_type74)});;
}



inline jule::Ptr<_20d36b999_TypeDecl> _20e023595_buildArr(_20e0210ed_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _27317_exprTokens = _20e00c66c_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_20e021692_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_20d36b999_TypeDecl> _27917_elem = _20e023d48_step(_self_);;
	if ((_27917_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_20d36dc65_ArrTypeDecl> _28417_arrt = jule::new_ptr<_20d36dc65_ArrTypeDecl>(_20d36dc65_ArrTypeDecl{._field_Elem=_27917_elem, });;
	jule::Ptr<_20d3510bb_Token> _28817_token = _27317_exprTokens[0LL];;
	if (((_27317_exprTokens.len() == 1LL) && ((*(_28817_token))._field_Id == static_cast<jule::U64>(39LLU)))) {
	} else {
		(*(_28417_arrt))._field_Size=_20e0103d9_buildExpr((*(_self_))._field_p, &(_27317_exprTokens));
	};
	return jule::new_ptr<_20d36b999_TypeDecl>(_20d36b999_TypeDecl{._field_Token=_28817_token, ._field_Kind=jule::Any(_28417_arrt, &__jule_any_type73)});;
}



inline jule::Ptr<_20d36b999_TypeDecl> _20e02382b_buildMap(_20e0210ed_typeBuilder* _self_) {
	jule::Ptr<_20d3510bb_Token> _30217_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_20e021692_pushErr(_self_, _30217_mapToken, jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _31017_keyTokens = _20e00c66c_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_20e021692_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("type missing", 12));
		return nullptr;;
	} else if ((_31017_keyTokens.len() == 0LL)) {
		_20e021692_pushErr(_self_, _30217_mapToken, jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_20d36e4b3_MapTypeDecl> _31917_mapt = jule::new_ptr<_20d36e4b3_MapTypeDecl>();;
	jule::I64 _32017_j = 0LL;;
	jule::Ptr<_20d36b999_TypeDecl> _32118_keyt;;
	jule::Bool _32128_ok = false;;
	({
		__jule_tuple_x_20d36b999_TypeDecl__jule_tuple_bool __jule_assign_result = _20e01183b_buildType((*(_self_))._field_p, &(_31017_keyTokens), (&(_32017_j)), (*(_self_))._field_err);
		_32118_keyt = __jule_assign_result.__jule_result_arg0;
		_32128_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32128_ok))) {
		return nullptr;;
	} else if ((_32017_j < _31017_keyTokens.len())) {
		_20e021692_pushErr(_self_, _31017_keyTokens[_32017_j], jule::Str("invalid syntax", 14));
	};
	(*(_31917_mapt))._field_Key=_32118_keyt;
	jule::Ptr<_20d36b999_TypeDecl> _32918_valt;;
	({
		__jule_tuple_x_20d36b999_TypeDecl__jule_tuple_bool __jule_assign_result = _20e01183b_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_32918_valt = __jule_assign_result.__jule_result_arg0;
		_32128_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32128_ok))) {
		return nullptr;;
	};
	(*(_31917_mapt))._field_Val=_32918_valt;
	return jule::new_ptr<_20d36b999_TypeDecl>(_20d36b999_TypeDecl{._field_Token=_30217_mapToken, ._field_Kind=jule::Any(_31917_mapt, &__jule_any_type77)});;
}



inline jule::Ptr<_20d36b999_TypeDecl> _20e023ab2_buildEnumerable(_20e0210ed_typeBuilder* _self_) {
	jule::Ptr<_20d3510bb_Token> _34117_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len())) {
		_20e021692_pushErr(_self_, _34117_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_34117_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((*(_34117_token))._field_Id == static_cast<jule::U64>(77LLU))) {
		return _20e02330e_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _20e023595_buildArr(_self_);;
}



inline jule::Ptr<_20d36b999_TypeDecl> _20e023d48_step(_20e0210ed_typeBuilder* _self_) {
	jule::Ptr<_20d3510bb_Token> _35613_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ (*(_35613_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_2129730e0:;
			{
				return _20e02253e_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_212973156:;
			{
				return _20e0227c5_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_2129725d9:;
			{
				return _20e022a5b_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_212972650:;
			{
				return _20e022ce2_buildPtr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_2129726b6:;
			{
				return _20e023078_buildSptr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_21297272c:;
			{
				return jule::new_ptr<_20d36b999_TypeDecl>(_20d36b999_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_20d36ca44_SptrTypeDecl>(_20d36ca44_SptrTypeDecl{._field_Elem=_20e023078_buildSptr(_self_)}), &__jule_any_type76)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_2129731de:;
			{
				return _20e023ab2_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_212973255:;
			{
				return _20e02382b_buildMap(_self_);;
			}
		}
		else {
			_case_begin_212972573:;
			{
				((*((*(_self_))._field_i)))++;
				_20e021692_pushErr(_self_, _35613_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_21297251d:;
	};
}



inline __jule_tuple_x_20d36b999_TypeDecl__jule_tuple_bool _20e0240ce_build(_20e0210ed_typeBuilder* _self_) {
	__jule_tuple_x_20d36b999_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_20d36b999_TypeDecl> _38817_root = _20e023d48_step(_self_);;
	if ((_38817_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _20e02084a_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _38817_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _20e0210ed_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d7b9589_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _20d7bb091_pushErr(_20d7baa41_directiveEval* _self_, jule::Ptr<_20d3510bb_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	{ jule::Slice<_22730be5e_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_22730be5e_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_2126_t))._field_Row, ._field_Column=(*(_2126_t))._field_Column, ._field_Path=(*((*(_2126_t))._field_File))._field_Path, ._field_Text=_22730c3c1_Logf(_2137_fmt, _2150_args), }); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>> _20d7bb48c_splitOperans(_20d7baa41_directiveEval* _self_, jule::U64 _3331_op, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _3349_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>>::alloc(0LL, 10LL);;
	jule::I64 _3517_i = 0LL;;
	jule::I64 _3617_rangeN = 0LL;;
	jule::I64 _3717_last = 0LL;;
	for (; (_3517_i < ((*(_3349_tokens)).len() - 1LL)); (_3517_i)++) {
		{
			jule::Ptr<_20d3510bb_Token> _3917_b = (*(_3349_tokens))[_3517_i];;
			{
				auto &_match_expr{ (*(_3917_b))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_2129978ea:;
					{
						(_3617_rangeN)++;
						goto _iter_next_212996b91;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_212997972:;
					{
						(_3617_rangeN)--;
					}
				}
				_match_end_212997884:;
			};
			if (((_3617_rangeN > 0LL) || ((*(_3917_b))._field_Id != _3331_op))) {
				goto _iter_next_212996b91;
			};
			{ jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>> &__jule_push_dest = _3417_parts; __jule_push_dest.push((*(_3349_tokens)).slice(_3717_last, _3517_i)); };
			_3717_last=static_cast<jule::I64>((_3517_i + 1LL));
		}
	_iter_next_212996b91:;
	}
	_iter_end_212996b91:;;
	if ((_3717_last < (*(_3349_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>> &__jule_push_dest = _3417_parts; __jule_push_dest.push((*(_3349_tokens)).slice(_3717_last)); };
	} else {
		_20d7bb091_pushErr(_self_, (*(_3349_tokens))[(_3717_last - 1LL)], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _3417_parts;;
}



inline jule::Bool _20d7bb7cd_evalDirectiveIdent(_20d7baa41_directiveEval* _self_, jule::Str _6433_ident) {
	if (_6433_ident.empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21299a326:;
		if (it != expr_end) {
			jule::Str *_6816_var = it;
			{
				if (((*(_6816_var)) == _6433_ident)) {
					return true;;
				};
			}
			_iter_next_21299a326:;
			++it;
			goto _iter_begin_21299a326;
		}
		_iter_end_21299a326:;
	};
	return false;;
}



inline jule::Bool _20d7bbb1e_evalDirectivePart(_20d7baa41_directiveEval* _self_, jule::Slice<jule::Ptr<_20d3510bb_Token>> _7840_part) {
	jule::Bool _7913_logicalNot = ((*(_7840_part[0LL]))._field_Id == static_cast<jule::U64>(68LLU));;
	if (_7913_logicalNot) {
		_7840_part=_7840_part.slice(1LL);
	};
	if ((_7840_part.len() > 1LL)) {
		_20d7bb091_pushErr(_self_, _7840_part[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _8917_result = _20d7bb7cd_evalDirectiveIdent(_self_, (*(_7840_part[0LL]))._field_Kind);;
	if (_7913_logicalNot) {
		_8917_result=(!(_8917_result));
	};
	return _8917_result;;
}



inline jule::Bool _20d7bbda5_eval(_20d7baa41_directiveEval* _self_) {
	if (((*((*(_self_))._field_d))._field_Args.len() == 0LL)) {
		_20d7bb091_pushErr(_self_, (*((*(_self_))._field_d))._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _10217_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>> _10417_logicalOrParts = _20d7bb48c_splitOperans(_self_, static_cast<jule::U64>(55LLU), &((*((*(_self_))._field_d))._field_Args));;
	if ((_10417_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_10417_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2129a0b67:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_20d3510bb_Token>> _10921_part = *it;
			{
				jule::Bool _11021_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>> _11121_logicalAndParts = _20d7bb48c_splitOperans(_self_, static_cast<jule::U64>(54LLU), &(_10921_part));;
				if ((_11121_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_11121_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2129a7201:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_20d3510bb_Token>> _11625_andPart = *it;
						{
							jule::Ptr<_20d3510bb_Token> _11721_first = _11625_andPart[0LL];;
							if (((*(_11721_first))._field_Id == static_cast<jule::U64>(74LLU))) {
								jule::Ptr<_20d3510bb_Token> _11925_end = _11625_andPart[(_11625_andPart.len() - 1LL)];;
								if (((*(_11925_end))._field_Id != static_cast<jule::U64>(75LLU))) {
									_20d7bb091_pushErr(_self_, _11721_first, jule::Str("parentheses waiting to close", 28), jule::Slice<jule::Any>());
									return false;;
								};
								_11625_andPart=_11625_andPart.slice(1LL, (_11625_andPart.len() - 1LL));
							};
							_11021_and=(_11021_and && _20d7bbb1e_evalDirectivePart(_self_, _11625_andPart));
						}
						_iter_next_2129a7201:;
						++it;
						goto _iter_begin_2129a7201;
					}
					_iter_end_2129a7201:;
				};
				_10217_result=(_10217_result || _11021_and);
			}
			_iter_next_2129a0b67:;
			++it;
			goto _iter_begin_2129a0b67;
		}
		_iter_end_2129a0b67:;
	};
	return _10217_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d7baa41_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20e025234_JuleImporter> static__20e025630_New(_20d7b9589_CompileInfo _5819_info) {
	jule::Ptr<_20e025234_JuleImporter> _5917_imp = jule::new_ptr<_20e025234_JuleImporter>(_20e025234_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_2273c32ab_PathStdlib}), });;
	_20d7b9e19_initVars(&((*(_5917_imp))._field_vars), &(_5819_info));
	return _5917_imp;;
}



inline jule::Slice<jule::Ptr<_20d414d94_ImportInfo>> _20e0258b6_AllPackages(_20e025234_JuleImporter* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _20e025d06_SetModPath(_20e025234_JuleImporter* _self_, jule::Str _7529_path) {
	(*(_self_))._field_mod=_7529_path;
}



inline jule::Str _20e02608c_GetModPath(_20e025234_JuleImporter* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _20e0263cd_ModById(_20e025234_JuleImporter* _self_, jule::I64 _8322_id) {
	return (*(_self_))._field_mods[_8322_id];;
}



inline jule::Ptr<_20d414d94_ImportInfo> _20e02671e_GetImport(_20e025234_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2129ad89a:;
		if (it != expr_end) {
			jule::Ptr<_20d414d94_ImportInfo> _8821_p = *it;
			{
				if (((*(_8821_p))._field_Path == _8728_path)) {
					return _8821_p;;
				};
			}
			_iter_next_2129ad89a:;
			++it;
			goto _iter_begin_2129ad89a;
		}
		_iter_end_2129ad89a:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_20d3699ec_Ast__jule_tuple_s_22730be5e_Log _20e026b1a_ImportPackage(_20e025234_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	__jule_tuple_sx_20d3699ec_Ast__jule_tuple_s_22730be5e_Log __jule_func_result;
	jule::Slice<jule::Ptr<_223dd0706_DirEntry>> _9717_dirents = ({
		auto except = static__22726b709_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = jule::Slice<_22730be5e_Log>::make({_20e024c4a_flatCompilerErr((jule::Str("connot read package directory: ", 31) + _9632_path))});
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_223dd0706_DirEntry>>(nullptr);});
	});;
	if (_9643_update_mod) {
		jule::Str _10217_newMod = _20d4321e1_FindModuleFileDeep(_9632_path);;
		if ((_10217_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_10217_newMod;
			jule::Slice<_22730be5e_Log> _10525_errs = _20d4324aa_CheckModuleFile(&((*(_self_))._field_mod));;
			if ((_10525_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _10525_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_20d3699ec_Ast>> _11217_asts = jule::Slice<jule::Ptr<_20d3699ec_Ast>>::alloc(0LL, _9717_dirents.len());;
	{
		auto expr = &(_9717_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2129b0050:;
		if (it != expr_end) {
			jule::Ptr<_223dd0706_DirEntry> _11316_dirent = *it;
			{
				if ((_223ddd956_IsDir((*(_11316_dirent))._field_Stat.ptr()) || (!(_2248aa8a6_HasSuffix((*(_11316_dirent))._field_Name, jule::Str(".jule", 5)))))) {
					goto _iter_next_2129b0050;
				};
				jule::Str _11917__path = _22726a241_Join(jule::Slice<jule::Str>::make({_9632_path,(*(_11316_dirent))._field_Name}));;
				jule::Ptr<_20d356885_File> _12021_file = _20d357c2c_NewFileSet(_11917__path);;
				_20d356c70_Fill(_12021_file.ptr(), _20e024970_readBuff((*(_12021_file))._field_Path));
				jule::Slice<_22730be5e_Log> _12221_errors = _20d3691a0_Lex(_12021_file, static_cast<jule::I64>(0LL));;
				if ((_12221_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12221_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_20de98bad_FileInfo> _12721_finfo = _20dedd450_ParseFile(_12021_file);;
				if (((*(_12721_finfo))._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = (*(_12721_finfo))._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_20d7b8731_isPassFileAnnotation((*(_11316_dirent))._field_Name)))) {
					goto _iter_next_2129b0050;
				};
				jule::Bool _13718_r = false;;
				jule::Slice<_22730be5e_Log> _13725_logs;;
				({
					__jule_tuple_bool__jule_tuple_s_22730be5e_Log __jule_assign_result = _20e027302_isPassBuildDirectives(_self_, &((*(_12721_finfo))._field_Ast));
					_13718_r = __jule_assign_result.__jule_result_arg0;
					_13725_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13725_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13725_logs;
					return __jule_func_result;;
				};
				if ((!(_13718_r))) {
					goto _iter_next_2129b0050;
				};
				{ jule::Slice<jule::Ptr<_20d3699ec_Ast>> &__jule_push_dest = _11217_asts; __jule_push_dest.push((*(_12721_finfo))._field_Ast); };
			}
			_iter_next_2129b0050:;
			++it;
			goto _iter_begin_2129b0050;
		}
		_iter_end_2129b0050:;
	};
	__jule_func_result.__jule_result_arg0 = _11217_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _20e026dc3_Imported(_20e025234_JuleImporter* _self_, jule::Ptr<_20d414d94_ImportInfo> _15331_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2129b2cde:;
		if (it != expr_end) {
			jule::Ptr<_20d414d94_ImportInfo> _15516_p = *it;
			{
				if ((((*(_15516_p))._field_Binded == (*(_15331_imp))._field_Binded) && ((*(_15516_p))._field_LinkPath == (*(_15331_imp))._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_2129b2cde:;
			++it;
			goto _iter_begin_2129b2cde;
		}
		_iter_end_2129b2cde:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2129ba2d0:;
			if (it != expr_end) {
				jule::I64 _16217_i = it - expr->begin();
				jule::Str _16220_mod = *it;
				{
					if (((*(_self_))._field_mod == _16220_mod)) {
						(*(_15331_imp))._field_ModId=_16217_i;
						goto _julec_label_2129bbe5d;
					};
				}
				_iter_next_2129ba2d0:;
				++it;
				_16217_i++;
				goto _iter_begin_2129ba2d0;
			}
			_iter_end_2129ba2d0:;
		};
		(*(_15331_imp))._field_ModId=static_cast<jule::I64>((*(_self_))._field_mods.len());
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_2129bbe5d:;
	};
	{ jule::Slice<jule::Ptr<_20d414d94_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_15331_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_22730be5e_Log _20e027302_isPassBuildDirectives(_20e025234_JuleImporter* _self_, jule::Ptr<_20d3699ec_Ast>* _17945_file) {
	__jule_tuple_bool__jule_tuple_s_22730be5e_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*((*(_17945_file))))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2129bd46a:;
		if (it != expr_end) {
			jule::Ptr<_20d36adb6_Directive> _18021_td = *it;
			{
				if ((!(*((*(_18021_td))._field_Tag))._field_Kind.equal("build", 5))) {
					goto _iter_next_2129bd46a;
				};
				_20d7baa41_directiveEval _18421_de = _20d7baa41_directiveEval{._field_d=_18021_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _18817_result = _20d7bbda5_eval(&_18421_de);;
				if ((_18421_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _18421_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_18817_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_2129bd46a:;
			++it;
			goto _iter_begin_2129bd46a;
		}
		_iter_end_2129bd46a:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _20e025234_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20e02a448_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2129dedd7_isCommonOrdered(jule::Slice<jule::Ptr<_20d38c58b_Struct>> _1834_s, jule::Ptr<_20d38c58b_Struct> _1842_t) {
	{
		auto expr = &((*(_1842_t))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2129e0e2c:;
		if (it != expr_end) {
			jule::Ptr<_20d38c58b_Struct> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2129e1878:;
					if (it != expr_end) {
						jule::Ptr<_20d38c58b_Struct> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_2129e1878:;
						++it;
						goto _iter_begin_2129e1878;
					}
					_iter_end_2129e1878:;
				};
			}
			_iter_next_2129e0e2c:;
			++it;
			goto _iter_begin_2129e0e2c;
		}
		_iter_end_2129e0e2c:;
	};
	return true;;
}

inline jule::Bool _2129e4d76_isCommonOrdered(jule::Slice<jule::Ptr<_20d458aca_Var>> _1834_s, jule::Ptr<_20d458aca_Var> _1842_t) {
	{
		auto expr = &((*(_1842_t))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2129e5d77:;
		if (it != expr_end) {
			jule::Ptr<_20d458aca_Var> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2129e67c3:;
					if (it != expr_end) {
						jule::Ptr<_20d458aca_Var> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_2129e67c3:;
						++it;
						goto _iter_begin_2129e67c3;
					}
					_iter_end_2129e67c3:;
				};
			}
			_iter_next_2129e5d77:;
			++it;
			goto _iter_begin_2129e5d77;
		}
		_iter_end_2129e5d77:;
	};
	return true;;
}



inline void _2129db576_orderCommon(jule::Slice<jule::Ptr<_20d38c58b_Struct>>* _3135_s) {
	jule::I64 _3217_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2129dca2d:;
		if (it != expr_end) {
			{
				jule::Bool _3421_swapped = false;;
				jule::I64 _3521_k = 0LL;;
				for (; (_3521_k < _3217_n); (_3521_k)++) {
					{
						if ((!(_2129dedd7_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3521_k])))) {
							({
								jule::Ptr<_20d38c58b_Struct> ___jule_assign_arg = (*(_3135_s))[(_3521_k + 1LL)];
								jule::Ptr<_20d38c58b_Struct> _1___jule_assign_arg = (*(_3135_s))[_3521_k];
								(*(_3135_s))[_3521_k] = ___jule_assign_arg;
								(*(_3135_s))[(_3521_k + 1LL)] = _1___jule_assign_arg;
							});
							_3421_swapped=true;
						};
					}
				_iter_next_2129dd754:;
				}
				_iter_end_2129dd754:;;
				if ((!(_3421_swapped))) {
					goto _iter_end_2129dca2d;
				};
				(_3217_n)--;
			}
			_iter_next_2129dca2d:;
			++it;
			goto _iter_begin_2129dca2d;
		}
		_iter_end_2129dca2d:;
	};
}

inline void _2129e0778_orderCommon(jule::Slice<jule::Ptr<_20d458aca_Var>>* _3135_s) {
	jule::I64 _3217_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2129e29bc:;
		if (it != expr_end) {
			{
				jule::Bool _3421_swapped = false;;
				jule::I64 _3521_k = 0LL;;
				for (; (_3521_k < _3217_n); (_3521_k)++) {
					{
						if ((!(_2129e4d76_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3521_k])))) {
							({
								jule::Ptr<_20d458aca_Var> ___jule_assign_arg = (*(_3135_s))[(_3521_k + 1LL)];
								jule::Ptr<_20d458aca_Var> _1___jule_assign_arg = (*(_3135_s))[_3521_k];
								(*(_3135_s))[_3521_k] = ___jule_assign_arg;
								(*(_3135_s))[(_3521_k + 1LL)] = _1___jule_assign_arg;
							});
							_3421_swapped=true;
						};
					}
				_iter_next_2129e36e3:;
				}
				_iter_end_2129e36e3:;;
				if ((!(_3421_swapped))) {
					goto _iter_end_2129e29bc;
				};
				(_3217_n)--;
			}
			_iter_next_2129e29bc:;
			++it;
			goto _iter_begin_2129e29bc;
		}
		_iter_end_2129e29bc:;
	};
}



inline void static__20e02b0a3_orderStructures(jule::Slice<jule::Ptr<_20d38c58b_Struct>>* _5136_structs) {
	_2129db576_orderCommon(_5136_structs);
}



inline void static__20e02b2d4_orderVars(jule::Slice<jule::Ptr<_20d458aca_Var>>* _5730_vars) {
	_2129e0778_orderCommon(_5730_vars);
}







std::ostream &operator<<(std::ostream &_Stream, _20e02a6ac_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20db39d7c_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _20db71479_optimizeChild(jule::Ptr<_20db70ec3_scopeDeadCode> _self_, jule::Ptr<_20d3e369c_Scope>* _3938_s) {
	jule::Ptr<_20db70ec3_scopeDeadCode> _4017_sdc = jule::new_ptr<_20db70ec3_scopeDeadCode>(_20db70ec3_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_3938_s)), ._field_stmts=(&((*((*(_3938_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*(_self_))._field_gotos, });;
	{
		_20db73d94_optimizeStmts(_4017_sdc);
	};
}



inline void _20db71732_optimizeBodyChildExceptional(jule::Ptr<_20db70ec3_scopeDeadCode> _self_, jule::Ptr<_20d3e369c_Scope>* _5053_s) {
	jule::Ptr<_20db70ec3_scopeDeadCode> _5117_sdc = jule::new_ptr<_20db70ec3_scopeDeadCode>(_20db70ec3_scopeDeadCode{._field_s=(*(_5053_s)), ._field_stmts=(&((*((*(_5053_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*(_self_))._field_gotos, ._field_except=true});;
	{
		_20db73d94_optimizeStmts(_5117_sdc);
	};
}



inline void _20db719da_optimizeBodyChild(jule::Ptr<_20db70ec3_scopeDeadCode> _self_, jule::Ptr<_20d3e369c_Scope>* _6142_s) {
	jule::Ptr<_20db70ec3_scopeDeadCode> _6217_sdc = jule::new_ptr<_20db70ec3_scopeDeadCode>(_20db70ec3_scopeDeadCode{._field_s=(*(_6142_s)), ._field_stmts=(&((*((*(_6142_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*(_self_))._field_gotos, });;
	{
		_20db73d94_optimizeStmts(_6217_sdc);
	};
}



inline void _20db71c93_optimizeExprModel(jule::Ptr<_20db70ec3_scopeDeadCode> _self_, jule::Any* _7142_model) {
	_20db7522a_exprDeadCode _7213_edc = static__20db75879_new(&(_self_));;
	_20db7ba5b_optimize(&_7213_edc, _7142_model);
}



inline void _20db71e91_eliminateFollowed(_20db70ec3_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		(*((*(_self_))._field_stmts))=(*((*(_self_))._field_stmts)).slice(0LL, ((*(_self_))._field_i + 1LL));
	};
	jule::Ptr<_20db70ec3_scopeDeadCode> _8317_parent = (*(_self_))._field_parent;;
	while ((_8317_parent != nullptr)) {
		{
			{
				(*((*(_8317_parent))._field_stmts))=(*((*(_8317_parent))._field_stmts)).slice(0LL, ((*(_8317_parent))._field_i + 1LL));
			};
			_8317_parent=(*(_8317_parent))._field_parent;
		}
	_iter_next_212a6ae63:;
	}
	_iter_end_212a6ae63:;;
}



inline void _20db72249_pushGoto(jule::Ptr<_20db70ec3_scopeDeadCode> _self_, jule::Ptr<_20d3e6419_GotoSt> _9232_gt) {
	jule::I64 _9317_i = 0LL;;
	for (; (_9317_i < (*((*(_self_))._field_labels)).len()); (_9317_i)++) {
		{
			if (((*(_9232_gt))._field_Ident == (*((*((*(_self_))._field_labels))[_9317_i]))._field_Ident)) {
				return;;
			};
		}
	_iter_next_212a6e3a6:;
	}
	_iter_end_212a6e3a6:;;
	{ jule::Slice<jule::Ptr<_20d3e6419_GotoSt>> &__jule_push_dest = (*((*(_self_))._field_gotos)); __jule_push_dest.push(_9232_gt); };
}



inline void _20db72502_pushLabel(jule::Ptr<_20db70ec3_scopeDeadCode> _self_, jule::Ptr<_20d3e6040_Label> _10233_l) {
	jule::I64 _10317_i = 0LL;;
	while ((_10317_i < (*((*(_self_))._field_gotos)).len())) {
		{
			if (((*(_10233_l))._field_Ident == (*((*((*(_self_))._field_gotos))[_10317_i]))._field_Ident)) {
				jule::copy(((*((*(_self_))._field_gotos)).slice(_10317_i)), ((*((*(_self_))._field_gotos)).slice((_10317_i + 1LL))));
				(*((*(_self_))._field_gotos))=(*((*(_self_))._field_gotos)).slice(0LL, ((*((*(_self_))._field_gotos)).len() - 1LL));
				goto _iter_next_212a715c8;
			};
			(_10317_i)++;
		}
	_iter_next_212a715c8:;
	}
	_iter_end_212a715c8:;;
	{ jule::Slice<jule::Ptr<_20d3e6040_Label>> &__jule_push_dest = (*((*(_self_))._field_labels)); __jule_push_dest.push(_10233_l); };
}



inline void _20db727aa_optimizeRangeIter(jule::Ptr<_20db70ec3_scopeDeadCode> _self_, jule::Ptr<_20d3e54d4_RangeIter> _11541_it) {
	_20db71c93_optimizeExprModel(_self_, &((*((*(_11541_it))._field_Expr))._field_Model));
	_20db719da_optimizeBodyChild(_self_, &((*(_11541_it))._field_Scope));
}



inline void _20db72a63_optimizeWhileIter(jule::Ptr<_20db70ec3_scopeDeadCode> _self_, jule::Ptr<_20d3e4a88_WhileIter> _12041_it) {
	_20db71c93_optimizeExprModel(_self_, &((*(_12041_it))._field_Expr));
	if (((*(_12041_it))._field_Next != nullptr)) {
		_20db73b96_optimizeStmt(_self_, (*(_12041_it))._field_Next);
	};
	_20db719da_optimizeBodyChild(_self_, &((*(_12041_it))._field_Scope));
}



inline void _20db72d1b_optimizeInfIter(jule::Ptr<_20db70ec3_scopeDeadCode> _self_, jule::Ptr<_20d3e45d2_InfIter> _12839_it) {
	_20db719da_optimizeBodyChild(_self_, &((*(_12839_it))._field_Scope));
}



inline void _20db730c4_optimizeConditional(jule::Ptr<_20db70ec3_scopeDeadCode> _self_, jule::Ptr<_20d3e42d5_Conditional> _13243_c) {
	{
		auto expr = &((*(_13243_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212a7847b:;
		if (it != expr_end) {
			jule::Ptr<_20d3e3aba_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_20db71c93_optimizeExprModel(_self_, &((*(_13321_case))._field_Expr));
					_20db719da_optimizeBodyChild(_self_, &((*(_13321_case))._field_Scope));
				};
			}
			_iter_next_212a7847b:;
			++it;
			goto _iter_begin_212a7847b;
		}
		_iter_end_212a7847b:;
	};
	if (((*(_13243_c))._field_Default != nullptr)) {
		if (((*(_13243_c))._field_Elifs.len() == 0LL)) {
			_20db71479_optimizeChild(_self_, &((*((*(_13243_c))._field_Default))._field_Scope));
		} else {
			_20db719da_optimizeBodyChild(_self_, &((*((*(_13243_c))._field_Default))._field_Scope));
		};
	};
}



inline void _20db7337c_optimizeMatch(jule::Ptr<_20db70ec3_scopeDeadCode> _self_, jule::Ptr<_20d3e77d3_Match> _15037_m) {
	{
		auto expr = &((*(_15037_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212a7b9e0:;
		if (it != expr_end) {
			jule::Ptr<_20d3e841b_Case> _15121_case = *it;
			{
				{
					auto expr = &((*(_15121_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_212a7c43b:;
					if (it != expr_end) {
						jule::Ptr<_20d087165_Data> _15225_expr = *it;
						{
							_20db71c93_optimizeExprModel(_self_, &((*(_15225_expr))._field_Model));
						}
						_iter_next_212a7c43b:;
						++it;
						goto _iter_begin_212a7c43b;
					}
					_iter_end_212a7c43b:;
				};
				_20db719da_optimizeBodyChild(_self_, &((*(_15121_case))._field_Scope));
			}
			_iter_next_212a7b9e0:;
			++it;
			goto _iter_begin_212a7b9e0;
		}
		_iter_end_212a7b9e0:;
	};
	if (((*(_15037_m))._field_Default != nullptr)) {
		if (((*(_15037_m))._field_Cases.len() == 0LL)) {
			_20db71479_optimizeChild(_self_, &((*((*(_15037_m))._field_Default))._field_Scope));
		} else {
			_20db719da_optimizeBodyChild(_self_, &((*((*(_15037_m))._field_Default))._field_Scope));
		};
	};
}



inline void _20db73635_optimizeAssign(jule::Ptr<_20db70ec3_scopeDeadCode> _self_, jule::Ptr<_20d3e6c99_Assign> _16838_assign) {
	_20db71c93_optimizeExprModel(_self_, &((*((*(_16838_assign))._field_L))._field_Model));
	_20db71c93_optimizeExprModel(_self_, &((*((*(_16838_assign))._field_R))._field_Model));
}



inline void _20db738dd_optimizeMultiAssign(jule::Ptr<_20db70ec3_scopeDeadCode> _self_, jule::Ptr<_20d3e7173_MultiAssign> _17343_assign) {
	{
		auto expr = &((*(_17343_assign))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212a8184c:;
		if (it != expr_end) {
			jule::Ptr<_20d087165_Data> _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_20db71c93_optimizeExprModel(_self_, &((*(_17421_l))._field_Model));
				};
			}
			_iter_next_212a8184c:;
			++it;
			goto _iter_begin_212a8184c;
		}
		_iter_end_212a8184c:;
	};
	_20db71c93_optimizeExprModel(_self_, &((*(_17343_assign))._field_R));
}



inline void _20db73b96_optimizeStmt(jule::Ptr<_20db70ec3_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_212a834ec:;
			{
				jule::Ptr<_20d3e369c_Scope> _18521_scope = _18236_st.cast_ptr<_20d3e369c_Scope>(&__jule_any_type22);;
				if ((*(_18521_scope))._field_Deferred) {
					_20db741c4_eliminateDeadCodeOfScope(_18521_scope);
				} else {
					_20db71479_optimizeChild(_self_, &(_18521_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_212a83563:;
			{
				_20db727aa_optimizeRangeIter(_self_, _18236_st.cast_ptr<_20d3e54d4_RangeIter>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_212a835c9:;
			{
				_20db72a63_optimizeWhileIter(_self_, _18236_st.cast_ptr<_20d3e4a88_WhileIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_212a83651:;
			{
				_20db72d1b_optimizeInfIter(_self_, _18236_st.cast_ptr<_20d3e45d2_InfIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_212a836c8:;
			{
				_20db730c4_optimizeConditional(_self_, _18236_st.cast_ptr<_20d3e42d5_Conditional>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_212a83750:;
			{
				_20db7337c_optimizeMatch(_self_, _18236_st.cast_ptr<_20d3e77d3_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_212a837c7:;
			{
				_20db73635_optimizeAssign(_self_, _18236_st.cast_ptr<_20d3e6c99_Assign>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_212a8384e:;
			{
				_20db738dd_optimizeMultiAssign(_self_, _18236_st.cast_ptr<_20d3e7173_MultiAssign>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_212a838c6:;
			{
				jule::Ptr<_20d087165_Data> _20621_d = _18236_st.cast_ptr<_20d087165_Data>(&__jule_any_type24);;
				if ((*(_self_))._field_except) {
					goto _match_end_212a833a9;
				};
				{
					auto &_match_expr{ (*(_20621_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type30) {
						_case_begin_212a88e2b:;
						{
							_20db71e91_eliminateFollowed(_self_.ptr());
						}
					}
					else {
						_case_begin_212a895ad:;
						{
							_20db71c93_optimizeExprModel(_self_, &((*(_20621_d))._field_Model));
						}
					}
					_match_end_212a89558:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_212a8394d:;
			{
				_20db71e91_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_212a839c5:;
			{
				_20db72249_pushGoto(_self_, _18236_st.cast_ptr<_20d3e6419_GotoSt>(&__jule_any_type43));
				_20db71e91_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_212a83a4c:;
			{
				_20db72502_pushLabel(_self_, _18236_st.cast_ptr<_20d3e6040_Label>(&__jule_any_type21));
			}
		}
		_match_end_212a833a9:;
	};
}



inline void _20db73d94_optimizeStmts(jule::Ptr<_20db70ec3_scopeDeadCode> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*(_self_))._field_i < (*((*(_self_))._field_stmts)).len()); ((*(_self_))._field_i)++) {
		{
			_20db73b96_optimizeStmt(_self_, (*((*(_self_))._field_stmts))[(*(_self_))._field_i]);
		}
	_iter_next_212a8bc75:;
	}
	_iter_end_212a8bc75:;;
}







std::ostream &operator<<(std::ostream &_Stream, _20db70ec3_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _20db7522a_exprDeadCode static__20db75879_new(jule::Ptr<_20db70ec3_scopeDeadCode>* _4924_s) {
	return _20db7522a_exprDeadCode{._field_s=(*(_4924_s))};;
}



inline void _20db75b32_binary(_20db7522a_exprDeadCode* _self_, jule::Ptr<_20d394b04_BinopExprModel> _5525_m) {
	_20db7ba5b_optimize(_self_, &((*((*(_5525_m))._field_Left))._field_Model));
	_20db7ba5b_optimize(_self_, &((*((*(_5525_m))._field_Right))._field_Model));
}



inline void _20db75dda_unary(_20db7522a_exprDeadCode* _self_, jule::Ptr<_20d394ecd_UnaryExprModel> _6024_m) {
	_20db7ba5b_optimize(_self_, &((*((*(_6024_m))._field_Expr))._field_Model));
}



inline void _20db76193_structureLit(_20db7522a_exprDeadCode* _self_, jule::Ptr<_20d3958a2_StructLitExprModel> _6431_m) {
	{
		auto expr = &((*(_6431_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212a90806:;
		if (it != expr_end) {
			jule::Ptr<_20d39550b_StructArgExprModel> _6521_arg = *it;
			{
				_20db7ba5b_optimize(_self_, &((*((*(_6521_arg))._field_Expr))._field_Model));
			}
			_iter_next_212a90806:;
			++it;
			goto _iter_begin_212a90806;
		}
		_iter_end_212a90806:;
	};
}



inline void _20db7644b_allocStructure(_20db7522a_exprDeadCode* _self_, jule::Ptr<_20d395b9e_AllocStructLitExprModel> _7033_m) {
	_20db76193_structureLit(_self_, (*(_7033_m))._field_Lit);
}



inline void _20db76704_casting(_20db7522a_exprDeadCode* _self_, jule::Ptr<_20d396232_CastingExprModel> _7426_m) {
	_20db7ba5b_optimize(_self_, &((*(_7426_m))._field_Expr));
}



inline void _20db769ac_args(_20db7522a_exprDeadCode* _self_, jule::Slice<jule::Any>* _7824_args) {
	{
		auto expr = _7824_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212a92c8c:;
		if (it != expr_end) {
			jule::Any _7921_arg = *it;
			{
				_20db7ba5b_optimize(_self_, &(_7921_arg));
			}
			_iter_next_212a92c8c:;
			++it;
			goto _iter_begin_212a92c8c;
		}
		_iter_end_212a92c8c:;
	};
}



inline void _20db76c65_funcCall(_20db7522a_exprDeadCode* _self_, jule::Ptr<_20d396ad4_FnCallExprModel> _8427_m) {
	_20db7ba5b_optimize(_self_, &((*(_8427_m))._field_Expr));
	_20db769ac_args(_self_, &((*(_8427_m))._field_Args));
	if (((*(_8427_m))._field_Except != nullptr)) {
		_20db71732_optimizeBodyChildExceptional((*(_self_))._field_s, &((*(_8427_m))._field_Except));
	};
}



inline void _20db7701d_slice(_20db7522a_exprDeadCode* _self_, jule::Ptr<_20d396ead_SliceExprModel> _9224_m) {
	_20db769ac_args(_self_, &((*(_9224_m))._field_Elems));
}



inline void _20db772c6_array(_20db7522a_exprDeadCode* _self_, jule::Ptr<_20d39a005_ArrayExprModel> _9624_m) {
	if ((((*(_9624_m))._field_Elems.len() == 2LL) && ((*(_9624_m))._field_Elems[1LL] == nullptr))) {
		_20db7ba5b_optimize(_self_, &((*(_9624_m))._field_Elems[0LL]));
	};
	_20db769ac_args(_self_, &((*(_9624_m))._field_Elems));
}



inline void _20db7757e_indexing(_20db7522a_exprDeadCode* _self_, jule::Ptr<_20d397464_IndexingExprModel> _10327_m) {
	_20db7ba5b_optimize(_self_, &((*((*(_10327_m))._field_Expr))._field_Model));
	_20db7ba5b_optimize(_self_, &((*((*(_10327_m))._field_Index))._field_Model));
}



inline void _20db77837_anonFunc(_20db7522a_exprDeadCode* _self_, jule::Ptr<_20d39783d_AnonFnExprModel> _10827_m) {
	_20db741c4_eliminateDeadCodeOfScope((*((*(_10827_m))._field_Func))._field_Scope);
}



inline void _20db77ae0_mapExpr(_20db7522a_exprDeadCode* _self_, jule::Ptr<_20d3981bd_MapExprModel> _11226_m) {
	{
		auto expr = &((*(_11226_m))._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212a99436:;
		if (it != expr_end) {
			jule::Ptr<_20d397c17_KeyValPairExprModel> _11321_pair = *it;
			{
				_20db7ba5b_optimize(_self_, &((*(_11321_pair))._field_Key));
				_20db7ba5b_optimize(_self_, &((*(_11321_pair))._field_Val));
			}
			_iter_next_212a99436:;
			++it;
			goto _iter_begin_212a99436;
		}
		_iter_end_212a99436:;
	};
}



inline void _20db77d98_slicing(_20db7522a_exprDeadCode* _self_, jule::Ptr<_20d398751_SlicingExprModel> _11926_m) {
	_20db7ba5b_optimize(_self_, &((*(_11926_m))._field_Expr));
	_20db7ba5b_optimize(_self_, &((*(_11926_m))._field_Left));
	if (((*(_11926_m))._field_Right != nullptr)) {
		_20db7ba5b_optimize(_self_, &((*(_11926_m))._field_Right));
	};
}



inline void _20db78151_traitSub(_20db7522a_exprDeadCode* _self_, jule::Ptr<_20d398cd4_TraitSubIdentExprModel> _12727_m) {
	_20db7ba5b_optimize(_self_, &((*(_12727_m))._field_Expr));
}



inline void _20db78409_structureSub(_20db7522a_exprDeadCode* _self_, jule::Ptr<_20d399675_StructSubIdentExprModel> _13131_m) {
	_20db7ba5b_optimize(_self_, &((*((*(_13131_m))._field_Expr))._field_Model));
}



inline void _20db786b2_tuple(_20db7522a_exprDeadCode* _self_, jule::Ptr<_20d39a302_TupleExprModel> _13524_m) {
	{
		auto expr = &((*(_13524_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212a9d539:;
		if (it != expr_end) {
			jule::Ptr<_20d087165_Data> _13621_d = *it;
			{
				_20db7ba5b_optimize(_self_, &((*(_13621_d))._field_Model));
			}
			_iter_next_212a9d539:;
			++it;
			goto _iter_begin_212a9d539;
		}
		_iter_end_212a9d539:;
	};
}



inline void _20db7896a_newCall(_20db7522a_exprDeadCode* _self_, jule::Ptr<_20d39b27b_BuiltinNewCallExprModel> _14126_m) {
	if (((*(_14126_m))._field_Init != nullptr)) {
		_20db7ba5b_optimize(_self_, &((*(_14126_m))._field_Init));
	};
}



inline void _20db78c23_outCall(_20db7522a_exprDeadCode* _self_, jule::Ptr<_20d39a6cb_BuiltinOutCallExprModel> _14726_m) {
	_20db7ba5b_optimize(_self_, &((*(_14726_m))._field_Expr));
}



inline void _20db78ecb_outlnCall(_20db7522a_exprDeadCode* _self_, jule::Ptr<_20d39aaa5_BuiltinOutlnCallExprModel> _15128_m) {
	_20db7ba5b_optimize(_self_, &((*(_15128_m))._field_Expr));
}



inline void _20db79284_panicCall(_20db7522a_exprDeadCode* _self_, jule::Ptr<_20d39b655_BuiltinPanicCallExprModel> _15528_m) {
	_20db7ba5b_optimize(_self_, &((*(_15528_m))._field_Expr));
}



inline void _20db7953c_assertCall(_20db7522a_exprDeadCode* _self_, jule::Ptr<_20d39bb0b_BuiltinAssertCallExprModel> _15929_m) {
	_20db7ba5b_optimize(_self_, &((*(_15929_m))._field_Expr));
}



inline void _20db797e5_errorCall(_20db7522a_exprDeadCode* _self_, jule::Ptr<_20d39d9a9_BuiltinErrorCallExprModel> _16328_m) {
	_20db7ba5b_optimize(_self_, &((*((*(_16328_m))._field_Err))._field_Model));
}



inline void _20db79a9d_makeCall(_20db7522a_exprDeadCode* _self_, jule::Ptr<_20d39c0b2_BuiltinMakeCallExprModel> _16727_m) {
	if (((*(_16727_m))._field_Len != nullptr)) {
		_20db7ba5b_optimize(_self_, &((*(_16727_m))._field_Len));
	};
	if (((*(_16727_m))._field_Cap != nullptr)) {
		_20db7ba5b_optimize(_self_, &((*(_16727_m))._field_Cap));
	};
}



inline void _20db79d56_appendCall(_20db7522a_exprDeadCode* _self_, jule::Ptr<_20d39c48b_BuiltinAppendCallExprModel> _17629_m) {
	_20db7ba5b_optimize(_self_, &((*(_17629_m))._field_Dest));
	_20db7ba5b_optimize(_self_, &((*(_17629_m))._field_Elements));
}



inline void _20db7a10e_lenCall(_20db7522a_exprDeadCode* _self_, jule::Ptr<_20d39c788_BuiltinLenCallExprModel> _18126_m) {
	_20db7ba5b_optimize(_self_, &((*((*(_18126_m))._field_Expr))._field_Model));
}



inline void _20db7a3b7_capCall(_20db7522a_exprDeadCode* _self_, jule::Ptr<_20d39ca85_BuiltinCapCallExprModel> _18526_m) {
	_20db7ba5b_optimize(_self_, &((*((*(_18526_m))._field_Expr))._field_Model));
}



inline void _20db7a670_cloneCall(_20db7522a_exprDeadCode* _self_, jule::Ptr<_20d39ada2_BuiltinCloneCallExprModel> _18928_m) {
	_20db7ba5b_optimize(_self_, &((*(_18928_m))._field_Expr));
}



inline void _20db7a928_deleteCall(_20db7522a_exprDeadCode* _self_, jule::Ptr<_20d39ce5e_BuiltinDeleteCallExprModel> _19329_m) {
	_20db7ba5b_optimize(_self_, &((*((*(_19329_m))._field_Dest))._field_Model));
	if (((*(_19329_m))._field_Key != nullptr)) {
		_20db7ba5b_optimize(_self_, &((*((*(_19329_m))._field_Key))._field_Model));
	};
}



inline void _20db7abd1_sizeof(_20db7522a_exprDeadCode* _self_, jule::Ptr<_20d39db96_SizeofExprModel> _20025_m) {
	_20db7ba5b_optimize(_self_, &((*(_20025_m))._field_Expr));
}



inline void _20db7ae89_alignof(_20db7522a_exprDeadCode* _self_, jule::Ptr<_20d39de3d_AlignofExprModel> _20426_m) {
	_20db7ba5b_optimize(_self_, &((*(_20426_m))._field_Expr));
}



inline void _20db7b242_integratedToStr(_20db7522a_exprDeadCode* _self_, jule::Ptr<_20d39e537_IntegratedToStrExprModel> _20834_m) {
	_20db7ba5b_optimize(_self_, &((*(_20834_m))._field_Expr));
}



inline void _20db7b4ea_free(_20db7522a_exprDeadCode* _self_, jule::Ptr<_20d39ec0d_FreeExprModel> _21223_m) {
	_20db7ba5b_optimize(_self_, &((*(_21223_m))._field_Expr));
}



inline void _20db7b7a3_backendEmit(_20db7522a_exprDeadCode* _self_, jule::Ptr<_20d39e911_BackendEmitExprModel> _21630_m) {
	_20db769ac_args(_self_, &((*(_21630_m))._field_Exprs));
}



inline void _20db7ba5b_optimize(_20db7522a_exprDeadCode* _self_, jule::Any* _22028_model) {
	{
		auto &_match_expr{ (*(_22028_model)) };
		
		if (_match_expr.type == &__jule_any_type112) {
			_case_begin_212aac47c:;
			{
				_20db75b32_binary(_self_, (*(_22028_model)).cast_ptr<_20d394b04_BinopExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_212aac4e3:;
			{
				_20db75dda_unary(_self_, (*(_22028_model)).cast_ptr<_20d394ecd_UnaryExprModel>(&__jule_any_type72));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_212aac559:;
			{
				_20db76193_structureLit(_self_, (*(_22028_model)).cast_ptr<_20d3958a2_StructLitExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_212aac5d1:;
			{
				_20db7644b_allocStructure(_self_, (*(_22028_model)).cast_ptr<_20d395b9e_AllocStructLitExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_212aac658:;
			{
				_20db76704_casting(_self_, (*(_22028_model)).cast_ptr<_20d396232_CastingExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_212aac6d0:;
			{
				_20db76c65_funcCall(_self_, (*(_22028_model)).cast_ptr<_20d396ad4_FnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_212aac757:;
			{
				_20db7701d_slice(_self_, (*(_22028_model)).cast_ptr<_20d396ead_SliceExprModel>(&__jule_any_type80));
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_212aac7ce:;
			{
				_20db772c6_array(_self_, (*(_22028_model)).cast_ptr<_20d39a005_ArrayExprModel>(&__jule_any_type88));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_212aac856:;
			{
				_20db7757e_indexing(_self_, (*(_22028_model)).cast_ptr<_20d397464_IndexingExprModel>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_212aac8cd:;
			{
				_20db77837_anonFunc(_self_, (*(_22028_model)).cast_ptr<_20d39783d_AnonFnExprModel>(&__jule_any_type101));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_212aac955:;
			{
				_20db77ae0_mapExpr(_self_, (*(_22028_model)).cast_ptr<_20d3981bd_MapExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_212aac9cc:;
			{
				_20db77d98_slicing(_self_, (*(_22028_model)).cast_ptr<_20d398751_SlicingExprModel>(&__jule_any_type95));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_212aaca54:;
			{
				_20db78151_traitSub(_self_, (*(_22028_model)).cast_ptr<_20d398cd4_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_212aacacb:;
			{
				_20db78409_structureSub(_self_, (*(_22028_model)).cast_ptr<_20d399675_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_212aacb53:;
			{
				_20db786b2_tuple(_self_, (*(_22028_model)).cast_ptr<_20d39a302_TupleExprModel>(&__jule_any_type85));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_212aacbca:;
			{
				_20db78c23_outCall(_self_, (*(_22028_model)).cast_ptr<_20d39a6cb_BuiltinOutCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_212aacc52:;
			{
				_20db78ecb_outlnCall(_self_, (*(_22028_model)).cast_ptr<_20d39aaa5_BuiltinOutlnCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_212aaccc9:;
			{
				_20db7896a_newCall(_self_, (*(_22028_model)).cast_ptr<_20d39b27b_BuiltinNewCallExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_212aacd51:;
			{
				_20db79284_panicCall(_self_, (*(_22028_model)).cast_ptr<_20d39b655_BuiltinPanicCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_212aacdc8:;
			{
				_20db7953c_assertCall(_self_, (*(_22028_model)).cast_ptr<_20d39bb0b_BuiltinAssertCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_212aace50:;
			{
				_20db797e5_errorCall(_self_, (*(_22028_model)).cast_ptr<_20d39d9a9_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_212aacec7:;
			{
				_20db79a9d_makeCall(_self_, (*(_22028_model)).cast_ptr<_20d39c0b2_BuiltinMakeCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_212aad04e:;
			{
				_20db79d56_appendCall(_self_, (*(_22028_model)).cast_ptr<_20d39c48b_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_212aad0c6:;
			{
				_20db7a10e_lenCall(_self_, (*(_22028_model)).cast_ptr<_20d39c788_BuiltinLenCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_212aad14d:;
			{
				_20db7a3b7_capCall(_self_, (*(_22028_model)).cast_ptr<_20d39ca85_BuiltinCapCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_212aad1c5:;
			{
				_20db7a670_cloneCall(_self_, (*(_22028_model)).cast_ptr<_20d39ada2_BuiltinCloneCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_212aad24c:;
			{
				_20db7a928_deleteCall(_self_, (*(_22028_model)).cast_ptr<_20d39ce5e_BuiltinDeleteCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_212aad2c4:;
			{
				_20db7abd1_sizeof(_self_, (*(_22028_model)).cast_ptr<_20d39db96_SizeofExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_212aad34b:;
			{
				_20db7ae89_alignof(_self_, (*(_22028_model)).cast_ptr<_20d39de3d_AlignofExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_212aad3c3:;
			{
				_20db7b242_integratedToStr(_self_, (*(_22028_model)).cast_ptr<_20d39e537_IntegratedToStrExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_212aad44a:;
			{
				_20db7b4ea_free(_self_, (*(_22028_model)).cast_ptr<_20d39ec0d_FreeExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_212aad4c2:;
			{
				_20db7b7a3_backendEmit(_self_, (*(_22028_model)).cast_ptr<_20d39e911_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_212aac1c4:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20db7522a_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d57491b_SwapExprModel _Src) {
	_Stream << "SwapExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d574ce5_EmptyCompareExprModel _Src) {
	_Stream << "EmptyCompareExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Neg:" << _Src._field_Neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d5750e2_RefExprModel _Src) {
	_Stream << "RefExprModel{";
	_Stream << "Var:" << _Src._field_Var;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d575620_StrCompExprModel _Src) {
	_Stream << "StrCompExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "NotEq:" << _Src._field_NotEq;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d575ba3_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d575ea0_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d57629c_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d5766cb_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d576aa5_AppendToSliceExprModel _Src) {
	_Stream << "AppendToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Slice:" << _Src._field_Slice;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20d576da2_InlineStdInternalNosafeStobs _Src) {
	_Stream << "InlineStdInternalNosafeStobs{";
	_Stream << "Str:" << _Src._field_Str;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20d57804b_scopeOptimizer> static__20d57858a_new(jule::Ptr<_20d3e369c_Scope> _4623_scope) {
	return jule::new_ptr<_20d57804b_scopeOptimizer>(_20d57804b_scopeOptimizer{._field_scope=_4623_scope});;
}



inline void _20d578843_setCurrentStmt(_20d57804b_scopeOptimizer* _self_, jule::Any _5237_stmt) {
	(*((*(_self_))._field_scope))._field_Stmts[(*(_self_))._field_i]=(*(((jule::Any*)((&(_5237_stmt))))));
}



inline void _20d578a41_removeCurrent(_20d57804b_scopeOptimizer* _self_) {
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*((*(_self_))._field_scope))._field_Stmts.slice(0LL, (*(_self_))._field_i),(*((*(_self_))._field_scope))._field_Stmts.slice(((*(_self_))._field_i + 1LL)));
}



inline void _20d578ce9_optimizeData(_20d57804b_scopeOptimizer* _self_, jule::Ptr<_20d087165_Data> _6135_d) {
	{
		auto &_match_expr{ (*(_6135_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type35) {
			_case_begin_212b1c6c9:;
			{
				jule::Ptr<_20d396ad4_FnCallExprModel> _6421_m = (*(_6135_d))._field_Model.cast_ptr<_20d396ad4_FnCallExprModel>(&__jule_any_type35);;
				if (_23c5b2375_Production) {
					if (((!(_20d3a6ece_IsBuiltin((*(_6421_m))._field_Func.ptr()))) && _20d57c3a2_isStdPackage(&((*((*((*((*((*(_6421_m))._field_Func))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str("debug", 5)))) {
						_20d578843_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
			}
		}
		_match_end_212b1c674:;
	};
	static__20d57e78e_optimize(&((*(_6135_d))._field_Model));
}



inline void _20d5790a2_optimizeVar(_20d57804b_scopeOptimizer* _self_, jule::Ptr<_20d458aca_Var> _7634_v) {
	if (((*(_7634_v))._field_Value != nullptr)) {
		static__20d57e78e_optimize(&((*((*((*(_7634_v))._field_Value))._field_Data))._field_Model));
	};
}



inline void _20d57935a_optimizeConditional(_20d57804b_scopeOptimizer* _self_, jule::Ptr<_20d3e42d5_Conditional> _8242_c) {
	{
		auto expr = &((*(_8242_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212b220d5:;
		if (it != expr_end) {
			jule::Ptr<_20d3e3aba_If> _8321_elif = *it;
			{
				static__20d57e78e_optimize(&((*(_8321_elif))._field_Expr));
				_20d57bc31_optimizeChild(_self_, (*(_8321_elif))._field_Scope);
			}
			_iter_next_212b220d5:;
			++it;
			goto _iter_begin_212b220d5;
		}
		_iter_end_212b220d5:;
	};
	if (((*(_8242_c))._field_Default != nullptr)) {
		_20d57bc31_optimizeChild(_self_, (*((*(_8242_c))._field_Default))._field_Scope);
	};
	if ((!(_20e030409_Cond))) {
		return;;
	};
	jule::Bool _9517_constCase = false;;
	{
		auto expr = &((*(_8242_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212b242a2:;
		if (it != expr_end) {
			jule::I64 _9814_i = it - expr->begin();
			jule::Ptr<_20d3e3aba_If> _9821_elif = *it;
			{
				if ((!(_20d57c6b0_isConstantValidConditionalCase(&(_9821_elif))))) {
					goto _iter_next_212b242a2;
				};
				_9517_constCase=true;
				(*(_8242_c))._field_Elifs=(*(_8242_c))._field_Elifs.slice(0LL, _9814_i);
				(*(_8242_c))._field_Default=jule::new_ptr<_20d3e3db7_Else>(_20d3e3db7_Else{._field_Scope=(*(_9821_elif))._field_Scope});
				goto _iter_end_212b242a2;
			}
			_iter_next_212b242a2:;
			++it;
			_9814_i++;
			goto _iter_begin_212b242a2;
		}
		_iter_end_212b242a2:;
	};
	if (((*(_8242_c))._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_20d3e3aba_If>* _11517_i = (&((*(_8242_c))._field_Elifs[0LL]));;
	jule::Ptr<_20d3e3aba_If>* _11613_end = (&((*(_8242_c))._field_Elifs[((*(_8242_c))._field_Elifs.len() - 1LL)]));;
	for (; (_11517_i <= _11613_end); (_11517_i)++) {
		{
			{
				if (_20d57d084_isUnreachableConditionalCase(&((*(_11517_i))))) {
					(*(_11517_i))=nullptr;
				};
			};
		}
	_iter_next_212b27bce:;
	}
	_iter_end_212b27bce:;;
	if (((*(_8242_c))._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_9517_constCase))) {
		return;;
	};
	jule::I64 _13417_only = -1LL;;
	{
		auto expr = &((*(_8242_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212b29274:;
		if (it != expr_end) {
			jule::I64 _13513_j = it - expr->begin();
			jule::Ptr<_20d3e3aba_If> _13516_elif = *it;
			{
				if ((_13516_elif != nullptr)) {
					if ((_13417_only != -1LL)) {
						return;;
					};
					_13417_only=_13513_j;
				};
			}
			_iter_next_212b29274:;
			++it;
			_13513_j++;
			goto _iter_begin_212b29274;
		}
		_iter_end_212b29274:;
	};
	if ((_13417_only != -1LL)) {
		_20d578843_setCurrentStmt(_self_, jule::Any((*((*(_8242_c))._field_Elifs[_13417_only]))._field_Scope, &__jule_any_type22));
	};
}



inline void _20d579778_buildDefaultConstantTrueCase(_20d57804b_scopeOptimizer* _self_, jule::Ptr<_20d3e841b_Case> _15151_case, jule::I64* _15169_i, jule::Ptr<_20d3e77d3_Match>* _15182_m) {
	(*(_15151_case))._field_Exprs=nullptr;
	jule::I64 _15313_start = (*(_15169_i));;
	_julec_label_212b2bead:;
	for (;;) {
		{
			if (((*((*(_15151_case))._field_Scope))._field_Stmts.len() == 0LL)) {
				goto _iter_end_212b2be25;
			};
			jule::Any *_15922_stmt = &((*((*(_15151_case))._field_Scope))._field_Stmts[((*((*(_15151_case))._field_Scope))._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_15922_stmt)) };
				
				if (_match_expr.type == &__jule_any_type49) {
					_case_begin_212b2de27:;
					{
						((*(_15169_i)))++;
						if (((*(_15169_i)) >= (*((*(_15182_m))))._field_Cases.len())) {
							(*(_15922_stmt))=jule::Any((*((*((*(_15182_m))))._field_Default))._field_Scope, &__jule_any_type22);
							goto _iter_end_212b2be25;
						};
						_15151_case=(*((*(_15182_m))))._field_Cases[(*(_15169_i))];
						(*(_15922_stmt))=jule::Any((*(_15151_case))._field_Scope, &__jule_any_type22);
					}
				}
				else {
					_case_begin_212b2e07b:;
					{
						goto _iter_end_212b2be25;
					}
				}
				_match_end_212b2e026:;
			};
		}
	_iter_next_212b2be25:;
	}
	_iter_end_212b2be25:;;
	(*((*(_15182_m))))._field_Default=(*((*(_15182_m))))._field_Cases[_15313_start];
	(*((*(_15182_m))))._field_Cases=(*((*(_15182_m))))._field_Cases.slice(0LL, _15313_start);
}



inline void _20d579a31_optimizeMatch(_20d57804b_scopeOptimizer* _self_, jule::Ptr<_20d3e77d3_Match> _17736_m) {
	{
		auto expr = &((*(_17736_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212b3191e:;
		if (it != expr_end) {
			jule::Ptr<_20d3e841b_Case> _17821_case = *it;
			{
				{
					auto expr = &((*(_17821_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_212b3236a:;
					if (it != expr_end) {
						jule::Ptr<_20d087165_Data> _17925_expr = *it;
						{
							static__20d57e78e_optimize(&((*(_17925_expr))._field_Model));
						}
						_iter_next_212b3236a:;
						++it;
						goto _iter_begin_212b3236a;
					}
					_iter_end_212b3236a:;
				};
				_20d57bc31_optimizeChild(_self_, (*(_17821_case))._field_Scope);
			}
			_iter_next_212b3191e:;
			++it;
			goto _iter_begin_212b3191e;
		}
		_iter_end_212b3191e:;
	};
	if (((*(_17736_m))._field_Default != nullptr)) {
		_20d57bc31_optimizeChild(_self_, (*((*(_17736_m))._field_Default))._field_Scope);
	};
	if ((!(_20e030409_Cond))) {
		return;;
	};
	jule::Bool _19217_constCase = false;;
	{
		auto expr = &((*(_17736_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212b34229:;
		if (it != expr_end) {
			jule::I64 _19518_i = it - expr->begin();
			jule::Ptr<_20d3e841b_Case> _19525_case = *it;
			{
				if ((!(_20d57ccba_isConstantValidMatchCase(&(_19525_case))))) {
					goto _iter_next_212b34229;
				};
				_19217_constCase=true;
				_20d579778_buildDefaultConstantTrueCase(_self_, _19525_case, &(_19518_i), &(_17736_m));
				goto _iter_end_212b34229;
			}
			_iter_next_212b34229:;
			++it;
			_19518_i++;
			goto _iter_begin_212b34229;
		}
		_iter_end_212b34229:;
	};
	if (((*(_17736_m))._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_20d3e841b_Case>* _20917_i = (&((*(_17736_m))._field_Cases[0LL]));;
	jule::Ptr<_20d3e841b_Case>* _21013_end = (&((*(_17736_m))._field_Cases[((*(_17736_m))._field_Cases.len() - 1LL)]));;
	for (; (_20917_i <= _21013_end); (_20917_i)++) {
		{
			{
				if (_20d57d34d_isUnreachableMatchCase(&((*(_20917_i))))) {
					(*(_20917_i))=nullptr;
				};
			};
		}
	_iter_next_212b3712d:;
	}
	_iter_end_212b3712d:;;
	if ((!(_19217_constCase))) {
		return;;
	};
	jule::I64 _22417_only = -1LL;;
	{
		auto expr = &((*(_17736_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212b380a7:;
		if (it != expr_end) {
			jule::I64 _22513_j = it - expr->begin();
			jule::Ptr<_20d3e841b_Case> _22516_case = *it;
			{
				if ((_22516_case != nullptr)) {
					if ((_22417_only != -1LL)) {
						return;;
					};
					_22417_only=_22513_j;
				};
			}
			_iter_next_212b380a7:;
			++it;
			_22513_j++;
			goto _iter_begin_212b380a7;
		}
		_iter_end_212b380a7:;
	};
	if ((_22417_only != -1LL)) {
		_20d578843_setCurrentStmt(_self_, jule::Any((*((*(_17736_m))._field_Cases[_22417_only]))._field_Scope, &__jule_any_type22));
	};
}



inline void _20d579cd9_optimizeRangeIter(_20d57804b_scopeOptimizer* _self_, jule::Ptr<_20d3e54d4_RangeIter> _24140_it) {
	static__20d57e78e_optimize(&((*((*(_24140_it))._field_Expr))._field_Model));
	_20d57bc31_optimizeChild(_self_, (*(_24140_it))._field_Scope);
}



inline void _20d57a092_optimizeWhileIter(_20d57804b_scopeOptimizer* _self_, jule::Ptr<_20d3e4a88_WhileIter> _24640_it) {
	static__20d57e78e_optimize(&((*(_24640_it))._field_Expr));
	_20d57b978_optimizeStmt(_self_, (*(_24640_it))._field_Next);
	_20d57bc31_optimizeChild(_self_, (*(_24640_it))._field_Scope);
}



inline jule::Bool _20d57a3d3_substr(_20d57804b_scopeOptimizer* _self_, jule::Ptr<_20d3e6c99_Assign> _25229_a) {
	if (((*((*(_25229_a))._field_Op))._field_Id != static_cast<jule::U64>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_25229_a))._field_R))._field_Model };
		
		if (_match_expr.type == &__jule_any_type95) {
			_case_begin_212b3d189:;
			{
				jule::Ptr<_20d398751_SlicingExprModel> _25821_sem = (*((*(_25229_a))._field_R))._field_Model.cast_ptr<_20d398751_SlicingExprModel>(&__jule_any_type95);;
				if (((*(_25821_sem))._field_Expr == (*((*(_25229_a))._field_L))._field_Model)) {
					_20d578843_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_20d575ba3_MutSlicingExprModel>(_20d575ba3_MutSlicingExprModel{._field_Token=(*(_25821_sem))._field_Token, ._field_Expr=(*(_25821_sem))._field_Expr, ._field_Left=(*(_25821_sem))._field_Left, ._field_Right=(*(_25821_sem))._field_Right}), &__jule_any_type121));
					return true;;
				};
			}
		}
		_match_end_212b3d134:;
	};
	return false;;
}



inline jule::Bool _20d57a724_strAssign(_20d57804b_scopeOptimizer* _self_, jule::Ptr<_20d3e6c99_Assign> _27232_a) {
	if ((!(_20e0306c3_Str))) {
		return false;;
	};
	jule::Ptr<_20d4e710d_Prim> _27613_lp = _20d4e1b85_Prim((*((*(_27232_a))._field_L))._field_Kind.ptr());;
	if (((_27613_lp == nullptr) || (!(_20d4ea595_IsStr(_27613_lp.ptr()))))) {
		return false;;
	};
	return _20d57a3d3_substr(_self_, _27232_a);;
}



inline jule::Bool _20d57aa65_sliceAssign(_20d57804b_scopeOptimizer* _self_, jule::Ptr<_20d3e6c99_Assign> _28334_a) {
	if (((!(_20e03098c_Slice)) || (_20d4e2bdb_Slc((*((*(_28334_a))._field_L))._field_Kind.ptr()) == nullptr))) {
		return false;;
	};
	return _20d57a3d3_substr(_self_, _28334_a);;
}



inline void _20d57ad1d_optimizeAssign(_20d57804b_scopeOptimizer* _self_, jule::Ptr<_20d3e6c99_Assign> _29137_assign) {
	if ((((*((*(_29137_assign))._field_Op))._field_Id == static_cast<jule::U64>(71LLU)) && _20d573c6c_equalModels((*((*(_29137_assign))._field_L))._field_Model, (*((*(_29137_assign))._field_R))._field_Model))) {
		_20d578a41_removeCurrent(_self_);
		((*(_self_))._field_i)--;
		return;;
	};
	{
		
		if (_20d57a724_strAssign(_self_, _29137_assign) || _20d57aa65_sliceAssign(_self_, _29137_assign)) {
			_case_begin_212b45537:;
			{
				return;;
			}
		}
		_match_end_212b44190:;
	};
	static__20d57e78e_optimize(&((*((*(_29137_assign))._field_L))._field_Model));
	static__20d57e78e_optimize(&((*((*(_29137_assign))._field_R))._field_Model));
	{
		auto &_match_expr{ (*((*(_29137_assign))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(43LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_212b46da7:;
			{
				if ((_20e02e6d3_Math && (_20d4e3208_Struct((*((*(_29137_assign))._field_L))._field_Kind.ptr()) == nullptr))) {
					(*((*(_29137_assign))._field_Op))._field_Kind=(*((*(_29137_assign))._field_Op))._field_Kind.slice(0LL, ((*((*(_29137_assign))._field_Op))._field_Kind.len() - 1LL));
					jule::Any _31325_model = jule::Any(jule::new_ptr<_20d394b04_BinopExprModel>(_20d394b04_BinopExprModel{._field_Left=(*(_29137_assign))._field_L, ._field_Right=(*(_29137_assign))._field_R, ._field_Op=(*(_29137_assign))._field_Op}), &__jule_any_type112);;
					static__20d57e78e_optimize(&(_31325_model));
					{
						auto &_match_expr{ _31325_model };
						
						if (_match_expr.type == &__jule_any_type112) {
							_case_begin_212b49ea9:;
							{
								(*(_29137_assign))._field_R=jule::new_ptr<_20d394609_OperandExprModel>((*((*(_29137_assign))._field_R)));
								(*((*(_29137_assign))._field_Op))._field_Id=static_cast<jule::U64>(71LLU);
								(*((*(_29137_assign))._field_Op))._field_Kind=jule::Str("=", 1);
								(*((*(_29137_assign))._field_R))._field_Model=_31325_model;
								return;;
							}
						}
						_match_end_212b49d22:;
					};
					(*((*(_29137_assign))._field_Op))._field_Kind+=jule::Str("=", 1);
					return;;
				};
			}
		}
		_match_end_212b46d52:;
	};
	if (_20e02e3c5_Append) {
		{
			auto &_match_expr{ (*((*(_29137_assign))._field_R))._field_Model };
			
			if (_match_expr.type == &__jule_any_type26) {
				_case_begin_212b4cc48:;
				{
					jule::Ptr<_20d39c48b_BuiltinAppendCallExprModel> _33525_m = (*((*(_29137_assign))._field_R))._field_Model.cast_ptr<_20d39c48b_BuiltinAppendCallExprModel>(&__jule_any_type26);;
					if ((!(_20d586b3c_areSameLvalueExprModel(&((*((*(_29137_assign))._field_L))._field_Model), &((*(_33525_m))._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ (*(_33525_m))._field_Elements };
						
						if (_match_expr.type == &__jule_any_type80) {
							_case_begin_212b4eed1:;
							{
								_20d578843_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_20d5766cb_PushToSliceExprModel>(_20d5766cb_PushToSliceExprModel{._field_Dest=(*(_33525_m))._field_Dest, ._field_Elems=(*(_33525_m))._field_Elements.cast_ptr<_20d396ead_SliceExprModel>(&__jule_any_type80)}), &__jule_any_type122));
							}
						}
						else {
							_case_begin_212b4eb18:;
							{
								_20d578843_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_20d576aa5_AppendToSliceExprModel>(_20d576aa5_AppendToSliceExprModel{._field_Dest=(*((*(_29137_assign))._field_L))._field_Model, ._field_Slice=(*(_33525_m))._field_Elements}), &__jule_any_type123));
							}
						}
						_match_end_212b4eab3:;
					};
				}
			}
			_match_end_212b4cbe3:;
		};
	};
}



inline jule::Bool _20d57b15e_tryOptimizeSwap(_20d57804b_scopeOptimizer* _self_, jule::Ptr<_20d3e7173_MultiAssign>* _35739_assign) {
	if (((!(_20e030c56_Assign)) || ((*((*(_35739_assign))))._field_L.len() != 2LL))) {
		return false;;
	};
	jule::Ptr<_20d39a302_TupleExprModel> _36117_tup;;
	{
		auto &_match_expr{ (*((*(_35739_assign))))._field_R };
		
		if (_match_expr.type == &__jule_any_type85) {
			_case_begin_212b52753:;
			{
				_36117_tup=(*((*(_35739_assign))))._field_R.cast_ptr<_20d39a302_TupleExprModel>(&__jule_any_type85);
			}
		}
		_match_end_212b526ed:;
	};
	if (((_36117_tup == nullptr) || ((*(_36117_tup))._field_Datas.len() != 2LL))) {
		return false;;
	};
	if ((_20d573c6c_equalModels((*((*((*(_35739_assign))))._field_L[0LL]))._field_Model, (*((*(_36117_tup))._field_Datas[0LL]))._field_Model) && _20d573c6c_equalModels((*((*((*(_35739_assign))))._field_L[1LL]))._field_Model, (*((*(_36117_tup))._field_Datas[1LL]))._field_Model))) {
		_20d578a41_removeCurrent(_self_);
		((*(_self_))._field_i)--;
		return true;;
	};
	if (((!(_20d573c6c_equalModels((*((*((*(_35739_assign))))._field_L[0LL]))._field_Model, (*((*(_36117_tup))._field_Datas[1LL]))._field_Model))) || (!(_20d573c6c_equalModels((*((*((*(_35739_assign))))._field_L[1LL]))._field_Model, (*((*(_36117_tup))._field_Datas[0LL]))._field_Model))))) {
		return false;;
	};
	jule::Ptr<_20d57491b_SwapExprModel> _38317_model = jule::new_ptr<_20d57491b_SwapExprModel>(_20d57491b_SwapExprModel{._field_Left=(*((*(_35739_assign))))._field_L[0LL], ._field_Right=(*((*(_35739_assign))))._field_L[1LL]});;
	static__20d57e78e_optimize(&((*((*(_38317_model))._field_Left))._field_Model));
	static__20d57e78e_optimize(&((*((*(_38317_model))._field_Right))._field_Model));
	_20d578843_setCurrentStmt(_self_, jule::Any(_38317_model, &__jule_any_type124));
	return true;;
}



inline void _20d57b417_optimizeMultiAssign(_20d57804b_scopeOptimizer* _self_, jule::Ptr<_20d3e7173_MultiAssign> _39342_assign) {
	if (_20d57b15e_tryOptimizeSwap(_self_, &(_39342_assign))) {
		return;;
	};
	{
		auto expr = &((*(_39342_assign))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212b59c22:;
		if (it != expr_end) {
			jule::Ptr<_20d087165_Data> _39821_l = *it;
			{
				if ((_39821_l != nullptr)) {
					static__20d57e78e_optimize(&((*(_39821_l))._field_Model));
				};
			}
			_iter_next_212b59c22:;
			++it;
			goto _iter_begin_212b59c22;
		}
		_iter_end_212b59c22:;
	};
	static__20d57e78e_optimize(&((*(_39342_assign))._field_R));
}



inline void _20d57b6c0_optimizeRet(_20d57804b_scopeOptimizer* _self_, jule::Ptr<_20d3e8d9a_RetSt> _40634_r) {
	static__20d57e78e_optimize(&((*(_40634_r))._field_Expr));
}



inline void _20d57b978_optimizeStmt(_20d57804b_scopeOptimizer* _self_, jule::Any _41035_stmt) {
	{
		auto &_match_expr{ _41035_stmt };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_212b5bd56:;
			{
				_20d57bc31_optimizeChild(_self_, _41035_stmt.cast_ptr<_20d3e369c_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_212b5bdbc:;
			{
				_20d578ce9_optimizeData(_self_, _41035_stmt.cast_ptr<_20d087165_Data>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_212b5be33:;
			{
				_20d5790a2_optimizeVar(_self_, _41035_stmt.cast_ptr<_20d458aca_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_212b5beaa:;
			{
				_20d57935a_optimizeConditional(_self_, _41035_stmt.cast_ptr<_20d3e42d5_Conditional>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_212b5c032:;
			{
				_20d579cd9_optimizeRangeIter(_self_, _41035_stmt.cast_ptr<_20d3e54d4_RangeIter>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_212b5c0a9:;
			{
				_20d57a092_optimizeWhileIter(_self_, _41035_stmt.cast_ptr<_20d3e4a88_WhileIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_212b5c131:;
			{
				_20d57bc31_optimizeChild(_self_, (*(_41035_stmt.cast_ptr<_20d3e45d2_InfIter>(&__jule_any_type37)))._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_212b5c1a8:;
			{
				_20d57ad1d_optimizeAssign(_self_, _41035_stmt.cast_ptr<_20d3e6c99_Assign>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_212b5c230:;
			{
				_20d57b417_optimizeMultiAssign(_self_, _41035_stmt.cast_ptr<_20d3e7173_MultiAssign>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_212b5c2a7:;
			{
				_20d579a31_optimizeMatch(_self_, _41035_stmt.cast_ptr<_20d3e77d3_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_212b5c32e:;
			{
				_20d57b6c0_optimizeRet(_self_, _41035_stmt.cast_ptr<_20d3e8d9a_RetSt>(&__jule_any_type51));
			}
		}
		_match_end_212b5bc24:;
	};
}



inline void _20d57bc31_optimizeChild(_20d57804b_scopeOptimizer* _self_, jule::Ptr<_20d3e369c_Scope> _43736_child) {
	jule::Ptr<_20d57804b_scopeOptimizer> _43817_so = static__20d57858a_new(_43736_child);;
	_20d57be2e_optimize(_43817_so.ptr());
}



inline void _20d57be2e_optimize(_20d57804b_scopeOptimizer* _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*(_self_))._field_i < (*((*(_self_))._field_scope))._field_Stmts.len()); ((*(_self_))._field_i)++) {
		{
			_20d57b978_optimizeStmt(_self_, (*((*(_self_))._field_scope))._field_Stmts[(*(_self_))._field_i]);
		}
	_iter_next_212b628ea:;
	}
	_iter_end_212b628ea:;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d57804b_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__20d57e78e_optimize(jule::Any* _5729_model) {
	if (_20db7c166_exprEnabled) {
		jule::Ptr<_20d57e22d_exprOptimizer> _6021_exop = jule::new_ptr<_20d57e22d_exprOptimizer>(_20d57e22d_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)(_5729_model))});;
		_20d586301_do(_6021_exop.ptr());
	};
}



inline jule::Bool _20d57ead0_strCond(_20d57e22d_exprOptimizer* _self_, jule::Ptr<_20d394b04_BinopExprModel> _6726_m) {
	jule::Ptr<_20d4e710d_Prim> _6813_lp = _20d4e1b85_Prim((*((*(_6726_m))._field_Left))._field_Kind.ptr());;
	if (((_6813_lp == nullptr) || (!(_20d4ea595_IsStr(_6813_lp.ptr()))))) {
		return false;;
	};
	if ((((*((*(_6726_m))._field_Op))._field_Id != static_cast<jule::U64>(50LLU)) && ((*((*(_6726_m))._field_Op))._field_Id != static_cast<jule::U64>(51LLU)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_6726_m))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_212b738a6:;
			{
				({
					jule::Ptr<_20d394609_OperandExprModel> ___jule_assign_arg = (*(_6726_m))._field_Right;
					jule::Ptr<_20d394609_OperandExprModel> _1___jule_assign_arg = (*(_6726_m))._field_Left;
					(*(_6726_m))._field_Left = ___jule_assign_arg;
					(*(_6726_m))._field_Right = _1___jule_assign_arg;
				});
				goto _julec_label_212b752c0;
			}
		}
		_match_end_212b73851:;
	};
	{
		auto &_match_expr{ (*((*(_6726_m))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_212b724dc:;
			{
				goto _match_end_212b7506c;
			}
		}
		else {
			_case_begin_212b750c2:;
			{
				return false;;
			}
		}
		_match_end_212b7506c:;
	};
	_julec_label_212b752c0:;
	jule::Ptr<_20b0655eb_Const> _8717_c = (*((*(_6726_m))._field_Right))._field_Model.cast_ptr<_20b0655eb_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ (*((*(_6726_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_212b76601:;
			{
				if (_20b067774_ReadStr(_8717_c.ptr()).empty()) {
					jule::Any _9125_model = jule::Any(jule::new_ptr<_20d574ce5_EmptyCompareExprModel>(_20d574ce5_EmptyCompareExprModel{._field_Expr=(*((*(_6726_m))._field_Left))._field_Model, ._field_Neg=false}), &__jule_any_type125);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_9125_model))))));
					goto _match_end_212b7658a;
				};
				jule::Any _9821_model = jule::Any(jule::new_ptr<_20d575620_StrCompExprModel>(_20d575620_StrCompExprModel{._field_Left=(*((*(_6726_m))._field_Left))._field_Model, ._field_Right=_8717_c, ._field_NotEq=false}), &__jule_any_type126);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_9821_model))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_212b76678:;
			{
				if (_20b067774_ReadStr(_8717_c.ptr()).empty()) {
					jule::Any _10625_model = jule::Any(jule::new_ptr<_20d574ce5_EmptyCompareExprModel>(_20d574ce5_EmptyCompareExprModel{._field_Expr=(*((*(_6726_m))._field_Left))._field_Model, ._field_Neg=true}), &__jule_any_type125);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_10625_model))))));
					goto _match_end_212b7658a;
				};
				jule::Any _11321_model = jule::Any(jule::new_ptr<_20d575620_StrCompExprModel>(_20d575620_StrCompExprModel{._field_Left=(*((*(_6726_m))._field_Left))._field_Model, ._field_Right=_8717_c, ._field_NotEq=true}), &__jule_any_type126);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_11321_model))))));
			}
		}
		_match_end_212b7658a:;
	};
	return true;;
}



inline void _20d57ed88_binary(_20d57e22d_exprOptimizer* _self_, jule::Ptr<_20d394b04_BinopExprModel> _12325_m) {
	static__20d57e78e_optimize(&((*((*(_12325_m))._field_Left))._field_Model));
	static__20d57e78e_optimize(&((*((*(_12325_m))._field_Right))._field_Model));
	{
		auto &_match_expr{ (*((*(_12325_m))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_212b7addb:;
			{
				goto _match_end_212b7e153;
			}
		}
		else {
			_case_begin_212b7e1a8:;
			{
				return;;
			}
		}
		_match_end_212b7e153:;
	};
	if ((_20e030409_Cond && _20d57ead0_strCond(_self_, _12325_m))) {
		return;;
	};
	if ((!(_20e02e6d3_Math))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_12325_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_212b803a7:;
			{
				jule::Bool _14318_ok = false;;
				jule::U64 _14322_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _20d586774_checkForBitShiftOpt(&((*(_12325_m))._field_Left), &((*(_12325_m))._field_Right));
					_14318_ok = __jule_assign_result.__jule_result_arg0;
					_14322_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_14318_ok) {
					(*((*(_12325_m))._field_Op))._field_Id=static_cast<jule::U64>(56LLU);
					(*((*(_12325_m))._field_Op))._field_Kind=jule::Str("<<", 2);
					jule::Ptr<_20b0655eb_Const> _14725_c = (*((*(_12325_m))._field_Right))._field_Model.cast_ptr<_20b0655eb_Const>(&__jule_any_type19);;
					_20b06881e_SetU64(_14725_c.ptr(), _14322_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_212b8042e:;
			{
				jule::Bool _15218_ok = false;;
				jule::U64 _15222_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _20d586774_checkForBitShiftOpt(&((*(_12325_m))._field_Left), &((*(_12325_m))._field_Right));
					_15218_ok = __jule_assign_result.__jule_result_arg0;
					_15222_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_15218_ok) {
					(*((*(_12325_m))._field_Op))._field_Id=static_cast<jule::U64>(57LLU);
					(*((*(_12325_m))._field_Op))._field_Kind=jule::Str(">>", 2);
					jule::Ptr<_20b0655eb_Const> _15625_c = (*((*(_12325_m))._field_Right))._field_Model.cast_ptr<_20b0655eb_Const>(&__jule_any_type19);;
					_20b06881e_SetU64(_15625_c.ptr(), _15222_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_212b804a6:;
			{
				jule::Ptr<_20b0655eb_Const> _16121_c = (*((*(_12325_m))._field_Right))._field_Model.cast_ptr<_20b0655eb_Const>(&__jule_any_type19);;
				jule::F64 _16217_d = _20b0682ad_AsF64(_16121_c.ptr());;
				if ((_16217_d == 2LL)) {
					(*((*(_12325_m))._field_Op))._field_Id=static_cast<jule::U64>(65LLU);
					(*((*(_12325_m))._field_Op))._field_Kind=jule::Str("&", 1);
					_20b068566_SetI64(_16121_c.ptr(), 1LL);
				};
			}
		}
		_match_end_212b80330:;
	};
	jule::Any _16917_model = jule::Any(jule::new_ptr<_20d575ea0_UnsafeBinopExprModel>(_20d575ea0_UnsafeBinopExprModel{._field_Node=_12325_m}), &__jule_any_type127);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_16917_model))))));
}



inline void _20d580141_unary(_20d57e22d_exprOptimizer* _self_, jule::Ptr<_20d394ecd_UnaryExprModel> _17324_m) {
	static__20d57e78e_optimize(&((*((*(_17324_m))._field_Expr))._field_Model));
	if ((!(_20e030030_Ptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_17324_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_212b8904d:;
			{
				{
					auto &_match_expr{ (*((*(_17324_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type72) {
						_case_begin_212b8ab43:;
						{
							jule::Ptr<_20d394ecd_UnaryExprModel> _18225_um = (*((*(_17324_m))._field_Expr))._field_Model.cast_ptr<_20d394ecd_UnaryExprModel>(&__jule_any_type72);;
							if (((*((*(_18225_um))._field_Op))._field_Id == static_cast<jule::U64>(65LLU))) {
								(*((*(_self_))._field_model))=(*((*(_18225_um))._field_Expr))._field_Model;
							};
						}
					}
					_match_end_212b8aadd:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_212b89ed8:;
			{
				{
					auto &_match_expr{ (*((*(_17324_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_212b8cddc:;
						{
							jule::Ptr<_20d458aca_Var> _19025_v = (*((*(_17324_m))._field_Expr))._field_Model.cast_ptr<_20d458aca_Var>(&__jule_any_type8);;
							if ((*(_19025_v))._field_Reference) {
								jule::Any _19229_model = jule::Any(jule::new_ptr<_20d5750e2_RefExprModel>(_20d5750e2_RefExprModel{._field_Var=_19025_v}), &__jule_any_type128);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_19229_model))))));
							};
						}
					}
					_match_end_212b8cd87:;
				};
			}
		}
		_match_end_212b89dc8:;
	};
}



inline void _20d5803e9_structureLit(_20d57e22d_exprOptimizer* _self_, jule::Ptr<_20d3958a2_StructLitExprModel> _19931_m) {
	{
		auto expr = &((*(_19931_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212b8b072:;
		if (it != expr_end) {
			jule::Ptr<_20d39550b_StructArgExprModel> _20021_arg = *it;
			{
				static__20d57e78e_optimize(&((*((*(_20021_arg))._field_Expr))._field_Model));
			}
			_iter_next_212b8b072:;
			++it;
			goto _iter_begin_212b8b072;
		}
		_iter_end_212b8b072:;
	};
}



inline void _20d5806a2_allocStructure(_20d57e22d_exprOptimizer* _self_, jule::Ptr<_20d395b9e_AllocStructLitExprModel> _20533_m) {
	_20d5803e9_structureLit(_self_, (*(_20533_m))._field_Lit);
}



inline void _20d58095a_casting(_20d57e22d_exprOptimizer* _self_, jule::Ptr<_20d396232_CastingExprModel> _20926_m) {
	static__20d57e78e_optimize(&((*(_20926_m))._field_Expr));
}



inline void _20d580c13_args(_20d57e22d_exprOptimizer* _self_, jule::Slice<jule::Any>* _21324_args) {
	{
		auto expr = _21324_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212b91b7c:;
		if (it != expr_end) {
			jule::I64 _21414_i = it - expr->begin();
			jule::Any _21421_arg = *it;
			{
				static__20d57e78e_optimize(&(_21421_arg));
				(*(_21324_args))[_21414_i]=_21421_arg;
			}
			_iter_next_212b91b7c:;
			++it;
			_21414_i++;
			goto _iter_begin_212b91b7c;
		}
		_iter_end_212b91b7c:;
	};
}



inline void _20d580ebb_scope(_20d57e22d_exprOptimizer* _self_, jule::Ptr<_20d3e369c_Scope>* _22025_s) {
	jule::Ptr<_20d57804b_scopeOptimizer> _22117_scopt = static__20d57858a_new((*(_22025_s)));;
	_20d57be2e_optimize(_22117_scopt.ptr());
}



inline jule::Bool _20d58130c_optimizeSpecialFuncCalls(_20d57e22d_exprOptimizer* _self_, jule::Ptr<_20d396ad4_FnCallExprModel>* _22544_m) {
	_20e02c04e_stdCacheData _22614_data;;
	jule::Bool _22620_ok = false;;
	_20e02c47d_stdCache.lookup(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*((*(_22544_m))))._field_Func)), &(_22614_data), &(_22620_ok));
	if ((!(_22620_ok))) {
		return false;;
	};
	_22614_data._field_do(_self_, &(_22614_data), _22544_m);
	return true;;
}



inline void _20d5815b5_funcCall(_20d57e22d_exprOptimizer* _self_, jule::Ptr<_20d396ad4_FnCallExprModel> _23427_m) {
	if ((_20db7c6d8_stdEnabled && _20d58130c_optimizeSpecialFuncCalls(_self_, &(_23427_m)))) {
		return;;
	};
	static__20d57e78e_optimize(&((*(_23427_m))._field_Expr));
	_20d580c13_args(_self_, &((*(_23427_m))._field_Args));
	if (((*(_23427_m))._field_Except != nullptr)) {
		_20d580ebb_scope(_self_, &((*(_23427_m))._field_Except));
	};
}



inline void _20d58186d_slice(_20d57e22d_exprOptimizer* _self_, jule::Ptr<_20d396ead_SliceExprModel> _24524_m) {
	_20d580c13_args(_self_, &((*(_24524_m))._field_Elems));
}



inline void _20d581b26_array(_20d57e22d_exprOptimizer* _self_, jule::Ptr<_20d39a005_ArrayExprModel> _24924_m) {
	if ((((*(_24924_m))._field_Elems.len() == 2LL) && ((*(_24924_m))._field_Elems[1LL] == nullptr))) {
		jule::Any _25121_elem = (*(_24924_m))._field_Elems[0LL];;
		static__20d57e78e_optimize(&(_25121_elem));
		(*(_24924_m))._field_Elems[0LL]=_25121_elem;
	};
	_20d580c13_args(_self_, &((*(_24924_m))._field_Elems));
}



inline void _20d581dce_indexing(_20d57e22d_exprOptimizer* _self_, jule::Ptr<_20d397464_IndexingExprModel> _25827_m) {
	static__20d57e78e_optimize(&((*((*(_25827_m))._field_Expr))._field_Model));
	static__20d57e78e_optimize(&((*((*(_25827_m))._field_Index))._field_Model));
	if ((!(_20e02e99c_Access))) {
		return;;
	};
	jule::Bool _26413_array = (_20d4e2955_Arr((*((*(_25827_m))._field_Expr))._field_Kind.ptr()) != nullptr);;
	if ((_26413_array && _20d087a39_IsConst((*(_25827_m))._field_Index.ptr()))) {
		jule::Any _26721_model = jule::Any(jule::new_ptr<_20d57629c_UnsafeIndexingExprModel>(_20d57629c_UnsafeIndexingExprModel{._field_Node=_25827_m}), &__jule_any_type129);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_26721_model))))));
		return;;
	};
	{
		auto &_match_expr{ (*((*(_25827_m))._field_Index))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_212b9c946:;
			{
				jule::Ptr<_20d458aca_Var> _27317_i = (*((*(_25827_m))._field_Index))._field_Model.cast_ptr<_20d458aca_Var>(&__jule_any_type8);;
				if (((*(_27317_i))._field_Mutable || ((*(_27317_i))._field_IterRelation == nullptr))) {
					goto _match_end_212b9c8e1;
				};
				{
					auto &_match_expr{ (*((*(_25827_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_212b9e717:;
						{
							jule::Ptr<_20d458aca_Var> _27921_r = (*((*(_25827_m))._field_Expr))._field_Model.cast_ptr<_20d458aca_Var>(&__jule_any_type8);;
							if (((*((*(_27317_i))._field_IterRelation))._field_Range == _27921_r)) {
								jule::Any _28229_model = jule::Any(jule::new_ptr<_20d57629c_UnsafeIndexingExprModel>(_20d57629c_UnsafeIndexingExprModel{._field_Node=_25827_m}), &__jule_any_type129);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_28229_model))))));
							};
						}
					}
					_match_end_212b9e6b2:;
				};
			}
		}
		_match_end_212b9c8e1:;
	};
}



inline void _20d582187_anonFunc(_20d57e22d_exprOptimizer* _self_, jule::Ptr<_20d39783d_AnonFnExprModel> _28927_m) {
	_20d580ebb_scope(_self_, &((*((*(_28927_m))._field_Func))._field_Scope));
}



inline void _20d582440_mapExpr(_20d57e22d_exprOptimizer* _self_, jule::Ptr<_20d3981bd_MapExprModel> _29326_m) {
	{
		auto expr = &((*(_29326_m))._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212ba2396:;
		if (it != expr_end) {
			jule::Ptr<_20d397c17_KeyValPairExprModel> _29421_pair = *it;
			{
				static__20d57e78e_optimize(&((*(_29421_pair))._field_Key));
				static__20d57e78e_optimize(&((*(_29421_pair))._field_Val));
			}
			_iter_next_212ba2396:;
			++it;
			goto _iter_begin_212ba2396;
		}
		_iter_end_212ba2396:;
	};
}



inline void _20d5826e8_slicing(_20d57e22d_exprOptimizer* _self_, jule::Ptr<_20d398751_SlicingExprModel> _30026_m) {
	static__20d57e78e_optimize(&((*(_30026_m))._field_Expr));
	static__20d57e78e_optimize(&((*(_30026_m))._field_Left));
	if (((*(_30026_m))._field_Right != nullptr)) {
		static__20d57e78e_optimize(&((*(_30026_m))._field_Right));
	};
}



inline void _20d5829a1_traitSub(_20d57e22d_exprOptimizer* _self_, jule::Ptr<_20d398cd4_TraitSubIdentExprModel> _30827_m) {
	static__20d57e78e_optimize(&((*(_30827_m))._field_Expr));
}



inline void _20d582c59_structureSub(_20d57e22d_exprOptimizer* _self_, jule::Ptr<_20d399675_StructSubIdentExprModel> _31231_m) {
	static__20d57e78e_optimize(&((*((*(_31231_m))._field_Expr))._field_Model));
}



inline void _20d583012_tuple(_20d57e22d_exprOptimizer* _self_, jule::Ptr<_20d39a302_TupleExprModel> _31624_m) {
	{
		auto expr = &((*(_31624_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212ba56da:;
		if (it != expr_end) {
			jule::Ptr<_20d087165_Data> _31721_d = *it;
			{
				static__20d57e78e_optimize(&((*(_31721_d))._field_Model));
			}
			_iter_next_212ba56da:;
			++it;
			goto _iter_begin_212ba56da;
		}
		_iter_end_212ba56da:;
	};
}



inline void _20d5832ba_newCall(_20d57e22d_exprOptimizer* _self_, jule::Ptr<_20d39b27b_BuiltinNewCallExprModel> _32226_m) {
	if (((*(_32226_m))._field_Init != nullptr)) {
		static__20d57e78e_optimize(&((*(_32226_m))._field_Init));
	};
}



inline void _20d583573_outCall(_20d57e22d_exprOptimizer* _self_, jule::Ptr<_20d39a6cb_BuiltinOutCallExprModel> _32826_m) {
	static__20d57e78e_optimize(&((*(_32826_m))._field_Expr));
}



inline void _20d58382b_outlnCall(_20d57e22d_exprOptimizer* _self_, jule::Ptr<_20d39aaa5_BuiltinOutlnCallExprModel> _33228_m) {
	static__20d57e78e_optimize(&((*(_33228_m))._field_Expr));
}



inline void _20d583ad4_panicCall(_20d57e22d_exprOptimizer* _self_, jule::Ptr<_20d39b655_BuiltinPanicCallExprModel> _33628_m) {
	static__20d57e78e_optimize(&((*(_33628_m))._field_Expr));
}



inline void _20d583d8c_assertCall(_20d57e22d_exprOptimizer* _self_, jule::Ptr<_20d39bb0b_BuiltinAssertCallExprModel> _34029_m) {
	static__20d57e78e_optimize(&((*(_34029_m))._field_Expr));
}



inline void _20d584145_errorCall(_20d57e22d_exprOptimizer* _self_, jule::Ptr<_20d39d9a9_BuiltinErrorCallExprModel> _34428_m) {
	static__20d57e78e_optimize(&((*((*(_34428_m))._field_Err))._field_Model));
}



inline void _20d5843ed_makeCall(_20d57e22d_exprOptimizer* _self_, jule::Ptr<_20d39c0b2_BuiltinMakeCallExprModel> _34827_m) {
	if (((*(_34827_m))._field_Len != nullptr)) {
		static__20d57e78e_optimize(&((*(_34827_m))._field_Len));
	};
	if (((*(_34827_m))._field_Cap != nullptr)) {
		static__20d57e78e_optimize(&((*(_34827_m))._field_Cap));
	};
}



inline void _20d5846a6_appendCall(_20d57e22d_exprOptimizer* _self_, jule::Ptr<_20d39c48b_BuiltinAppendCallExprModel> _35729_m) {
	static__20d57e78e_optimize(&((*(_35729_m))._field_Dest));
	static__20d57e78e_optimize(&((*(_35729_m))._field_Elements));
}



inline void _20d58495e_lenCall(_20d57e22d_exprOptimizer* _self_, jule::Ptr<_20d39c788_BuiltinLenCallExprModel> _36226_m) {
	static__20d57e78e_optimize(&((*((*(_36226_m))._field_Expr))._field_Model));
}



inline void _20d584c17_capCall(_20d57e22d_exprOptimizer* _self_, jule::Ptr<_20d39ca85_BuiltinCapCallExprModel> _36626_m) {
	static__20d57e78e_optimize(&((*((*(_36626_m))._field_Expr))._field_Model));
}



inline void _20d584ec0_cloneCall(_20d57e22d_exprOptimizer* _self_, jule::Ptr<_20d39ada2_BuiltinCloneCallExprModel> _37028_m) {
	static__20d57e78e_optimize(&((*(_37028_m))._field_Expr));
}



inline void _20d585278_deleteCall(_20d57e22d_exprOptimizer* _self_, jule::Ptr<_20d39ce5e_BuiltinDeleteCallExprModel> _37429_m) {
	static__20d57e78e_optimize(&((*((*(_37429_m))._field_Dest))._field_Model));
	if (((*(_37429_m))._field_Key != nullptr)) {
		static__20d57e78e_optimize(&((*((*(_37429_m))._field_Key))._field_Model));
	};
}



inline void _20d585531_sizeof(_20d57e22d_exprOptimizer* _self_, jule::Ptr<_20d39db96_SizeofExprModel> _38125_m) {
	static__20d57e78e_optimize(&((*(_38125_m))._field_Expr));
}



inline void _20d5857d9_alignof(_20d57e22d_exprOptimizer* _self_, jule::Ptr<_20d39de3d_AlignofExprModel> _38526_m) {
	static__20d57e78e_optimize(&((*(_38526_m))._field_Expr));
}



inline void _20d585a92_integratedToStr(_20d57e22d_exprOptimizer* _self_, jule::Ptr<_20d39e537_IntegratedToStrExprModel> _38934_m) {
	static__20d57e78e_optimize(&((*(_38934_m))._field_Expr));
}



inline void _20d585d4a_free(_20d57e22d_exprOptimizer* _self_, jule::Ptr<_20d39ec0d_FreeExprModel> _39323_m) {
	static__20d57e78e_optimize(&((*(_39323_m))._field_Expr));
}



inline void _20d586103_backendEmit(_20d57e22d_exprOptimizer* _self_, jule::Ptr<_20d39e911_BackendEmitExprModel> _39730_m) {
	_20d580c13_args(_self_, &((*(_39730_m))._field_Exprs));
}



inline void _20d586301_do(_20d57e22d_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_model)) };
		
		if (_match_expr.type == &__jule_any_type112) {
			_case_begin_212bb10ca:;
			{
				_20d57ed88_binary(_self_, (*((*(_self_))._field_model)).cast_ptr<_20d394b04_BinopExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_212bb1141:;
			{
				_20d580141_unary(_self_, (*((*(_self_))._field_model)).cast_ptr<_20d394ecd_UnaryExprModel>(&__jule_any_type72));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_212bb11a7:;
			{
				_20d5803e9_structureLit(_self_, (*((*(_self_))._field_model)).cast_ptr<_20d3958a2_StructLitExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_212bb122e:;
			{
				_20d5806a2_allocStructure(_self_, (*((*(_self_))._field_model)).cast_ptr<_20d395b9e_AllocStructLitExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_212bb12a6:;
			{
				_20d58095a_casting(_self_, (*((*(_self_))._field_model)).cast_ptr<_20d396232_CastingExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_212bb132d:;
			{
				_20d5815b5_funcCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_20d396ad4_FnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_212bb13a5:;
			{
				_20d58186d_slice(_self_, (*((*(_self_))._field_model)).cast_ptr<_20d396ead_SliceExprModel>(&__jule_any_type80));
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_212bb142c:;
			{
				_20d581b26_array(_self_, (*((*(_self_))._field_model)).cast_ptr<_20d39a005_ArrayExprModel>(&__jule_any_type88));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_212bb14a4:;
			{
				_20d581dce_indexing(_self_, (*((*(_self_))._field_model)).cast_ptr<_20d397464_IndexingExprModel>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_212bb152b:;
			{
				_20d582187_anonFunc(_self_, (*((*(_self_))._field_model)).cast_ptr<_20d39783d_AnonFnExprModel>(&__jule_any_type101));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_212bb15a3:;
			{
				_20d582440_mapExpr(_self_, (*((*(_self_))._field_model)).cast_ptr<_20d3981bd_MapExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_212bb162a:;
			{
				_20d5826e8_slicing(_self_, (*((*(_self_))._field_model)).cast_ptr<_20d398751_SlicingExprModel>(&__jule_any_type95));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_212bb16a2:;
			{
				_20d5829a1_traitSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_20d398cd4_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_212bb1729:;
			{
				_20d582c59_structureSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_20d399675_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_212bb17a1:;
			{
				_20d583012_tuple(_self_, (*((*(_self_))._field_model)).cast_ptr<_20d39a302_TupleExprModel>(&__jule_any_type85));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_212bb1828:;
			{
				_20d583573_outCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_20d39a6cb_BuiltinOutCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_212bb18a0:;
			{
				_20d58382b_outlnCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_20d39aaa5_BuiltinOutlnCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_212bb1927:;
			{
				_20d5832ba_newCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_20d39b27b_BuiltinNewCallExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_212bb199e:;
			{
				_20d583ad4_panicCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_20d39b655_BuiltinPanicCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_212bb1a26:;
			{
				_20d583d8c_assertCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_20d39bb0b_BuiltinAssertCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_212bb1a9d:;
			{
				_20d584145_errorCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_20d39d9a9_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_212bb1b25:;
			{
				_20d5843ed_makeCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_20d39c0b2_BuiltinMakeCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_212bb1b9c:;
			{
				_20d5846a6_appendCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_20d39c48b_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_212bb1c24:;
			{
				_20d58495e_lenCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_20d39c788_BuiltinLenCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_212bb1c9b:;
			{
				_20d584c17_capCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_20d39ca85_BuiltinCapCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_212bb1d23:;
			{
				_20d584ec0_cloneCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_20d39ada2_BuiltinCloneCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_212bb1d9a:;
			{
				_20d585278_deleteCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_20d39ce5e_BuiltinDeleteCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_212bb1e22:;
			{
				_20d585531_sizeof(_self_, (*((*(_self_))._field_model)).cast_ptr<_20d39db96_SizeofExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_212bb1e99:;
			{
				_20d5857d9_alignof(_self_, (*((*(_self_))._field_model)).cast_ptr<_20d39de3d_AlignofExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_212bb2021:;
			{
				_20d585a92_integratedToStr(_self_, (*((*(_self_))._field_model)).cast_ptr<_20d39e537_IntegratedToStrExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_212bb2098:;
			{
				_20d585d4a_free(_self_, (*((*(_self_))._field_model)).cast_ptr<_20d39ec0d_FreeExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_212bb2120:;
			{
				_20d586103_backendEmit(_self_, (*((*(_self_))._field_model)).cast_ptr<_20d39e911_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_212bb0d22:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20d57e22d_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20e02c04e_stdCacheData _Src) {
	_Stream << "stdCacheData{";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "do:" << _Src._field_do;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20db7c96e_Optimizer> static__20db7cdae_New(jule::Ptr<_20e027be8_IR>* _2724_ir) {
	return jule::new_ptr<_20db7c96e_Optimizer>(_20db7c96e_Optimizer{._field_ir=(*(_2724_ir))});;
}



inline void _20db7d167_optimizeGlobal(_20db7c96e_Optimizer* _self_, jule::Ptr<_20d458aca_Var>* _3338_v) {
	if ((!((*((*(_3338_v))))._field_Binded))) {
		static__20d57e78e_optimize(&((*((*((*((*(_3338_v))))._field_Value))._field_Data))._field_Model));
	};
}



inline void _20db7d420_optimizeFunction(_20db7c96e_Optimizer* _self_, jule::Ptr<_20d3a2b45_Fn>* _3940_func) {
	if ((*((*(_3940_func))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_3940_func))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212bcdd95:;
		if (it != expr_end) {
			jule::Ptr<_20d3a5a49_FnIns> _4321_ins = *it;
			{
				jule::Ptr<_20d57804b_scopeOptimizer> _4421_so = static__20d57858a_new((*(_4321_ins))._field_Scope);;
				_20d57be2e_optimize(_4421_so.ptr());
			}
			_iter_next_212bcdd95:;
			++it;
			goto _iter_begin_212bcdd95;
		}
		_iter_end_212bcdd95:;
	};
}



inline void _20db7d6c8_optimizeStruct(_20db7c96e_Optimizer* _self_, jule::Ptr<_20d38c58b_Struct>* _4938_s) {
	if ((*((*(_4938_s))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_4938_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212bd0748:;
		if (it != expr_end) {
			jule::Ptr<_20d39066b_StructIns> _5321_ins = *it;
			{
				{
					auto expr = &((*(_5321_ins))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_212bd10d9:;
					if (it != expr_end) {
						jule::Ptr<_20d38eabb_FieldIns> _5425_f = *it;
						{
							if (((*(_5425_f))._field_Default != nullptr)) {
								static__20d57e78e_optimize(&((*((*(_5425_f))._field_Default))._field_Model));
							};
						}
						_iter_next_212bd10d9:;
						++it;
						goto _iter_begin_212bd10d9;
					}
					_iter_end_212bd10d9:;
				};
				{
					auto expr = &((*(_5321_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_212bd25a2:;
					if (it != expr_end) {
						jule::Ptr<_20d3a2b45_Fn> _5925_m = *it;
						{
							_20db7d420_optimizeFunction(_self_, &(_5925_m));
						}
						_iter_next_212bd25a2:;
						++it;
						goto _iter_begin_212bd25a2;
					}
					_iter_end_212bd25a2:;
				};
			}
			_iter_next_212bd0748:;
			++it;
			goto _iter_begin_212bd0748;
		}
		_iter_end_212bd0748:;
	};
}



inline void _20db7d981_optimizeGlobals(_20db7c96e_Optimizer* _self_, jule::Ptr<_20d417cba_Package>* _6539_p) {
	{
		auto expr = &((*((*(_6539_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212bd2904:;
		if (it != expr_end) {
			jule::Ptr<_20d081e40_SymbolTable> _6621_f = *it;
			{
				{
					auto expr = &((*(_6621_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_212bd3691:;
					if (it != expr_end) {
						jule::Ptr<_20d458aca_Var> _6725_v = *it;
						{
							_20db7d167_optimizeGlobal(_self_, &(_6725_v));
						}
						_iter_next_212bd3691:;
						++it;
						goto _iter_begin_212bd3691;
					}
					_iter_end_212bd3691:;
				};
			}
			_iter_next_212bd2904:;
			++it;
			goto _iter_begin_212bd2904;
		}
		_iter_end_212bd2904:;
	};
}



inline void _20db7dc39_optimizeFunctions(_20db7c96e_Optimizer* _self_, jule::Ptr<_20d417cba_Package>* _7341_p) {
	{
		auto expr = &((*((*(_7341_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212bd3d56:;
		if (it != expr_end) {
			jule::Ptr<_20d081e40_SymbolTable> _7421_f = *it;
			{
				{
					auto expr = &((*(_7421_f))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_212bd4ad2:;
					if (it != expr_end) {
						jule::Ptr<_20d3a2b45_Fn> _7525_func = *it;
						{
							_20db7d420_optimizeFunction(_self_, &(_7525_func));
						}
						_iter_next_212bd4ad2:;
						++it;
						goto _iter_begin_212bd4ad2;
					}
					_iter_end_212bd4ad2:;
				};
			}
			_iter_next_212bd3d56:;
			++it;
			goto _iter_begin_212bd3d56;
		}
		_iter_end_212bd3d56:;
	};
}



inline void _20db7dee2_optimizeStructs(_20db7c96e_Optimizer* _self_, jule::Ptr<_20d417cba_Package>* _8139_p) {
	{
		auto expr = &((*((*(_8139_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212bd5297:;
		if (it != expr_end) {
			jule::Ptr<_20d081e40_SymbolTable> _8221_f = *it;
			{
				{
					auto expr = &((*(_8221_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_212bd6023:;
					if (it != expr_end) {
						jule::Ptr<_20d38c58b_Struct> _8325_s = *it;
						{
							_20db7d6c8_optimizeStruct(_self_, &(_8325_s));
						}
						_iter_next_212bd6023:;
						++it;
						goto _iter_begin_212bd6023;
					}
					_iter_end_212bd6023:;
				};
			}
			_iter_next_212bd5297:;
			++it;
			goto _iter_begin_212bd5297;
		}
		_iter_end_212bd5297:;
	};
}



inline void _20db7e29a_optimizePackage(_20db7c96e_Optimizer* _self_, jule::Ptr<_20d417cba_Package>* _8939_p) {
	_20db7d981_optimizeGlobals(_self_, _8939_p);
	_20db7dc39_optimizeFunctions(_self_, _8939_p);
	_20db7dee2_optimizeStructs(_self_, _8939_p);
}



inline void _20db7e498_Optimize(_20db7c96e_Optimizer* _self_) {
	_20db7e71d_detectEnabled();
	if (_20db7c6d8_stdEnabled) {
		_20e02c6e2_buildCache(&((*(_self_))._field_ir));
	};
	if (_20e02e10b_Deadcode) {
		_20db6e5ba_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_20db7c41e_scopeEnabled || _20db7c166_exprEnabled)) {
		{
			auto expr = &((*((*(_self_))._field_ir))._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_212bd792b:;
			if (it != expr_end) {
				jule::Ptr<_20d414d94_ImportInfo> _10825_u = *it;
				{
					if ((!((*(_10825_u))._field_Binded))) {
						_20db7e29a_optimizePackage(_self_, &((*(_10825_u))._field_Package));
					};
				}
				_iter_next_212bd792b:;
				++it;
				goto _iter_begin_212bd792b;
			}
			_iter_end_212bd792b:;
		};
		_20db7e29a_optimizePackage(_self_, &((*((*(_self_))._field_ir))._field_Main));
	};
	if (_20e02e10b_Deadcode) {
		_20db74b64_EliminateScopes(&((*(_self_))._field_ir));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20db7c96e_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__20e2372c0_Reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__20db7eab4_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__20e2372c0_Reset();
}







std::ostream &operator<<(std::ostream &_Stream, _20e2383d1_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__20e239cc8_LogFlat(_22730be5e_Log* _1424_l) {
	jule::outln((*(_1424_l))._field_Text);
}



inline void static__20e23a009_LogError(_22730be5e_Log* _1925_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out((*(_1925_l))._field_Text);
	static__20e2372c0_Reset();
	if (((*(_1925_l))._field_Path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out((*(_1925_l))._field_Path);
	};
	if ((((*(_1925_l))._field_Row != 0LL) && ((*(_1925_l))._field_Column != 0LL))) {
		jule::out(jule::Str(":", 1));
		jule::out(_20b055388_Itoa((*(_1925_l))._field_Row));
		jule::out(jule::Str(":", 1));
		jule::out(_20b055388_Itoa((*(_1925_l))._field_Column));
	};
	if (((*(_1925_l))._field_Line.len() != 0LL)) {
		jule::Str _3621_line = _2248b2836_TrimLeft((*(_1925_l))._field_Line, jule::Str("\r\n\v\b ", 5));;
		jule::I64 _3721_offset = (((*(_1925_l))._field_Line.len() - _3621_line.len()) + 1LL);;
		jule::I64 _3821_oldLen = _3621_line.len();;
		_3621_line=_2248b2836_TrimLeft(_3621_line, jule::Str("\t", 1));
		if ((_3821_oldLen != _3621_line.len())) {
			_3721_offset+=((_3821_oldLen - _3621_line.len()) << 3LLU);
		};
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _20b055388_Itoa((*(_1925_l))._field_Row);;
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_2248a97b7_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_2248a97b7_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(((*(_1925_l))._field_Column - _3721_offset))));
		jule::out(jule::Str("^", 1));
		if (((*(_1925_l))._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_2248a97b7_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__20db7eab4_Print(jule::Str("\033[95m", 5), jule::Str("suggestion: ", 12));
			jule::out((*(_1925_l))._field_Suggestion);
		};
	};
	jule::outln(jule::Str("\n", 1));
}



inline void static__20e23a23a_Log(_22730be5e_Log* _6520_l) {
	{
		auto &_match_expr{ (*(_6520_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_212be66c6:;
			{
				static__20e239cc8_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_212be674d:;
			{
				static__20e23a009_LogError(_6520_l);
			}
		}
		_match_end_212be663d:;
	};
}



inline void static__20e23a46b_PrintLogs(jule::Slice<_22730be5e_Log>* _7526_logs) {
	{
		auto expr = _7526_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212be2a68:;
		if (it != expr_end) {
			_22730be5e_Log *_7616_l = it;
			{
				static__20e23a23a_Log(_7616_l);
			}
			_iter_next_212be2a68:;
			++it;
			goto _iter_begin_212be2a68;
		}
		_iter_end_212be2a68:;
	};
	jule::out(jule::Str("=== ", 4));
	jule::out(_20b055388_Itoa(static_cast<jule::I64>((*(_7526_logs)).len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _20e239a0e_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20ebe0508_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _20ebe0bce_Time static__20ebe1086_Unix(jule::U64 _9120_sec) {
	return _20ebe0bce_Time{._field_sec=_9120_sec};;
}



inline _20ebe0bce_Time static__20ebe1295_Now(void) {
	return static__20ebe1086_Unix(static_cast<jule::U64>(_20ebe2cbe_unix()));;
}



inline _20ebe0508_AbsTime _20ebe297d_Abs(_20ebe0bce_Time* _self_) {
	jule::U64 _12713_secs = ((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _12817_days = (_12713_secs / 86400LLU);;
	jule::U64 _12917_remSecs = (_12713_secs % 86400LL);;
	if ((_12917_remSecs < 0LLU)) {
		_12917_remSecs+=86400LLU;
		(_12817_days)--;
	};
	jule::U64 _13517_qcCycles = (_12817_days / 146097LLU);;
	jule::U64 _13617_remDays = (_12817_days % 146097LL);;
	if ((_13617_remDays < 0LLU)) {
		_13617_remDays+=146097LLU;
		(_13517_qcCycles)--;
	};
	jule::U64 _14217_cCycles = (_13617_remDays / 36524LLU);;
	if ((_14217_cCycles == 4LLU)) {
		(_14217_cCycles)--;
	};
	_13617_remDays-=(_14217_cCycles * 36524LLU);
	jule::U64 _14817_qCycles = (_13617_remDays / 1461LLU);;
	if ((_14817_qCycles == 25LLU)) {
		(_14817_qCycles)--;
	};
	_13617_remDays-=(_14817_qCycles * 1461LLU);
	jule::U64 _15417_remYears = (_13617_remDays / 365LLU);;
	if ((_15417_remYears == 4LLU)) {
		(_15417_remYears)--;
	};
	_13617_remDays-=(_15417_remYears * 365LLU);
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);;
	if (((_15417_remYears == 0LLU) && ((_14817_qCycles > 0LLU) || (_14217_cCycles == 0LLU)))) {
		_16017_leap=1LLU;
	};
	jule::U64 _16417_yDay = (((_13617_remDays + 31LLU) + 28LLU) + _16017_leap);;
	if ((_16417_yDay >= (365LLU + _16017_leap))) {
		_16417_yDay-=(365LLU + _16017_leap);
	};
	jule::U64 _16917_months = 0LLU;;
	for (; (_20ebde9d0_mdays[static_cast<jule::I64>(_16917_months)] <= _13617_remDays); (_16917_months)++) {
		{
			_13617_remDays-=_20ebde9d0_mdays[static_cast<jule::I64>(_16917_months)];
		}
	_iter_next_212c280cb:;
	}
	_iter_end_212c280cb:;;
	_20ebe0508_AbsTime _17417_t = _20ebe0508_AbsTime{};;
	_17417_t._field_Year=static_cast<jule::U64>(((((_15417_remYears + (4LLU * _14817_qCycles)) + (100LLU * _14217_cCycles)) + (400LLU * _13517_qcCycles)) + 100LLU));
	_17417_t._field_Month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_Month >= 12LLU)) {
		_17417_t._field_Month-=12LLU;
		(_17417_t._field_Year)++;
	};
	_17417_t._field_Month+=1LLU;
	_17417_t._field_Year+=1900LLU;
	_17417_t._field_Day=static_cast<jule::U64>((_13617_remDays + 1LLU));
	_17417_t._field_WeekDay=static_cast<jule::U64>(((3LLU + _12817_days) % 7LL));
	if ((_17417_t._field_WeekDay < 0LLU)) {
		_17417_t._field_WeekDay+=7LLU;
	};
	_17417_t._field_YearDay=_16417_yDay;
	_17417_t._field_Hour=static_cast<jule::U64>((_12917_remSecs / 3600LLU));
	_17417_t._field_Minute=static_cast<jule::U64>(((_12917_remSecs / 60LLU) % 60LL));
	_17417_t._field_Second=static_cast<jule::U64>((_12917_remSecs % 60LL));
	return _17417_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _20ebe0bce_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20ea1a586_scopeCoder> static__20ea1aba2_new(jule::Ptr<_20ebea2d2_ObjectCoder>* _6524_oc) {
	return jule::new_ptr<_20ea1a586_scopeCoder>(_20ea1a586_scopeCoder{._field_oc=(*(_6524_oc))});;
}



inline void _212cc1b9c_iterHead(jule::Ptr<_20ea1a586_scopeCoder> _self_, jule::Ptr<_20d3e54d4_RangeIter>* _7232_it, jule::Bool* _7244_ref, jule::Str* _7256_begin) {
	_20ebea986_write((*(_self_))._field_oc, jule::Str("{\n", 2));
	_20ebeab84_addIndent((*(_self_))._field_oc);
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("auto expr = ", 12));
	if ((_20e02dced_Copy && _20ea21bdb_isCopyOptimizable(&((*((*(_7232_it))))._field_Expr)))) {
		(*(_7244_ref))=true;
		{
			auto &_match_expr{ (*((*((*(_7232_it))))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_212cc3396:;
				{
					jule::Ptr<_20d458aca_Var> _8121_v = (*((*((*(_7232_it))))._field_Expr))._field_Model.cast_ptr<_20d458aca_Var>(&__jule_any_type8);;
					if ((*(_8121_v))._field_Reference) {
						_20ea3216e_model((*((*(_self_))._field_oc))._field_ec, (*((*((*(_7232_it))))._field_Expr))._field_Model);
						goto _match_end_212cc5695;
					};
					goto _case_begin_212cc56ea;
				}
			}
			else {
				_case_begin_212cc56ea:;
				{
					_20ebea986_write((*(_self_))._field_oc, jule::Str("&(", 2));
					_20ea3216e_model((*((*(_self_))._field_oc))._field_ec, (*((*((*(_7232_it))))._field_Expr))._field_Model);
					_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
				}
			}
			_match_end_212cc5695:;
		};
	} else {
		_20ea27ae3_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_7232_it))))._field_Expr))._field_Model);
	};
	_20ebea986_write((*(_self_))._field_oc, jule::Str(";\n", 2));
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("auto it = expr", 14));
	if ((*(_7244_ref))) {
		_20ebea986_write((*(_self_))._field_oc, jule::Str("->", 2));
	} else {
		_20ebea986_write((*(_self_))._field_oc, jule::Str(".", 1));
	};
	_20ebea986_write((*(_self_))._field_oc, jule::Str("begin();\n", 9));
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("auto expr_end = expr", 20));
	if ((*(_7244_ref))) {
		_20ebea986_write((*(_self_))._field_oc, jule::Str("->", 2));
	} else {
		_20ebea986_write((*(_self_))._field_oc, jule::Str(".", 1));
	};
	_20ebea986_write((*(_self_))._field_oc, jule::Str("end();\n", 7));
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, (*(_7256_begin)));
	_20ebea986_write((*(_self_))._field_oc, jule::Str(":;\n", 3));
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("if (it != expr_end) {\n", 22));
	_20ebeab84_addIndent((*(_self_))._field_oc);
	_20ebeb080_indent((*(_self_))._field_oc);
}



inline void _20ea1b378_rangeIndexIter(jule::Ptr<_20ea1a586_scopeCoder> _self_, jule::Ptr<_20d3e54d4_RangeIter>* _12139_it) {
	jule::Str _12213_begin = static__20ea3bd38_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12139_it)))));;
	jule::Str _12313_next = static__20ea3c3bb_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12139_it)))));;
	jule::Bool _12517_ref = false;;
	_212cc1b9c_iterHead(_self_, _12139_it, &(_12517_ref), &(_12213_begin));
	if (((*((*(_12139_it))))._field_KeyA != nullptr)) {
		_20ec03609_varInitExpr((*(_self_))._field_oc, &((*((*(_12139_it))))._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			if (_12517_ref) {
				_20ebea986_write((*(_self_))._field_oc, jule::Str("it - expr->begin()", 18));
			} else {
				_20ebea986_write((*(_self_))._field_oc, jule::Str("it - expr.begin()", 17));
			};
		}));
		_20ebea986_write((*(_self_))._field_oc, jule::Str("\n", 1));
		_20ebeb080_indent((*(_self_))._field_oc);
	};
	if (((*((*(_12139_it))))._field_KeyB != nullptr)) {
		(*((*((*(_12139_it))))._field_KeyB))._field_Reference=(_20e02dced_Copy && _20ea220a4_isIterCopyOptimizable(&((*((*(_12139_it))))._field_Expr), &((*((*(_12139_it))))._field_KeyB)));
		_20ec03609_varInitExpr((*(_self_))._field_oc, &((*((*(_12139_it))))._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			{
				if ((*((*((*(_12139_it))))._field_KeyB))._field_Reference) {
					_20ebea986_write((*(_self_))._field_oc, jule::Str("it", 2));
				} else {
					_20ebea986_write((*(_self_))._field_oc, jule::Str("*it", 3));
				};
			};
		}));
		_20ebea986_write((*(_self_))._field_oc, jule::Str("\n", 1));
		_20ebeb080_indent((*(_self_))._field_oc);
	};
	_20ea2156a_scope(_self_, (*((*(_12139_it))))._field_Scope);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("\n", 1));
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, _12313_next);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(":;\n", 3));
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("++it;\n", 6));
	_20ebeb080_indent((*(_self_))._field_oc);
	if (((*((*(_12139_it))))._field_KeyA != nullptr)) {
		_20ebea986_write((*(_self_))._field_oc, static__20ea3ba6e_var((*((*(_12139_it))))._field_KeyA));
		_20ebea986_write((*(_self_))._field_oc, jule::Str("++;\n", 4));
		_20ebeb080_indent((*(_self_))._field_oc);
	};
	_20ebea986_write((*(_self_))._field_oc, jule::Str("goto ", 5));
	_20ebea986_write((*(_self_))._field_oc, _12213_begin);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(";\n", 2));
	_20ebead82_doneIndent((*(_self_))._field_oc);
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("}\n", 2));
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, static__20ea3c102_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12139_it))))));
	_20ebea986_write((*(_self_))._field_oc, jule::Str(":;\n", 3));
	_20ebead82_doneIndent((*(_self_))._field_oc);
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("}", 1));
}



inline void _20ea1b631_rangeHashmapIter(jule::Ptr<_20ea1a586_scopeCoder> _self_, jule::Ptr<_20d3e54d4_RangeIter>* _18441_it) {
	jule::Str _18513_begin = static__20ea3bd38_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18441_it)))));;
	jule::Str _18613_next = static__20ea3c3bb_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18441_it)))));;
	jule::Bool _18817_ref = false;;
	_212cc1b9c_iterHead(_self_, _18441_it, &(_18817_ref), &(_18513_begin));
	if (((*((*(_18441_it))))._field_KeyA != nullptr)) {
		_20ec03609_varInitExpr((*(_self_))._field_oc, &((*((*(_18441_it))))._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			_20ebea986_write((*(_self_))._field_oc, jule::Str("it->first", 9));
		}));
		_20ebea986_write((*(_self_))._field_oc, jule::Str("\n", 1));
		_20ebeb080_indent((*(_self_))._field_oc);
	};
	if (((*((*(_18441_it))))._field_KeyB != nullptr)) {
		_20ec03609_varInitExpr((*(_self_))._field_oc, &((*((*(_18441_it))))._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			_20ebea986_write((*(_self_))._field_oc, jule::Str("it->second", 10));
		}));
		_20ebea986_write((*(_self_))._field_oc, jule::Str("\n", 1));
		_20ebeb080_indent((*(_self_))._field_oc);
	};
	_20ea2156a_scope(_self_, (*((*(_18441_it))))._field_Scope);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("\n", 1));
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, _18613_next);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(":;\n", 3));
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("++it;\n", 6));
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("goto ", 5));
	_20ebea986_write((*(_self_))._field_oc, _18513_begin);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(";\n", 2));
	_20ebead82_doneIndent((*(_self_))._field_oc);
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("}\n", 2));
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, static__20ea3c102_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18441_it))))));
	_20ebea986_write((*(_self_))._field_oc, jule::Str(":;\n", 3));
	_20ebead82_doneIndent((*(_self_))._field_oc);
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("}", 1));
}



inline void _20ea1b8d9_ifCase(jule::Ptr<_20ea1a586_scopeCoder> _self_, jule::Ptr<_20d3e3aba_If> _22730_i) {
	if (((*(_22730_i))._field_Expr != nullptr)) {
		_20ebea986_write((*(_self_))._field_oc, jule::Str("if (", 4));
		_20ea27ae3_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_22730_i))._field_Expr);
		_20ebea986_write((*(_self_))._field_oc, jule::Str(") ", 2));
	};
	_20ea2156a_scope(_self_, (*(_22730_i))._field_Scope);
}



inline void _20ea1bb92_conditional(jule::Ptr<_20ea1a586_scopeCoder> _self_, jule::Ptr<_20d3e42d5_Conditional> _23635_c) {
	jule::Bool _23717_writed = false;;
	{
		auto expr = &((*(_23635_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2248d88e5:;
		if (it != expr_end) {
			jule::Ptr<_20d3e3aba_If> _23821_elif = *it;
			{
				if ((_23821_elif == nullptr)) {
					goto _iter_next_2248d88e5;
				};
				if (_23717_writed) {
					_20ebea986_write((*(_self_))._field_oc, jule::Str(" else ", 6));
				};
				_23717_writed=true;
				_20ea1b8d9_ifCase(_self_, _23821_elif);
			}
			_iter_next_2248d88e5:;
			++it;
			goto _iter_begin_2248d88e5;
		}
		_iter_end_2248d88e5:;
	};
	if (((*(_23635_c))._field_Default != nullptr)) {
		if (_23717_writed) {
			_20ebea986_write((*(_self_))._field_oc, jule::Str(" else ", 6));
		};
		_20ea2156a_scope(_self_, (*((*(_23635_c))._field_Default))._field_Scope);
	};
}



inline void _20ea1be4a_infIter(jule::Ptr<_20ea1a586_scopeCoder> _self_, jule::Ptr<_20d3e45d2_InfIter> _25631_it) {
	_20ebea986_write((*(_self_))._field_oc, jule::Str("for (;;) {\n", 11));
	_20ebeab84_addIndent((*(_self_))._field_oc);
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ea2156a_scope(_self_, (*(_25631_it))._field_Scope);
	_20ebead82_doneIndent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("\n", 1));
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, static__20ea3c3bb_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_25631_it))));
	_20ebea986_write((*(_self_))._field_oc, jule::Str(":;\n", 3));
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("}\n", 2));
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, static__20ea3c102_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_25631_it))));
	_20ebea986_write((*(_self_))._field_oc, jule::Str(":;", 2));
}



inline void _20ea1c203_whileIter(jule::Ptr<_20ea1a586_scopeCoder> _self_, jule::Ptr<_20d3e4a88_WhileIter> _27333_it) {
	if ((((*(_27333_it))._field_Expr != nullptr) && ((*(_27333_it))._field_Next == nullptr))) {
		_20ebea986_write((*(_self_))._field_oc, jule::Str("while (", 7));
		_20ea27ae3_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_27333_it))._field_Expr);
		_20ebea986_write((*(_self_))._field_oc, jule::Str(") {\n", 4));
	} else {
		_20ebea986_write((*(_self_))._field_oc, jule::Str("for (; ", 7));
		if (((*(_27333_it))._field_Expr != nullptr)) {
			_20ea27ae3_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_27333_it))._field_Expr);
		};
		_20ebea986_write((*(_self_))._field_oc, jule::Str("; ", 2));
		if (((*(_27333_it))._field_Next != nullptr)) {
			_20ea21009_st(_self_, (*(_27333_it))._field_Next);
		};
		_20ebea986_write((*(_self_))._field_oc, jule::Str(") {\n", 4));
	};
	_20ebeab84_addIndent((*(_self_))._field_oc);
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ea2156a_scope(_self_, (*(_27333_it))._field_Scope);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("\n", 1));
	_20ebead82_doneIndent((*(_self_))._field_oc);
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, static__20ea3c3bb_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_27333_it))));
	_20ebea986_write((*(_self_))._field_oc, jule::Str(":;\n", 3));
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("}\n", 2));
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, static__20ea3c102_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_27333_it))));
	_20ebea986_write((*(_self_))._field_oc, jule::Str(":;", 2));
}



inline void _20ea1c4ab_rangeIter(jule::Ptr<_20ea1a586_scopeCoder> _self_, jule::Ptr<_20d3e54d4_RangeIter> _30633_it) {
	{
		
		if ((_20d4e2bdb_Slc((*((*(_30633_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_212d175a5:;
			{
				_20ea1b378_rangeIndexIter(_self_, &(_30633_it));
			}
		}
		else if ((_20d4e2955_Arr((*((*(_30633_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_212d17275:;
			{
				_20ea1b378_rangeIndexIter(_self_, &(_30633_it));
			}
		}
		else if ((_20d4e3725_Map((*((*(_30633_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_212d172db:;
			{
				_20ea1b631_rangeHashmapIter(_self_, &(_30633_it));
			}
		}
		else {
			_case_begin_212d1720e:;
			{
				_20ea1b378_rangeIndexIter(_self_, &(_30633_it));
			}
		}
		_match_end_212d17143:;
	};
}



inline void _20ea1c764_cont(jule::Ptr<_20ea1a586_scopeCoder> _self_, jule::Ptr<_20d3e5869_ContSt> _31924_c) {
	_20ebea986_write((*(_self_))._field_oc, jule::Str("goto ", 5));
	_20ebea986_write((*(_self_))._field_oc, static__20ea3c3bb_iterNext((*(_31924_c))._field_It));
}



inline void _20ea1ca1c_label(jule::Ptr<_20ea1a586_scopeCoder> _self_, jule::Ptr<_20d3e6040_Label> _32425_l) {
	_20ebea986_write((*(_self_))._field_oc, static__20ea3c685_label(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_32425_l))));
	_20ebea986_write((*(_self_))._field_oc, jule::Str(":", 1));
}



inline void _20ea1ccc5_gotoSt(jule::Ptr<_20ea1a586_scopeCoder> _self_, jule::Ptr<_20d3e6419_GotoSt> _32926_gt) {
	_20ebea986_write((*(_self_))._field_oc, jule::Str("goto ", 5));
	_20ebea986_write((*(_self_))._field_oc, static__20ea3c685_label(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_32926_gt))._field_Label))));
}



inline void _20ea1d07d_postfix(jule::Ptr<_20ea1a586_scopeCoder> _self_, jule::Ptr<_20d3e67e3_Postfix> _33431_p) {
	_20ebea986_write((*(_self_))._field_oc, jule::Str("(", 1));
	_20ea27ae3_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_33431_p))._field_Expr);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
	_20ebea986_write((*(_self_))._field_oc, (*(_33431_p))._field_Op);
}



inline void _20ea1d336_assign(jule::Ptr<_20ea1a586_scopeCoder> _self_, jule::Ptr<_20d3e6c99_Assign> _34130_a) {
	_20ea27ae3_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_34130_a))._field_L))._field_Model);
	_20ebea986_write((*(_self_))._field_oc, (*((*(_34130_a))._field_Op))._field_Kind);
	_20ea27ae3_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_34130_a))._field_R))._field_Model);
}



inline void _20ea1d5de_mapLookupAssign(jule::Ptr<_20ea1a586_scopeCoder> _self_, jule::Ptr<_20d3e7173_MultiAssign>* _34740_a) {
	jule::Ptr<_20d397464_IndexingExprModel> _34817_iem = (*((*(_34740_a))))._field_R.cast_ptr<_20d397464_IndexingExprModel>(&__jule_any_type46);;
	_20ea27ae3_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_34817_iem))._field_Expr))._field_Model);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(".lookup(", 8));
	_20ea27ae3_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_34817_iem))._field_Index))._field_Model);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(", ", 2));
	if (((*((*(_34740_a))))._field_L[0LL] != nullptr)) {
		_20ebea986_write((*(_self_))._field_oc, jule::Str("&(", 2));
		_20ea27ae3_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_34740_a))))._field_L[0LL]))._field_Model);
		_20ebea986_write((*(_self_))._field_oc, jule::Str("), ", 3));
	} else {
		_20ebea986_write((*(_self_))._field_oc, jule::Str("nullptr, ", 9));
	};
	if (((*((*(_34740_a))))._field_L[1LL] != nullptr)) {
		_20ebea986_write((*(_self_))._field_oc, jule::Str("&(", 2));
		_20ea27ae3_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_34740_a))))._field_L[1LL]))._field_Model);
		_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
	} else {
		_20ebea986_write((*(_self_))._field_oc, jule::Str("nullptr", 7));
	};
	_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _20ea1d897_multiAssignTup(jule::Ptr<_20ea1a586_scopeCoder> _self_, jule::Ptr<_20d3e7173_MultiAssign>* _37039_a) {
	_20ebea986_write((*(_self_))._field_oc, jule::Str("({\n", 3));
	_20ebeab84_addIndent((*(_self_))._field_oc);
	jule::Ptr<_20d39a302_TupleExprModel> _37417_tup = (*((*(_37039_a))))._field_R.cast_ptr<_20d39a302_TupleExprModel>(&__jule_any_type85);;
	{
		auto expr = &((*(_37417_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c361781:;
		if (it != expr_end) {
			jule::I64 _37614_i = it - expr->begin();
			jule::Ptr<_20d087165_Data> _37621_r = *it;
			{
				_20ebeb080_indent((*(_self_))._field_oc);
				jule::Ptr<_20d087165_Data> _37821_l = (*((*(_37039_a))))._field_L[_37614_i];;
				if ((_37821_l != nullptr)) {
					{
						auto &_match_expr{ (*(_37821_l))._field_Model };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_20c364740:;
							{
								jule::Ptr<_20d458aca_Var> _38229_v = (*(_37821_l))._field_Model.cast_ptr<_20d458aca_Var>(&__jule_any_type8);;
								if (((*(_38229_v))._field_Reference && (!(_20d458e60_IsInitialized(_38229_v.ptr()))))) {
									_20ebea986_write((*(_self_))._field_oc, static__20ea3ba6e_var(_38229_v));
									_20ebea986_write((*(_self_))._field_oc, jule::Str(" = &(", 5));
									_20ea27ae3_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_37621_r))._field_Model);
									_20ebea986_write((*(_self_))._field_oc, jule::Str(");\n", 3));
									(*((*(_37039_a))))._field_L[_37614_i]=nullptr;
									goto _iter_next_20c361781;
								};
							}
						}
						_match_end_20c3646da:;
					};
					_20ebea986_write((*(_self_))._field_oc, _20ec10b99_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_37821_l))._field_Kind));
					_20ebea986_write((*(_self_))._field_oc, jule::Str(" ", 1));
					_20ebea986_write((*(_self_))._field_oc, static__20ea39e13_toOut(&(_20ea19e59_assignArgName), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_37614_i))));
					_20ebea986_write((*(_self_))._field_oc, jule::Str(" = ", 3));
				};
				_20ea27ae3_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_37621_r))._field_Model);
				_20ebea986_write((*(_self_))._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_20c361781:;
			++it;
			_37614_i++;
			goto _iter_begin_20c361781;
		}
		_iter_end_20c361781:;
	};
	{
		auto expr = &((*((*(_37039_a))))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c36a977:;
		if (it != expr_end) {
			jule::I64 _40314_i = it - expr->begin();
			jule::Ptr<_20d087165_Data> _40321_l = *it;
			{
				if ((_40321_l == nullptr)) {
					goto _iter_next_20c36a977;
				};
				_20ebeb080_indent((*(_self_))._field_oc);
				_20ea27ae3_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_40321_l))._field_Model);
				_20ebea986_write((*(_self_))._field_oc, jule::Str(" = ", 3));
				_20ebea986_write((*(_self_))._field_oc, static__20ea39e13_toOut(&(_20ea19e59_assignArgName), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_40314_i))));
				_20ebea986_write((*(_self_))._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_20c36a977:;
			++it;
			_40314_i++;
			goto _iter_begin_20c36a977;
		}
		_iter_end_20c36a977:;
	};
	_20ebead82_doneIndent((*(_self_))._field_oc);
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("})", 2));
}



inline void _20ea1db50_multiAssignFn(jule::Ptr<_20ea1a586_scopeCoder> _self_, jule::Ptr<_20d3e7173_MultiAssign>* _41938_a) {
	_20ebea986_write((*(_self_))._field_oc, jule::Str("({\n", 3));
	_20ebeab84_addIndent((*(_self_))._field_oc);
	_20ebeb080_indent((*(_self_))._field_oc);
	jule::Ptr<_20d396ad4_FnCallExprModel> _42417_f = (*((*(_41938_a))))._field_R.cast_ptr<_20d396ad4_FnCallExprModel>(&__jule_any_type35);;
	_20ec1595c_codeMut1((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Obj), &((*((*(_42417_f))._field_Func))._field_Result));
	_20ebea986_write((*(_self_))._field_oc, jule::Str(" __jule_assign_result = ", 24));
	_20ea27ae3_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_41938_a))))._field_R);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(";\n", 2));
	{
		auto expr = &((*((*(_41938_a))))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c373ed0:;
		if (it != expr_end) {
			jule::I64 _43014_i = it - expr->begin();
			jule::Ptr<_20d087165_Data> _43021_l = *it;
			{
				if ((_43021_l != nullptr)) {
					_20ebeb080_indent((*(_self_))._field_oc);
					_20ea27ae3_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_43021_l))._field_Model);
					_20ebea986_write((*(_self_))._field_oc, jule::Str(" = __jule_assign_result.__jule_result_arg", 41));
					_20ebea986_write((*(_self_))._field_oc, _20b055388_Itoa(_43014_i));
					_20ebea986_write((*(_self_))._field_oc, jule::Str(";\n", 2));
				};
			}
			_iter_next_20c373ed0:;
			++it;
			_43014_i++;
			goto _iter_begin_20c373ed0;
		}
		_iter_end_20c373ed0:;
	};
	_20ebead82_doneIndent((*(_self_))._field_oc);
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("})", 2));
}



inline void _20ea1de08_multiAssign(jule::Ptr<_20ea1a586_scopeCoder> _self_, jule::Ptr<_20d3e7173_MultiAssign> _44535_a) {
	{
		auto &_match_expr{ (*(_44535_a))._field_R };
		
		if (_match_expr.type == &__jule_any_type46) {
			_case_begin_20c379425:;
			{
				_20ea1d5de_mapLookupAssign(_self_, &(_44535_a));
				return;;
			}
		}
		_match_end_20c3793c0:;
	};
	{
		auto &_match_expr{ (*(_44535_a))._field_R };
		
		if (_match_expr.type == &__jule_any_type85) {
			_case_begin_20c3798ba:;
			{
				_20ea1d897_multiAssignTup(_self_, &(_44535_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_20c379090:;
			{
				_20ea1db50_multiAssignFn(_self_, &(_44535_a));
			}
		}
		else {
			_case_begin_20c379810:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:459:13"));;
			}
		}
		_match_end_20c3797aa:;
	};
}



inline jule::Fn<void(void)> _20ea1e249_matchExpr(jule::Ptr<_20ea1a586_scopeCoder> _self_, jule::Ptr<_20d3e77d3_Match> _46333_m) {
	if ((!(_20d087a39_IsConst((*(_46333_m))._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_20ebea986_write((*(_self_))._field_oc, jule::Str("_match_expr", 11));
		});;
	};
	if (((!(_20b069ad9_IsBool((*((*(_46333_m))._field_Expr))._field_Constant.ptr()))) || (!(_20b0674dd_ReadBool((*((*(_46333_m))._field_Expr))._field_Constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_20ea27ae3_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_46333_m))._field_Expr))._field_Model);
		});;
	};
	return nullptr;;
}



inline void _20ea1e5ac_case(jule::Ptr<_20ea1a586_scopeCoder> _self_, jule::Ptr<_20d3e77d3_Match> _47328_m, jule::Ptr<_20d3e841b_Case> _47343_c) {
	if ((((*(_47343_c))._field_Exprs.len() != 0LL) && (!((*(_47328_m))._field_Comptime)))) {
		if ((((*(_47328_m))._field_Cases.len() > 0LL) && ((*(_47328_m))._field_Cases[0LL] == _47343_c))) {
			_20ebea986_write((*(_self_))._field_oc, jule::Str("if (", 4));
		} else {
			_20ebea986_write((*(_self_))._field_oc, jule::Str("else if (", 9));
		};
		{
			auto expr = &((*(_47343_c))._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_20c38144e:;
			if (it != expr_end) {
				jule::I64 _48018_i = it - expr->begin();
				jule::Ptr<_20d087165_Data> _48025_expr = *it;
				{
					{
						
						if ((!((*(_47328_m))._field_TypeMatch))) {
							_case_begin_20c38916b:;
							{
								jule::Fn<void(void)> _48325_caseExpr = _20ea1e249_matchExpr(_self_, _47328_m);;
								if (_20d087d7a_GoodOperand((*(_47328_m))._field_Expr.ptr(), &(_48025_expr))) {
									if ((_48325_caseExpr != nullptr)) {
										_48325_caseExpr();
										_20ebea986_write((*(_self_))._field_oc, jule::Str(" == ", 4));
									};
									_20ea27ae3_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_48025_expr))._field_Model);
								} else {
									_20ea27ae3_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_48025_expr))._field_Model);
									if ((_48325_caseExpr != nullptr)) {
										_20ebea986_write((*(_self_))._field_oc, jule::Str(" == ", 4));
										_48325_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_20c382e34:;
							{
								_20ebea986_write((*(_self_))._field_oc, jule::Str("_match_expr", 11));
								jule::Ptr<_20d4de28c_TypeKind> _49929_tk = (*(_48025_expr))._field_Model.cast_ptr<_20d4de28c_TypeKind>(&__jule_any_type87);;
								if ((_20d4e348e_Trait((*((*(_47328_m))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									_20ebea986_write((*(_self_))._field_oc, jule::Str(".type_is(", 9));
									_20ea251c8_boolean((*((*(_self_))._field_oc))._field_ec, (_20d4e1e1b_Sptr((*(_48025_expr))._field_Kind.ptr()) != nullptr));
									_20ebea986_write((*(_self_))._field_oc, jule::Str(", ", 2));
									_20ebea986_write((*(_self_))._field_oc, _20b055388_Itoa(static_cast<jule::I64>(_20ebec56a_findTypeOffset((*(_self_))._field_oc.ptr(), _20d4e348e_Trait((*((*(_47328_m))._field_Expr))._field_Kind.ptr()), (*(_48025_expr))._field_Kind))));
									_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
								} else {
									jule::I64 _50729_j = _20ebeb712_pushAnyType((*(_self_))._field_oc, _49929_tk);;
									_20ebea986_write((*(_self_))._field_oc, jule::Str(".type == &__jule_any_type", 25));
									_20ebea986_write((*(_self_))._field_oc, _20b055388_Itoa(_50729_j));
								};
							}
						}
						_match_end_20c382d68:;
					};
					if ((((*(_47343_c))._field_Exprs.len() - _48018_i) > 1LL)) {
						_20ebea986_write((*(_self_))._field_oc, jule::Str(" || ", 4));
					};
				}
				_iter_next_20c38144e:;
				++it;
				_48018_i++;
				goto _iter_begin_20c38144e;
			}
			_iter_end_20c38144e:;
		};
		_20ebea986_write((*(_self_))._field_oc, jule::Str(") ", 2));
	} else if ((((*(_47328_m))._field_Default == _47343_c) && ((*(_47328_m))._field_Cases.len() != 0LL))) {
		_20ebeb080_indent((*(_self_))._field_oc);
		_20ebea986_write((*(_self_))._field_oc, jule::Str("else ", 5));
	};
	_20ebeab84_addIndent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("{\n", 2));
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, static__20ea3cc18_caseBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_47343_c))));
	_20ebea986_write((*(_self_))._field_oc, jule::Str(":;\n", 3));
	if (((*((*(_47343_c))._field_Scope))._field_Stmts.len() > 0LL)) {
		_20ebeb080_indent((*(_self_))._field_oc);
		_20ea2156a_scope(_self_, (*(_47343_c))._field_Scope);
		_20ebea986_write((*(_self_))._field_oc, jule::Str("\n", 1));
	};
	_20ebead82_doneIndent((*(_self_))._field_oc);
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("}", 1));
}



inline void _20ea1e865_matchSt(jule::Ptr<_20ea1a586_scopeCoder> _self_, jule::Ptr<_20d3e77d3_Match> _54131_m) {
	if ((((*(_54131_m))._field_Cases.len() == 0LL) && ((*(_54131_m))._field_Default == nullptr))) {
		return;;
	};
	if (((*(_54131_m))._field_Comptime && (((*(_54131_m))._field_Default == nullptr) || ((*((*((*(_54131_m))._field_Default))._field_Scope))._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_20ebea986_write((*(_self_))._field_oc, jule::Str("{\n", 2));
	_20ebeab84_addIndent((*(_self_))._field_oc);
	_20ebeb080_indent((*(_self_))._field_oc);
	if (((!((*(_54131_m))._field_Comptime)) && (!(_20d087a39_IsConst((*(_54131_m))._field_Expr.ptr()))))) {
		if ((_20e02dced_Copy && _20ea21bdb_isCopyOptimizable(&((*(_54131_m))._field_Expr)))) {
			_20ebea986_write((*(_self_))._field_oc, jule::Str("auto &_match_expr{ ", 19));
		} else {
			_20ebea986_write((*(_self_))._field_oc, jule::Str("auto _match_expr{ ", 18));
		};
		_20ea27ae3_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_54131_m))._field_Expr))._field_Model);
		_20ebea986_write((*(_self_))._field_oc, jule::Str(" };\n", 4));
		_20ebeb080_indent((*(_self_))._field_oc);
	};
	if (((*(_54131_m))._field_Cases.len() > 0LL)) {
		{
			auto expr = &((*(_54131_m))._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_20c39caa8:;
			if (it != expr_end) {
				jule::Ptr<_20d3e841b_Case> _56925_c = *it;
				{
					if ((_56925_c == nullptr)) {
						goto _iter_next_20c39caa8;
					};
					_20ebea986_write((*(_self_))._field_oc, jule::Str("\n", 1));
					_20ebeb080_indent((*(_self_))._field_oc);
					_20ea1e5ac_case(_self_, _54131_m, _56925_c);
				}
				_iter_next_20c39caa8:;
				++it;
				goto _iter_begin_20c39caa8;
			}
			_iter_end_20c39caa8:;
		};
	};
	if (((*(_54131_m))._field_Default != nullptr)) {
		_20ebea986_write((*(_self_))._field_oc, jule::Str("\n", 1));
		_20ea1e5ac_case(_self_, _54131_m, (*(_54131_m))._field_Default);
	};
	_20ebea986_write((*(_self_))._field_oc, jule::Str("\n", 1));
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, static__20ea3c94e_matchEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_54131_m))));
	_20ebea986_write((*(_self_))._field_oc, jule::Str(":;", 2));
	_20ebea986_write((*(_self_))._field_oc, jule::Str("\n", 1));
	_20ebead82_doneIndent((*(_self_))._field_oc);
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("}", 1));
}



inline void _20ea1eb1d_fallSt(jule::Ptr<_20ea1a586_scopeCoder> _self_, jule::Ptr<_20d3e8a15_FallSt> _59626_f) {
	_20ebea986_write((*(_self_))._field_oc, jule::Str("goto ", 5));
	_20ebea986_write((*(_self_))._field_oc, static__20ea3cc18_caseBegin((*(_59626_f))._field_DestCase));
}



inline void _20ea1edc6_breakSt(jule::Ptr<_20ea1a586_scopeCoder> _self_, jule::Ptr<_20d3e5c43_BreakSt> _60127_b) {
	_20ebea986_write((*(_self_))._field_oc, jule::Str("goto ", 5));
	if (((*(_60127_b))._field_It != 0LLU)) {
		_20ebea986_write((*(_self_))._field_oc, static__20ea3c102_iterEnd((*(_60127_b))._field_It));
	} else {
		_20ebea986_write((*(_self_))._field_oc, static__20ea3c94e_matchEnd((*(_60127_b))._field_Mtch));
	};
}



inline void _20ea2017e_setResult(jule::Ptr<_20ea1a586_scopeCoder> _self_, jule::Ptr<_20d3e8d9a_RetSt> _61033_r) {
	if (((*((*((*((*(_61033_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
		_20ebea986_write((*(_self_))._field_oc, jule::Str("__jule_func_result = ", 21));
		_20ea27ae3_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_61033_r))._field_Expr);
		_20ebea986_write((*(_self_))._field_oc, jule::Str(";\n", 2));
		_20ebeb080_indent((*(_self_))._field_oc);
		return;;
	};
	jule::Slice<jule::Ptr<_20d087165_Data>> _61817_datas = (*((*(_61033_r))._field_Expr.cast_ptr<_20d39a302_TupleExprModel>(&__jule_any_type85)))._field_Datas;;
	{
		auto expr = &(_61817_datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c3aad80:;
		if (it != expr_end) {
			jule::I64 _61913_i = it - expr->begin();
			jule::Ptr<_20d087165_Data> _61916_data = *it;
			{
				_20ebea986_write((*(_self_))._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
				_20ebea986_write((*(_self_))._field_oc, _20b055388_Itoa(_61913_i));
				_20ebea986_write((*(_self_))._field_oc, jule::Str(" = ", 3));
				_20ea27ae3_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_61916_data))._field_Model);
				_20ebea986_write((*(_self_))._field_oc, jule::Str(";\n", 2));
				_20ebeb080_indent((*(_self_))._field_oc);
			}
			_iter_next_20c3aad80:;
			++it;
			_61913_i++;
			goto _iter_begin_20c3aad80;
		}
		_iter_end_20c3aad80:;
	};
}



inline void _20ea20437_retSt(jule::Ptr<_20ea1a586_scopeCoder> _self_, jule::Ptr<_20d3e8d9a_RetSt> _62929_r) {
	if (_20d3a30b8_IsVoid((*((*(_62929_r))._field_Func))._field_Decl.ptr())) {
		if ((*((*((*(_62929_r))._field_Func))._field_Decl))._field_Exceptional) {
			_20ebea986_write((*(_self_))._field_oc, jule::Str("return jule::VoidExceptional();", 31));
			return;;
		};
		_20ebea986_write((*(_self_))._field_oc, jule::Str("return;", 7));
		return;;
	} else if (((*((*((*((*(_62929_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 0LL)) {
		if ((*((*((*(_62929_r))._field_Func))._field_Decl))._field_Exceptional) {
			_20ebea986_write((*(_self_))._field_oc, jule::Str("return jule::Exceptional<", 25));
			_20ebea986_write((*(_self_))._field_oc, _20ec10b99_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*((*(_62929_r))._field_Func))._field_Result));
			_20ebea986_write((*(_self_))._field_oc, jule::Str(">(jule::Any(), ", 15));
			_20ea27ae3_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_62929_r))._field_Expr);
			_20ebea986_write((*(_self_))._field_oc, jule::Str(");", 2));
		} else {
			_20ebea986_write((*(_self_))._field_oc, jule::Str("return ", 7));
			_20ea27ae3_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_62929_r))._field_Expr);
			_20ebea986_write((*(_self_))._field_oc, jule::Str(";", 1));
		};
		return;;
	};
	if (((*(_62929_r))._field_Expr != nullptr)) {
		_20ea2017e_setResult(_self_, _62929_r);
	};
	if ((*((*((*(_62929_r))._field_Func))._field_Decl))._field_Exceptional) {
		_20ebea986_write((*(_self_))._field_oc, jule::Str("return jule::Exceptional<", 25));
		_20ec1595c_codeMut1((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Obj), &((*((*(_62929_r))._field_Func))._field_Result));
		_20ebea986_write((*(_self_))._field_oc, jule::Str(">(jule::Any(), __jule_func_result);", 35));
	} else {
		_20ebea986_write((*(_self_))._field_oc, jule::Str("return __jule_func_result;", 26));
	};
}



inline void _20ea206e0_var(jule::Ptr<_20ea1a586_scopeCoder> _self_, jule::Ptr<_20d458aca_Var> _66527_v) {
	if ((!((*(_66527_v))._field_Constant))) {
		_20ec038b2_var((*(_self_))._field_oc, _66527_v);
	};
}



inline void _20ea20998_mutSlicing(jule::Ptr<_20ea1a586_scopeCoder> _self_, jule::Ptr<_20d575ba3_MutSlicingExprModel> _67134_m) {
	_20ebea986_write((*(_self_))._field_oc, jule::Str("(", 1));
	_20ea27ae3_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_67134_m))._field_Expr);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(").mut_slice(", 12));
	if ((!(_23c5b2375_Production))) {
		_20ebea986_write((*(_self_))._field_oc, jule::Str("\"", 1));
		_20ebecb86_locInfo((*(_self_))._field_oc, &((*(_67134_m))._field_Token));
		_20ebea986_write((*(_self_))._field_oc, jule::Str("\", ", 3));
	};
	_20ea27ae3_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_67134_m))._field_Left);
	if (((*(_67134_m))._field_Right != nullptr)) {
		_20ebea986_write((*(_self_))._field_oc, jule::Str(", ", 2));
		_20ea27ae3_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_67134_m))._field_Right);
	};
	_20ebea986_write((*(_self_))._field_oc, jule::Str(");", 2));
}



inline void _20ea20c51_swap(jule::Ptr<_20ea1a586_scopeCoder> _self_, jule::Ptr<_20d57491b_SwapExprModel> _68828_m) {
	_20ebea986_write((*(_self_))._field_oc, jule::Str("std::swap(", 10));
	_20ea27ae3_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_68828_m))._field_Left))._field_Model);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(", ", 2));
	_20ea27ae3_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_68828_m))._field_Right))._field_Model);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _20ea21009_st(jule::Ptr<_20ea1a586_scopeCoder> _self_, jule::Any _69726_st) {
	if ((_69726_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _69726_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_20c3c5806:;
			{
				_20ea2156a_scope(_self_, _69726_st.cast_ptr<_20d3e369c_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_20c3c63b7:;
			{
				_20ea206e0_var(_self_, _69726_st.cast_ptr<_20d458aca_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_20c3c642d:;
			{
				_20ea3216e_model((*((*(_self_))._field_oc))._field_ec, (*(_69726_st.cast_ptr<_20d087165_Data>(&__jule_any_type24)))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_20c3c6494:;
			{
				_20ea1bb92_conditional(_self_, _69726_st.cast_ptr<_20d3e42d5_Conditional>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_20c3c650a:;
			{
				_20ea1be4a_infIter(_self_, _69726_st.cast_ptr<_20d3e45d2_InfIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_20c3c6571:;
			{
				_20ea1c203_whileIter(_self_, _69726_st.cast_ptr<_20d3e4a88_WhileIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_20c3c65d7:;
			{
				_20ea1c4ab_rangeIter(_self_, _69726_st.cast_ptr<_20d3e54d4_RangeIter>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_20c3c664d:;
			{
				_20ea1c764_cont(_self_, _69726_st.cast_ptr<_20d3e5869_ContSt>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_20c3c66b4:;
			{
				_20ea1ca1c_label(_self_, _69726_st.cast_ptr<_20d3e6040_Label>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_20c3c672a:;
			{
				_20ea1ccc5_gotoSt(_self_, _69726_st.cast_ptr<_20d3e6419_GotoSt>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_20c3c6791:;
			{
				_20ea1d07d_postfix(_self_, _69726_st.cast_ptr<_20d3e67e3_Postfix>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_20c3c6807:;
			{
				_20ea1d336_assign(_self_, _69726_st.cast_ptr<_20d3e6c99_Assign>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_20c3c686d:;
			{
				_20ea1de08_multiAssign(_self_, _69726_st.cast_ptr<_20d3e7173_MultiAssign>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_20c3c68d4:;
			{
				_20ea1e865_matchSt(_self_, _69726_st.cast_ptr<_20d3e77d3_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_20c3c694a:;
			{
				_20ea1eb1d_fallSt(_self_, _69726_st.cast_ptr<_20d3e8a15_FallSt>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_20c3c69b1:;
			{
				_20ea1edc6_breakSt(_self_, _69726_st.cast_ptr<_20d3e5c43_BreakSt>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_20c3c6a38:;
			{
				_20ea20437_retSt(_self_, _69726_st.cast_ptr<_20d3e8d9a_RetSt>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_20c3c6ab0:;
			{
				_20ea2e897_pushToSlice((*((*(_self_))._field_oc))._field_ec, _69726_st.cast_ptr<_20d5766cb_PushToSliceExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_20c3c6b37:;
			{
				_20ea2eb50_appendToSlice((*((*(_self_))._field_oc))._field_ec, _69726_st.cast_ptr<_20d576aa5_AppendToSliceExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_20c3c6bae:;
			{
				_20ea20998_mutSlicing(_self_, _69726_st.cast_ptr<_20d575ba3_MutSlicingExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_20c3c6c36:;
			{
				_20ea20c51_swap(_self_, _69726_st.cast_ptr<_20d57491b_SwapExprModel>(&__jule_any_type124));
			}
		}
		else {
			_case_begin_20c3c58b1:;
			{
				_20ebea986_write((*(_self_))._field_oc, jule::Str("<unimplemented_stmt>", 20));
			}
		}
		_match_end_20c3c5460:;
	};
}



inline void _20ea212b2_scopeStmts(jule::Ptr<_20ea1a586_scopeCoder> _self_, jule::Ptr<_20d3e369c_Scope>* _74935_s) {
	{
		auto expr = &((*((*(_74935_s))))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c3d1845:;
		if (it != expr_end) {
			jule::Any _75021_st = *it;
			{
				_20ebeb080_indent((*(_self_))._field_oc);
				_20ea21009_st(_self_, _75021_st);
				_20ebea986_write((*(_self_))._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_20c3d1845:;
			++it;
			goto _iter_begin_20c3d1845;
		}
		_iter_end_20c3d1845:;
	};
}



inline void _20ea2156a_scope(jule::Ptr<_20ea1a586_scopeCoder> _self_, jule::Ptr<_20d3e369c_Scope> _75829_s) {
	_20ebeab84_addIndent((*(_self_))._field_oc);
	if ((*(_75829_s))._field_Deferred) {
		_20ebea986_write((*(_self_))._field_oc, jule::Str("__JULE_DEFER(", 13));
	};
	_20ebea986_write((*(_self_))._field_oc, jule::Str("{\n", 2));
	_20ea212b2_scopeStmts(_self_, &(_75829_s));
	_20ebead82_doneIndent((*(_self_))._field_oc);
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("}", 1));
	if ((*(_75829_s))._field_Deferred) {
		_20ebea986_write((*(_self_))._field_oc, jule::Str(");", 2));
	};
}



inline void _20ea21823_funcScope(jule::Ptr<_20ea1a586_scopeCoder> _self_, jule::Ptr<_20d3a5a49_FnIns> _77433_f) {
	if (((*(_77433_f))._field_Scope == nullptr)) {
		return;;
	};
	_20ebea986_write((*(_self_))._field_oc, jule::Str("{\n", 2));
	_20ebeab84_addIndent((*(_self_))._field_oc);
	if ((!(_20d3a30b8_IsVoid((*(_77433_f))._field_Decl.ptr())))) {
		jule::Ptr<_20d4ec201_Tuple> _78121_tup = _20d4e39ab_Tup((*(_77433_f))._field_Result.ptr());;
		if ((_78121_tup != nullptr)) {
			_20ebeb080_indent((*(_self_))._field_oc);
			_20ec15286_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Obj), _78121_tup);
			_20ebea986_write((*(_self_))._field_oc, jule::Str(" __jule_func_result;\n", 21));
			{
				auto expr = &((*(_78121_tup))._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_20c3dc71e:;
				if (it != expr_end) {
					jule::I64 _78622_i = it - expr->begin();
					jule::Ptr<_20d4de28c_TypeKind> _78629_t = *it;
					{
						if (_20ec17d5a_shouldInitialized(&(_78629_t))) {
							_20ebeb080_indent((*(_self_))._field_oc);
							_20ebea986_write((*(_self_))._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
							_20ebea986_write((*(_self_))._field_oc, _20b055388_Itoa(_78622_i));
							_20ebea986_write((*(_self_))._field_oc, jule::Str(" = ", 3));
							_20ea32427_initExpr((*((*(_self_))._field_oc))._field_ec, _78629_t);
							_20ebea986_write((*(_self_))._field_oc, jule::Str(";\n", 2));
						};
					}
					_iter_next_20c3dc71e:;
					++it;
					_78622_i++;
					goto _iter_begin_20c3dc71e;
				}
				_iter_end_20c3dc71e:;
			};
		} else if (((*((*((*(_77433_f))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
			_20ebeb080_indent((*(_self_))._field_oc);
			_20ebea986_write((*(_self_))._field_oc, _20ec10b99_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_77433_f))._field_Result));
			_20ebea986_write((*(_self_))._field_oc, jule::Str(" __jule_func_result", 19));
			if (_20ec17d5a_shouldInitialized(&((*(_77433_f))._field_Result))) {
				_20ebea986_write((*(_self_))._field_oc, jule::Str(" = ", 3));
				_20ea32427_initExpr((*((*(_self_))._field_oc))._field_ec, (*(_77433_f))._field_Result);
			};
			_20ebea986_write((*(_self_))._field_oc, jule::Str(";\n", 2));
		};
	};
	_20ea212b2_scopeStmts(_self_, &((*(_77433_f))._field_Scope));
	if (((*((*(_77433_f))._field_Decl))._field_Exceptional && _20d3a30b8_IsVoid((*(_77433_f))._field_Decl.ptr()))) {
		_20ebeb080_indent((*(_self_))._field_oc);
		_20ebea986_write((*(_self_))._field_oc, jule::Str("return jule::VoidExceptional();\n", 32));
	};
	_20ebead82_doneIndent((*(_self_))._field_oc);
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("}", 1));
}







std::ostream &operator<<(std::ostream &_Stream, _20ea1a586_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20ea2479e_exprCoder> static__20ea24b67_new(jule::Ptr<_20ebea2d2_ObjectCoder>* _10824_oc) {
	return jule::new_ptr<_20ea2479e_exprCoder>(_20ea2479e_exprCoder{._field_oc=(*(_10824_oc))});;
}



inline void _20ea24e20_string(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20b0655eb_Const>* _11427_c) {
	jule::Str _11513_content = _20b067774_ReadStr((*(_11427_c)).ptr());;
	if ((_11513_content.len() == 0LL)) {
		_20ebea986_write((*(_self_))._field_oc, jule::Str("jule::Str()", 11));
		return;;
	};
	jule::Str _12013_len = _20b0550be_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_11513_content.len())), 10LL);;
	_20ebea986_write((*(_self_))._field_oc, jule::Str("jule::Str", 9));
	_20ebea986_write((*(_self_))._field_oc, jule::Str("(", 1));
	_20ea33219_cstrLit(&((*((*(_self_))._field_oc))._field_Obj), _11513_content);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(", ", 2));
	_20ebea986_write((*(_self_))._field_oc, _12013_len);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _20ea251c8_boolean(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Bool _12927_b) {
	if (_12927_b) {
		_20ebea986_write((*(_self_))._field_oc, jule::Str("true", 4));
	} else {
		_20ebea986_write((*(_self_))._field_oc, jule::Str("false", 5));
	};
}



inline void _20ea253c6_nilLit(jule::Ptr<_20ea2479e_exprCoder> _self_) {
	_20ebea986_write((*(_self_))._field_oc, jule::Str("nullptr", 7));
}



inline jule::Bool _20ea25717_ftoaSpecialCases(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::F64* _14137_x) {
	{
		
		if (_20b003ec4_IsNaN((*(_14137_x)))) {
			_case_begin_20c412e2b:;
			{
				_20ebea986_write((*(_self_))._field_oc, jule::Str("NAN", 3));
			}
		}
		else if (_20b0045ce_IsInf((*(_14137_x)), 1LL)) {
			_case_begin_20c412ea3:;
			{
				_20ebea986_write((*(_self_))._field_oc, jule::Str("INFINITY", 8));
			}
		}
		else if (_20b0045ce_IsInf((*(_14137_x)), -1LL)) {
			_case_begin_20c41302a:;
			{
				_20ebea986_write((*(_self_))._field_oc, jule::Str("-INFINITY", 9));
			}
		}
		else {
			_case_begin_20c412d4e:;
			{
				return false;;
			}
		}
		_match_end_20c412c83:;
	};
	return true;;
}



inline void _20ea259c0_float32(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20b0655eb_Const>* _15528_c) {
	jule::F64 _15613_x = _20b0682ad_AsF64((*(_15528_c)).ptr());;
	if (_20ea25717_ftoaSpecialCases(_self_, &(_15613_x))) {
		return;;
	};
	{
		
		if ((_15613_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_20c41657d:;
			{
				_20ebea986_write((*(_self_))._field_oc, jule::Str("jule::MAX_F32", 13));
			}
		}
		else if ((_15613_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_20c4162c5:;
			{
				_20ebea986_write((*(_self_))._field_oc, jule::Str("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_20c41625e:;
			{
				_20ea335b0_ftoa(&((*((*(_self_))._field_oc))._field_Obj), _15613_x, 32LL);
				_20ebea986_write((*(_self_))._field_oc, jule::Str("f", 1));
			}
		}
		_match_end_20c41602d:;
	};
}



inline void _20ea25c78_float64(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20b0655eb_Const>* _17428_c) {
	jule::F64 _17513_x = _20b0682ad_AsF64((*(_17428_c)).ptr());;
	if (_20ea25717_ftoaSpecialCases(_self_, &(_17513_x))) {
		return;;
	};
	{
		
		if ((_17513_x == jule::MAX_F64)) {
			_case_begin_20c419b14:;
			{
				_20ebea986_write((*(_self_))._field_oc, jule::Str("jule::MAX_F64", 13));
			}
		}
		else if ((_17513_x == jule::MIN_F64)) {
			_case_begin_20c41a395:;
			{
				_20ebea986_write((*(_self_))._field_oc, jule::Str("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_20c4197e5:;
			{
				_20ea335b0_ftoa(&((*((*(_self_))._field_oc))._field_Obj), _17513_x, 64LL);
			}
		}
		_match_end_20c4195b4:;
	};
}



inline void _20ea26031_constant(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20b0655eb_Const> _19232_c) {
	{
		
		if (_20b069d70_IsStr(_19232_c.ptr())) {
			_case_begin_20c41bece:;
			{
				_20ea24e20_string(_self_, &(_19232_c));
			}
		}
		else if (_20b069ad9_IsBool(_19232_c.ptr())) {
			_case_begin_20c41bab1:;
			{
				_20ea251c8_boolean(_self_, _20b0674dd_ReadBool(_19232_c.ptr()));
			}
		}
		else if (_20b06a106_IsF64(_19232_c.ptr())) {
			_case_begin_20c41bb27:;
			{
				{
					
					if ((*(_19232_c))._field_Kind.equal("f32", 3)) {
						_case_begin_20c41e685:;
						{
							_20ea259c0_float32(_self_, &(_19232_c));
						}
					}
					else {
						_case_begin_20c41e201:;
						{
							_20ea25c78_float64(_self_, &(_19232_c));
						}
					}
					_match_end_20c41e146:;
				};
			}
		}
		else if (_20b0695bc_IsI64(_19232_c.ptr())) {
			_case_begin_20c41bb8d:;
			{
				_20ea3389b_itoa(&((*((*(_self_))._field_oc))._field_Obj), static_cast<jule::I64>(_20b066ec1_ReadI64(_19232_c.ptr())));
			}
		}
		else if (_20b069853_IsU64(_19232_c.ptr())) {
			_case_begin_20c41bc04:;
			{
				_20ea33b87_utoa(&((*((*(_self_))._field_oc))._field_Obj), static_cast<jule::U64>(_20b067257_ReadU64(_19232_c.ptr())));
			}
		}
		else if (_20b06a38c_IsNil(_19232_c.ptr())) {
			_case_begin_20c41c6b6:;
			{
				_20ea253c6_nilLit(_self_);
			}
		}
		else {
			_case_begin_20c41ba4a:;
			{
				_20ebea986_write((*(_self_))._field_oc, jule::Str("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_20c41b97e:;
	};
}



inline void _20ea2644e_divByZeroBinary(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d3510bb_Token>* _21636_op, jule::Ptr<_20d394609_OperandExprModel>* _21653_l, jule::Ptr<_20d394609_OperandExprModel>* _21680_r) {
	_20ebea986_write((*(_self_))._field_oc, jule::Str("jule::", 6));
	{
		auto &_match_expr{ (*((*(_21636_op))))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_20c42349c:;
			{
				_20ebea986_write((*(_self_))._field_oc, jule::Str("div(", 4));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_20c423524:;
			{
				_20ebea986_write((*(_self_))._field_oc, jule::Str("mod(", 4));
			}
		}
		_match_end_20c423436:;
	};
	if ((!(_23c5b2375_Production))) {
		_20ebea986_write((*(_self_))._field_oc, jule::Str("\"", 1));
		_20ebecb86_locInfo((*(_self_))._field_oc, _21636_op);
		_20ebea986_write((*(_self_))._field_oc, jule::Str("\",", 2));
	};
	_20ea27ae3_possibleRefExpr(_self_, (*((*(_21653_l))))._field_Model);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(",", 1));
	_20ea27ae3_possibleRefExpr(_self_, (*((*(_21680_r))))._field_Model);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _20ea26707_unsafeBinary(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d394b04_BinopExprModel> _23836_m) {
	if ((((*((*(_23836_m))._field_Op))._field_Id == static_cast<jule::U64>(50LLU)) || ((*((*(_23836_m))._field_Op))._field_Id == static_cast<jule::U64>(51LLU)))) {
		if (_20ea345e4_isAny(&((*((*(_23836_m))._field_Left))._field_Kind))) {
			if (((!(_20d4e037b_IsNil((*((*(_23836_m))._field_Right))._field_Kind.ptr()))) && (!(_20ea345e4_isAny(&((*((*(_23836_m))._field_Right))._field_Kind)))))) {
				_20ebea986_write((*(_self_))._field_oc, jule::Str("(", 1));
				if (((*((*(_23836_m))._field_Op))._field_Id == static_cast<jule::U64>(51LLU))) {
					_20ebea986_write((*(_self_))._field_oc, jule::Str("!", 1));
				};
				jule::I64 _24825_i = _20ebeb712_pushAnyType((*(_self_))._field_oc, (*((*(_23836_m))._field_Right))._field_Kind);;
				_20ebea986_write((*(_self_))._field_oc, jule::Str("__jule_any_type", 15));
				_20ebea986_write((*(_self_))._field_oc, _20b055388_Itoa(_24825_i));
				_20ebea986_write((*(_self_))._field_oc, jule::Str("_compare(", 9));
				_20ea27ae3_possibleRefExpr(_self_, (*((*(_23836_m))._field_Left))._field_Model);
				_20ebea986_write((*(_self_))._field_oc, jule::Str(", ", 2));
				_20ea27ae3_possibleRefExpr(_self_, (*((*(_23836_m))._field_Right))._field_Model);
				_20ebea986_write((*(_self_))._field_oc, jule::Str("))", 2));
				return;;
			};
		};
	};
	_20ebea986_write((*(_self_))._field_oc, jule::Str("(", 1));
	_20ea27ae3_possibleRefExpr(_self_, (*((*(_23836_m))._field_Left))._field_Model);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(" ", 1));
	_20ebea986_write((*(_self_))._field_oc, (*((*(_23836_m))._field_Op))._field_Kind);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(" ", 1));
	_20ea27ae3_possibleRefExpr(_self_, (*((*(_23836_m))._field_Right))._field_Model);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _20ea269b0_binary(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d394b04_BinopExprModel> _26930_m) {
	{
		auto &_match_expr{ (*((*(_26930_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_20c434623:;
			{
				if ((_20d4e3208_Struct((*((*(_26930_m))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_20ea2644e_divByZeroBinary(_self_, &((*(_26930_m))._field_Op), &((*(_26930_m))._field_Left), &((*(_26930_m))._field_Right));
					return;;
				};
			}
		}
		_match_end_20c434568:;
	};
	_20ea26707_unsafeBinary(_self_, _26930_m);
}



inline void _20ea26c68_var(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d458aca_Var> _28127_m) {
	if ((*(_28127_m))._field_Binded) {
		jule::Ptr<_20d36adb6_Directive> _28317_d = _20ec176c8_findDirective(&((*(_28127_m))._field_Directives), jule::Str("namespace", 9));;
		if ((_28317_d != nullptr)) {
			_20ebea986_write((*(_self_))._field_oc, _20ec07ad6_concatAllParts((*(_28317_d))._field_Args));
			_20ebea986_write((*(_self_))._field_oc, jule::Str("::", 2));
		};
	};
	_20ebea986_write((*(_self_))._field_oc, static__20ea3ba6e_var(_28127_m));
}



inline void _20ea27021_structureIns(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d39066b_StructIns> _29236_m) {
	_20ebea986_write((*(_self_))._field_oc, _20ec0e04e_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), _29236_m));
}



inline void _20ea272c9_unary(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d394ecd_UnaryExprModel> _29629_m) {
	{
		auto &_match_expr{ (*((*(_29629_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_20c43a97b:;
			{
				_20ebea986_write((*(_self_))._field_oc, jule::Str("(~(", 3));
				_20ea27ae3_possibleRefExpr(_self_, (*((*(_29629_m))._field_Expr))._field_Model);
				_20ebea986_write((*(_self_))._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_20c43aa03:;
			{
				if ((_23c5b2375_Production || (_20d4e1e1b_Sptr((*((*(_29629_m))._field_Expr))._field_Kind.ptr()) == nullptr))) {
					goto _match_end_20c43a8b0;
				};
				_20ea27ae3_possibleRefExpr(_self_, (*((*(_29629_m))._field_Expr))._field_Model);
				_20ebea986_write((*(_self_))._field_oc, jule::Str(".get(\"", 6));
				_20ebecb86_locInfo((*(_self_))._field_oc, &((*(_29629_m))._field_Op));
				_20ebea986_write((*(_self_))._field_oc, jule::Str("\")", 2));
				return;;
			}
		}
		_match_end_20c43a8b0:;
	};
	_20ebea986_write((*(_self_))._field_oc, jule::Str("(", 1));
	_20ebea986_write((*(_self_))._field_oc, (*((*(_29629_m))._field_Op))._field_Kind);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("(", 1));
	_20ea27ae3_possibleRefExpr(_self_, (*((*(_29629_m))._field_Expr))._field_Model);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("))", 2));
}



inline void _20ea27582_structureLit(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d3958a2_StructLitExprModel> _32036_m) {
	if ((*((*((*(_32036_m))._field_Strct))._field_Decl))._field_Binded) {
		_20ebea986_write((*(_self_))._field_oc, jule::Str("(", 1));
	};
	_20ebea986_write((*(_self_))._field_oc, static__20ea3b4db_structureIns(&((*(_32036_m))._field_Strct)));
	if ((*((*((*(_32036_m))._field_Strct))._field_Decl))._field_Binded) {
		_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
	};
	_20ebea986_write((*(_self_))._field_oc, jule::Str("{", 1));
	if (((*(_32036_m))._field_Args.len() > 0LL)) {
		_julec_label_20c4457bb:;
		{
			auto expr = &((*((*(_32036_m))._field_Strct))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_20c4458ed:;
			if (it != expr_end) {
				jule::I64 _33317_i = it - expr->begin();
				jule::Ptr<_20d38eabb_FieldIns> _33320_f = *it;
				{
					{
						auto expr = &((*(_32036_m))._field_Args);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_20c446778:;
						if (it != expr_end) {
							jule::Ptr<_20d39550b_StructArgExprModel> _33429_arg = *it;
							{
								if (((*(_33429_arg))._field_Field == _33320_f)) {
									_20ebea986_write((*(_self_))._field_oc, jule::Str(".", 1));
									_20ebea986_write((*(_self_))._field_oc, static__20ea3b7a5_field(&((*((*(_33429_arg))._field_Field))._field_Decl)));
									_20ebea986_write((*(_self_))._field_oc, jule::Str("=", 1));
									_20ea27ae3_possibleRefExpr(_self_, (*((*(_33429_arg))._field_Expr))._field_Model);
									if ((((*((*(_32036_m))._field_Strct))._field_Fields.len() - _33317_i) > 1LL)) {
										_20ebea986_write((*(_self_))._field_oc, jule::Str(", ", 2));
									};
									goto _iter_next_20c4458ed;
								};
							}
							_iter_next_20c446778:;
							++it;
							goto _iter_begin_20c446778;
						}
						_iter_end_20c446778:;
					};
				}
				_iter_next_20c4458ed:;
				++it;
				_33317_i++;
				goto _iter_begin_20c4458ed;
			}
			_iter_end_20c4458ed:;
		};
	};
	_20ebea986_write((*(_self_))._field_oc, jule::Str("}", 1));
}



inline void _20ea2783a_allocStructure(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d395b9e_AllocStructLitExprModel> _35138_m) {
	_20ebea986_write((*(_self_))._field_oc, jule::Str("jule::new_ptr<", 14));
	_20ebea986_write((*(_self_))._field_oc, static__20ea3b4db_structureIns(&((*((*(_35138_m))._field_Lit))._field_Strct)));
	_20ebea986_write((*(_self_))._field_oc, jule::Str(">(", 2));
	_20ea27582_structureLit(_self_, (*(_35138_m))._field_Lit);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _20ea27ae3_possibleRefExpr(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Any _35935_expr) {
	{
		auto &_match_expr{ _35935_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_20c44de45:;
			{
				jule::Ptr<_20d458aca_Var> _36217_v = _35935_expr.cast_ptr<_20d458aca_Var>(&__jule_any_type8);;
				if ((*(_36217_v))._field_Reference) {
					_20ebea986_write((*(_self_))._field_oc, jule::Str("(*(", 3));
					_20ea3216e_model(_self_, _35935_expr);
					_20ebea986_write((*(_self_))._field_oc, jule::Str("))", 2));
					return;;
				};
			}
		}
		_match_end_20c44dde0:;
	};
	_20ea3216e_model(_self_, _35935_expr);
}



inline void _20ea28011_castTraitFromTrait(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d396232_CastingExprModel>* _37343_m, jule::Ptr<_20d3b5dde_Trait> _37369_t1, jule::Ptr<_20d3b5dde_Trait> _37385_t2) {
	_20ea27ae3_possibleRefExpr(_self_, (*((*(_37343_m))))._field_Expr);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(".mask<", 6));
	_20ebea986_write((*(_self_))._field_oc, static__20ea3ab8e_traitDecl(_37369_t1));
	_20ebea986_write((*(_self_))._field_oc, jule::Str(">(", 2));
	_20ebec8cd_pushAndWriteMaskMapper((*(_self_))._field_oc, _37369_t1, _37385_t2);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _20ea282b9_casting(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d396232_CastingExprModel> _38831_m) {
	{
		
		if (_20ea345e4_isAny(&((*(_38831_m))._field_Kind))) {
			_case_begin_20c454621:;
			{
				if (_20d4e037b_IsNil((*(_38831_m))._field_ExprKind.ptr())) {
					_20ebea986_write((*(_self_))._field_oc, jule::Str("jule::Any()", 11));
					return;;
				};
				if ((_20d4e26be_TypeEnum((*(_38831_m))._field_ExprKind.ptr()) != nullptr)) {
					_20ea27ae3_possibleRefExpr(_self_, (*(_38831_m))._field_Expr);
					return;;
				};
				jule::I64 _39917_i = _20ebeb712_pushAnyType((*(_self_))._field_oc, (*(_38831_m))._field_ExprKind);;
				_20ebea986_write((*(_self_))._field_oc, jule::Str("jule::Any(", 10));
				{
					auto &_match_expr{ (*(_38831_m))._field_Expr };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_20c4562c1:;
						{
							jule::Ptr<_20d4e710d_Prim> _40321_prim = _20d4e1b85_Prim((*(_38831_m))._field_ExprKind.ptr());;
							if (((_40321_prim != nullptr) && _20b064a18_IsInt((*(_40321_prim))._field_Kind))) {
								_20ebea986_write((*(_self_))._field_oc, jule::Str("static_cast<", 12));
								_20ebea986_write((*(_self_))._field_oc, _20ec0b2c1_prim((*((*(_self_))._field_oc))._field_tc.ptr(), _40321_prim));
								_20ebea986_write((*(_self_))._field_oc, jule::Str(">(", 2));
								_20ea27ae3_possibleRefExpr(_self_, (*(_38831_m))._field_Expr);
								_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
								goto _match_end_20c4581a2;
							};
							goto _case_begin_20c458207;
						}
					}
					else {
						_case_begin_20c458207:;
						{
							_20ea27ae3_possibleRefExpr(_self_, (*(_38831_m))._field_Expr);
						}
					}
					_match_end_20c4581a2:;
				};
				_20ebea986_write((*(_self_))._field_oc, jule::Str(", &__jule_any_type", 18));
				_20ebea986_write((*(_self_))._field_oc, _20b055388_Itoa(_39917_i));
				_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		else if (_20ea345e4_isAny(&((*(_38831_m))._field_ExprKind))) {
			_case_begin_20c454698:;
			{
				_20ea27ae3_possibleRefExpr(_self_, (*(_38831_m))._field_Expr);
				_20ebea986_write((*(_self_))._field_oc, jule::Str(".", 1));
				if ((_20d4e1e1b_Sptr((*(_38831_m))._field_Kind.ptr()) != nullptr)) {
					_20ebea986_write((*(_self_))._field_oc, jule::Str("cast_ptr<", 9));
					_20ebea986_write((*(_self_))._field_oc, _20ec10b99_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_20d4e1e1b_Sptr((*(_38831_m))._field_Kind.ptr())))._field_Elem));
				} else {
					_20ebea986_write((*(_self_))._field_oc, jule::Str("cast<", 5));
					_20ebea986_write((*(_self_))._field_oc, _20ec10b99_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_38831_m))._field_Kind));
				};
				_20ebea986_write((*(_self_))._field_oc, jule::Str(">(", 2));
				if ((!(_23c5b2375_Production))) {
					_20ebea986_write((*(_self_))._field_oc, jule::Str("\"", 1));
					_20ebecb86_locInfo((*(_self_))._field_oc, &((*(_38831_m))._field_Token));
					_20ebea986_write((*(_self_))._field_oc, jule::Str("\", ", 3));
				};
				_20ebea986_write((*(_self_))._field_oc, jule::Str("&__jule_any_type", 16));
				_20ebea986_write((*(_self_))._field_oc, _20b055388_Itoa(static_cast<jule::I64>(_20ebeb712_pushAnyType((*(_self_))._field_oc, (*(_38831_m))._field_Kind))));
				_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		else if ((_20d4e21a2_Ptr((*(_38831_m))._field_ExprKind.ptr()) != nullptr) || (_20d4e21a2_Ptr((*(_38831_m))._field_Kind.ptr()) != nullptr)) {
			_case_begin_20c454720:;
			{
				_20ebea986_write((*(_self_))._field_oc, jule::Str("((", 2));
				_20ebea986_write((*(_self_))._field_oc, _20ec10b99_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_38831_m))._field_Kind));
				_20ebea986_write((*(_self_))._field_oc, jule::Str(")(", 2));
				_20ea27ae3_possibleRefExpr(_self_, (*(_38831_m))._field_Expr);
				_20ebea986_write((*(_self_))._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if ((_20d4e348e_Trait((*(_38831_m))._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_20c454797:;
			{
				if ((_20d4e348e_Trait((*(_38831_m))._field_Kind.ptr()) != nullptr)) {
					_20ea28011_castTraitFromTrait(_self_, &(_38831_m), _20d4e348e_Trait((*(_38831_m))._field_Kind.ptr()), _20d4e348e_Trait((*(_38831_m))._field_ExprKind.ptr()));
					return;;
				};
				_20ea27ae3_possibleRefExpr(_self_, (*(_38831_m))._field_Expr);
				_20ebea986_write((*(_self_))._field_oc, jule::Str(".", 1));
				if ((_20d4e1e1b_Sptr((*(_38831_m))._field_Kind.ptr()) != nullptr)) {
					_20ebea986_write((*(_self_))._field_oc, jule::Str("cast_ptr<", 9));
					_20ebea986_write((*(_self_))._field_oc, _20ec10b99_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_20d4e1e1b_Sptr((*(_38831_m))._field_Kind.ptr())))._field_Elem));
				} else {
					_20ebea986_write((*(_self_))._field_oc, jule::Str("cast<", 5));
					_20ebea986_write((*(_self_))._field_oc, _20ec10b99_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_38831_m))._field_Kind));
				};
				_20ebea986_write((*(_self_))._field_oc, jule::Str(">(", 2));
				if ((!(_23c5b2375_Production))) {
					_20ebea986_write((*(_self_))._field_oc, jule::Str("\"", 1));
					_20ebecb86_locInfo((*(_self_))._field_oc, &((*(_38831_m))._field_Token));
					_20ebea986_write((*(_self_))._field_oc, jule::Str("\", ", 3));
				};
				_20ebea986_write((*(_self_))._field_oc, _20b055388_Itoa(static_cast<jule::I64>(_20ebec56a_findTypeOffset((*(_self_))._field_oc.ptr(), _20d4e348e_Trait((*(_38831_m))._field_ExprKind.ptr()), (*(_38831_m))._field_Kind))));
				_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		else if ((_20d4e348e_Trait((*(_38831_m))._field_Kind.ptr()) != nullptr)) {
			_case_begin_20c45481e:;
			{
				_20ebea986_write((*(_self_))._field_oc, _20ec10b99_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_38831_m))._field_Kind));
				_20ebea986_write((*(_self_))._field_oc, jule::Str("(", 1));
				_20ea27ae3_possibleRefExpr(_self_, (*(_38831_m))._field_Expr);
				_20ebea986_write((*(_self_))._field_oc, jule::Str(", ", 2));
				_20ebea986_write((*(_self_))._field_oc, _20b055388_Itoa(static_cast<jule::I64>(_20ebec56a_findTypeOffset((*(_self_))._field_oc.ptr(), _20d4e348e_Trait((*(_38831_m))._field_Kind.ptr()), (*(_38831_m))._field_ExprKind))));
				_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		_match_end_20c4544cd:;
	};
	jule::Ptr<_20d4e710d_Prim> _48013_prim = _20d4e1b85_Prim((*(_38831_m))._field_Kind.ptr());;
	jule::Ptr<_20d4e710d_Prim> _48113_eprim = _20d4e1b85_Prim((*(_38831_m))._field_ExprKind.ptr());;
	if ((((_48113_eprim != nullptr) && (_48013_prim != nullptr)) && _20d4ea595_IsStr(_48013_prim.ptr()))) {
		if (_20d4e8a05_IsU8(_48113_eprim.ptr())) {
			_20ebea986_write((*(_self_))._field_oc, jule::Str("jule::Str::from_byte(", 21));
		} else {
			_20ebea986_write((*(_self_))._field_oc, jule::Str("jule::Str::from_rune(", 21));
		};
		_20ea27ae3_possibleRefExpr(_self_, (*(_38831_m))._field_Expr);
		_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
		return;;
	};
	_20ebea986_write((*(_self_))._field_oc, jule::Str("static_cast<", 12));
	_20ebea986_write((*(_self_))._field_oc, _20ec10b99_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_38831_m))._field_Kind));
	_20ebea986_write((*(_self_))._field_oc, jule::Str(">(", 2));
	_20ea27ae3_possibleRefExpr(_self_, (*(_38831_m))._field_Expr);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _20ea28572_models(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Slice<jule::Any> _49930_args) {
	if ((_49930_args.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &(_49930_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c48062a:;
		if (it != expr_end) {
			jule::I64 _50314_i = it - expr->begin();
			jule::Any _50321_a = *it;
			{
				_20ea27ae3_possibleRefExpr(_self_, _50321_a);
				if (((_49930_args.len() - _50314_i) > 1LL)) {
					_20ebea986_write((*(_self_))._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_20c48062a:;
			++it;
			_50314_i++;
			goto _iter_begin_20c48062a;
		}
		_iter_end_20c48062a:;
	};
}



inline void _20ea2882a_args(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d396ad4_FnCallExprModel>* _51129_m) {
	jule::I64 _51217_j = 0LL;;
	if (((((*((*((*(_51129_m))))._field_Func))._field_Owner != nullptr) && (!((*((*((*((*(_51129_m))))._field_Func))._field_Decl))._field_Statically))) || (((*((*((*(_51129_m))))._field_Func))._field_Params.len() > 0LL) && _20d3a178c_IsSelf((*((*((*((*(_51129_m))))._field_Func))._field_Params[0LL]))._field_Decl.ptr())))) {
		(_51217_j)++;
	};
	{
		auto expr = &((*((*(_51129_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c4835a6:;
		if (it != expr_end) {
			jule::I64 _51713_i = it - expr->begin();
			jule::Any _51716_arg = *it;
			{
				jule::Ptr<_20d3a4a9d_ParamIns> _51817_p = (*((*((*(_51129_m))))._field_Func))._field_Params[_51217_j];;
				if ((((*(_51817_p))._field_Decl != nullptr) && (*((*(_51817_p))._field_Decl))._field_Reference)) {
					{
						auto &_match_expr{ _51716_arg };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_20c48639a:;
							{
								jule::Ptr<_20d458aca_Var> _52225_v = _51716_arg.cast_ptr<_20d458aca_Var>(&__jule_any_type8);;
								if ((*(_52225_v))._field_Reference) {
									_20ea3216e_model(_self_, _51716_arg);
									goto _julec_label_20c489854;
								};
							}
						}
						_match_end_20c486345:;
					};
					_20ebea986_write((*(_self_))._field_oc, jule::Str("&(", 2));
					_20ea3216e_model(_self_, _51716_arg);
					_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
					goto _julec_label_20c489854;
				};
				_20ea27ae3_possibleRefExpr(_self_, _51716_arg);
				_julec_label_20c489854:;
				if ((((*((*(_51129_m))))._field_Args.len() - _51713_i) > 1LL)) {
					_20ebea986_write((*(_self_))._field_oc, jule::Str(", ", 2));
				};
				(_51217_j)++;
			}
			_iter_next_20c4835a6:;
			++it;
			_51713_i++;
			goto _iter_begin_20c4835a6;
		}
		_iter_end_20c4835a6:;
	};
}



inline void _20ea28ad3_modelForCall(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Any _54236_expr) {
	{
		auto &_match_expr{ _54236_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_212dc8149:;
			{
				_20ea2bd17_funcIns(_self_, _54236_expr.cast_ptr<_20d3a5a49_FnIns>(&__jule_any_type7));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_212dc81b0:;
			{
				jule::Ptr<_20d399675_StructSubIdentExprModel> _54821_ssie = _54236_expr.cast_ptr<_20d399675_StructSubIdentExprModel>(&__jule_any_type71);;
				if (((*(_54821_ssie))._field_Method != nullptr)) {
					_20ea2bd17_funcIns(_self_, (*(_54821_ssie))._field_Method);
					return;;
				};
			}
		}
		_match_end_212dc80e4:;
	};
	_20ea27ae3_possibleRefExpr(_self_, _54236_expr);
}



inline void _20ea28d8b_pushCallInf(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d396ad4_FnCallExprModel>* _55732_m) {
	if ((_23c5b2375_Production || (!((*((*((*(_55732_m))))._field_Func))._field_Anon)))) {
		_20ebea986_write((*(_self_))._field_oc, jule::Str("(", 1));
		return;;
	};
	if ((*((*((*(_55732_m))))._field_Func))._field_Anon) {
		{
			auto &_match_expr{ (*((*(_55732_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_212dcbaba:;
				{
					if ((*((*((*((*((*((*(_55732_m))))._field_Expr.cast_ptr<_20d399675_StructSubIdentExprModel>(&__jule_any_type71)))._field_Field))._field_Decl))._field_Owner))._field_Binded) {
						_20ebea986_write((*(_self_))._field_oc, jule::Str("(", 1));
						return;;
					};
				}
			}
			_match_end_212dcba65:;
		};
		_20ebea986_write((*(_self_))._field_oc, jule::Str(".call", 5));
	};
	_20ebea986_write((*(_self_))._field_oc, jule::Str("(\"", 2));
	_20ebecb86_locInfo((*(_self_))._field_oc, &((*((*(_55732_m))))._field_Token));
	_20ebea986_write((*(_self_))._field_oc, jule::Str("\"", 1));
	if (((*((*(_55732_m))))._field_Args.len() != 0LL)) {
		_20ebea986_write((*(_self_))._field_oc, jule::Str(", ", 2));
	};
}



inline jule::Bool _20ea291cc_isWrapped(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d396ad4_FnCallExprModel>* _58034_m) {
	if ((((!(_20d3a6ece_IsBuiltin((*((*(_58034_m))))._field_Func.ptr()))) && ((*((*((*((*(_58034_m))))._field_Func))._field_Decl))._field_Params.len() > 0LL)) && _20d3a178c_IsSelf((*((*((*((*(_58034_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_58034_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_212dd185b:;
				{
					jule::Ptr<_20d399675_StructSubIdentExprModel> _58425_ssie = (*((*(_58034_m))))._field_Expr.cast_ptr<_20d399675_StructSubIdentExprModel>(&__jule_any_type71);;
					{
						
						if (_20d3a1a23_IsRef((*((*((*((*(_58034_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()) || (_20d4e1e1b_Sptr((*((*(_58425_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_212dd3473:;
							{
								goto _match_end_212dd2719;
							}
						}
						else {
							_case_begin_212dd2780:;
							{
								if ((_20d4e3208_Struct((*((*(_58425_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									if ((!((*((*(_58425_ssie))._field_Expr))._field_Lvalue))) {
										_20ebea986_write((*(_self_))._field_oc, jule::Str("({ auto _wrap_copy = ", 21));
										_20ea3216e_model(_self_, (*((*(_58425_ssie))._field_Expr))._field_Model);
										_20ebea986_write((*(_self_))._field_oc, jule::Str("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_212dd2719:;
					};
				}
			}
			_match_end_212dd1806:;
		};
	};
	return false;;
}



inline void _20ea29485_pureFuncCall(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d396ad4_FnCallExprModel>* _60437_m) {
	jule::Bool _60513_wrapped = _20ea291cc_isWrapped(_self_, _60437_m);;
	_20ea28ad3_modelForCall(_self_, (*((*(_60437_m))))._field_Expr);
	if ((!(_20d3a6ece_IsBuiltin((*((*(_60437_m))))._field_Func.ptr())))) {
		if (((*((*((*((*(_60437_m))))._field_Func))._field_Decl))._field_Binded && ((*((*((*(_60437_m))))._field_Func))._field_Generics.len() > 0LL))) {
			if ((!(_20ec17a91_hasDirective(&((*((*((*((*(_60437_m))))._field_Func))._field_Decl))._field_Directives), jule::Str("cdef", 4))))) {
				_20ebea986_write((*(_self_))._field_oc, jule::Str("<", 1));
				{
					auto expr = &((*((*((*(_60437_m))))._field_Func))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_212dd9963:;
					if (it != expr_end) {
						jule::I64 _61126_i = it - expr->begin();
						jule::Ptr<_20d4dc8a6_InsGeneric> _61133_g = *it;
						{
							_20ebea986_write((*(_self_))._field_oc, _20ec10b99_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_61133_g))._field_Kind));
							if ((((*((*((*(_60437_m))))._field_Func))._field_Generics.len() - _61126_i) > 1LL)) {
								_20ebea986_write((*(_self_))._field_oc, jule::Str(", ", 2));
							};
						}
						_iter_next_212dd9963:;
						++it;
						_61126_i++;
						goto _iter_begin_212dd9963;
					}
					_iter_end_212dd9963:;
				};
				_20ebea986_write((*(_self_))._field_oc, jule::Str(">", 1));
			};
		};
	};
	_20ea28d8b_pushCallInf(_self_, _60437_m);
	jule::Bool _62217_locinfo = false;;
	if ((((!(_20d3a6ece_IsBuiltin((*((*(_60437_m))))._field_Func.ptr()))) && ((*((*((*((*(_60437_m))))._field_Func))._field_Decl))._field_Params.len() > 0LL)) && _20d3a178c_IsSelf((*((*((*((*(_60437_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_60437_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_212de02e8:;
				{
					jule::Ptr<_20d399675_StructSubIdentExprModel> _62625_ssie = (*((*(_60437_m))))._field_Expr.cast_ptr<_20d399675_StructSubIdentExprModel>(&__jule_any_type71);;
					{
						
						if (_20d3a1a23_IsRef((*((*((*((*(_60437_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr())) {
							_case_begin_212de4c8c:;
							{
								_20ea27ae3_possibleRefExpr(_self_, (*((*((*((*(_62625_ssie))._field_Expr))._field_Model.cast_ptr<_20d394ecd_UnaryExprModel>(&__jule_any_type72)))._field_Expr))._field_Model);
							}
						}
						else if ((_20d4e1e1b_Sptr((*((*(_62625_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_212de130a:;
							{
								_20ea27ae3_possibleRefExpr(_self_, (*((*((*((*(_62625_ssie))._field_Expr))._field_Model.cast_ptr<_20d394ecd_UnaryExprModel>(&__jule_any_type72)))._field_Expr))._field_Model);
								_20ebea986_write((*(_self_))._field_oc, jule::Str(".ptr(", 5));
								if ((!(_23c5b2375_Production))) {
									_20ebea986_write((*(_self_))._field_oc, jule::Str("\"", 1));
									_20ebecb86_locInfo((*(_self_))._field_oc, &((*((*(_60437_m))))._field_Token));
									_20ebea986_write((*(_self_))._field_oc, jule::Str("\"", 1));
								};
								_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
							}
						}
						else {
							_case_begin_212de1294:;
							{
								if ((_20d4e3208_Struct((*((*(_62625_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ (*((*(_62625_ssie))._field_Expr))._field_Model };
										
										if (_match_expr.type == &__jule_any_type8) {
											_case_begin_212de1a69:;
											{
												jule::Ptr<_20d458aca_Var> _64533_v = (*((*(_62625_ssie))._field_Expr))._field_Model.cast_ptr<_20d458aca_Var>(&__jule_any_type8);;
												if ((*(_64533_v))._field_Reference) {
													goto _match_end_212de2086;
												};
												goto _case_begin_212de20db;
											}
										}
										else {
											_case_begin_212de20db:;
											{
												_20ebea986_write((*(_self_))._field_oc, jule::Str("&", 1));
											}
										}
										_match_end_212de2086:;
									};
								};
								if (_60513_wrapped) {
									_20ebea986_write((*(_self_))._field_oc, jule::Str("_wrap_copy", 10));
								} else if ((_20d4e21a2_Ptr((*((*(_62625_ssie))._field_Expr))._field_Kind.ptr()) == nullptr)) {
									_20ea3216e_model(_self_, (*((*(_62625_ssie))._field_Expr))._field_Model);
								} else {
									_20ea27ae3_possibleRefExpr(_self_, (*((*((*((*(_62625_ssie))._field_Expr))._field_Model.cast_ptr<_20d394ecd_UnaryExprModel>(&__jule_any_type72)))._field_Expr))._field_Model);
								};
							}
						}
						_match_end_212de122d:;
					};
					if (((*((*(_60437_m))))._field_Args.len() > 0LL)) {
						_20ebea986_write((*(_self_))._field_oc, jule::Str(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type70) {
				_case_begin_212de0370:;
				{
					_20ea27ae3_possibleRefExpr(_self_, (*((*((*(_60437_m))))._field_Expr.cast_ptr<_20d398cd4_TraitSubIdentExprModel>(&__jule_any_type70)))._field_Expr);
					if ((!(_23c5b2375_Production))) {
						_62217_locinfo=true;
					};
					if (((*((*(_60437_m))))._field_Args.len() > 0LL)) {
						_20ebea986_write((*(_self_))._field_oc, jule::Str(", ", 2));
					};
				}
			}
			_match_end_212de0282:;
		};
	};
	_20ea2882a_args(_self_, _60437_m);
	if (_62217_locinfo) {
		_20ebea986_write((*(_self_))._field_oc, jule::Str(", \"", 3));
		_20ebecb86_locInfo((*(_self_))._field_oc, &((*((*(_60437_m))))._field_Token));
		_20ebea986_write((*(_self_))._field_oc, jule::Str("\"", 1));
	};
	_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
	if (_60513_wrapped) {
		_20ebea986_write((*(_self_))._field_oc, jule::Str("; })", 4));
	};
}



inline void _20ea2973d_coFuncCall(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d396ad4_FnCallExprModel>* _69035_m) {
	_20ebea986_write((*(_self_))._field_oc, jule::Str("{\n", 2));
	_20ebeab84_addIndent((*(_self_))._field_oc);
	_2240a0ad5_StrBuilder _69317_head = static__2240a0e04_New(32LL);;
	_2240a989c_WriteStr(&_69317_head, jule::Str("std::thread([", 13));
	if (((*((*((*(_69035_m))))._field_Func))._field_Owner != nullptr)) {
		_2240a989c_WriteStr(&_69317_head, jule::Str("_self_", 6));
		if (((*((*(_69035_m))))._field_Args.len() > 0LL)) {
			_2240a989c_WriteStr(&_69317_head, jule::Str(", ", 2));
		};
	};
	{
		auto expr = &((*((*(_69035_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212e06001:;
		if (it != expr_end) {
			jule::I64 _70113_i = it - expr->begin();
			jule::Any _70116_arg = *it;
			{
				if ((_70113_i > 0LL)) {
					_2240a989c_WriteStr(&_69317_head, jule::Str(", ", 2));
				};
				{
					auto &_match_expr{ _70116_arg };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_212e07530:;
						{
							jule::Ptr<_20d458aca_Var> _70725_v = _70116_arg.cast_ptr<_20d458aca_Var>(&__jule_any_type8);;
							_2240a989c_WriteStr(&_69317_head, static__20ea3ba6e_var(_70725_v));
							goto _iter_next_212e06001;
						}
					}
					_match_end_212e06c8d:;
				};
				jule::Str _71117_name = (jule::Str("_co_arg_", 8) + _20b055388_Itoa(_70113_i));;
				_2240a989c_WriteStr(&_69317_head, _71117_name);
				_20ebeb080_indent((*(_self_))._field_oc);
				_20ebea986_write((*(_self_))._field_oc, _20ec10b99_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*((*((*((*(_69035_m))))._field_Func))._field_Params[_70113_i]))._field_Kind));
				_20ebea986_write((*(_self_))._field_oc, jule::Str(" ", 1));
				if ((*((*((*((*((*(_69035_m))))._field_Func))._field_Params[_70113_i]))._field_Decl))._field_Reference) {
					_20ebea986_write((*(_self_))._field_oc, jule::Str("&", 1));
				};
				_20ebea986_write((*(_self_))._field_oc, _71117_name);
				_20ebea986_write((*(_self_))._field_oc, jule::Str(" = ", 3));
				_20ea27ae3_possibleRefExpr(_self_, _70116_arg);
				_20ebea986_write((*(_self_))._field_oc, jule::Str(";\n", 2));
				jule::Any _72317_argS = jule::Any(_71117_name, &__jule_any_type4);;
				(*((*(_69035_m))))._field_Args[_70113_i]=(*(((jule::Any*)((&(_72317_argS))))));
			}
			_iter_next_212e06001:;
			++it;
			_70113_i++;
			goto _iter_begin_212e06001;
		}
		_iter_end_212e06001:;
	};
	_20ebeb080_indent((*(_self_))._field_oc);
	_2240a95e4_Write(&(*((*(_self_))._field_oc))._field_Obj, _2240aab45_Buf(&_69317_head));
	_20ebea986_write((*(_self_))._field_oc, jule::Str("](void) mutable -> void {\n", 26));
	_20ebeab84_addIndent((*(_self_))._field_oc);
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ea29485_pureFuncCall(_self_, _69035_m);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(";\n", 2));
	_20ebead82_doneIndent((*(_self_))._field_oc);
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("}).detach();\n", 13));
	_20ebead82_doneIndent((*(_self_))._field_oc);
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("}", 1));
}



inline void _20ea29aa1_writeUseExpr(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d3a5a49_FnIns>* _74137_f, jule::Ptr<_20d087165_Data> _74152_d) {
	if ((_20d4e39ab_Tup((*(_74152_d))._field_Kind.ptr()) == nullptr)) {
		_20ea27ae3_possibleRefExpr(_self_, (*(_74152_d))._field_Model);
		_20ebea986_write((*(_self_))._field_oc, jule::Str(";", 1));
		return;;
	};
	jule::Ptr<_20d39a302_TupleExprModel> _74717_tup = (*(_74152_d))._field_Model.cast_ptr<_20d39a302_TupleExprModel>(&__jule_any_type85);;
	_20ec15286_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Obj), _20d4e39ab_Tup((*((*(_74137_f))))._field_Result.ptr()));
	_20ebea986_write((*(_self_))._field_oc, jule::Str("{", 1));
	{
		auto expr = &((*(_74717_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212e14273:;
		if (it != expr_end) {
			jule::I64 _75013_i = it - expr->begin();
			jule::Ptr<_20d087165_Data> _75016_data = *it;
			{
				_20ebea986_write((*(_self_))._field_oc, jule::Str(".__jule_result_arg", 18));
				_20ebea986_write((*(_self_))._field_oc, _20b055388_Itoa(_75013_i));
				_20ebea986_write((*(_self_))._field_oc, jule::Str("=", 1));
				_20ea27ae3_possibleRefExpr(_self_, (*(_75016_data))._field_Model);
				if ((((*(_74717_tup))._field_Datas.len() - _75013_i) > 1LL)) {
					_20ebea986_write((*(_self_))._field_oc, jule::Str(", ", 2));
				};
			}
			_iter_next_212e14273:;
			++it;
			_75013_i++;
			goto _iter_begin_212e14273;
		}
		_iter_end_212e14273:;
	};
	_20ebea986_write((*(_self_))._field_oc, jule::Str("};", 2));
}



inline void _20ea29d59_funcCall(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d396ad4_FnCallExprModel> _76232_m) {
	if ((*(_76232_m))._field_IsCo) {
		_20ea2973d_coFuncCall(_self_, &(_76232_m));
		return;;
	};
	if (((_20d3a6ece_IsBuiltin((*(_76232_m))._field_Func.ptr()) || (!((*((*((*(_76232_m))._field_Func))._field_Decl))._field_Exceptional))) || (((*(_76232_m))._field_Except != nullptr) && ((*((*(_76232_m))._field_Except))._field_Stmts.len() == 0LL)))) {
		_20ea29485_pureFuncCall(_self_, &(_76232_m));
		return;;
	};
	_20ebea986_write((*(_self_))._field_oc, jule::Str("({\n", 3));
	_20ebeab84_addIndent((*(_self_))._field_oc);
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("auto except = ", 14));
	_20ea29485_pureFuncCall(_self_, &(_76232_m));
	_20ebea986_write((*(_self_))._field_oc, jule::Str(";\n", 2));
	_20ebeb080_indent((*(_self_))._field_oc);
	if (((*(_76232_m))._field_Except != nullptr)) {
		if ((((*((*(_76232_m))._field_Func))._field_Result == nullptr) || (!((*(_76232_m))._field_Assigned)))) {
			_20ebea986_write((*(_self_))._field_oc, jule::Str("if (!except.ok()) ", 18));
			_20ea2156a_scope((*((*(_self_))._field_oc))._field_sc, (*(_76232_m))._field_Except);
			_20ebea986_write((*(_self_))._field_oc, jule::Str("\n", 1));
		} else {
			jule::Bool _78821_forwarded = _20ea34061_isForwarded(&((*(_76232_m))._field_Except));;
			_20ebea986_write((*(_self_))._field_oc, jule::Str("(except.ok()) ? (except.result) : (", 35));
			if (_78821_forwarded) {
				_20ebea986_write((*(_self_))._field_oc, jule::Str("{", 1));
			};
			jule::Any _79325_stmt = (*((*(_76232_m))._field_Except))._field_Stmts[((*((*(_76232_m))._field_Except))._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _79325_stmt };
				
				if (_match_expr.type == &__jule_any_type24) {
					_case_begin_212e2542c:;
					{
						(*((*(_76232_m))._field_Except))._field_Stmts=(*((*(_76232_m))._field_Except))._field_Stmts.slice(0LL, ((*((*(_76232_m))._field_Except))._field_Stmts.len() - 1LL));
						_20ebea986_write((*(_self_))._field_oc, jule::Str("{\n", 2));
						_20ebeab84_addIndent((*(_self_))._field_oc);
						_20ea212b2_scopeStmts((*((*(_self_))._field_oc))._field_sc, &((*(_76232_m))._field_Except));
						_20ebea986_write((*(_self_))._field_oc, jule::Str("\n", 1));
						_20ebeb080_indent((*(_self_))._field_oc);
						_20ea29aa1_writeUseExpr(_self_, &((*(_76232_m))._field_Func), _79325_stmt.cast_ptr<_20d087165_Data>(&__jule_any_type24));
						_20ebea986_write((*(_self_))._field_oc, jule::Str("\n", 1));
						_20ebead82_doneIndent((*(_self_))._field_oc);
						_20ebeb080_indent((*(_self_))._field_oc);
						_20ebea986_write((*(_self_))._field_oc, jule::Str("}", 1));
					}
				}
				else {
					_case_begin_212e261ca:;
					{
						_20ea2156a_scope((*((*(_self_))._field_oc))._field_sc, (*(_76232_m))._field_Except);
					}
				}
				_match_end_212e26175:;
			};
			if (_78821_forwarded) {
				_20ebea986_write((*(_self_))._field_oc, jule::Str(" ", 1));
				_20ea32427_initExpr(_self_, (*((*(_76232_m))._field_Func))._field_Result);
				_20ebea986_write((*(_self_))._field_oc, jule::Str(";}", 2));
			};
			_20ebea986_write((*(_self_))._field_oc, jule::Str(");\n", 3));
		};
		_20ebead82_doneIndent((*(_self_))._field_oc);
	} else {
		_20ebea986_write((*(_self_))._field_oc, jule::Str("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_20ebecb86_locInfo((*(_self_))._field_oc, &((*(_76232_m))._field_Token));
		_20ebea986_write((*(_self_))._field_oc, jule::Str("\"));\n", 5));
		if ((!(_20d3a30b8_IsVoid((*((*(_76232_m))._field_Func))._field_Decl.ptr())))) {
			_20ebeb080_indent((*(_self_))._field_oc);
			_20ebea986_write((*(_self_))._field_oc, jule::Str("(except.result);\n", 17));
		};
		_20ebead82_doneIndent((*(_self_))._field_oc);
	};
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("})", 2));
}



inline void _20ea2a112_slice(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d396ead_SliceExprModel> _83329_m) {
	if (((*(_83329_m))._field_Elems.len() == 0LL)) {
		_20ebea986_write((*(_self_))._field_oc, _20ec0caa8_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_83329_m))._field_ElemKind));
		_20ebea986_write((*(_self_))._field_oc, jule::Str("()", 2));
		return;;
	};
	_20ebea986_write((*(_self_))._field_oc, _20ec0caa8_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_83329_m))._field_ElemKind));
	_20ebea986_write((*(_self_))._field_oc, jule::Str("::make({", 8));
	_20ea28572_models(_self_, (*(_83329_m))._field_Elems);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("})", 2));
}



inline void _20ea2a3ba_indexing(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d397464_IndexingExprModel> _84532_m) {
	_20ea27ae3_possibleRefExpr(_self_, (*((*(_84532_m))._field_Expr))._field_Model);
	{
		
		if (_23c5b2375_Production || (_20d4e21a2_Ptr((*((*(_84532_m))._field_Expr))._field_Kind.ptr()) != nullptr) || (_20d4e3725_Map((*((*(_84532_m))._field_Expr))._field_Kind.ptr()) != nullptr) || _20ea3432a_isExprComesFromBind(&((*(_84532_m))._field_Expr))) {
			_case_begin_212e37807:;
			{
				_20ebea986_write((*(_self_))._field_oc, jule::Str("[", 1));
				_20ea27ae3_possibleRefExpr(_self_, (*((*(_84532_m))._field_Index))._field_Model);
				_20ebea986_write((*(_self_))._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_212e38275:;
			{
				_20ebea986_write((*(_self_))._field_oc, jule::Str(".at(\"", 5));
				_20ebecb86_locInfo((*(_self_))._field_oc, &((*(_84532_m))._field_Token));
				_20ebea986_write((*(_self_))._field_oc, jule::Str("\", ", 3));
				_20ea27ae3_possibleRefExpr(_self_, (*((*(_84532_m))._field_Index))._field_Model);
				_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_212e3820e:;
	};
}



inline void _20ea2a673_unsafeIndexing(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d57629c_UnsafeIndexingExprModel> _86538_m) {
	_20ea27ae3_possibleRefExpr(_self_, (*((*((*(_86538_m))._field_Node))._field_Expr))._field_Model);
	{
		
		if (_23c5b2375_Production || (_20d4e21a2_Ptr((*((*((*(_86538_m))._field_Node))._field_Expr))._field_Kind.ptr()) != nullptr) || (_20d4e3725_Map((*((*((*(_86538_m))._field_Node))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_212e3d731:;
			{
				_20ebea986_write((*(_self_))._field_oc, jule::Str("[", 1));
				_20ea27ae3_possibleRefExpr(_self_, (*((*((*(_86538_m))._field_Node))._field_Index))._field_Model);
				_20ebea986_write((*(_self_))._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_212e3e347:;
			{
				_20ebea986_write((*(_self_))._field_oc, jule::Str(".__at(", 6));
				_20ea27ae3_possibleRefExpr(_self_, (*((*((*(_86538_m))._field_Node))._field_Index))._field_Model);
				_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_212e3e2d1:;
	};
}



inline void _20ea2a92b_anonFunc(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d39783d_AnonFnExprModel> _88232_m) {
	_20ebea986_write((*(_self_))._field_oc, _20ec10858_func((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_88232_m))._field_Func));
	_20ebea986_write((*(_self_))._field_oc, jule::Str("([=]", 4));
	_20ec03296_paramsIns((*(_self_))._field_oc, &((*((*(_88232_m))._field_Func))._field_Params));
	_20ebea986_write((*(_self_))._field_oc, jule::Str(" mutable -> ", 12));
	_20ec101c6_funcInsResult((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Obj), &((*(_88232_m))._field_Func));
	_20ebea986_write((*(_self_))._field_oc, jule::Str(" ", 1));
	_20ea21823_funcScope((*((*(_self_))._field_oc))._field_sc, (*(_88232_m))._field_Func);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _20ea2abd4_mapExpr(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d3981bd_MapExprModel> _89331_m) {
	_20ebea986_write((*(_self_))._field_oc, jule::Str("jule::Map<", 10));
	_20ebea986_write((*(_self_))._field_oc, _20ec10b99_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_89331_m))._field_KeyKind));
	_20ebea986_write((*(_self_))._field_oc, jule::Str(", ", 2));
	_20ebea986_write((*(_self_))._field_oc, _20ec10b99_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_89331_m))._field_ValKind));
	_20ebea986_write((*(_self_))._field_oc, jule::Str(">({", 3));
	if (((*(_89331_m))._field_Entries.len() > 0LL)) {
		{
			auto expr = &((*(_89331_m))._field_Entries);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_212e4c531:;
			if (it != expr_end) {
				jule::I64 _90018_i = it - expr->begin();
				jule::Ptr<_20d397c17_KeyValPairExprModel> _90025_pair = *it;
				{
					_20ebea986_write((*(_self_))._field_oc, jule::Str("{", 1));
					_20ea27ae3_possibleRefExpr(_self_, (*(_90025_pair))._field_Key);
					_20ebea986_write((*(_self_))._field_oc, jule::Str(",", 1));
					_20ea27ae3_possibleRefExpr(_self_, (*(_90025_pair))._field_Val);
					_20ebea986_write((*(_self_))._field_oc, jule::Str("}", 1));
					if ((((*(_89331_m))._field_Entries.len() - _90018_i) > 1LL)) {
						_20ebea986_write((*(_self_))._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_212e4c531:;
				++it;
				_90018_i++;
				goto _iter_begin_212e4c531;
			}
			_iter_end_212e4c531:;
		};
	};
	_20ebea986_write((*(_self_))._field_oc, jule::Str("})", 2));
}



inline void _20ea2ae8c_slicing(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d398751_SlicingExprModel> _91431_m) {
	_20ea27ae3_possibleRefExpr(_self_, (*(_91431_m))._field_Expr);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(".slice(", 7));
	if ((!(_23c5b2375_Production))) {
		_20ebea986_write((*(_self_))._field_oc, jule::Str("\"", 1));
		_20ebecb86_locInfo((*(_self_))._field_oc, &((*(_91431_m))._field_Token));
		_20ebea986_write((*(_self_))._field_oc, jule::Str("\", ", 3));
	};
	_20ea27ae3_possibleRefExpr(_self_, (*(_91431_m))._field_Left);
	if (((*(_91431_m))._field_Right != nullptr)) {
		_20ebea986_write((*(_self_))._field_oc, jule::Str(", ", 2));
		_20ea27ae3_possibleRefExpr(_self_, (*(_91431_m))._field_Right);
	};
	_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _20ea2b245_traitSub(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d398cd4_TraitSubIdentExprModel> _93032_m) {
	_20ebea986_write((*(_self_))._field_oc, static__20ea3ab8e_traitDecl((*(_93032_m))._field_Trt));
	_20ebea986_write((*(_self_))._field_oc, jule::Str("_mptr_data", 10));
	_20ebea986_write((*(_self_))._field_oc, jule::Str("[(", 2));
	_20ea27ae3_possibleRefExpr(_self_, (*(_93032_m))._field_Expr);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(").type_offset].", 15));
	_20ebea986_write((*(_self_))._field_oc, static__20ea3a60b_func(&((*(_93032_m))._field_Method)));
}



inline void _20ea2b4ed_structureSub(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d399675_StructSubIdentExprModel> _93936_m) {
	_20ea27ae3_possibleRefExpr(_self_, (*((*(_93936_m))._field_Expr))._field_Model);
	if (((*(_93936_m))._field_Field == nullptr)) {
		return;;
	};
	_20ebea986_write((*(_self_))._field_oc, jule::Str(".", 1));
	_20ebea986_write((*(_self_))._field_oc, static__20ea3b7a5_field(&((*((*(_93936_m))._field_Field))._field_Decl)));
}



inline void _20ea2b7a6_array(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d39a005_ArrayExprModel> _94829_m) {
	_20ebea986_write((*(_self_))._field_oc, _20ec0e390_array((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_94829_m))._field_Kind));
	if (((*(_94829_m))._field_Elems.len() == 0LL)) {
		_20ebea986_write((*(_self_))._field_oc, jule::Str("()", 2));
		return;;
	};
	if ((((*(_94829_m))._field_Elems.len() == 2LL) && ((*(_94829_m))._field_Elems[1LL] == nullptr))) {
		_20ebea986_write((*(_self_))._field_oc, jule::Str("(", 1));
		_20ea27ae3_possibleRefExpr(_self_, (*(_94829_m))._field_Elems[0LL]);
		_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
		return;;
	};
	_20ebea986_write((*(_self_))._field_oc, jule::Str("({", 2));
	_20ea28572_models(_self_, (*(_94829_m))._field_Elems);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("})", 2));
	return;;
}



inline void _20ea2ba5e_funcInsCommon(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d3a5a49_FnIns> _97137_m) {
	_20ebea986_write((*(_self_))._field_oc, _20ec10858_func((*((*(_self_))._field_oc))._field_tc.ptr(), _97137_m));
	_20ebea986_write((*(_self_))._field_oc, jule::Str("(", 1));
	_20ea2bd17_funcIns(_self_, _97137_m);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _20ea2bd17_funcIns(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d3a5a49_FnIns> _97831_m) {
	if ((((*(_97831_m))._field_Decl != nullptr) && (*((*(_97831_m))._field_Decl))._field_Binded)) {
		jule::Ptr<_20d36adb6_Directive> _98017_d = _20ec176c8_findDirective(&((*((*(_97831_m))._field_Decl))._field_Directives), jule::Str("namespace", 9));;
		if ((_98017_d != nullptr)) {
			_20ebea986_write((*(_self_))._field_oc, _20ec07ad6_concatAllParts((*(_98017_d))._field_Args));
			_20ebea986_write((*(_self_))._field_oc, jule::Str("::", 2));
		};
	};
	_20ebea986_write((*(_self_))._field_oc, static__20ea3a8c5_funcIns(&(_97831_m)));
}



inline void _20ea2c0c0_tuple(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d39a302_TupleExprModel> _98929_m) {
	{
		auto expr = &((*(_98929_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212e670a6:;
		if (it != expr_end) {
			jule::I64 _99014_i = it - expr->begin();
			jule::Ptr<_20d087165_Data> _99021_d = *it;
			{
				_20ea27ae3_possibleRefExpr(_self_, (*(_99021_d))._field_Model);
				_20ebea986_write((*(_self_))._field_oc, jule::Str(";", 1));
				if ((((*(_98929_m))._field_Datas.len() - _99014_i) > 1LL)) {
					_20ebea986_write((*(_self_))._field_oc, jule::Str("\n", 1));
					_20ebeb080_indent((*(_self_))._field_oc);
				};
			}
			_iter_next_212e670a6:;
			++it;
			_99014_i++;
			goto _iter_begin_212e670a6;
		}
		_iter_end_212e670a6:;
	};
}



inline void _20ea2c378_newCall(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d39b27b_BuiltinNewCallExprModel> _100031_m) {
	_20ebea986_write((*(_self_))._field_oc, jule::Str("jule::new_ptr<", 14));
	_20ebea986_write((*(_self_))._field_oc, _20ec10b99_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_100031_m))._field_Kind));
	_20ebea986_write((*(_self_))._field_oc, jule::Str(">(", 2));
	if (((*(_100031_m))._field_Init != nullptr)) {
		_20ea27ae3_possibleRefExpr(_self_, (*(_100031_m))._field_Init);
	};
	_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _20ea2c631_outCall(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d39a6cb_BuiltinOutCallExprModel> _101031_m) {
	if (((*(_101031_m))._field_Debug && _23c5b2375_Production)) {
		return;;
	};
	_20ebea986_write((*(_self_))._field_oc, jule::Str("jule::out(", 10));
	_20ea27ae3_possibleRefExpr(_self_, (*(_101031_m))._field_Expr);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _20ea2c8d9_outlnCall(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d39aaa5_BuiltinOutlnCallExprModel> _101933_m) {
	if (((*(_101933_m))._field_Debug && _23c5b2375_Production)) {
		return;;
	};
	_20ebea986_write((*(_self_))._field_oc, jule::Str("jule::outln(", 12));
	_20ea27ae3_possibleRefExpr(_self_, (*(_101933_m))._field_Expr);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _20ea2cb92_panicCall(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d39b655_BuiltinPanicCallExprModel> _102833_m) {
	_20ebea986_write((*(_self_))._field_oc, jule::Str("jule::panic(", 12));
	_20ea27ae3_possibleRefExpr(_self_, (*(_102833_m))._field_Expr);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(" + jule::Str(\"\\nlocation: ", 26));
	_20ebecb86_locInfo((*(_self_))._field_oc, &((*(_102833_m))._field_Token));
	_20ebea986_write((*(_self_))._field_oc, jule::Str("\"));", 4));
}



inline void _20ea2ce4a_assertCall(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d39bb0b_BuiltinAssertCallExprModel> _103634_m) {
	if (_23c5b2375_Production) {
		return;;
	};
	_20ebea986_write((*(_self_))._field_oc, jule::Str("if (!(", 6));
	_20ea27ae3_possibleRefExpr(_self_, (*(_103634_m))._field_Expr);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(")) jule::panic(jule::Str(", 25));
	_20ea33219_cstrLit(&((*((*(_self_))._field_oc))._field_Obj), (*(_103634_m))._field_Log);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(") + jule::Str(\"\\nlocation: ", 27));
	_20ebecb86_locInfo((*(_self_))._field_oc, &((*(_103634_m))._field_Token));
	_20ebea986_write((*(_self_))._field_oc, jule::Str("\"));", 4));
}



inline void _20ea2d203_errorCall(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d39d9a9_BuiltinErrorCallExprModel> _104933_m) {
	_20ebea986_write((*(_self_))._field_oc, jule::Str("return ", 7));
	if (_20d3a30b8_IsVoid((*((*(_104933_m))._field_Func))._field_Decl.ptr())) {
		{
			auto &_match_expr{ (*((*(_104933_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_212e78936:;
				{
					jule::Ptr<_20d458aca_Var> _105421_v = (*((*(_104933_m))._field_Err))._field_Model.cast_ptr<_20d458aca_Var>(&__jule_any_type8);;
					if ((*(_105421_v))._field_Ident.equal("error", 5)) {
						_20ebea986_write((*(_self_))._field_oc, jule::Str("jule::VoidExceptional(except.error)", 35));
						return;;
					};
				}
			}
			_match_end_212e788d1:;
		};
		_20ebea986_write((*(_self_))._field_oc, jule::Str("jule::VoidExceptional(jule::Any(", 32));
	} else {
		_20ebea986_write((*(_self_))._field_oc, jule::Str("jule::Exceptional<", 18));
		_20ec1595c_codeMut1((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Obj), &((*((*(_104933_m))._field_Func))._field_Result));
		{
			auto &_match_expr{ (*((*(_104933_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_212e7cdd0:;
				{
					jule::Ptr<_20d458aca_Var> _106621_v = (*((*(_104933_m))._field_Err))._field_Model.cast_ptr<_20d458aca_Var>(&__jule_any_type8);;
					if ((*(_106621_v))._field_Ident.equal("error", 5)) {
						_20ebea986_write((*(_self_))._field_oc, jule::Str(">(except.error)", 15));
						return;;
					};
				}
			}
			_match_end_212e7cd7a:;
		};
		_20ebea986_write((*(_self_))._field_oc, jule::Str(">(jule::Any(", 12));
	};
	_20ea27ae3_possibleRefExpr(_self_, (*((*(_104933_m))._field_Err))._field_Model);
	jule::I64 _107513_i = _20ebeb712_pushAnyType((*(_self_))._field_oc, (*((*(_104933_m))._field_Err))._field_Kind);;
	_20ebea986_write((*(_self_))._field_oc, jule::Str(", &__jule_any_type", 18));
	_20ebea986_write((*(_self_))._field_oc, _20b055388_Itoa(_107513_i));
	_20ebea986_write((*(_self_))._field_oc, jule::Str("))", 2));
}



inline void _20ea2d4ab_copyCall(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d39d338_BuiltinCopyCallExprModel> _108132_m) {
	_20ebea986_write((*(_self_))._field_oc, jule::Str("jule::copy((", 12));
	_20ea27ae3_possibleRefExpr(_self_, (*((*(_108132_m))._field_Dest))._field_Model);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
	if ((_20d4e1b85_Prim((*((*(_108132_m))._field_Dest))._field_Kind.ptr()) != nullptr)) {
		_20ebea986_write((*(_self_))._field_oc, jule::Str(".fake_slice()", 13));
	};
	_20ebea986_write((*(_self_))._field_oc, jule::Str(", (", 3));
	_20ea27ae3_possibleRefExpr(_self_, (*((*(_108132_m))._field_Src))._field_Model);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
	if ((_20d4e1b85_Prim((*((*(_108132_m))._field_Src))._field_Kind.ptr()) != nullptr)) {
		_20ebea986_write((*(_self_))._field_oc, jule::Str(".fake_slice()", 13));
	};
	_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _20ea2d764_lenCall(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d39c788_BuiltinLenCallExprModel> _109731_m) {
	_20ea27ae3_possibleRefExpr(_self_, (*((*(_109731_m))._field_Expr))._field_Model);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(".len()", 6));
}



inline void _20ea2da1c_capCall(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d39ca85_BuiltinCapCallExprModel> _110231_m) {
	_20ea27ae3_possibleRefExpr(_self_, (*((*(_110231_m))._field_Expr))._field_Model);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(".cap()", 6));
}



inline void _20ea2dcc5_deleteCall(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d39ce5e_BuiltinDeleteCallExprModel> _110734_m) {
	_20ea27ae3_possibleRefExpr(_self_, (*((*(_110734_m))._field_Dest))._field_Model);
	if (((*(_110734_m))._field_Key != nullptr)) {
		_20ebea986_write((*(_self_))._field_oc, jule::Str(".del(", 5));
		_20ea27ae3_possibleRefExpr(_self_, (*((*(_110734_m))._field_Key))._field_Model);
		_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
	} else {
		_20ebea986_write((*(_self_))._field_oc, jule::Str(".clear()", 8));
	};
}



inline void _20ea2e07d_makeCallSlice(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d39c0b2_BuiltinMakeCallExprModel>* _111838_m) {
	jule::Ptr<_20d4eb60c_Slc> _111917_slice = _20d4e2bdb_Slc((*((*(_111838_m))))._field_Kind.ptr());;
	_20ebea986_write((*(_self_))._field_oc, _20ec10b99_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*((*(_111838_m))))._field_Kind));
	_20ebea986_write((*(_self_))._field_oc, jule::Str("::alloc(", 8));
	_20ea27ae3_possibleRefExpr(_self_, (*((*(_111838_m))))._field_Len);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(", ", 2));
	if (((*((*(_111838_m))))._field_Cap != nullptr)) {
		_20ea27ae3_possibleRefExpr(_self_, (*((*(_111838_m))))._field_Cap);
	} else {
		_20ea27ae3_possibleRefExpr(_self_, (*((*(_111838_m))))._field_Len);
	};
	if (_20ec17d5a_shouldInitialized(&((*(_111917_slice))._field_Elem))) {
		_20ebea986_write((*(_self_))._field_oc, jule::Str(", ", 2));
		_20ea32427_initExpr(_self_, (*(_111917_slice))._field_Elem);
	};
	_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _20ea2e336_makeCallStr(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d39c0b2_BuiltinMakeCallExprModel>* _113636_m) {
	_20ebea986_write((*(_self_))._field_oc, jule::Str("jule::Str", 9));
	_20ebea986_write((*(_self_))._field_oc, jule::Str("::alloc(", 8));
	_20ea27ae3_possibleRefExpr(_self_, (*((*(_113636_m))))._field_Len);
	if (((*((*(_113636_m))))._field_Cap != nullptr)) {
		_20ebea986_write((*(_self_))._field_oc, jule::Str(", ", 2));
		_20ea27ae3_possibleRefExpr(_self_, (*((*(_113636_m))))._field_Cap);
	};
	_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _20ea2e5de_makeCall(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d39c0b2_BuiltinMakeCallExprModel> _114732_m) {
	if ((_20d4e2bdb_Slc((*(_114732_m))._field_Kind.ptr()) != nullptr)) {
		_20ea2e07d_makeCallSlice(_self_, &(_114732_m));
		return;;
	};
	_20ea2e336_makeCallStr(_self_, &(_114732_m));
}



inline void _20ea2e897_pushToSlice(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d5766cb_PushToSliceExprModel> _115535_m) {
	;
	_20ebea986_write((*(_self_))._field_oc, jule::Str("{ ", 2));
	_20ebea986_write((*(_self_))._field_oc, _20ec0caa8_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), (*((*(_115535_m))._field_Elems))._field_ElemKind));
	jule::Bool _116317_ptr = false;;
	{
		auto &_match_expr{ (*(_115535_m))._field_Dest };
		
		if (_match_expr.type == &__jule_any_type72) {
			_case_begin_212e986c0:;
			{
				jule::Ptr<_20d394ecd_UnaryExprModel> _116721_u = (*(_115535_m))._field_Dest.cast_ptr<_20d394ecd_UnaryExprModel>(&__jule_any_type72);;
				if ((_20d4e21a2_Ptr((*((*(_116721_u))._field_Expr))._field_Kind.ptr()) != nullptr)) {
					_20ebea986_write((*(_self_))._field_oc, jule::Str(" *__jule_push_dest = ", 21));
					_20ea27ae3_possibleRefExpr(_self_, (*((*(_116721_u))._field_Expr))._field_Model);
					_20ebea986_write((*(_self_))._field_oc, jule::Str("; ", 2));
					_116317_ptr=true;
					goto _match_end_212e9a5c3;
				};
				goto _case_begin_212e9a628;
			}
		}
		else {
			_case_begin_212e9a628:;
			{
				_20ebea986_write((*(_self_))._field_oc, jule::Str(" &__jule_push_dest = ", 21));
				_20ea27ae3_possibleRefExpr(_self_, (*(_115535_m))._field_Dest);
				_20ebea986_write((*(_self_))._field_oc, jule::Str("; ", 2));
			}
		}
		_match_end_212e9a5c3:;
	};
	if (((*((*(_115535_m))._field_Elems))._field_Elems.len() == 1LL)) {
		if (_116317_ptr) {
			_20ebea986_write((*(_self_))._field_oc, jule::Str("__jule_push_dest->push(", 23));
		} else {
			_20ebea986_write((*(_self_))._field_oc, jule::Str("__jule_push_dest.push(", 22));
		};
		_20ea27ae3_possibleRefExpr(_self_, (*((*(_115535_m))._field_Elems))._field_Elems[0LL]);
		_20ebea986_write((*(_self_))._field_oc, jule::Str("); }", 4));
		return;;
	};
	if (_116317_ptr) {
		_20ebea986_write((*(_self_))._field_oc, jule::Str("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_20ebea986_write((*(_self_))._field_oc, jule::Str("__jule_push_dest.alloc_for_append(", 34));
	};
	_20ebea986_write((*(_self_))._field_oc, _20b055388_Itoa(static_cast<jule::I64>((*((*(_115535_m))._field_Elems))._field_Elems.len())));
	_20ebea986_write((*(_self_))._field_oc, jule::Str("); ", 3));
	{
		auto expr = &((*((*(_115535_m))._field_Elems))._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212ea3378:;
		if (it != expr_end) {
			jule::Any _120121_e = *it;
			{
				_20ebea986_write((*(_self_))._field_oc, jule::Str("__jule_push_dest", 16));
				if (_116317_ptr) {
					_20ebea986_write((*(_self_))._field_oc, jule::Str("->__push(", 9));
				} else {
					_20ebea986_write((*(_self_))._field_oc, jule::Str(".__push(", 8));
				};
				_20ea27ae3_possibleRefExpr(_self_, _120121_e);
				_20ebea986_write((*(_self_))._field_oc, jule::Str("); ", 3));
			}
			_iter_next_212ea3378:;
			++it;
			goto _iter_begin_212ea3378;
		}
		_iter_end_212ea3378:;
	};
	_20ebea986_write((*(_self_))._field_oc, jule::Str("}", 1));
}



inline void _20ea2eb50_appendToSlice(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d576aa5_AppendToSliceExprModel> _121537_m) {
	_20ebea986_write((*(_self_))._field_oc, jule::Str("(", 1));
	_20ea27ae3_possibleRefExpr(_self_, (*(_121537_m))._field_Dest);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(").append(", 9));
	_20ea27ae3_possibleRefExpr(_self_, (*(_121537_m))._field_Slice);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(");", 2));
}



inline void _20ea2ee08_appendCall(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d39c48b_BuiltinAppendCallExprModel> _122334_m) {
	_20ebea986_write((*(_self_))._field_oc, jule::Str("jule::append(", 13));
	_20ea27ae3_possibleRefExpr(_self_, (*(_122334_m))._field_Dest);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(",", 1));
	_20ea27ae3_possibleRefExpr(_self_, (*(_122334_m))._field_Elements);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _20ea301b1_cloneCall(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d39ada2_BuiltinCloneCallExprModel> _123133_m) {
	_20ebea986_write((*(_self_))._field_oc, jule::Str("jule::clone(", 12));
	_20ea27ae3_possibleRefExpr(_self_, (*(_123133_m))._field_Expr);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _20ea30469_sizeof(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d39db96_SizeofExprModel> _123730_m) {
	_20ebea986_write((*(_self_))._field_oc, jule::Str("sizeof(", 7));
	_20ea27ae3_possibleRefExpr(_self_, (*(_123730_m))._field_Expr);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _20ea30722_alignof(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d39de3d_AlignofExprModel> _124331_m) {
	_20ebea986_write((*(_self_))._field_oc, jule::Str("alignof(", 8));
	_20ea27ae3_possibleRefExpr(_self_, (*(_124331_m))._field_Expr);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _20ea309ca_runeLit(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d39e23a_RuneExprModel> _124927_m) {
	if (((*(_124927_m))._field_Code <= 127LL)) {
		_2240a9b55_WriteByte(&(*((*(_self_))._field_oc))._field_Obj, '\'');
		jule::Str _125221_b = _20ea32aed_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>((*(_124927_m))._field_Code)));;
		if (_125221_b.equal("'", 1)) {
			_2240a9b55_WriteByte(&(*((*(_self_))._field_oc))._field_Obj, '\\');
		};
		_2240a989c_WriteStr(&(*((*(_self_))._field_oc))._field_Obj, _125221_b);
		_2240a9b55_WriteByte(&(*((*(_self_))._field_oc))._field_Obj, '\'');
		return;;
	};
	_20ea3389b_itoa(&((*((*(_self_))._field_oc))._field_Obj), static_cast<jule::I64>(static_cast<jule::I64>((*(_124927_m))._field_Code)));
}



inline void _20ea30c83_structureStatic(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d399b2b_StructStaticIdentExprModel> _126339_m) {
	_20ebea986_write((*(_self_))._field_oc, static__20ea3a8c5_funcIns(&((*(_126339_m))._field_Method)));
}



inline void _20ea3103b_integratedToStr(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d39e537_IntegratedToStrExprModel> _126739_m) {
	_20ebea986_write((*(_self_))._field_oc, jule::Str("jule::to_str(", 13));
	_20ea27ae3_possibleRefExpr(_self_, (*(_126739_m))._field_Expr);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
}



inline void _20ea312e4_backendEmit(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d39e911_BackendEmitExprModel> _127335_m) {
	if (((*(_127335_m))._field_Exprs.len() == 0LL)) {
		_20ebea986_write((*(_self_))._field_oc, (*(_127335_m))._field_Code);
		return;;
	};
	jule::I64 _127813_n = _2240aa628_Len(&(*((*(_self_))._field_oc))._field_Obj);;
	jule::Slice<jule::Any> _127917_args = jule::Slice<jule::Any>::alloc((*(_127335_m))._field_Exprs.len(), (*(_127335_m))._field_Exprs.len());;
	{
		auto expr = &((*(_127335_m))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212eb7744:;
		if (it != expr_end) {
			jule::I64 _128014_i = it - expr->begin();
			jule::Any _128021_expr = *it;
			{
				_20ea27ae3_possibleRefExpr(_self_, _128021_expr);
				jule::Slice<jule::U8> _128221_buf = _2240aab45_Buf(&(*((*(_self_))._field_oc))._field_Obj);;
				_127917_args[_128014_i]=jule::Any(static_cast<jule::Str>(_128221_buf.slice(_127813_n)), &__jule_any_type4);
				{
					_2240aaded_SetBuf(&(*((*(_self_))._field_oc))._field_Obj, _128221_buf.slice(0LL, _127813_n));
				};
			}
			_iter_next_212eb7744:;
			++it;
			_128014_i++;
			goto _iter_begin_212eb7744;
		}
		_iter_end_212eb7744:;
	};
	_20ebea986_write((*(_self_))._field_oc, _20d561111_Format((*(_127335_m))._field_Code, _127917_args));
}



inline void _20ea3159c_free(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d39ec0d_FreeExprModel> _128928_m) {
	_20ea27ae3_possibleRefExpr(_self_, (*(_128928_m))._field_Expr);
	if (_23c5b1bd2_RC) {
		_20ebea986_write((*(_self_))._field_oc, jule::Str(".dealloc()", 10));
		return;;
	};
	_20ebea986_write((*(_self_))._field_oc, jule::Str(".__free()", 9));
}



inline void _20ea31855_strComp(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d575620_StrCompExprModel> _129831_m) {
	if ((*(_129831_m))._field_NotEq) {
		_20ebea986_write((*(_self_))._field_oc, jule::Str("(!", 2));
	};
	jule::Str _130213_s = _20b067774_ReadStr((*(_129831_m))._field_Right.ptr());;
	_20ea27ae3_possibleRefExpr(_self_, (*(_129831_m))._field_Left);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(".equal(", 7));
	_20ea33219_cstrLit(&((*((*(_self_))._field_oc))._field_Obj), _130213_s);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(", ", 2));
	_20ebea986_write((*(_self_))._field_oc, _20b055388_Itoa(static_cast<jule::I64>(_130213_s.len())));
	_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
	if ((*(_129831_m))._field_NotEq) {
		_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
	};
}



inline void _20ea31b0d_inlineStdInternalNosafeStobs(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d576da2_InlineStdInternalNosafeStobs> _131452_m) {
	_20ea27ae3_possibleRefExpr(_self_, (*(_131452_m))._field_Str);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(".fake_slice()", 13));
}



inline void _20ea31db6_emptyCompare(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d574ce5_EmptyCompareExprModel> _131936_m) {
	if ((*(_131936_m))._field_Neg) {
		_20ebea986_write((*(_self_))._field_oc, jule::Str("!", 1));
	};
	_20ebea986_write((*(_self_))._field_oc, jule::Str("(", 1));
	_20ea27ae3_possibleRefExpr(_self_, (*(_131936_m))._field_Expr);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(").empty()", 9));
}



inline void _20ea3216e_model(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Any _132829_m) {
	{
		auto &_match_expr{ _132829_m };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_212ec759a:;
			{
				_20ebea986_write((*(_self_))._field_oc, _132829_m.cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_212ec7039:;
			{
				_20ebea986_write((*(_self_))._field_oc, _20ec10b99_kind((*((*(_self_))._field_oc))._field_tc.ptr(), _132829_m.cast_ptr<_20d4de28c_TypeKind>(&__jule_any_type87)));
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_212ec7248:;
			{
				_20ea26031_constant(_self_, _132829_m.cast_ptr<_20b0655eb_Const>(&__jule_any_type19));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_212ec72ae:;
			{
				_20ea26c68_var(_self_, _132829_m.cast_ptr<_20d458aca_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_212ec7325:;
			{
				_20ea27021_structureIns(_self_, _132829_m.cast_ptr<_20d39066b_StructIns>(&__jule_any_type9));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_212ec738b:;
			{
				_20ea2ba5e_funcInsCommon(_self_, _132829_m.cast_ptr<_20d3a5a49_FnIns>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_212ec80c3:;
			{
				_20ea26707_unsafeBinary(_self_, (*(_132829_m.cast_ptr<_20d575ea0_UnsafeBinopExprModel>(&__jule_any_type127)))._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_212ec8139:;
			{
				_20ea269b0_binary(_self_, _132829_m.cast_ptr<_20d394b04_BinopExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_212ec81b1:;
			{
				_20ea272c9_unary(_self_, _132829_m.cast_ptr<_20d394ecd_UnaryExprModel>(&__jule_any_type72));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_212ec8238:;
			{
				_20ea27582_structureLit(_self_, _132829_m.cast_ptr<_20d3958a2_StructLitExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_212ec82b0:;
			{
				_20ea2783a_allocStructure(_self_, _132829_m.cast_ptr<_20d395b9e_AllocStructLitExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_212ec8337:;
			{
				_20ea282b9_casting(_self_, _132829_m.cast_ptr<_20d396232_CastingExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_212ec83ae:;
			{
				_20ea29d59_funcCall(_self_, _132829_m.cast_ptr<_20d396ad4_FnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_212ec8436:;
			{
				_20ea2a112_slice(_self_, _132829_m.cast_ptr<_20d396ead_SliceExprModel>(&__jule_any_type80));
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_212ec84ad:;
			{
				_20ea2b7a6_array(_self_, _132829_m.cast_ptr<_20d39a005_ArrayExprModel>(&__jule_any_type88));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_212ec8535:;
			{
				_20ea2a673_unsafeIndexing(_self_, _132829_m.cast_ptr<_20d57629c_UnsafeIndexingExprModel>(&__jule_any_type129));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_212ec85ac:;
			{
				_20ea2a3ba_indexing(_self_, _132829_m.cast_ptr<_20d397464_IndexingExprModel>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_212ec8634:;
			{
				_20ea2a92b_anonFunc(_self_, _132829_m.cast_ptr<_20d39783d_AnonFnExprModel>(&__jule_any_type101));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_212ec86ab:;
			{
				_20ea2abd4_mapExpr(_self_, _132829_m.cast_ptr<_20d3981bd_MapExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_212ec8733:;
			{
				_20ea2ae8c_slicing(_self_, _132829_m.cast_ptr<_20d398751_SlicingExprModel>(&__jule_any_type95));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_212ec87aa:;
			{
				_20ea2b245_traitSub(_self_, _132829_m.cast_ptr<_20d398cd4_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_212ec8832:;
			{
				_20ea2b4ed_structureSub(_self_, _132829_m.cast_ptr<_20d399675_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_212ec88a9:;
			{
				_20ea2c0c0_tuple(_self_, _132829_m.cast_ptr<_20d39a302_TupleExprModel>(&__jule_any_type85));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_212ec8931:;
			{
				_20ea2c631_outCall(_self_, _132829_m.cast_ptr<_20d39a6cb_BuiltinOutCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_212ec89a8:;
			{
				_20ea2c8d9_outlnCall(_self_, _132829_m.cast_ptr<_20d39aaa5_BuiltinOutlnCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_212ec8a30:;
			{
				_20ea2c378_newCall(_self_, _132829_m.cast_ptr<_20d39b27b_BuiltinNewCallExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_212ec8aa7:;
			{
				_20ea2cb92_panicCall(_self_, _132829_m.cast_ptr<_20d39b655_BuiltinPanicCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_212ec8b2e:;
			{
				_20ea2ce4a_assertCall(_self_, _132829_m.cast_ptr<_20d39bb0b_BuiltinAssertCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_212ec8ba6:;
			{
				_20ea2d203_errorCall(_self_, _132829_m.cast_ptr<_20d39d9a9_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_212ec8c2d:;
			{
				_20ea2e5de_makeCall(_self_, _132829_m.cast_ptr<_20d39c0b2_BuiltinMakeCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_212ec8ca5:;
			{
				_20ea2ee08_appendCall(_self_, _132829_m.cast_ptr<_20d39c48b_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_212ec8d2c:;
			{
				_20ea301b1_cloneCall(_self_, _132829_m.cast_ptr<_20d39ada2_BuiltinCloneCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_212ec8da4:;
			{
				_20ea2d4ab_copyCall(_self_, _132829_m.cast_ptr<_20d39d338_BuiltinCopyCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_212ec8e2b:;
			{
				_20ea2d764_lenCall(_self_, _132829_m.cast_ptr<_20d39c788_BuiltinLenCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_212ec8ea3:;
			{
				_20ea2da1c_capCall(_self_, _132829_m.cast_ptr<_20d39ca85_BuiltinCapCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_212ec902a:;
			{
				_20ea2dcc5_deleteCall(_self_, _132829_m.cast_ptr<_20d39ce5e_BuiltinDeleteCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_212ec90a2:;
			{
				_20ea30469_sizeof(_self_, _132829_m.cast_ptr<_20d39db96_SizeofExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_212ec9129:;
			{
				_20ea30722_alignof(_self_, _132829_m.cast_ptr<_20d39de3d_AlignofExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_212ec91a1:;
			{
				_20ea309ca_runeLit(_self_, _132829_m.cast_ptr<_20d39e23a_RuneExprModel>(&__jule_any_type86));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_212ec9228:;
			{
				_20ea30c83_structureStatic(_self_, _132829_m.cast_ptr<_20d399b2b_StructStaticIdentExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_212ec92a0:;
			{
				_20ea3103b_integratedToStr(_self_, _132829_m.cast_ptr<_20d39e537_IntegratedToStrExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_212ec9327:;
			{
				_20ea312e4_backendEmit(_self_, _132829_m.cast_ptr<_20d39e911_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_212ec939e:;
			{
				_20ea3159c_free(_self_, _132829_m.cast_ptr<_20d39ec0d_FreeExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_212ec9426:;
			{
				_20ea31855_strComp(_self_, _132829_m.cast_ptr<_20d575620_StrCompExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_212ec949d:;
			{
				_20ea31b0d_inlineStdInternalNosafeStobs(_self_, _132829_m.cast_ptr<_20d576da2_InlineStdInternalNosafeStobs>(&__jule_any_type130));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_212ec9525:;
			{
				_20ea26c68_var(_self_, (*(_132829_m.cast_ptr<_20d5750e2_RefExprModel>(&__jule_any_type128)))._field_Var);
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_212ec959c:;
			{
				_20ea31db6_emptyCompare(_self_, _132829_m.cast_ptr<_20d574ce5_EmptyCompareExprModel>(&__jule_any_type125));
			}
		}
		else {
			_case_begin_212ec71d2:;
			{
				_20ebea986_write((*(_self_))._field_oc, jule::Str("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_212ec717c:;
	};
}



inline void _20ea32427_initExpr(jule::Ptr<_20ea2479e_exprCoder> _self_, jule::Ptr<_20d4de28c_TypeKind> _142932_t) {
	if (_20d4e114b_NilCompatible(_142932_t.ptr())) {
		if ((_20d4e21a2_Ptr(_142932_t.ptr()) != nullptr)) {
			_20ebea986_write((*(_self_))._field_oc, jule::Str("nullptr", 7));
		} else {
			_20ebea986_write((*(_self_))._field_oc, _20ec10b99_kind((*((*(_self_))._field_oc))._field_tc.ptr(), _142932_t));
			_20ebea986_write((*(_self_))._field_oc, jule::Str("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_20d4ec201_Tuple> _143917_tup = _20d4e39ab_Tup(_142932_t.ptr());;
	if ((_143917_tup != nullptr)) {
		_20ec15286_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Obj), _143917_tup);
		_20ebea986_write((*(_self_))._field_oc, jule::Str("{", 1));
		{
			auto expr = &((*(_143917_tup))._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_21159e107:;
			if (it != expr_end) {
				jule::I64 _144318_i = it - expr->begin();
				jule::Ptr<_20d4de28c_TypeKind> _144325_tt = *it;
				{
					if ((!(_20ec17d5a_shouldInitialized(&(_144325_tt))))) {
						goto _iter_next_21159e107;
					};
					_20ebea986_write((*(_self_))._field_oc, jule::Str(".__jule_result_arg", 18));
					_20ebea986_write((*(_self_))._field_oc, _20b055388_Itoa(_144318_i));
					_20ebea986_write((*(_self_))._field_oc, jule::Str("=", 1));
					_20ea32427_initExpr(_self_, _144325_tt);
					if ((((*(_143917_tup))._field_Types.len() - _144318_i) > 1LL)) {
						_20ebea986_write((*(_self_))._field_oc, jule::Str(", ", 2));
					};
				}
				_iter_next_21159e107:;
				++it;
				_144318_i++;
				goto _iter_begin_21159e107;
			}
			_iter_end_21159e107:;
		};
		_20ebea986_write((*(_self_))._field_oc, jule::Str("}", 1));
		return;;
	};
	jule::Ptr<_20d3b85d9_Enum> _145817_enm = _20d4e2438_Enum(_142932_t.ptr());;
	if ((_145817_enm != nullptr)) {
		_20ea3216e_model(_self_, (*((*((*((*(_145817_enm))._field_Items[0LL]))._field_Value))._field_Data))._field_Model);
		return;;
	};
	jule::Ptr<_20d4e710d_Prim> _146313_prim = _20d4e1b85_Prim(_142932_t.ptr());;
	if ((_146313_prim != nullptr)) {
		if (_20b065123_IsNum((*(_146313_prim))._field_Kind)) {
			_20ebea986_write((*(_self_))._field_oc, jule::Str("0", 1));
		} else if (_20d4ea30e_IsBool(_146313_prim.ptr())) {
			_20ebea986_write((*(_self_))._field_oc, jule::Str("false", 5));
		} else if (_20d4ea595_IsStr(_146313_prim.ptr())) {
			_20ebea986_write((*(_self_))._field_oc, jule::Str("jule::Str()", 11));
		};
		return;;
	};
	if ((_20d4e2955_Arr(_142932_t.ptr()) != nullptr)) {
		jule::Ptr<_20d4ed92d_Arr> _147521_arr = _20d4e2955_Arr(_142932_t.ptr());;
		_20ebea986_write((*(_self_))._field_oc, _20ec10b99_kind((*((*(_self_))._field_oc))._field_tc.ptr(), _142932_t));
		_20ebea986_write((*(_self_))._field_oc, jule::Str("(", 1));
		_20ea32427_initExpr(_self_, (*(_147521_arr))._field_Elem);
		_20ebea986_write((*(_self_))._field_oc, jule::Str(")", 1));
		return;;
	};
	jule::Ptr<_20d39066b_StructIns> _148217_s = _20d4e3208_Struct(_142932_t.ptr());;
	if ((((_148217_s != nullptr) && (*((*(_148217_s))._field_Decl))._field_Binded) && (_20ec176c8_findDirective(&((*((*(_148217_s))._field_Decl))._field_Directives), jule::Str("typedef", 7)) == nullptr))) {
		_20ebea986_write((*(_self_))._field_oc, jule::Str("(", 1));
		_20ebea986_write((*(_self_))._field_oc, _20ec10b99_kind((*((*(_self_))._field_oc))._field_tc.ptr(), _142932_t));
		_20ebea986_write((*(_self_))._field_oc, jule::Str("){}", 3));
		return;;
	};
	_20ebea986_write((*(_self_))._field_oc, _20ec10b99_kind((*((*(_self_))._field_oc))._field_tc.ptr(), _142932_t));
	_20ebea986_write((*(_self_))._field_oc, jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _20ea2479e_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20ea34d0e_deriveCoder> static__20ea351c7_new(jule::Ptr<_20ebea2d2_ObjectCoder> _1323_oc) {
	return jule::new_ptr<_20ea34d0e_deriveCoder>(_20ea34d0e_deriveCoder{._field_oc=_1323_oc});;
}



inline jule::Str _20ea35518_cloneFuncDecl(_20ea34d0e_deriveCoder* _self_, jule::Ptr<_20d38c58b_Struct>* _1733_s) {
	_2240a0ad5_StrBuilder _1817_obj = static__2240a0e04_New(51LL);;
	_2240a989c_WriteStr(&_1817_obj, _20ec0dc0d_structure((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_1733_s))));
	_2240a989c_WriteStr(&_1817_obj, jule::Str(" clone(void) const ", 19));
	return _2240aa194_Str(&_1817_obj);;
}



inline jule::Str _20ea35859_cloneFuncDef(_20ea34d0e_deriveCoder* _self_, jule::Ptr<_20d38c58b_Struct>* _2432_s) {
	jule::Str _2513_strct = _20ec0dc0d_structure((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_2432_s)));;
	_2240a0ad5_StrBuilder _2617_obj = static__2240a0e04_New(static_cast<jule::I64>(((_2513_strct.len() << 1LL) + 21LL)));;
	_2240a989c_WriteStr(&_2617_obj, _2513_strct);
	_2240a9b55_WriteByte(&_2617_obj, ' ');
	_2240a989c_WriteStr(&_2617_obj, _2513_strct);
	_2240a989c_WriteStr(&_2617_obj, jule::Str("::clone(void) const ", 20));
	return _2240aa194_Str(&_2617_obj);;
}







std::ostream &operator<<(std::ostream &_Stream, _20ea34d0e_deriveCoder _Src) {
	_Stream << "deriveCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20ea368c1_TestCoder> static__20ea36d11_New(jule::Ptr<_20ebea2d2_ObjectCoder>* _2824_oc) {
	return jule::new_ptr<_20ea368c1_TestCoder>(_20ea368c1_TestCoder{._field_oc=(*(_2824_oc))});;
}



inline jule::Ptr<_20d414d94_ImportInfo> _20ea37097_findTestingPackage(jule::Ptr<_20ea368c1_TestCoder> _self_) {
	{
		auto expr = &((*((*((*(_self_))._field_oc))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2115b1449:;
		if (it != expr_end) {
			jule::Ptr<_20d414d94_ImportInfo> _3521_imp = *it;
			{
				if ((*(_3521_imp))._field_LinkPath.equal("std::testing", 12)) {
					return _3521_imp;;
				};
			}
			_iter_next_2115b1449:;
			++it;
			goto _iter_begin_2115b1449;
		}
		_iter_end_2115b1449:;
	};
	return nullptr;;
}



inline void _20ea37350_appendTest(jule::Ptr<_20ea368c1_TestCoder> _self_, jule::Ptr<_20d3a5a49_FnIns> _4334_f) {
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ea37a8c_callTmReset(_self_);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(";\n", 2));
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("std::cout << \">>> TEST RUNNING: \" ", 34));
	_20ea33219_cstrLit(&((*((*(_self_))._field_oc))._field_Obj), (*((*(_4334_f))._field_Decl))._field_Ident);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(" << std::endl;\n", 15));
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, static__20ea3a8c5_funcIns(&(_4334_f)));
	_20ebea986_write((*(_self_))._field_oc, jule::Str("(_t);\n", 6));
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("post_test();\n", 13));
}



inline void _20ea37608_appendPackageTests(jule::Ptr<_20ea368c1_TestCoder> _self_, jule::Ptr<_20d417cba_Package>* _5843_p) {
	{
		auto expr = &((*((*(_5843_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2115ba1bc:;
		if (it != expr_end) {
			jule::Ptr<_20d081e40_SymbolTable> _5921_file = *it;
			{
				{
					auto expr = &((*(_5921_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2115bab18:;
					if (it != expr_end) {
						jule::Ptr<_20d3a2b45_Fn> _6025_f = *it;
						{
							if (_20ec17a91_hasDirective(&((*(_6025_f))._field_Directives), jule::Str("test", 4))) {
								_20ea37350_appendTest(_self_, (*(_6025_f))._field_Instances[0LL]);
							};
						}
						_iter_next_2115bab18:;
						++it;
						goto _iter_begin_2115bab18;
					}
					_iter_end_2115bab18:;
				};
			}
			_iter_next_2115ba1bc:;
			++it;
			goto _iter_begin_2115ba1bc;
		}
		_iter_end_2115ba1bc:;
	};
}



inline jule::Bool _20ea3788e_readyTestingPackage(jule::Ptr<_20ea368c1_TestCoder> _self_) {
	jule::Ptr<_20d414d94_ImportInfo> _6917_p = _20ea37097_findTestingPackage(_self_);;
	if ((_6917_p == nullptr)) {
		return false;;
	};
	(*(_self_))._field_t=(*(_20d416071_FindStruct(_6917_p.ptr(), jule::Str("T", 1), false)))._field_Instances[0LL];
	(*(_self_))._field_tmReset=_20d3916d3_FindMethod((*(_self_))._field_t.ptr(), jule::Str("reset", 5), false);
	(*(_self_))._field_tmFailed=_20d3916d3_FindMethod((*(_self_))._field_t.ptr(), jule::Str("Failed", 6), false);
	(*(_self_))._field_tmSkipped=_20d3916d3_FindMethod((*(_self_))._field_t.ptr(), jule::Str("Skipped", 7), false);
	return true;;
}



inline void _20ea37a8c_callTmReset(jule::Ptr<_20ea368c1_TestCoder> _self_) {
	_20ebea986_write((*(_self_))._field_oc, static__20ea3a60b_func(&((*(_self_))._field_tmReset)));
	_20ebea986_write((*(_self_))._field_oc, jule::Str("(_t)", 4));
}



inline void _20ea37c8a_callTmFailed(jule::Ptr<_20ea368c1_TestCoder> _self_) {
	_20ebea986_write((*(_self_))._field_oc, static__20ea3a60b_func(&((*(_self_))._field_tmFailed)));
	_20ebea986_write((*(_self_))._field_oc, jule::Str("(_t)", 4));
}



inline void _20ea37e88_callTmSkipped(jule::Ptr<_20ea368c1_TestCoder> _self_) {
	_20ebea986_write((*(_self_))._field_oc, static__20ea3a60b_func(&((*(_self_))._field_tmSkipped)));
	_20ebea986_write((*(_self_))._field_oc, jule::Str("(_t)", 4));
}



inline void _20ea38186_Serialize(jule::Ptr<_20ea368c1_TestCoder> _self_) {
	_20ec071e0_serializeHead((*(_self_))._field_oc);
	__JULE_DEFER({
		_20ec06ee2_end((*(_self_))._field_oc);
	});;
	_20ebea986_write((*(_self_))._field_oc, jule::Str("\nvoid test_point(void) {\n", 25));
	_20ebeab84_addIndent((*(_self_))._field_oc);
	_20ebeb080_indent((*(_self_))._field_oc);
	if ((!(_20ea3788e_readyTestingPackage(_self_)))) {
		_20ebea986_write((*(_self_))._field_oc, jule::Str("}", 1));
		_20ebead82_doneIndent((*(_self_))._field_oc);
		return;;
	};
	_20ebea986_write((*(_self_))._field_oc, _20ec0b953_asSptr((*((*(_self_))._field_oc))._field_tc.ptr(), _20ec0e04e_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_self_))._field_t)));
	_20ebea986_write((*(_self_))._field_oc, jule::Str(" _t = jule::new_ptr<", 20));
	_20ebea986_write((*(_self_))._field_oc, _20ec0e04e_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_self_))._field_t));
	_20ebea986_write((*(_self_))._field_oc, jule::Str(">(); _t.ref = nullptr;\n", 23));
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("auto post_test = [&](void) {\n", 29));
	_20ebeab84_addIndent((*(_self_))._field_oc);
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("++total;\n", 9));
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("if (", 4));
	_20ea37c8a_callTmFailed(_self_);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("else if (", 9));
	_20ea37e88_callTmSkipped(_self_);
	_20ebea986_write((*(_self_))._field_oc, jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_20ebead82_doneIndent((*(_self_))._field_oc);
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("};\n", 3));
	_20ea37608_appendPackageTests(_self_, &((*((*((*(_self_))._field_oc))._field_ir))._field_Main));
	_20ebea986_write((*(_self_))._field_oc, jule::Str("\n\n", 2));
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("if (failed != 0) std::exit(1);\n", 31));
	_20ebead82_doneIndent((*(_self_))._field_oc);
	_20ebeb080_indent((*(_self_))._field_oc);
	_20ebea986_write((*(_self_))._field_oc, jule::Str("}\n", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _20ea368c1_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline void static__20ea39a8e_writeIdentTo(_2240a0ad5_StrBuilder* _3333_buf, jule::Str* _3351_ident) {
	{
		auto expr = _3351_ident;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2115d5c54:;
		if (it != expr_end) {
			jule::U8 *_3416_b = it;
			{
				if (((*(_3416_b)) >= 128LLU)) {
					goto _julec_label_2115d6095;
				};
			}
			_iter_next_2115d5c54:;
			++it;
			goto _iter_begin_2115d5c54;
		}
		_iter_end_2115d5c54:;
	};
	_2240a989c_WriteStr(_3333_buf, (*(_3351_ident)));
	return;;
	_julec_label_2115d6095:;
	{
		auto expr = static_cast<jule::Slice<jule::I32>>((*(_3351_ident)));
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_2115d710c:;
		if (it != expr_end) {
			jule::I32 _4416_r = *it;
			{
				if ((_4416_r < 128LL)) {
					_2240a9b55_WriteByte(_3333_buf, static_cast<jule::U8>(static_cast<jule::U8>(_4416_r)));
					goto _iter_next_2115d710c;
				};
				_2240a989c_WriteStr(_3333_buf, _20b0550be_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_4416_r)), 15LL));
			}
			_iter_next_2115d710c:;
			++it;
			goto _iter_begin_2115d710c;
		}
		_iter_end_2115d710c:;
	};
}



inline jule::Str static__20ea39e13_toOut(jule::Str* _6122_ident, jule::Uintptr _6134_addr) {
	if ((_6134_addr != 0LLU)) {
		_2240a0ad5_StrBuilder _6321_obj = static__2240a0e04_New(40LL);;
		_2240a9b55_WriteByte(&_6321_obj, '_');
		_2240a989c_WriteStr(&_6321_obj, _20b054c06_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_6134_addr)), 15LL));
		_2240a9b55_WriteByte(&_6321_obj, '_');
		static__20ea39a8e_writeIdentTo(&(_6321_obj), _6122_ident);
		return _2240aa194_Str(&_6321_obj);;
	};
	_2240a0ad5_StrBuilder _7017_obj = static__2240a0e04_New(static_cast<jule::I64>(((*(_6122_ident)).len() + 1LL)));;
	_2240a9b55_WriteByte(&_7017_obj, '_');
	static__20ea39a8e_writeIdentTo(&(_7017_obj), _6122_ident);
	return _2240aa194_Str(&_7017_obj);;
}



inline jule::Str static__20ea3a342_toLocal(jule::I64 _8223_row, jule::I64 _8233_col, jule::Str* _8244_ident) {
	_2240a0ad5_StrBuilder _8317_obj = static__2240a0e04_New(40LL);;
	_2240a9b55_WriteByte(&_8317_obj, '_');
	_2240a989c_WriteStr(&_8317_obj, _20b055388_Itoa(_8223_row));
	_2240a989c_WriteStr(&_8317_obj, _20b055388_Itoa(_8233_col));
	_2240a9b55_WriteByte(&_8317_obj, '_');
	static__20ea39a8e_writeIdentTo(&(_8317_obj), _8244_ident);
	return _2240aa194_Str(&_8317_obj);;
}



inline jule::Str static__20ea3a60b_func(jule::Ptr<_20d3a2b45_Fn>* _9321_f) {
	{
		
		if ((*((*(_9321_f))))._field_Binded) {
			_case_begin_2115ddba2:;
			{
				return (*((*(_9321_f))))._field_Ident;;
			}
		}
		else if ((*((*(_9321_f))))._field_Ident.equal("main", 4)) {
			_case_begin_2115dd498:;
			{
				return jule::Str("entry_point", 11);;
			}
		}
		else if (_20d3a334e_IsMethod((*(_9321_f)).ptr())) {
			_case_begin_2115dd50e:;
			{
				jule::Str _10021_obj = static__20ea39e13_toOut(&((*((*(_9321_f))))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_9321_f)))));;
				if ((*((*(_9321_f))))._field_Statically) {
					_10021_obj=(jule::Str("static_", 7) + _10021_obj);
					return _10021_obj;;
				};
				return _10021_obj;;
			}
		}
		else {
			_case_begin_2115dc684:;
			{
				return static__20ea39e13_toOut(&((*((*(_9321_f))))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_9321_f)))));;
			}
		}
		_match_end_2115dccb1:;
	};
}



inline jule::Str static__20ea3a8c5_funcIns(jule::Ptr<_20d3a5a49_FnIns>* _11224_f) {
	if (_20d3a6ece_IsBuiltin((*(_11224_f)).ptr())) {
		return (jule::Str("jule::", 6) + (*((*((*(_11224_f))))._field_Decl))._field_Ident);;
	};
	if (((*((*((*(_11224_f))))._field_Decl))._field_Binded || ((*((*(_11224_f))))._field_Generics.len() == 0LL))) {
		return static__20ea3a60b_func(&((*((*(_11224_f))))._field_Decl));;
	};
	return static__20ea39e13_toOut(&((*((*((*(_11224_f))))._field_Decl))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_11224_f)))));;
}



inline jule::Str static__20ea3ab8e_traitDecl(jule::Ptr<_20d3b5dde_Trait> _12525_t) {
	return static__20ea39e13_toOut(&((*(_12525_t))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12525_t)));;
}



inline jule::Str static__20ea3ae58_param(jule::Ptr<_20d3a1171_Param>* _13022_p) {
	if ((_20d353ce4_IsAnonIdent((*((*(_13022_p))))._field_Ident) || _20d353a2a_IsIgnoreIdent((*((*(_13022_p))))._field_Ident))) {
		return jule::Str();;
	};
	if (_20d3a178c_IsSelf((*(_13022_p)).ptr())) {
		return jule::Str("_self_", 6);;
	};
	if (((*((*(_13022_p))))._field_Token == nullptr)) {
		return static__20ea3a342_toLocal(0LL, 0LL, &((*((*(_13022_p))))._field_Ident));;
	};
	return static__20ea3a342_toLocal((*((*((*(_13022_p))))._field_Token))._field_Row, (*((*((*(_13022_p))))._field_Token))._field_Column, &((*((*(_13022_p))))._field_Ident));;
}



inline jule::Str static__20ea3b222_structure(jule::Ptr<_20d38c58b_Struct>* _14426_s) {
	if ((*((*(_14426_s))))._field_Binded) {
		if (_20ec17a91_hasDirective(&((*((*(_14426_s))))._field_Directives), jule::Str("typedef", 7))) {
			return (*((*(_14426_s))))._field_Ident;;
		};
		return (jule::Str("struct ", 7) + (*((*(_14426_s))))._field_Ident);;
	};
	return static__20ea39e13_toOut(&((*((*(_14426_s))))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_14426_s)))));;
}



inline jule::Str static__20ea3b4db_structureIns(jule::Ptr<_20d39066b_StructIns>* _15529_s) {
	if (((*((*((*(_15529_s))))._field_Decl))._field_Binded || ((*((*(_15529_s))))._field_Generics.len() == 0LL))) {
		return static__20ea3b222_structure(&((*((*(_15529_s))))._field_Decl));;
	};
	return static__20ea39e13_toOut(&((*((*((*(_15529_s))))._field_Decl))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_15529_s)))));;
}



inline jule::Str static__20ea3b7a5_field(jule::Ptr<_20d389698_Field>* _16322_f) {
	if ((*((*((*(_16322_f))))._field_Owner))._field_Binded) {
		return (*((*(_16322_f))))._field_Ident;;
	};
	_2240a0ad5_StrBuilder _16717_obj = static__2240a0e04_New(static_cast<jule::I64>((7LL + (*((*(_16322_f))))._field_Ident.len())));;
	_2240a989c_WriteStr(&_16717_obj, jule::Str("_field_", 7));
	static__20ea39a8e_writeIdentTo(&(_16717_obj), &((*((*(_16322_f))))._field_Ident));
	return _2240aa194_Str(&_16717_obj);;
}



inline jule::Str static__20ea3ba6e_var(jule::Ptr<_20d458aca_Var> _17423_v) {
	{
		
		if ((*(_17423_v))._field_Binded) {
			_case_begin_2115eb0dd:;
			{
				return (*(_17423_v))._field_Ident;;
			}
		}
		else if ((*(_17423_v))._field_Ident.equal("error", 5)) {
			_case_begin_2115eb154:;
			{
				return jule::Str("except.error", 12);;
			}
		}
		else if ((*(_17423_v))._field_Ident.equal("self", 4)) {
			_case_begin_2115eb1ba:;
			{
				return jule::Str("_self_", 6);;
			}
		}
		else if (((*(_17423_v))._field_RetOrder == -1LL)) {
			_case_begin_2115eb231:;
			{
				return jule::Str("__jule_func_result", 18);;
			}
		}
		else if (((*(_17423_v))._field_RetOrder >= 0LL)) {
			_case_begin_2115eb4b7:;
			{
				return (jule::Str("__jule_func_result.__jule_result_arg", 36) + _20b055388_Itoa((*(_17423_v))._field_RetOrder));;
			}
		}
		else if (((*(_17423_v))._field_Scope != nullptr)) {
			_case_begin_2115eb52d:;
			{
				return static__20ea3a342_toLocal((*((*(_17423_v))._field_Token))._field_Row, (*((*(_17423_v))._field_Token))._field_Column, &((*(_17423_v))._field_Ident));;
			}
		}
		else {
			_case_begin_2115eb077:;
			{
				return static__20ea39e13_toOut(&((*(_17423_v))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_17423_v)));;
			}
		}
		_match_end_2115eacbe:;
	};
}



inline jule::Str static__20ea3bd38_iterBegin(jule::Uintptr _19625_it) {
	_2240a0ad5_StrBuilder _19717_obj = static__2240a0e04_New(30LL);;
	_2240a989c_WriteStr(&_19717_obj, jule::Str("_iter_begin_", 12));
	_2240a989c_WriteStr(&_19717_obj, _20b054c06_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19625_it)), 15LL));
	return _2240aa194_Str(&_19717_obj);;
}



inline jule::Str static__20ea3c102_iterEnd(jule::Uintptr _20423_it) {
	_2240a0ad5_StrBuilder _20517_obj = static__2240a0e04_New(30LL);;
	_2240a989c_WriteStr(&_20517_obj, jule::Str("_iter_end_", 10));
	_2240a989c_WriteStr(&_20517_obj, _20b054c06_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20423_it)), 15LL));
	return _2240aa194_Str(&_20517_obj);;
}



inline jule::Str static__20ea3c3bb_iterNext(jule::Uintptr _21224_it) {
	_2240a0ad5_StrBuilder _21317_obj = static__2240a0e04_New(30LL);;
	_2240a989c_WriteStr(&_21317_obj, jule::Str("_iter_next_", 11));
	_2240a989c_WriteStr(&_21317_obj, _20b054c06_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_21224_it)), 15LL));
	return _2240aa194_Str(&_21317_obj);;
}



inline jule::Str static__20ea3c685_label(jule::Uintptr _22021_u) {
	_2240a0ad5_StrBuilder _22117_obj = static__2240a0e04_New(30LL);;
	_2240a989c_WriteStr(&_22117_obj, jule::Str("_julec_label_", 13));
	_2240a989c_WriteStr(&_22117_obj, _20b054c06_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_22021_u)), 15LL));
	return _2240aa194_Str(&_22117_obj);;
}



inline jule::Str static__20ea3c94e_matchEnd(jule::Uintptr _22824_m) {
	_2240a0ad5_StrBuilder _22917_obj = static__2240a0e04_New(30LL);;
	_2240a989c_WriteStr(&_22917_obj, jule::Str("_match_end_", 11));
	_2240a989c_WriteStr(&_22917_obj, _20b054c06_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_22824_m)), 15LL));
	return _2240aa194_Str(&_22917_obj);;
}



inline jule::Str static__20ea3cc18_caseBegin(jule::Uintptr _23625_c) {
	_2240a0ad5_StrBuilder _23717_obj = static__2240a0e04_New(30LL);;
	_2240a989c_WriteStr(&_23717_obj, jule::Str("_case_begin_", 12));
	_2240a989c_WriteStr(&_23717_obj, _20b054c06_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_23625_c)), 15LL));
	return _2240aa194_Str(&_23717_obj);;
}







std::ostream &operator<<(std::ostream &_Stream, _20ea39561_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20ebe86dc_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20ebe8cb4_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "ti:" << _Src._field_ti << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20ebe918d_traitCast _Src) {
	_Stream << "traitCast{";
	_Stream << "t1:" << _Src._field_t1 << ", ";
	_Stream << "t2:" << _Src._field_t2;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _20ec09d80_Str(_20ec099ea_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _20ec0a1c1_Equal(jule::Ptr<_20ec099ea_customType> _self_, jule::Ptr<_20d4de28c_TypeKind> _4021_k) {
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _20ec099ea_customType _Src) {
	_Stream << _20ec09d80_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_20ec0a600_typeCoder> static__20ec0ab3e_new(jule::Ptr<_20ebea2d2_ObjectCoder>* _6424_oc) {
	jule::Ptr<_20ec0a600_typeCoder> _6517_tc = jule::new_ptr<_20ec0a600_typeCoder>(_20ec0a600_typeCoder{._field_oc=(*(_6424_oc)), });;
	(*(_6517_tc))._field_rc=static__20ec138a0_new(&(_6517_tc));
	return _6517_tc;;
}



inline jule::Str _20ec0ae80_toType(_20ec0a600_typeCoder* _self_, jule::Str _7129_id) {
	if ((!_7129_id.equal("uintptr", 7))) {
		_7129_id=_20b057434_RealKindOf(_7129_id);
	};
	_2240a0ad5_StrBuilder _7517_obj = static__2240a0e04_New(32LL);;
	_2240a989c_WriteStr(&_7517_obj, jule::Str("jule::", 6));
	if (((97LL <= _7129_id[0LL]) && (_7129_id[0LL] <= 122LLU))) {
		_2240a9b55_WriteByte(&_7517_obj, static_cast<jule::U8>((_7129_id[0LL] - 32LLU)));
	} else {
		_2240a9b55_WriteByte(&_7517_obj, _7129_id[0LL]);
	};
	_2240a989c_WriteStr(&_7517_obj, _7129_id.slice(1LL));
	return _2240aa194_Str(&_7517_obj);;
}



inline jule::Str _20ec0b2c1_prim(_20ec0a600_typeCoder* _self_, jule::Ptr<_20d4e710d_Prim> _8723_p) {
	return _20ec0ae80_toType(_self_, _20d4e744e_Str(_8723_p.ptr()));;
}



inline jule::Str _20ec0b612_tuple(_20ec0a600_typeCoder* _self_, jule::Ptr<_20d4ec201_Tuple> _9228_t) {
	_2240a0ad5_StrBuilder _9317_obj = static__2240a0e04_New(32LL);;
	_2240a989c_WriteStr(&_9317_obj, jule::Str("std::tuple<", 11));
	{
		auto expr = &((*(_9228_t))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2249259cb:;
		if (it != expr_end) {
			jule::I64 _9514_i = it - expr->begin();
			jule::Ptr<_20d4de28c_TypeKind> _9521_tk = *it;
			{
				_2240a989c_WriteStr(&_9317_obj, _20ec10b99_kind(_self_, _9521_tk));
				if ((((*(_9228_t))._field_Types.len() - _9514_i) > 1LL)) {
					_2240a9b55_WriteByte(&_9317_obj, ',');
				};
			}
			_iter_next_2249259cb:;
			++it;
			_9514_i++;
			goto _iter_begin_2249259cb;
		}
		_iter_end_2249259cb:;
	};
	_2240a9b55_WriteByte(&_9317_obj, '>');
	return _2240aa194_Str(&_9317_obj);;
}



inline jule::Str _20ec0b953_asSptr(_20ec0a600_typeCoder* _self_, jule::Str _10625_elem) {
	_2240a0ad5_StrBuilder _10717_obj = static__2240a0e04_New(static_cast<jule::I64>((11LL + _10625_elem.len())));;
	_2240a989c_WriteStr(&_10717_obj, jule::Str("jule::Ptr<", 10));
	_2240a989c_WriteStr(&_10717_obj, _10625_elem);
	_2240a9b55_WriteByte(&_10717_obj, '>');
	return _2240aa194_Str(&_10717_obj);;
}



inline jule::Str _20ec0bc94_sptr(_20ec0a600_typeCoder* _self_, jule::Ptr<_20d4eab39_Sptr> _11527_sptr) {
	return _20ec0b953_asSptr(_self_, _20ec10b99_kind(_self_, (*(_11527_sptr))._field_Elem));;
}



inline jule::Str _20ec0c0d5_ptr(_20ec0a600_typeCoder* _self_, jule::Ptr<_20d4ee401_Ptr> _12026_p) {
	;
	if (_20d4eee3a_IsUnsafe(_12026_p.ptr())) {
		return jule::Str("void*", 5);;
	};
	return (_20ec10b99_kind(_self_, (*(_12026_p))._field_Elem) + jule::Str("*", 1));;
}



inline jule::Str _20ec0c426_enumDecl(_20ec0a600_typeCoder* _self_, jule::Ptr<_20d3b85d9_Enum> _12931_e) {
	return _20ec10b99_kind(_self_, (*((*(_12931_e))._field_Kind))._field_Kind);;
}



inline jule::Str _20ec0c767_typeEnumDecl(_20ec0a600_typeCoder* _self_, jule::Ptr<_20d3b9ce4_TypeEnum> _13435_e) {
	return jule::Str("jule::Any", 9);;
}



inline jule::Str _20ec0caa8_asSlice(_20ec0a600_typeCoder* _self_, jule::Ptr<_20d4de28c_TypeKind> _13830_elem) {
	_2240a0ad5_StrBuilder _13917_obj = static__2240a0e04_New(45LL);;
	_2240a989c_WriteStr(&_13917_obj, jule::Str("jule::Slice<", 12));
	_2240a989c_WriteStr(&_13917_obj, _20ec10b99_kind(_self_, _13830_elem));
	_2240a9b55_WriteByte(&_13917_obj, '>');
	return _2240aa194_Str(&_13917_obj);;
}



inline jule::Str _20ec0cde9_slice(_20ec0a600_typeCoder* _self_, jule::Ptr<_20d4eb60c_Slc> _14728_s) {
	return _20ec0caa8_asSlice(_self_, (*(_14728_s))._field_Elem);;
}



inline jule::Str _20ec0d23a_mapType(_20ec0a600_typeCoder* _self_, jule::Ptr<_20d4ecca1_Map> _15230_m) {
	_2240a0ad5_StrBuilder _15317_obj = static__2240a0e04_New(43LL);;
	_2240a989c_WriteStr(&_15317_obj, jule::Str("jule::Map<", 10));
	_2240a989c_WriteStr(&_15317_obj, _20ec10b99_kind(_self_, (*(_15230_m))._field_Key));
	_2240a9b55_WriteByte(&_15317_obj, ',');
	_2240a989c_WriteStr(&_15317_obj, _20ec10b99_kind(_self_, (*(_15230_m))._field_Val));
	_2240a9b55_WriteByte(&_15317_obj, '>');
	return _2240aa194_Str(&_15317_obj);;
}



inline jule::Str _20ec0d57b_traitIdent(_20ec0a600_typeCoder* _self_, jule::Str _16229_ident) {
	_2240a0ad5_StrBuilder _16317_obj = static__2240a0e04_New(static_cast<jule::I64>((13LL + _16229_ident.len())));;
	_2240a989c_WriteStr(&_16317_obj, jule::Str("jule::Trait<", 12));
	_2240a989c_WriteStr(&_16317_obj, _16229_ident);
	_2240a9b55_WriteByte(&_16317_obj, '>');
	return _2240aa194_Str(&_16317_obj);;
}



inline jule::Str _20ec0d8bc_traitDecl(_20ec0a600_typeCoder* _self_, jule::Ptr<_20d3b5dde_Trait> _17128_t) {
	return _20ec0d57b_traitIdent(_self_, static__20ea3ab8e_traitDecl(_17128_t));;
}



inline jule::Str _20ec0dc0d_structure(_20ec0a600_typeCoder* _self_, jule::Ptr<_20d38c58b_Struct> _17628_s) {
	_2240a0ad5_StrBuilder _17717_rep = static__2240a0e04_New(32LL);;
	if (((*(_17628_s))._field_Binded && (!(_20ec17a91_hasDirective(&((*(_17628_s))._field_Directives), jule::Str("typedef", 7)))))) {
		_2240a989c_WriteStr(&_17717_rep, jule::Str("struct ", 7));
	};
	_2240a989c_WriteStr(&_17717_rep, static__20ea3b222_structure(&(_17628_s)));
	return _2240aa194_Str(&_17717_rep);;
}



inline jule::Str _20ec0e04e_structureIns(_20ec0a600_typeCoder* _self_, jule::Ptr<_20d39066b_StructIns> _18635_s) {
	if ((*((*(_18635_s))._field_Decl))._field_Binded) {
		_2240a0ad5_StrBuilder _18821_ident = static__2240a0e04_New(32LL);;
		_2240a989c_WriteStr(&_18821_ident, static__20ea3b4db_structureIns(&(_18635_s)));
		if (((*(_18635_s))._field_Generics.len() > 0LL)) {
			_2240a9b55_WriteByte(&_18821_ident, '<');
			{
				auto expr = &((*(_18635_s))._field_Generics);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_224935bd9:;
				if (it != expr_end) {
					jule::I64 _19222_i = it - expr->begin();
					jule::Ptr<_20d4dc8a6_InsGeneric> _19229_g = *it;
					{
						_2240a989c_WriteStr(&_18821_ident, _20ec10b99_kind(_self_, (*(_19229_g))._field_Kind));
						if ((((*(_18635_s))._field_Generics.len() - _19222_i) > 1LL)) {
							_2240a9b55_WriteByte(&_18821_ident, ',');
						};
					}
					_iter_next_224935bd9:;
					++it;
					_19222_i++;
					goto _iter_begin_224935bd9;
				}
				_iter_end_224935bd9:;
			};
			_2240a9b55_WriteByte(&_18821_ident, '>');
		};
		jule::Ptr<_20d36adb6_Directive> _20017_d = _20ec176c8_findDirective(&((*((*(_18635_s))._field_Decl))._field_Directives), jule::Str("namespace", 9));;
		if ((_20017_d != nullptr)) {
			jule::Str _20225_buf = _2240aa194_Str(&_18821_ident);;
			_2240aa392_Clear(&_18821_ident);
			_2240a989c_WriteStr(&_18821_ident, _20ec07ad6_concatAllParts((*(_20017_d))._field_Args));
			_2240a989c_WriteStr(&_18821_ident, jule::Str("::", 2));
			_2240a989c_WriteStr(&_18821_ident, _20225_buf);
		};
		return _2240aa194_Str(&_18821_ident);;
	};
	return static__20ea3b4db_structureIns(&(_18635_s));;
}



inline jule::Str _20ec0e390_array(_20ec0a600_typeCoder* _self_, jule::Ptr<_20d4ed92d_Arr> _21428_a) {
	_2240a0ad5_StrBuilder _21517_obj = static__2240a0e04_New(45LL);;
	_2240a989c_WriteStr(&_21517_obj, jule::Str("jule::Array<", 12));
	_2240a989c_WriteStr(&_21517_obj, _20ec10b99_kind(_self_, (*(_21428_a))._field_Elem));
	_2240a9b55_WriteByte(&_21517_obj, ',');
	_2240a989c_WriteStr(&_21517_obj, _20b055388_Itoa((*(_21428_a))._field_N));
	_2240a9b55_WriteByte(&_21517_obj, '>');
	return _2240aa194_Str(&_21517_obj);;
}



inline jule::Str _20ec0ea22_paramIns(_20ec0a600_typeCoder* _self_, jule::Ptr<_20d3a4a9d_ParamIns>* _24132_p) {
	_2240a0ad5_StrBuilder _24217_obj = static__2240a0e04_New(32LL);;
	if ((*((*((*(_24132_p))))._field_Decl))._field_Variadic) {
		_2240a989c_WriteStr(&_24217_obj, jule::Str("jule::Slice<", 12));
		_2240a989c_WriteStr(&_24217_obj, _20ec10b99_kind(_self_, (*((*(_24132_p))))._field_Kind));
		_2240a9b55_WriteByte(&_24217_obj, '>');
	} else {
		_2240a989c_WriteStr(&_24217_obj, _20ec10b99_kind(_self_, (*((*(_24132_p))))._field_Kind));
	};
	if ((*((*((*(_24132_p))))._field_Decl))._field_Reference) {
		_2240a9b55_WriteByte(&_24217_obj, '*');
	};
	return _2240aa194_Str(&_24217_obj);;
}



inline void _20ec101c6_funcInsResult(_20ec0a600_typeCoder* _self_, _2240a0ad5_StrBuilder* _27137_s, jule::Ptr<_20d3a5a49_FnIns>* _27157_f) {
	if (_20d3a30b8_IsVoid((*((*(_27157_f))))._field_Decl.ptr())) {
		if ((*((*((*(_27157_f))))._field_Decl))._field_Exceptional) {
			_2240a989c_WriteStr(_27137_s, jule::Str("jule::VoidExceptional", 21));
		} else {
			_2240a989c_WriteStr(_27137_s, jule::Str("void", 4));
		};
		return;;
	};
	if ((*((*((*(_27157_f))))._field_Decl))._field_Exceptional) {
		_2240a989c_WriteStr(_27137_s, jule::Str("jule::Exceptional<", 18));
		_20ec1595c_codeMut1((*(_self_))._field_rc.ptr(), _27137_s, &((*((*(_27157_f))))._field_Result));
		_2240a9b55_WriteByte(_27137_s, '>');
		return;;
	};
	_20ec1595c_codeMut1((*(_self_))._field_rc.ptr(), _27137_s, &((*((*(_27157_f))))._field_Result));
}



inline jule::Str _20ec10517_anonFunc(_20ec0a600_typeCoder* _self_, jule::Ptr<_20d3a5a49_FnIns> _28931_f) {
	if ((((*(_28931_f))._field_Result != nullptr) && (_20d4e39ab_Tup((*(_28931_f))._field_Result.ptr()) != nullptr))) {
		_20ebeb9ba_pushResultIns((*(_self_))._field_oc, &(_28931_f));
	};
	_2240a0ad5_StrBuilder _29317_decl = static__2240a0e04_New(20LL);;
	_20ec101c6_funcInsResult(_self_, &(_29317_decl), &(_28931_f));
	_2240a9b55_WriteByte(&_29317_decl, '(');
	if (((*(_28931_f))._field_Params.len() > 0LL)) {
		{
			auto expr = &((*(_28931_f))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2249491e7:;
			if (it != expr_end) {
				jule::I64 _29718_i = it - expr->begin();
				jule::Ptr<_20d3a4a9d_ParamIns> _29725_param = *it;
				{
					if (_20d3a178c_IsSelf((*(_29725_param))._field_Decl.ptr())) {
						goto _iter_next_2249491e7;
					};
					_2240a989c_WriteStr(&_29317_decl, _20ec0ea22_paramIns(_self_, &(_29725_param)));
					if ((((*(_28931_f))._field_Params.len() - _29718_i) > 1LL)) {
						_2240a9b55_WriteByte(&_29317_decl, ',');
					};
				}
				_iter_next_2249491e7:;
				++it;
				_29718_i++;
				goto _iter_begin_2249491e7;
			}
			_iter_end_2249491e7:;
		};
	} else {
		_2240a989c_WriteStr(&_29317_decl, jule::Str("void", 4));
	};
	_2240a9b55_WriteByte(&_29317_decl, ')');
	return _2240aa194_Str(&_29317_decl);;
}



inline jule::Str _20ec10858_func(_20ec0a600_typeCoder* _self_, jule::Ptr<_20d3a5a49_FnIns> _31427_f) {
	_2240a0ad5_StrBuilder _31517_obj = static__2240a0e04_New(42LL);;
	_2240a989c_WriteStr(&_31517_obj, jule::Str("jule::Fn<", 9));
	_2240a989c_WriteStr(&_31517_obj, _20ec10517_anonFunc(_self_, _31427_f));
	_2240a9b55_WriteByte(&_31517_obj, '>');
	return _2240aa194_Str(&_31517_obj);;
}



inline jule::Str _20ec10b99_kind(_20ec0a600_typeCoder* _self_, jule::Ptr<_20d4de28c_TypeKind> _32327_k) {
	{
		
		if ((_20d4e3208_Struct(_32327_k.ptr()) != nullptr)) {
			_case_begin_2249509b2:;
			{
				return _20ec0e04e_structureIns(_self_, _20d4e3208_Struct(_32327_k.ptr()));;
			}
		}
		else if (_20d4e00e5_Binded(_32327_k.ptr())) {
			_case_begin_224950a39:;
			{
				return (*(_32327_k))._field_BindIdent;;
			}
		}
		else if ((_20d4e1b85_Prim(_32327_k.ptr()) != nullptr)) {
			_case_begin_224950ab1:;
			{
				return _20ec0b2c1_prim(_self_, _20d4e1b85_Prim(_32327_k.ptr()));;
			}
		}
		else if ((_20d4e39ab_Tup(_32327_k.ptr()) != nullptr)) {
			_case_begin_224950b38:;
			{
				return _20ec0b612_tuple(_self_, _20d4e39ab_Tup(_32327_k.ptr()));;
			}
		}
		else if ((_20d4e1e1b_Sptr(_32327_k.ptr()) != nullptr)) {
			_case_begin_224950bb0:;
			{
				return _20ec0bc94_sptr(_self_, _20d4e1e1b_Sptr(_32327_k.ptr()));;
			}
		}
		else if ((_20d4e21a2_Ptr(_32327_k.ptr()) != nullptr)) {
			_case_begin_224950c37:;
			{
				return _20ec0c0d5_ptr(_self_, _20d4e21a2_Ptr(_32327_k.ptr()));;
			}
		}
		else if ((_20d4e2438_Enum(_32327_k.ptr()) != nullptr)) {
			_case_begin_224950cae:;
			{
				return _20ec0c426_enumDecl(_self_, _20d4e2438_Enum(_32327_k.ptr()));;
			}
		}
		else if ((_20d4e26be_TypeEnum(_32327_k.ptr()) != nullptr)) {
			_case_begin_224950d36:;
			{
				return _20ec0c767_typeEnumDecl(_self_, _20d4e26be_TypeEnum(_32327_k.ptr()));;
			}
		}
		else if ((_20d4e2bdb_Slc(_32327_k.ptr()) != nullptr)) {
			_case_begin_224950dad:;
			{
				return _20ec0cde9_slice(_self_, _20d4e2bdb_Slc(_32327_k.ptr()));;
			}
		}
		else if ((_20d4e3725_Map(_32327_k.ptr()) != nullptr)) {
			_case_begin_224950e35:;
			{
				return _20ec0d23a_mapType(_self_, _20d4e3725_Map(_32327_k.ptr()));;
			}
		}
		else if ((_20d4e348e_Trait(_32327_k.ptr()) != nullptr)) {
			_case_begin_224950eac:;
			{
				return _20ec0d8bc_traitDecl(_self_, _20d4e348e_Trait(_32327_k.ptr()));;
			}
		}
		else if ((_20d4e2955_Arr(_32327_k.ptr()) != nullptr)) {
			_case_begin_224951034:;
			{
				return _20ec0e390_array(_self_, _20d4e2955_Arr(_32327_k.ptr()));;
			}
		}
		else if ((_20d4e2e72_Fn(_32327_k.ptr()) != nullptr)) {
			_case_begin_2249510ab:;
			{
				return _20ec10858_func(_self_, _20d4e2e72_Fn(_32327_k.ptr()));;
			}
		}
		_match_end_2249507d6:;
	};
	{
		auto &_match_expr{ (*(_32327_k))._field_Kind };
		
		if (_match_expr.type_is(true, 27)) {
			_case_begin_224951166:;
			{
				return (*((*(_32327_k))._field_Kind.cast_ptr<_20ec099ea_customType>(27)))._field_kind;;
			}
		}
		else {
			_case_begin_224959306:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);;
			}
		}
		_match_end_2249592a1:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20ec0a600_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "rc:" << _Src._field_rc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20ec133c7_resultCoder> static__20ec138a0_new(jule::Ptr<_20ec0a600_typeCoder>* _37724_tc) {
	return jule::new_ptr<_20ec133c7_resultCoder>(_20ec133c7_resultCoder{._field_tc=(*(_37724_tc))});;
}



inline void _20ec13c13_ptr(_20ec133c7_resultCoder* _self_, _2240a0ad5_StrBuilder* _38127_s, jule::Ptr<_20d4ee401_Ptr> _38146_p) {
	_2240a989c_WriteStr(_38127_s, jule::Str("p", 1));
	_20ec155e9_codeMut(_self_, _38127_s, &((*(_38146_p))._field_Elem));
}



inline void _20ec14076_sptr(_20ec133c7_resultCoder* _self_, _2240a0ad5_StrBuilder* _38628_s, jule::Ptr<_20d4eab39_Sptr> _38647_p) {
	_2240a989c_WriteStr(_38628_s, jule::Str("x", 1));
	_20ec155e9_codeMut(_self_, _38628_s, &((*(_38647_p))._field_Elem));
}



inline void _20ec143d9_mapType(_20ec133c7_resultCoder* _self_, _2240a0ad5_StrBuilder* _39131_s, jule::Ptr<_20d4ecca1_Map> _39150_p) {
	_2240a989c_WriteStr(_39131_s, jule::Str("m", 1));
	_20ec155e9_codeMut(_self_, _39131_s, &((*(_39150_p))._field_Key));
	_20ec155e9_codeMut(_self_, _39131_s, &((*(_39150_p))._field_Val));
}



inline void _20ec1474c_slice(_20ec133c7_resultCoder* _self_, _2240a0ad5_StrBuilder* _39729_s, jule::Ptr<_20d4eb60c_Slc> _39748_slc) {
	_2240a989c_WriteStr(_39729_s, jule::Str("s", 1));
	_20ec155e9_codeMut(_self_, _39729_s, &((*(_39748_slc))._field_Elem));
}



inline void _20ec14ab0_arr(_20ec133c7_resultCoder* _self_, _2240a0ad5_StrBuilder* _40227_s, jule::Ptr<_20d4ed92d_Arr> _40246_arr) {
	_2240a989c_WriteStr(_40227_s, jule::Str("a", 1));
	_2240a989c_WriteStr(_40227_s, _20b0550be_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>((*(_40246_arr))._field_N)), 16LL));
	_20ec155e9_codeMut(_self_, _40227_s, &((*(_40246_arr))._field_Elem));
}



inline void _20ec14e23_func(_20ec133c7_resultCoder* _self_, _2240a0ad5_StrBuilder* _40828_s, jule::Ptr<_20d3a5a49_FnIns> _40847_f) {
	_2240a989c_WriteStr(_40828_s, jule::Str("f", 1));
	{
		auto expr = &((*(_40847_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_224961484:;
		if (it != expr_end) {
			jule::Ptr<_20d3a4a9d_ParamIns> _41021_p = *it;
			{
				if ((*((*(_41021_p))._field_Decl))._field_Reference) {
					_2240a989c_WriteStr(_40828_s, jule::Str("r", 1));
				};
				_20ec155e9_codeMut(_self_, _40828_s, &((*(_41021_p))._field_Kind));
			}
			_iter_next_224961484:;
			++it;
			goto _iter_begin_224961484;
		}
		_iter_end_224961484:;
	};
	if (((*(_40847_f))._field_Result != nullptr)) {
		_20ec155e9_codeMut(_self_, _40828_s, &((*(_40847_f))._field_Result));
	};
}



inline void _20ec15286_tup(_20ec133c7_resultCoder* _self_, _2240a0ad5_StrBuilder* _42127_s, jule::Ptr<_20d4ec201_Tuple> _42146_tup) {
	{
		auto expr = &((*(_42146_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_224963b29:;
		if (it != expr_end) {
			jule::Ptr<_20d4de28c_TypeKind> _42221_t = *it;
			{
				_2240a989c_WriteStr(_42127_s, jule::Str("__jule_tuple_", 13));
				_20ec155e9_codeMut(_self_, _42127_s, &(_42221_t));
			}
			_iter_next_224963b29:;
			++it;
			goto _iter_begin_224963b29;
		}
		_iter_end_224963b29:;
	};
}



inline void _20ec155e9_codeMut(_20ec133c7_resultCoder* _self_, _2240a0ad5_StrBuilder* _42831_s, jule::Ptr<_20d4de28c_TypeKind>* _42851_t) {
	{
		auto &_match_expr{ (*((*(_42851_t))))._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_224964d8e:;
			{
				_20ec13c13_ptr(_self_, _42831_s, (*((*(_42851_t))))._field_Kind.cast_ptr<_20d4ee401_Ptr>(26));
			}
		}
		else if (_match_expr.type_is(true, 21)) {
			_case_begin_224965257:;
			{
				_20ec14076_sptr(_self_, _42831_s, (*((*(_42851_t))))._field_Kind.cast_ptr<_20d4eab39_Sptr>(21));
			}
		}
		else if (_match_expr.type_is(true, 24)) {
			_case_begin_2249652bd:;
			{
				_20ec143d9_mapType(_self_, _42831_s, (*((*(_42851_t))))._field_Kind.cast_ptr<_20d4ecca1_Map>(24));
			}
		}
		else if (_match_expr.type_is(true, 22)) {
			_case_begin_224965334:;
			{
				_20ec1474c_slice(_self_, _42831_s, (*((*(_42851_t))))._field_Kind.cast_ptr<_20d4eb60c_Slc>(22));
			}
		}
		else if (_match_expr.type_is(true, 25)) {
			_case_begin_2249653ab:;
			{
				_20ec14ab0_arr(_self_, _42831_s, (*((*(_42851_t))))._field_Kind.cast_ptr<_20d4ed92d_Arr>(25));
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_224965840:;
			{
				_20ec14e23_func(_self_, _42831_s, (*((*(_42851_t))))._field_Kind.cast_ptr<_20d3a5a49_FnIns>(1));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_2249658b7:;
			{
				jule::Ptr<_20d3b85d9_Enum> _44317_te = (*((*(_42851_t))))._field_Kind.cast_ptr<_20d3b85d9_Enum>(3);;
				_2240a989c_WriteStr(_42831_s, static__20ea39e13_toOut(&((*(_44317_te))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_44317_te))));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_22496593e:;
			{
				jule::Ptr<_20d3b9ce4_TypeEnum> _44617_te = (*((*(_42851_t))))._field_Kind.cast_ptr<_20d3b9ce4_TypeEnum>(4);;
				_2240a989c_WriteStr(_42831_s, static__20ea39e13_toOut(&((*(_44617_te))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_44617_te))));
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_2249659b6:;
			{
				jule::Ptr<_20d39066b_StructIns> _44921_si = (*((*(_42851_t))))._field_Kind.cast_ptr<_20d39066b_StructIns>(0);;
				_2240a989c_WriteStr(_42831_s, static__20ea3b4db_structureIns(&(_44921_si)));
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_224965a3d:;
			{
				jule::Ptr<_20d3b5dde_Trait> _45221_trt = (*((*(_42851_t))))._field_Kind.cast_ptr<_20d3b5dde_Trait>(2);;
				_2240a989c_WriteStr(_42831_s, static__20ea3ab8e_traitDecl(_45221_trt));
			}
		}
		else if (_match_expr.type_is(true, 20)) {
			_case_begin_224965ab5:;
			{
				_2240a989c_WriteStr(_42831_s, (*((*((*(_42851_t))))._field_Kind.cast_ptr<_20d4e710d_Prim>(20)))._field_Kind);
			}
		}
		else if (_match_expr.type_is(true, 23)) {
			_case_begin_224965b3c:;
			{
				_20ec15286_tup(_self_, _42831_s, (*((*(_42851_t))))._field_Kind.cast_ptr<_20d4ec201_Tuple>(23));
			}
		}
		else {
			_case_begin_2249651e1:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:459:13"));;
			}
		}
		_match_end_22496518b:;
	};
}



inline void _20ec1595c_codeMut1(_20ec133c7_resultCoder* _self_, _2240a0ad5_StrBuilder* _46332_s, jule::Ptr<_20d4de28c_TypeKind>* _46352_t) {
	jule::Ptr<_20d4ec201_Tuple> _46417_tup = _20d4e39ab_Tup((*(_46352_t)).ptr());;
	if ((_46417_tup != nullptr)) {
		_20ec15286_tup(_self_, _46332_s, _46417_tup);
	} else {
		_2240a989c_WriteStr(_46332_s, _20ec10b99_kind((*(_self_))._field_tc.ptr(), (*(_46352_t))));
	};
}



inline jule::Str _20ec15c6a_code(_20ec133c7_resultCoder* _self_, jule::Ptr<_20d4de28c_TypeKind>* _47228_t) {
	_2240a0ad5_StrBuilder _47317_s = static__2240a0e04_New(20LL);;
	_20ec155e9_codeMut(_self_, &(_47317_s), _47228_t);
	return _2240aa194_Str(&_47317_s);;
}







std::ostream &operator<<(std::ostream &_Stream, _20ec133c7_resultCoder _Src) {
	_Stream << "resultCoder{";
	_Stream << "tc:" << _Src._field_tc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _224971e45_Name(_2249720ee_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _2249723da_What(_2249720ee_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _22497252d_Reset(_2249720ee_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _224972671_Short(_2249720ee_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _2249720ee_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _224975597_Name(_224975960_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _2249756da_What(_224975960_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _224975c4b_Reset(_224975960_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _224975d8e_Short(_224975960_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _224975960_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _224978c93_Name(_22497915b_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _224978dd6_What(_22497915b_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _224979447_Reset(_22497915b_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _22497958a_Short(_22497915b_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _22497915b_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _22497c4d3_Name(_22497c89b_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _22497c626_What(_22497c89b_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _22497cb87_Reset(_22497c89b_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _22497ccca_Short(_22497c89b_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _22497c89b_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _224980bce_Name(_224981097_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _224980d22_What(_224981097_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _224981383_Reset(_224981097_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _2249814c6_Short(_224981097_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _224981097_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20ec801be_FlagSet> static__20ec804aa_New(void) {
	return jule::new_ptr<_20ec801be_FlagSet>(_20ec801be_FlagSet{._field_flags=jule::Slice<jule::Trait<_20ec7d61d_CommonFlag>>::alloc(0LL, 20LL)});;
}



inline jule::Trait<_20ec7d61d_CommonFlag> _20ec8092d_FindFlag(_20ec801be_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22498a832:;
		if (it != expr_end) {
			jule::Trait<_20ec7d61d_CommonFlag> _7221_flag = *it;
			{
				if ((_20ec7d61d_CommonFlag_mptr_data[(_7221_flag).type_offset]._20ec4c07b_Name(_7221_flag) == _7127_name)) {
					return _7221_flag;;
				};
			}
			_iter_next_22498a832:;
			++it;
			goto _iter_begin_22498a832;
		}
		_iter_end_22498a832:;
	};
	return nullptr;;
}



inline jule::Trait<_20ec7d61d_CommonFlag> _20ec80c6e_FindFlagShort(_20ec801be_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22498c13b:;
		if (it != expr_end) {
			jule::Trait<_20ec7d61d_CommonFlag> _8221_flag = *it;
			{
				if ((_20ec7d61d_CommonFlag_mptr_data[(_8221_flag).type_offset]._20ec4c224_Short(_8221_flag) == _8132_name)) {
					return _8221_flag;;
				};
			}
			_iter_next_22498c13b:;
			++it;
			goto _iter_begin_22498c13b;
		}
		_iter_end_22498c13b:;
	};
	return nullptr;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _20ec81346_Parse(_20ec801be_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_20ec82b50_argParser _11617_ap = _20ec82b50_argParser{._field_set=(*(_self_)), ._field_args=_11524_args, };;
	({
		auto except = _20ec8414b_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(), _11617_ap._field_content);;
}



inline jule::Ptr<_224981097_Flag> _2249ed675_addFlagCommon(_20ec801be_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_2249eee3a:;
			{
				goto _match_end_2249eedc4;
			}
		}
		_match_end_2249eedc4:;
	};
	if ((_20ec8092d_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_20ec80c6e_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_224981097_Flag> _14817_flag = jule::new_ptr<_224981097_Flag>(_224981097_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait<_20ec7d61d_CommonFlag>> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait<_20ec7d61d_CommonFlag>(_14817_flag, 4)); };
	return _14817_flag;;
}

inline jule::Ptr<_22497c89b_Flag> _224a06c88_addFlagCommon(_20ec801be_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_224a08509:;
			{
				goto _match_end_224a08493;
			}
		}
		_match_end_224a08493:;
	};
	if ((_20ec8092d_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_20ec80c6e_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_22497c89b_Flag> _14817_flag = jule::new_ptr<_22497c89b_Flag>(_22497c89b_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait<_20ec7d61d_CommonFlag>> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait<_20ec7d61d_CommonFlag>(_14817_flag, 3)); };
	return _14817_flag;;
}



inline void _2249eb5eb_AddVar(_20ec801be_FlagSet* _self_, jule::Ptr<jule::Str> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_224981097_Flag> _17617_flag = _2249ed675_addFlagCommon(_self_, _17541_name, _17552_short, _17565_what);;
	(*(_17617_flag))._field_default=(*(_17532_var));
	(*(_17617_flag))._field_data=_17532_var;
}

inline void _224a04c53_AddVar(_20ec801be_FlagSet* _self_, jule::Ptr<jule::Bool> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_22497c89b_Flag> _17617_flag = _224a06c88_addFlagCommon(_self_, _17541_name, _17552_short, _17565_what);;
	(*(_17617_flag))._field_default=(*(_17532_var));
	(*(_17617_flag))._field_data=_17532_var;
}







std::ostream &operator<<(std::ostream &_Stream, _20ec801be_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_i64__jule_tuple_bool _224994044_parseInteger(_20ec82b50_argParser* _self_, jule::Str* _19031_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)> _19039_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((*(_19031_s)).empty()) {
			_case_begin_2249969e7:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_2248aa0ae_HasPrefix((*(_19031_s)), jule::Str("0x", 2))) {
			_case_begin_224997069:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_2248aa0ae_HasPrefix((*(_19031_s)), jule::Str("0b", 2))) {
			_case_begin_224996d49:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_2248aa0ae_HasPrefix((*(_19031_s)), jule::Str("0o", 2))) {
			_case_begin_224996db0:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_19031_s))[0LL] == '0')) {
			_case_begin_2249966b7:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_224996651:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_224996585:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _22499b8ed_parseInteger(_20ec82b50_argParser* _self_, jule::Str* _19031_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)> _19039_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((*(_19031_s)).empty()) {
			_case_begin_22499e35c:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_2248aa0ae_HasPrefix((*(_19031_s)), jule::Str("0x", 2))) {
			_case_begin_22499e8ce:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_2248aa0ae_HasPrefix((*(_19031_s)), jule::Str("0b", 2))) {
			_case_begin_22499e6ae:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_2248aa0ae_HasPrefix((*(_19031_s)), jule::Str("0o", 2))) {
			_case_begin_22499e725:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_19031_s))[0LL] == '0')) {
			_case_begin_22499e02c:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_22499deb6:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_22499ddea:;
	};
	return __jule_func_result;;
}



inline jule::Str _20ec83469_getData(_20ec82b50_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _20ec836de_processFlag(_20ec82b50_argParser* _self_, jule::Trait<_20ec7d61d_CommonFlag>* _21735_flag) {
	{
		auto &_match_expr{ (*(_21735_flag)) };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_224991261:;
			{
				jule::Ptr<_22497c89b_Flag> _22021_bf = (*(_21735_flag)).cast_ptr<_22497c89b_Flag>(3);;
				(*((*(_22021_bf))._field_data))=(!((*(_22021_bf))._field_default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_22499120b:;
	};
	jule::Str _22513_data = _20ec83469_getData(_self_);;
	if (_22513_data.empty()) {
		return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _20ec7d61d_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._20ec4c07b_Name((*(_21735_flag)))) + jule::Str(": expression missing", 20)), &__jule_any_type4));
	};
	{
		auto &_match_expr{ (*(_21735_flag)) };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_224993142:;
			{
				jule::Ptr<_2249720ee_Flag> _23221_intf = (*(_21735_flag)).cast_ptr<_2249720ee_Flag>(0);;
				jule::Bool _23332_ok = false;;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _224994044_parseInteger(_self_, &(_22513_data), jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _23370_s, jule::I64 _23378_base) mutable -> __jule_tuple_i64__jule_tuple_bool {
						__jule_tuple_i64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::I64>(({
							auto except = _20b043a19_ParseInt(_23370_s, _23378_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LL;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*((*(_23221_intf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23332_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23332_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _20ec7d61d_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._20ec4c07b_Name((*(_21735_flag)))) + jule::Str(": expression must be valid signed integer", 41)), &__jule_any_type4));
				};
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_2249931a8:;
			{
				jule::Ptr<_224975960_Flag> _24021_uintf = (*(_21735_flag)).cast_ptr<_224975960_Flag>(1);;
				jule::Bool _24133_ok = false;;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _22499b8ed_parseInteger(_self_, &(_22513_data), jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _24171_s, jule::I64 _24179_base) mutable -> __jule_tuple_u64__jule_tuple_bool {
						__jule_tuple_u64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(({
							auto except = _20b043563_ParseUint(_24171_s, _24179_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LLU;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*((*(_24021_uintf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_24133_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_24133_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _20ec7d61d_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._20ec4c07b_Name((*(_21735_flag)))) + jule::Str(": expression must be valid unsigned integer", 43)), &__jule_any_type4));
				};
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_22499321e:;
			{
				jule::Ptr<_22497915b_Flag> _24821_ff = (*(_21735_flag)).cast_ptr<_22497915b_Flag>(2);;
				(*((*(_24821_ff))._field_data))=static_cast<jule::F64>(({
					auto except = _20b04a46b_ParseFloat(_22513_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _20ec7d61d_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._20ec4c07b_Name((*(_21735_flag)))) + jule::Str(": expression must be valid floating-point", 41)), &__jule_any_type4));
					} 0;});
				}));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_224993285:;
			{
				(*((*((*(_21735_flag)).cast_ptr<_224981097_Flag>(4)))._field_data))=_22513_data;
			}
		}
		_match_end_2249927e5:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _20ec83997_singleDash(_20ec82b50_argParser* _self_, jule::Str* _25730_arg) {
	if (((*(_25730_arg)).len() == 1LL)) {
		return jule::VoidExceptional(jule::Any(((*(_25730_arg)) + jule::Str(": missing argument", 18)), &__jule_any_type4));
	};
	jule::Slice<jule::I32> _26113_rarg = static_cast<jule::Slice<jule::I32>>((*(_25730_arg))).slice(1LL);;
	{
		auto expr = &(_26113_rarg);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2249a62dc:;
		if (it != expr_end) {
			jule::I32 *_26216_r = it;
			{
				jule::Trait<_20ec7d61d_CommonFlag> _26321_flag = _20ec80c6e_FindFlagShort(&(*(_self_))._field_set, (*(_26216_r)));;
				if ((_26321_flag == nullptr)) {
					return jule::VoidExceptional(jule::Any((((*(_25730_arg)) + jule::Str(": flag is not exist: ", 21)) + jule::Str::from_rune((*(_26216_r)))), &__jule_any_type4));
				};
				({
					auto except = _20ec836de_processFlag(_self_, &(_26321_flag));
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_2249a62dc:;
			++it;
			goto _iter_begin_2249a62dc;
		}
		_iter_end_2249a62dc:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _20ec83c50_doubleDash(_20ec82b50_argParser* _self_, jule::Str* _27230_arg) {
	if (((*(_27230_arg)).len() == 2LL)) {
		return jule::VoidExceptional(jule::Any(((*(_27230_arg)) + jule::Str(": missing argument", 18)), &__jule_any_type4));
	};
	jule::Trait<_20ec7d61d_CommonFlag> _27617_flag = _20ec8092d_FindFlag(&(*(_self_))._field_set, (*(_27230_arg)).slice(2LL));;
	if ((_27617_flag == nullptr)) {
		return jule::VoidExceptional(jule::Any(((*(_27230_arg)) + jule::Str(": flag is not exist", 19)), &__jule_any_type4));
	};
	({
		auto except = _20ec836de_processFlag(_self_, &(_27617_flag));
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _20ec83e4d_tryArg(_20ec82b50_argParser* _self_) {
	jule::Str _28413_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_28413_arg[0LL] == '-')) {
		if (((_28413_arg.len() > 1LL) && (_28413_arg[1LL] == '-'))) {
			({
				auto except = _20ec83c50_doubleDash(_self_, &(_28413_arg));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _20ec83997_singleDash(_self_, &(_28413_arg));
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_28413_arg); };
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _20ec8414b_parse(_20ec82b50_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _20ec83e4d_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_2249ac36a:;
	}
	_iter_end_2249ac36a:;;
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _20ec82b50_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20ebea2d2_ObjectCoder> static__20ebea6cd_New(jule::Ptr<_20e027be8_IR>* _9524_ir, _20ebe86dc_SerializationInfo _9533_info) {
	jule::Ptr<_20ebea2d2_ObjectCoder> _9617_oc = jule::new_ptr<_20ebea2d2_ObjectCoder>(_20ebea2d2_ObjectCoder{._field_ir=(*(_9524_ir)), ._field_info=_9533_info, });;
	(*(_9617_oc))._field_ec=static__20ea24b67_new(&(_9617_oc));
	(*(_9617_oc))._field_sc=static__20ea1aba2_new(&(_9617_oc));
	(*(_9617_oc))._field_tc=static__20ec0ab3e_new(&(_9617_oc));
	(*(_9617_oc))._field_dc=static__20ea351c7_new(_9617_oc);
	return _9617_oc;;
}



inline void _20ebea986_write(jule::Ptr<_20ebea2d2_ObjectCoder> _self_, jule::Str _10725_s) {
	_2240a989c_WriteStr(&(*(_self_))._field_Obj, _10725_s);
}



inline void _20ebeab84_addIndent(jule::Ptr<_20ebea2d2_ObjectCoder> _self_) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_indentBuffer; __jule_push_dest.push(9LLU); };
}



inline void _20ebead82_doneIndent(jule::Ptr<_20ebea2d2_ObjectCoder> _self_) {
	(*(_self_))._field_indentBuffer=(*(_self_))._field_indentBuffer.slice(0LL, ((*(_self_))._field_indentBuffer.len() - 1LL));
}



inline void _20ebeb080_indent(jule::Ptr<_20ebea2d2_ObjectCoder> _self_) {
	_2240a95e4_Write(&(*(_self_))._field_Obj, (*(_self_))._field_indentBuffer);
}



inline jule::I64 _20ebeb3c1_findAnyType(jule::Ptr<_20ebea2d2_ObjectCoder> _self_, jule::Ptr<_20d4de28c_TypeKind>* _12636_t) {
	{
		auto expr = &((*(_self_))._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2116227c9:;
		if (it != expr_end) {
			jule::I64 _12714_i = it - expr->begin();
			jule::Ptr<_20d4de28c_TypeKind> _12721_at = *it;
			{
				if (_20d4de996_Equal(_12721_at, (*(_12636_t)))) {
					return _12714_i;;
				};
			}
			_iter_next_2116227c9:;
			++it;
			_12714_i++;
			goto _iter_begin_2116227c9;
		}
		_iter_end_2116227c9:;
	};
	return -1LL;;
}



inline jule::I64 _20ebeb712_pushAnyType(jule::Ptr<_20ebea2d2_ObjectCoder> _self_, jule::Ptr<_20d4de28c_TypeKind> _13535_t) {
	if ((_20d4e2438_Enum(_13535_t.ptr()) != nullptr)) {
		_13535_t=(*((*(_20d4e2438_Enum(_13535_t.ptr())))._field_Kind))._field_Kind;
	};
	jule::I64 _13917_i = _20ebeb3c1_findAnyType(_self_, &(_13535_t));;
	if ((_13917_i != -1LL)) {
		return _13917_i;;
	};
	_13917_i=static_cast<jule::I64>((*(_self_))._field_anyTypeMap.len());
	{ jule::Slice<jule::Ptr<_20d4de28c_TypeKind>> &__jule_push_dest = (*(_self_))._field_anyTypeMap; __jule_push_dest.push(_13535_t); };
	jule::Str _14513_si = _20b055388_Itoa(_13917_i);;
	if ((_20d4e1e1b_Sptr(_13535_t.ptr()) != nullptr)) {
		jule::Str _14717_elem_kind = _20ec10b99_kind((*(_self_))._field_tc.ptr(), (*(_20d4e1e1b_Sptr(_13535_t.ptr())))._field_Elem);;
		jule::Str _14817_kind = _20ec0b953_asSptr((*(_self_))._field_tc.ptr(), _14717_elem_kind);;
		_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str("void __jule_any_type", 20));
		_2240a989c_WriteStr(&(*(_self_))._field_anyObj, _14513_si);
		_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64));
		_2240a989c_WriteStr(&(*(_self_))._field_anyObj, _14717_elem_kind);
		_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str(">().dealloc(); }\n", 17));
		_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str("struct jule::Any::Type ", 23));
		_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str("__jule_any_type", 15));
		_2240a989c_WriteStr(&(*(_self_))._field_anyObj, _14513_si);
		_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str("{.dealloc=__jule_any_type", 25));
		_2240a989c_WriteStr(&(*(_self_))._field_anyObj, _14513_si);
		_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str("_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};\n", 58));
		_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str("jule::Bool __jule_any_type", 26));
		_2240a989c_WriteStr(&(*(_self_))._field_anyObj, _14513_si);
		_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str("_compare(const jule::Any &any, const ", 37));
		_2240a989c_WriteStr(&(*(_self_))._field_anyObj, _14817_kind);
		_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str(" &other) { return any.type == &__jule_any_type", 46));
		_2240a989c_WriteStr(&(*(_self_))._field_anyObj, _14513_si);
		_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str(" && jule::ptr_equal(any.data.alloc, other.alloc); }\n", 52));
	} else {
		jule::Bool _17417_comparable = _20d4e0898_Comparable(_13535_t.ptr());;
		jule::Str _17517_kind = _20ec10b99_kind((*(_self_))._field_tc.ptr(), _13535_t);;
		if (_17517_kind.equal("[<unimplemented_type_kind>]", 27)) {
			jule::outln(_20d4de655_Str(_13535_t.ptr()));
		};
		_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str("void __jule_any_type", 20));
		_2240a989c_WriteStr(&(*(_self_))._field_anyObj, _14513_si);
		_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64));
		_2240a989c_WriteStr(&(*(_self_))._field_anyObj, _17517_kind);
		_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str(">().dealloc(); }\n", 17));
		if (_17417_comparable) {
			_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str("jule::Bool __jule_any_type", 26));
			_2240a989c_WriteStr(&(*(_self_))._field_anyObj, _14513_si);
			_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str("_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<", 66));
			_2240a989c_WriteStr(&(*(_self_))._field_anyObj, _17517_kind);
			_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str("*>(alloc) == *reinterpret_cast<", 31));
			_2240a989c_WriteStr(&(*(_self_))._field_anyObj, _17517_kind);
			_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str("*>(other); }\n", 13));
		};
		_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str("jule::Str __jule_any_type", 25));
		_2240a989c_WriteStr(&(*(_self_))._field_anyObj, _14513_si);
		_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str("_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<", 76));
		if ((_20d4e21a2_Ptr(_13535_t.ptr()) == nullptr)) {
			_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str("const ", 6));
			_2240a989c_WriteStr(&(*(_self_))._field_anyObj, _17517_kind);
		} else {
			_2240a989c_WriteStr(&(*(_self_))._field_anyObj, _17517_kind);
			_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str("* const", 7));
		};
		_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str("*>(alloc)); }\n", 14));
		_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str("struct jule::Any::Type ", 23));
		_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str("__jule_any_type", 15));
		_2240a989c_WriteStr(&(*(_self_))._field_anyObj, _14513_si);
		_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str("{.dealloc=__jule_any_type", 25));
		_2240a989c_WriteStr(&(*(_self_))._field_anyObj, _14513_si);
		_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str("_dealloc, ", 10));
		if (_17417_comparable) {
			_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str(".eq=__jule_any_type", 19));
			_2240a989c_WriteStr(&(*(_self_))._field_anyObj, _14513_si);
			_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str("_eq, ", 5));
		};
		_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str(".to_str=__jule_any_type", 23));
		_2240a989c_WriteStr(&(*(_self_))._field_anyObj, _14513_si);
		_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str("_to_str};\n", 10));
		if (_17417_comparable) {
			_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str("jule::Bool __jule_any_type", 26));
			_2240a989c_WriteStr(&(*(_self_))._field_anyObj, _14513_si);
			_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str("_compare(const jule::Any &any, const ", 37));
			_2240a989c_WriteStr(&(*(_self_))._field_anyObj, _17517_kind);
			_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str(" &other) { return any.type == &__jule_any_type", 46));
			_2240a989c_WriteStr(&(*(_self_))._field_anyObj, _14513_si);
			_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str(" && __jule_any_type", 19));
			_2240a989c_WriteStr(&(*(_self_))._field_anyObj, _14513_si);
			_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str("_eq(any.data.alloc, (void*)&other); }\n", 38));
		};
	};
	return _13917_i;;
}



inline void _20ebeb9ba_pushResultIns(jule::Ptr<_20ebea2d2_ObjectCoder> _self_, jule::Ptr<_20d3a5a49_FnIns>* _24338_f) {
	jule::Str _24413_s = _20ec15c6a_code((*((*(_self_))._field_tc))._field_rc.ptr(), &((*((*(_24338_f))))._field_Result));;
	jule::Bool _24517_ok = false;;
	(*(_self_))._field_resultMap.lookup(_24413_s, nullptr, &(_24517_ok));
	if (_24517_ok) {
		return;;
	};
	(*(_self_))._field_resultMap[_24413_s]=false;
	_2240a989c_WriteStr(&(*(_self_))._field_resultDecls, jule::Str("struct ", 7));
	_2240a989c_WriteStr(&(*(_self_))._field_resultDecls, _24413_s);
	_2240a989c_WriteStr(&(*(_self_))._field_resultDecls, jule::Str(" {\n", 3));
	{
		auto expr = &((*(_20d4e39ab_Tup((*((*(_24338_f))))._field_Result.ptr())))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211642cc2:;
		if (it != expr_end) {
			jule::I64 _25314_i = it - expr->begin();
			jule::Ptr<_20d4de28c_TypeKind> _25321_t = *it;
			{
				_2240a9b55_WriteByte(&(*(_self_))._field_resultDecls, 9LLU);
				_2240a989c_WriteStr(&(*(_self_))._field_resultDecls, _20ec10b99_kind((*(_self_))._field_tc.ptr(), _25321_t));
				_2240a9b55_WriteByte(&(*(_self_))._field_resultDecls, ' ');
				_2240a989c_WriteStr(&(*(_self_))._field_resultDecls, jule::Str("__jule_result_arg", 17));
				_2240a989c_WriteStr(&(*(_self_))._field_resultDecls, _20b055388_Itoa(_25314_i));
				_2240a989c_WriteStr(&(*(_self_))._field_resultDecls, jule::Str(";\n", 2));
			}
			_iter_next_211642cc2:;
			++it;
			_25314_i++;
			goto _iter_begin_211642cc2;
		}
		_iter_end_211642cc2:;
	};
	_2240a989c_WriteStr(&(*(_self_))._field_resultDecls, jule::Str("};\n", 3));
}



inline void _20ebebc73_pushResult(jule::Ptr<_20ebea2d2_ObjectCoder> _self_, jule::Ptr<_20d3a2b45_Fn>* _26435_f) {
	if ((_20d3a30b8_IsVoid((*(_26435_f)).ptr()) || ((*((*((*(_26435_f))))._field_Result))._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I64 _26817_n = (*((*(_26435_f))))._field_Instances.len();;
	if (((*((*(_26435_f))))._field_Generics.len() == 0LL)) {
		_26817_n=1LL;
	};
	{
		auto expr = (*((*(_26435_f))))._field_Instances.slice(0LL, _26817_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_2116481d4:;
		if (it != expr_end) {
			jule::Ptr<_20d3a5a49_FnIns> _27221_ins = *it;
			{
				_20ebeb9ba_pushResultIns(_self_, &(_27221_ins));
			}
			_iter_next_2116481d4:;
			++it;
			goto _iter_begin_2116481d4;
		}
		_iter_end_2116481d4:;
	};
}



inline jule::I64 _20ebec16e_findTypeOffsetS(_20ebea2d2_ObjectCoder* _self_, jule::Ptr<_20d3b5dde_Trait> _27730_t, jule::Ptr<_20d39066b_StructIns> _27745_s) {
	if (((*(_27730_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2116496be:;
		if (it != expr_end) {
			jule::Ptr<_20ebe8cb4_traitHash> *_28116_hash = it;
			{
				if ((((*((*(_28116_hash))))._field_t == _27730_t) && ((*((*(_28116_hash))))._field_s == _27745_s))) {
					return (*((*(_28116_hash))))._field_i;;
				};
			}
			_iter_next_2116496be:;
			++it;
			goto _iter_begin_2116496be;
		}
		_iter_end_2116496be:;
	};
	return -1LL;;
}



inline jule::I64 _20ebec56a_findTypeOffset(_20ebea2d2_ObjectCoder* _self_, jule::Ptr<_20d3b5dde_Trait> _28929_t, jule::Ptr<_20d4de28c_TypeKind> _28944_k) {
	if (((*(_28929_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_20d39066b_StructIns> _29317_s = nullptr;;
	if ((_20d4e1e1b_Sptr(_28944_k.ptr()) != nullptr)) {
		_28944_k=(*(_20d4e1e1b_Sptr(_28944_k.ptr())))._field_Elem;
	};
	_29317_s=_20d4e3208_Struct(_28944_k.ptr());
	if ((_29317_s == nullptr)) {
		return -1LL;;
	};
	return static_cast<jule::I64>(_20ebec16e_findTypeOffsetS(_self_, _28929_t, _29317_s));;
}



inline void _20ebec8cd_pushAndWriteMaskMapper(jule::Ptr<_20ebea2d2_ObjectCoder> _self_, jule::Ptr<_20d3b5dde_Trait> _30446_t1, jule::Ptr<_20d3b5dde_Trait> _30462_t2) {
	_2240a0ad5_StrBuilder _30517_ident = static__2240a0e04_New(32LL);;
	_2240a989c_WriteStr(&_30517_ident, jule::Str("__jule_trait_offset_mapper_", 27));
	_2240a989c_WriteStr(&_30517_ident, _20b054c06_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30462_t2))), 15LL));
	_2240a989c_WriteStr(&_30517_ident, jule::Str("_to_", 4));
	_2240a989c_WriteStr(&_30517_ident, _20b054c06_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30446_t1))), 15LL));
	_2240a95e4_Write(&(*(_self_))._field_Obj, _2240aab45_Buf(&_30517_ident));
	{
		auto expr = &((*(_self_))._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21164ed34:;
		if (it != expr_end) {
			_20ebe918d_traitCast _31316_m = *it;
			{
				if (((_31316_m._field_t1 == _30446_t1) && (_31316_m._field_t2 == _30462_t2))) {
					return;;
				};
			}
			_iter_next_21164ed34:;
			++it;
			goto _iter_begin_21164ed34;
		}
		_iter_end_21164ed34:;
	};
	{ jule::Slice<_20ebe918d_traitCast> &__jule_push_dest = (*(_self_))._field_traitCastMap; __jule_push_dest.push(_20ebe918d_traitCast{._field_t1=_30446_t1, ._field_t2=_30462_t2}); };
	;
	_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str("jule::Int", 9));
	_2240a9b55_WriteByte(&(*(_self_))._field_anyObj, ' ');
	_2240a95e4_Write(&(*(_self_))._field_anyObj, _2240aab45_Buf(&_30517_ident));
	_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str("(const jule::Int offset) noexcept { ", 36));
	{
		auto expr = &((*(_30446_t1))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211653893:;
		if (it != expr_end) {
			jule::Ptr<_20d38c58b_Struct> _33221_s1 = *it;
			{
				{
					auto expr = &((*(_30462_t2))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2116541ce:;
					if (it != expr_end) {
						jule::Ptr<_20d38c58b_Struct> _33320_s2 = *it;
						{
							if ((_33221_s1 == _33320_s2)) {
								{
									auto expr = &((*(_33221_s1))._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_211655037:;
									if (it != expr_end) {
										jule::Ptr<_20d39066b_StructIns> _33533_s1i = *it;
										{
											jule::I64 _33629_i1 = _20ebec16e_findTypeOffsetS(_self_.ptr(), _30446_t1, _33533_s1i);;
											jule::I64 _33729_i2 = _20ebec16e_findTypeOffsetS(_self_.ptr(), _30462_t2, _33533_s1i);;
											_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str("if (offset == ", 14));
											_2240a989c_WriteStr(&(*(_self_))._field_anyObj, _20b055388_Itoa(_33729_i2));
											_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str(") return ", 9));
											_2240a989c_WriteStr(&(*(_self_))._field_anyObj, _20b055388_Itoa(_33629_i1));
											_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str("; ", 2));
										}
										_iter_next_211655037:;
										++it;
										goto _iter_begin_211655037;
									}
									_iter_end_211655037:;
								};
							};
						}
						_iter_next_2116541ce:;
						++it;
						goto _iter_begin_2116541ce;
					}
					_iter_end_2116541ce:;
				};
			}
			_iter_next_211653893:;
			++it;
			goto _iter_begin_211653893;
		}
		_iter_end_211653893:;
	};
	_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str(" return ", 8));
	_2240a989c_WriteStr(&(*(_self_))._field_anyObj, _20b055388_Itoa(0LL));
	_2240a989c_WriteStr(&(*(_self_))._field_anyObj, jule::Str("; }\n", 4));
}



inline void _20ebecb86_locInfo(jule::Ptr<_20ebea2d2_ObjectCoder> _self_, jule::Ptr<_20d3510bb_Token>* _35328_t) {
	jule::Str *_35414_loc = &((*((*((*(_35328_t))))._field_File))._field_Path);;
	if (_23c5b2375_Production) {
		{
			
			if (_2248aa0ae_HasPrefix((*(_35414_loc)), _2273c32ab_PathStdlib)) {
				_case_begin_21165a49e:;
				{
					_20ea32dd9_cstrBytes(&((*(_self_))._field_Obj), (*(_35414_loc)).slice((_22726ae34_Dir(_2273c32ab_PathStdlib).len() + 1LL)));
				}
			}
			else if (_2248aa0ae_HasPrefix((*(_35414_loc)), (*((*(_self_))._field_ir))._field_Root)) {
				_case_begin_21165a515:;
				{
					_20ea32dd9_cstrBytes(&((*(_self_))._field_Obj), (*(_35414_loc)).slice((_22726ae34_Dir((*((*(_self_))._field_ir))._field_Root).len() + 1LL)));
				}
			}
			else {
				_case_begin_21165a01a:;
				{
					_20ea32dd9_cstrBytes(&((*(_self_))._field_Obj), (*(_35414_loc)));
				}
			}
			_match_end_211659e4e:;
		};
	} else {
		_20ea32dd9_cstrBytes(&((*(_self_))._field_Obj), (*(_35414_loc)));
	};
	_20ebea986_write(_self_, jule::Str(":", 1));
	_20ebea986_write(_self_, _20b055388_Itoa((*((*(_35328_t))))._field_Row));
	_20ebea986_write(_self_, jule::Str(":", 1));
	_20ebea986_write(_self_, _20b055388_Itoa((*((*(_35328_t))))._field_Column));
}



inline void _20ebecd84_head(jule::Ptr<_20ebea2d2_ObjectCoder> _self_) {
	_20ebe0bce_Time _38013_time = static__20ebe1295_Now();;
	_20ebe0508_AbsTime _38113_abs = _20ebe297d_Abs(&_38013_time);;
	_20ebea986_write(_self_, jule::Str("// Auto generated by JuleC.\n", 28));
	_20ebea986_write(_self_, jule::Str("// JuleC version: ", 18));
	_20ebea986_write(_self_, jule::Str("jule0.0.15 @master", 18));
	_20ebea986_write(_self_, jule::Str("\n", 1));
	_20ebea986_write(_self_, jule::Str("// Date: ", 9));
	_20ebea986_write(_self_, _20b054c06_FmtUint(_38113_abs._field_Day, 10LL));
	_20ebea986_write(_self_, jule::Str("/", 1));
	_20ebea986_write(_self_, _20b054c06_FmtUint(_38113_abs._field_Month, 10LL));
	_20ebea986_write(_self_, jule::Str("/", 1));
	_20ebea986_write(_self_, _20b054c06_FmtUint(_38113_abs._field_Year, 10LL));
	_20ebea986_write(_self_, jule::Str(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_20ebea986_write(_self_, (*(_self_))._field_info._field_Compiler);
	_20ebea986_write(_self_, jule::Str(" ", 1));
	_20ebea986_write(_self_, (*(_self_))._field_info._field_CompilerCommand);
	_20ebea986_write(_self_, jule::Str("\n\n", 2));
	if (_23c5b2375_Production) {
		_20ebea986_write(_self_, jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_23c5b1bd2_RC))) {
		_20ebea986_write(_self_, jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_23c5b20ab_Safety))) {
		_20ebea986_write(_self_, jule::Str("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_20ebed082_links(_self_);
	_20ebea986_write(_self_, jule::Str("\n\n#include \"", 12));
	_20ebea986_write(_self_, _2273c3ac5_PathApi);
	_20ebea986_write(_self_, jule::Str("\"\n\n", 3));
}



inline void _20ebed082_links(jule::Ptr<_20ebea2d2_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211666ba3:;
		if (it != expr_end) {
			jule::Ptr<_20d414d94_ImportInfo> _41816_used = *it;
			{
				{
					
					if ((!((*(_41816_used))._field_Binded))) {
						_case_begin_211667962:;
						{
							goto _iter_next_211666ba3;
						}
					}
					else if (_2272eea23_IsStdHeaderPath((*(_41816_used))._field_Path)) {
						_case_begin_2116679d9:;
						{
							_20ebea986_write(_self_, jule::Str("#include ", 9));
							_20ebea986_write(_self_, (*(_41816_used))._field_Path);
							_20ebea986_write(_self_, jule::Str("\n", 1));
						}
					}
					else if (_2272eeccb_IsValidHeaderExt(_22726a50a_Ext((*(_41816_used))._field_Path))) {
						_case_begin_211667a61:;
						{
							_20ebea986_write(_self_, jule::Str("#include \"", 10));
							_20ebea986_write(_self_, (*(_41816_used))._field_Path);
							_20ebea986_write(_self_, jule::Str("\"\n", 2));
						}
					}
					_match_end_211667841:;
				};
			}
			_iter_next_211666ba3:;
			++it;
			goto _iter_begin_211666ba3;
		}
		_iter_end_211666ba3:;
	};
}



inline void _20ebed33a_prepareStructure(_20ebea2d2_ObjectCoder* _self_, jule::Ptr<_20d38c58b_Struct>* _43440_s) {
	{
		auto expr = &((*((*(_43440_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211669bea:;
		if (it != expr_end) {
			jule::Ptr<_20d39066b_StructIns> _43521_ins = *it;
			{
				{
					auto expr = &((*(_43521_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21166b317:;
					if (it != expr_end) {
						jule::Ptr<_20d3a2b45_Fn> _43625_m = *it;
						{
							if ((*(_43625_m))._field_Statically) {
								goto _iter_next_21166b317;
							};
							{
								auto expr = &((*(_43625_m))._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_21166c1c5:;
								if (it != expr_end) {
									jule::Ptr<_20d3a5a49_FnIns> _44029_mins = *it;
									{
										jule::Ptr<_20d3a4a9d_ParamIns> _44129_p = (*(_44029_mins))._field_Params[0LL];;
										if ((!(_20d3a1a23_IsRef((*(_44129_p))._field_Decl.ptr())))) {
											(*(_44129_p))._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(jule::new_ptr<_20ec099ea_customType>(_20ec099ea_customType{._field_kind=(_20ec10b99_kind((*(_self_))._field_tc.ptr(), (*(_44129_p))._field_Kind) + jule::Str("*", 1))}), 27)});
										} else {
											(*(_44129_p))._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(jule::new_ptr<_20ec099ea_customType>(_20ec099ea_customType{._field_kind=_20ec10b99_kind((*(_self_))._field_tc.ptr(), (*(_44129_p))._field_Kind)}), 27)});
										};
									}
									_iter_next_21166c1c5:;
									++it;
									goto _iter_begin_21166c1c5;
								}
								_iter_end_21166c1c5:;
							};
						}
						_iter_next_21166b317:;
						++it;
						goto _iter_begin_21166b317;
					}
					_iter_end_21166b317:;
				};
			}
			_iter_next_211669bea:;
			++it;
			goto _iter_begin_211669bea;
		}
		_iter_end_211669bea:;
	};
}



inline void _20ebed538_prepareStructures(jule::Ptr<_20ebea2d2_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21166c8ac:;
		if (it != expr_end) {
			jule::Ptr<_20d38c58b_Struct> _46121_s = *it;
			{
				if (((*(_46121_s))._field_Token != nullptr)) {
					_20ebed33a_prepareStructure(_self_.ptr(), &(_46121_s));
				};
			}
			_iter_next_21166c8ac:;
			++it;
			goto _iter_begin_21166c8ac;
		}
		_iter_end_21166c8ac:;
	};
}



inline void _20ebed7e1_iterPackages(jule::Ptr<_20ebea2d2_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_20d417cba_Package>*)> _46832_f) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21166ed87:;
		if (it != expr_end) {
			jule::Ptr<_20d414d94_ImportInfo> _46921_used = *it;
			{
				if ((!((*(_46921_used))._field_Binded))) {
					_46832_f(&((*(_46921_used))._field_Package));
				};
			}
			_iter_next_21166ed87:;
			++it;
			goto _iter_begin_21166ed87;
		}
		_iter_end_21166ed87:;
	};
	_46832_f(&((*((*(_self_))._field_ir))._field_Main));
}



inline void _20ebed9de_buildTraitMap(jule::Ptr<_20ebea2d2_ObjectCoder> _self_) {
	_20ebed7e1_iterPackages(_self_, jule::Fn<void(jule::Ptr<_20d417cba_Package>*)>([=](jule::Ptr<_20d417cba_Package>* _47835_pkg) mutable -> void {
		_20ec077c8_iterFiles(_47835_pkg, jule::Fn<void(jule::Ptr<_20d081e40_SymbolTable>*)>([=](jule::Ptr<_20d081e40_SymbolTable>* _47936_file) mutable -> void {
			{
				auto expr = &((*((*(_47936_file))))._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_2116754b9:;
				if (it != expr_end) {
					jule::Ptr<_20d3b5dde_Trait> _48029_t = *it;
					{
						if (((*(_48029_t))._field_Token == nullptr)) {
							return;;
						};
						if (((*(_48029_t))._field_Implemented.len() == 0LL)) {
							jule::Ptr<_20ebe8cb4_traitHash> _48533_hash = jule::new_ptr<_20ebe8cb4_traitHash>(_20ebe8cb4_traitHash{._field_t=_48029_t, ._field_s=nullptr, ._field_i=0LL});;
							_2240a0ad5_StrBuilder _49033_b = static__2240a0e04_New(static_cast<jule::I64>((*(_48029_t))._field_Ident.len()));;
							static__20ea39a8e_writeIdentTo(&(_49033_b), &((*(_48029_t))._field_Ident));
							(*(_48533_hash))._field_ti=_2240aa194_Str(&_49033_b);
							{ jule::Slice<jule::Ptr<_20ebe8cb4_traitHash>> &__jule_push_dest = (*(_self_))._field_tmap; __jule_push_dest.push(_48533_hash); };
							goto _iter_next_2116754b9;
						};
						jule::I64 _49629_i = 0LL;;
						{
							auto expr = &((*(_48029_t))._field_Implemented);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_211675dd2:;
							if (it != expr_end) {
								jule::Ptr<_20d38c58b_Struct> _49733_s = *it;
								{
									{
										auto expr = &((*(_49733_s))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_211679985:;
										if (it != expr_end) {
											jule::Ptr<_20d39066b_StructIns> _49837_ins = *it;
											{
												jule::Ptr<_20ebe8cb4_traitHash> _49937_hash = jule::new_ptr<_20ebe8cb4_traitHash>(_20ebe8cb4_traitHash{._field_t=_48029_t, ._field_s=_49837_ins, ._field_i=_49629_i});;
												_2240a0ad5_StrBuilder _50437_b = static__2240a0e04_New(static_cast<jule::I64>((*(_48029_t))._field_Ident.len()));;
												static__20ea39a8e_writeIdentTo(&(_50437_b), &((*(_48029_t))._field_Ident));
												(*(_49937_hash))._field_ti=_2240aa194_Str(&_50437_b);
												{ jule::Slice<jule::Ptr<_20ebe8cb4_traitHash>> &__jule_push_dest = (*(_self_))._field_tmap; __jule_push_dest.push(_49937_hash); };
												(_49629_i)++;
											}
											_iter_next_211679985:;
											++it;
											goto _iter_begin_211679985;
										}
										_iter_end_211679985:;
									};
								}
								_iter_next_211675dd2:;
								++it;
								goto _iter_begin_211675dd2;
							}
							_iter_end_211675dd2:;
						};
						_20ec08576_pushMethodsFromInherits(&(_48029_t), &(_48029_t));
					}
					_iter_next_2116754b9:;
					++it;
					goto _iter_begin_2116754b9;
				}
				_iter_end_2116754b9:;
			};
		}));
	}));
}



inline void _20ebedbdc_traitDecls(jule::Ptr<_20ebea2d2_ObjectCoder> _self_) {
	_20ebed7e1_iterPackages(_self_, jule::Fn<void(jule::Ptr<_20d417cba_Package>*)>([=](jule::Ptr<_20d417cba_Package>* _52035_pkg) mutable -> void {
		_20ec077c8_iterFiles(_52035_pkg, jule::Fn<void(jule::Ptr<_20d081e40_SymbolTable>*)>([=](jule::Ptr<_20d081e40_SymbolTable>* _52136_file) mutable -> void {
			{
				auto expr = &((*((*(_52136_file))))._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_21167d69d:;
				if (it != expr_end) {
					jule::Ptr<_20d3b5dde_Trait> _52229_t = *it;
					{
						if (((*(_52229_t))._field_Token == nullptr)) {
							return;;
						};
						_20ebeb080_indent(_self_);
						_20ebea986_write(_self_, jule::Str("struct ", 7));
						_20ebea986_write(_self_, static__20ea3ab8e_traitDecl(_52229_t));
						_20ebea986_write(_self_, jule::Str("{};\n", 4));
					}
					_iter_next_21167d69d:;
					++it;
					goto _iter_begin_21167d69d;
				}
				_iter_end_21167d69d:;
			};
		}));
	}));
}



inline void _20ebede95_structurePlainDecl(jule::Ptr<_20ebea2d2_ObjectCoder> _self_, jule::Ptr<_20d38c58b_Struct>* _53543_s) {
	{
		auto expr = &((*((*(_53543_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211675c7d:;
		if (it != expr_end) {
			jule::Ptr<_20d39066b_StructIns> _53621_ins = *it;
			{
				_20ebea986_write(_self_, jule::Str("struct ", 7));
				_20ebea986_write(_self_, static__20ea3b4db_structureIns(&(_53621_ins)));
				_20ebea986_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_211675c7d:;
			++it;
			goto _iter_begin_211675c7d;
		}
		_iter_end_211675c7d:;
	};
}



inline void _20ebee193_structurePlainDecls(jule::Ptr<_20ebea2d2_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211680a79:;
		if (it != expr_end) {
			jule::Ptr<_20d38c58b_Struct> _54421_s = *it;
			{
				if (((*(_54421_s))._field_Token != nullptr)) {
					_20ebede95_structurePlainDecl(_self_, &(_54421_s));
				};
			}
			_iter_next_211680a79:;
			++it;
			goto _iter_begin_211680a79;
		}
		_iter_end_211680a79:;
	};
}



inline void _20ebee44b_fieldDecl(jule::Ptr<_20ebea2d2_ObjectCoder> _self_, jule::Ptr<_20d38eabb_FieldIns>* _55134_f) {
	_20ebea986_write(_self_, _20ec10b99_kind((*(_self_))._field_tc.ptr(), (*((*(_55134_f))))._field_Kind));
	_20ebea986_write(_self_, jule::Str(" ", 1));
	_20ebea986_write(_self_, static__20ea3b7a5_field(&((*((*(_55134_f))))._field_Decl)));
	if (((*((*(_55134_f))))._field_Default == nullptr)) {
		if (_20ec17d5a_shouldInitialized(&((*((*(_55134_f))))._field_Kind))) {
			_20ebea986_write(_self_, jule::Str(" = ", 3));
			_20ea32427_initExpr((*(_self_))._field_ec, (*((*(_55134_f))))._field_Kind);
		};
	} else {
		_20ebea986_write(_self_, jule::Str(" = ", 3));
		_20ea27ae3_possibleRefExpr((*(_self_))._field_ec, (*((*((*(_55134_f))))._field_Default))._field_Model);
	};
	_20ebea986_write(_self_, jule::Str(";", 1));
}



inline void _20ebee704_structureDestructor(jule::Ptr<_20ebea2d2_ObjectCoder> _self_, jule::Ptr<_20d39066b_StructIns>* _56944_s) {
	;
	jule::Ptr<_20d3a2b45_Fn> _57213_disposeMethod = _20d3916d3_FindMethod((*(_56944_s)).ptr(), jule::Str("Dispose", 7), false);;
	jule::Bool _57317_disposed = static__20d45a02c_Dispose(_57213_disposeMethod);;
	if ((!(_57317_disposed))) {
		return;;
	};
	_20ebea986_write(_self_, jule::Str("~", 1));
	_20ebea986_write(_self_, static__20ea3b4db_structureIns(_56944_s));
	_20ebea986_write(_self_, jule::Str("(void) { ", 9));
	_20ebea986_write(_self_, static__20ea3a60b_func(&(_57213_disposeMethod)));
	_20ebea986_write(_self_, jule::Str("(this); }", 9));
}



inline void _20ebee9ac_structureDeriveDefsDecls(jule::Ptr<_20ebea2d2_ObjectCoder> _self_, jule::Ptr<_20d39066b_StructIns>* _58545_s) {
	if (_20d38e02c_IsDerives((*((*(_58545_s))))._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_20ebeb080_indent(_self_);
		_20ebea986_write(_self_, _20ea35518_cloneFuncDecl((*(_self_))._field_dc.ptr(), &((*((*(_58545_s))))._field_Decl)));
		_20ebea986_write(_self_, jule::Str(";\n\n", 3));
	};
}



inline void _20ebeed20_structureOperatorEq(jule::Ptr<_20ebea2d2_ObjectCoder> _self_, jule::Str* _59340_ident, jule::Ptr<_20d39066b_StructIns>* _59357_s) {
	if ((!((*((*(_59357_s))))._field_Comparable))) {
		return;;
	};
	if (((*((*(_59357_s))))._field_Operators._field_Eq != nullptr)) {
		_20ec005a1_structureOperator(_self_, _59340_ident, &((*((*(_59357_s))))._field_Operators._field_Eq), jule::Str("==", 2));
		return;;
	};
	_20ebeb080_indent(_self_);
	if (_20e02ec66_Inline) {
		_20ebea986_write(_self_, jule::Str("inline ", 7));
	};
	_20ebea986_write(_self_, jule::Str("bool operator==(", 16));
	_20ebea986_write(_self_, (*(_59340_ident)));
	_20ebea986_write(_self_, jule::Str(" _other) {", 10));
	if (((*((*(_59357_s))))._field_Fields.len() > 0LL)) {
		_20ebeab84_addIndent(_self_);
		_20ebea986_write(_self_, jule::Str("\n", 1));
		_20ebeb080_indent(_self_);
		_20ebea986_write(_self_, jule::Str("return ", 7));
		_20ebeab84_addIndent(_self_);
		jule::Bool _61621_writed = false;;
		{
			auto expr = &((*((*(_59357_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_211691eec:;
			if (it != expr_end) {
				jule::Ptr<_20d38eabb_FieldIns> _61725_f = *it;
				{
					jule::Ptr<_20d39066b_StructIns> _61921_strct = _20d4e3208_Struct((*(_61725_f))._field_Kind.ptr());;
					if ((((_61921_strct != nullptr) && ((*(_61921_strct))._field_Decl != nullptr)) && (*((*(_61921_strct))._field_Decl))._field_Binded)) {
						goto _iter_next_211691eec;
					};
					if (_61621_writed) {
						_20ebea986_write(_self_, jule::Str(" &&", 3));
					};
					_61621_writed=true;
					_20ebea986_write(_self_, jule::Str("\n", 1));
					_20ebeb080_indent(_self_);
					_20ebea986_write(_self_, jule::Str("this->", 6));
					jule::Str _63021_fIdent = static__20ea3b7a5_field(&((*(_61725_f))._field_Decl));;
					_20ebea986_write(_self_, _63021_fIdent);
					_20ebea986_write(_self_, jule::Str(" == _other.", 11));
					_20ebea986_write(_self_, _63021_fIdent);
				}
				_iter_next_211691eec:;
				++it;
				goto _iter_begin_211691eec;
			}
			_iter_end_211691eec:;
		};
		_20ebead82_doneIndent(_self_);
		if ((!(_61621_writed))) {
			_20ebea986_write(_self_, jule::Str("true", 4));
		};
		_20ebea986_write(_self_, jule::Str(";\n", 2));
		_20ebead82_doneIndent(_self_);
		_20ebeb080_indent(_self_);
		_20ebea986_write(_self_, jule::Str("}", 1));
	} else {
		_20ebea986_write(_self_, jule::Str(" return true; }", 15));
	};
	_20ebea986_write(_self_, jule::Str("\n\n", 2));
}



inline void _20ec00183_structureOperatorNotEq(jule::Ptr<_20ebea2d2_ObjectCoder> _self_, jule::Str* _64943_ident, jule::Ptr<_20d39066b_StructIns>* _64960_s) {
	if ((!((*((*(_64960_s))))._field_Comparable))) {
		return;;
	};
	_20ebeb080_indent(_self_);
	if (_20e02ec66_Inline) {
		_20ebea986_write(_self_, jule::Str("inline ", 7));
	};
	_20ebea986_write(_self_, jule::Str("bool operator!=(", 16));
	_20ebea986_write(_self_, (*(_64943_ident)));
	_20ebea986_write(_self_, jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _20ec005a1_structureOperator(jule::Ptr<_20ebea2d2_ObjectCoder> _self_, jule::Str* _66338_ident, jule::Ptr<_20d3a5a49_FnIns>* _66355_f, jule::Str _66366_op) {
	if (((*(_66355_f)) == nullptr)) {
		return;;
	};
	jule::Bool _66813_unary = ((*((*(_66355_f))))._field_Params.len() == 1LL);;
	jule::Bool _66913_assignment = _20d3a30b8_IsVoid((*((*(_66355_f))))._field_Decl.ptr());;
	_20ebeb080_indent(_self_);
	if (_20e02ec66_Inline) {
		_20ebea986_write(_self_, jule::Str("inline ", 7));
	};
	if (_66913_assignment) {
		_20ebea986_write(_self_, (*(_66338_ident)));
		_20ebea986_write(_self_, jule::Str("&", 1));
	} else {
		if ((_20d4e1b85_Prim((*((*(_66355_f))))._field_Result.ptr()) == nullptr)) {
			_20ebea986_write(_self_, (*(_66338_ident)));
		} else {
			_20ebea986_write(_self_, jule::Str("jule::Bool", 10));
		};
	};
	_20ebea986_write(_self_, jule::Str(" operator", 9));
	_20ebea986_write(_self_, _66366_op);
	_20ebea986_write(_self_, jule::Str("(", 1));
	if ((!(_66813_unary))) {
		jule::Ptr<_20d3a4a9d_ParamIns> _69121_p = (*((*(_66355_f))))._field_Params[1LL];;
		_20ebea986_write(_self_, _20ec0ea22_paramIns((*(_self_))._field_tc.ptr(), &(_69121_p)));
		_20ebea986_write(_self_, jule::Str(" _other", 7));
	};
	_20ebea986_write(_self_, jule::Str(") { ", 4));
	if ((!(_66913_assignment))) {
		_20ebea986_write(_self_, jule::Str("return ", 7));
	};
	_20ebea986_write(_self_, static__20ea3a8c5_funcIns(_66355_f));
	if ((!(_66813_unary))) {
		_20ebea986_write(_self_, jule::Str("(this, _other); ", 16));
		if (_66913_assignment) {
			_20ebea986_write(_self_, jule::Str("return *this; ", 14));
		};
		_20ebea986_write(_self_, jule::Str("}", 1));
	} else {
		_20ebea986_write(_self_, jule::Str("(this); }", 9));
	};
	_20ebea986_write(_self_, jule::Str("\n\n", 2));
}



inline void _20ec00859_structureOperators(jule::Ptr<_20ebea2d2_ObjectCoder> _self_, jule::Ptr<_20d39066b_StructIns>* _71243_s) {
	jule::Str _71313_ident = static__20ea3b4db_structureIns(_71243_s);;
	_20ebeed20_structureOperatorEq(_self_, &(_71313_ident), _71243_s);
	_20ec00183_structureOperatorNotEq(_self_, &(_71313_ident), _71243_s);
	_20ec005a1_structureOperator(_self_, &(_71313_ident), &((*((*(_71243_s))))._field_Operators._field_Gt), jule::Str(">", 1));
	_20ec005a1_structureOperator(_self_, &(_71313_ident), &((*((*(_71243_s))))._field_Operators._field_GtEq), jule::Str(">=", 2));
	_20ec005a1_structureOperator(_self_, &(_71313_ident), &((*((*(_71243_s))))._field_Operators._field_Lt), jule::Str("<", 1));
	_20ec005a1_structureOperator(_self_, &(_71313_ident), &((*((*(_71243_s))))._field_Operators._field_LtEq), jule::Str("<=", 2));
	_20ec005a1_structureOperator(_self_, &(_71313_ident), &((*((*(_71243_s))))._field_Operators._field_Shl), jule::Str("<<", 2));
	_20ec005a1_structureOperator(_self_, &(_71313_ident), &((*((*(_71243_s))))._field_Operators._field_Shr), jule::Str(">>", 2));
	_20ec005a1_structureOperator(_self_, &(_71313_ident), &((*((*(_71243_s))))._field_Operators._field_Add), jule::Str("+", 1));
	_20ec005a1_structureOperator(_self_, &(_71313_ident), &((*((*(_71243_s))))._field_Operators._field_Sub), jule::Str("-", 1));
	_20ec005a1_structureOperator(_self_, &(_71313_ident), &((*((*(_71243_s))))._field_Operators._field_Div), jule::Str("/", 1));
	_20ec005a1_structureOperator(_self_, &(_71313_ident), &((*((*(_71243_s))))._field_Operators._field_Mul), jule::Str("*", 1));
	_20ec005a1_structureOperator(_self_, &(_71313_ident), &((*((*(_71243_s))))._field_Operators._field_Mod), jule::Str("%", 1));
	_20ec005a1_structureOperator(_self_, &(_71313_ident), &((*((*(_71243_s))))._field_Operators._field_BitAnd), jule::Str("&", 1));
	_20ec005a1_structureOperator(_self_, &(_71313_ident), &((*((*(_71243_s))))._field_Operators._field_BitOr), jule::Str("|", 1));
	_20ec005a1_structureOperator(_self_, &(_71313_ident), &((*((*(_71243_s))))._field_Operators._field_BitXor), jule::Str("^", 1));
	_20ec005a1_structureOperator(_self_, &(_71313_ident), &((*((*(_71243_s))))._field_Operators._field_Neg), jule::Str("-", 1));
	_20ec005a1_structureOperator(_self_, &(_71313_ident), &((*((*(_71243_s))))._field_Operators._field_Pos), jule::Str("+", 1));
	_20ec005a1_structureOperator(_self_, &(_71313_ident), &((*((*(_71243_s))))._field_Operators._field_BitNot), jule::Str("~", 1));
	_20ec005a1_structureOperator(_self_, &(_71313_ident), &((*((*(_71243_s))))._field_Operators._field_AddAssign), jule::Str("+=", 2));
	_20ec005a1_structureOperator(_self_, &(_71313_ident), &((*((*(_71243_s))))._field_Operators._field_SubAssign), jule::Str("-=", 2));
	_20ec005a1_structureOperator(_self_, &(_71313_ident), &((*((*(_71243_s))))._field_Operators._field_DivAssign), jule::Str("/=", 2));
	_20ec005a1_structureOperator(_self_, &(_71313_ident), &((*((*(_71243_s))))._field_Operators._field_MulAssign), jule::Str("*=", 2));
	_20ec005a1_structureOperator(_self_, &(_71313_ident), &((*((*(_71243_s))))._field_Operators._field_ModAssign), jule::Str("%=", 2));
	_20ec005a1_structureOperator(_self_, &(_71313_ident), &((*((*(_71243_s))))._field_Operators._field_ShlAssign), jule::Str("<<=", 3));
	_20ec005a1_structureOperator(_self_, &(_71313_ident), &((*((*(_71243_s))))._field_Operators._field_ShrAssign), jule::Str(">>=", 3));
	_20ec005a1_structureOperator(_self_, &(_71313_ident), &((*((*(_71243_s))))._field_Operators._field_BitOrAssign), jule::Str("|=", 2));
	_20ec005a1_structureOperator(_self_, &(_71313_ident), &((*((*(_71243_s))))._field_Operators._field_BitAndAssign), jule::Str("&=", 2));
	_20ec005a1_structureOperator(_self_, &(_71313_ident), &((*((*(_71243_s))))._field_Operators._field_BitXorAssign), jule::Str("^=", 2));
}



inline void _20ec00b12_structureInsDecl(jule::Ptr<_20ebea2d2_ObjectCoder> _self_, jule::Ptr<_20d39066b_StructIns>* _75141_s) {
	{
		auto expr = &((*((*(_75141_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21303b169:;
		if (it != expr_end) {
			jule::Ptr<_20d3a2b45_Fn> _75221_m = *it;
			{
				if (_20ec08b09_isHeadDecl(&(_75221_m))) {
					_20ec020a8_funcDecl(_self_, &(_75221_m), false);
				};
			}
			_iter_next_21303b169:;
			++it;
			goto _iter_begin_21303b169;
		}
		_iter_end_21303b169:;
	};
	_20ebea986_write(_self_, jule::Str("struct ", 7));
	jule::Str _75913_outIdent = static__20ea3b4db_structureIns(_75141_s);;
	_20ebea986_write(_self_, _75913_outIdent);
	_20ebea986_write(_self_, jule::Str(" {\n", 3));
	_20ebeab84_addIndent(_self_);
	{
		auto expr = &((*((*(_75141_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21303d017:;
		if (it != expr_end) {
			jule::Ptr<_20d38eabb_FieldIns> _76521_f = *it;
			{
				_20ebeb080_indent(_self_);
				_20ebee44b_fieldDecl(_self_, &(_76521_f));
				_20ebea986_write(_self_, jule::Str("\n", 1));
			}
			_iter_next_21303d017:;
			++it;
			goto _iter_begin_21303d017;
		}
		_iter_end_21303d017:;
	};
	_20ebeb080_indent(_self_);
	_20ebee704_structureDestructor(_self_, _75141_s);
	_20ebea986_write(_self_, jule::Str("\n\n", 2));
	_20ebee9ac_structureDeriveDefsDecls(_self_, _75141_s);
	_20ec00859_structureOperators(_self_, _75141_s);
	_20ebea986_write(_self_, jule::Str("\n", 1));
	_20ebead82_doneIndent(_self_);
	_20ebeb080_indent(_self_);
	_20ebea986_write(_self_, jule::Str("};", 2));
}



inline void _20ec00dba_structureDecl(jule::Ptr<_20ebea2d2_ObjectCoder> _self_, jule::Ptr<_20d38c58b_Struct>* _78538_s) {
	{
		auto expr = &((*((*(_78538_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2130421d6:;
		if (it != expr_end) {
			jule::Ptr<_20d39066b_StructIns> _78621_ins = *it;
			{
				_20ec00b12_structureInsDecl(_self_, &(_78621_ins));
			}
			_iter_next_2130421d6:;
			++it;
			goto _iter_begin_2130421d6;
		}
		_iter_end_2130421d6:;
	};
}



inline void _20ec010b8_structureDecls(jule::Ptr<_20ebea2d2_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_213042a44:;
		if (it != expr_end) {
			jule::Ptr<_20d38c58b_Struct> _79221_s = *it;
			{
				if (((*(_79221_s))._field_Token != nullptr)) {
					_20ec00dba_structureDecl(_self_, &(_79221_s));
					_20ebea986_write(_self_, jule::Str("\n", 1));
				};
			}
			_iter_next_213042a44:;
			++it;
			goto _iter_begin_213042a44;
		}
		_iter_end_213042a44:;
	};
}



inline void _20ec012b6_structureMethodDecls(jule::Ptr<_20ebea2d2_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2130439e0:;
		if (it != expr_end) {
			jule::Ptr<_20d38c58b_Struct> _80121_s = *it;
			{
				if (((*(_80121_s))._field_Token != nullptr)) {
					{
						auto expr = &((*(_80121_s))._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_213045a36:;
						if (it != expr_end) {
							jule::Ptr<_20d39066b_StructIns> _80329_ins = *it;
							{
								{
									auto expr = &((*(_80329_ins))._field_Methods);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_213046482:;
									if (it != expr_end) {
										jule::Ptr<_20d3a2b45_Fn> _80433_m = *it;
										{
											if ((!(_20ec08b09_isHeadDecl(&(_80433_m))))) {
												_20ebebc73_pushResult(_self_, &(_80433_m));
												_20ec020a8_funcDecl(_self_, &(_80433_m), false);
											};
										}
										_iter_next_213046482:;
										++it;
										goto _iter_begin_213046482;
									}
									_iter_end_213046482:;
								};
							}
							_iter_next_213045a36:;
							++it;
							goto _iter_begin_213045a36;
						}
						_iter_end_213045a36:;
					};
				};
			}
			_iter_next_2130439e0:;
			++it;
			goto _iter_begin_2130439e0;
		}
		_iter_end_2130439e0:;
	};
}



inline void _20ec0156e_paramsDecls(jule::Ptr<_20ebea2d2_ObjectCoder> _self_, jule::Slice<jule::Ptr<_20d3a4a9d_ParamIns>>* _81636_params) {
	if (((*(_81636_params)).len() == 0LL)) {
		_20ebea986_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_20ebea986_write(_self_, jule::Str("(", 1));
	{
		auto expr = _81636_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_213046284:;
		if (it != expr_end) {
			jule::I64 _82314_i = it - expr->begin();
			jule::Ptr<_20d3a4a9d_ParamIns> _82321_p = *it;
			{
				_20ebea986_write(_self_, _20ec0ea22_paramIns((*(_self_))._field_tc.ptr(), &(_82321_p)));
				if ((((*(_81636_params)).len() - _82314_i) > 1LL)) {
					_20ebea986_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_213046284:;
			++it;
			_82314_i++;
			goto _iter_begin_213046284;
		}
		_iter_end_213046284:;
	};
	_20ebea986_write(_self_, jule::Str(")", 1));
}



inline void _20ec018d2_funcHead(jule::Ptr<_20ebea2d2_ObjectCoder> _self_, jule::Ptr<_20d3a5a49_FnIns>* _83333_f, jule::Bool _83344_ptr) {
	if ((((!(_83344_ptr)) && _20e02ec66_Inline) && (!(_20d3a35d5_IsEntryPoint((*((*(_83333_f))))._field_Decl.ptr()))))) {
		_20ebea986_write(_self_, jule::Str("inline ", 7));
	};
	_20ec101c6_funcInsResult((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Obj), _83333_f);
	if (_83344_ptr) {
		_20ebea986_write(_self_, jule::Str("(*", 2));
		_20ebea986_write(_self_, static__20ea3a8c5_funcIns(_83333_f));
		_20ebea986_write(_self_, jule::Str(")", 1));
	} else {
		_20ebea986_write(_self_, jule::Str(" ", 1));
		_20ebea986_write(_self_, static__20ea3a8c5_funcIns(_83333_f));
	};
}



inline void _20ec01c45_funcDeclIns(jule::Ptr<_20ebea2d2_ObjectCoder> _self_, jule::Ptr<_20d3a5a49_FnIns>* _84836_f, jule::Bool _84847_ptr) {
	_20ebeb080_indent(_self_);
	_20ec018d2_funcHead(_self_, _84836_f, _84847_ptr);
	_20ec0156e_paramsDecls(_self_, &((*((*(_84836_f))))._field_Params));
	_20ebea986_write(_self_, jule::Str(";\n", 2));
}



inline void _20ec020a8_funcDecl(jule::Ptr<_20ebea2d2_ObjectCoder> _self_, jule::Ptr<_20d3a2b45_Fn>* _85533_f, jule::Bool _85541_ptr) {
	{
		auto expr = &((*((*(_85533_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_213050931:;
		if (it != expr_end) {
			jule::Ptr<_20d3a5a49_FnIns> _85621_c = *it;
			{
				_20ec01c45_funcDeclIns(_self_, &(_85621_c), _85541_ptr);
			}
			_iter_next_213050931:;
			++it;
			goto _iter_begin_213050931;
		}
		_iter_end_213050931:;
	};
}



inline void _20ec024c6_funcDeclTrait(jule::Ptr<_20ebea2d2_ObjectCoder> _self_, jule::Ptr<_20d3b5dde_Trait>* _86138_t, jule::Ptr<_20d3a2b45_Fn>* _86154_f, jule::Bool _86162_ptr) {
	{
		auto expr = &((*((*(_86154_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_213051cb7:;
		if (it != expr_end) {
			jule::Ptr<_20d3a5a49_FnIns> _86221_c = *it;
			{
				jule::Ptr<_20d4de28c_TypeKind> _86321_k = (*((*(_86221_c))._field_Params[0LL]))._field_Kind;;
				(*((*(_86221_c))._field_Params[0LL]))._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>((*(_86138_t)), 2)});
				_20ec01c45_funcDeclIns(_self_, &(_86221_c), _86162_ptr);
				(*((*(_86221_c))._field_Params[0LL]))._field_Kind=_86321_k;
			}
			_iter_next_213051cb7:;
			++it;
			goto _iter_begin_213051cb7;
		}
		_iter_end_213051cb7:;
	};
}



inline void _20ec026c4_funcDecls(jule::Ptr<_20ebea2d2_ObjectCoder> _self_) {
	_20ebed7e1_iterPackages(_self_, jule::Fn<void(jule::Ptr<_20d417cba_Package>*)>([=](jule::Ptr<_20d417cba_Package>* _87135_pkg) mutable -> void {
		_20ec077c8_iterFiles(_87135_pkg, jule::Fn<void(jule::Ptr<_20d081e40_SymbolTable>*)>([=](jule::Ptr<_20d081e40_SymbolTable>* _87236_file) mutable -> void {
			{
				auto expr = &((*((*(_87236_file))))._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_213056481:;
				if (it != expr_end) {
					jule::Ptr<_20d3a2b45_Fn> _87329_f = *it;
					{
						if (((!((*(_87329_f))._field_Binded)) && ((*(_87329_f))._field_Token != nullptr))) {
							_20ebebc73_pushResult(_self_, &(_87329_f));
							_20ec020a8_funcDecl(_self_, &(_87329_f), false);
						};
					}
					_iter_next_213056481:;
					++it;
					goto _iter_begin_213056481;
				}
				_iter_end_213056481:;
			};
		}));
	}));
}



inline void _20ec02a37_traitDataTypeMethods(jule::Ptr<_20ebea2d2_ObjectCoder> _self_, jule::Ptr<_20d3b5dde_Trait>* _88345_owner, jule::Ptr<_20d3b5dde_Trait>* _88365_t) {
	{
		auto expr = &((*((*(_88365_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21305612e:;
		if (it != expr_end) {
			jule::Ptr<_20d3a2b45_Fn> _88421_m = *it;
			{
				jule::Ptr<_20d3a5a49_FnIns> _88521_ins = (*(_88421_m))._field_Instances[0LL];;
				jule::Ptr<_20d3a4a9d_ParamIns> _88621_p = (*(_88521_ins))._field_Params[0LL];;
				(*(_88621_p))._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>((*(_88365_t)), 2)});
				{
					auto expr = (*(_88521_ins))._field_Params.slice(1LL);
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_213059e24:;
					if (it != expr_end) {
						jule::I64 _89018_i = it - expr.begin();
						jule::Ptr<_20d3a4a9d_ParamIns> _89025_ip = *it;
						{
							if (_20d353ce4_IsAnonIdent((*((*(_89025_ip))._field_Decl))._field_Ident)) {
								(*((*(_89025_ip))._field_Decl))._field_Ident=(jule::Str("_", 1) + _20b055388_Itoa(_89018_i));
							};
						}
						_iter_next_213059e24:;
						++it;
						_89018_i++;
						goto _iter_begin_213059e24;
					}
					_iter_end_213059e24:;
				};
				if ((!(_23c5b2375_Production))) {
					jule::Ptr<_20d3a4a9d_ParamIns> _89625_lp = (*(_88521_ins))._field_Params[((*(_88521_ins))._field_Params.len() - 1LL)];;
					{
						auto &_match_expr{ (*((*(_89625_lp))._field_Kind))._field_Kind };
						
						if (_match_expr.type_is(true, 27)) {
							_case_begin_21305e731:;
							{
								goto _match_end_21305c993;
							}
						}
						else {
							_case_begin_21305c9e8:;
							{
								{ jule::Slice<jule::Ptr<_20d3a4a9d_ParamIns>> &__jule_push_dest = (*(_88521_ins))._field_Params; __jule_push_dest.push(jule::new_ptr<_20d3a4a9d_ParamIns>(_20d3a4a9d_ParamIns{._field_Decl=jule::new_ptr<_20d3a1171_Param>(_20d3a1171_Param{._field_Ident=jule::Str("__file", 6)}), ._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(jule::new_ptr<_20ec099ea_customType>(_20ec099ea_customType{._field_kind=jule::Str("const char*", 11)}), 27)})})); };
							}
						}
						_match_end_21305c993:;
					};
				};
				_20ebebc73_pushResult(_self_, &(_88421_m));
				_20ec024c6_funcDeclTrait(_self_, _88345_owner, &(_88421_m), true);
			}
			_iter_next_21305612e:;
			++it;
			goto _iter_begin_21305612e;
		}
		_iter_end_21305612e:;
	};
}



inline void _20ec02c35_traitDataTypes(jule::Ptr<_20ebea2d2_ObjectCoder> _self_) {
	_20ebed7e1_iterPackages(_self_, jule::Fn<void(jule::Ptr<_20d417cba_Package>*)>([=](jule::Ptr<_20d417cba_Package>* _91935_pkg) mutable -> void {
		_20ec077c8_iterFiles(_91935_pkg, jule::Fn<void(jule::Ptr<_20d081e40_SymbolTable>*)>([=](jule::Ptr<_20d081e40_SymbolTable>* _92036_file) mutable -> void {
			{
				auto expr = &((*((*(_92036_file))))._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_213061689:;
				if (it != expr_end) {
					jule::Ptr<_20d3b5dde_Trait> _92129_t = *it;
					{
						if (((*(_92129_t))._field_Token == nullptr)) {
							return;;
						};
						if (((*(_92129_t))._field_Methods.len() == 0LL)) {
							goto _iter_next_213061689;
						};
						_20ebea986_write(_self_, jule::Str("struct ", 7));
						_20ebea986_write(_self_, static__20ea3ab8e_traitDecl(_92129_t));
						_20ebea986_write(_self_, jule::Str("MptrData", 8));
						_20ebea986_write(_self_, jule::Str(" {\n", 3));
						_20ebeab84_addIndent(_self_);
						_20ec02a37_traitDataTypeMethods(_self_, &(_92129_t), &(_92129_t));
						_20ebead82_doneIndent(_self_);
						_20ebeb080_indent(_self_);
						_20ebea986_write(_self_, jule::Str("};\n\n", 4));
					}
					_iter_next_213061689:;
					++it;
					goto _iter_begin_213061689;
				}
				_iter_end_213061689:;
			};
		}));
	}));
}



inline void _20ec02edd_paramIns(jule::Ptr<_20ebea2d2_ObjectCoder> _self_, jule::Ptr<_20d3a4a9d_ParamIns>* _94233_p) {
	_20ebea986_write(_self_, _20ec0ea22_paramIns((*(_self_))._field_tc.ptr(), _94233_p));
	_20ebea986_write(_self_, jule::Str(" ", 1));
	_20ebea986_write(_self_, static__20ea3ae58_param(&((*((*(_94233_p))))._field_Decl)));
}



inline void _20ec03296_paramsIns(jule::Ptr<_20ebea2d2_ObjectCoder> _self_, jule::Slice<jule::Ptr<_20d3a4a9d_ParamIns>>* _94834_params) {
	if (((*(_94834_params)).len() == 0LL)) {
		_20ebea986_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_20ebea986_write(_self_, jule::Str("(", 1));
	{
		auto expr = _94834_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_213066804:;
		if (it != expr_end) {
			jule::I64 _95414_i = it - expr->begin();
			jule::Ptr<_20d3a4a9d_ParamIns> _95421_p = *it;
			{
				_20ec02edd_paramIns(_self_, &(_95421_p));
				if ((((*(_94834_params)).len() - _95414_i) > 1LL)) {
					_20ebea986_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_213066804:;
			++it;
			_95414_i++;
			goto _iter_begin_213066804;
		}
		_iter_end_213066804:;
	};
	_20ebea986_write(_self_, jule::Str(")", 1));
}



inline void _20ec03609_varInitExpr(jule::Ptr<_20ebea2d2_ObjectCoder> _self_, jule::Ptr<_20d458aca_Var>* _96336_v, jule::Fn<void(void)> _96345_init) {
	if ((*((*(_96336_v))))._field_Statically) {
		_20ebea986_write(_self_, jule::Str("static ", 7));
	};
	_20ebea986_write(_self_, _20ec10b99_kind((*(_self_))._field_tc.ptr(), (*((*((*(_96336_v))))._field_Kind))._field_Kind));
	_20ebea986_write(_self_, jule::Str(" ", 1));
	if ((*((*(_96336_v))))._field_Reference) {
		_20ebea986_write(_self_, jule::Str("*", 1));
	};
	_20ebea986_write(_self_, static__20ea3ba6e_var((*(_96336_v))));
	if ((_96345_init != nullptr)) {
		_20ebea986_write(_self_, jule::Str(" = ", 3));
		_96345_init();
	};
	_20ebea986_write(_self_, jule::Str(";", 1));
}



inline void _20ec038b2_var(jule::Ptr<_20ebea2d2_ObjectCoder> _self_, jule::Ptr<_20d458aca_Var> _98127_v) {
	if (_20d353a2a_IsIgnoreIdent((*(_98127_v))._field_Ident)) {
		return;;
	};
	if ((((*(_98127_v))._field_Value != nullptr) && ((*((*(_98127_v))._field_Value))._field_Expr != nullptr))) {
		if (((*((*((*(_98127_v))._field_Value))._field_Data))._field_Model != nullptr)) {
			if ((*(_98127_v))._field_Reference) {
				_20ec03609_varInitExpr(_self_, &(_98127_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_20ebea986_write(_self_, jule::Str("&(", 2));
					_20ea3216e_model((*(_self_))._field_ec, (*((*((*(_98127_v))._field_Value))._field_Data))._field_Model);
					_20ebea986_write(_self_, jule::Str(")", 1));
				}));
			} else {
				_20ec03609_varInitExpr(_self_, &(_98127_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_20ea27ae3_possibleRefExpr((*(_self_))._field_ec, (*((*((*(_98127_v))._field_Value))._field_Data))._field_Model);
				}));
			};
			return;;
		};
		_20ec03609_varInitExpr(_self_, &(_98127_v), nullptr);
		return;;
	};
	if ((*(_98127_v))._field_Reference) {
		_20ec03609_varInitExpr(_self_, &(_98127_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_20ebea986_write(_self_, jule::Str("nullptr", 7));
		}));
		return;;
	};
	if (_20ec17d5a_shouldInitialized(&((*((*(_98127_v))._field_Kind))._field_Kind))) {
		_20ec03609_varInitExpr(_self_, &(_98127_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_20ea32427_initExpr((*(_self_))._field_ec, (*((*(_98127_v))._field_Kind))._field_Kind);
		}));
		return;;
	};
	_20ec03609_varInitExpr(_self_, &(_98127_v), nullptr);
}



inline void _20ec03b6a_funcIns(jule::Ptr<_20ebea2d2_ObjectCoder> _self_, jule::Ptr<_20d3a5a49_FnIns>* _101232_f) {
	_20ec018d2_funcHead(_self_, _101232_f, false);
	_20ec03296_paramsIns(_self_, &((*((*(_101232_f))))._field_Params));
	_20ebea986_write(_self_, jule::Str(" ", 1));
	_20ea21823_funcScope((*(_self_))._field_sc, (*(_101232_f)));
	if (((*((*(_101232_f))))._field_Scope != nullptr)) {
		_20ebea986_write(_self_, jule::Str("\n\n", 2));
	};
}



inline void _20ec03e23_func(jule::Ptr<_20ebea2d2_ObjectCoder> _self_, jule::Ptr<_20d3a2b45_Fn>* _102229_f) {
	{
		auto expr = &((*((*(_102229_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_213078b8a:;
		if (it != expr_end) {
			jule::Ptr<_20d3a5a49_FnIns> _102321_ins = *it;
			{
				_20ec03b6a_funcIns(_self_, &(_102321_ins));
			}
			_iter_next_213078b8a:;
			++it;
			goto _iter_begin_213078b8a;
		}
		_iter_end_213078b8a:;
	};
}



inline void _20ec04286_funcTrait(jule::Ptr<_20ebea2d2_ObjectCoder> _self_, jule::Ptr<_20ebe8cb4_traitHash>* _102834_hash, jule::Ptr<_20d3a2b45_Fn>* _102857_f) {
	jule::Str _102913_ident = (*((*(_102857_f))))._field_Ident;;
	{
		auto expr = &((*((*(_102857_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21307a42d:;
		if (it != expr_end) {
			jule::Ptr<_20d3a5a49_FnIns> _103021_ins = *it;
			{
				(*(_103021_ins))._field_Scope=nullptr;
				_2240a0ad5_StrBuilder _103321_s = static__2240a0e04_New(static_cast<jule::I64>((((((*((*(_102857_f))))._field_Ident.len() + _102913_ident.len()) + (*((*(_102834_hash))))._field_ti.len()) + 2LL) + 4LLU)));;
				_2240a989c_WriteStr(&_103321_s, _102913_ident);
				_2240a9b55_WriteByte(&_103321_s, '_');
				_2240a989c_WriteStr(&_103321_s, (*((*(_102834_hash))))._field_ti);
				_2240a9b55_WriteByte(&_103321_s, '_');
				_2240a989c_WriteStr(&_103321_s, _20b055388_Itoa((*((*(_102834_hash))))._field_i));
				(*((*(_102857_f))))._field_Ident=_2240aa194_Str(&_103321_s);
				jule::Ptr<_20d4de28c_TypeKind> _104221_k = (*((*(_103021_ins))._field_Params[0LL]))._field_Kind;;
				(*((*(_103021_ins))._field_Params[0LL]))._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>((*((*(_102834_hash))))._field_t, 2)});
				_20ec03b6a_funcIns(_self_, &(_103021_ins));
				(*((*(_103021_ins))._field_Params[0LL]))._field_Kind=_104221_k;
			}
			_iter_next_21307a42d:;
			++it;
			goto _iter_begin_21307a42d;
		}
		_iter_end_21307a42d:;
	};
	(*((*(_102857_f))))._field_Ident=_102913_ident;
}



inline void _20ec045e9_traitWrapper(jule::Ptr<_20ebea2d2_ObjectCoder> _self_, jule::Ptr<_20d3a2b45_Fn>* _105037_m, jule::Ptr<_20ebe8cb4_traitHash>* _105050_hash) {
	_20ec04286_funcTrait(_self_, _105050_hash, _105037_m);
	if (((*((*(_105050_hash))))._field_s == nullptr)) {
		if (_23c5b2375_Production) {
			_20ebea986_write(_self_, jule::Str(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
		} else {
			_20ebea986_write(_self_, jule::Str(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
		};
		return;;
	};
	jule::Bool _106213_ptr = (!(_20d3a1a23_IsRef((*((*(_105037_m))))._field_Params[0LL].ptr())));;
	jule::Ptr<_20d3a2b45_Fn> _106417_sm = _20d3916d3_FindMethod((*((*(_105050_hash))))._field_s.ptr(), (*((*(_105037_m))))._field_Ident, false);;
	if (((_106417_sm == nullptr) || ((*(_106417_sm))._field_Instances.len() == 0LL))) {
		return;;
	};
	_20ebeab84_addIndent(_self_);
	_20ebea986_write(_self_, jule::Str("{\n", 2));
	_20ebeb080_indent(_self_);
	if (((*(_106417_sm))._field_Exceptional || (!(_20d3a30b8_IsVoid(_106417_sm.ptr()))))) {
		_20ebea986_write(_self_, jule::Str("return ", 7));
	};
	_20ebea986_write(_self_, static__20ea3a60b_func(&(_106417_sm)));
	_20ebea986_write(_self_, jule::Str("(", 1));
	if (_106213_ptr) {
		_20ebea986_write(_self_, jule::Str("_self_.safe_ptr<", 16));
		_20ebea986_write(_self_, _20ec0e04e_structureIns((*(_self_))._field_tc.ptr(), (*((*(_105050_hash))))._field_s));
		_20ebea986_write(_self_, jule::Str(">(", 2));
		if ((!(_23c5b2375_Production))) {
			_20ebea986_write(_self_, jule::Str("_00___file", 10));
		};
		_20ebea986_write(_self_, jule::Str(")", 1));
	} else {
		_20ebea986_write(_self_, jule::Str("_self_.data.as<", 15));
		_20ebea986_write(_self_, _20ec0dc0d_structure((*(_self_))._field_tc.ptr(), (*(_106417_sm))._field_Owner));
		_20ebea986_write(_self_, jule::Str(">()", 3));
	};
	{
		auto expr = (*((*(_105037_m))))._field_Params.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_213086aee:;
		if (it != expr_end) {
			jule::Ptr<_20d3a1171_Param> _109016_mp = *it;
			{
				_20ebea986_write(_self_, jule::Str(", ", 2));
				_20ebea986_write(_self_, static__20ea3ae58_param(&(_109016_mp)));
			}
			_iter_next_213086aee:;
			++it;
			goto _iter_begin_213086aee;
		}
		_iter_end_213086aee:;
	};
	_20ebea986_write(_self_, jule::Str(");\n}\n", 5));
	_20ebead82_doneIndent(_self_);
}



inline void _20ec047e7_traitWrappers(jule::Ptr<_20ebea2d2_ObjectCoder> _self_) {
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21308bb26:;
		if (it != expr_end) {
			jule::Ptr<_20ebe8cb4_traitHash> _109921_hash = *it;
			{
				{
					auto expr = &((*((*(_109921_hash))._field_t))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21308c550:;
					if (it != expr_end) {
						jule::Ptr<_20d3a2b45_Fn> _110025_m = *it;
						{
							_20ec045e9_traitWrapper(_self_, &(_110025_m), &(_109921_hash));
						}
						_iter_next_21308c550:;
						++it;
						goto _iter_begin_21308c550;
					}
					_iter_end_21308c550:;
				};
			}
			_iter_next_21308bb26:;
			++it;
			goto _iter_begin_21308bb26;
		}
		_iter_end_21308bb26:;
	};
}



inline void _20ec04b5a_traitDataMethods(jule::Ptr<_20ebea2d2_ObjectCoder> _self_, jule::Ptr<_20d3b5dde_Trait>* _110641_t, jule::Ptr<_20ebe8cb4_traitHash>* _110653_hash) {
	{
		auto expr = &((*((*(_110641_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21308d144:;
		if (it != expr_end) {
			jule::Ptr<_20d3a2b45_Fn> _110721_m = *it;
			{
				jule::Str _110817_mIdent = static__20ea3a60b_func(&(_110721_m));;
				_20ebeb080_indent(_self_);
				_20ebea986_write(_self_, jule::Str(".", 1));
				_20ebea986_write(_self_, _110817_mIdent);
				_20ebea986_write(_self_, jule::Str("=", 1));
				_20ebea986_write(_self_, _110817_mIdent);
				_20ebea986_write(_self_, jule::Str("_", 1));
				_20ebea986_write(_self_, (*((*(_110653_hash))))._field_ti);
				_20ebea986_write(_self_, jule::Str("_", 1));
				_20ebea986_write(_self_, _20b055388_Itoa((*((*(_110653_hash))))._field_i));
				_20ebea986_write(_self_, jule::Str(",\n", 2));
			}
			_iter_next_21308d144:;
			++it;
			goto _iter_begin_21308d144;
		}
		_iter_end_21308d144:;
	};
}



inline void _20ec04ebd_traitData(jule::Ptr<_20ebea2d2_ObjectCoder> _self_, jule::Ptr<_20ebe8cb4_traitHash>* _112234_hash, jule::Ptr<_20d3b5dde_Trait>* _112257_old) {
	if (((*((*((*(_112234_hash))))._field_t))._field_Methods.len() == 0LL)) {
		return;;
	};
	jule::Str _112613_ident = static__20ea3ab8e_traitDecl((*((*(_112234_hash))))._field_t);;
	if (((*((*(_112234_hash))))._field_t != (*(_112257_old)))) {
		if (((*(_112257_old)) != nullptr)) {
			_20ebead82_doneIndent(_self_);
			_20ebeb080_indent(_self_);
			_20ebea986_write(_self_, jule::Str("};\n", 3));
		};
		_20ebea986_write(_self_, jule::Str("static ", 7));
		_20ebea986_write(_self_, _112613_ident);
		_20ebea986_write(_self_, jule::Str("MptrData ", 9));
		_20ebea986_write(_self_, _112613_ident);
		_20ebea986_write(_self_, jule::Str("_mptr_data[] = {\n", 17));
		(*(_112257_old))=(*((*(_112234_hash))))._field_t;
		_20ebeab84_addIndent(_self_);
	};
	_20ebeb080_indent(_self_);
	_20ebea986_write(_self_, jule::Str("{\n", 2));
	_20ebeab84_addIndent(_self_);
	_20ec04b5a_traitDataMethods(_self_, &((*((*(_112234_hash))))._field_t), _112234_hash);
	_20ebead82_doneIndent(_self_);
	_20ebeb080_indent(_self_);
	_20ebea986_write(_self_, jule::Str("},\n", 3));
}



inline void _20ec051bb_traitDatas(jule::Ptr<_20ebea2d2_ObjectCoder> _self_) {
	jule::Ptr<_20d3b5dde_Trait> _115117_old = nullptr;;
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21309878c:;
		if (it != expr_end) {
			jule::Ptr<_20ebe8cb4_traitHash> _115221_hash = *it;
			{
				_20ec04ebd_traitData(_self_, &(_115221_hash), &(_115117_old));
			}
			_iter_next_21309878c:;
			++it;
			goto _iter_begin_21309878c;
		}
		_iter_end_21309878c:;
	};
	if ((_115117_old != nullptr)) {
		_20ebead82_doneIndent(_self_);
		_20ebeb080_indent(_self_);
		_20ebea986_write(_self_, jule::Str("};\n", 3));
	};
}



inline void _20ec053b9_globals(jule::Ptr<_20ebea2d2_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21309a618:;
		if (it != expr_end) {
			jule::Ptr<_20d458aca_Var> _116321_v = *it;
			{
				_20ebea986_write(_self_, _20ec10b99_kind((*(_self_))._field_tc.ptr(), (*((*(_116321_v))._field_Kind))._field_Kind));
				_20ebea986_write(_self_, jule::Str(" ", 1));
				_20ebea986_write(_self_, static__20ea3ba6e_var(_116321_v));
				_20ebea986_write(_self_, jule::Str(" = ", 3));
				_20ea3216e_model((*(_self_))._field_ec, (*((*((*(_116321_v))._field_Value))._field_Data))._field_Model);
				_20ebea986_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_21309a618:;
			++it;
			goto _iter_begin_21309a618;
		}
		_iter_end_21309a618:;
	};
}



inline void _20ec055b7_decls(jule::Ptr<_20ebea2d2_ObjectCoder> _self_) {
	_20ebedbdc_traitDecls(_self_);
	_20ebee193_structurePlainDecls(_self_);
	_20ec010b8_structureDecls(_self_);
	(*(_self_))._field_headPos=static_cast<jule::I64>(_2240aa628_Len(&(*(_self_))._field_Obj));
	_20ec012b6_structureMethodDecls(_self_);
	_20ec026c4_funcDecls(_self_);
	_20ebea986_write(_self_, jule::Str("\n\n", 2));
	_20ec02c35_traitDataTypes(_self_);
	_20ebea986_write(_self_, jule::Str("\n\n", 2));
	_20ec047e7_traitWrappers(_self_);
	_20ebea986_write(_self_, jule::Str("\n\n", 2));
	_20ec051bb_traitDatas(_self_);
	_20ebea986_write(_self_, jule::Str("\n\n", 2));
	(*(_self_))._field_declPos=static_cast<jule::I64>(_2240aa628_Len(&(*(_self_))._field_Obj));
	_20ec053b9_globals(_self_);
}



inline void _20ec05870_structureMethods(jule::Ptr<_20ebea2d2_ObjectCoder> _self_, jule::Ptr<_20d39066b_StructIns>* _119141_s) {
	{
		auto expr = &((*((*(_119141_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2248db750:;
		if (it != expr_end) {
			jule::Ptr<_20d3a2b45_Fn> _119221_f = *it;
			{
				_20ec03e23_func(_self_, &(_119221_f));
				_20ebea986_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_2248db750:;
			++it;
			goto _iter_begin_2248db750;
		}
		_iter_end_2248db750:;
	};
}



inline void _20ec05b28_structureDeriveDefs(jule::Ptr<_20ebea2d2_ObjectCoder> _self_, jule::Ptr<_20d39066b_StructIns>* _119844_s) {
	if (_20d38e02c_IsDerives((*((*(_119844_s))))._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_20ebea986_write(_self_, _20ea35859_cloneFuncDef((*(_self_))._field_dc.ptr(), &((*((*(_119844_s))))._field_Decl)));
		_20ebea986_write(_self_, jule::Str("{\n", 2));
		_20ebeab84_addIndent(_self_);
		_20ebeb080_indent(_self_);
		_20ebea986_write(_self_, _20ec0e04e_structureIns((*(_self_))._field_tc.ptr(), (*(_119844_s))));
		_20ebea986_write(_self_, jule::Str(" clone;\n", 8));
		{
			auto expr = &((*((*(_119844_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2248de90c:;
			if (it != expr_end) {
				jule::Ptr<_20d38eabb_FieldIns> _120620_f = *it;
				{
					jule::Str _120721_ident = static__20ea3b7a5_field(&((*(_120620_f))._field_Decl));;
					_20ebeb080_indent(_self_);
					_20ebea986_write(_self_, jule::Str("clone.", 6));
					_20ebea986_write(_self_, _120721_ident);
					_20ebea986_write(_self_, jule::Str(" = jule::clone(this->", 21));
					_20ebea986_write(_self_, _120721_ident);
					_20ebea986_write(_self_, jule::Str(");\n", 3));
				}
				_iter_next_2248de90c:;
				++it;
				goto _iter_begin_2248de90c;
			}
			_iter_end_2248de90c:;
		};
		_20ebeb080_indent(_self_);
		_20ebea986_write(_self_, jule::Str("return clone;\n", 14));
		_20ebead82_doneIndent(_self_);
		_20ebea986_write(_self_, jule::Str("}", 1));
	};
}



inline void _20ec05dd1_structureOstream(jule::Ptr<_20ebea2d2_ObjectCoder> _self_, jule::Ptr<_20d39066b_StructIns>* _122241_s) {
	_20ebeb080_indent(_self_);
	_20ebea986_write(_self_, jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_20ebea986_write(_self_, static__20ea3b4db_structureIns(_122241_s));
	_20ebea986_write(_self_, jule::Str(" _Src) {\n", 9));
	_20ebeab84_addIndent(_self_);
	_20ebeb080_indent(_self_);
	jule::Ptr<_20d3a2b45_Fn> _123017_fts = _20d3916d3_FindMethod((*(_122241_s)).ptr(), jule::Str("Str", 3), false);;
	if (static__20d45a2e6_Str(_123017_fts)) {
		_20ebea986_write(_self_, jule::Str("_Stream << ", 11));
		_20ebea986_write(_self_, static__20ea3a60b_func(&(_123017_fts)));
		_20ebea986_write(_self_, jule::Str("(&_Src);\n", 9));
	} else {
		_20ebea986_write(_self_, jule::Str("_Stream << \"", 12));
		_20ea32dd9_cstrBytes(&((*(_self_))._field_Obj), (*((*((*(_122241_s))))._field_Decl))._field_Ident);
		_20ebea986_write(_self_, jule::Str("{\";\n", 4));
		{
			auto expr = &((*((*(_122241_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2248e7a58:;
			if (it != expr_end) {
				jule::I64 _124018_i = it - expr->begin();
				jule::Ptr<_20d38eabb_FieldIns> _124025_f = *it;
				{
					_20ebeb080_indent(_self_);
					_20ebea986_write(_self_, jule::Str("_Stream << \"", 12));
					_20ea32dd9_cstrBytes(&((*(_self_))._field_Obj), (*((*(_124025_f))._field_Decl))._field_Ident);
					_20ebea986_write(_self_, jule::Str(":", 1));
					jule::Ptr<_20d39066b_StructIns> _124721_strct = _20d4e3208_Struct((*(_124025_f))._field_Kind.ptr());;
					if ((((_124721_strct != nullptr) && ((*(_124721_strct))._field_Decl != nullptr)) && (*((*(_124721_strct))._field_Decl))._field_Binded)) {
						_20ebea986_write(_self_, jule::Str(" cpp.", 5));
						_20ebea986_write(_self_, static__20ea3b7a5_field(&((*(_124025_f))._field_Decl)));
						_20ebea986_write(_self_, jule::Str("\"", 1));
					} else {
						_20ebea986_write(_self_, jule::Str("\" << _Src.", 10));
						_20ebea986_write(_self_, static__20ea3b7a5_field(&((*(_124025_f))._field_Decl)));
					};
					if (((_124018_i + 1LL) < (*((*(_122241_s))))._field_Fields.len())) {
						_20ebea986_write(_self_, jule::Str(" << \", \"", 8));
					};
					_20ebea986_write(_self_, jule::Str(";\n", 2));
				}
				_iter_next_2248e7a58:;
				++it;
				_124018_i++;
				goto _iter_begin_2248e7a58;
			}
			_iter_end_2248e7a58:;
		};
		_20ebeb080_indent(_self_);
		_20ebea986_write(_self_, jule::Str("_Stream << \"}\";\n", 16));
	};
	_20ebeb080_indent(_self_);
	_20ebea986_write(_self_, jule::Str("return _Stream;\n", 16));
	_20ebead82_doneIndent(_self_);
	_20ebea986_write(_self_, jule::Str("}", 1));
}



inline void _20ec06189_structureIns(jule::Ptr<_20ebea2d2_ObjectCoder> _self_, jule::Ptr<_20d39066b_StructIns>* _127337_s) {
	_20ec05870_structureMethods(_self_, _127337_s);
	_20ebea986_write(_self_, jule::Str("\n\n", 2));
	_20ec05b28_structureDeriveDefs(_self_, _127337_s);
	_20ebea986_write(_self_, jule::Str("\n\n", 2));
	_20ec05dd1_structureOstream(_self_, _127337_s);
}



inline void _20ec06442_structure(jule::Ptr<_20ebea2d2_ObjectCoder> _self_, jule::Ptr<_20d38c58b_Struct>* _128134_s) {
	{
		auto expr = &((*((*(_128134_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_224902bea:;
		if (it != expr_end) {
			jule::Ptr<_20d39066b_StructIns> _128221_ins = *it;
			{
				_20ec06189_structureIns(_self_, &(_128221_ins));
				_20ebea986_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_224902bea:;
			++it;
			goto _iter_begin_224902bea;
		}
		_iter_end_224902bea:;
	};
}



inline void _20ec06640_structures(jule::Ptr<_20ebea2d2_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_224903547:;
		if (it != expr_end) {
			jule::Ptr<_20d38c58b_Struct> _128921_s = *it;
			{
				if (((*(_128921_s))._field_Token != nullptr)) {
					_20ec06442_structure(_self_, &(_128921_s));
					_20ebea986_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_224903547:;
			++it;
			goto _iter_begin_224903547;
		}
		_iter_end_224903547:;
	};
}



inline void _20ec0683d_funcs(jule::Ptr<_20ebea2d2_ObjectCoder> _self_) {
	_20ebed7e1_iterPackages(_self_, jule::Fn<void(jule::Ptr<_20d417cba_Package>*)>([=](jule::Ptr<_20d417cba_Package>* _129835_pkg) mutable -> void {
		_20ec077c8_iterFiles(_129835_pkg, jule::Fn<void(jule::Ptr<_20d081e40_SymbolTable>*)>([=](jule::Ptr<_20d081e40_SymbolTable>* _129936_file) mutable -> void {
			{
				auto expr = &((*((*(_129936_file))))._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_224907804:;
				if (it != expr_end) {
					jule::Ptr<_20d3a2b45_Fn> _130029_f = *it;
					{
						if (((!(_23c5b1918_Test)) && _20ec17a91_hasDirective(&((*(_130029_f))._field_Directives), jule::Str("test", 4)))) {
							goto _iter_next_224907804;
						};
						if (((!((*(_130029_f))._field_Binded)) && ((*(_130029_f))._field_Token != nullptr))) {
							_20ec03e23_func(_self_, &(_130029_f));
							_20ebea986_write(_self_, jule::Str("\n\n", 2));
						};
					}
					_iter_next_224907804:;
					++it;
					goto _iter_begin_224907804;
				}
				_iter_end_224907804:;
			};
		}));
	}));
}



inline void _20ec06ae6_pushInit(jule::Ptr<_20ebea2d2_ObjectCoder> _self_, jule::Ptr<_20d417cba_Package>* _131333_pkg) {
	_20ec077c8_iterFiles(_131333_pkg, jule::Fn<void(jule::Ptr<_20d081e40_SymbolTable>*)>([=](jule::Ptr<_20d081e40_SymbolTable>* _131432_file) mutable -> void {
		{
			auto expr = &((*((*(_131432_file))))._field_Funcs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_22490a395:;
			if (it != expr_end) {
				jule::Ptr<_20d3a2b45_Fn> _131520_f = *it;
				{
					if ((*(_131520_f))._field_Ident.equal("init", 4)) {
						_20ebeb080_indent(_self_);
						_20ebea986_write(_self_, static__20ea3a60b_func(&(_131520_f)));
						_20ebea986_write(_self_, jule::Str("();\n", 4));
					};
				}
				_iter_next_22490a395:;
				++it;
				goto _iter_begin_22490a395;
			}
			_iter_end_22490a395:;
		};
	}));
}



inline void _20ec06ce4_initCaller(jule::Ptr<_20ebea2d2_ObjectCoder> _self_) {
	_20ebea986_write(_self_, jule::Str("void __jule_call_initializers(void) {\n", 38));
	_20ebeab84_addIndent(_self_);
	_20ebed7e1_iterPackages(_self_, jule::Fn<void(jule::Ptr<_20d417cba_Package>*)>([=](jule::Ptr<_20d417cba_Package>* _132835_pkg) mutable -> void {
		_20ec06ae6_pushInit(_self_, _132835_pkg);
	}));
	_20ebead82_doneIndent(_self_);
	_20ebea986_write(_self_, jule::Str("\n}", 2));
}



inline void _20ec06ee2_end(jule::Ptr<_20ebea2d2_ObjectCoder> _self_) {
	_20ebea986_write(_self_, jule::Str("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_23c5b1918_Test) {
		_20ebea986_write(_self_, jule::Str("test_point();", 13));
	} else {
		_20ebea986_write(_self_, jule::Str("entry_point();", 14));
	};
	_20ebea986_write(_self_, jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _20ec071e0_serializeHead(jule::Ptr<_20ebea2d2_ObjectCoder> _self_) {
	_20ebed538_prepareStructures(_self_);
	_20ebed9de_buildTraitMap(_self_);
	_20ebecd84_head(_self_);
	_20ebea986_write(_self_, jule::Str("\n", 1));
	_20ec055b7_decls(_self_);
	if ((_2240aa628_Len(&(*(_self_))._field_resultDecls) > 0LL)) {
		jule::Slice<jule::U8> _136321_head = jule::clone(_2240aab45_Buf(&(*(_self_))._field_Obj).slice(0LL, (*(_self_))._field_headPos));;
		(_136321_head).append(_2240aab45_Buf(&(*(_self_))._field_resultDecls));;
		(*(_self_))._field_declPos+=_2240aa628_Len(&(*(_self_))._field_resultDecls);
		(_136321_head).append(_2240aab45_Buf(&(*(_self_))._field_Obj).slice((*(_self_))._field_headPos));;
		{
			_2240aaded_SetBuf(&(*(_self_))._field_Obj, _136321_head);
		};
	};
	_20ebea986_write(_self_, jule::Str("\n", 1));
	_20ec06640_structures(_self_);
	_20ec0683d_funcs(_self_);
	_20ec06ce4_initCaller(_self_);
	_20ebea986_write(_self_, jule::Str("\n\n", 2));
	if ((_2240aa628_Len(&(*(_self_))._field_anyObj) > 0LL)) {
		jule::Slice<jule::U8> _137721_head = jule::clone(_2240aab45_Buf(&(*(_self_))._field_Obj).slice(0LL, (*(_self_))._field_declPos));;
		(_137721_head).append(_2240aab45_Buf(&(*(_self_))._field_anyObj));;
		(_137721_head).append(_2240aab45_Buf(&(*(_self_))._field_Obj).slice((*(_self_))._field_declPos));;
		{
			_2240aaded_SetBuf(&(*(_self_))._field_Obj, _137721_head);
		};
	};
}



inline void _20ec073dd_Serialize(jule::Ptr<_20ebea2d2_ObjectCoder> _self_) {
	_20ec071e0_serializeHead(_self_);
	_20ec06ee2_end(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _20ebea2d2_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Obj:" << _Src._field_Obj << ", ";
	_Stream << "resultDecls:" << _Src._field_resultDecls << ", ";
	_Stream << "anyObj:" << _Src._field_anyObj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "resultMap:" << _Src._field_resultMap << ", ";
	_Stream << "anyTypeMap:" << _Src._field_anyTypeMap << ", ";
	_Stream << "traitCastMap:" << _Src._field_traitCastMap << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "tc:" << _Src._field_tc << ", ";
	_Stream << "dc:" << _Src._field_dc << ", ";
	_Stream << "headPos:" << _Src._field_headPos << ", ";
	_Stream << "declPos:" << _Src._field_declPos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20db6b7d7_ObjectDeadCode> static__20db6bb4a_new(jule::Ptr<_20e027be8_IR>* _3424_ir) {
	return jule::new_ptr<_20db6b7d7_ObjectDeadCode>(_20db6b7d7_ObjectDeadCode{._field_ir=(*(_3424_ir))});;
}



inline jule::Bool _212a1d1e0_isLive(jule::Ptr<_20db6b7d7_ObjectDeadCode> _self_, jule::Ptr<_20d3b5dde_Trait>* _4030_t) {
	jule::Slice<jule::Ptr<_20d3b5dde_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_212a1ee5b:;
			{
				_4117_live=(*(_self_))._field_live._field_traits;
			}
		}
		_match_end_212a1ec5d:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212a1eec2:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_212a1eec2:;
			++it;
			_5213_i++;
			goto _iter_begin_212a1eec2;
		}
		_iter_end_212a1eec2:;
	};
	return false;;
}

inline jule::Bool _212a23c73_isLive(jule::Ptr<_20db6b7d7_ObjectDeadCode> _self_, jule::Ptr<_20d3a5a49_FnIns>* _4030_t) {
	jule::Slice<jule::Ptr<_20d3a5a49_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_212a257e1:;
			{
				_4117_live=(*(_self_))._field_live._field_fns;
			}
		}
		_match_end_212a25736:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212a26506:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_212a26506:;
			++it;
			_5213_i++;
			goto _iter_begin_212a26506;
		}
		_iter_end_212a26506:;
	};
	return false;;
}

inline jule::Bool _212a2a2c9_isLive(jule::Ptr<_20db6b7d7_ObjectDeadCode> _self_, jule::Ptr<_20d39066b_StructIns>* _4030_t) {
	jule::Slice<jule::Ptr<_20d39066b_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_212a2ec5c:;
			{
				_4117_live=(*(_self_))._field_live._field_structs;
			}
		}
		_match_end_212a2eac5:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212a2ed39:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_212a2ed39:;
			++it;
			_5213_i++;
			goto _iter_begin_212a2ed39;
		}
		_iter_end_212a2ed39:;
	};
	return false;;
}

inline jule::Bool _212a32c71_isLive(jule::Ptr<_20db6b7d7_ObjectDeadCode> _self_, jule::Ptr<_20d458aca_Var>* _4030_t) {
	jule::Slice<jule::Ptr<_20d458aca_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_212a348bb:;
			{
				_4117_live=(*(_self_))._field_live._field_vars;
			}
		}
		_match_end_212a3479a:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212a34855:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_212a34855:;
			++it;
			_5213_i++;
			goto _iter_begin_212a34855;
		}
		_iter_end_212a34855:;
	};
	return false;;
}



inline void _212a1d5a8_pushLive(jule::Ptr<_20db6b7d7_ObjectDeadCode> _self_, jule::Ptr<_20d3b5dde_Trait> _6035_t) {
	{
		
{
			_case_begin_212a2216c:;
			{
				{ jule::Slice<jule::Ptr<_20d3b5dde_Trait>> &__jule_push_dest = (*(_self_))._field_live._field_traits; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_212a21e6e:;
	};
}

inline void _212a240c5_pushLive(jule::Ptr<_20db6b7d7_ObjectDeadCode> _self_, jule::Ptr<_20d3a5a49_FnIns> _6035_t) {
	{
		
{
			_case_begin_212a28184:;
			{
				{ jule::Slice<jule::Ptr<_20d3a5a49_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_212a28063:;
	};
}

inline void _212a2a85c_pushLive(jule::Ptr<_20db6b7d7_ObjectDeadCode> _self_, jule::Ptr<_20d39066b_StructIns> _6035_t) {
	{
		
{
			_case_begin_212a2c111:;
			{
				{ jule::Slice<jule::Ptr<_20d39066b_StructIns>> &__jule_push_dest = (*(_self_))._field_live._field_structs; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_212a2be79:;
	};
}

inline void _212a33139_pushLive(jule::Ptr<_20db6b7d7_ObjectDeadCode> _self_, jule::Ptr<_20d458aca_Var> _6035_t) {
	{
		
{
			_case_begin_212a36e62:;
			{
				{ jule::Slice<jule::Ptr<_20d458aca_Var>> &__jule_push_dest = (*(_self_))._field_live._field_vars; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_212a36da7:;
	};
}



inline void _20db6c4ec_setReferencesAsLive(jule::Ptr<_20db6b7d7_ObjectDeadCode> _self_, jule::Ptr<_20d3a8be5_ReferenceStack>* _7344_rs) {
	if (((*(_7344_rs)) == nullptr)) {
		return;;
	};
	jule::I64 _7717_i = 0LL;;
	for (; (_7717_i < _20d3a93dd_Len((*(_7344_rs)).ptr())); (_7717_i)++) {
		{
			jule::Any _7921_ref = _20d3a972e_At((*(_7344_rs)).ptr(), _7717_i);;
			{
				auto &_match_expr{ _7921_ref };
				
				if (_match_expr.type == &__jule_any_type10) {
					_case_begin_212a1be58:;
					{
						jule::Ptr<_20d3b5dde_Trait> _8225_t = _7921_ref.cast_ptr<_20d3b5dde_Trait>(&__jule_any_type10);;
						if (_212a1d1e0_isLive(_self_, &(_8225_t))) {
							goto _iter_next_212a1b155;
						};
						_212a1d5a8_pushLive(_self_, _8225_t);
						{
							auto expr = &((*(_8225_t))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_212a1cb29:;
							if (it != expr_end) {
								jule::Ptr<_20d3a2b45_Fn> _8729_ins = *it;
								{
									{
										auto expr = &((*(_8729_ins))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_212a1de05:;
										if (it != expr_end) {
											jule::Ptr<_20d3a5a49_FnIns> _8833_mins = *it;
											{
												if (_212a23c73_isLive(_self_, &(_8833_mins))) {
													goto _iter_next_212a1de05;
												};
												_212a240c5_pushLive(_self_, _8833_mins);
												_20db6c4ec_setReferencesAsLive(_self_, &((*(_8833_mins))._field_Refers));
											}
											_iter_next_212a1de05:;
											++it;
											goto _iter_begin_212a1de05;
										}
										_iter_end_212a1de05:;
									};
								}
								_iter_next_212a1cb29:;
								++it;
								goto _iter_begin_212a1cb29;
							}
							_iter_end_212a1cb29:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_212a1bebe:;
					{
						jule::Ptr<_20d3a5a49_FnIns> _9725_f = _7921_ref.cast_ptr<_20d3a5a49_FnIns>(&__jule_any_type7);;
						if (_212a23c73_isLive(_self_, &(_9725_f))) {
							goto _match_end_212a1bd9d;
						};
						if ((((*(_9725_f))._field_Owner != nullptr) && (!((*((*(_9725_f))._field_Decl))._field_Statically)))) {
							if ((!(_212a2a2c9_isLive(_self_, &((*(_9725_f))._field_Owner))))) {
								_212a2a85c_pushLive(_self_, (*(_9725_f))._field_Owner);
								_20db6c4ec_setReferencesAsLive(_self_, &((*((*(_9725_f))._field_Owner))._field_Refers));
							};
						};
						_212a240c5_pushLive(_self_, _9725_f);
						_20db6c4ec_setReferencesAsLive(_self_, &((*(_9725_f))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_212a1c035:;
					{
						jule::Ptr<_20d458aca_Var> _11025_v = _7921_ref.cast_ptr<_20d458aca_Var>(&__jule_any_type8);;
						if (_212a32c71_isLive(_self_, &(_11025_v))) {
							goto _match_end_212a1bd9d;
						};
						_212a33139_pushLive(_self_, _11025_v);
						_20db6c4ec_setReferencesAsLive(_self_, &((*(_11025_v))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_212a1c09b:;
					{
						jule::Ptr<_20d39066b_StructIns> _11725_s = _7921_ref.cast_ptr<_20d39066b_StructIns>(&__jule_any_type9);;
						if (_212a2a2c9_isLive(_self_, &(_11725_s))) {
							goto _match_end_212a1bd9d;
						};
						_212a2a85c_pushLive(_self_, _11725_s);
						_20db6c4ec_setReferencesAsLive(_self_, &((*(_11725_s))._field_Refers));
						{
							auto expr = &((*(_11725_s))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_212a3879e:;
							if (it != expr_end) {
								jule::Ptr<_20d3a2b45_Fn> _12329_m = *it;
								{
									{
										auto expr = &((*(_12329_m))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_212a3acac:;
										if (it != expr_end) {
											jule::Ptr<_20d3a5a49_FnIns> _12433_ins = *it;
											{
												if (_212a23c73_isLive(_self_, &(_12433_ins))) {
													goto _iter_next_212a3acac;
												};
												if (_20db701c0_isTraitMethod(&(_11725_s), &(_12433_ins))) {
													_212a240c5_pushLive(_self_, _12433_ins);
													_20db6c4ec_setReferencesAsLive(_self_, &((*(_12433_ins))._field_Refers));
												};
											}
											_iter_next_212a3acac:;
											++it;
											goto _iter_begin_212a3acac;
										}
										_iter_end_212a3acac:;
									};
								}
								_iter_next_212a3879e:;
								++it;
								goto _iter_begin_212a3879e;
							}
							_iter_end_212a3879e:;
						};
					}
				}
				_match_end_212a1bd9d:;
			};
		}
	_iter_next_212a1b155:;
	}
	_iter_end_212a1b155:;;
}



inline void _20db6c7a5_inits(jule::Ptr<_20db6b7d7_ObjectDeadCode> _self_, jule::Ptr<_20d417cba_Package>* _14130_pkg) {
	{
		auto expr = &((*((*(_14130_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212a3227b:;
		if (it != expr_end) {
			jule::Ptr<_20d081e40_SymbolTable> _14221_file = *it;
			{
				{
					auto expr = &((*(_14221_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_212a3b609:;
					if (it != expr_end) {
						jule::Ptr<_20d3a2b45_Fn> _14325_f = *it;
						{
							if ((*(_14325_f))._field_Ident.equal("init", 4)) {
								jule::Ptr<_20d3a5a49_FnIns> _14529_ins = (*(_14325_f))._field_Instances[0LL];;
								{ jule::Slice<jule::Ptr<_20d3a5a49_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_14529_ins); };
								_20db6c4ec_setReferencesAsLive(_self_, &((*(_14529_ins))._field_Refers));
							};
						}
						_iter_next_212a3b609:;
						++it;
						goto _iter_begin_212a3b609;
					}
					_iter_end_212a3b609:;
				};
			}
			_iter_next_212a3227b:;
			++it;
			goto _iter_begin_212a3227b;
		}
		_iter_end_212a3227b:;
	};
}



inline void _20db6ca5d_collectLivePackage(jule::Ptr<_20db6b7d7_ObjectDeadCode> _self_, jule::Ptr<_20d417cba_Package>* _15343_pkg) {
	_20db6c7a5_inits(_self_, _15343_pkg);
	if (_23c5b1918_Test) {
		{
			auto expr = &((*((*(_15343_pkg))))._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_212a41444:;
			if (it != expr_end) {
				jule::Ptr<_20d081e40_SymbolTable> _15925_file = *it;
				{
					{
						auto expr = &((*(_15925_file))._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_212a41d90:;
						if (it != expr_end) {
							jule::Ptr<_20d3a2b45_Fn> _16029_f = *it;
							{
								if (_20db6ed07_hasDirective(&((*(_16029_f))._field_Directives), jule::Str("test", 4))) {
									jule::Ptr<_20d3a5a49_FnIns> _16233_ins = (*(_16029_f))._field_Instances[0LL];;
									{ jule::Slice<jule::Ptr<_20d3a5a49_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_16233_ins); };
									_20db6c4ec_setReferencesAsLive(_self_, &((*(_16233_ins))._field_Refers));
								};
							}
							_iter_next_212a41d90:;
							++it;
							goto _iter_begin_212a41d90;
						}
						_iter_end_212a41d90:;
					};
				}
				_iter_next_212a41444:;
				++it;
				goto _iter_begin_212a41444;
			}
			_iter_end_212a41444:;
		};
	};
}



inline void _20db6cc5b_collectLive(jule::Ptr<_20db6b7d7_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212a41235:;
		if (it != expr_end) {
			jule::Ptr<_20d414d94_ImportInfo> _17221_used = *it;
			{
				if ((!((*(_17221_used))._field_Binded))) {
					_20db6ca5d_collectLivePackage(_self_, &((*(_17221_used))._field_Package));
				};
			}
			_iter_next_212a41235:;
			++it;
			goto _iter_begin_212a41235;
		}
		_iter_end_212a41235:;
	};
	_20db6ca5d_collectLivePackage(_self_, &((*((*(_self_))._field_ir))._field_Main));
	jule::Ptr<_20d3a2b45_Fn> _18017_main = _20d41934e_FindFn((*((*(_self_))._field_ir))._field_Main.ptr(), jule::Str("main", 4), false);;
	jule::Ptr<_20d3a5a49_FnIns> _18117_ins = (*(_18017_main))._field_Instances[0LL];;
	{ jule::Slice<jule::Ptr<_20d3a5a49_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_18117_ins); };
	_20db6c4ec_setReferencesAsLive(_self_, &((*(_18117_ins))._field_Refers));
}



inline void _20db6d014_removeDeadGlobals(jule::Ptr<_20db6b7d7_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_20d458aca_Var>>* _18642_vars) {
	jule::I64 _18717_i = 0LL;;
	while ((_18717_i < (*(_18642_vars)).len())) {
		{
			jule::Ptr<_20d458aca_Var> _18917_v = (*(_18642_vars))[_18717_i];;
			if (_212a32c71_isLive(_self_, &(_18917_v))) {
				(_18717_i)++;
				goto _iter_next_212a4823c;
			};
			(*(_18642_vars))=jule::append((*(_18642_vars)).slice(0LL, _18717_i),(*(_18642_vars)).slice((_18717_i + 1LL)));
		}
	_iter_next_212a4823c:;
	}
	_iter_end_212a4823c:;;
}



inline void _20db6d2bc_removeDeadFns(jule::Ptr<_20db6b7d7_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_20d3a2b45_Fn>>* _19838_funcs) {
	jule::I64 _19917_i = 0LL;;
	while ((_19917_i < (*(_19838_funcs)).len())) {
		{
			jule::Ptr<_20d3a2b45_Fn> _20121_f = (*(_19838_funcs))[_19917_i];;
			jule::I64 _20221_j = 0LL;;
			while ((_20221_j < (*(_20121_f))._field_Instances.len())) {
				{
					jule::Ptr<_20d3a5a49_FnIns> _20421_ins = (*(_20121_f))._field_Instances[_20221_j];;
					if (_212a23c73_isLive(_self_, &(_20421_ins))) {
						(_20221_j)++;
						goto _iter_next_212a4b33e;
					};
					(*(_20121_f))._field_Instances=jule::append((*(_20121_f))._field_Instances.slice(0LL, _20221_j),(*(_20121_f))._field_Instances.slice((_20221_j + 1LL)));
				}
			_iter_next_212a4b33e:;
			}
			_iter_end_212a4b33e:;;
			if (((*(_20121_f))._field_Instances.len() == 0LL)) {
				(*(_19838_funcs))=jule::append((*(_19838_funcs)).slice(0LL, _19917_i),(*(_19838_funcs)).slice((_19917_i + 1LL)));
				goto _iter_next_212a4a53b;
			};
			(_19917_i)++;
		}
	_iter_next_212a4a53b:;
	}
	_iter_end_212a4a53b:;;
}



inline void _20db6d575_removeDeadStructs(jule::Ptr<_20db6b7d7_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_20d38c58b_Struct>>* _21942_structs) {
	jule::I64 _22017_i = 0LL;;
	while ((_22017_i < (*(_21942_structs)).len())) {
		{
			jule::Ptr<_20d38c58b_Struct> _22221_s = (*(_21942_structs))[_22017_i];;
			jule::I64 _22321_j = 0LL;;
			while ((_22321_j < (*(_22221_s))._field_Instances.len())) {
				{
					jule::Ptr<_20d39066b_StructIns> _22525_ins = (*(_22221_s))._field_Instances[_22321_j];;
					_20db6d2bc_removeDeadFns(_self_, &((*(_22525_ins))._field_Methods));
					if ((((*(_22525_ins))._field_Methods.len() != 0LL) || _212a2a2c9_isLive(_self_, &(_22525_ins)))) {
						(_22321_j)++;
						goto _iter_next_212a507e9;
					};
					(*(_22221_s))._field_Instances=jule::append((*(_22221_s))._field_Instances.slice(0LL, _22321_j),(*(_22221_s))._field_Instances.slice((_22321_j + 1LL)));
				}
			_iter_next_212a507e9:;
			}
			_iter_end_212a507e9:;;
			if (((*(_22221_s))._field_Instances.len() == 0LL)) {
				(*(_21942_structs))=jule::append((*(_21942_structs)).slice(0LL, _22017_i),(*(_21942_structs)).slice((_22017_i + 1LL)));
				goto _iter_next_212a4e9e6;
			};
			(_22017_i)++;
		}
	_iter_next_212a4e9e6:;
	}
	_iter_end_212a4e9e6:;;
}



inline void _20db6d82d_removeDeadTraits(jule::Ptr<_20db6b7d7_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_20d3b5dde_Trait>>* _24141_traits) {
	jule::I64 _24217_i = 0LL;;
	while ((_24217_i < (*(_24141_traits)).len())) {
		{
			jule::Ptr<_20d3b5dde_Trait> _24421_t = (*(_24141_traits))[_24217_i];;
			if ((!(_212a1d1e0_isLive(_self_, &(_24421_t))))) {
				(*(_24141_traits))=jule::append((*(_24141_traits)).slice(0LL, _24217_i),(*(_24141_traits)).slice((_24217_i + 1LL)));
				goto _iter_next_212a54a0c;
			};
			jule::I64 _24921_j = 0LL;;
			while ((_24921_j < (*(_24421_t))._field_Implemented.len())) {
				{
					jule::Ptr<_20d38c58b_Struct> _25121_s = (*(_24421_t))._field_Implemented[_24921_j];;
					if (((*(_25121_s))._field_Instances.len() > 0LL)) {
						(_24921_j)++;
						goto _iter_next_212a5538c;
					};
					(*(_24421_t))._field_Implemented=jule::append((*(_24421_t))._field_Implemented.slice(0LL, _24921_j),(*(_24421_t))._field_Implemented.slice((_24921_j + 1LL)));
				}
			_iter_next_212a5538c:;
			}
			_iter_end_212a5538c:;;
			(_24217_i)++;
		}
	_iter_next_212a54a0c:;
	}
	_iter_end_212a54a0c:;;
}



inline void _20db6dad6_removeDeadsFile(jule::Ptr<_20db6b7d7_ObjectDeadCode> _self_, jule::Ptr<_20d081e40_SymbolTable>* _26240_file) {
	_20db6d2bc_removeDeadFns(_self_, &((*((*(_26240_file))))._field_Funcs));
	_20db6d575_removeDeadStructs(_self_, &((*((*(_26240_file))))._field_Structs));
	_20db6d82d_removeDeadTraits(_self_, &((*((*(_26240_file))))._field_Traits));
	_20db6d014_removeDeadGlobals(_self_, &((*((*(_26240_file))))._field_Vars));
}



inline void _20db6dd8e_removeDeadsPackage(jule::Ptr<_20db6b7d7_ObjectDeadCode> _self_, jule::Ptr<_20d417cba_Package>* _26943_pkg) {
	{
		auto expr = &((*((*(_26943_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212a5a7d2:;
		if (it != expr_end) {
			jule::Ptr<_20d081e40_SymbolTable> _27021_file = *it;
			{
				_20db6dad6_removeDeadsFile(_self_, &(_27021_file));
			}
			_iter_next_212a5a7d2:;
			++it;
			goto _iter_begin_212a5a7d2;
		}
		_iter_end_212a5a7d2:;
	};
}



inline void _20db6e08c_removeDeads(jule::Ptr<_20db6b7d7_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212a5b140:;
		if (it != expr_end) {
			jule::Ptr<_20d414d94_ImportInfo> _27621_used = *it;
			{
				if ((!((*(_27621_used))._field_Binded))) {
					_20db6dd8e_removeDeadsPackage(_self_, &((*(_27621_used))._field_Package));
				};
			}
			_iter_next_212a5b140:;
			++it;
			goto _iter_begin_212a5b140;
		}
		_iter_end_212a5b140:;
	};
	_20db6dd8e_removeDeadsPackage(_self_, &((*((*(_self_))._field_ir))._field_Main));
}



inline void _20db6e28a_elimanate(jule::Ptr<_20db6b7d7_ObjectDeadCode> _self_) {
	_20db6cc5b_collectLive(_self_);
	_20db6e08c_removeDeads(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _20db6b7d7_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_x_20e027be8_IR__jule_tuple_s_22730be5e_Log static__20e02815a_Build(jule::Str _2721_path, jule::I64 _2732_flags) {
	__jule_tuple_x_20e027be8_IR__jule_tuple_s_22730be5e_Log __jule_func_result;
	jule::Ptr<_20e025234_JuleImporter> _2817_importer = static__20e025630_New(_20e029b40_buildCompileInfo());;
	jule::Slice<jule::Ptr<_20d3699ec_Ast>> _2918_files;;
	jule::Slice<_22730be5e_Log> _2929_logs;;
	({
		__jule_tuple_sx_20d3699ec_Ast__jule_tuple_s_22730be5e_Log __jule_assign_result = _20e026b1a_ImportPackage(_2817_importer.ptr(), _2721_path, true);
		_2918_files = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Str _3313_root = _2721_path;;
	if ((_2918_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_20d417cba_Package> _3918_pkg;;
	({
		__jule_tuple_x_20d417cba_Package__jule_tuple_s_22730be5e_Log __jule_assign_result = _20d51070e_AnalyzePackage(_2918_files, jule::Trait<_20d411e7e_Importer>(_2817_importer, 0), _2732_flags);
		_3918_pkg = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_20e027be8_IR> _4417_ir = jule::new_ptr<_20e027be8_IR>(_20e027be8_IR{._field_Root=_3313_root, ._field_Main=_3918_pkg, ._field_Used=_20e0258b6_AllPackages(_2817_importer.ptr()), });;
	(*(_4417_ir))._field_Passes=_20e029931_getAllUniquePasses(&((*(_4417_ir))._field_Main), (*(_4417_ir))._field_Used);
	__jule_func_result.__jule_result_arg0 = _4417_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _20e028644_appendStructs(_20e027be8_IR* _self_, jule::Ptr<_20d417cba_Package>* _5633_p, jule::Slice<jule::Ptr<_20d38c58b_Struct>>* _5657_buffer) {
	{
		auto expr = &((*((*(_5633_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2129d356d:;
		if (it != expr_end) {
			jule::Ptr<_20d081e40_SymbolTable> _5721_f = *it;
			{
				{
					auto expr = &((*(_5721_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2129d3e86:;
					if (it != expr_end) {
						jule::Ptr<_20d38c58b_Struct> _5825_s = *it;
						{
							if ((!((*(_5825_s))._field_Binded))) {
								{ jule::Slice<jule::Ptr<_20d38c58b_Struct>> &__jule_push_dest = (*(_5657_buffer)); __jule_push_dest.push(_5825_s); };
							};
						}
						_iter_next_2129d3e86:;
						++it;
						goto _iter_begin_2129d3e86;
					}
					_iter_end_2129d3e86:;
				};
			}
			_iter_next_2129d356d:;
			++it;
			goto _iter_begin_2129d356d;
		}
		_iter_end_2129d356d:;
	};
}



inline jule::Slice<jule::Ptr<_20d38c58b_Struct>> _20e0288ca_GetAllStructures(_20e027be8_IR* _self_) {
	jule::Slice<jule::Ptr<_20d38c58b_Struct>> _6917_buffer = nullptr;;
	_20e028644_appendStructs(_self_, &((*(_self_))._field_Main), &(_6917_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2129d46c3:;
		if (it != expr_end) {
			jule::Ptr<_20d414d94_ImportInfo> _7121_u = *it;
			{
				if ((!((*(_7121_u))._field_Binded))) {
					_20e028644_appendStructs(_self_, &((*(_7121_u))._field_Package), &(_6917_buffer));
				};
			}
			_iter_next_2129d46c3:;
			++it;
			goto _iter_begin_2129d46c3;
		}
		_iter_end_2129d46c3:;
	};
	return _6917_buffer;;
}



inline void _20e028c3d_appendGlobals(_20e027be8_IR* _self_, jule::Ptr<_20d417cba_Package>* _7933_p, jule::Slice<jule::Ptr<_20d458aca_Var>>* _7957_buffer) {
	{
		auto expr = &((*((*(_7933_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2129d684b:;
		if (it != expr_end) {
			jule::Ptr<_20d081e40_SymbolTable> _8021_f = *it;
			{
				{
					auto expr = &((*(_8021_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2129d7264:;
					if (it != expr_end) {
						jule::Ptr<_20d458aca_Var> _8125_v = *it;
						{
							if (((((*(_8125_v))._field_Token != nullptr) && (!((*(_8125_v))._field_Binded))) && (!((*(_8125_v))._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_20d458aca_Var>> &__jule_push_dest = (*(_7957_buffer)); __jule_push_dest.push(_8125_v); };
							};
						}
						_iter_next_2129d7264:;
						++it;
						goto _iter_begin_2129d7264;
					}
					_iter_end_2129d7264:;
				};
			}
			_iter_next_2129d684b:;
			++it;
			goto _iter_begin_2129d684b;
		}
		_iter_end_2129d684b:;
	};
}



inline jule::Slice<jule::Ptr<_20d458aca_Var>> _20e028ec4_GetAllGlobals(_20e027be8_IR* _self_) {
	jule::Slice<jule::Ptr<_20d458aca_Var>> _9217_buffer = nullptr;;
	_20e028c3d_appendGlobals(_self_, &((*(_self_))._field_Main), &(_9217_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2129d79d4:;
		if (it != expr_end) {
			jule::Ptr<_20d414d94_ImportInfo> _9421_u = *it;
			{
				if ((!((*(_9421_u))._field_Binded))) {
					_20e028c3d_appendGlobals(_self_, &((*(_9421_u))._field_Package), &(_9217_buffer));
				};
			}
			_iter_next_2129d79d4:;
			++it;
			goto _iter_begin_2129d79d4;
		}
		_iter_end_2129d79d4:;
	};
	return _9217_buffer;;
}



inline void _20e0291c2_Order(_20e027be8_IR* _self_) {
	(*(_self_))._field_Ordered._field_Structs=_20e0288ca_GetAllStructures(_self_);
	(*(_self_))._field_Ordered._field_Globals=_20e028ec4_GetAllGlobals(_self_);
	static__20e02b0a3_orderStructures(&((*(_self_))._field_Ordered._field_Structs));
	static__20e02b2d4_orderVars(&((*(_self_))._field_Ordered._field_Globals));
}







std::ostream &operator<<(std::ostream &_Stream, _20e027be8_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _20d3909e0_Str(_20d39066b_StructIns* _self_) {
	_2240a0ad5_StrBuilder _25117_kind = static__2240a0e04_New(32LL);;
	_2240a989c_WriteStr(&_25117_kind, (*((*(_self_))._field_Decl))._field_Ident);
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		_2240a9b55_WriteByte(&_25117_kind, '[');
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2104252e2:;
			if (it != expr_end) {
				jule::I64 _25517_i = it - expr->begin();
				jule::Ptr<_20d4dc8a6_InsGeneric> *_25520_g = it;
				{
					_2240a989c_WriteStr(&_25117_kind, _20d4de655_Str((*((*(_25520_g))))._field_Kind.ptr()));
					if ((_25517_i < ((*(_self_))._field_Generics.len() - 1LL))) {
						_2240a9b55_WriteByte(&_25117_kind, ',');
					};
				}
				_iter_next_2104252e2:;
				++it;
				_25517_i++;
				goto _iter_begin_2104252e2;
			}
			_iter_end_2104252e2:;
		};
		_2240a9b55_WriteByte(&_25117_kind, ']');
	};
	return _2240aa194_Str(&_25117_kind);;
}



inline jule::Bool _20d390d31_Equal(jule::Ptr<_20d39066b_StructIns> _self_, jule::Ptr<_20d4de28c_TypeKind> _26721_other) {
	jule::Ptr<_20d39066b_StructIns> _26813_s = _20d4e3208_Struct(_26721_other.ptr());;
	if ((_26813_s == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Decl != (*(_26813_s))._field_Decl)) {
		return false;;
	};
	if (((*(_self_))._field_Generics.len() != (*(_26813_s))._field_Generics.len())) {
		return false;;
	};
	jule::I64 _28117_i = 0LL;;
	for (; (_28117_i < (*(_self_))._field_Generics.len()); (_28117_i)++) {
		{
			if ((!(_20d4de996_Equal((*((*(_self_))._field_Generics[_28117_i]))._field_Kind, (*((*(_26813_s))._field_Generics[_28117_i]))._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_210429736:;
	}
	_iter_end_210429736:;;
	return true;;
}



inline jule::Bool _20d3912d7_Same(_20d39066b_StructIns* _self_, jule::Ptr<_20d39066b_StructIns> _29519_s) {
	if ((((*(_self_))._field_Decl != (*(_29519_s))._field_Decl) || ((*(_29519_s))._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21042b5a1:;
		if (it != expr_end) {
			jule::I64 _29913_i = it - expr->begin();
			jule::Ptr<_20d4dc8a6_InsGeneric> *_29916_g = it;
			{
				jule::Ptr<_20d4dc8a6_InsGeneric> _30017_g2 = (*(_29519_s))._field_Generics[_29913_i];;
				if ((((*((*((*(_29916_g))))._field_Kind))._field_BindIdent != (*((*(_30017_g2))._field_Kind))._field_BindIdent) || (!(_20d4de996_Equal((*((*(_29916_g))))._field_Kind, (*(_30017_g2))._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_21042b5a1:;
			++it;
			_29913_i++;
			goto _iter_begin_21042b5a1;
		}
		_iter_end_21042b5a1:;
	};
	return true;;
}



inline jule::Ptr<_20d3a2b45_Fn> _20d3916d3_FindMethod(_20d39066b_StructIns* _self_, jule::Str _31029_ident, jule::Bool _31041_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21042ead2:;
		if (it != expr_end) {
			jule::Ptr<_20d3a2b45_Fn> _31121_f = *it;
			{
				if ((((*(_31121_f))._field_Statically == _31041_statically) && ((*(_31121_f))._field_Ident == _31029_ident))) {
					return _31121_f;;
				};
			}
			_iter_next_21042ead2:;
			++it;
			goto _iter_begin_21042ead2;
		}
		_iter_end_21042ead2:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d38eabb_FieldIns> _20d391a24_FindField(_20d39066b_StructIns* _self_, jule::Str _32128_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_210430e02:;
		if (it != expr_end) {
			jule::Ptr<_20d38eabb_FieldIns> _32221_f = *it;
			{
				if (((*((*(_32221_f))._field_Decl))._field_Ident == _32128_ident)) {
					return _32221_f;;
				};
			}
			_iter_next_210430e02:;
			++it;
			goto _iter_begin_210430e02;
		}
		_iter_end_210430e02:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d458aca_Var> _20d391d65_FindStatic(_20d39066b_StructIns* _self_, jule::Str _33229_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_210432123:;
		if (it != expr_end) {
			jule::Ptr<_20d458aca_Var> _33321_v = *it;
			{
				if (((*(_33321_v))._field_Ident == _33229_ident)) {
					return _33321_v;;
				};
			}
			_iter_next_210432123:;
			++it;
			goto _iter_begin_210432123;
		}
		_iter_end_210432123:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _20d39066b_StructIns _Src) {
	_Stream << _20d3909e0_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_2273b5cd7_Cmd> static__2273b6205_New(jule::Str _2619_path) {
	return jule::new_ptr<_2273b5cd7_Cmd>(_2273b5cd7_Cmd{._field_path=_2619_path, });;
}



inline jule::VoidExceptional _2273b6403_Spawn(_2273b5cd7_Cmd* _self_) {
	({
		auto except = _2273ba3e6_spawn(_self_);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _2273b6887_Wait(_2273b5cd7_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(({
		auto except = _2273ba87a_wait(_self_);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::I64>(except.error);
		} 0;});
	})));;
}



inline jule::VoidExceptional _2273ba3e6_spawn(_2273b5cd7_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess != nullptr)) {
		jule::panic(jule::Str("command is already spawned", 26) + jule::Str("\nlocation: std/process/cmd_windows.jule:43:13"));;
	};
	STARTUPINFOW _4517_startupInfo = (STARTUPINFOW){};;
	PROCESS_INFORMATION _4617_processInfo = (PROCESS_INFORMATION){};;
	{
		ZeroMemory((&(_4517_startupInfo)), static_cast<jule::U64>(sizeof(_4517_startupInfo)));
		ZeroMemory((&(_4617_processInfo)), static_cast<jule::U64>(sizeof(_4617_processInfo)));
	};
	_4517_startupInfo.cb=static_cast<jule::U64>(sizeof(_4517_startupInfo));
	jule::Slice<jule::Str> _5217_args = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len()));;
	_5217_args[0LL]=(*(_self_))._field_path;
	(_5217_args).append((*(_self_))._field_Args);;
	jule::Slice<jule::U16> _5513_argv = _223d8dac1_Utf16FromStr(_2273baeeb_makeCmdLine(_5217_args));;
	jule::Slice<jule::U16> _5613_env = ({
		auto except = _2273bb3c5_createEnvBlock((*(_self_))._field_Env);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional(except.error);
		} jule::Slice<jule::U16>(nullptr);});
	});;
	jule::U16* _5717_envp = (&(_5613_env[0LL]));;
	if (((*(_self_))._field_Env.len() == 0LL)) {
		_5717_envp=nullptr;
	};
	;
	{
		if ((CreateProcessW(nullptr, ((wchar_t*)((&(_5513_argv[0LL])))), nullptr, nullptr, 0LL, 1024LLU, _5717_envp, nullptr, (&(_4517_startupInfo)), (&(_4617_processInfo))) == 0LL)) {
			return jule::VoidExceptional(jule::Any(_2273bc629_getLastProcessError(), &__jule_any_type0));
		};
	};
	(*(_self_))._field_attrs._field_hProcess=_4617_processInfo.hProcess;
	(*(_self_))._field_attrs._field_hThread=_4617_processInfo.hThread;
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _2273ba87a_wait(_2273b5cd7_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess == nullptr)) {
		jule::panic(jule::Str("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_windows.jule:86:13"));;
	};
	{
		WaitForSingleObject((*(_self_))._field_attrs._field_hProcess, INFINITE);
	};
	__jule_unsigned_long _8917_exitCode = static_cast<__jule_unsigned_long>(4294967295LLU);;
	{
		GetExitCodeProcess((*(_self_))._field_attrs._field_hProcess, (&(_8917_exitCode)));
		_223db80b2_CloseHandle(static_cast<jule::Uintptr>(((jule::Uintptr)((*(_self_))._field_attrs._field_hProcess))));
		_223db80b2_CloseHandle(static_cast<jule::Uintptr>(((jule::Uintptr)((*(_self_))._field_attrs._field_hThread))));
	};
	(*(_self_))._field_attrs._field_hProcess=nullptr;
	(*(_self_))._field_attrs._field_hThread=nullptr;
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(static_cast<jule::I64>(_8917_exitCode)));;
}







std::ostream &operator<<(std::ostream &_Stream, _2273b5cd7_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "attrs:" << _Src._field_attrs << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}



inline jule::I32 _223d8cb58_DecodeRune(jule::I32 _6815_r1, jule::I32 _6825_r2) {
	if (((((55296LL <= _6815_r1) && (_6815_r1 < 56320LL)) && (56320LL <= _6825_r2)) && (_6825_r2 < 57344LL))) {
		return static_cast<jule::I32>(((((_6815_r1 - 55296LL) << 10LL) | (_6825_r2 - 56320LL)) + 65536LL));;
	};
	return 65533LL;;
}



inline __jule_tuple_i32__jule_tuple_i32 _223d8ce22_EncodeRune(jule::I32 _7819_r) {
	__jule_tuple_i32__jule_tuple_i32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((_7819_r < 65536LL) || (_7819_r > 1114111LL))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 65533LL;
		return __jule_func_result;;
	};
	_7819_r-=65536LL;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((55296LL + ((_7819_r >> 10LL) & 1023LL)));
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>((56320LL + (_7819_r & 1023LL)));
	return __jule_func_result;;
}



inline jule::Slice<jule::U16> _223d8d263_Encode(jule::Slice<jule::I32> _8711_s) {
	jule::I64 _8813_n = _8711_s.len();;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20ec91ca2:;
		if (it != expr_end) {
			jule::I32 *_8912_v = it;
			{
				if (((*(_8912_v)) >= 65536LL)) {
					(_8813_n)++;
				};
			}
			_iter_next_20ec91ca2:;
			++it;
			goto _iter_begin_20ec91ca2;
		}
		_iter_end_20ec91ca2:;
	};
	jule::Slice<jule::U16> _9513_a = jule::Slice<jule::U16>::alloc(_8813_n, _8813_n, 0);;
	_8813_n=0LL;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20ec93402:;
		if (it != expr_end) {
			jule::I32 *_9712_v = it;
			{
				{
					
					if (((0LL <= (*(_9712_v))) && ((*(_9712_v)) < 55296LL)) || ((57344LL <= (*(_9712_v))) && ((*(_9712_v)) < 65536LL))) {
						_case_begin_20ec94249:;
						{
							_9513_a[_8813_n]=static_cast<jule::U16>(static_cast<jule::U16>((*(_9712_v))));
							(_8813_n)++;
						}
					}
					else if (((65536LL <= (*(_9712_v))) && ((*(_9712_v)) <= 1114111LL))) {
						_case_begin_20ec9415b:;
						{
							jule::I32 _10518_r1 = 0;;
							jule::I32 _10522_r2 = 0;;
							({
								__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _223d8ce22_EncodeRune((*(_9712_v)));
								_10518_r1 = __jule_assign_result.__jule_result_arg0;
								_10522_r2 = __jule_assign_result.__jule_result_arg1;
							});
							_9513_a[_8813_n]=static_cast<jule::U16>(static_cast<jule::U16>(_10518_r1));
							_9513_a[(_8813_n + 1LL)]=static_cast<jule::U16>(static_cast<jule::U16>(_10522_r2));
							_8813_n+=2LL;
						}
					}
					else {
						_case_begin_20ec93cb5:;
						{
							_9513_a[_8813_n]=static_cast<jule::U16>(65533LLU);
							(_8813_n)++;
						}
					}
					_match_end_20ec93be9:;
				};
			}
			_iter_next_20ec93402:;
			++it;
			goto _iter_begin_20ec93402;
		}
		_iter_end_20ec93402:;
	};
	return _9513_a.slice(0LL, _8813_n);;
}



inline jule::Slice<jule::I32> _223d8d52c_Decode(jule::Slice<jule::U16> _11911_s) {
	jule::Slice<jule::I32> _12013_a = jule::Slice<jule::I32>::alloc(_11911_s.len(), _11911_s.len(), 0);;
	jule::I64 _12113_n = 0LL;;
	jule::I64 _12213_i = 0LL;;
	for (; (_12213_i < _11911_s.len()); (_12213_i)++) {
		{
			jule::U16 _12413_r = _11911_s[_12213_i];;
			{
				
				if ((_12413_r < 55296LLU) || (57344LL <= _12413_r)) {
					_case_begin_20ec98836:;
					{
						_12013_a[_12113_n]=static_cast<jule::I32>(static_cast<jule::I32>(_12413_r));
					}
				}
				else if (((((_12413_r < 56320LLU) && ((_12213_i + 1LL) < _11911_s.len())) && (56320LL <= _11911_s[(_12213_i + 1LL)])) && (_11911_s[(_12213_i + 1LL)] < 57344LLU))) {
					_case_begin_20ec985b1:;
					{
						_12013_a[_12113_n]=static_cast<jule::I32>(_223d8cb58_DecodeRune(static_cast<jule::I32>(static_cast<jule::I32>(_12413_r)), static_cast<jule::I32>(static_cast<jule::I32>(_11911_s[(_12213_i + 1LL)]))));
						(_12213_i)++;
					}
				}
				else {
					_case_begin_20ec9821a:;
					{
						_12013_a[_12113_n]=65533LL;
					}
				}
				_match_end_20ec981a4:;
			};
			(_12113_n)++;
		}
	_iter_next_20ec96d2e:;
	}
	_iter_end_20ec96d2e:;;
	return _12013_a.slice(0LL, _12113_n);;
}



inline jule::Slice<jule::U16> _223d8d86d_AppendRune(jule::Slice<jule::U16> _14919_a, jule::I32 _14929_r) {
	{
		
		if (((0LL <= _14929_r) && (_14929_r < 55296LL)) || ((57344LL <= _14929_r) && (_14929_r < 65536LL))) {
			_case_begin_20ec9b3c7:;
			{
				return jule::append(_14919_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(static_cast<jule::U16>(_14929_r))}));;
			}
		}
		else if (((65536LL <= _14929_r) && (_14929_r <= 1114111LL))) {
			_case_begin_20ec9b44e:;
			{
				jule::I32 _15614_r1 = 0;;
				jule::I32 _15618_r2 = 0;;
				({
					__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _223d8ce22_EncodeRune(_14929_r);
					_15614_r1 = __jule_assign_result.__jule_result_arg0;
					_15618_r2 = __jule_assign_result.__jule_result_arg1;
				});
				return jule::append(_14919_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(static_cast<jule::U16>(_15614_r1)),static_cast<jule::U16>(static_cast<jule::U16>(_15618_r2))}));;
			}
		}
		_match_end_20ec9b2c8:;
	};
	return jule::append(_14919_a,jule::Slice<jule::U16>::make({65533LLU}));;
}



inline jule::Slice<jule::U16> _223d8dac1_Utf16FromStr(jule::Str _1417_s) {
	;
	jule::Slice<jule::I32> _209_runes = static_cast<jule::Slice<jule::I32>>(_1417_s);;
	jule::Slice<jule::U16> _2113_buff = jule::Slice<jule::U16>::alloc(0LL, _209_runes.len(), 0);;
	{
		auto expr = &(_209_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20eca6a20:;
		if (it != expr_end) {
			jule::I32 *_2212_r = it;
			{
				if (((*(_2212_r)) == 0LL)) {
					goto _iter_end_20eca6a20;
				};
				_2113_buff=_223d8d86d_AppendRune(_2113_buff, (*(_2212_r)));
			}
			_iter_next_20eca6a20:;
			++it;
			goto _iter_begin_20eca6a20;
		}
		_iter_end_20eca6a20:;
	};
	return _223d8d86d_AppendRune(_2113_buff, 0LL);;
}



inline jule::Str _223d8ddce_Utf16ToStr(jule::Slice<jule::U16> _3415_s) {
	if ((_3415_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _3813_codePage = _3415_s;;
	{
		auto expr = &(_3415_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20eca9182:;
		if (it != expr_end) {
			jule::I64 _399_i = it - expr->begin();
			jule::U16 *_3912_v = it;
			{
				if (((*(_3912_v)) == 0LLU)) {
					_3813_codePage=_3813_codePage.slice(0LL, _399_i);
					goto _iter_end_20eca9182;
				};
			}
			_iter_next_20eca9182:;
			++it;
			_399_i++;
			goto _iter_begin_20eca9182;
		}
		_iter_end_20eca9182:;
	};
	return static_cast<jule::Str>(_223d8d52c_Decode(_3813_codePage));;
}



inline jule::Str _223d8e198_U16PtrToStr(jule::U16* _5023_s) {
	if ((_5023_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _5513_codePage = nullptr;;
	jule::I64 _5613_i = 0LL;;
	for (; ; (_5613_i)++) {
		{
			jule::U16 _5813_r = _5023_s[_5613_i];;
			if ((_5813_r == 0LLU)) {
				return static_cast<jule::Str>(_223d8d52c_Decode(_5513_codePage));;
			};
			{ jule::Slice<jule::U16> &__jule_push_dest = _5513_codePage; __jule_push_dest.push(_5813_r); };
		}
	_iter_next_20ecaa260:;
	}
	_iter_end_20ecaa260:;;
	return jule::Str();;
}



inline jule::I64 _23c5b2782_GetLastErrno(void) {
	return errno;;
}



inline jule::Uintptr _223db7ce8_GetStdHandle(jule::Uintptr _6417_stdh) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)(GetStdHandle(_6417_stdh))));;
}



inline jule::Bool _223db80b2_CloseHandle(jule::Uintptr _6523_stdh) {
	return CloseHandle(((void*)(_6523_stdh)));;
}



inline jule::I64 _223db8436_Wstat(jule::U16* _6817_path, struct _stat* _6833_stat) {
	return static_cast<jule::I64>(_wstat(((wchar_t*)(_6817_path)), _6833_stat));;
}



inline jule::I64 _223db8865_Wopen(jule::U16* _7317_path, jule::I64 _7329_flag, jule::I64 _7340_mode) {
	return static_cast<jule::I64>(_wopen(((wchar_t*)((&(_7317_path[0LL])))), _7329_flag, _7340_mode));;
}



inline jule::U32 _223db8a74_GetLastError(void) {
	return static_cast<jule::U32>(GetLastError());;
}



inline jule::U32 _223db8de8_GetCurrentDirectory(jule::U32 _8231_bufflen, jule::U16* _8249_buff) {
	return static_cast<jule::U32>(GetCurrentDirectoryW(_8231_bufflen, ((wchar_t*)(_8249_buff))));;
}



inline jule::Bool _223db947b_DeleteFile(jule::U16* _9322_path) {
	return DeleteFileW(((wchar_t*)(_9322_path)));;
}



inline jule::Bool _223db9745_CreateDirectory(jule::U16* _9827_path) {
	return CreateDirectoryW(((wchar_t*)(_9827_path)), nullptr);;
}



inline jule::Bool _223db9a0e_RemoveDirectory(jule::U16* _10327_path) {
	return RemoveDirectoryW(((wchar_t*)(_10327_path)));;
}



inline jule::U32 _223db9ee8_GetFullPathName(jule::U16* _10827_path, jule::U32 _10839_bufflen, jule::U16* _1095_buff, jule::U16** _10917_fname) {
	return static_cast<jule::U32>(GetFullPathNameW(((wchar_t*)(_10827_path)), _10839_bufflen, ((wchar_t*)(_1095_buff)), ((wchar_t**)(_10917_fname))));;
}



inline jule::Bool _223dba36c_GetConsoleMode(jule::Uintptr _11419_handle, jule::I64* _11440_mode) {
	return GetConsoleMode(((HANDLE)(_11419_handle)), ((DWORD*)(_11440_mode)));;
}



inline jule::Bool _223dba944_SetConsoleMode(jule::Uintptr _11919_handle, jule::I64 _11935_mode) {
	return SetConsoleMode(((HANDLE)(_11919_handle)), static_cast<DWORD>(_11935_mode));;
}



inline jule::Bool _223dbaec7_WriteConsole(jule::Uintptr _12424_handle, jule::U16* _12440_buffer, jule::I64 _12454_toWrite, jule::I64* _12510_written, void* _12524_reserved) {
	return WriteConsoleW(((HANDLE)(_12424_handle)), ((void*)(_12440_buffer)), static_cast<DWORD>(_12454_toWrite), ((DWORD*)((*(_12510_written)))), _12524_reserved);;
}



inline jule::Bool _223dbb4b1_ReadConsole(jule::Uintptr _13223_handle, jule::U16* _13243_buffer, jule::I64 _13257_toRead, jule::I64* _13310_readed) {
	return ReadConsoleW(((HANDLE)(_13223_handle)), ((void*)(_13243_buffer)), static_cast<DWORD>(_13257_toRead), ((DWORD*)(_13310_readed)), nullptr);;
}



inline jule::Uintptr _223dbba44_FindFirstFile(jule::U16* _14425_path, WIN32_FIND_DATAW* _14441_data) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)(FindFirstFileW(((wchar_t*)(_14425_path)), _14441_data))));;
}



inline jule::I64 _223dbbdb8_FindNextFile(jule::Uintptr _14924_h, WIN32_FIND_DATAW* _14939_data) {
	return static_cast<jule::I64>(FindNextFileW(((HANDLE)(_14924_h)), _14939_data));;
}



inline jule::I64 _223dbc182_FindClose(jule::Uintptr _15414_h) {
	return static_cast<jule::I64>(FindClose(((HANDLE)(_15414_h))));;
}



inline jule::I64 _223dbe294_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n) {
	return static_cast<jule::I64>(read(_2016_handle, _2033_buff, _2048_n));;
}



inline jule::I64 _223dbe63a_Close(jule::I64 _2510_handle) {
	return static_cast<jule::I64>(close(_2510_handle));;
}



inline jule::I64 _223dbea69_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n) {
	return static_cast<jule::I64>(write(_2817_handle, _2830_buff, _2845_n));;
}



inline void _223dbec9a_Exit(jule::I64 _339_code) {
	exit(_339_code);
}



inline jule::Slice<jule::U8> _223dd6124_Stobs(jule::Str* _911_s) {
	return (*(_911_s)).fake_slice();;
}



inline __jule_tuple_i32__jule_tuple_int _223ee79b6_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1869_p0 = _18215_p[0LL];;
	jule::U8 _1879_x = _223ee681c_first[static_cast<jule::I64>(_1869_p0)];;
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::I32>(((_1879_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_18215_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _1959_sz = static_cast<jule::I64>((_1879_x & 7LLU));;
	_223ee6da0_acceptRange _1969_accept = _223ee71ad_acceptRanges[static_cast<jule::I64>((_1879_x >> 4LLU))];;
	if ((_18215_p.len() < _1959_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2009_b1 = _18215_p[1LL];;
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2009_b1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2079_b2 = _18215_p[2LL];;
	if (((_2079_b2 < 128LLU) || (191LL < _2079_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_1869_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2079_b2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2149_b3 = _18215_p[3LL];;
	if (((_2149_b3 < 128LLU) || (191LL < _2149_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_1869_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2149_b3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _223ee80c1_DecodeLastRune(jule::Slice<jule::U8> _27619_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_27619_p.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I64 _2809_end = _27619_p.len();;
	jule::I64 _28113_start = (_2809_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(static_cast<jule::I32>(_27619_p[_28113_start]));
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _28913_lim = (_2809_end - 4LL);;
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	};
	(_28113_start)--;
	for (; (_28113_start >= _28913_lim); (_28113_start)--) {
		{
			if (_223ee9aea_RuneStart(_27619_p[_28113_start])) {
				goto _iter_end_20ed538be;
			};
		}
	_iter_next_20ed538be:;
	}
	_iter_end_20ed538be:;;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _223ee79b6_DecodeRune(_27619_p.slice(_28113_start, _2809_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_28113_start + __jule_func_result.__jule_result_arg1) != _2809_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::I64 _223ee8654_RuneLen(jule::I32 _35212_r) {
	{
		
		if ((_35212_r < 0LL)) {
			_case_begin_20ed59dae:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 127LL)) {
			_case_begin_20ed59e36:;
			{
				return 1LL;;
			}
		}
		else if ((_35212_r <= 2047LL)) {
			_case_begin_20ed59ead:;
			{
				return 2LL;;
			}
		}
		else if (((55296LL <= _35212_r) && (_35212_r <= 57343LL))) {
			_case_begin_20ed5a035:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 65535LL)) {
			_case_begin_20ed5a288:;
			{
				return 3LL;;
			}
		}
		else if ((_35212_r <= 1114111LL)) {
			_case_begin_20ed5a310:;
			{
				return 4LL;;
			}
		}
		else {
			_case_begin_20ed59d37:;
			{
				return -1LL;;
			}
		}
		_match_end_20ed59c8d:;
	};
}



inline jule::I64 _223ee8aa5_EncodeRune(jule::Slice<jule::U8> _37419_p, jule::I32 _37434_r) {
	jule::U32 _3769_i = static_cast<jule::U32>(_37434_r);;
	{
		
		if ((_3769_i <= 127LLU)) {
			_case_begin_20ed60348:;
			{
				_37419_p[0LL]=static_cast<jule::U8>(static_cast<jule::U8>(_37434_r));
				return 1LL;;
			}
		}
		else if ((_3769_i <= 2047LLU)) {
			_case_begin_20ed5cd3a:;
			{
				_37419_p[0LL]=static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_37434_r >> 6LL))));
				_37419_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU)));
				return 2LL;;
			}
		}
		else if ((_3769_i > 1114111LLU) || ((55296LL <= _3769_i) && (_3769_i <= 57343LLU))) {
			_case_begin_20ed6018e:;
			{
				_37434_r=65533LL;
				goto _case_begin_20ed60205;
			}
		}
		else if ((_3769_i <= 65535LLU)) {
			_case_begin_20ed60205:;
			{
				_37419_p[0LL]=static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_37434_r >> 12LL))));
				_37419_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU)));
				_37419_p[2LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU)));
				return 3LL;;
			}
		}
		else {
			_case_begin_20ed5c994:;
			{
				_37419_p[0LL]=static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_37434_r >> 18LL))));
				_37419_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37434_r >> 12LL)) & 63LLU)));
				_37419_p[2LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU)));
				_37419_p[3LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU)));
				return 4LL;;
			}
		}
		_match_end_20ed5c92d:;
	};
}



inline jule::Slice<jule::U8> _223ee8e29_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40530_r))}));;
	};
	return _223ee929d_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _223ee929d_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_20ed67b25:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41242_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else if ((_4149_i > 1114111LLU) || ((55296LL <= _4149_i) && (_4149_i <= 57343LLU))) {
			_case_begin_20ed661b7:;
			{
				_41242_r=128LL;
				goto _case_begin_20ed67e44;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_20ed67e44:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41242_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else {
			_case_begin_20ed65a13:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41242_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		_match_end_20ed6599c:;
	};
}



inline jule::I64 _223ee9831_RuneCountStr(jule::Str _47317_s) {
	jule::I64 __jule_func_result = 0;
	jule::I64 _47413_i = 0LL;;
	for (; (_47413_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _47617_c = _47317_s[_47413_i];;
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_20ed71aeb;
			};
			jule::U8 _48213_x = _223ee681c_first[static_cast<jule::I64>(_47617_c)];;
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_20ed71aeb;
			};
			jule::I64 _48717_size = static_cast<jule::I64>((_48213_x & 7LLU));;
			if (((_47413_i + _48717_size) > _47317_s.len())) {
				(_47413_i)++;
				goto _iter_next_20ed71aeb;
			};
			_223ee6da0_acceptRange _49213_accept = _223ee71ad_acceptRanges[static_cast<jule::I64>((_48213_x >> 4LLU))];;
			_47617_c=_47317_s[(_47413_i + 1LL)];
			if (((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c))) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47317_s[(_47413_i + 2LL)];
				if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47317_s[(_47413_i + 3LL)];
					if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
						_48717_size=1LL;
					};
				};
			};
			_47413_i+=_48717_size;
		}
	_iter_next_20ed71aeb:;
	}
	_iter_end_20ed71aeb:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _223ee9aea_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I64 _2240d6720_getLastOsErrorWindows(void) {
	jule::U32 _169_err = _223db8a74_GetLastError();;
	{
		auto &_match_expr{ _169_err };
		
		if (_match_expr == 5LL) {
			_case_begin_20ed9b472:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_20ed9d144:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_20ed9d1aa:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 123LL) {
			_case_begin_20ed9d221:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else {
			_case_begin_20ed9b5b5:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		_match_end_20ed9b560:;
	};
}



inline jule::Slice<jule::Str> _2240d77a9_Args(void) {
	return jule::args();;
}



inline jule::Exceptional<jule::Str> _2240d7c4e_WorkingDir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(), ({
		auto except = _2240d8b84_getwd();
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));;
}



inline jule::Exceptional<jule::Str> _2240d8b84_getwd(void) {
	jule::Array<jule::U16,261> _1513_buff = jule::Array<jule::U16,261>();;
	jule::U32 _169_n = _223db8de8_GetCurrentDirectory(261LLU, (&(_1513_buff[0LL])));;
	if ((_169_n == 0LLU)) {
		return jule::Exceptional<jule::Str>(jule::Any(_2240d6720_getLastOsErrorWindows(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::Str>(jule::Any(), _223d8e198_U16PtrToStr((&(_1513_buff[0LL]))));;
}



inline jule::Bool _2248029da_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_224862b27__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _22486b229_isExcludingLatin(_22480bc47_Letter, _7613_r);;
}



inline jule::Bool _22486a59c_is16(jule::Slice<_22486880e_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2109d5242:;
			if (it != expr_end) {
				jule::I64 _19313_i = it - expr->begin();
				{
					_22486880e_Range16* _19417_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < (*(_19417_range))._field_Lo)) {
							return false;;
						};
						if ((_19128_r <= (*(_19417_range))._field_Hi)) {
							return (((*(_19417_range))._field_Stride == 1LLU) || (jule::mod((_19128_r - (*(_19417_range))._field_Lo),(*(_19417_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_2109d5242:;
				++it;
				_19313_i++;
				goto _iter_begin_2109d5242;
			}
			_iter_end_2109d5242:;
		};
		return false;;
	};
	jule::I64 _20813_lo = 0LL;;
	jule::I64 _20913_hi = _1919_ranges.len();;
	while ((_20813_lo < _20913_hi)) {
		{
			jule::I64 _21113_m = (_20813_lo + ((_20913_hi - _20813_lo) >> 1LLU));;
			_22486880e_Range16* _21213_range = (&(_1919_ranges[_21113_m]));;
			{
				if ((((*(_21213_range))._field_Lo <= _19128_r) && (_19128_r <= (*(_21213_range))._field_Hi))) {
					return (((*(_21213_range))._field_Stride == 1LLU) || (jule::mod((_19128_r - (*(_21213_range))._field_Lo),(*(_21213_range))._field_Stride) == 0LLU));;
				};
				if ((_19128_r < (*(_21213_range))._field_Lo)) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I64>((_21113_m + 1LL));
				};
			};
		}
	_iter_next_2109d3ecc:;
	}
	_iter_end_2109d3ecc:;;
	return false;;
}



inline jule::Bool _22486a921_is32(jule::Slice<_224868d3c_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2109d829a:;
			if (it != expr_end) {
				jule::I64 _23013_i = it - expr->begin();
				{
					_224868d3c_Range32* _23117_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < (*(_23117_range))._field_Lo)) {
							return false;;
						};
						if ((_22828_r <= (*(_23117_range))._field_Hi)) {
							return (((*(_23117_range))._field_Stride == 1LLU) || (jule::mod((_22828_r - (*(_23117_range))._field_Lo),(*(_23117_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_2109d829a:;
				++it;
				_23013_i++;
				goto _iter_begin_2109d829a;
			}
			_iter_end_2109d829a:;
		};
		return false;;
	};
	jule::I64 _24513_lo = 0LL;;
	jule::I64 _24613_hi = _2289_ranges.len();;
	while ((_24513_lo < _24613_hi)) {
		{
			jule::I64 _24813_m = (_24513_lo + ((_24613_hi - _24513_lo) >> 1LLU));;
			_224868d3c_Range32* _24913_range = (&(_2289_ranges[_24813_m]));;
			{
				if ((((*(_24913_range))._field_Lo <= _22828_r) && (_22828_r <= (*(_24913_range))._field_Hi))) {
					return (((*(_24913_range))._field_Stride == 1LLU) || (jule::mod((_22828_r - (*(_24913_range))._field_Lo),(*(_24913_range))._field_Stride) == 0LLU));;
				};
				if ((_22828_r < (*(_24913_range))._field_Lo)) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I64>((_24813_m + 1LL));
				};
			};
		}
	_iter_next_2109d8157:;
	}
	_iter_end_2109d8157:;;
	return false;;
}



inline jule::Bool _22486b229_isExcludingLatin(jule::Ptr<_2248692e3_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_22486880e_Range16> *_28014_R16 = &((*(_27821_rangeTab))._field_R16);;
		jule::I64 _28213_off = (*(_27821_rangeTab))._field_LatinOffset;;
		if ((((*(_28014_R16)).len() > _28213_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_28014_R16))[((*(_28014_R16)).len() - 1LL)]._field_Hi)))) {
			return _22486a59c_is16((*(_28014_R16)).slice(_28213_off), static_cast<jule::U16>(static_cast<jule::U16>(_27844_r)));;
		};
	};
	jule::Slice<_224868d3c_Range32> *_28710_R32 = &((*(_27821_rangeTab))._field_R32);;
	if ((((*(_28710_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_28710_R32))[0LL]._field_Lo)))) {
		return _22486a921_is32((*(_28710_R32)), static_cast<jule::U32>(static_cast<jule::U32>(_27844_r)));;
	};
	return false;;
}



inline jule::Bool _22486b4e3_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_224862b27__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _22486b229_isExcludingLatin(_22481329d_Upper, _29512_r);;
}



inline jule::I64 _2248964eb_FindByte(jule::Slice<jule::U8> _3713_s, jule::U8 _3724_b) {
	{
		auto expr = &(_3713_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2109eeaa8:;
		if (it != expr_end) {
			jule::I64 _399_i = it - expr->begin();
			jule::U8 *_3912_se = it;
			{
				if (((*(_3912_se)) == _3724_b)) {
					return _399_i;;
				};
			}
			_iter_next_2109eeaa8:;
			++it;
			_399_i++;
			goto _iter_begin_2109eeaa8;
		}
		_iter_end_2109eeaa8:;
	};
	return -1LL;;
}



inline jule::I64 _2248a8b29_FindLastByte(jule::Slice<jule::U8> _5017_s, jule::U8 _5028_b) {
	if ((_5017_s.len() == 0LL)) {
		return -1LL;;
	};
	jule::U8* _549_first = (&(_5017_s[0LL]));;
	jule::U8* _5513_it = (&(_5017_s[(_5017_s.len() - 1LL)]));;
	for (; (_5513_it >= _549_first); (_5513_it)--) {
		{
			{
				if (((*(_5513_it)) == _5028_b)) {
					return static_cast<jule::I64>(((jule::I64)((_5513_it - _549_first))));;
				};
			};
		}
	_iter_next_210a01527:;
	}
	_iter_end_210a01527:;;
	return -1LL;;
}



inline jule::I64 _2248a8ed1_FindByteStr(jule::Str* _6717_s, jule::U8 _6725_b) {
	return static_cast<jule::I64>(_2248964eb_FindByte(_223dd6124_Stobs(_6717_s), _6725_b));;
}



inline jule::I64 _2248a9355_FindLastByteStr(jule::Str* _7221_s, jule::U8 _7229_b) {
	return static_cast<jule::I64>(_2248a8b29_FindLastByte(_223dd6124_Stobs(_7221_s), _7229_b));;
}



inline jule::Str _2248a97b7_Repeat(jule::Str _1211_s, jule::I64 _1223_n) {
	if ((_1223_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1211_s.len() > jule::div(jule::MAX_I64,_1223_n))) {
		jule::panic(jule::Str("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:17:9"));;
	};
	_2240a0ad5_StrBuilder _2013_ss = static__2240a0e04_New(static_cast<jule::I64>((_1211_s.len() * _1223_n)));;
	for (; (_1223_n > 0LL); (_1223_n)--) {
		{
			_2240a989c_WriteStr(&_2013_ss, _1211_s);
		}
	_iter_next_210a15a47:;
	}
	_iter_end_210a15a47:;;
	return _2240aa194_Str(&_2013_ss);;
}



inline jule::Bool _2248a9c3a_hasPrefix(jule::Str* _2715_s, jule::Str* _2724_sub, jule::I64 _2738_start) {
	if ((((*(_2724_sub)).len() == 0LL) || (((*(_2715_s)).len() - _2738_start) < (*(_2724_sub)).len()))) {
		return false;;
	};
	jule::I64 _3213_i = 0LL;;
	for (; (_3213_i < (*(_2724_sub)).len()); ({
		jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_3213_i + 1LL));
		jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_2738_start + 1LL));
		_3213_i = ___jule_assign_arg;
		_2738_start = _1___jule_assign_arg;
	})) {
		{
			if (((*(_2715_s))[_2738_start] != (*(_2724_sub))[_3213_i])) {
				return false;;
			};
		}
	_iter_next_210a188e6:;
	}
	_iter_end_210a188e6:;;
	return true;;
}



inline jule::Bool _2248aa0ae_HasPrefix(jule::Str _4214_s, jule::Str _4222_sub) {
	return _2248a9c3a_hasPrefix(&(_4214_s), &(_4222_sub), 0LL);;
}



inline jule::Bool _2248aa565_hasSuffix(jule::Str* _4615_s, jule::Str* _4624_sub, jule::I64 _4638_start) {
	if ((((*(_4624_sub)).len() == 0LL) || (((*(_4615_s)).len() - _4638_start) < (*(_4624_sub)).len()))) {
		return false;;
	};
	_4638_start=static_cast<jule::I64>(((*(_4615_s)).len() - _4638_start));
	jule::I64 _5213_i = 0LL;;
	for (; (_5213_i < (*(_4624_sub)).len()); (_5213_i)++) {
		{
			if (((*(_4615_s))[((_4638_start - _5213_i) - 1LL)] != (*(_4624_sub))[(((*(_4624_sub)).len() - _5213_i) - 1LL)])) {
				return false;;
			};
		}
	_iter_next_210a1a73e:;
	}
	_iter_end_210a1a73e:;;
	return true;;
}



inline jule::Bool _2248aa8a6_HasSuffix(jule::Str _6214_s, jule::Str _6222_sub) {
	return _2248aa565_hasSuffix(&(_6214_s), &(_6222_sub), 0LL);;
}



inline jule::I64 _2248aacd5_FindAt(jule::Str _7011_s, jule::Str _7019_sub, jule::I64 _7033_i) {
	if ((((_7033_i < 0LL) || (_7011_s.len() < _7019_sub.len())) || (_7019_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_7033_i < _7011_s.len()); (_7033_i)++) {
		{
			if (_2248a9c3a_hasPrefix(&(_7011_s), &(_7019_sub), _7033_i)) {
				return _7033_i;;
			};
		}
	_iter_next_210a1d621:;
	}
	_iter_end_210a1d621:;;
	return -1LL;;
}



inline jule::I64 _2248ab698_FindLastAt(jule::Str _9315_s, jule::Str _9323_sub, jule::I64 _9333_i) {
	jule::I64 _9413_j = ((_9333_i - _9323_sub.len()) + 1LL);;
	if (((((_9323_sub.len() == 0LL) || (_9333_i < 0LL)) || (_9333_i >= _9315_s.len())) || (_9413_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_210a21943:;
	for (; (_9413_j >= 0LL); (_9413_j)--) {
		{
			jule::I64 _10017_k = _9413_j;;
			jule::I64 _10117_z = 0LL;;
			for (; (_10117_z < _9323_sub.len()); ({
				jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_10017_k + 1LL));
				jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_10117_z + 1LL));
				_10017_k = ___jule_assign_arg;
				_10117_z = _1___jule_assign_arg;
			})) {
				{
					if ((_9315_s[_10017_k] != _9323_sub[_10117_z])) {
						goto _iter_next_210a215be;
					};
				}
			_iter_next_210a22735:;
			}
			_iter_end_210a22735:;;
			return _9413_j;;
		}
	_iter_next_210a215be:;
	}
	_iter_end_210a215be:;;
	return -1LL;;
}



inline jule::I64 _2248aba1c_FindLast(jule::Str _11513_s, jule::Str _11521_sub) {
	return static_cast<jule::I64>(_2248ab698_FindLastAt(_11513_s, _11521_sub, static_cast<jule::I64>((_11513_s.len() - 1LL))));;
}



inline jule::I64 _2248acde7_findRune(jule::Slice<jule::U8>* _17114_s, jule::I32 _17125_r) {
	jule::I64 _17213_i = 0LL;;
	while ((_17213_i < (*(_17114_s)).len())) {
		{
			jule::I32 _17414_br = 0;;
			jule::I64 _17418_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _223ee79b6_DecodeRune((*(_17114_s)).slice(_17213_i));
				_17414_br = __jule_assign_result.__jule_result_arg0;
				_17418_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_17125_r == _17414_br)) {
				return _17213_i;;
			};
			_17213_i+=_17418_n;
		}
	_iter_next_210a29d58:;
	}
	_iter_end_210a29d58:;;
	return -1LL;;
}



inline jule::I64 _2248ad799_FindLastByte(jule::Str _19317_s, jule::U8 _19325_b) {
	return static_cast<jule::I64>(_2248a9355_FindLastByteStr(&(_19317_s), _19325_b));;
}



inline jule::I64 _2248ae68a_FindAny(jule::Str _22812_s, jule::Str _22820_runes) {
	jule::Slice<jule::U8> _2299_sb = _223dd6124_Stobs(&(_22812_s));;
	jule::Slice<jule::U8> _23013_rb = _223dd6124_Stobs(&(_22820_runes));;
	jule::I64 _23113_i = 0LL;;
	while ((_23113_i < _2299_sb.len())) {
		{
			jule::I32 _23314_r = 0;;
			jule::I64 _23317_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _223ee79b6_DecodeRune(_2299_sb.slice(_23113_i));
				_23314_r = __jule_assign_result.__jule_result_arg0;
				_23317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_2248acde7_findRune(&(_23013_rb), _23314_r) != -1LL)) {
				return _23113_i;;
			};
			_23113_i+=_23317_n;
		}
	_iter_next_210a3019e:;
	}
	_iter_end_210a3019e:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _2248aee3d_Split(jule::Str _26210_s, jule::Str _26218_sub, jule::I64 _26232_n) {
	jule::I64 _26313_cap = _26232_n;;
	if ((_26232_n < 0LL)) {
		_26313_cap=16LLU;
	};
	jule::Slice<jule::Str> _26713_parts = jule::Slice<jule::Str>::alloc(0LL, _26313_cap);;
	if ((_26232_n == 0LL)) {
		return _26713_parts;;
	};
	if ((_26232_n < 0LL)) {
		_26232_n=static_cast<jule::I64>(_26210_s.len());
	};
	jule::I64 _27413_i = 0LL;;
	for (; (_26232_n > 0LL); (_26232_n)--) {
		{
			jule::I64 _27613_j = _2248aacd5_FindAt(_26210_s, _26218_sub, _27413_i);;
			if ((_27613_j == -1LL)) {
				goto _iter_end_210a3642a;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _26713_parts; __jule_push_dest.push(_26210_s.slice(_27413_i, _27613_j)); };
			_27413_i=static_cast<jule::I64>((_27613_j + _26218_sub.len()));
		}
	_iter_next_210a3642a:;
	}
	_iter_end_210a3642a:;;
	if (((_26232_n > 0LL) && (_27413_i < _26210_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _26713_parts; __jule_push_dest.push(_26210_s.slice(_27413_i)); };
	};
	return _26713_parts;;
}



inline jule::Bool _2248b02b2_Contains(jule::Str _29013_s, jule::Str _29021_sub) {
	return (_2248aacd5_FindAt(_29013_s, _29021_sub, 0LL) != -1LL);;
}



inline jule::Bool _2248b0d2e_ContainsAny(jule::Str _30616_s, jule::Str _30624_runes) {
	return (_2248ae68a_FindAny(_30616_s, _30624_runes) != -1LL);;
}



inline jule::I64 _2248b11a3_Count(jule::Str _31210_s, jule::Str _31218_sub) {
	if ((_31218_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _31613_n = 0LL;;
	jule::I64 _31713_i = 0LL;;
	for (;;) {
		{
			jule::I64 _31913_j = _2248aacd5_FindAt(_31210_s, _31218_sub, _31713_i);;
			if ((_31913_j == -1LL)) {
				goto _iter_end_210a3b650;
			};
			(_31613_n)++;
			_31713_i=static_cast<jule::I64>((_31913_j + _31218_sub.len()));
		}
	_iter_next_210a3b650:;
	}
	_iter_end_210a3b650:;;
	return _31613_n;;
}



inline jule::Str _2248b168c_Replace(jule::Str _33212_s, jule::Str _33220_sub, jule::Str _33230_new, jule::I64 _33244_n) {
	if (((_33244_n == 0LL) || (_33220_sub == _33230_new))) {
		return _33212_s;;
	};
	jule::I64 _3379_m = _2248b11a3_Count(_33212_s, _33220_sub);;
	if ((_3379_m == 0LL)) {
		return _33212_s;;
	};
	if (((_33244_n < 0LL) || (_3379_m < _33244_n))) {
		_33244_n=_3379_m;
	};
	_2240a0ad5_StrBuilder _34513_ss = static__2240a0e04_New(static_cast<jule::I64>((_33212_s.len() + (_33244_n * (_33230_new.len() - _33220_sub.len())))));;
	jule::I64 _34613_i = 0LL;;
	for (; (_33244_n > 0LL); (_33244_n)--) {
		{
			jule::I64 _34813_j = _2248aacd5_FindAt(_33212_s, _33220_sub, _34613_i);;
			if ((_34813_j == -1LL)) {
				goto _iter_end_210a400c1;
			};
			_2240a989c_WriteStr(&_34513_ss, _33212_s.slice(_34613_i, _34813_j));
			_2240a989c_WriteStr(&_34513_ss, _33230_new);
			_34613_i=static_cast<jule::I64>((_34813_j + _33220_sub.len()));
		}
	_iter_next_210a400c1:;
	}
	_iter_end_210a400c1:;;
	_2240a989c_WriteStr(&_34513_ss, _33212_s.slice(_34613_i));
	return _2240aa194_Str(&_34513_ss);;
}



inline void _2248ad436_trimLeft(jule::Slice<jule::U8>* _38818_s, jule::Slice<jule::U8>* _38830_cutset) {
	jule::I64 _38913_i = 0LL;;
	while ((_38913_i < (*(_38818_s)).len())) {
		{
			jule::I32 _39114_r = 0;;
			jule::I64 _39117_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _223ee79b6_DecodeRune((*(_38818_s)).slice(_38913_i));
				_39114_r = __jule_assign_result.__jule_result_arg0;
				_39117_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_2248acde7_findRune(_38830_cutset, _39114_r) == -1LL)) {
				(*(_38818_s))=(*(_38818_s)).slice(_38913_i);
				return;;
			};
			_38913_i+=_39117_n;
		}
	_iter_next_210a453b2:;
	}
	_iter_end_210a453b2:;;
	(*(_38818_s))=nullptr;
}



inline jule::Str _2248b2836_TrimLeft(jule::Str _40313_s, jule::Str _40321_cutset) {
	jule::Slice<jule::U8> _40413_bytes = _223dd6124_Stobs(&(_40313_s));;
	jule::Slice<jule::U8> _4059_bcutset = _223dd6124_Stobs(&(_40321_cutset));;
	_2248ad436_trimLeft(&(_40413_bytes), &(_4059_bcutset));
	return static_cast<jule::Str>(_40413_bytes);;
}



inline void _2248b2b22_trimRight(jule::Slice<jule::U8>* _41019_s, jule::Slice<jule::U8>* _41031_cutset) {
	jule::I64 _41113_i = (*(_41019_s)).len();;
	while ((_41113_i > 0LL)) {
		{
			jule::I32 _41314_r = 0;;
			jule::I64 _41317_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _223ee80c1_DecodeLastRune((*(_41019_s)).slice(0LL, _41113_i));
				_41314_r = __jule_assign_result.__jule_result_arg0;
				_41317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_2248acde7_findRune(_41031_cutset, _41314_r) == -1LL)) {
				(*(_41019_s))=(*(_41019_s)).slice(0LL, _41113_i);
				return;;
			};
			_41113_i-=_41317_n;
		}
	_iter_next_210a4800d:;
	}
	_iter_end_210a4800d:;;
	(*(_41019_s))=nullptr;
}



inline jule::Str _2272675e5_Trim(jule::Str _4349_s, jule::Str _43417_cutset) {
	jule::Slice<jule::U8> _43513_bytes = _223dd6124_Stobs(&(_4349_s));;
	jule::Slice<jule::U8> _4369_bcutset = _223dd6124_Stobs(&(_43417_cutset));;
	_2248ad436_trimLeft(&(_43513_bytes), &(_4369_bcutset));
	_2248b2b22_trimRight(&(_43513_bytes), &(_4369_bcutset));
	return static_cast<jule::Str>(_43513_bytes);;
}



inline jule::Bool _2240ab97b_IsPathSep(jule::U8 _4914_c) {
	return ((_4914_c == 92LLU) || (_4914_c == '/'));;
}



inline jule::Bool _2240abc89_isSlash(jule::U8 _5312_c) {
	return ((_5312_c == '\\') || (_5312_c == '/'));;
}



inline jule::U8 _2240ac053_toUpper(jule::U8 _5512_c) {
	if ((('a' <= _5512_c) && (_5512_c <= 'z'))) {
		return static_cast<jule::U8>((_5512_c - 32LL));;
	};
	return _5512_c;;
}



inline jule::I64 _2240ac65d_volumeNameLen(jule::Str _8318_path) {
	if ((_8318_path.len() < 2LL)) {
		return 0LL;;
	};
	jule::U8 _889_c = _8318_path[0LL];;
	if (((_8318_path[1LL] == ':') && ((('a' <= _889_c) && (_889_c <= 'z')) || (('A' <= _889_c) && (_889_c <= 'Z'))))) {
		return 2LL;;
	};
	if (((!(_2240abc89_isSlash(_8318_path[0LL]))) || (!(_2240abc89_isSlash(_8318_path[1LL]))))) {
		return 0LL;;
	};
	jule::Str _9610_p1;;
	jule::Str _9618_rest;;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2240ac927_cutPath(_8318_path.slice(2LL));
		_9610_p1 = __jule_assign_result.__jule_result_arg0;
		_9618_rest = __jule_assign_result.__jule_result_arg1;
	});
	jule::Str _9713_p2 = jule::Str();;
	jule::Bool _9813_ok = false;;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2240ac927_cutPath(_9618_rest);
		_9713_p2 = __jule_assign_result.__jule_result_arg0;
		_9618_rest = __jule_assign_result.__jule_result_arg1;
		_9813_ok = __jule_assign_result.__jule_result_arg2;
	});
	if ((!(_9813_ok))) {
		return static_cast<jule::I64>(_8318_path.len());;
	};
	if (((!_9610_p1.equal(".", 1)) && (!_9610_p1.equal("?", 1)))) {
		return static_cast<jule::I64>(((_8318_path.len() - _9618_rest.len()) - 1LL));;
	};
	if (((((_9713_p2.len() == 3LL) && (_2240ac053_toUpper(_9713_p2[0LL]) == 'U')) && (_2240ac053_toUpper(_9713_p2[1LL]) == 'N')) && (_2240ac053_toUpper(_9713_p2[2LL]) == 'C'))) {
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2240ac927_cutPath(_9618_rest);
			_9618_rest = __jule_assign_result.__jule_result_arg1;
		});
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2240ac927_cutPath(_9618_rest);
			_9618_rest = __jule_assign_result.__jule_result_arg1;
			_9813_ok = __jule_assign_result.__jule_result_arg2;
		});
		if ((!(_9813_ok))) {
			return static_cast<jule::I64>(_8318_path.len());;
		};
	};
	return static_cast<jule::I64>(((_8318_path.len() - _9618_rest.len()) - 1LL));;
}



inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _2240ac927_cutPath(jule::Str _12012_path) {
	__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg2 = false;
	{
		auto expr = &(_12012_path);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_210a63ab7:;
		if (it != expr_end) {
			jule::I64 _1219_i = it - expr->begin();
			{
				if (_2240abc89_isSlash(_12012_path[_1219_i])) {
					__jule_func_result.__jule_result_arg0 = _12012_path.slice(0LL, _1219_i);
					__jule_func_result.__jule_result_arg1 = _12012_path.slice((_1219_i + 1LL));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_210a63ab7:;
			++it;
			_1219_i++;
			goto _iter_begin_210a63ab7;
		}
		_iter_end_210a63ab7:;
	};
	__jule_func_result.__jule_result_arg0 = _12012_path;
	__jule_func_result.__jule_result_arg1 = jule::Str();
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _2240acbe1_fullPath(jule::Str _12913_name) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::U16> _1309_utf16Name = _223d8dac1_Utf16FromStr(_12913_name);;
	jule::U16* _1319_p = (&(_1309_utf16Name[0LL]));;
	jule::U32 _13213_n = 100LLU;;
	for (;;) {
		{
			jule::Slice<jule::U16> _13417_buff = jule::Slice<jule::U16>::alloc(static_cast<jule::I64>(_13213_n), static_cast<jule::I64>(_13213_n), 0);;
			_13213_n=static_cast<jule::U32>(_223db9ee8_GetFullPathName(_1319_p, static_cast<jule::U32>(static_cast<jule::U32>(_13417_buff.len())), (&(_13417_buff[0LL])), nullptr));
			if ((_13213_n == 0LLU)) {
				__jule_func_result.__jule_result_arg0 = jule::Str();
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			};
			if ((_13213_n <= static_cast<jule::U32>(_13417_buff.len()))) {
				__jule_func_result.__jule_result_arg0 = _223d8ddce_Utf16ToStr(_13417_buff.slice(0LL, static_cast<jule::I64>(_13213_n)));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			};
		}
	_iter_next_210a65cea:;
	}
	_iter_end_210a65cea:;;
	__jule_func_result.__jule_result_arg0 = jule::Str();
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _2240ad087_abs(jule::Str _14612_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if (_14612_path.empty()) {
		_14612_path=jule::Str(".", 1);
	};
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2240acbe1_fullPath(_14612_path);
		_14612_path = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(__jule_func_result.__jule_result_arg1))) {
		__jule_func_result.__jule_result_arg0 = jule::Str();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _227269828_Clean(_14612_path);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _2240ad351_join(jule::Slice<jule::Str> _16013_elem) {
	_2240a0ad5_StrBuilder _16113_s = static__2240a0e04_New(16LL);;
	jule::U8 _16213_lastChar = 0LLU;;
	{
		auto expr = &(_16013_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_210a69d54:;
		if (it != expr_end) {
			jule::Str _16317_e = *it;
			{
				{
					
					if ((_2240aa628_Len(&_16113_s) == 0LL)) {
						_case_begin_210a6aaad:;
					}
					else if (_2240abc89_isSlash(_16213_lastChar)) {
						_case_begin_210a6b020:;
						{
							while (((_16317_e.len() > 0LL) && _2240abc89_isSlash(_16317_e[0LL]))) {
								{
									(_16317_e).mut_slice(1LL);;
								}
							_iter_next_210a6b608:;
							}
							_iter_end_210a6b608:;;
						}
					}
					else if ((_16213_lastChar == ':')) {
						_case_begin_210a6a77d:;
					}
					else {
						_case_begin_210a6a717:;
						{
							_2240a9b55_WriteByte(&_16113_s, '\\');
							_16213_lastChar='\\';
						}
					}
					_match_end_210a6a65c:;
				};
				if ((_16317_e.len() > 0LL)) {
					_2240a989c_WriteStr(&_16113_s, _16317_e);
					_16213_lastChar=_16317_e[(_16317_e.len() - 1LL)];
				};
			}
			_iter_next_210a69d54:;
			++it;
			goto _iter_begin_210a69d54;
		}
		_iter_end_210a69d54:;
	};
	if ((_2240aa628_Len(&_16113_s) == 0LL)) {
		return jule::Str();;
	};
	return _227269828_Clean(_2240aa194_Str(&_16113_s));;
}



inline jule::Str _227269828_Clean(jule::Str _10914_path) {
	jule::Str _1109_originalPath = _10914_path;;
	jule::I64 _1119_volLen = _2240ac65d_volumeNameLen(_10914_path);;
	(_10914_path).mut_slice(_1119_volLen);;
	if (_10914_path.empty()) {
		if ((((_1119_volLen > 1LL) && _2240ab97b_IsPathSep(_1109_originalPath[0LL])) && _2240ab97b_IsPathSep(_1109_originalPath[1LL]))) {
			return _227269e00_FromSlash(_1109_originalPath);;
		};
		return (_1109_originalPath + jule::Str(".", 1));;
	};
	jule::Bool _1209_rooted = _2240ab97b_IsPathSep(_10914_path[0LL]);;
	jule::I64 _1279_n = _10914_path.len();;
	_2272689c0_lazyBuff _12813_out = _2272689c0_lazyBuff{._field_path=_223dd6124_Stobs(&(_10914_path)), ._field_volAndPath=_1109_originalPath, ._field_volLen=_1119_volLen};;
	jule::I64 _13314_r = 0;;
	jule::I64 _13321_dotdot = 0;;
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		_13314_r = ___jule_assign_arg;
		_13321_dotdot = _1___jule_assign_arg;
	});
	if (_1209_rooted) {
		_2272691c9_append(&_12813_out, 92LLU);
		({
			jule::I64 ___jule_assign_arg = 1LL;
			jule::I64 _1___jule_assign_arg = 1LL;
			_13314_r = ___jule_assign_arg;
			_13321_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_13314_r < _1279_n)) {
		{
			{
				
				if (_2240ab97b_IsPathSep(_10914_path[_13314_r])) {
					_case_begin_210a75ed6:;
					{
						(_13314_r)++;
					}
				}
				else if (((_10914_path[_13314_r] == '.') && (((_13314_r + 1LL) == _1279_n) || _2240ab97b_IsPathSep(_10914_path[(_13314_r + 1LL)])))) {
					_case_begin_210a72a1b:;
					{
						(_13314_r)++;
					}
				}
				else if ((((_10914_path[_13314_r] == '.') && (_10914_path[(_13314_r + 1LL)] == '.')) && (((_13314_r + 2LL) == _1279_n) || _2240ab97b_IsPathSep(_10914_path[(_13314_r + 2LL)])))) {
					_case_begin_210a72a82:;
					{
						_13314_r+=2LL;
						{
							
							if ((_12813_out._field_w > _13321_dotdot)) {
								_case_begin_210a78c53:;
								{
									(_12813_out._field_w)--;
									while (((_12813_out._field_w > _13321_dotdot) && (!(_2240ab97b_IsPathSep(static_cast<jule::U8>(_227268e21_index(&_12813_out, _12813_out._field_w))))))) {
										{
											(_12813_out._field_w)--;
										}
									_iter_next_210a797d1:;
									}
									_iter_end_210a797d1:;;
								}
							}
							else if ((!(_1209_rooted))) {
								_case_begin_210a790e9:;
								{
									if ((_12813_out._field_w > 0LL)) {
										_2272691c9_append(&_12813_out, 92LLU);
									};
									_2272691c9_append(&_12813_out, '.');
									_2272691c9_append(&_12813_out, '.');
									_13321_dotdot=_12813_out._field_w;
								}
							}
							_match_end_210a79083:;
						};
					}
				}
				else {
					_case_begin_210a729a5:;
					{
						if (((_1209_rooted && (_12813_out._field_w != 1LL)) || ((!(_1209_rooted)) && (_12813_out._field_w != 0LL)))) {
							_2272691c9_append(&_12813_out, 92LLU);
						};
						if ((((true && (_12813_out._field_w == 0LL)) && (_12813_out._field_volLen == 0LL)) && (_13314_r != 0LL))) {
							jule::I64 _17625_i = _13314_r;;
							for (; ((_17625_i < _1279_n) && (!(_2240ab97b_IsPathSep(_10914_path[_17625_i])))); (_17625_i)++) {
								{
									if ((_10914_path[_17625_i] == ':')) {
										_2272691c9_append(&_12813_out, '.');
										_2272691c9_append(&_12813_out, 92LLU);
										goto _iter_end_210a74468;
									};
								}
							_iter_next_210a74468:;
							}
							_iter_end_210a74468:;;
						};
						for (; ((_13314_r < _1279_n) && (!(_2240ab97b_IsPathSep(_10914_path[_13314_r])))); (_13314_r)++) {
							{
								_2272691c9_append(&_12813_out, _10914_path[_13314_r]);
							}
						_iter_next_210a759ca:;
						}
						_iter_end_210a759ca:;;
					}
				}
				_match_end_210a72675:;
			};
		}
	_iter_next_210a720c0:;
	}
	_iter_end_210a720c0:;;
	if ((_12813_out._field_w == 0LL)) {
		_2272691c9_append(&_12813_out, '.');
	};
	return _227269e00_FromSlash(_227269460_string(&_12813_out));;
}



inline jule::Str _227269e00_FromSlash(jule::Str _21214_path) {
	;
	return _2248b168c_Replace(_21214_path, jule::Str("/", 1), jule::Str("\\", 1), -1LL);;
}



inline jule::Str _22726a241_Join(jule::Slice<jule::Str> _2269_elem) {
	return _2240ad351_join(_2269_elem);;
}



inline jule::Str _22726a50a_Ext(jule::Str _2318_path) {
	jule::I64 _23213_i = (_2318_path.len() - 1LL);;
	for (; ((_23213_i >= 0LL) && (!(_2240ab97b_IsPathSep(_2318_path[_23213_i])))); (_23213_i)--) {
		{
			if ((_2318_path[_23213_i] == '.')) {
				return _2318_path.slice(_23213_i);;
			};
		}
	_iter_next_210a7cb58:;
	}
	_iter_end_210a7cb58:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _22726a7c4_Abs(jule::Str _2468_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Str _24710_abs_path;;
	jule::Bool _24720_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2240ad087_abs(_2468_path);
		_24710_abs_path = __jule_assign_result.__jule_result_arg0;
		_24720_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _24710_abs_path;
	__jule_func_result.__jule_result_arg1 = _24720_ok;
	return __jule_func_result;;
}



inline jule::Str _22726aa8d_Base(jule::Str _25513_path) {
	if (_25513_path.empty()) {
		return jule::Str(".", 1);;
	};
	while (((_25513_path.len() > 0LL) && _2240ab97b_IsPathSep(_25513_path[(_25513_path.len() - 1LL)]))) {
		{
			(_25513_path).mut_slice(0LL, (_25513_path.len() - 1LL));;
		}
	_iter_next_210a80287:;
	}
	_iter_end_210a80287:;;
	(_25513_path).mut_slice(_22726b1ed_VolumeName(_25513_path).len());;
	jule::I64 _26613_i = (_25513_path.len() - 1LL);;
	while (((_26613_i >= 0LL) && (!(_2240ab97b_IsPathSep(_25513_path[_26613_i]))))) {
		{
			(_26613_i)--;
		}
	_iter_next_210a8195e:;
	}
	_iter_end_210a8195e:;;
	if ((_26613_i >= 0LL)) {
		(_25513_path).mut_slice((_26613_i + 1LL));;
	};
	if (_25513_path.empty()) {
		return jule::Str("\\", 1);;
	};
	return _25513_path;;
}



inline jule::Str _22726ae34_Dir(jule::Str _2868_path) {
	jule::Str _2879_vol = _22726b1ed_VolumeName(_2868_path);;
	jule::I64 _28813_i = (_2868_path.len() - 1LL);;
	while (((_28813_i >= _2879_vol.len()) && (!(_2240ab97b_IsPathSep(_2868_path[_28813_i]))))) {
		{
			(_28813_i)--;
		}
	_iter_next_210a83a3d:;
	}
	_iter_end_210a83a3d:;;
	jule::Str _2929_dir = _227269828_Clean(_2868_path.slice(_2879_vol.len(), (_28813_i + 1LL)));;
	if ((_2929_dir.equal(".", 1) && (_2879_vol.len() > 2LL))) {
		return _2879_vol;;
	};
	return (_2879_vol + _2929_dir);;
}



inline jule::Str _22726b1ed_VolumeName(jule::Str _30415_path) {
	return _227269e00_FromSlash(_30415_path.slice(0LL, _2240ac65d_volumeNameLen(_30415_path)));;
}



inline jule::I64 _223dd0151_getLastFsError(void) {
	jule::I64 _729_err = _23c5b2782_GetLastErrno();;
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_210a9790e:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_210a970d4:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_210a972b0:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_210a97326:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_210a9738c:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_210a97403:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 132LL) {
			_case_begin_210a97a41:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_210a97aa7:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_210a97b1d:;
			{
				return static_cast<jule::I64>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_210a97b84:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_210a97c0b:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_210a97c83:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_210a97d0a:;
			{
				return static_cast<jule::I64>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_210a97d82:;
			{
				return static_cast<jule::I64>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_210a97e09:;
			{
				return static_cast<jule::I64>(14LL);;
			}
		}
		else if (_match_expr == 124LL) {
			_case_begin_210a97e81:;
			{
				return static_cast<jule::I64>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_210a98008:;
			{
				return static_cast<jule::I64>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_210a98080:;
			{
				return static_cast<jule::I64>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_210a98107:;
			{
				return static_cast<jule::I64>(18LL);;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_210a9817e:;
			{
				return static_cast<jule::I64>(19LL);;
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_210a98206:;
			{
				return static_cast<jule::I64>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_210a9827d:;
			{
				return static_cast<jule::I64>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_210a98305:;
			{
				return static_cast<jule::I64>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_210a9837c:;
			{
				return static_cast<jule::I64>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_210a98404:;
			{
				return static_cast<jule::I64>(24LL);;
			}
		}
		else if (_match_expr == 119LL) {
			_case_begin_210a9847b:;
			{
				return static_cast<jule::I64>(25LL);;
			}
		}
		else if (_match_expr == 104LL) {
			_case_begin_210a98503:;
			{
				return static_cast<jule::I64>(26LL);;
			}
		}
		else if (_match_expr == 41LL) {
			_case_begin_210a9857a:;
			{
				return static_cast<jule::I64>(27LL);;
			}
		}
		else {
			_case_begin_210a97249:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_210a971e4:;
	};
}



inline jule::Bool _223eeba0e_isConsoleHandle(jule::Uintptr _11320_handle) {
	return (((_11320_handle == _223db7523_STDIN) || (_11320_handle == _223db77dc_STDOUT)) || (_11320_handle == _223db7a73_STDERR));;
}



inline void _2273bac32_appendEscapeArg(_2240a0ad5_StrBuilder* _10225_s, jule::Str _10240_arg) {
	if ((_10240_arg.len() == 0LL)) {
		_2240a989c_WriteStr(_10225_s, jule::Str("\"\"", 2));
		return;;
	};
	jule::Bool _10813_needsBackslash = false;;
	jule::Bool _10913_hasSpace = false;;
	jule::I64 _11013_i = 0LL;;
	for (; (_11013_i < _10240_arg.len()); (_11013_i)++) {
		{
			{
				auto &_match_expr{ _10240_arg[_11013_i] };
				
				if (_match_expr == '\"' || _match_expr == '\\') {
					_case_begin_210ae167d:;
					{
						_10813_needsBackslash=true;
					}
				}
				else if (_match_expr == ' ' || _match_expr == '\t') {
					_case_begin_210ae1705:;
					{
						_10913_hasSpace=true;
					}
				}
				_match_end_210ae157e:;
			};
		}
	_iter_next_210ae1051:;
	}
	_iter_end_210ae1051:;;
	if (((!(_10813_needsBackslash)) && (!(_10913_hasSpace)))) {
		_2240a989c_WriteStr(_10225_s, _10240_arg);
		return;;
	};
	if ((!(_10813_needsBackslash))) {
		_2240a9b55_WriteByte(_10225_s, '\"');
		_2240a989c_WriteStr(_10225_s, _10240_arg);
		_2240a9b55_WriteByte(_10225_s, '\"');
		return;;
	};
	if (_10913_hasSpace) {
		_2240a9b55_WriteByte(_10225_s, '\"');
	};
	jule::I64 _13613_slashes = 0LL;;
	_11013_i=0LL;
	for (; (_11013_i < _10240_arg.len()); (_11013_i)++) {
		{
			jule::U8 _13913_c = _10240_arg[_11013_i];;
			{
				auto &_match_expr{ _13913_c };
				
				if (_match_expr == '\\') {
					_case_begin_210ae454e:;
					{
						(_13613_slashes)++;
					}
				}
				else if (_match_expr == '\"') {
					_case_begin_210ae474c:;
					{
						for (; (_13613_slashes > 0LL); (_13613_slashes)--) {
							{
								_2240a9b55_WriteByte(_10225_s, '\\');
							}
						_iter_next_210ae52a8:;
						}
						_iter_end_210ae52a8:;;
						_2240a9b55_WriteByte(_10225_s, '\\');
					}
				}
				else {
					_case_begin_210ae46d6:;
					{
						_13613_slashes=0LL;
					}
				}
				_match_end_210ae4681:;
			};
			_2240a9b55_WriteByte(_10225_s, _13913_c);
		}
	_iter_next_210ae12e8:;
	}
	_iter_end_210ae12e8:;;
	if (_10913_hasSpace) {
		for (; (_13613_slashes > 0LL); (_13613_slashes)--) {
			{
				_2240a9b55_WriteByte(_10225_s, '\\');
			}
		_iter_next_210ae47b3:;
		}
		_iter_end_210ae47b3:;;
		_2240a9b55_WriteByte(_10225_s, '\"');
	};
}



inline jule::Str _2273baeeb_makeCmdLine(jule::Slice<jule::Str> _16316_args) {
	_2240a0ad5_StrBuilder _16413_s = static__2240a0e04_New(16LL);;
	{
		auto expr = &(_16316_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_210ae6ac3:;
		if (it != expr_end) {
			jule::Str *_16512_arg = it;
			{
				if ((_2240aa628_Len(&_16413_s) > 0LL)) {
					_2240a9b55_WriteByte(&_16413_s, ' ');
				};
				_2273bac32_appendEscapeArg(&(_16413_s), (*(_16512_arg)));
			}
			_iter_next_210ae6ac3:;
			++it;
			goto _iter_begin_210ae6ac3;
		}
		_iter_end_210ae6ac3:;
	};
	return _2240aa194_Str(&_16413_s);;
}



inline jule::Exceptional<jule::Slice<jule::U16>> _2273bb3c5_createEnvBlock(jule::Slice<jule::Str> _17919_env) {
	if ((_17919_env.len() == 0LL)) {
		return jule::Exceptional<jule::Slice<jule::U16>>(jule::Any(), _223d8d263_Encode(jule::Slice<jule::I32>::make({0LL,0LL})));;
	};
	jule::I64 _18313_n = 0LL;;
	{
		auto expr = &(_17919_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_210ae8a1a:;
		if (it != expr_end) {
			jule::Str *_18412_s = it;
			{
				if ((_2248a8ed1_FindByteStr(_18412_s, 0LLU) != -1LL)) {
					return jule::Exceptional<jule::Slice<jule::U16>>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
				};
				_18313_n+=((*(_18412_s)).len() + 1LL);
			}
			_iter_next_210ae8a1a:;
			++it;
			goto _iter_begin_210ae8a1a;
		}
		_iter_end_210ae8a1a:;
	};
	(_18313_n)++;
	jule::Slice<jule::U16> _19113_b = jule::Slice<jule::U16>::alloc(0LL, _18313_n, 0);;
	{
		auto expr = &(_17919_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_210ae3e44:;
		if (it != expr_end) {
			jule::Str *_19212_s = it;
			{
				{
					auto expr = static_cast<jule::Slice<jule::I32>>((*(_19212_s)));
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_210aea92e:;
					if (it != expr_end) {
						jule::I32 _19316_c = *it;
						{
							_19113_b=_223d8d86d_AppendRune(_19113_b, _19316_c);
						}
						_iter_next_210aea92e:;
						++it;
						goto _iter_begin_210aea92e;
					}
					_iter_end_210aea92e:;
				};
				_19113_b=_223d8d86d_AppendRune(_19113_b, 0LL);
			}
			_iter_next_210ae3e44:;
			++it;
			goto _iter_begin_210ae3e44;
		}
		_iter_end_210ae3e44:;
	};
	_19113_b=_223d8d86d_AppendRune(_19113_b, 0LL);
	return jule::Exceptional<jule::Slice<jule::U16>>(jule::Any(), _19113_b);;
}



inline jule::I64 _2273bc409_processErrorFromCode(jule::I64 _1125_code) {
	{
		auto &_match_expr{ _1125_code };
		
		if (_match_expr == 5LL) {
			_case_begin_210ae91ad:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 2LL || _match_expr == 3LL) {
			_case_begin_210aeb765:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else {
			_case_begin_210aeb6ee:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		_match_end_210ae8dd3:;
	};
}



inline jule::I64 _2273bc629_getLastProcessError(void) {
	return _2273bc409_processErrorFromCode(static_cast<jule::I64>(static_cast<jule::I64>(_223db8a74_GetLastError())));;
}



inline void _2273c2cd3_Exit(jule::I64 _129_code) {
	_223dbec9a_Exit(_129_code);
}



inline jule::Str _2273c2eae_Executable(void) {
	return jule::executable();;
}



inline jule::Bool _2272eea23_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _2272eeccb_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_2272ed659_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_210b23c43:;
		if (it != expr_end) {
			jule::Str *_3212_validExt = it;
			{
				if ((_3121_ext == (*(_3212_validExt)))) {
					return true;;
				};
			}
			_iter_next_210b23c43:;
			++it;
			goto _iter_begin_210b23c43;
		}
		_iter_end_210b23c43:;
	};
	return false;;
}



inline jule::Bool _227300095_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_2272ecc85_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_210b25294:;
		if (it != expr_end) {
			jule::Str *_4512_e = it;
			{
				if ((_4118_ext == (*(_4512_e)))) {
					return true;;
				};
			}
			_iter_next_210b25294:;
			++it;
			goto _iter_begin_210b25294;
		}
		_iter_end_210b25294:;
	};
	{
		auto expr = &(_2272ee924_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_210b251c8:;
		if (it != expr_end) {
			jule::Str *_5012_e = it;
			{
				if ((_4118_ext == (*(_5012_e)))) {
					return true;;
				};
			}
			_iter_next_210b251c8:;
			++it;
			goto _iter_begin_210b251c8;
		}
		_iter_end_210b251c8:;
	};
	return false;;
}



inline jule::Str _22730c3c1_Logf(jule::Str _3209_fmt, jule::Slice<jule::Any> _32022_args) {
	return _22730cd61_applyFmt(_3209_fmt, _32022_args);;
}



inline jule::Str _22730c6ce_argToStr(jule::Any _32413_arg) {
	{
		auto &_match_expr{ _32413_arg };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_210b25937:;
			{
				return _32413_arg.cast<jule::Str>(&__jule_any_type4);;
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_210b273c8:;
			{
				return jule::Str::from_byte(_32413_arg.cast<jule::U8>(&__jule_any_type131));;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_210b2743e:;
			{
				return jule::Str::from_rune(_32413_arg.cast<jule::I32>(&__jule_any_type6));;
			}
		}
		else {
			_case_begin_210b26d01:;
			{
				return jule::Str("<fmt?>", 6);;
			}
		}
		_match_end_210b26c9b:;
	};
}



inline jule::I64 _22730c998_findNextFmt(jule::Str _33716_fmt) {
	{
		auto expr = &(_33716_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_210b281a9:;
		if (it != expr_end) {
			jule::I64 _3389_i = it - expr->begin();
			jule::U8 *_33812_b = it;
			{
				if (((*(_33812_b)) == '@')) {
					return _3389_i;;
				};
			}
			_iter_next_210b281a9:;
			++it;
			_3389_i++;
			goto _iter_begin_210b281a9;
		}
		_iter_end_210b281a9:;
	};
	return -1LL;;
}



inline jule::Str _22730cd61_applyFmt(jule::Str _34617_fmt, jule::Slice<jule::Any> _34627_args) {
	_2240a0ad5_StrBuilder _34713_s = static__2240a0e04_New(32LL);;
	{
		auto expr = &(_34627_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_210b28b05:;
		if (it != expr_end) {
			jule::Any *_34812_arg = it;
			{
				jule::I64 _34913_i = _22730c998_findNextFmt(_34617_fmt);;
				if ((_34913_i == -1LL)) {
					goto _iter_end_210b28b05;
				};
				_2240a989c_WriteStr(&_34713_s, _34617_fmt.slice(0LL, _34913_i));
				_2240a989c_WriteStr(&_34713_s, _22730c6ce_argToStr((*(_34812_arg))));
				(_34617_fmt).mut_slice((_34913_i + 1LL));;
			}
			_iter_next_210b28b05:;
			++it;
			goto _iter_begin_210b28b05;
		}
		_iter_end_210b28b05:;
	};
	_2240a989c_WriteStr(&_34713_s, _34617_fmt);
	return _2240aa194_Str(&_34713_s);;
}



inline jule::Bool _22730de0b_IsTopDirective(jule::Str _2819_directive) {
	return (_2819_directive.equal("pass", 4) || _2819_directive.equal("build", 5));;
}



inline jule::Bool _22731035d_IsWindows(jule::Str _3714_os) {
	return _3714_os.equal("windows", 7);;
}



inline jule::Bool _227310638_IsDarwin(jule::Str _4013_os) {
	return _4013_os.equal("darwin", 6);;
}



inline jule::Bool _227310902_IsLinux(jule::Str _4312_os) {
	return _4312_os.equal("linux", 5);;
}



inline jule::Bool _227310c43_IsI386(jule::Str _4611_arch) {
	return _4611_arch.equal("i386", 4);;
}



inline jule::Bool _22731100c_IsAmd64(jule::Str _4912_arch) {
	return _4912_arch.equal("amd64", 5);;
}



inline jule::Bool _2273112c6_IsArm64(jule::Str _5212_arch) {
	return _5212_arch.equal("arm64", 5);;
}



inline jule::Bool _227311590_IsUnix(jule::Str _5511_os) {
	return (_227310638_IsDarwin(_5511_os) || _227310902_IsLinux(_5511_os));;
}



inline jule::Bool _227311936_Is32Bit(jule::Str _5812_arch) {
	return _227310c43_IsI386(_5812_arch);;
}



inline jule::Bool _227311c00_Is64Bit(jule::Str _6112_arch) {
	return (_22731100c_IsAmd64(_6112_arch) || _2273112c6_IsArm64(_6112_arch));;
}



inline void _2273c428a_init(void) {
	jule::Str _2513_path = _2273c2eae_Executable();;
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_2273c37b7_PathWd=({
			auto except = _2240d7c4e_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_2273c350e_PathExec=_22726ae34_Dir(_2513_path);
		_2273c32ab_PathStdlib=_22726a241_Join(jule::Slice<jule::Str>::make({_2273c350e_PathExec,jule::Str("..", 2),jule::Str("std", 3)}));
		_2273c3ac5_PathApi=_22726a241_Join(jule::Slice<jule::Str>::make({_2273c350e_PathExec,jule::Str("..", 2),jule::Str("api", 3),jule::Str("jule.hpp", 8)}));
	};
}



inline jule::I64 _20aee192e_LeadingZeros64(jule::U64 _6119_x) {
	return static_cast<jule::I64>((64LL - _20aee932c_Len64(_6119_x)));;
}



inline jule::I64 _20aee2886_TrailingZeros(jule::U64 _8318_x) {
	;
	return static_cast<jule::I64>(_20aee35ac_TrailingZeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8318_x))));;
}



inline jule::I64 _20aee32e3_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_20aee204a__DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]));;
}



inline jule::I64 _20aee35ac_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_20aee2611__DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]));;
}



inline jule::I64 _20aee9063_Len32(jule::U32 _35214_x) {
	jule::I64 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35214_x)])));
	return __jule_func_result;;
}



inline jule::I64 _20aee932c_Len64(jule::U64 _36614_x) {
	jule::I64 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36614_x)])));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _20aeea0b9_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>(((_41510_x + _41518_y) + _41526_carry));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _20aeeb8c3_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5019_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5029_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5039_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5049_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);;
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LLU));;
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);;
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);;
	_50713_w1+=(_5019_x0 * _5049_y1);
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>((((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LLU)));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((_49910_x * _49918_y));
	return __jule_func_result;;
}



inline jule::U32 _20ae02796_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _20ae02aa4_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _20ae02d6d_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _20ae031ae_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _20ae05766_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_210c16044:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_20b0045ce_IsInf(_4714_f, 0LL) || _20b003ec4_IsNaN(_4714_f)) {
			_case_begin_210c160bb:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_210c15e67:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _20b004898_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5613_x = _20ae02d6d_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I64>(((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_20ae031ae_F64FromBits(_5613_x));
	return __jule_func_result;;
}



inline jule::F64 _20b003bb6_NaN(void) {
	return static_cast<jule::F64>(_20ae031ae_F64FromBits(9221120237041090561LLU));;
}



inline jule::Bool _20b003ec4_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);;
}



inline jule::F64 _20b00428d_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return static_cast<jule::F64>(_20ae031ae_F64FromBits(9218868437227405312LLU));;
	};
	return static_cast<jule::F64>(_20ae031ae_F64FromBits(18442240474082181120LLU));;
}



inline jule::Bool _20b0045ce_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _20b004898_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_20b006c52_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((_8214_x * 4503599627370496LLU));
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _20b00636c_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_20b003ec4_IsNaN(_1118_x) || _20b0045ce_IsInf(_1118_x, 1LL)) {
			_case_begin_210c54758:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_210c547d0:;
			{
				return static_cast<jule::F64>(_20b003bb6_NaN());;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_210c54857:;
			{
				return static_cast<jule::F64>(_20b00428d_Inf(-1LL));;
			}
		}
		_match_end_210c5468c:;
	};
	jule::F64 _13314_f1 = 0;;
	jule::I64 _13322_ki = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _20ae05766_Frexp(_1118_x);
		_13314_f1 = __jule_assign_result.__jule_result_arg0;
		_13322_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	};
	jule::F64 _1389_f = (_13314_f1 - 1LL);;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);;
	jule::F64 _1429_s = jule::div(_1389_f,(2LL + _1389_f));;
	jule::F64 _1439_s2 = (_1429_s * _1429_s);;
	jule::F64 _1449_s4 = (_1439_s2 * _1439_s2);;
	jule::F64 _1459_t1 = (_1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586)))))));;
	jule::F64 _1469_t2 = (_1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373)))));;
	jule::F64 _1479_R = (_1459_t1 + _1469_t2);;
	jule::F64 _1489_hfsq = ((0.5 * _1389_f) * _1389_f);;
	return static_cast<jule::F64>(((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f)));;
}



inline jule::F64 _20b006c52_Abs(jule::F64 _438_x) {
	return static_cast<jule::F64>(_20ae031ae_F64FromBits(static_cast<jule::U64>((_20ae02d6d_F64Bits(_438_x) & 9223372036854775807LLU))));;
}



inline __jule_tuple_f64__jule_tuple_f64 _20b00d94b_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _469_absF = _20b006c52_Abs(_449_f);;
	jule::F64 _4713_i = 0LL;;
	if ((_469_absF > 4503599627370496LL)) {
		_4713_i=_449_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_absF + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while ((_4713_i > _469_absF)) {
			{
				(_4713_i)--;
			}
		_iter_next_210cba48e:;
		}
		_iter_end_210cba48e:;;
		if ((_449_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		};
	};
	__jule_func_result.__jule_result_arg0 = _4713_i;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::F64>((_449_f - _4713_i));
	return __jule_func_result;;
}



inline jule::F64 _20b00e254_Log2(jule::F64 _449_x) {
	jule::F64 _4510_frac = 0;;
	jule::I64 _4516_exp = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _20ae05766_Frexp(_449_x);
		_4510_frac = __jule_assign_result.__jule_result_arg0;
		_4516_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));;
	};
	return static_cast<jule::F64>(((_20b00636c_Log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp)));;
}



inline jule::Str _20b038789_FmtFloat(jule::F64 _7813_f, jule::U8 _7821_fmt, jule::I64 _7832_prec, jule::I64 _7843_bit_size) {
	return static_cast<jule::Str>(_20b038d72_genericFtoa(jule::Slice<jule::U8>::alloc(0LL, _20b042078_max(static_cast<jule::I64>((_7832_prec + 4LL)), 24LL), 0), _7813_f, _7821_fmt, _7832_prec, _7843_bit_size));;
}



inline jule::Slice<jule::U8> _20b038d72_genericFtoa(jule::Slice<jule::U8> _8220_dst, jule::F64 _8233_val, jule::U8 _8243_fmt, jule::I64 _8258_prec, jule::I64 _8269_bit_size) {
	jule::U64 _8313_bits = 0LLU;;
	jule::Ptr<_20b037557_floatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8269_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_210ec13dc:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_20ae02796_F32Bits(static_cast<jule::F32>(static_cast<jule::F32>(_8233_val)))));
				_8413_flt=((jule::Ptr<_20b037557_floatInfo>)((&(_20b037953_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_210ec1134:;
			{
				_8313_bits=static_cast<jule::U64>(_20ae02d6d_F64Bits(_8233_val));
				_8413_flt=((jule::Ptr<_20b037557_floatInfo>)((&(_20b037c61_f64info))));
			}
		}
		else {
			_case_begin_210ec0c5a:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_210ec0c05:;
	};
	jule::Bool _969_neg = ((_8313_bits >> ((*(_8413_flt))._field_expbits + (*(_8413_flt))._field_mantbits)) != 0LLU);;
	jule::I64 _9713_exp = (static_cast<jule::I64>((_8313_bits >> (*(_8413_flt))._field_mantbits)) & static_cast<jule::I64>(((1LL << (*(_8413_flt))._field_expbits) - 1LL)));;
	jule::U64 _9813_mant = (_8313_bits & ((static_cast<jule::U64>(1LLU) << (*(_8413_flt))._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << (*(_8413_flt))._field_expbits) - 1LL)))) {
			_case_begin_210eca050:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_210ecc11d:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'n','a','n'}));;
						}
					}
					else if (_969_neg) {
						_case_begin_210ecb161:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));;
						}
					}
					else {
						_case_begin_210ecb0ea:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));;
						}
					}
					_match_end_210ecb02e:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_210eca182:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_210ec925d:;
			{
				_9813_mant|=(static_cast<jule::U64>(1LLU) << (*(_8413_flt))._field_mantbits);
			}
		}
		_match_end_210ec93c3:;
	};
	_9713_exp+=(*(_8413_flt))._field_bias;
	if ((_8243_fmt == 'b')) {
		return _20b03b319_fmtB(_8220_dst, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	if (((_8243_fmt == 'x') || (_8243_fmt == 'X'))) {
		return _20b041880_fmtX(_8220_dst, _8258_prec, _8243_fmt, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	;
	_20b038206_decimalSlice _13213_digs = _20b038206_decimalSlice{};;
	jule::Bool _13313_ok = false;;
	jule::Bool _1359_shortest = (_8258_prec < 0LL);;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL, 32LL, 0);
		_20b04c03e_ryuFtoaShortest(&(_13213_digs), _9813_mant, static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>((*(_8413_flt))._field_mantbits))), &((*(_8413_flt))));
		_13313_ok=true;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_210ed074d:;
				{
					_8258_prec=static_cast<jule::I64>(_20b042078_max(static_cast<jule::I64>((_13213_digs._field_nd - 1LL)), 0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_210ed07b4:;
				{
					_8258_prec=static_cast<jule::I64>(_20b042078_max(static_cast<jule::I64>((_13213_digs._field_nd - _13213_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_210ed082a:;
				{
					_8258_prec=_13213_digs._field_nd;
				}
			}
			_match_end_210ece7d5:;
		};
	} else if ((_8243_fmt != 'f')) {
		jule::I64 _15217_digits = _8258_prec;;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_210ed2464:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_210ed2662:;
				{
					if ((_8258_prec == 0LL)) {
						_8258_prec=1LL;
					};
					_15217_digits=_8258_prec;
				}
			}
			else {
				_case_begin_210ed25eb:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_210ed2596:;
		};
		if (((_8269_bit_size == 32LL) && (_15217_digits <= 9LL))) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_20b04ac74_ryuFtoaFixed32(&(_13213_digs), static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)), static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>((*(_8413_flt))._field_mantbits))), _15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_20b04b219_ryuFtoaFixed64(&(_13213_digs), _9813_mant, static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>((*(_8413_flt))._field_mantbits))), _15217_digits);
			_13313_ok=true;
		};
	};
	if ((!(_13313_ok))) {
		return _20b0394e3_bigFtoa(_8220_dst, _8258_prec, _8243_fmt, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	return _20b039bb9_fmtDigits(_8220_dst, _1359_shortest, _969_neg, _13213_digs, _8258_prec, _8243_fmt);;
}



inline jule::Slice<jule::U8> _20b0394e3_bigFtoa(jule::Slice<jule::U8> _18216_dst, jule::I64 _18233_prec, jule::U8 _18244_fmt, jule::Bool _18255_neg, jule::U64 _1835_mant, jule::I64 _18316_exp, _20b037557_floatInfo* _18327_flt) {
	_20b050d56_decimal _18413_d = _20b050d56_decimal{};;
	_20b05120d_assign(&_18413_d, _1835_mant);
	_20b0514b6_shift(&_18413_d, static_cast<jule::I64>((_18316_exp - static_cast<jule::I64>((*(_18327_flt))._field_mantbits))));
	_20b038206_decimalSlice _18713_digs = _20b038206_decimalSlice{};;
	jule::Bool _1889_shortest = (_18233_prec < 0LL);;
	if (_1889_shortest) {
		_20b03a11a_roundShortest(&(_18413_d), _1835_mant, _18316_exp, _18327_flt);
		_18713_digs=_20b038206_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_210ed8921:;
				{
					_18233_prec=static_cast<jule::I64>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_210ed9702:;
				{
					_18233_prec=static_cast<jule::I64>(_20b042078_max(static_cast<jule::I64>((_18713_digs._field_nd - _18713_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_210ed9768:;
				{
					_18233_prec=_18713_digs._field_nd;
				}
			}
			_match_end_210ed959d:;
		};
	} else {
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_210edad74:;
				{
					_20b051cd0_round(&_18413_d, static_cast<jule::I64>((_18233_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_210edadeb:;
				{
					_20b051cd0_round(&_18413_d, static_cast<jule::I64>((_18413_d._field_dp + _18233_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_210edae73:;
				{
					if ((_18233_prec == 0LL)) {
						_18233_prec=1LL;
					};
					_20b051cd0_round(&_18413_d, _18233_prec);
				}
			}
			_match_end_210edacca:;
		};
		_18713_digs=_20b038206_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
	};
	return _20b039bb9_fmtDigits(_18216_dst, _1889_shortest, _18255_neg, _18713_digs, _18233_prec, _18244_fmt);;
}



inline jule::Slice<jule::U8> _20b039bb9_fmtDigits(jule::Slice<jule::U8> _21918_dst, jule::Bool _21931_shortest, jule::Bool _21947_neg, _20b038206_decimalSlice _2205_digs, jule::I64 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_210ede240:;
			{
				return _20b03a6ae_fmtE(_21918_dst, _21947_neg, _2205_digs, _22029_prec, _22040_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_210ede2a6:;
			{
				return _20b03ab98_fmtF(_21918_dst, _21947_neg, _2205_digs, _22029_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_210ede31c:;
			{
				jule::I64 _22817_eprec = _22029_prec;;
				if (((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22817_eprec=_2205_digs._field_nd;
				};
				if (_21931_shortest) {
					_22817_eprec=6LL;
				};
				jule::I64 _23813_exp = (_2205_digs._field_dp - 1LL);;
				if (((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _20b03a6ae_fmtE(_21918_dst, _21947_neg, _2205_digs, static_cast<jule::I64>((_22029_prec - 1LL)), static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));;
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _20b03ab98_fmtF(_21918_dst, _21947_neg, _2205_digs, static_cast<jule::I64>(_20b042078_max(static_cast<jule::I64>((_22029_prec - _2205_digs._field_dp)), 0LL)));;
			}
		}
		_match_end_210ede152:;
	};
	return jule::append(_21918_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));;
}



inline void _20b03a11a_roundShortest(_20b050d56_decimal* _25723_d, jule::U64 _25735_mant, jule::I64 _25746_exp, _20b037557_floatInfo* _25757_flt) {
	if ((_25735_mant == 0LLU)) {
		(*(_25723_d))._field_nd=0LL;
		return;;
	};
	jule::I64 _2789_minexp = ((*(_25757_flt))._field_bias + 1LL);;
	if (((_25746_exp > _2789_minexp) && ((332LL * ((*(_25723_d))._field_dp - (*(_25723_d))._field_nd)) >= (100LL * (_25746_exp - static_cast<jule::I64>((*(_25757_flt))._field_mantbits)))))) {
		return;;
	};
	_20b050d56_decimal _28713_upper = _20b050d56_decimal{};;
	_20b05120d_assign(&_28713_upper, static_cast<jule::U64>(((_25735_mant << 1LLU) + 1LLU)));
	_20b0514b6_shift(&_28713_upper, static_cast<jule::I64>(((_25746_exp - static_cast<jule::I64>((*(_25757_flt))._field_mantbits)) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;;
	jule::I64 _29813_explo = 0LL;;
	if (((_25735_mant > (1LLU << (*(_25757_flt))._field_mantbits)) || (_25746_exp == _2789_minexp))) {
		_29713_mantlo=static_cast<jule::U64>((_25735_mant - 1LLU));
		_29813_explo=_25746_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(((_25735_mant << 1LLU) - 1LLU));
		_29813_explo=static_cast<jule::I64>((_25746_exp - 1LL));
	};
	_20b050d56_decimal _30613_lower = _20b050d56_decimal{};;
	_20b05120d_assign(&_30613_lower, static_cast<jule::U64>(((_29713_mantlo << 1LLU) + 1LLU)));
	_20b0514b6_shift(&_30613_lower, static_cast<jule::I64>(((_29813_explo - static_cast<jule::I64>((*(_25757_flt))._field_mantbits)) - 1LL)));
	jule::Bool _3139_inclusive = ((_25735_mant & 1LL) == 0LLU);;
	jule::U8 _32613_upperdelta = 0LLU;;
	jule::I64 _33013_ui = 0LL;;
	for (; ; (_33013_ui)++) {
		{
			jule::I64 _33513_mi = ((_33013_ui - _28713_upper._field_dp) + (*(_25723_d))._field_dp);;
			if ((_33513_mi >= (*(_25723_d))._field_nd)) {
				goto _iter_end_210eeb02c;
			};
			jule::I64 _33913_li = ((_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp);;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);;
			if (((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd))) {
				_34017_l=_30613_lower._field_d[_33913_li];
			};
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);;
			if ((_33513_mi >= 0LL)) {
				_34417_m=(*(_25723_d))._field_d[_33513_mi];
			};
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);;
			if ((_33013_ui < _28713_upper._field_nd)) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			};
			jule::Bool _35613_okdown = ((_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd)));;
			{
				
				if (((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u))) {
					_case_begin_211000ac0:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if (((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u))) {
					_case_begin_211000b36:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if (((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0')))) {
					_case_begin_211000b9c:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_211000a26:;
			};
			jule::Bool _37713_okup = ((_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd)));;
			{
				
				if ((_35613_okdown && _37713_okup)) {
					_case_begin_2110036a5:;
					{
						_20b051cd0_round(_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_35613_okdown) {
					_case_begin_21100371b:;
					{
						_20b05176e_roundDown(_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_37713_okup) {
					_case_begin_211003782:;
					{
						_20b051a27_roundUp(_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				_match_end_21100360b:;
			};
		}
	_iter_next_210eeb02c:;
	}
	_iter_end_210eeb02c:;;
}



inline jule::Slice<jule::U8> _20b03a6ae_fmtE(jule::Slice<jule::U8> _39613_dst, jule::Bool _39626_neg, _20b038206_decimalSlice _39637_d, jule::I64 _39654_prec, jule::U8 _39665_fmt) {
	if (_39626_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _40313_ch = '0';;
	if ((_39637_d._field_nd != 0LL)) {
		_40313_ch=_39637_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push(_40313_ch); };
	if ((_39654_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push('.'); };
		jule::I64 _41217_i = 1LL;;
		jule::I64 _41313_m = _20b041c04_min(_39637_d._field_nd, static_cast<jule::I64>((_39654_prec + 1LL)));;
		if ((_41217_i < _41313_m)) {
			(_39613_dst).append(_39637_d._field_d.slice(_41217_i, _41313_m));;
			_41217_i=_41313_m;
		};
		for (; (_41217_i <= _39654_prec); (_41217_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_211008259:;
		}
		_iter_end_211008259:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push(_39665_fmt); };
	jule::I64 _42513_exp = (_39637_d._field_dp - 1LL);;
	if ((_39637_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	};
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I64>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push(_40313_ch); };
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_21100a26c:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(_42513_exp) + '0'))); };
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_21100a855:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0'))); };
			}
		}
		else {
			_case_begin_211009d60:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 100LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_42513_exp / 10LL)) % 10LL) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0'))); };
			}
		}
		_match_end_2110095e0:;
	};
	return _39613_dst;;
}



inline jule::Slice<jule::U8> _20b03ab98_fmtF(jule::Slice<jule::U8> _45113_dst, jule::Bool _45126_neg, _20b038206_decimalSlice _45137_d, jule::I64 _45154_prec) {
	if (_45126_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('-'); };
	};
	if ((_45137_d._field_dp > 0LL)) {
		jule::I64 _45917_m = _20b041c04_min(_45137_d._field_nd, _45137_d._field_dp);;
		(_45113_dst).append(_45137_d._field_d.slice(0LL, _45917_m));;
		for (; (_45917_m < _45137_d._field_dp); (_45917_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_21100e10b:;
		}
		_iter_end_21100e10b:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('0'); };
	};
	if ((_45154_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('.'); };
		jule::I64 _47017_i = 0LL;;
		for (; (_47017_i < _45154_prec); (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47317_j = (_45137_d._field_dp + _47017_i);;
				if (((0LL <= _47317_j) && (_47317_j < _45137_d._field_nd))) {
					_47221_ch=_45137_d._field_d[_47317_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push(_47221_ch); };
			}
		_iter_next_21100e31a:;
		}
		_iter_end_21100e31a:;;
	};
	return _45113_dst;;
}



inline jule::Slice<jule::U8> _20b03b319_fmtB(jule::Slice<jule::U8> _48413_dst, jule::Bool _48426_neg, jule::U64 _48437_mant, jule::I64 _48452_exp, _20b037557_floatInfo* _48463_flt) {
	if (_48426_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48413_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _20b056037_fmtBits(_48413_dst, _48437_mant, 10LL, false, true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _48413_dst; __jule_push_dest.push('p'); };
	_48452_exp-=static_cast<jule::I64>((*(_48463_flt))._field_mantbits);
	if ((_48452_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48413_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _20b056037_fmtBits(_48413_dst, static_cast<jule::U64>(static_cast<jule::U64>(_48452_exp)), 10LL, (_48452_exp < 0LL), true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48413_dst;;
}



inline jule::Slice<jule::U8> _20b041880_fmtX(jule::Slice<jule::U8> _50613_dst, jule::I64 _50626_prec, jule::U8 _50637_fmt, jule::Bool _50648_neg, jule::U64 _5079_mant, jule::I64 _50724_exp, _20b037557_floatInfo* _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - (*(_50735_flt))._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_21101495d:;
	}
	_iter_end_21101495d:;;
	if (((_50626_prec >= 0LL) && (_50626_prec < 15LL))) {
		jule::U64 _52113_shift = static_cast<jule::U64>((_50626_prec << 2LLU));;
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _52113_shift);
		if (((_52213_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _53513_hex = jule::Str();;
	if ((_50637_fmt == 'X')) {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	};
	if (_50648_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_50637_fmt); __jule_push_dest.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU))))); };
	_5079_mant<<=4LLU;
	if (((_50626_prec < 0LL) && (_5079_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push('.'); };
		while ((_5079_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]); };
				_5079_mant<<=4LLU;
			}
		_iter_next_21101b37c:;
		}
		_iter_end_21101b37c:;;
	} else if ((_50626_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push('.'); };
		jule::I64 _55817_i = 0LL;;
		for (; (_55817_i < _50626_prec); (_55817_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]); };
				_5079_mant<<=4LLU;
			}
		_iter_next_21101c3b1:;
		}
		_iter_end_21101c3b1:;;
	};
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);;
	if ((_50637_fmt == _20b042bb1_lower(_50637_fmt))) {
		_56613_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_56613_ch); };
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I64>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_56613_ch); };
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_211019886:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0'))); };
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_21101e6b0:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0'))); };
			}
		}
		else {
			_case_begin_21101eced:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0'))); };
			}
		}
		_match_end_21101dba9:;
	};
	return _50613_dst;;
}



inline jule::I64 _20b041c04_min(jule::I64 _5918_a, jule::I64 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;;
	};
	return _59116_b;;
}



inline jule::I64 _20b042078_max(jule::I64 _5988_a, jule::I64 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;;
	};
	return _59816_b;;
}



inline jule::U8 _20b042bb1_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | 32LL));;
}



inline __jule_tuple_u64__jule_tuple__20a83d930_ConvError _20b043134_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize) {
	__jule_tuple_u64__jule_tuple__20a83d930_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if ((*(_5119_s)).empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5131_base) && (_5131_base <= 36LL))) {
			_case_begin_2110260ce:;
		}
		else if ((_5131_base == 0LL)) {
			_case_begin_211025ed0:;
			{
				_5131_base=10LL;
				if (((*(_5119_s))[0LL] == '0')) {
					{
						
						if ((((*(_5119_s)).len() >= 3LL) && (_20b042bb1_lower((*(_5119_s))[1LL]) == 'b'))) {
							_case_begin_211027a2b:;
							{
								_5131_base=2LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_20b042bb1_lower((*(_5119_s))[1LL]) == 'o'))) {
							_case_begin_21102794e:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_20b042bb1_lower((*(_5119_s))[1LL]) == 'x'))) {
							_case_begin_21102761e:;
							{
								_5131_base=16LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_2110275a8:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(1LL);;
							}
						}
						_match_end_2110274dc:;
					};
				};
			}
		}
		else {
			_case_begin_211025463:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_2110257b5:;
	};
	if ((_5146_bitSize == 0LL)) {
		_5146_bitSize=64LL;
	} else if (((_5146_bitSize < 0LL) || (_5146_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _9013_cutoff = 0LLU;;
	{
		auto &_match_expr{ _5131_base };
		
		if (_match_expr == 10LL) {
			_case_begin_21102b942:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_21102b2e3:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_21102b568:;
			{
				_9013_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5131_base)) + 1LLU));
			}
		}
		_match_end_21102b502:;
	};
	jule::U64 _10013_maxVal = 0LLU;;
	{
		auto &_match_expr{ _5146_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_21102cc0c:;
			{
				_10013_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_21102cc73:;
			{
				_10013_maxVal=jule::MAX_U64;
			}
		}
		_match_end_21102b5e0:;
	};
	jule::U64 _10813_n = 0LLU;;
	{
		auto expr = _5119_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21102d955:;
		if (it != expr_end) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11017_d = 0LLU;;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_21102eb87:;
						{
							_11017_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _20b042bb1_lower(_10912_c)) && (_20b042bb1_lower(_10912_c) <= 'z'))) {
						_case_begin_21102ea77:;
						{
							_11017_d=static_cast<jule::U8>(((_20b042bb1_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_21102e69d:;
						{
							goto _iter_next_21102d955;
						}
					}
					else {
						_case_begin_21102e637:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_21102e5d2:;
				};
				if ((_11017_d >= static_cast<jule::U8>(_5131_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
					return __jule_func_result;;
				};
				if ((_10813_n >= _9013_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_10813_n*=static_cast<jule::U64>(_5131_base);
				jule::U64 _13213_n1 = (_10813_n + static_cast<jule::U64>(_11017_d));;
				if (((_13213_n1 < _10813_n) || (_13213_n1 > _10013_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_10813_n=_13213_n1;
			}
			_iter_next_21102d955:;
			++it;
			goto _iter_begin_21102d955;
		}
		_iter_end_21102d955:;
	};
	__jule_func_result.__jule_result_arg0 = _10813_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _20b043563_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bit_size) {
	jule::U64 _14710_un = 0;;
	jule::I64 _14714_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__20a83d930_ConvError __jule_assign_result = _20b043134_parseUint(&(_14618_s), _14630_base, _14645_bit_size);
		_14710_un = __jule_assign_result.__jule_result_arg0;
		_14714_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_14714_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>(jule::Any(_14714_err, &__jule_any_type0));
	};
	return jule::Exceptional<jule::U64>(jule::Any(), _14710_un);;
}



inline jule::Exceptional<jule::I64> _20b043a19_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if (_17217_s.empty()) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
	};
	jule::Bool _17813_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_17813_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _18714_un = 0;;
	jule::I64 _18718_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__20a83d930_ConvError __jule_assign_result = _20b043134_parseUint(&(_17217_s), _17225_base, _17240_bitSize);
		_18714_un = __jule_assign_result.__jule_result_arg0;
		_18718_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18718_err != static_cast<jule::I64>(0LL)) && (_18718_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>(jule::Any(_18718_err, &__jule_any_type0));
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1969_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17240_bitSize - 1LL))));;
	if (((!(_17813_neg)) && (_18714_un >= _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0));
	};
	if ((_17813_neg && (_18714_un > _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0));
	};
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);;
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), _20313_n);;
}



inline __jule_tuple_f64__jule_tuple_bool _20b04470c_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_20ae031ae_F64FromBits(9223372036854775808LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _579_clz = _20aee192e_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U64>(_579_clz);
	;
	jule::U64 _6013_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_579_clz));;
	jule::U64 _6314_xHi = 0;;
	jule::U64 _6323_xLo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _20aeeb8c3_Mul64(_4122_man, _20b045565_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_6314_xHi = __jule_assign_result.__jule_result_arg0;
		_6323_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_6314_xHi & 511LLU) == 511LLU) && ((_6323_xLo + _4122_man) < _4122_man))) {
		jule::U64 _6714_yHi = 0;;
		jule::U64 _6719_yLo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _20aeeb8c3_Mul64(_4122_man, _20b045565_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_6714_yHi = __jule_assign_result.__jule_result_arg0;
			_6719_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _6818_mergedHi = 0;;
		jule::U64 _6828_mergedLo = 0;;
		({
			jule::U64 ___jule_assign_arg = _6314_xHi;
			jule::U64 _1___jule_assign_arg = (_6323_xLo + _6714_yHi);
			_6818_mergedHi = ___jule_assign_arg;
			_6828_mergedLo = _1___jule_assign_arg;
		});
		if ((_6828_mergedLo < _6323_xLo)) {
			(_6818_mergedHi)++;
		};
		if (((((_6818_mergedHi & 511LLU) == 511LLU) && ((_6828_mergedLo + 1LLU) == 0LLU)) && ((_6719_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _6818_mergedHi;
			jule::U64 _1___jule_assign_arg = _6828_mergedLo;
			_6314_xHi = ___jule_assign_arg;
			_6323_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _799_msb = (_6314_xHi >> 63LLU);;
	jule::U64 _8013_retMantissa = (_6314_xHi >> (_799_msb + 9LLU));;
	_6013_retExp2-=(1LLU ^ _799_msb);
	if ((((_6323_xLo == 0LLU) && ((_6314_xHi & 511LLU) == 0LLU)) && ((_8013_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_8013_retMantissa+=(_8013_retMantissa & 1LLU);
	_8013_retMantissa>>=1LLU;
	if (((_8013_retMantissa >> 53LLU) > 0LLU)) {
		_8013_retMantissa>>=1LLU;
		_6013_retExp2+=1LLU;
	};
	if (((_6013_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _10313_retBits = ((_6013_retExp2 << 52LLU) | (_8013_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_10313_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_20ae031ae_F64FromBits(_10313_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _20b044b4c_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_20ae02aa4_F32FromBits(2147483648LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _1329_clz = _20aee192e_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U64>(_1329_clz);
	;
	jule::U64 _13513_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1329_clz));;
	jule::U64 _13814_x_hi = 0;;
	jule::U64 _13824_x_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _20aeeb8c3_Mul64(_11022_man, _20b045565_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_13814_x_hi = __jule_assign_result.__jule_result_arg0;
		_13824_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _14214_y_hi = 0;;
		jule::U64 _14220_y_lo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _20aeeb8c3_Mul64(_11022_man, _20b045565_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_14214_y_hi = __jule_assign_result.__jule_result_arg0;
			_14220_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _14318_merged_hi = 0;;
		jule::U64 _14329_merged_lo = 0;;
		({
			jule::U64 ___jule_assign_arg = _13814_x_hi;
			jule::U64 _1___jule_assign_arg = (_13824_x_lo + _14214_y_hi);
			_14318_merged_hi = ___jule_assign_arg;
			_14329_merged_lo = _1___jule_assign_arg;
		});
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		};
		if (((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _14318_merged_hi;
			jule::U64 _1___jule_assign_arg = _14329_merged_lo;
			_13814_x_hi = ___jule_assign_arg;
			_13824_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);;
	jule::U64 _15513_retMantissa = (_13814_x_hi >> (_1549_msb + 38LLU));;
	_13513_retExp2-=(1LLU ^ _1549_msb);
	if ((((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_15513_retMantissa+=(_15513_retMantissa & 1LLU);
	_15513_retMantissa>>=1LLU;
	if (((_15513_retMantissa >> 24LLU) > 0LLU)) {
		_15513_retMantissa>>=1LLU;
		_13513_retExp2+=1LLU;
	};
	if (((_13513_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _17813_retBits = ((_13513_retExp2 << 23LLU) | (_15513_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_17813_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_20ae02aa4_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_retBits))));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I64 _20b0469a6_commonPrefixLenIgnoreCase(jule::Slice<jule::U8>* _4631_s, jule::Str _4642_prefix) {
	jule::I64 _4713_n = _4642_prefix.len();;
	if ((_4713_n > (*(_4631_s)).len())) {
		_4713_n=static_cast<jule::I64>((*(_4631_s)).len());
	};
	jule::I64 _5113_i = 0LL;;
	for (; (_5113_i < _4713_n); (_5113_i)++) {
		{
			jule::U8 _5317_c = (*(_4631_s))[_5113_i];;
			if ((('A' <= _5317_c) && (_5317_c <= 'Z'))) {
				_5317_c+=32LL;
			};
			if ((_5317_c != _4642_prefix[_5113_i])) {
				return _5113_i;;
			};
		}
	_iter_next_211053507:;
	}
	_iter_end_211053507:;;
	return _4713_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _20b046cb4_special(jule::Slice<jule::U8> _6912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_6912_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I64 _7313_sign = 1LL;;
	jule::I64 _7413_nsign = 0LL;;
	{
		auto &_match_expr{ _6912_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_211057088:;
			{
				if ((_6912_s[0LL] == '-')) {
					_7313_sign=-1LL;
				};
				_7413_nsign=1LL;
				{
					jule::Slice<jule::U8>* _8321_sp = (&(_6912_s));;
					(*(_8321_sp))=(*(_8321_sp)).slice(1LL);
				};
				goto _case_begin_211057110;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_211057110:;
			{
				jule::I64 _8817_caseN = _20b0469a6_commonPrefixLenIgnoreCase(&(_6912_s), jule::Str("infinity", 8));;
				if (((3LL < _8817_caseN) && (_8817_caseN < 8LL))) {
					_8817_caseN=3LL;
				};
				if (((_8817_caseN == 3LL) || (_8817_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_20b00428d_Inf(_7313_sign));
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_7413_nsign + __jule_func_result.__jule_result_arg1));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_211057187:;
			{
				if ((_20b0469a6_commonPrefixLenIgnoreCase(&(_6912_s), jule::Str("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_20b003bb6_NaN());
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_211056ebc:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _20b04707d_readFloat(jule::Str* _10815_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
		return __jule_func_result;;
	};
	{
		
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_21105c654:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_21105c8c9:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_21105c80d:;
	};
	jule::U64 _12213_base = 10LLU;;
	jule::I64 _12313_maxMantDigits = 19LL;;
	jule::U8 _12413_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < (*(_10815_s)).len()) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '0')) && (_20b042bb1_lower((*(_10815_s))[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_12213_base=16LLU;
		_12313_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_12413_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _13213_sawdot = false;;
	jule::Bool _13313_sawdigits = false;;
	jule::I64 _13413_nd = 0LL;;
	jule::I64 _13513_ndMant = 0LL;;
	jule::I64 _13613_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _13813_c = (*(_10815_s))[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_13813_c == '_')) {
					_case_begin_2110628e0:;
					{
						goto _iter_next_21105c0b0;
					}
				}
				else if ((_13813_c == '.')) {
					_case_begin_211062967:;
					{
						if (_13213_sawdot) {
							goto _julec_label_211067296;
						};
						_13213_sawdot=true;
						_13613_dp=_13413_nd;
						goto _iter_next_21105c0b0;
					}
				}
				else if ((('0' <= _13813_c) && (_13813_c <= '9'))) {
					_case_begin_2110629de:;
					{
						_13313_sawdigits=true;
						if (((_13813_c == '0') && (_13413_nd == 0LL))) {
							(_13613_dp)--;
							goto _iter_next_21105c0b0;
						};
						(_13413_nd)++;
						if ((_13513_ndMant < _12313_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_12213_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((_13813_c - '0'));
							(_13513_ndMant)++;
						} else if ((_13813_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_21105c0b0;
					}
				}
				else if ((((_12213_base == 16LLU) && ('a' <= _20b042bb1_lower(_13813_c))) && (_20b042bb1_lower(_13813_c) <= 'f'))) {
					_case_begin_211062a66:;
					{
						_13313_sawdigits=true;
						(_13413_nd)++;
						if ((_13513_ndMant < _12313_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>(((_20b042bb1_lower(_13813_c) - 'a') + 10LLU));
							(_13513_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_21105c0b0;
					}
				}
				_match_end_211062813:;
			};
			goto _iter_end_21105c0b0;
		}
	_iter_next_21105c0b0:;
	}
	_iter_end_21105c0b0:;;
	_julec_label_211067296:;
	if ((!(_13313_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_13213_sawdot))) {
		_13613_dp=_13413_nd;
	};
	if ((_12213_base == 16LLU)) {
		_13613_dp*=4LL;
		_13513_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && (_20b042bb1_lower((*(_10815_s))[__jule_func_result.__jule_result_arg5]) == _12413_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
			return __jule_func_result;;
		};
		jule::I64 _20117_esign = 1LL;;
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_20117_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len()) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] < '0')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _21117_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && ((('0' <= (*(_10815_s))[__jule_func_result.__jule_result_arg5]) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] <= '9')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_21106a4ec;
				};
				if ((_21117_e < 10000LL)) {
					_21117_e=static_cast<jule::I64>((((_21117_e * 10LL) + static_cast<jule::I64>((*(_10815_s))[__jule_func_result.__jule_result_arg5])) - '0'));
				};
			}
		_iter_next_21106a4ec:;
		}
		_iter_end_21106a4ec:;;
		_13613_dp+=(_21117_e * _20117_esign);
	} else if ((_12213_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=static_cast<jule::I64>((_13613_dp - _13513_ndMant));
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _20b048b0c_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_48616_mantissa >> _20b037c61_f64info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(static_cast<jule::F64>(_48616_mantissa));
	if (_48645_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F64>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_48635_exp == 0LL)) {
			_case_begin_211073d30:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp > 0LL) && (_48635_exp <= 37LL))) {
			_case_begin_211073da7:;
			{
				if ((_48635_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_20b047ea2_f64pow10[(_48635_exp - 22LL)];
					_48635_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((__jule_func_result.__jule_result_arg0 * _20b047ea2_f64pow10[_48635_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp < 0LL) && (_48635_exp >= -22LL))) {
			_case_begin_211073e2e:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(jule::div(__jule_func_result.__jule_result_arg0,_20b047ea2_f64pow10[(-(_48635_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_2110737d0:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _20b04903b_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_52016_mantissa >> _20b037953_f32info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(static_cast<jule::F32>(_52016_mantissa));
	if (_52049_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F32>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_52035_exp == 0LL)) {
			_case_begin_21107821e:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp > 0LL) && (_52035_exp <= 17LL))) {
			_case_begin_211078296:;
			{
				if ((_52035_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_20b0482e3_f32pow10[(_52035_exp - 10LL)];
					_52035_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>((__jule_func_result.__jule_result_arg0 * _20b0482e3_f32pow10[_52035_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp < 0LL) && (_52035_exp >= -10LL))) {
			_case_begin_21107831d:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(jule::div(__jule_func_result.__jule_result_arg0,_20b0482e3_f32pow10[(-(_52035_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_211077bbe:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__20a83d930_ConvError _20b0495d0_atofHex(_20b037557_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc) {
	__jule_tuple_f64__jule_tuple__20a83d930_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I64 _5579_maxExp = ((static_cast<jule::I64>((1LL << (*(_55613_flt))._field_expbits)) + (*(_55613_flt))._field_bias) - 2LL);;
	jule::I64 _5589_minExp = ((*(_55613_flt))._field_bias + 1LL);;
	_55652_exp+=static_cast<jule::I64>((*(_55613_flt))._field_mantbits);
	while (((_55633_mantissa != 0LLU) && ((_55633_mantissa >> ((*(_55613_flt))._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55633_mantissa<<=1LLU;
			(_55652_exp)--;
		}
	_iter_next_21107c663:;
	}
	_iter_end_21107c663:;;
	if (_55673_trunc) {
		_55633_mantissa|=1LLU;
	};
	while (((_55633_mantissa >> ((1LLU + (*(_55613_flt))._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55633_mantissa=static_cast<jule::U64>(((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU)));
			(_55652_exp)++;
		}
	_iter_next_21107e401:;
	}
	_iter_end_21107e401:;;
	while (((_55633_mantissa > 1LLU) && (_55652_exp < (_5589_minExp - 2LL)))) {
		{
			_55633_mantissa=static_cast<jule::U64>(((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU)));
			(_55652_exp)++;
		}
	_iter_next_21107e203:;
	}
	_iter_end_21107e203:;;
	jule::U64 _58813_round = (_55633_mantissa & 3LLU);;
	_55633_mantissa>>=2LLU;
	_58813_round|=(_55633_mantissa & 1LLU);
	_55652_exp+=2LL;
	if ((_58813_round == 3LLU)) {
		(_55633_mantissa)++;
		if ((_55633_mantissa == (1LLU << (1LLU + (*(_55613_flt))._field_mantbits)))) {
			_55633_mantissa>>=1LLU;
			(_55652_exp)++;
		};
	};
	if (((_55633_mantissa >> (*(_55613_flt))._field_mantbits) == 0LLU)) {
		_55652_exp=(*(_55613_flt))._field_bias;
	};
	jule::I64 _60313_err = static_cast<jule::I64>(0LL);;
	if ((_55652_exp > _5579_maxExp)) {
		_55633_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << (*(_55613_flt))._field_mantbits)));
		_55652_exp=static_cast<jule::I64>((_5579_maxExp + 1LL));
		_60313_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _61013_bits = (_55633_mantissa & ((1LLU << (*(_55613_flt))._field_mantbits) - 1LLU));;
	_61013_bits|=(static_cast<jule::U64>(((_55652_exp - (*(_55613_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_55613_flt))._field_expbits) - 1LL)))) << (*(_55613_flt))._field_mantbits);
	if (_55662_neg) {
		_61013_bits|=((1LLU << (*(_55613_flt))._field_mantbits) << (*(_55613_flt))._field_expbits);
	};
	if (((*(_55613_flt)) == _20b037953_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_20ae02aa4_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_61013_bits)))));
		__jule_func_result.__jule_result_arg1 = _60313_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_20ae031ae_F64FromBits(_61013_bits));
	__jule_func_result.__jule_result_arg1 = _60313_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__20a83d930_ConvError _20b0499a9_atof32(jule::Str* _62112_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__20a83d930_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _62314_val = 0;;
		jule::I64 _62319__n = 0;;
		jule::Bool _62323_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _20b046cb4_special(_223dd6124_Stobs(_62112_s));
			_62314_val = __jule_assign_result.__jule_result_arg0;
			_62319__n = __jule_assign_result.__jule_result_arg1;
			_62323_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_62323_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_62314_val));
			__jule_func_result.__jule_result_arg1 = _62319__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _62910_mantissa = 0;;
	jule::I64 _62920_exp = 0;;
	jule::Bool _62925_neg = false;;
	jule::Bool _62930_trunc = false;;
	jule::Bool _62937_hex = false;;
	jule::I64 _62942__n = 0;;
	jule::Bool _62950_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _20b04707d_readFloat(_62112_s);
		_62910_mantissa = __jule_assign_result.__jule_result_arg0;
		_62920_exp = __jule_assign_result.__jule_result_arg1;
		_62925_neg = __jule_assign_result.__jule_result_arg2;
		_62930_trunc = __jule_assign_result.__jule_result_arg3;
		_62937_hex = __jule_assign_result.__jule_result_arg4;
		_62942__n = __jule_assign_result.__jule_result_arg5;
		_62950_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62942__n;
	if ((!(_62950_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_62937_hex) {
		jule::F64 _63617_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__20a83d930_ConvError __jule_assign_result = _20b0495d0_atofHex(&(_20b037953_f32info), _62910_mantissa, _62920_exp, _62925_neg, _62930_trunc);
			_63617_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_63617_ff));
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62930_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _20b04903b_atof32exact(_62910_mantissa, _62920_exp, _62925_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62950_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62950_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _20b044b4c_eiselLemire32(_62910_mantissa, _62920_exp, _62925_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62950_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62950_ok) {
			if ((!(_62930_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _65821_fUp = 0.0f;;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _20b044b4c_eiselLemire32(static_cast<jule::U64>((_62910_mantissa + 1LLU)), _62920_exp, _62925_neg);
				_65821_fUp = __jule_assign_result.__jule_result_arg0;
				_62950_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62950_ok && (__jule_func_result.__jule_result_arg0 == _65821_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_20b050d56_decimal _66713_d = _20b050d56_decimal{};;
	if ((!(_20b047721_set(&_66713_d, _223dd6124_Stobs(_62112_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _67110_b = 0;;
	jule::Bool _67113_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _20b047a62_floatBits(&_66713_d, &(_20b037953_f32info));
		_67110_b = __jule_assign_result.__jule_result_arg0;
		_67113_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_20ae02aa4_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_67110_b))));
	if (_67113_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__20a83d930_ConvError _20b049c73_atof64(jule::Str* _67912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__20a83d930_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _68114_val = 0;;
		jule::I64 _68119__n = 0;;
		jule::Bool _68123_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _20b046cb4_special(_223dd6124_Stobs(_67912_s));
			_68114_val = __jule_assign_result.__jule_result_arg0;
			_68119__n = __jule_assign_result.__jule_result_arg1;
			_68123_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_68123_ok) {
			__jule_func_result.__jule_result_arg0 = _68114_val;
			__jule_func_result.__jule_result_arg1 = _68119__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _68710_mantissa = 0;;
	jule::I64 _68720_exp = 0;;
	jule::Bool _68725_neg = false;;
	jule::Bool _68730_trunc = false;;
	jule::Bool _68737_hex = false;;
	jule::I64 _68742__n = 0;;
	jule::Bool _68750_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _20b04707d_readFloat(_67912_s);
		_68710_mantissa = __jule_assign_result.__jule_result_arg0;
		_68720_exp = __jule_assign_result.__jule_result_arg1;
		_68725_neg = __jule_assign_result.__jule_result_arg2;
		_68730_trunc = __jule_assign_result.__jule_result_arg3;
		_68737_hex = __jule_assign_result.__jule_result_arg4;
		_68742__n = __jule_assign_result.__jule_result_arg5;
		_68750_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68742__n;
	if ((!(_68750_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_68737_hex) {
		({
			__jule_tuple_f64__jule_tuple__20a83d930_ConvError __jule_assign_result = _20b0495d0_atofHex(&(_20b037c61_f64info), _68710_mantissa, _68720_exp, _68725_neg, _68730_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68730_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _20b048b0c_atof64exact(_68710_mantissa, _68720_exp, _68725_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68750_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68750_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _20b04470c_eiselLemire64(_68710_mantissa, _68720_exp, _68725_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68750_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68750_ok) {
			if ((!(_68730_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _71521_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _20b04470c_eiselLemire64(static_cast<jule::U64>((_68710_mantissa + 1LLU)), _68720_exp, _68725_neg);
				_71521_fUp = __jule_assign_result.__jule_result_arg0;
				_68750_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68750_ok && (__jule_func_result.__jule_result_arg0 == _71521_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_20b050d56_decimal _72413_d = _20b050d56_decimal{};;
	if ((!(_20b047721_set(&_72413_d, _223dd6124_Stobs(_67912_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _72810_b = 0;;
	jule::Bool _72813_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _20b047a62_floatBits(&_72413_d, &(_20b037c61_f64info));
		_72810_b = __jule_assign_result.__jule_result_arg0;
		_72813_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_20ae031ae_F64FromBits(_72810_b));
	if (_72813_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__20a83d930_ConvError _20b04a0e7_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__20a83d930_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73630_bitSize == 32LL)) {
		jule::F32 _73814_f = 0;;
		jule::I64 _73817_n = 0;;
		jule::I64 _73820_err = 0LL;;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__20a83d930_ConvError __jule_assign_result = _20b0499a9_atof32(_73622_s);
			_73814_f = __jule_assign_result.__jule_result_arg0;
			_73817_n = __jule_assign_result.__jule_result_arg1;
			_73820_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_73814_f));
		__jule_func_result.__jule_result_arg1 = _73817_n;
		__jule_func_result.__jule_result_arg2 = _73820_err;
		return __jule_func_result;;
	};
	jule::F64 _74110_f = 0;;
	jule::I64 _74113_n = 0;;
	jule::I64 _74116_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__20a83d930_ConvError __jule_assign_result = _20b049c73_atof64(_73622_s);
		_74110_f = __jule_assign_result.__jule_result_arg0;
		_74113_n = __jule_assign_result.__jule_result_arg1;
		_74116_err = __jule_assign_result.__jule_result_arg2;
	});
	__jule_func_result.__jule_result_arg0 = _74110_f;
	__jule_func_result.__jule_result_arg1 = _74113_n;
	__jule_func_result.__jule_result_arg2 = _74116_err;
	return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _20b04a46b_ParseFloat(jule::Str _76915_s, jule::I64 _76923_bitSize) {
	jule::F64 _77010_f = 0;;
	jule::I64 _77013_n = 0;;
	jule::I64 _77016_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__20a83d930_ConvError __jule_assign_result = _20b04a0e7_parseFloatPrefix(&(_76915_s), _76923_bitSize);
		_77010_f = __jule_assign_result.__jule_result_arg0;
		_77013_n = __jule_assign_result.__jule_result_arg1;
		_77016_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_77013_n != _76915_s.len()) && ((_77016_err == static_cast<jule::I64>(0LL)) || (_77016_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
	};
	if ((_77016_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>(jule::Any(_77016_err, &__jule_any_type0));
	};
	return jule::Exceptional<jule::F64>(jule::Any(), _77010_f);;
}



inline void _20b04ac74_ryuFtoaFixed32(_20b038206_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _6213_e2 = _4956_exp;;
	jule::I64 _639_b = _20aee9063_Len32(_4945_mant);;
	if ((_639_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U64>((25LL - _639_b));
		_6213_e2+=(static_cast<jule::I64>(_639_b) - 25LL);
	};
	jule::I64 _749_q = (((-(_20b04c308_mulByLog2Log10(static_cast<jule::I64>((_6213_e2 + 24LL))))) + _4966_prec) - 1LL);;
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));;
	jule::U32 _8114_di = 0;;
	jule::I64 _8118_dexp2 = 0;;
	jule::Bool _8129_d0 = false;;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _20b04dbbc_mult64bitPow10(_4945_mant, _6213_e2, _749_q);
		_8114_di = __jule_assign_result.__jule_result_arg0;
		_8118_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8129_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _20b04e470_divisibleByPow5(static_cast<jule::U64>(static_cast<jule::U64>(_4945_mant)), static_cast<jule::I64>((-(_749_q)))))) {
		_7913_exact=true;
		_8129_d0=true;
	};
	jule::U64 _949_extra = static_cast<jule::U64>((-(_8118_dexp2)));;
	jule::U32 _959_extraMask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));;
	jule::U32 _9713_dfrac = 0LLU;;
	({
		jule::U32 ___jule_assign_arg = static_cast<jule::U32>((_8114_di >> _949_extra));
		jule::U32 _1___jule_assign_arg = static_cast<jule::U32>((_8114_di & _959_extraMask));
		_8114_di = ___jule_assign_arg;
		_9713_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _9913_roundUp = false;;
	if (_7913_exact) {
		_9913_roundUp=(((_9713_dfrac > (1LLU << (_949_extra - 1LLU))) || ((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU)));
	} else {
		_9913_roundUp=((_9713_dfrac >> (_949_extra - 1LLU)) == 1LLU);
	};
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	};
	_20b04ba66_formatDecimal(_4924_d, static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)), (!(_8129_d0)), _9913_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_749_q;
}



inline void _20b04b219_ryuFtoaFixed64(_20b038206_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _13113_e2 = _12156_exp;;
	jule::I64 _1329_b = _20aee932c_Len64(_12145_mant);;
	if ((_1329_b < 55LL)) {
		_12145_mant=static_cast<jule::U64>((_12145_mant << static_cast<jule::U64>((55LL - _1329_b))));
		_13113_e2+=(static_cast<jule::I64>(_1329_b) - 55LL);
	};
	jule::I64 _1469_q = (((-(_20b04c308_mulByLog2Log10(static_cast<jule::I64>((_13113_e2 + 54LL))))) + _12166_prec) - 1LL);;
	jule::Bool _15113_exact = ((_1469_q <= 55LL) && (_1469_q >= 0LL));;
	jule::U64 _15314_di = 0;;
	jule::I64 _15318_dexp2 = 0;;
	jule::Bool _15329_d0 = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _20b04e0eb_mult128bitPow10(_12145_mant, _13113_e2, _1469_q);
		_15314_di = __jule_assign_result.__jule_result_arg0;
		_15318_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15329_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1469_q < 0LL) && (_1469_q >= -22LL)) && _20b04e470_divisibleByPow5(_12145_mant, static_cast<jule::I64>((-(_1469_q)))))) {
		_15113_exact=true;
		_15329_d0=true;
	};
	jule::U64 _1669_extra = static_cast<jule::U64>((-(_15318_dexp2)));;
	jule::U64 _1679_extraMask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));;
	jule::U64 _16913_dfrac = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_15314_di >> _1669_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_15314_di & _1679_extraMask));
		_15314_di = ___jule_assign_arg;
		_16913_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _17113_roundUp = false;;
	if (_15113_exact) {
		_17113_roundUp=(((_16913_dfrac > (1LLU << (_1669_extra - 1LLU))) || ((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && (!(_15329_d0)))) || (((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU)));
	} else {
		_17113_roundUp=((_16913_dfrac >> (_1669_extra - 1LLU)) == 1LLU);
	};
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	};
	_20b04ba66_formatDecimal(_12124_d, _15314_di, (!(_15329_d0)), _17113_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1469_q;
}



inline void _20b04ba66_formatDecimal(_20b038206_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2019_max = _20b04b55a_u64pow10[_20088_prec];;
	jule::I64 _20213_trimmed = 0LL;;
	while ((_20044_m >= _2019_max)) {
		{
			jule::U64 _20414_a = 0;;
			jule::U64 _20417_b = 0;;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_20414_a = ___jule_assign_arg;
				_20417_b = _1___jule_assign_arg;
			});
			_20044_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20417_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20417_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_2110b41c2:;
	}
	_iter_end_2110b41c2:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2019_max)) {
		_20044_m/=10LLU;
		(_20213_trimmed)++;
	};
	jule::U64 _22913_n = static_cast<jule::U64>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20088_prec));
	jule::U64 _23113_v = _20044_m;;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;;
			jule::U64 _23417_v2 = 0LLU;;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU)));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL)));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_23113_v / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_23113_v % 100LL));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			};
			_22913_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I64>((_22913_n + 1LLU))]=jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 1LLU))];
			(*(_20023_d))._field_d[static_cast<jule::I64>((_22913_n + 0LLU))]=jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 0LLU))];
			_23113_v=_23317_v1;
		}
	_iter_next_2110b6ba8:;
	}
	_iter_end_2110b6ba8:;;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_22913_n)]=jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23113_v) + 1LLU))];
	};
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_22913_n)]=jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((2LL * _23113_v))];
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_2110bcd8a:;
	}
	_iter_end_2110bcd8a:;;
	(*(_20023_d))._field_dp=static_cast<jule::I64>(((*(_20023_d))._field_nd + _20213_trimmed));
}



inline void _20b04c03e_ryuFtoaShortest(_20b038206_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _20b037557_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_20aee35ac_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U64>((-(_26157_exp)));
		_20b04d11c_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _27310_ml = 0;;
	jule::U64 _27314_mc = 0;;
	jule::U64 _27318_mu = 0;;
	jule::I64 _27326_e2 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _20b04ca01_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_27310_ml = __jule_assign_result.__jule_result_arg0;
		_27314_mc = __jule_assign_result.__jule_result_arg1;
		_27318_mu = __jule_assign_result.__jule_result_arg2;
		_27326_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27326_e2 == 0LL)) {
		_20b04d11c_ryuDigits(_26125_d, _27310_ml, _27314_mc, _27318_mu, true, false);
		return;;
	};
	jule::I64 _2799_q = (_20b04c308_mulByLog2Log10(static_cast<jule::I64>((-(_27326_e2)))) + 1LL);;
	jule::U64 _28313_dl = 0LLU;;
	jule::U64 _28413_dc = 0LLU;;
	jule::U64 _28513_du = 0LLU;;
	jule::Bool _28613_dl0 = false;;
	jule::Bool _28713_dc0 = false;;
	jule::Bool _28813_du0 = false;;
	if (((*(_26168_flt)) == _20b037953_f32info)) {
		jule::U32 _29017_dl32 = 0LLU;;
		jule::U32 _29117_dc32 = 0LLU;;
		jule::U32 _29217_du32 = 0LLU;;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _20b04dbbc_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)), _27326_e2, _2799_q);
			_29017_dl32 = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _20b04dbbc_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)), _27326_e2, _2799_q);
			_29117_dc32 = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _20b04dbbc_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)), _27326_e2, _2799_q);
			_29217_du32 = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32));
			_28313_dl = ___jule_assign_arg;
			_28413_dc = _1___jule_assign_arg;
			_28513_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _20b04e0eb_mult128bitPow10(_27310_ml, _27326_e2, _2799_q);
			_28313_dl = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _20b04e0eb_mult128bitPow10(_27314_mc, _27326_e2, _2799_q);
			_28413_dc = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _20b04e0eb_mult128bitPow10(_27318_mu, _27326_e2, _2799_q);
			_28513_du = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2799_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_28613_dl0 = ___jule_assign_arg;
			_28713_dc0 = _1___jule_assign_arg;
			_28813_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2799_q < 0LL) && (_2799_q >= -24LL))) {
		if (_20b04e470_divisibleByPow5(_27310_ml, static_cast<jule::I64>((-(_2799_q))))) {
			_28613_dl0=true;
		};
		if (_20b04e470_divisibleByPow5(_27314_mc, static_cast<jule::I64>((-(_2799_q))))) {
			_28713_dc0=true;
		};
		if (_20b04e470_divisibleByPow5(_27318_mu, static_cast<jule::I64>((-(_2799_q))))) {
			_28813_du0=true;
		};
	};
	jule::U64 _3259_extra = static_cast<jule::U64>((-(_27326_e2)));;
	jule::U64 _3269_extraMask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));;
	jule::U64 _32813_fracl = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28313_dl >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28313_dl & _3269_extraMask));
		_28313_dl = ___jule_assign_arg;
		_32813_fracl = _1___jule_assign_arg;
	});
	jule::U64 _33013_fracc = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28413_dc >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28413_dc & _3269_extraMask));
		_28413_dc = ___jule_assign_arg;
		_33013_fracc = _1___jule_assign_arg;
	});
	jule::U64 _33213_fracu = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28513_du >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28513_du & _3269_extraMask));
		_28513_du = ___jule_assign_arg;
		_33213_fracu = _1___jule_assign_arg;
	});
	jule::Bool _33813_uok = ((!(_28813_du0)) || (_33213_fracu > 0LLU));;
	if ((_28813_du0 && (_33213_fracu == 0LLU))) {
		_33813_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_33813_uok))) {
		(_28513_du)--;
	};
	jule::Bool _34713_cup = false;;
	if (_28713_dc0) {
		_34713_cup=((_33013_fracc > (1LLU << (_3259_extra - 1LLU))) || ((_33013_fracc == (1LLU << (_3259_extra - 1LLU))) && ((_28413_dc & 1LLU) == 1LLU)));
	} else {
		_34713_cup=((_33013_fracc >> (_3259_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3619_lok = ((_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	};
	jule::Bool _3669_c0 = (_28713_dc0 && (_33013_fracc == 0LLU));;
	_20b04d11c_ryuDigits(_26125_d, _28313_dl, _28413_dc, _28513_du, _3669_c0, _34713_cup);
	(*(_26125_d))._field_dp-=_2799_q;
}



inline jule::I64 _20b04c308_mulByLog2Log10(jule::I64 _37719_x) {
	return static_cast<jule::I64>(((_37719_x * 78913LL) >> 18LL));;
}



inline jule::I64 _20b04c5c2_mulByLog10Log2(jule::I64 _38719_x) {
	return static_cast<jule::I64>(((_38719_x * 108853LL) >> 15LL));;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _20b04ca01_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _20b037557_floatInfo* _3966_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != (1LLU << (*(_3966_flt))._field_mantbits)) || (_39529_exp == (((*(_3966_flt))._field_bias + 1LL) - static_cast<jule::I64>((*(_3966_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((2LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) + 1LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 1LL));
	} else {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((4LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) + 2LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 2LL));
	};
	return __jule_func_result;;
}



inline void _20b04d11c_ryuDigits(_20b038206_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _41014_lhi = 0;;
	jule::U32 _41019_llo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _20b04e739_divmod1e9(_40936_lower);
		_41014_lhi = __jule_assign_result.__jule_result_arg0;
		_41019_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41110_chi = 0;;
	jule::U32 _41115_clo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _20b04e739_divmod1e9(_40948_central);
		_41110_chi = __jule_assign_result.__jule_result_arg0;
		_41115_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41210_uhi = 0;;
	jule::U32 _41215_ulo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _20b04e739_divmod1e9(_40962_upper);
		_41210_uhi = __jule_assign_result.__jule_result_arg0;
		_41215_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_41210_uhi == 0LLU)) {
		_20b04d78d_ryuDigits32(_40919_d, _41019_llo, _41115_clo, _41215_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_41014_lhi < _41210_uhi)) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41115_clo == 0LLU));
		_40992_cup=((_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40992_cup));
		_20b04d78d_ryuDigits32(_40919_d, _41014_lhi, _41110_chi, _41210_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U64 _42817_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42917_v = _41110_chi;;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = 0;;
				jule::U32 _43122_v2 = 0;;
				({
					jule::U32 ___jule_assign_arg = (_42917_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_42917_v % 10LL);
					_43118_v1 = ___jule_assign_arg;
					_43122_v2 = _1___jule_assign_arg;
				});
				_42917_v=_43118_v1;
				(_42817_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I64>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43122_v2 + '0')));
			}
		_iter_next_2110db084:;
		}
		_iter_end_2110db084:;;
		(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(static_cast<jule::I64>(_42817_n));
		(*(_40919_d))._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42817_n)));
		_20b04d78d_ryuDigits32(_40919_d, _41019_llo, _41115_clo, _41215_ulo, _40978_c0, _40992_cup, static_cast<jule::I64>(((*(_40919_d))._field_nd + 8LL)));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_2110ddae2:;
	}
	_iter_end_2110ddae2:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(1LL);
		}
	_iter_next_2110de609:;
	}
	_iter_end_2110de609:;;
}



inline void _20b04d78d_ryuDigits32(_20b038206_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		(*(_45421_d))._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _46013_trimmed = 0LL;;
	jule::I64 _46313_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47118_c = 0;;
			jule::U32 _47125_cdigit = 0;;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_47118_c = ___jule_assign_arg;
				_47125_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _47213_u = (_4559_upper / 10LLU);;
			if ((_47013_l > _47213_u)) {
				goto _iter_end_2110e141e;
			};
			if (((_47013_l == (_47118_c + 1LLU)) && (_47118_c < _47213_u))) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			};
			(_46013_trimmed)++;
			_45525_c0=(_45525_c0 && (_46313_cNextDigit == 0LL));
			_46313_cNextDigit=static_cast<jule::I64>(static_cast<jule::I64>(_47125_cdigit));
			({
				jule::U32 ___jule_assign_arg = _47013_l;
				jule::U32 _1___jule_assign_arg = _47118_c;
				jule::U32 _2___jule_assign_arg = _47213_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4559_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_2110e141e:;
	}
	_iter_end_2110e141e:;;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=(((_46313_cNextDigit > 5LL) || ((_46313_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_46313_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45458_central;;
	jule::I64 _51013_n = _45554_endindex;;
	while ((_51013_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _51214_v1 = 0;;
			jule::U32 _51218_v2 = 0;;
			({
				jule::U32 ___jule_assign_arg = (_50913_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_50913_v % 100LL);
				_51214_v1 = ___jule_assign_arg;
				_51218_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_51013_n]=jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 1LLU))];
			(*(_45421_d))._field_d[(_51013_n - 1LL)]=jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 0LLU))];
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_2110e77cc:;
	}
	_iter_end_2110e77cc:;;
	if ((_51013_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>((_50913_v + '0')));
	};
	(*(_45421_d))._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	(*(_45421_d))._field_dp=static_cast<jule::I64>(((*(_45421_d))._field_nd + _46013_trimmed));
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _20b04dbbc_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_53419_m << 6LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_53431_e2 - 6LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _54313_pow = _20b045565_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_54313_pow+=1LLU;
	};
	jule::U64 _54810_hi = 0;;
	jule::U64 _54814_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _20aeeb8c3_Mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53419_m)), _54313_pow);
		_54810_hi = __jule_assign_result.__jule_result_arg0;
		_54814_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_20b04c5c2_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>(((_54810_hi << 7LLU) | (_54814_lo >> 57LLU))));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((_54814_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _20b04e0eb_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>((_56220_m << 8LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_56232_e2 - 8LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _57113_pow = _20b045565_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_20b04c5c2_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _57910_l1 = 0;;
	jule::U64 _57914_l0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _20aeeb8c3_Mul64(_56220_m, _57113_pow[0LL]);
		_57910_l1 = __jule_assign_result.__jule_result_arg0;
		_57914_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58014_h1 = 0;;
	jule::U64 _58018_h0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _20aeeb8c3_Mul64(_56220_m, _57113_pow[1LL]);
		_58014_h1 = __jule_assign_result.__jule_result_arg0;
		_58018_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58110_mid = 0;;
	jule::U64 _58115_carry = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _20aeea0b9_Add64(_57910_l1, _58018_h0, 0LLU);
		_58110_mid = __jule_assign_result.__jule_result_arg0;
		_58115_carry = __jule_assign_result.__jule_result_arg1;
	});
	_58014_h1+=_58115_carry;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_58014_h1 << 9LLU) | (_58110_mid >> 55LLU)));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _20b04e470_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I64 _59013_i = 0LL;;
	for (; (_59013_i < _58632_k); (_59013_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m/=5LLU;
		}
	_iter_next_211105c6e:;
	}
	_iter_end_211105c6e:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _20b04e739_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL)));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL)));
		return __jule_func_result;;
	};
}



inline void _20b0526a4_trim(_20b050d56_decimal* _27414_a) {
	while ((((*(_27414_a))._field_nd > 0LL) && ((*(_27414_a))._field_d[((*(_27414_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_27414_a))._field_nd)--;
		}
	_iter_next_211109415:;
	}
	_iter_end_211109415:;;
	if (((*(_27414_a))._field_nd == 0LL)) {
		(*(_27414_a))._field_dp=0LL;
	};
}



inline void _20b052990_rightShift(_20b050d56_decimal* _28420_a, jule::U64 _28432_k) {
	jule::I64 _28513_r = 0LL;;
	jule::I64 _28613_w = 0LL;;
	jule::U64 _28913_n = 0LLU;;
	for (; ((_28913_n >> _28432_k) == 0LLU); (_28513_r)++) {
		{
			if ((_28513_r >= (*(_28420_a))._field_nd)) {
				if ((_28913_n == 0LLU)) {
					(*(_28420_a))._field_nd=0LL;
					return;;
				};
				while (((_28913_n >> _28432_k) == 0LLU)) {
					{
						_28913_n=static_cast<jule::U64>((_28913_n * 10LLU));
						(_28513_r)++;
					}
				_iter_next_21110cb88:;
				}
				_iter_end_21110cb88:;;
				goto _iter_end_21110b0d7;
			};
			jule::U64 _30313_c = static_cast<jule::U64>((*(_28420_a))._field_d[_28513_r]);;
			_28913_n=static_cast<jule::U64>((((_28913_n * 10LLU) + _30313_c) - '0'));
		}
	_iter_next_21110b0d7:;
	}
	_iter_end_21110b0d7:;;
	(*(_28420_a))._field_dp-=(_28513_r - 1LL);
	jule::U64 _3089_mask = static_cast<jule::U64>((static_cast<jule::U64>((1LL << _28432_k)) - 1LLU));;
	for (; (_28513_r < (*(_28420_a))._field_nd); (_28513_r)++) {
		{
			jule::U64 _31213_c = static_cast<jule::U64>((*(_28420_a))._field_d[_28513_r]);;
			jule::U64 _31313_dig = (_28913_n >> _28432_k);;
			_28913_n&=_3089_mask;
			(*(_28420_a))._field_d[_28613_w]=static_cast<jule::U8>(static_cast<jule::U8>((_31313_dig + '0')));
			(_28613_w)++;
			_28913_n=static_cast<jule::U64>((((_28913_n * 10LLU) + _31213_c) - '0'));
		}
	_iter_next_21110e63a:;
	}
	_iter_end_21110e63a:;;
	while ((_28913_n > 0LLU)) {
		{
			jule::U64 _32213_dig = (_28913_n >> _28432_k);;
			_28913_n&=_3089_mask;
			if ((_28613_w < 800LL)) {
				(*(_28420_a))._field_d[_28613_w]=static_cast<jule::U8>(static_cast<jule::U8>((_32213_dig + '0')));
				(_28613_w)++;
			} else if ((_32213_dig > 0LLU)) {
				(*(_28420_a))._field_trunc=true;
			};
			_28913_n=static_cast<jule::U64>((_28913_n * 10LLU));
		}
	_iter_next_21110ecde:;
	}
	_iter_end_21110ecde:;;
	(*(_28420_a))._field_nd=_28613_w;
	_20b0526a4_trim(_28420_a);
}



inline jule::Bool _20b052e46_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s) {
	jule::I64 _33913_i = 0LL;;
	for (; (_33913_i < (*(_33846_s)).len()); (_33913_i)++) {
		{
			if ((_33913_i >= _33835_end)) {
				return true;;
			};
			if ((_33821_b[_33913_i] != (*(_33846_s))[_33913_i])) {
				return (_33821_b[_33913_i] < (*(_33846_s))[_33913_i]);;
			};
		}
	_iter_next_211113c5a:;
	}
	_iter_end_211113c5a:;;
	return false;;
}



inline void _20b0531ee_leftShift(_20b050d56_decimal* _35219_a, jule::U64 _35231_k) {
	jule::I64 _35313_delta = _20b05075c_leftCheats[static_cast<jule::I64>(_35231_k)]._field_delta;;
	if (_20b052e46_prefixIsLessThan((*(_35219_a))._field_d, (*(_35219_a))._field_nd, &(_20b05075c_leftCheats[static_cast<jule::I64>(_35231_k)]._field_cutoff))) {
		(_35313_delta)--;
	};
	jule::I64 _35813_r = (*(_35219_a))._field_nd;;
	jule::I64 _35913_w = ((*(_35219_a))._field_nd + _35313_delta);;
	jule::U64 _36213_n = 0LLU;;
	(_35813_r)--;
	for (; (_35813_r >= 0LL); (_35813_r)--) {
		{
			_36213_n+=((static_cast<jule::U64>((*(_35219_a))._field_d[_35813_r]) - '0') << _35231_k);
			jule::U64 _36613_quo = (_36213_n / 10LLU);;
			jule::U64 _36713_rem = (_36213_n - (10LLU * _36613_quo));;
			(_35913_w)--;
			if ((_35913_w < 800LL)) {
				(*(_35219_a))._field_d[_35913_w]=static_cast<jule::U8>(static_cast<jule::U8>((_36713_rem + '0')));
			} else if ((_36713_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_36213_n=_36613_quo;
		}
	_iter_next_21111719d:;
	}
	_iter_end_21111719d:;;
	while ((_36213_n > 0LLU)) {
		{
			jule::U64 _37913_quo = (_36213_n / 10LLU);;
			jule::U64 _38013_rem = (_36213_n - (10LLU * _37913_quo));;
			(_35913_w)--;
			if ((_35913_w < 800LL)) {
				(*(_35219_a))._field_d[_35913_w]=static_cast<jule::U8>(static_cast<jule::U8>((_38013_rem + '0')));
			} else if ((_38013_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_36213_n=_37913_quo;
		}
	_iter_next_211117676:;
	}
	_iter_end_211117676:;;
	(*(_35219_a))._field_nd+=_35313_delta;
	if (((*(_35219_a))._field_nd >= 800LL)) {
		(*(_35219_a))._field_nd=800LL;
	};
	(*(_35219_a))._field_dp+=_35313_delta;
	_20b0526a4_trim(_35219_a);
}



inline jule::Bool _20b053573_shouldRoundUp(_20b050d56_decimal* _39919_a, jule::I64 _39931_nd) {
	if (((_39931_nd < 0LL) || (_39931_nd >= (*(_39919_a))._field_nd))) {
		return false;;
	};
	if ((((*(_39919_a))._field_d[_39931_nd] == '5') && ((_39931_nd + 1LL) == (*(_39919_a))._field_nd))) {
		if ((*(_39919_a))._field_trunc) {
			return true;;
		};
		return ((_39931_nd > 0LL) && ((((*(_39919_a))._field_d[(_39931_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_39919_a))._field_d[_39931_nd] >= '5');;
}



inline jule::Str _20b054c06_FmtUint(jule::U64 _6012_i, jule::I64 _6020_base) {
	if (((true && (_6012_i < 100LLU)) && (_6020_base == 10LL))) {
		return _20b0556c9_small(static_cast<jule::I64>(static_cast<jule::I64>(_6012_i)));;
	};
	jule::Str _6413_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _20b056037_fmtBits(nullptr, _6012_i, _6020_base, false, false);
		_6413_s = __jule_assign_result.__jule_result_arg1;
	});
	return _6413_s;;
}



inline jule::Str _20b0550be_FmtInt(jule::I64 _7111_i, jule::I64 _7119_base) {
	if ((((true && (0LL <= _7111_i)) && (_7111_i < 100LL)) && (_7119_base == 10LL))) {
		return _20b0556c9_small(static_cast<jule::I64>(static_cast<jule::I64>(_7111_i)));;
	};
	jule::Str _7513_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _20b056037_fmtBits(nullptr, static_cast<jule::U64>(static_cast<jule::U64>(_7111_i)), _7119_base, (_7111_i < 0LL), false);
		_7513_s = __jule_assign_result.__jule_result_arg1;
	});
	return _7513_s;;
}



inline jule::Str _20b055388_Itoa(jule::I64 _809_i) {
	return _20b0550be_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_809_i)), 10LL);;
}



inline jule::Str _20b0556c9_small(jule::I64 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i, (_8510_i + 1LL));;
	};
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU), ((_8510_i << 1LLU) + 2LL));;
}



inline jule::Bool _20b055993_isPowerOfTwo(jule::I64 _9217_x) {
	return ((_9217_x & (_9217_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _20b056037_fmtBits(jule::Slice<jule::U8> _10116_dst, jule::U64 _10133_u, jule::I64 _10141_base, jule::Bool _10152_neg, jule::Bool _10163_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10141_base < 2LL) || (_10141_base > 36LL))) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL, 65LL, 0);;
	jule::I64 _10813_i = _10713_a.len();;
	if (_10152_neg) {
		_10133_u=static_cast<jule::U64>((-(_10133_u)));
	};
	if ((_10141_base == 10LL)) {
		;
		jule::U64 _14917_us = static_cast<jule::U64>(_10133_u);;
		while ((_14917_us >= 100LLU)) {
			{
				jule::U64 _15117_is = ((_14917_us % 100LL) << 1LLU);;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 1LLU))];
				_10713_a[(_10813_i + 0LL)]=jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 0LLU))];
			}
		_iter_next_211156880:;
		}
		_iter_end_211156880:;;
		jule::U64 _15913_is = (_14917_us << 1LLU);;
		(_10813_i)--;
		_10713_a[_10813_i]=jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15913_is + 1LLU))];
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_15913_is)];
		};
	} else if (_20b055993_isPowerOfTwo(_10141_base)) {
		jule::U64 _17413_shift = (static_cast<jule::U64>(_20aee2886_TrailingZeros(static_cast<jule::U64>(static_cast<jule::U64>(_10141_base)))) & 7LLU);;
		jule::U64 _17513_b = static_cast<jule::U64>(_10141_base);;
		jule::U64 _17613_m = (static_cast<jule::U64>(_10141_base) - 1LLU);;
		while ((_10133_u >= _17513_b)) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>((static_cast<jule::U64>(_10133_u) & _17613_m))];
				_10133_u>>=_17413_shift;
			}
		_iter_next_21115ea42:;
		}
		_iter_end_21115ea42:;;
		(_10813_i)--;
		_10713_a[_10813_i]=jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))];
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10141_base);;
		while ((_10133_u >= _18713_b)) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10133_u,_18713_b);;
				_10713_a[_10813_i]=jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>((_10133_u - (_19317_q * _18713_b))))];
				_10133_u=_19317_q;
			}
		_iter_next_2111602b2:;
		}
		_iter_end_2111602b2:;;
		(_10813_i)--;
		_10713_a[_10813_i]=jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))];
	};
	if (_10152_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	};
	if (_10163_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10116_dst,_10713_a.slice(_10813_i));
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return __jule_func_result;;
}



inline jule::Str _20b057434_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_211178e46:;
			{
				return _20b05692d_SysInt;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_211178eac:;
			{
				return _20b056be7_SysUint;;
			}
		}
		else {
			_case_begin_211178907:;
			{
				return _4515_kind;;
			}
		}
		_match_end_211176130:;
	};
}



inline jule::I64 _20b0576ed_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_21117a0ac:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_21117a1de:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_21117a255:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_21117a2bb:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_21117a332:;
			{
				return _20b056642_BitSize;;
			}
		}
		else {
			_case_begin_211179bc2:;
			{
				return -1LL;;
			}
		}
		_match_end_211179b5b:;
	};
}



inline jule::Str _20b057a3e_IntFromBits(jule::I64 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_21117bc6d:;
			{
				return jule::Str("i8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_21117c675:;
			{
				return jule::Str("i16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_21117c6db:;
			{
				return jule::Str("i32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_21117c752:;
			{
				return jule::Str("i64", 3);;
			}
		}
		else {
			_case_begin_21117c213:;
			{
				return jule::Str();;
			}
		}
		_match_end_21117c19c:;
	};
}



inline jule::Str _20b057d08_UintFromBits(jule::I64 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_21117ca0a:;
			{
				return jule::Str("u8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_21117d8eb:;
			{
				return jule::Str("u16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_21117d962:;
			{
				return jule::Str("u32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_21117d9c8:;
			{
				return jule::Str("u64", 3);;
			}
		}
		else {
			_case_begin_21117d39b:;
			{
				return jule::Str();;
			}
		}
		_match_end_21117d335:;
	};
}



inline jule::Str _20b0580c2_FloatFromBits(jule::I64 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_21117dc92:;
			{
				return jule::Str("f32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_21117eb83:;
			{
				return jule::Str("f64", 3);;
			}
		}
		else {
			_case_begin_21117e633:;
			{
				return jule::Str();;
			}
		}
		_match_end_21117e5bc:;
	};
}



inline jule::Bool _20b058c1b_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit) {
	({
		auto except = _20b04a46b_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I64 _20b058ed5_BitsizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_211184a45:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_21118445c:;
			{
				return 64LLU;;
			}
		}
		_match_end_21118304e:;
	};
}



inline jule::I64 _20b05929e_BitsizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_2111857d2:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_21118588c:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_211185903:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_211184d20:;
			{
				return 64LLU;;
			}
		}
		_match_end_211185392:;
	};
}



inline jule::I64 _20b059568_BitsizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_21118733e:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_2111873e9:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_211187460:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_211186d00:;
			{
				return 64LLU;;
			}
		}
		_match_end_2111868e3:;
	};
}



inline void _20b0596de_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _2273c4158_Arch };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_2111882a7:;
				{
					_20b056642_BitSize=64LLU;
					_20b05692d_SysInt=jule::Str("i64", 3);
					_20b056be7_SysUint=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_211188340:;
				{
					_20b056642_BitSize=32LLU;
					_20b05692d_SysInt=jule::Str("i32", 3);
					_20b056be7_SysUint=jule::Str("u32", 3);
				}
			}
			_match_end_211188230:;
		};
	};
}



inline void _20b059865_init(void) {
	_20b0596de_UpdateTarget();
}



inline jule::I64 _20b05d627_MinI(jule::Str _6113_k) {
	_6113_k=_20b057434_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_2111875d6:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_21118a496:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_21118a50c:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_21118a573:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_211187718:;
			{
				return 0LL;;
			}
		}
		_match_end_2111876b3:;
	};
}



inline jule::I64 _20b05d935_MaxI(jule::Str _7913_k) {
	_7913_k=_20b057434_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_21118a81a:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_21118baa2:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_21118bb18:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_21118bb7e:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_21118b233:;
			{
				return 0LL;;
			}
		}
		_match_end_21118b93c:;
	};
}



inline jule::U64 _20b05dbee_MaxU(jule::Str _9713_k) {
	_9713_k=_20b057434_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_21118be26:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_21118d1ad:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_21118d224:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_21118d28a:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_21118c83e:;
			{
				return 0LLU;;
			}
		}
		_match_end_21118d048:;
	};
}



inline jule::F64 _20b05de30_Min(jule::Str _11512_k) {
	_11512_k=_20b057434_RealKindOf(_11512_k);
	jule::I64 _1179_i = _20b05d627_MinI(_11512_k);;
	if ((_1179_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1179_i));;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_211190864:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_21119029d:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_21118ec2b:;
			{
				return 0LL;;
			}
		}
		_match_end_21118eee5:;
	};
}



inline jule::F64 _20b05e1e9_Max(jule::Str _13312_k) {
	_13312_k=_20b057434_RealKindOf(_13312_k);
	jule::I64 _1359_i = _20b05d935_MaxI(_13312_k);;
	if ((_1359_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1359_i));;
	};
	jule::U64 _1399_u = _20b05dbee_MaxU(_13312_k);;
	if ((_1399_u != 0LLU)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1399_u));;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_211192bc9:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_211192613:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_21119204c:;
			{
				return 0LL;;
			}
		}
		_match_end_21119235a:;
	};
}



inline jule::Bool _20b05e66c_IsI8Compatible(jule::Str _623_k) {
	return _623_k.equal("i8", 2);;
}



inline jule::Bool _20b05e97a_IsI16Compatible(jule::Str _1124_k) {
	return (_1124_k.equal("i8", 2) || _1124_k.equal("i16", 3));;
}



inline jule::Bool _20b05ec44_IsI32Compatible(jule::Str _1724_k) {
	return (((_1724_k.equal("i8", 2) || _1724_k.equal("i16", 3)) || _1724_k.equal("i32", 3)) || _1724_k.equal("u8", 2));;
}



inline jule::Bool _20b060085_IsI64Compatible(jule::Str _2524_k) {
	return (((_2524_k.equal("i8", 2) || _2524_k.equal("i16", 3)) || _2524_k.equal("i32", 3)) || _2524_k.equal("i64", 3));;
}



inline jule::Bool _20b06034e_IsU8Compatible(jule::Str _3323_k) {
	return _3323_k.equal("u8", 2);;
}



inline jule::Bool _20b060618_IsU16Compatible(jule::Str _3824_k) {
	return (_3824_k.equal("u8", 2) || _3824_k.equal("u16", 3));;
}



inline jule::Bool _20b0608d2_IsU32Compatible(jule::Str _4324_k) {
	return ((_4324_k.equal("u8", 2) || _4324_k.equal("u16", 3)) || _4324_k.equal("u32", 3));;
}



inline jule::Bool _20b060c78_IsU64Compatible(jule::Str _5024_k) {
	return (((_5024_k.equal("u8", 2) || _5024_k.equal("u16", 3)) || _5024_k.equal("u32", 3)) || _5024_k.equal("u64", 3));;
}



inline jule::Bool _20b061042_IsF32Compatible(jule::Str _5824_k) {
	return _5824_k.equal("f32", 3);;
}



inline jule::Bool _20b06130b_IsF64Compatible(jule::Str _6324_k) {
	return _6324_k.equal("f64", 3);;
}



inline jule::Bool _20b061680_TypesAreCompatible(jule::Str _7027_k1, jule::Str _7036_k2) {
	{
		auto &_match_expr{ _7027_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_2111981eb:;
			{
				return true;;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_211198509:;
			{
				return _7036_k2.equal("int", 3);;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_21119877e:;
			{
				return _7036_k2.equal("uintptr", 7);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_2111987e5:;
			{
				return _7036_k2.equal("uint", 4);;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_21119885b:;
			{
				return _20b05e66c_IsI8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_2111988c2:;
			{
				return _20b05e97a_IsI16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_2111989d2:;
			{
				return _20b05ec44_IsI32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_211198a48:;
			{
				return _20b060085_IsI64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_211198aae:;
			{
				return _20b06034e_IsU8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_211198b25:;
			{
				return _20b060618_IsU16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_211198b9c:;
			{
				return _20b0608d2_IsU32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_211198c24:;
			{
				return _20b060c78_IsU64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_211198c9b:;
			{
				return _20b061042_IsF32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_211198d23:;
			{
				return _20b06130b_IsF64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_211198d9a:;
			{
				return _7036_k2.equal("bool", 4);;
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_211198e22:;
			{
				return _7036_k2.equal("str", 3);;
			}
		}
		else {
			_case_begin_211198361:;
			{
				return false;;
			}
		}
		_match_end_211193092:;
	};
}



inline jule::Bool _20b061949_IsI16Greater(jule::Str _11021_k) {
	return _11021_k.equal("i8", 2);;
}



inline jule::Bool _20b061c13_IsI32Greater(jule::Str _11521_k) {
	return (_11521_k.equal("i8", 2) || _11521_k.equal("i16", 3));;
}



inline jule::Bool _20b061ecc_IsI64Greater(jule::Str _12021_k) {
	return ((_12021_k.equal("i8", 2) || _12021_k.equal("i16", 3)) || _12021_k.equal("i32", 3));;
}



inline jule::Bool _20b062296_IsU16Greater(jule::Str _12721_k) {
	return _12721_k.equal("u8", 2);;
}



inline jule::Bool _20b062719_IsU32Greater(jule::Str _13221_k) {
	return (_13221_k.equal("u8", 2) || _13221_k.equal("u16", 3));;
}



inline jule::Bool _20b0629d3_IsU64Greater(jule::Str _13821_k) {
	return ((_13821_k.equal("u8", 2) || _13821_k.equal("u16", 3)) || _13821_k.equal("u32", 3));;
}



inline jule::Bool _20b062c9c_IsF32Greater(jule::Str _14517_k) {
	return (!_14517_k.equal("f64", 3));;
}



inline jule::Bool _20b063066_IsF64Greater(jule::Str _15017_k) {
	return true;;
}



inline jule::Bool _20b0633da_IsGreater(jule::Str _15518_k1, jule::Str _15527_k2) {
	{
		auto &_match_expr{ _15518_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_2111a0ed4:;
			{
				return _20b064441_IsSigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_2111a1347:;
			{
				return _20b06474e_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_2111a13be:;
			{
				return _20b06474e_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_2111a1622:;
			{
				return _20b061949_IsI16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_2111a1699:;
			{
				return _20b061c13_IsI32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_2111a1721:;
			{
				return _20b061ecc_IsI64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_2111a1798:;
			{
				return _20b062296_IsU16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_2111a1875:;
			{
				return _20b062719_IsU32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_2111a18ec:;
			{
				return _20b0629d3_IsU64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_2111a1974:;
			{
				return _20b062c9c_IsF32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_2111a19eb:;
			{
				return _20b063066_IsF64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_2111a1a73:;
			{
				return true;;
			}
		}
		else {
			_case_begin_2111a11d2:;
			{
				return false;;
			}
		}
		_match_end_2111a115a:;
	};
}



inline jule::Bool _20b064441_IsSigInt(jule::Str _2717_k) {
	return ((((_2717_k.equal("i8", 2) || _2717_k.equal("i16", 3)) || _2717_k.equal("i32", 3)) || _2717_k.equal("i64", 3)) || _2717_k.equal("int", 3));;
}



inline jule::Bool _20b06474e_IsUnsigInt(jule::Str _3619_k) {
	return (((((_3619_k.equal("u8", 2) || _3619_k.equal("u16", 3)) || _3619_k.equal("u32", 3)) || _3619_k.equal("u64", 3)) || _3619_k.equal("uint", 4)) || _3619_k.equal("uintptr", 7));;
}



inline jule::Bool _20b064a18_IsInt(jule::Str _4610_k) {
	return (_20b064441_IsSigInt(_4610_k) || _20b06474e_IsUnsigInt(_4610_k));;
}



inline jule::Bool _20b064d59_IsFloat(jule::Str _5112_k) {
	return (_5112_k.equal("f32", 3) || _5112_k.equal("f64", 3));;
}



inline jule::Bool _20b065123_IsNum(jule::Str _5610_k) {
	return (_20b064a18_IsInt(_5610_k) || _20b064d59_IsFloat(_5610_k));;
}



inline jule::Bool _20b0653dc_IsSigNum(jule::Str _6113_k) {
	return (_20b064441_IsSigInt(_6113_k) || _20b064d59_IsFloat(_6113_k));;
}



inline void _20b06e616_lshiftUnsig(_20b0655eb_Const* _59021_c, _20b0655eb_Const* _59032_x) {
	jule::U64 _5919_l = _20b068027_AsU64(_59021_c);;
	jule::U64 _5929_r = _20b068027_AsU64(_59032_x);;
	_20b06881e_SetU64(_59021_c, static_cast<jule::U64>((_5919_l << _5929_r)));
}



inline void _20b06e946_rshiftUnsig(_20b0655eb_Const* _59621_c, _20b0655eb_Const* _59632_x) {
	jule::U64 _5979_l = _20b068027_AsU64(_59621_c);;
	jule::U64 _5989_r = _20b068027_AsU64(_59632_x);;
	_20b06881e_SetU64(_59621_c, static_cast<jule::U64>((_5979_l >> _5989_r)));
}



inline jule::Bool _20d351808_IsUnaryOp(jule::U64 _33414_id) {
	{
		auto expr = &(_20d2a563b_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211258960:;
		if (it != expr_end) {
			jule::U64 *_33512_op = it;
			{
				if ((_33414_id == (*(_33512_op)))) {
					return true;;
				};
			}
			_iter_next_211258960:;
			++it;
			goto _iter_begin_211258960;
		}
		_iter_end_211258960:;
	};
	return false;;
}



inline jule::Bool _20d351b16_IsBinOp(jule::U64 _34412_id) {
	{
		auto expr = &(_20d349e83_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211258cc3:;
		if (it != expr_end) {
			jule::U64 *_34512_op = it;
			{
				if ((_34412_id == (*(_34512_op)))) {
					return true;;
				};
			}
			_iter_next_211258cc3:;
			++it;
			goto _iter_begin_211258cc3;
		}
		_iter_end_211258cc3:;
	};
	return false;;
}



inline jule::Bool _20d352221_IsStr(jule::Str _36410_k) {
	return ((!(_36410_k.empty())) && ((_36410_k[0LL] == '\"') || _20d3524da_IsRawStr(_36410_k)));;
}



inline jule::Bool _20d3524da_IsRawStr(jule::Str _36713_k) {
	return ((!(_36713_k.empty())) && (_36713_k[0LL] == '`'));;
}



inline jule::Bool _20d3527a4_IsRune(jule::Str _37111_k) {
	return ((!(_37111_k.empty())) && (_37111_k[0LL] == '\''));;
}



inline jule::Bool _20d3531cd_IsFloat(jule::Str _38012_k) {
	if (_2248aa0ae_HasPrefix(_38012_k, jule::Str("0x", 2))) {
		return _2248b0d2e_ContainsAny(_38012_k, jule::Str(".pP", 3));;
	};
	return _2248b0d2e_ContainsAny(_38012_k, jule::Str(".eE", 3));;
}



inline jule::Bool _20d353497_IsNum(jule::Str _38810_k) {
	if (_38810_k.empty()) {
		return false;;
	};
	jule::U8 _3939_b = _38810_k[0LL];;
	return ((_3939_b == '.') || (('0' <= _3939_b) && (_3939_b <= '9')));;
}



inline jule::Bool _20d353a2a_IsIgnoreIdent(jule::Str _40318_ident) {
	return _40318_ident.equal("_", 1);;
}



inline jule::Bool _20d353ce4_IsAnonIdent(jule::Str _40616_ident) {
	return _40616_ident.equal("<anonymous>", 11);;
}



inline jule::Bool _20d354377_IsSpace(jule::I32 _41912_r) {
	{
		auto expr = &(_20d2a533e_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2112613a2:;
		if (it != expr_end) {
			jule::I32 *_42012_cr = it;
			{
				if ((_41912_r == (*(_42012_cr)))) {
					return true;;
				};
			}
			_iter_next_2112613a2:;
			++it;
			goto _iter_begin_2112613a2;
		}
		_iter_end_2112613a2:;
	};
	return false;;
}



inline jule::Bool _20d3547ea_IsLetter(jule::I32 _42913_r) {
	return _2248029da_IsLetter(_42913_r);;
}



inline jule::Bool _20d354d7d_IsDecimal(jule::U8 _44914_b) {
	return (('0' <= _44914_b) && (_44914_b <= '9'));;
}



inline jule::Bool _20d355147_IsBinary(jule::U8 _45213_b) {
	return ((_45213_b == '0') || (_45213_b == '1'));;
}



inline jule::Bool _20d355411_IsOctal(jule::U8 _45512_b) {
	return (('0' <= _45512_b) && (_45512_b <= '7'));;
}



inline jule::Bool _20d3556ca_IsHex(jule::U8 _45810_b) {
	{
		
		if ((('0' <= _45810_b) && (_45810_b <= '9'))) {
			_case_begin_2112650cb:;
			{
				return true;;
			}
		}
		else if ((('a' <= _45810_b) && (_45810_b <= 'f'))) {
			_case_begin_211265153:;
			{
				return true;;
			}
		}
		else if ((('A' <= _45810_b) && (_45810_b <= 'F'))) {
			_case_begin_2112651ca:;
			{
				return true;;
			}
		}
		else {
			_case_begin_211265010:;
			{
				return false;;
			}
		}
		_match_end_211263e65:;
	};
}



inline jule::Bool _20d355994_IsAssign(jule::U64 _47313_id) {
	return (((((((_47313_id == static_cast<jule::U64>(1LLU)) || (_47313_id == static_cast<jule::U64>(27LLU))) || (_47313_id == static_cast<jule::U64>(30LLU))) || (_47313_id == static_cast<jule::U64>(32LLU))) || (_47313_id == static_cast<jule::U64>(24LLU))) || (_47313_id == static_cast<jule::U64>(74LLU))) || (_47313_id == static_cast<jule::U64>(62LLU)));;
}



inline jule::Bool _20d355c5d_IsPostfixOp(jule::U64 _48416_id) {
	{
		auto expr = &(_20d34a57c_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2112669d4:;
		if (it != expr_end) {
			jule::U64 *_48512_op = it;
			{
				if ((_48416_id == (*(_48512_op)))) {
					return true;;
				};
			}
			_iter_next_2112669d4:;
			++it;
			goto _iter_begin_2112669d4;
		}
		_iter_end_2112669d4:;
	};
	return false;;
}



inline jule::Bool _20d356027_IsAssignOp(jule::U64 _49415_id) {
	if (_20d355c5d_IsPostfixOp(_49415_id)) {
		return true;;
	};
	{
		auto expr = &(_20d34a879_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2112689d6:;
		if (it != expr_end) {
			jule::U64 *_49812_op = it;
			{
				if ((_49415_id == (*(_49812_op)))) {
					return true;;
				};
			}
			_iter_next_2112689d6:;
			++it;
			goto _iter_begin_2112689d6;
		}
		_iter_end_2112689d6:;
	};
	return false;;
}



inline jule::Ptr<_20d356885_File> _20d357c2c_NewFileSet(jule::Str _5715_path) {
	return jule::new_ptr<_20d356885_File>(_20d356885_File{._field_Path=_5715_path, });;
}



inline _22730be5e_Log _20d359778_makeErr(jule::I64 _10012_row, jule::I64 _10022_col, jule::Ptr<_20d356885_File>* _10033_f, jule::Str _10043_fmt, jule::Slice<jule::Any> _10056_args) {
	return _22730be5e_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_10012_row, ._field_Column=_10022_col, ._field_Path=(*((*(_10033_f))))._field_Path, ._field_Text=_22730c3c1_Logf(_10043_fmt, _10056_args), };;
}



inline jule::Bool _20d359b41_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix) {
	if (((*(_11020_bytes)).len() < _11035_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_11035_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211273925:;
		if (it != expr_end) {
			jule::I64 _1149_i = it - expr->begin();
			{
				if (((*(_11020_bytes))[_1149_i] != _11035_prefix[_1149_i])) {
					return false;;
				};
			}
			_iter_next_211273925:;
			++it;
			_1149_i++;
			goto _iter_begin_211273925;
		}
		_iter_end_211273925:;
	};
	return true;;
}



inline jule::Str _20d359eb5_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I64 _12232_i) {
	jule::Str __jule_func_result;
	(_12232_i)++;
	if ((_12232_i >= (*(_12215_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _12813_b = (*(_12215_txt))[_12232_i];;
	if ((_12813_b == '_')) {
		return __jule_func_result;;
	};
	if (((_12813_b == '+') || (_12813_b == '-'))) {
		(_12232_i)++;
		if ((_12232_i >= (*(_12215_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_12215_txt))[_12232_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I64 _1429_first = _12232_i;;
	for (; (_12232_i < (*(_12215_txt)).len()); (_12232_i)++) {
		{
			_12813_b=(*(_12215_txt))[_12232_i];
			if (((_12813_b != '_') && (!(_20d354d7d_IsDecimal(_12813_b))))) {
				goto _iter_end_21127598d;
			};
		}
	_iter_next_21127598d:;
	}
	_iter_end_21127598d:;;
	if ((_12232_i == _1429_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_12215_txt)).slice(0LL, _12232_i));
	return __jule_func_result;;
}



inline jule::Str _20d35a37d_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I64 _15628_i) {
	return _20d359eb5_floatFmtE(_15615_txt, _15628_i);;
}



inline jule::Str _20d35a702_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I64 _16036_i) {
	if (((*(_16019_txt))[_16036_i] != '.')) {
		return jule::Str();;
	};
	(_16036_i)++;
	_julec_label_21127874e:;
	for (; (_16036_i < (*(_16019_txt)).len()); (_16036_i)++) {
		{
			jule::U8 _16813_b = (*(_16019_txt))[_16036_i];;
			{
				
				if ((_16813_b == '_') || _20d354d7d_IsDecimal(_16813_b)) {
					_case_begin_211279310:;
					{
						goto _iter_next_211278694;
					}
				}
				else if (_20d35c10a_isFloatFmtP(_16813_b, _16036_i)) {
					_case_begin_211279387:;
					{
						return _20d35a37d_floatFmtP(_16019_txt, _16036_i);;
					}
				}
				else {
					_case_begin_211279244:;
					{
						goto _iter_end_211278694;
					}
				}
				_match_end_2112791de:;
			};
		}
	_iter_next_211278694:;
	}
	_iter_end_211278694:;;
	return jule::Str();;
}



inline jule::Str _20d35aa76_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I64 _18136_i) {
	_18136_i+=2LL;
	return _20d359eb5_floatFmtE(_18119_txt, _18136_i);;
}



inline jule::Str _20d35adea_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I64 _18635_i) {
	(_18635_i)++;
	return _20d359eb5_floatFmtE(_18618_txt, _18635_i);;
}



inline jule::Str _20d35b37e_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I64 _19131_i) {
	jule::Str __jule_func_result;
	(_19131_i)++;
	if ((_19131_i >= (*(_19114_txt)).len())) {
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)));
		return __jule_func_result;;
	};
	if (((*(_19114_txt))[_19131_i] == '_')) {
		(_19131_i)--;
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
		return __jule_func_result;;
	};
	for (; (_19131_i < (*(_19114_txt)).len()); (_19131_i)++) {
		{
			jule::U8 _20113_b = (*(_19114_txt))[_19131_i];;
			if (((_19131_i > 1LL) && ((_20113_b == 'e') || (_20113_b == 'E')))) {
				__jule_func_result = _20d359eb5_floatFmtE(_19114_txt, _19131_i);
				return __jule_func_result;;
			};
			if (((_20113_b != '_') && (!(_20d354d7d_IsDecimal(_20113_b))))) {
				goto _iter_end_21127c258;
			};
		}
	_iter_next_21127c258:;
	}
	_iter_end_21127c258:;;
	if ((_19131_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
	return __jule_func_result;;
}



inline jule::Str _20d35b648_commonNum(jule::Slice<jule::U8>* _21615_txt) {
	jule::Str __jule_func_result;
	jule::I64 _21713_i = 0LL;;
	_julec_label_21127dcd7:;
	for (; (_21713_i < (*(_21615_txt)).len()); (_21713_i)++) {
		{
			jule::U8 _22013_b = (*(_21615_txt))[_21713_i];;
			{
				
				if ((_22013_b == '.')) {
					_case_begin_21128015c:;
					{
						__jule_func_result = _20d35b37e_floatNum(_21615_txt, _21713_i);
						return __jule_func_result;;
					}
				}
				else if ((_22013_b == '_')) {
					_case_begin_2112801d4:;
					{
						goto _iter_next_21127e579;
					}
				}
				else if (_20d35bc86_isFloatFmtE(_22013_b, _21713_i)) {
					_case_begin_21128025b:;
					{
						__jule_func_result = _20d359eb5_floatFmtE(_21615_txt, _21713_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_20d354d7d_IsDecimal(_22013_b)))) {
					_case_begin_2112802d3:;
					{
						goto _iter_end_21127e579;
					}
				}
				_match_end_211280091:;
			};
		}
	_iter_next_21127e579:;
	}
	_iter_end_21127e579:;;
	if ((_21713_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_21615_txt)).slice(0LL, _21713_i));
	return __jule_func_result;;
}



inline jule::Str _20d35b912_binaryNum(jule::Slice<jule::U8>* _23915_txt) {
	jule::Str __jule_func_result;
	if ((!(_20d359b41_bytesHasPrefix(_23915_txt, jule::Str("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_23915_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _24813_i = 2LL;;
	for (; (_24813_i < (*(_23915_txt)).len()); (_24813_i)++) {
		{
			if ((((*(_23915_txt))[_24813_i] != '_') && (!(_20d355147_IsBinary((*(_23915_txt))[_24813_i]))))) {
				goto _iter_end_211283171;
			};
		}
	_iter_next_211283171:;
	}
	_iter_end_211283171:;;
	if ((_24813_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_23915_txt)).slice(0LL, _24813_i));
	return __jule_func_result;;
}



inline jule::Bool _20d35bc86_isFloatFmtE(jule::U8 _26116_b, jule::I64 _26125_i) {
	return ((_26125_i > 0LL) && ((_26116_b == 'e') || (_26116_b == 'E')));;
}



inline jule::Bool _20d35c10a_isFloatFmtP(jule::U8 _26516_b, jule::I64 _26525_i) {
	return ((_26525_i > 0LL) && ((_26516_b == 'p') || (_26516_b == 'P')));;
}



inline jule::Bool _20d35c47e_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I64 _26938_i) {
	if (((*(_26921_txt))[_26938_i] != '.')) {
		return false;;
	};
	(_26938_i)++;
	_julec_label_211285ccd:;
	for (; (_26938_i < (*(_26921_txt)).len()); (_26938_i)++) {
		{
			jule::U8 _27613_b = (*(_26921_txt))[_26938_i];;
			{
				
				if ((_27613_b == '_') || _20d354d7d_IsDecimal(_27613_b)) {
					_case_begin_211286b8b:;
					{
						goto _iter_next_211285e10;
					}
				}
				else if (_20d35c10a_isFloatFmtP(_27613_b, _26938_i)) {
					_case_begin_211286c13:;
					{
						return true;;
					}
				}
				else {
					_case_begin_211286ac0:;
					{
						goto _iter_end_211285e10;
					}
				}
				_match_end_211286a6a:;
			};
		}
	_iter_next_211285e10:;
	}
	_iter_end_211285e10:;;
	return false;;
}



inline jule::Bool _20d35c803_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I64 _29033_i) {
	{
		
		if (((*(_29020_txt)).len() < 3LL)) {
			_case_begin_211287ebc:;
			{
				goto _case_begin_211288044;
			}
		}
		else if (((*(_29020_txt))[_29033_i] != '.')) {
			_case_begin_211288044:;
			{
				goto _case_begin_2112880bb;
			}
		}
		else if ((((*(_29020_txt))[(_29033_i + 1LL)] != 'p') && ((*(_29020_txt))[(_29033_i + 1LL)] != 'P'))) {
			_case_begin_2112880bb:;
			{
				return false;;
			}
		}
		else {
			_case_begin_211287de0:;
			{
				return true;;
			}
		}
		_match_end_211287d24:;
	};
}



inline jule::Bool _20d35cb77_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I64 _30334_i) {
	{
		
		if (((*(_30321_txt)).len() < 4LL)) {
			_case_begin_211289c38:;
			{
				goto _case_begin_211289cb0;
			}
		}
		else if (((*(_30321_txt))[_30334_i] != '.')) {
			_case_begin_211289cb0:;
			{
				goto _case_begin_211289d37;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 1LL)] != 'f') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'F'))) {
			_case_begin_211289d37:;
			{
				goto _case_begin_21128ede7;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 2LL)] != 'p') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'P'))) {
			_case_begin_21128ede7:;
			{
				return false;;
			}
		}
		else {
			_case_begin_21128982b:;
			{
				return true;;
			}
		}
		_match_end_211289760:;
	};
}



inline jule::Str _20d363045_octalNum(jule::Slice<jule::U8>* _31814_txt) {
	jule::Str __jule_func_result;
	if (((*(_31814_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31814_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I64 _32613_octalStart = 1LL;;
	jule::Bool _32813_o = false;;
	if (((*(_31814_txt))[1LL] == 'o')) {
		if (((*(_31814_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_32613_octalStart)++;
		_32813_o=true;
	};
	jule::I64 _33713_i = _32613_octalStart;;
	for (; (_33713_i < (*(_31814_txt)).len()); (_33713_i)++) {
		{
			jule::U8 _33913_b = (*(_31814_txt))[_33713_i];;
			if ((_33913_b == '.')) {
				if (_32813_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _20d35b37e_floatNum(_31814_txt, _33713_i);
				return __jule_func_result;;
			};
			if (_20d35bc86_isFloatFmtE(_33913_b, _33713_i)) {
				__jule_func_result = _20d359eb5_floatFmtE(_31814_txt, _33713_i);
				return __jule_func_result;;
			};
			if (((_33913_b != '_') && (!(_20d355411_IsOctal(_33913_b))))) {
				goto _iter_end_211293cdb;
			};
		}
	_iter_next_211293cdb:;
	}
	_iter_end_211293cdb:;;
	if ((_33713_i == _32613_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_31814_txt)).slice(0LL, _33713_i));
	return __jule_func_result;;
}



inline jule::Str _20d363221_hexNum(jule::Slice<jule::U8>* _36012_txt) {
	jule::Str __jule_func_result;
	if (((*(_36012_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_36012_txt))[0LL] != '0') || (((*(_36012_txt))[1LL] != 'x') && ((*(_36012_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I64 _36913_i = 2LL;;
	_julec_label_211297c02:;
	for (; (_36913_i < (*(_36012_txt)).len()); (_36913_i)++) {
		{
			jule::U8 _37213_b = (*(_36012_txt))[_36913_i];;
			{
				
				if (_20d35c803_isFloatFmtDotp(_36012_txt, _36913_i)) {
					_case_begin_211298928:;
					{
						__jule_func_result = _20d35adea_floatFmtDotp(_36012_txt, _36913_i);
						return __jule_func_result;;
					}
				}
				else if (_20d35cb77_isFloatFmtDotfp(_36012_txt, _36913_i)) {
					_case_begin_2112989a0:;
					{
						__jule_func_result = _20d35aa76_floatFmtDotfp(_36012_txt, _36913_i);
						return __jule_func_result;;
					}
				}
				else if (_20d35c10a_isFloatFmtP(_37213_b, _36913_i)) {
					_case_begin_211298a27:;
					{
						__jule_func_result = _20d35a37d_floatFmtP(_36012_txt, _36913_i);
						return __jule_func_result;;
					}
				}
				else if (_20d35c47e_isFloatFmtDotnp(_36012_txt, _36913_i)) {
					_case_begin_211298a9e:;
					{
						__jule_func_result = _20d35a702_floatFmtDotnp(_36012_txt, _36913_i);
						return __jule_func_result;;
					}
				}
				else if (((_37213_b != '_') && (!(_20d3556ca_IsHex(_37213_b))))) {
					_case_begin_211298b26:;
					{
						goto _iter_end_211297d89;
					}
				}
				_match_end_21129884b:;
			};
		}
	_iter_next_211297d89:;
	}
	_iter_end_211297d89:;;
	if ((_36913_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_36012_txt)).slice(0LL, _36913_i));
	return __jule_func_result;;
}



inline jule::Str _20d363595_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I64 _39328_n) {
	jule::Str __jule_func_result;
	if (((*(_39315_txt)).len() < _39328_n)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _39913_i = 2LL;;
	for (; (_39913_i < _39328_n); (_39913_i)++) {
		{
			if ((!(_20d3556ca_IsHex((*(_39315_txt))[_39913_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_21129b19a:;
	}
	_iter_end_21129b19a:;;
	__jule_func_result=static_cast<jule::Str>((*(_39315_txt)).slice(0LL, _39328_n));
	return __jule_func_result;;
}



inline jule::Str _20d36385e_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt) {
	return _20d363595_hexEscape(_41127_txt, 10LL);;
}



inline jule::Str _20d363b28_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt) {
	return _20d363595_hexEscape(_41630_txt, 6LL);;
}



inline jule::Str _20d363de2_hexByteEscape(jule::Slice<jule::U8>* _42119_txt) {
	return _20d363595_hexEscape(_42119_txt, 4LL);;
}



inline jule::Str _20d3641ab_byteEscape(jule::Slice<jule::U8>* _42616_txt) {
	jule::Str __jule_func_result;
	if (((*(_42616_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_20d355411_IsOctal((*(_42616_txt))[1LL]))) || (!(_20d355411_IsOctal((*(_42616_txt))[2LL])))) || (!(_20d355411_IsOctal((*(_42616_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_42616_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_22730be5e_Log> _20d3691a0_Lex(jule::Ptr<_20d356885_File> _80912_f, jule::I64 _80922_mode) {
	if ((_80912_f == nullptr)) {
		return nullptr;;
	};
	_20d36492b_lex _81413_lex = _20d36492b_lex{._field_mode=_80922_mode, ._field_file=_80912_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_20d367742_newLine(&_81413_lex);
	_20d365520_lex(&_81413_lex);
	if ((_81413_lex._field_errors.len() > 0LL)) {
		return _81413_lex._field_errors;;
	};
	(*(_80912_f))._field_Tokens=_81413_lex._field_tokens;
	return nullptr;;
}



inline jule::Bool _20d431e16_FindModuleFile(jule::Slice<jule::Ptr<_223dd0706_DirEntry>>* _1220_dirents) {
	{
		auto expr = _1220_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21132d738:;
		if (it != expr_end) {
			jule::Ptr<_223dd0706_DirEntry> *_1312_d = it;
			{
				if (((!(_223ddd956_IsDir((*((*(_1312_d))))._field_Stat.ptr()))) && (*((*(_1312_d))))._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_21132d738:;
			++it;
			goto _iter_begin_21132d738;
		}
		_iter_end_21132d738:;
	};
	return false;;
}



inline jule::Str _20d4321e1_FindModuleFileDeep(jule::Str _2427_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_223dd0706_DirEntry>> _2617_dirents = ({
				auto except = static__22726b709_Read(_2427_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_21132e816;
				} jule::Slice<jule::Ptr<_223dd0706_DirEntry>>(nullptr);});
			});;
			jule::Bool _3013_exist = _20d431e16_FindModuleFile(&(_2617_dirents));;
			if (_3013_exist) {
				return _2427_path;;
			};
			jule::I64 _3513_n = _2427_path.len();;
			_2427_path=_22726ae34_Dir(_2427_path);
			if ((_2427_path.len() == _3513_n)) {
				goto _iter_end_21132e816;
			};
		}
	_iter_next_21132e816:;
	}
	_iter_end_21132e816:;;
	return jule::Str();;
}



inline jule::Slice<_22730be5e_Log> _20d4324aa_CheckModuleFile(jule::Str* _4621_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__223ddb701_Read(_22726a241_Join(jule::Slice<jule::Str>::make({(*(_4621_path)),jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_22730be5e_Log>::make({_22730be5e_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file could not checked because of a problem", 50), }});;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _539_s = _2272675e5_Trim(static_cast<jule::Str>(_479_bytes), jule::Str(" \n\r\t\v", 5));;
	if ((_539_s.len() != 0LL)) {
		return jule::Slice<_22730be5e_Log>::make({_22730be5e_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file has syntax error(s)", 31), }});;
	};
	return nullptr;;
}



inline jule::Bool _20d432ee4_IsPub(jule::Str* _1011_ident) {
	if (((*(_1011_ident))[0LL] < 128LLU)) {
		jule::U8 _1213_b = (*(_1011_ident))[0LL];;
		return (('A' <= _1213_b) && (_1213_b <= 'Z'));;
	};
	jule::I32 _1510_r = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _223ee79b6_DecodeRune(_223dd6124_Stobs(_1011_ident));
		_1510_r = __jule_assign_result.__jule_result_arg0;
	});
	return _22486b4e3_IsUpper(_1510_r);;
}



inline jule::Bool _20d05374c_IsAscii(jule::I32 _1012_r) {
	;
	return (_1012_r <= 127LL);;
}



inline jule::I32 _20d06b08e_ToRune(jule::Slice<jule::U8> _1811_bytes) {
	if ((_1811_bytes.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _2313_r = 0LL;;
	if (((_1811_bytes[0LL] == '\\') && (_1811_bytes.len() > 1LL))) {
		jule::I64 _2517_i = 0LL;;
		_2313_r=static_cast<jule::I32>(_20d06bca4_runeFromEsqSeq(_1811_bytes, &(_2517_i)));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _223ee79b6_DecodeRune(_1811_bytes);
			_2313_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _2313_r;;
}



inline jule::Str _20d06b358_ToRawStr(jule::Slice<jule::U8> _3713_bytes) {
	return static_cast<jule::Str>(_3713_bytes);;
}



inline jule::Str _20d06b699_ToStr(jule::Slice<jule::U8> _4210_bytes) {
	if ((_4210_bytes.len() == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL, _4210_bytes.len(), 0);;
	jule::I64 _4813_i = 0LL;;
	while ((_4813_i < _4210_bytes.len())) {
		{
			jule::U8 _5013_b = _4210_bytes[_4813_i];;
			if ((_5013_b == '\\')) {
				(_4713_s).append(_20d06c128_strEsqSeq(_4210_bytes, &(_4813_i)));;
			} else {
				jule::I32 _5418_r = 0;;
				jule::I64 _5421_size = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _223ee79b6_DecodeRune(_4210_bytes.slice(_4813_i));
					_5418_r = __jule_assign_result.__jule_result_arg0;
					_5421_size = __jule_assign_result.__jule_result_arg1;
				});
				_4813_i+=_5421_size;
				_4713_s=_223ee8e29_AppendRune(_4713_s, _5418_r);
			};
		}
	_iter_next_21133a305:;
	}
	_iter_end_21133a305:;;
	return static_cast<jule::Str>(_4713_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _20d06b963_tryBtoaCommonEsq(jule::Slice<jule::U8> _6221_bytes) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_6221_bytes.len() < 2LL) || (_6221_bytes[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _6221_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_21133de1e:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_21133de96:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_21133e01d:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_21133e095:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_21133e11c:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_21133e194:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_21133e21b:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_21133e293:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_21133e31a:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_21133e392:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_21133dccb:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _20d06bca4_runeFromEsqSeq(jule::Slice<jule::U8> _9219_bytes, jule::I64* _9239_i) {
	jule::U8 _9310_b = 0;;
	jule::Bool _9313_ok = false;;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _20d06b963_tryBtoaCommonEsq(_9219_bytes.slice((*(_9239_i))));
		_9310_b = __jule_assign_result.__jule_result_arg0;
		_9313_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_9239_i)))++;
	if (_9313_ok) {
		((*(_9239_i)))++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9310_b));;
	};
	{
		auto &_match_expr{ _9219_bytes[(*(_9239_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_21134383b:;
			{
				;
				jule::I32 _10313_r = static_cast<jule::I32>(({
					auto except = _20b043563_ParseUint(static_cast<jule::Str>(_9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 5LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:103:22"));
					(except.result);
				}));;
				(*(_9239_i))+=5LL;
				return _10313_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_211343aa0:;
			{
				;
				jule::I32 _10813_r = static_cast<jule::I32>(({
					auto except = _20b043563_ParseUint(static_cast<jule::Str>(_9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 9LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:108:22"));
					(except.result);
				}));;
				(*(_9239_i))+=9LL;
				return _10813_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_211343b16:;
			{
				;
				jule::Slice<jule::U8> _11313_seq = _9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 3LL));;
				(*(_9239_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _20b043563_ParseUint(static_cast<jule::Str>(_11313_seq), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:115:18"));
					(except.result);
				})));;
			}
		}
		else {
			_case_begin_211342494:;
			{
				;
				jule::Slice<jule::U8> _11813_seq = _9219_bytes.slice((*(_9239_i)), ((*(_9239_i)) + 3LL));;
				(*(_9239_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _20b043563_ParseUint(static_cast<jule::Str>(_11813_seq.slice(1LL)), 8LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:120:18"));
					(except.result);
				})));;
			}
		}
		_match_end_21134243e:;
	};
}



inline jule::Slice<jule::U8> _20d06c128_strEsqSeq(jule::Slice<jule::U8> _12414_bytes, jule::I64* _12434_i) {
	jule::I32 _1259_r = _20d06bca4_runeFromEsqSeq(_12414_bytes, _12434_i);;
	if ((_1259_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1259_r))});;
	};
	return static_cast<jule::Slice<jule::U8>>(jule::Str::from_rune(_1259_r));;
}



inline jule::I64 _20d55cad0_findFormatPrefix(jule::Slice<jule::U8>* _1122_bytes, jule::I64* _1138_start) {
	jule::I64 _1213_i = (*(_1138_start));;
	while ((_1213_i < (*(_1122_bytes)).len())) {
		{
			jule::I32 _1414_r = 0;;
			jule::I64 _1417_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _223ee79b6_DecodeRune((*(_1122_bytes)).slice(_1213_i));
				_1414_r = __jule_assign_result.__jule_result_arg0;
				_1417_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1414_r == '{')) {
				return _1213_i;;
			};
			_1213_i+=_1417_size;
		}
	_iter_next_211374581:;
	}
	_iter_end_211374581:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _20d55ce98_getFormatRange(jule::I64* _2824_i, jule::Slice<jule::U8>* _2837_bytes) {
	jule::I64 _299_start = (*(_2824_i));;
	jule::I64 _3013_braces = 0LL;;
	while (((*(_2824_i)) < (*(_2837_bytes)).len())) {
		{
			jule::I32 _3214_r = 0;;
			jule::I64 _3217_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _223ee79b6_DecodeRune((*(_2837_bytes)).slice((*(_2824_i))));
				_3214_r = __jule_assign_result.__jule_result_arg0;
				_3217_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2824_i))+=_3217_size;
			{
				auto &_match_expr{ _3214_r };
				
				if (_match_expr == '{') {
					_case_begin_211376d36:;
					{
						(_3013_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_211376e13:;
					{
						(_3013_braces)--;
						if ((_3013_braces == 0LL)) {
							return (*(_2837_bytes)).slice(_299_start, (*(_2824_i)));;
						};
					}
				}
				_match_end_21137675e:;
			};
		}
	_iter_next_211376099:;
	}
	_iter_end_211376099:;;
	return nullptr;;
}



inline void _20d55d284_FmtByDefault(_2240a0ad5_StrBuilder* _4822_buf, jule::Any* _4840_arg) {
	if (((*(_4840_arg)) == nullptr)) {
		_2240a989c_WriteStr(_4822_buf, jule::Str("<nil>", 5));
		return;;
	};
	{
		auto &_match_expr{ (*(_4840_arg)) };
		
		if (_match_expr.type == &__jule_any_type132) {
			_case_begin_211378365:;
			{
				_2240a989c_WriteStr(_4822_buf, _20b038789_FmtFloat(static_cast<jule::F64>(static_cast<jule::F64>((*(_4840_arg)).cast<jule::F32>(&__jule_any_type132))), 'g', -1LL, 32LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_211378a4c:;
			{
				_2240a989c_WriteStr(_4822_buf, _20b038789_FmtFloat(static_cast<jule::F64>((*(_4840_arg)).cast<jule::F64>(&__jule_any_type5)), 'g', -1LL, 64LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_21137850d:;
			{
				_2240a989c_WriteStr(_4822_buf, _20b0550be_FmtInt(static_cast<jule::I64>((*(_4840_arg)).cast<jule::I8>(&__jule_any_type133)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_211378574:;
			{
				_2240a989c_WriteStr(_4822_buf, _20b0550be_FmtInt(static_cast<jule::I64>((*(_4840_arg)).cast<jule::I16>(&__jule_any_type134)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_211378b7e:;
			{
				_2240a989c_WriteStr(_4822_buf, _20b0550be_FmtInt(static_cast<jule::I64>((*(_4840_arg)).cast<jule::I32>(&__jule_any_type6)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_211378be5:;
			{
				_2240a989c_WriteStr(_4822_buf, _20b0550be_FmtInt(static_cast<jule::I64>((*(_4840_arg)).cast<jule::I64>(&__jule_any_type1)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_211378c5b:;
			{
				_2240a989c_WriteStr(_4822_buf, _20b054c06_FmtUint(static_cast<jule::U64>((*(_4840_arg)).cast<jule::U8>(&__jule_any_type131)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type135) {
			_case_begin_211378cc2:;
			{
				_2240a989c_WriteStr(_4822_buf, _20b054c06_FmtUint(static_cast<jule::U64>((*(_4840_arg)).cast<jule::U16>(&__jule_any_type135)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_211378d38:;
			{
				_2240a989c_WriteStr(_4822_buf, _20b054c06_FmtUint(static_cast<jule::U64>((*(_4840_arg)).cast<jule::U32>(&__jule_any_type136)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_211378d9e:;
			{
				_2240a989c_WriteStr(_4822_buf, _20b054c06_FmtUint(static_cast<jule::U64>((*(_4840_arg)).cast<jule::U64>(&__jule_any_type2)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_211378e15:;
			{
				_2240a989c_WriteStr(_4822_buf, (*(_4840_arg)).cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_211378e7b:;
			{
				if ((*(_4840_arg)).cast<jule::Bool>(&__jule_any_type3)) {
					_2240a989c_WriteStr(_4822_buf, jule::Str("true", 4));
				} else {
					_2240a989c_WriteStr(_4822_buf, jule::Str("false", 5));
				};
			}
		}
		else {
			_case_begin_211377d59:;
			{
				_2240a989c_WriteStr(_4822_buf, jule::to_str((*(_4840_arg))));
			}
		}
		_match_end_211377232:;
	};
}



inline void _20d55d6a2_applyFmtByDefault(_2240a0ad5_StrBuilder* _8727_buf, jule::I64* _8749_j, jule::Slice<jule::Any> _8757_args) {
	jule::Any _889_arg = _8757_args[(*(_8749_j))];;
	((*(_8749_j)))++;
	_20d55d284_FmtByDefault(_8727_buf, &(_889_arg));
}



inline void _20d55db03_applyFmt(jule::Slice<jule::U8>* _9518_fmt, _2240a0ad5_StrBuilder* _9536_buf, jule::I64* _9558_j, jule::Slice<jule::Any> _9566_args) {
	if (((*(_9518_fmt)).len() == 2LL)) {
		_20d55d6a2_applyFmtByDefault(_9536_buf, _9558_j, _9566_args);
		return;;
	};
	if (((((((*(_9518_fmt)).len() == 4LL) && ((*(_9518_fmt))[0LL] == '{')) && ((*(_9518_fmt))[1LL] == '{')) && ((*(_9518_fmt))[2LL] == '}')) && ((*(_9518_fmt))[3LL] == '}'))) {
		_2240a989c_WriteStr(_9536_buf, jule::Str("{}", 2));
		return;;
	};
	_2240a95e4_Write(_9536_buf, (*(_9518_fmt)));
}



inline jule::Str _20d55de44_Format(jule::Str* _11412_fmt, jule::Slice<jule::Any> _11422_args) {
	if ((_11422_args.len() == 0LL)) {
		return (*(_11412_fmt));;
	};
	jule::Slice<jule::U8> _11813_fmtBytes = _223dd6124_Stobs(_11412_fmt);;
	_2240a0ad5_StrBuilder _11913_buf = static__2240a0e04_New(static_cast<jule::I64>((*(_11412_fmt)).len()));;
	jule::I64 _12013_j = 0LL;;
	jule::I64 _12113_last = 0LL;;
	jule::I64 _12213_i = _20d55cad0_findFormatPrefix(&(_11813_fmtBytes), &(_12113_last));;
	for (; (_12213_i != -1LL); _12213_i=static_cast<jule::I64>(_20d55cad0_findFormatPrefix(&(_11813_fmtBytes), &(_12213_i)))) {
		{
			_2240a95e4_Write(&_11913_buf, _11813_fmtBytes.slice(_12113_last, _12213_i));
			jule::Slice<jule::U8> _12517_format = _20d55ce98_getFormatRange(&(_12213_i), &(_11813_fmtBytes));;
			if ((_12517_format == nullptr)) {
				goto _iter_next_2113855a3;
			};
			_20d55db03_applyFmt(&(_12517_format), &(_11913_buf), &(_12013_j), _11422_args);
			if ((_12013_j >= _11422_args.len())) {
				_2240a95e4_Write(&_11913_buf, _11813_fmtBytes.slice(_12213_i));
				_12113_last=static_cast<jule::I64>(_11813_fmtBytes.len());
				goto _iter_end_2113855a3;
			};
			_12113_last=_12213_i;
		}
	_iter_next_2113855a3:;
	}
	_iter_end_2113855a3:;;
	if ((_12113_last < _11813_fmtBytes.len())) {
		_2240a95e4_Write(&_11913_buf, _11813_fmtBytes.slice(_12113_last));
	};
	return _2240aa194_Str(&_11913_buf);;
}



inline jule::Str _20d561111_Format(jule::Str _3011_fmt, jule::Slice<jule::Any> _3021_args) {
	return _20d55de44_Format(&(_3011_fmt), _3021_args);;
}



inline jule::Bool _20d3a7d26_parameterUsesGenerics(jule::Ptr<_20d3a4a9d_ParamIns>* _38431_p, jule::Slice<jule::Ptr<_20d378ba4_GenericDecl>>* _38446_generics) {
	if (_20d3a178c_IsSelf((*((*(_38431_p))))._field_Decl.ptr())) {
		return false;;
	};
	return _20d509c8b_kindUsesGenerics(&((*((*(_38431_p))))._field_Kind), _38446_generics);;
}



inline jule::Ptr<_20d4e6706_TypeSymbol> _20d3aa576_buildType(jule::Ptr<_20d36b999_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_20d4e6706_TypeSymbol>(_20d4e6706_TypeSymbol{._field_Decl=_9418_t, });;
}



inline jule::Ptr<_20d0882a9_Value> _20d3aa884_buildExpr(jule::Ptr<_20d370ccd_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_20d0882a9_Value>(_20d0882a9_Value{._field_Expr=_10318_expr, });;
}



inline jule::Ptr<_20d4dd49a_TypeAlias> _20d3aab4d_buildTypeAlias(jule::Ptr<_20d38330c_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_20d4dd49a_TypeAlias>(_20d4dd49a_TypeAlias{._field_Scope=(*(_11223_decl))._field_Scope, ._field_Public=(*(_11223_decl))._field_Public, ._field_Binded=(*(_11223_decl))._field_Binded, ._field_Token=(*(_11223_decl))._field_Token, ._field_Ident=(*(_11223_decl))._field_Ident, ._field_Kind=_20d3aa576_buildType((*(_11223_decl))._field_Kind), });;
}



inline jule::Ptr<_20d389698_Field> _20d3aae8e_buildField(jule::Ptr<_20d386ad5_FieldDecl> _12319_decl) {
	return jule::new_ptr<_20d389698_Field>(_20d389698_Field{._field_Token=(*(_12319_decl))._field_Token, ._field_Public=(*(_12319_decl))._field_Public, ._field_Mutable=(*(_12319_decl))._field_Mutable, ._field_Ident=(*(_12319_decl))._field_Ident, ._field_Kind=_20d3aa576_buildType((*(_12319_decl))._field_Kind), ._field_Default=(*(_12319_decl))._field_Default});;
}



inline jule::Slice<jule::Ptr<_20d389698_Field>> _20d3ab258_buildFields(jule::Slice<jule::Ptr<_20d386ad5_FieldDecl>>* _13421_decls) {
	jule::Slice<jule::Ptr<_20d389698_Field>> _13513_fields = jule::Slice<jule::Ptr<_20d389698_Field>>::alloc(0LL, (*(_13421_decls)).len());;
	{
		auto expr = _13421_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21046728a:;
		if (it != expr_end) {
			jule::Ptr<_20d386ad5_FieldDecl> _13617_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_20d389698_Field>> &__jule_push_dest = _13513_fields; __jule_push_dest.push(_20d3aae8e_buildField(_13617_decl)); };
			}
			_iter_next_21046728a:;
			++it;
			goto _iter_begin_21046728a;
		}
		_iter_end_21046728a:;
	};
	return _13513_fields;;
}



inline jule::Ptr<_20d38c58b_Struct> _20d3ab522_buildStruct(jule::Ptr<_20d3874cb_StructDecl> _14220_decl) {
	return jule::new_ptr<_20d38c58b_Struct>(_20d38c58b_Struct{._field_Token=(*(_14220_decl))._field_Token, ._field_Ident=(*(_14220_decl))._field_Ident, ._field_Fields=_20d3ab258_buildFields(&((*(_14220_decl))._field_Fields)), ._field_Public=(*(_14220_decl))._field_Public, ._field_Binded=(*(_14220_decl))._field_Binded, ._field_Directives=(*(_14220_decl))._field_Directives, ._field_Generics=(*(_14220_decl))._field_Generics, });;
}



inline jule::Ptr<_20d3a1171_Param> _20d3ab7db_buildParam(jule::Ptr<_20d37c207_ParamDecl> _15419_decl) {
	return jule::new_ptr<_20d3a1171_Param>(_20d3a1171_Param{._field_Token=(*(_15419_decl))._field_Token, ._field_Mutable=(*(_15419_decl))._field_Mutable, ._field_Variadic=(*(_15419_decl))._field_Variadic, ._field_Reference=(*(_15419_decl))._field_Reference, ._field_Kind=_20d3aa576_buildType((*(_15419_decl))._field_Kind), ._field_Ident=(*(_15419_decl))._field_Ident});;
}



inline jule::Slice<jule::Ptr<_20d3a1171_Param>> _20d3abb82_buildParams(jule::Slice<jule::Ptr<_20d37c207_ParamDecl>>* _16521_decls) {
	jule::Slice<jule::Ptr<_20d3a1171_Param>> _16613_params = jule::Slice<jule::Ptr<_20d3a1171_Param>>::alloc(0LL, (*(_16521_decls)).len());;
	{
		auto expr = _16521_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21046b338:;
		if (it != expr_end) {
			jule::Ptr<_20d37c207_ParamDecl> _16717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_20d3a1171_Param>> &__jule_push_dest = _16613_params; __jule_push_dest.push(_20d3ab7db_buildParam(_16717_decl)); };
			}
			_iter_next_21046b338:;
			++it;
			goto _iter_begin_21046b338;
		}
		_iter_end_21046b338:;
	};
	return _16613_params;;
}



inline jule::Ptr<_20d3a08e0_RetType> _20d3abe4b_buildRetType(jule::Ptr<_20d36e88c_RetTypeDecl> _17321_decl) {
	if ((((*(_17321_decl))._field_Idents == nullptr) && ((*(_17321_decl))._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_20d3a08e0_RetType>(_20d3a08e0_RetType{._field_Kind=_20d3aa576_buildType((*(_17321_decl))._field_Kind), ._field_Idents=(*(_17321_decl))._field_Idents});;
}



inline jule::Ptr<_20d3a2b45_Fn> _20d3ac215_buildFunc(jule::Ptr<_20d37d659_FnDecl> _18318_decl) {
	return jule::new_ptr<_20d3a2b45_Fn>(_20d3a2b45_Fn{._field_Token=(*(_18318_decl))._field_Token, ._field_Global=(*(_18318_decl))._field_Global, ._field_Unsafety=(*(_18318_decl))._field_Unsafety, ._field_Public=(*(_18318_decl))._field_Public, ._field_Binded=(*(_18318_decl))._field_Binded, ._field_Statically=(*(_18318_decl))._field_Statically, ._field_Exceptional=(*(_18318_decl))._field_Exceptional, ._field_Ident=(*(_18318_decl))._field_Ident, ._field_Directives=(*(_18318_decl))._field_Directives, ._field_Scope=(*(_18318_decl))._field_Scope, ._field_Generics=(*(_18318_decl))._field_Generics, ._field_Result=_20d3abe4b_buildRetType((*(_18318_decl))._field_Result), ._field_Params=_20d3abb82_buildParams(&((*(_18318_decl))._field_Params)), });;
}



inline jule::Slice<jule::Ptr<_20d3a2b45_Fn>> _20d3ac4ce_buildMethods(jule::Slice<jule::Ptr<_20d37d659_FnDecl>>* _20122_decls) {
	jule::Slice<jule::Ptr<_20d3a2b45_Fn>> _20213_methods = jule::Slice<jule::Ptr<_20d3a2b45_Fn>>::alloc(0LL, (*(_20122_decls)).len());;
	{
		auto expr = _20122_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21047142b:;
		if (it != expr_end) {
			jule::Ptr<_20d37d659_FnDecl> _20317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_20d3a2b45_Fn>> &__jule_push_dest = _20213_methods; __jule_push_dest.push(_20d3ac215_buildFunc(_20317_decl)); };
			}
			_iter_next_21047142b:;
			++it;
			goto _iter_begin_21047142b;
		}
		_iter_end_21047142b:;
	};
	return _20213_methods;;
}



inline jule::Slice<jule::Ptr<_20d4e6706_TypeSymbol>> _20d3ac798_buildTraitInherits(jule::Slice<jule::Ptr<_20d36b999_TypeDecl>>* _20928_inherits) {
	jule::Slice<jule::Ptr<_20d4e6706_TypeSymbol>> _21013_symbols = jule::Slice<jule::Ptr<_20d4e6706_TypeSymbol>>::alloc(0LL, (*(_20928_inherits)).len());;
	{
		auto expr = _20928_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2104725a3:;
		if (it != expr_end) {
			jule::Ptr<_20d36b999_TypeDecl> _21117_it = *it;
			{
				{ jule::Slice<jule::Ptr<_20d4e6706_TypeSymbol>> &__jule_push_dest = _21013_symbols; __jule_push_dest.push(_20d3aa576_buildType(_21117_it)); };
			}
			_iter_next_2104725a3:;
			++it;
			goto _iter_begin_2104725a3;
		}
		_iter_end_2104725a3:;
	};
	return _21013_symbols;;
}



inline jule::Ptr<_20d3b5dde_Trait> _20d3aca62_buildTrait(jule::Ptr<_20d387c18_TraitDecl> _21719_decl) {
	return jule::new_ptr<_20d3b5dde_Trait>(_20d3b5dde_Trait{._field_Token=(*(_21719_decl))._field_Token, ._field_Ident=(*(_21719_decl))._field_Ident, ._field_Public=(*(_21719_decl))._field_Public, ._field_Inherits=_20d3ac798_buildTraitInherits(&((*(_21719_decl))._field_Inherits)), ._field_Methods=_20d3ac4ce_buildMethods(&((*(_21719_decl))._field_Methods)), });;
}



inline jule::Ptr<_20d3b7a6c_EnumItem> _20d3acd2b_buildEnumItem(jule::Ptr<_20d384cc0_EnumItemDecl> _22722_decl) {
	return jule::new_ptr<_20d3b7a6c_EnumItem>(_20d3b7a6c_EnumItem{._field_Token=(*(_22722_decl))._field_Token, ._field_Ident=(*(_22722_decl))._field_Ident, ._field_Value=_20d3aa884_buildExpr((*(_22722_decl))._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_20d3b7a6c_EnumItem>> _20d3ad0e5_buildEnumItems(jule::Slice<jule::Ptr<_20d384cc0_EnumItemDecl>>* _23524_decls) {
	jule::Slice<jule::Ptr<_20d3b7a6c_EnumItem>> _23613_items = jule::Slice<jule::Ptr<_20d3b7a6c_EnumItem>>::alloc(0LL, (*(_23524_decls)).len());;
	{
		auto expr = _23524_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_210475892:;
		if (it != expr_end) {
			jule::Ptr<_20d384cc0_EnumItemDecl> _23717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_20d3b7a6c_EnumItem>> &__jule_push_dest = _23613_items; __jule_push_dest.push(_20d3acd2b_buildEnumItem(_23717_decl)); };
			}
			_iter_next_210475892:;
			++it;
			goto _iter_begin_210475892;
		}
		_iter_end_210475892:;
	};
	return _23613_items;;
}



inline jule::Ptr<_20d3b85d9_Enum> _20d3ad568_buildEnum(jule::Ptr<_20d385881_EnumDecl> _24318_decl) {
	return jule::new_ptr<_20d3b85d9_Enum>(_20d3b85d9_Enum{._field_Token=(*(_24318_decl))._field_Token, ._field_Public=(*(_24318_decl))._field_Public, ._field_Ident=(*(_24318_decl))._field_Ident, ._field_Kind=_20d3aa576_buildType((*(_24318_decl))._field_Kind), ._field_Items=_20d3ad0e5_buildEnumItems(&((*(_24318_decl))._field_Items))});;
}



inline jule::Ptr<_20d3b971c_TypeEnumItem> _20d3ad832_buildTypeEnumItem(jule::Ptr<_20d3861ab_TypeEnumItemDecl> _25326_decl) {
	return jule::new_ptr<_20d3b971c_TypeEnumItem>(_20d3b971c_TypeEnumItem{._field_Token=(*(_25326_decl))._field_Token, ._field_Ident=(*(_25326_decl))._field_Ident, ._field_Kind=_20d3aa576_buildType((*(_25326_decl))._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_20d3b971c_TypeEnumItem>> _20d3adaeb_buildTypeEnumItems(jule::Slice<jule::Ptr<_20d3861ab_TypeEnumItemDecl>>* _26128_decls) {
	jule::Slice<jule::Ptr<_20d3b971c_TypeEnumItem>> _26213_items = jule::Slice<jule::Ptr<_20d3b971c_TypeEnumItem>>::alloc(0LL, (*(_26128_decls)).len());;
	{
		auto expr = _26128_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_210478b81:;
		if (it != expr_end) {
			jule::Ptr<_20d3861ab_TypeEnumItemDecl> _26317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_20d3b971c_TypeEnumItem>> &__jule_push_dest = _26213_items; __jule_push_dest.push(_20d3ad832_buildTypeEnumItem(_26317_decl)); };
			}
			_iter_next_210478b81:;
			++it;
			goto _iter_begin_210478b81;
		}
		_iter_end_210478b81:;
	};
	return _26213_items;;
}



inline jule::Ptr<_20d3b9ce4_TypeEnum> _20d3addb5_buildTypeEnum(jule::Ptr<_20d38681b_TypeEnumDecl> _26922_decl) {
	return jule::new_ptr<_20d3b9ce4_TypeEnum>(_20d3b9ce4_TypeEnum{._field_Token=(*(_26922_decl))._field_Token, ._field_Public=(*(_26922_decl))._field_Public, ._field_Ident=(*(_26922_decl))._field_Ident, ._field_Items=_20d3adaeb_buildTypeEnumItems(&((*(_26922_decl))._field_Items))});;
}



inline jule::Ptr<_20d458aca_Var> _20d3ae17e_buildVar(jule::Ptr<_20d37e737_VarDecl> _27817_decl) {
	return jule::new_ptr<_20d458aca_Var>(_20d458aca_Var{._field_Token=(*(_27817_decl))._field_Token, ._field_Ident=(*(_27817_decl))._field_Ident, ._field_Binded=(*(_27817_decl))._field_Binded, ._field_Constant=(*(_27817_decl))._field_Constant, ._field_Mutable=(*(_27817_decl))._field_Mutable, ._field_Public=(*(_27817_decl))._field_Public, ._field_Statically=(*(_27817_decl))._field_Statically, ._field_Reference=(*(_27817_decl))._field_Reference, ._field_Kind=_20d3aa576_buildType((*(_27817_decl))._field_Kind), ._field_Value=_20d3aa884_buildExpr((*(_27817_decl))._field_Expr), ._field_Refers=static__20d3a8ee2_new(), ._field_Directives=(*(_27817_decl))._field_Directives, });;
}



inline jule::Slice<jule::Ptr<_20d458aca_Var>> _20d3ae448_buildVars(jule::Slice<jule::Ptr<_20d37e737_VarDecl>> _29518_decls) {
	jule::Slice<jule::Ptr<_20d458aca_Var>> _29613_vars = jule::Slice<jule::Ptr<_20d458aca_Var>>::alloc(0LL, _29518_decls.len());;
	{
		auto expr = &(_29518_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21047d526:;
		if (it != expr_end) {
			jule::Ptr<_20d37e737_VarDecl> _29717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_20d458aca_Var>> &__jule_push_dest = _29613_vars; __jule_push_dest.push(_20d3ae17e_buildVar(_29717_decl)); };
			}
			_iter_next_21047d526:;
			++it;
			goto _iter_begin_21047d526;
		}
		_iter_end_21047d526:;
	};
	return _29613_vars;;
}



inline jule::Ptr<_20d3dd268_Impl> _20d3ae712_buildImpl(jule::Ptr<_20d388378_Impl> _30318_decl) {
	return jule::new_ptr<_20d3dd268_Impl>(_20d3dd268_Impl{._field_Base=(*(_30318_decl))._field_Base, ._field_Dest=(*(_30318_decl))._field_Dest, ._field_Methods=_20d3ac4ce_buildMethods(&((*(_30318_decl))._field_Methods)), ._field_Statics=_20d3ae448_buildVars((*(_30318_decl))._field_Statics)});;
}



inline jule::Ptr<_20d087165_Data> _20d3d8c58_buildAsComptimeMethodData(jule::Ptr<_20d3a5a49_FnIns>* _141635_f) {
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>((*(_141635_f)), 1)}), });;
}



inline jule::Ptr<_20d414d94_ImportInfo> _20d3d9066_findComptimePackage(jule::Ptr<_20d435de8_Sema>* _142429_s) {
	return _20d43638d_SelectPackage((*(_142429_s)).ptr(), jule::Fn<jule::Bool(jule::Ptr<_20d414d94_ImportInfo>)>([=](jule::Ptr<_20d414d94_ImportInfo> _142528_pkg) mutable -> jule::Bool {
		return (*(_142528_pkg))._field_LinkPath.equal("std::comptime", 13);;
	}));;
}



inline jule::Ptr<_20d087165_Data> _20d3d93da_buildComptimeTypeInfoData(jule::Ptr<_20d435de8_Sema>* _143035_s, jule::Ptr<_20d4de28c_TypeKind>* _143050_t) {
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(_20d435733_pushComptimeTypeInfo((*((*(_143035_s))))._field_meta.ptr(), _143050_t), 15)}), });;
}



inline jule::Ptr<_20d087165_Data> _20d3d961b_buildComptimeValue(jule::Ptr<_20d087165_Data>* _143828_d) {
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(jule::new_ptr<_20d3d3170_comptimeValue>(_20d3d3170_comptimeValue{._field_data=(*(_143828_d))}), 16)}), });;
}



inline jule::Bool _20d3dc5db_matchConstraint(jule::Str* _14221_c, jule::Ptr<_20d4de28c_TypeKind>* _14234_g) {
	{
		auto &_match_expr{ (*(_14221_c)) };
		
		if (_match_expr == jule::Str("signed", 6)) {
			_case_begin_2117cd435:;
			{
				jule::Ptr<_20d4e710d_Prim> _14513_prim = _20d4e1b85_Prim((*(_14234_g)).ptr());;
				if ((_14513_prim == nullptr)) {
					return false;;
				};
				return _20b0653dc_IsSigNum((*(_14513_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("unsigned", 8)) {
			_case_begin_2117ce2d2:;
			{
				jule::Ptr<_20d4e710d_Prim> _15113_prim = _20d4e1b85_Prim((*(_14234_g)).ptr());;
				if ((_15113_prim == nullptr)) {
					return false;;
				};
				return _20b06474e_IsUnsigInt((*(_15113_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("float", 5)) {
			_case_begin_2117ce348:;
			{
				jule::Ptr<_20d4e710d_Prim> _15713_prim = _20d4e1b85_Prim((*(_14234_g)).ptr());;
				if ((_15713_prim == nullptr)) {
					return false;;
				};
				return _20b064d59_IsFloat((*(_15713_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("numeric", 7)) {
			_case_begin_2117ce535:;
			{
				jule::Ptr<_20d4e710d_Prim> _16313_prim = _20d4e1b85_Prim((*(_14234_g)).ptr());;
				if ((_16313_prim == nullptr)) {
					return false;;
				};
				return _20b065123_IsNum((*(_16313_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("mutable", 7)) {
			_case_begin_2117ce59b:;
			{
				return _20d4e0b2e_Mutable((*(_14234_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str("immutable", 9)) {
			_case_begin_2117ce612:;
			{
				return (!(_20d4e0b2e_Mutable((*(_14234_g)).ptr())));;
			}
		}
		else if (_match_expr == jule::Str("comparable", 10)) {
			_case_begin_2117ce678:;
			{
				return _20d4e0898_Comparable((*(_14234_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str("ordered", 7)) {
			_case_begin_2117ce788:;
			{
				return _20d4e0db5_Ordered((*(_14234_g)).ptr());;
			}
		}
		else {
			_case_begin_2117c7e02:;
			{
				return false;;
			}
		}
		_match_end_2117c8210:;
	};
}



inline jule::Bool _20d3dc8e9_isBuiltinConstraint(jule::Str* _18125_ident) {
	{
		auto expr = &(_20d3da8d6_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2117d50a7:;
		if (it != expr_end) {
			jule::Str *_18212_bc = it;
			{
				if (((*(_18125_ident)) == (*(_18212_bc)))) {
					return true;;
				};
			}
			_iter_next_2117d50a7:;
			++it;
			goto _iter_begin_2117d50a7;
		}
		_iter_end_2117d50a7:;
	};
	return false;;
}



inline jule::Ptr<_20d3ea9a1_scopeChecker> _20d3e0479_newScopeCheckerBase(jule::Ptr<_20d435de8_Sema>* _5829_s, jule::Ptr<_20d3a5a49_FnIns> _5843_owner) {
	return jule::new_ptr<_20d3ea9a1_scopeChecker>(_20d3ea9a1_scopeChecker{._field_s=(*(_5829_s)), ._field_owner=_5843_owner, ._field_table=jule::new_ptr<_20d081e40_SymbolTable>(), });;
}



inline jule::Ptr<_20d3ea9a1_scopeChecker> _20d3e0842_newScopeChecker(jule::Ptr<_20d435de8_Sema>* _6625_s, jule::Ptr<_20d3a5a49_FnIns> _6639_owner) {
	jule::Ptr<_20d3ea9a1_scopeChecker> _6713_base = _20d3e0479_newScopeCheckerBase(_6625_s, _6639_owner);;
	(*(_6713_base))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_20d3e950a_scopeLabel>>>(nullptr);
	(*(_6713_base))._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_20d3e9a8d_scopeGoto>>>(nullptr);
	return _6713_base;;
}



inline jule::Ptr<_20d3e950a_scopeLabel> _20d3e0bb6_findLabelParent(jule::Str* _7621_ident, jule::Ptr<_20d3ea9a1_scopeChecker> _7637_scope) {
	jule::Ptr<_20d3e950a_scopeLabel> _7713_label = _20d3ee4aa_findLabelScope(_7637_scope, _7621_ident);;
	while ((_7713_label == nullptr)) {
		{
			if ((((*(_7637_scope))._field_parent == nullptr) || ((*(_7637_scope))._field_owner != nullptr))) {
				return nullptr;;
			};
			_7637_scope=(*(_7637_scope))._field_parent;
			_7713_label=_20d3ee4aa_findLabelScope(_7637_scope, _7621_ident);
		}
	_iter_next_2117ee1d1:;
	}
	_iter_end_2117ee1d1:;;
	return _7713_label;;
}



inline jule::Bool _20d3e107e_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_20d3e369c_Scope>* _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type == &__jule_any_type35) {
			_case_begin_211800b72:;
			{
				jule::Ptr<_20d396ad4_FnCallExprModel> _9313_fcem = _9021_Model.cast_ptr<_20d396ad4_FnCallExprModel>(&__jule_any_type35);;
				if (((*(_9313_fcem))._field_Except == (*(_9034_sc)))) {
					return true;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_211800bd8:;
			{
				jule::Ptr<_20d087165_Data> _9813_d = _9021_Model.cast_ptr<_20d087165_Data>(&__jule_any_type24);;
				return _20d3e107e_modelIsGotoScope((*(_9813_d))._field_Model, _9034_sc);;
			}
		}
		_match_end_211800b1c:;
	};
	return false;;
}



inline jule::Bool _20d3e1403_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_20d3e369c_Scope>* _10434_sc) {
	{
		auto &_match_expr{ (*(_10421_stmt)) };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_211802bc9:;
			{
				return ((*(_10421_stmt)).cast_ptr<_20d3e369c_Scope>(&__jule_any_type22) == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_211802c40:;
			{
				return ((*((*(_10421_stmt)).cast_ptr<_20d3e45d2_InfIter>(&__jule_any_type37)))._field_Scope == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_211802cb7:;
			{
				jule::Ptr<_20d3e54d4_RangeIter> _11113_it = (*(_10421_stmt)).cast_ptr<_20d3e54d4_RangeIter>(&__jule_any_type41);;
				return (((*(_11113_it))._field_Scope == (*(_10434_sc))) || _20d3e107e_modelIsGotoScope((*((*(_11113_it))._field_Expr))._field_Model, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_211802d3e:;
			{
				jule::Ptr<_20d3e4a88_WhileIter> _11413_it = (*(_10421_stmt)).cast_ptr<_20d3e4a88_WhileIter>(&__jule_any_type39);;
				return ((((*(_11413_it))._field_Scope == (*(_10434_sc))) || _20d3e107e_modelIsGotoScope((*(_11413_it))._field_Expr, _10434_sc)) || _20d3e107e_modelIsGotoScope((*(_11413_it))._field_Next, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_21180305e:;
			{
				jule::Ptr<_20d3e77d3_Match> _11913_m = (*(_10421_stmt)).cast_ptr<_20d3e77d3_Match>(&__jule_any_type48);;
				{
					auto expr = &((*(_11913_m))._field_Cases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_211807063:;
					if (it != expr_end) {
						jule::Ptr<_20d3e841b_Case> *_12016_c = it;
						{
							if (((*((*(_12016_c))))._field_Scope == (*(_10434_sc)))) {
								return true;;
							};
							{
								auto expr = &((*((*(_12016_c))))._field_Exprs);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_211808086:;
								if (it != expr_end) {
									jule::Ptr<_20d087165_Data> *_12420_expr = it;
									{
										if (_20d3e107e_modelIsGotoScope((*((*(_12420_expr))))._field_Model, _10434_sc)) {
											return true;;
										};
									}
									_iter_next_211808086:;
									++it;
									goto _iter_begin_211808086;
								}
								_iter_end_211808086:;
							};
						}
						_iter_next_211807063:;
						++it;
						goto _iter_begin_211807063;
					}
					_iter_end_211807063:;
				};
				return (((*(_11913_m))._field_Default != nullptr) && ((*((*(_11913_m))._field_Default))._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_2118030d6:;
			{
				jule::Ptr<_20d3e42d5_Conditional> _13213_c = (*(_10421_stmt)).cast_ptr<_20d3e42d5_Conditional>(&__jule_any_type36);;
				{
					auto expr = &((*(_13213_c))._field_Elifs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_211809a05:;
					if (it != expr_end) {
						jule::Ptr<_20d3e3aba_If> *_13316_elif = it;
						{
							if ((((*((*(_13316_elif))))._field_Scope == (*(_10434_sc))) || _20d3e107e_modelIsGotoScope((*((*(_13316_elif))))._field_Expr, _10434_sc))) {
								return true;;
							};
						}
						_iter_next_211809a05:;
						++it;
						goto _iter_begin_211809a05;
					}
					_iter_end_211809a05:;
				};
				return (((*(_13213_c))._field_Default != nullptr) && ((*((*(_13213_c))._field_Default))._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_21180315d:;
			{
				jule::Ptr<_20d087165_Data> _14013_d = (*(_10421_stmt)).cast_ptr<_20d087165_Data>(&__jule_any_type24);;
				return _20d3e107e_modelIsGotoScope((*(_14013_d))._field_Model, _10434_sc);;
			}
		}
		else {
			_case_begin_2117e6bbd:;
			{
				return false;;
			}
		}
		_match_end_21180269b:;
	};
}



inline jule::I64 _20d3e1777_countMatchType(jule::Ptr<_20d3e77d3_Match>* _14720_m, jule::Ptr<_20d4de28c_TypeKind>* _14732_t) {
	jule::I64 _14813_n = 0LL;;
	jule::Str _1499_kind = _20d4de655_Str((*(_14732_t)).ptr());;
	_julec_label_21180c860:;
	{
		auto expr = &((*((*(_14720_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21180c7c7:;
		if (it != expr_end) {
			jule::Ptr<_20d3e841b_Case> *_15112_c = it;
			{
				if (((*(_15112_c)) == nullptr)) {
					goto _iter_next_21180c7c7;
				};
				{
					auto expr = &((*((*(_15112_c))))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_21180d81c:;
					if (it != expr_end) {
						jule::Ptr<_20d087165_Data> *_15616_expr = it;
						{
							if (((*(_15616_expr)) == nullptr)) {
								goto _iter_end_21180c7c7;
							};
							if ((_1499_kind == _20d4de655_Str((*((*(_15616_expr))))._field_Model.cast_ptr<_20d4de28c_TypeKind>(&__jule_any_type87).ptr()))) {
								(_14813_n)++;
							};
						}
						_iter_next_21180d81c:;
						++it;
						goto _iter_begin_21180d81c;
					}
					_iter_end_21180d81c:;
				};
			}
			_iter_next_21180c7c7:;
			++it;
			goto _iter_begin_21180c7c7;
		}
		_iter_end_21180c7c7:;
	};
	return _14813_n;;
}



inline jule::Slice<jule::Ptr<_20d087165_Data>> _20d3e1a41_getDatasFromTupleData(jule::Ptr<_20d087165_Data>* _17131_d) {
	if ((_20d4e39ab_Tup((*((*(_17131_d))))._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_17131_d))))._field_Model };
			
			if (_match_expr.type == &__jule_any_type85) {
				_case_begin_211813118:;
				{
					return (*((*((*(_17131_d))))._field_Model.cast_ptr<_20d39a302_TupleExprModel>(&__jule_any_type85)))._field_Datas;;
				}
			}
			else {
				_case_begin_211810797:;
				{
					jule::Ptr<_20d4ec201_Tuple> _17721_t = _20d4e39ab_Tup((*((*(_17131_d))))._field_Kind.ptr());;
					jule::Slice<jule::Ptr<_20d087165_Data>> _17821_r = jule::Slice<jule::Ptr<_20d087165_Data>>::alloc(0LL, (*(_17721_t))._field_Types.len());;
					{
						auto expr = &((*(_17721_t))._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_211811776:;
						if (it != expr_end) {
							jule::Ptr<_20d4de28c_TypeKind> _17925_kind = *it;
							{
								{ jule::Slice<jule::Ptr<_20d087165_Data>> &__jule_push_dest = _17821_r; __jule_push_dest.push(jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_17925_kind, ._field_Mutable=true, })); };
							}
							_iter_next_211811776:;
							++it;
							goto _iter_begin_211811776;
						}
						_iter_end_211811776:;
					};
					return _17821_r;;
				}
			}
			_match_end_211810742:;
		};
	} else {
		return jule::Slice<jule::Ptr<_20d087165_Data>>::make({(*(_17131_d))});;
	};
}



inline jule::Bool _20d3e2404_checkMut(jule::Ptr<_20d435de8_Sema>* _20618_s, jule::Ptr<_20d087165_Data>* _20629_left, jule::Ptr<_20d087165_Data> _20646_right, jule::Ptr<_20d3510bb_Token> _20660_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*((*(_20629_left))))._field_Mutable))) {
			_case_begin_2118163d5:;
			{
				_20d438a33_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str("cannot assign to immutable storage", 34), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_20646_right != nullptr) && (!((*(_20646_right))._field_Mutable))) && _20d4e0b2e_Mutable((*(_20646_right))._field_Kind.ptr()))) {
			_case_begin_21181645c:;
			{
				if ((((*(_20660_op))._field_Id != static_cast<jule::U64>(71LLU)) && (_20d4e3208_Struct((*(_20646_right))._field_Kind.ptr()) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_20d438a33_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_20646_right))._field_Kind.ptr()), &__jule_any_type4)}));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_211816319:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_211816292:;
	};
}



inline jule::Bool _20d3e28dd_checkAssign(jule::Ptr<_20d435de8_Sema>* _22521_s, jule::Ptr<_20d087165_Data>* _22536_left, jule::Ptr<_20d087165_Data> _22553_right, jule::Ptr<_20d3510bb_Token> _22567_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_20d3a5a49_FnIns> _2269_f = _20d4e2e72_Fn((*((*(_22536_left))))._field_Kind.ptr());;
	if ((((_2269_f != nullptr) && ((*(_2269_f))._field_Decl != nullptr)) && (*((*(_2269_f))._field_Decl))._field_Global)) {
		_20d438a33_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("type is not support assignment", 30), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_20d087a39_IsConst((*(_22536_left)).ptr())) {
			_case_begin_2118218a7:;
			{
				_20d438a33_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("constants is can't assign", 25), jule::Slice<jule::Any>());
				_20d438d96_pushSuggestion((*(_22521_s)).ptr(), jule::Str("remove constant qualifer if you need to assign", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*((*(_22536_left))))._field_Lvalue))) {
			_case_begin_21182192e:;
			{
				_20d438a33_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("invalid expression: expected lvalue for assignment", 50), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_20d3e2404_checkMut(_22521_s, _22536_left, _22553_right, _22567_op)))) {
			_case_begin_2118219a6:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_2118217db:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_211820e5b:;
	};
}



inline jule::Bool _20d3e2ba7_isValidAstStForNextSt(jule::Any* _24731_n) {
	{
		auto &_match_expr{ (*(_24731_n)) };
		
		if (_match_expr.type == &__jule_any_type59) {
			_case_begin_211821be8:;
			{
				return (!((*((*(_24731_n)).cast_ptr<_20d37a447_AssignSt>(&__jule_any_type59)))._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_211823dc6:;
			{
				return true;;
			}
		}
		else {
			_case_begin_211822149:;
			{
				return false;;
			}
		}
		_match_end_211823a1e:;
	};
}



inline jule::Bool _20d3e2e71_isValidStForNextSt(jule::Any* _25824_st) {
	{
		auto &_match_expr{ (*(_25824_st)) };
		
		if (_match_expr.type == &__jule_any_type44 || _match_expr.type == &__jule_any_type45 || _match_expr.type == &__jule_any_type47) {
			_case_begin_211824c62:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_211824cc8:;
			{
				{
					auto &_match_expr{ (*((*(_25824_st)).cast_ptr<_20d087165_Data>(&__jule_any_type24)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type35) {
						_case_begin_211825eb6:;
						{
							return true;;
						}
					}
					else {
						_case_begin_211825e50:;
						{
							return false;;
						}
					}
					_match_end_211825dea:;
				};
			}
		}
		else {
			_case_begin_211824a42:;
			{
				return false;;
			}
		}
		_match_end_2118249dc:;
	};
}



inline jule::Bool _20d3e323a_stmtIsDef(jule::Any* _27615_st) {
	{
		auto &_match_expr{ (*(_27615_st)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_21182611a:;
			{
				return true;;
			}
		}
		else {
			_case_begin_211825614:;
			{
				return false;;
			}
		}
		_match_end_2118255ae:;
	};
}



inline jule::U64 _20d40ca6d_removeEqFromOp(jule::U64 _213919_op) {
	{
		auto &_match_expr{ _213919_op };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_211826615:;
			{
				return static_cast<jule::U64>(60LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_211827193:;
			{
				return static_cast<jule::U64>(61LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_211827209:;
			{
				return static_cast<jule::U64>(62LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_21182732a:;
			{
				return static_cast<jule::U64>(63LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_211827391:;
			{
				return static_cast<jule::U64>(64LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_211827407:;
			{
				return static_cast<jule::U64>(56LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_21182747e:;
			{
				return static_cast<jule::U64>(57LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_211827506:;
			{
				return static_cast<jule::U64>(67LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_2118275c2:;
			{
				return static_cast<jule::U64>(65LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_211827638:;
			{
				return static_cast<jule::U64>(66LLU);;
			}
		}
		else {
			_case_begin_211826d85:;
			{
				return _213919_op;;
			}
		}
		_match_end_211826d1e:;
	};
}



inline jule::Ptr<_20d458aca_Var> _20d41237a_findVarInPackage(jule::Slice<jule::Ptr<_20d081e40_SymbolTable>>* _4626_files, jule::Str* _4650_ident, jule::Bool _4662_binded) {
	{
		auto expr = _4626_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2119e892a:;
		if (it != expr_end) {
			jule::Ptr<_20d081e40_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_20d458aca_Var> _4817_v = _20d082825_FindVar(_4717_f.ptr(), (*(_4650_ident)), _4662_binded);;
				if ((_4817_v != nullptr)) {
					return _4817_v;;
				};
			}
			_iter_next_2119e892a:;
			++it;
			goto _iter_begin_2119e892a;
		}
		_iter_end_2119e892a:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d4dd49a_TypeAlias> _20d4127ed_findTypeAliasInPackage(jule::Slice<jule::Ptr<_20d081e40_SymbolTable>>* _5832_files, jule::Str* _5856_ident, jule::Bool _5868_binded) {
	{
		auto expr = _5832_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2119e9e8c:;
		if (it != expr_end) {
			jule::Ptr<_20d081e40_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_20d4dd49a_TypeAlias> _6017_ta = _20d082c21_FindTypeAlias(_5917_f.ptr(), (*(_5856_ident)), _5868_binded);;
				if ((_6017_ta != nullptr)) {
					return _6017_ta;;
				};
			}
			_iter_next_2119e9e8c:;
			++it;
			goto _iter_begin_2119e9e8c;
		}
		_iter_end_2119e9e8c:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d38c58b_Struct> _20d412c2c_findStructInPackage(jule::Slice<jule::Ptr<_20d081e40_SymbolTable>>* _7029_files, jule::Str* _7053_ident, jule::Bool _7065_binded) {
	{
		auto expr = _7029_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2119eb4ee:;
		if (it != expr_end) {
			jule::Ptr<_20d081e40_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_20d38c58b_Struct> _7217_s = _20d08311c_FindStruct(_7117_f.ptr(), (*(_7053_ident)), _7065_binded);;
				if ((_7217_s != nullptr)) {
					return _7217_s;;
				};
			}
			_iter_next_2119eb4ee:;
			++it;
			goto _iter_begin_2119eb4ee;
		}
		_iter_end_2119eb4ee:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d3a2b45_Fn> _20d4131d3_findFnInPackage(jule::Slice<jule::Ptr<_20d081e40_SymbolTable>>* _8225_files, jule::Str* _8249_ident, jule::Bool _8261_binded) {
	{
		auto expr = _8225_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2119eca61:;
		if (it != expr_end) {
			jule::Ptr<_20d081e40_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_20d3a2b45_Fn> _8417_f = _20d083518_FindFn(_8317_file.ptr(), (*(_8249_ident)), _8261_binded);;
				if ((_8417_f != nullptr)) {
					return _8417_f;;
				};
			}
			_iter_next_2119eca61:;
			++it;
			goto _iter_begin_2119eca61;
		}
		_iter_end_2119eca61:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d3b5dde_Trait> _20d413524_findTraitInPackage(jule::Slice<jule::Ptr<_20d081e40_SymbolTable>>* _9428_files, jule::Str* _9452_ident) {
	{
		auto expr = _9428_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2119ed15a:;
		if (it != expr_end) {
			jule::Ptr<_20d081e40_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_20d3b5dde_Trait> _9617_t = _20d083859_FindTrait(_9517_f.ptr(), (*(_9452_ident)));;
				if ((_9617_t != nullptr)) {
					return _9617_t;;
				};
			}
			_iter_next_2119ed15a:;
			++it;
			goto _iter_begin_2119ed15a;
		}
		_iter_end_2119ed15a:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d3b85d9_Enum> _20d413898_findEnumInPackage(jule::Slice<jule::Ptr<_20d081e40_SymbolTable>>* _10627_files, jule::Str* _10651_ident) {
	{
		auto expr = _10627_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211a00217:;
		if (it != expr_end) {
			jule::Ptr<_20d081e40_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_20d3b85d9_Enum> _10817_e = _20d083b9a_FindEnum(_10717_f.ptr(), (*(_10651_ident)));;
				if ((_10817_e != nullptr)) {
					return _10817_e;;
				};
			}
			_iter_next_211a00217:;
			++it;
			goto _iter_begin_211a00217;
		}
		_iter_end_211a00217:;
	};
	return nullptr;;
}



inline jule::Ptr<_20d3b9ce4_TypeEnum> _20d413c1c_findTypeEnumInPackage(jule::Slice<jule::Ptr<_20d081e40_SymbolTable>>* _11831_files, jule::Str* _11855_ident) {
	{
		auto expr = _11831_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211a0158c:;
		if (it != expr_end) {
			jule::Ptr<_20d081e40_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_20d3b9ce4_TypeEnum> _12017_e = _20d083edb_FindTypeEnum(_11917_f.ptr(), (*(_11855_ident)));;
				if ((_12017_e != nullptr)) {
					return _12017_e;;
				};
			}
			_iter_next_211a0158c:;
			++it;
			goto _iter_begin_211a0158c;
		}
		_iter_end_211a0158c:;
	};
	return nullptr;;
}



inline jule::Any _20d41425b_defByIdentPackage(jule::Slice<jule::Ptr<_20d081e40_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_binded) {
	{
		auto expr = _12927_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211a02b54:;
		if (it != expr_end) {
			jule::Ptr<_20d081e40_SymbolTable> _13017_file = *it;
			{
				jule::Any _13117_def = _20d084ea9_defByIdent(_13017_file.ptr(), _12951_ident, _12963_binded);;
				if ((_13117_def != nullptr)) {
					return _13117_def;;
				};
			}
			_iter_next_211a02b54:;
			++it;
			goto _iter_begin_211a02b54;
		}
		_iter_end_211a02b54:;
	};
	return nullptr;;
}



inline jule::Bool _20d41a295_isStdPackage(jule::Str* _35518_f, jule::Str _35526_p) {
	return _2248aa0ae_HasPrefix((*(_35518_f)), _22726a241_Join(jule::Slice<jule::Str>::make({_2273c32ab_PathStdlib,_35526_p})));;
}



inline jule::Bool _20d433588_isValidModelForRef(jule::Any* _1328_m) {
	{
		auto &_match_expr{ (*(_1328_m)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_211a137be:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_211a13835:;
			{
				jule::Ptr<_20d399675_StructSubIdentExprModel> _1817_model = (*(_1328_m)).cast_ptr<_20d399675_StructSubIdentExprModel>(&__jule_any_type71);;
				return _20d433588_isValidModelForRef(&((*((*(_1817_model))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_211a1389b:;
			{
				jule::Ptr<_20d398cd4_TraitSubIdentExprModel> _2117_model = (*(_1328_m)).cast_ptr<_20d398cd4_TraitSubIdentExprModel>(&__jule_any_type70);;
				return _20d433588_isValidModelForRef(&((*(_2117_model))._field_Expr));;
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_211a13912:;
			{
				jule::Ptr<_20d394ecd_UnaryExprModel> _2417_unary = (*(_1328_m)).cast_ptr<_20d394ecd_UnaryExprModel>(&__jule_any_type72);;
				if (((*((*(_2417_unary))._field_Op))._field_Id != static_cast<jule::U64>(62LLU))) {
					return false;;
				};
				if ((_20d4e21a2_Ptr((*((*(_2417_unary))._field_Expr))._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_20d4e1e1b_Sptr((*((*(_2417_unary))._field_Expr))._field_Kind.ptr()) == nullptr)) {
					return false;;
				};
				return _20d433588_isValidModelForRef(&((*((*(_2417_unary))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_211a13758:;
			{
				return false;;
			}
		}
		_match_end_211a132e6:;
	};
}



inline _22730be5e_Log _20d433ab6_compilerErr(jule::Ptr<_20d3510bb_Token>* _4217_token, jule::Bool _4232_line, jule::Str _4244_fmt, jule::Slice<jule::Any> _4257_args) {
	_22730be5e_Log _4313_log = _22730be5e_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_4217_token))))._field_Row, ._field_Column=(*((*(_4217_token))))._field_Column, ._field_Path=(*((*((*(_4217_token))))._field_File))._field_Path, ._field_Text=_22730c3c1_Logf(_4244_fmt, _4257_args), };;
	if (_4232_line) {
		_4313_log._field_Line=_20d357864_GetRow((*((*(_4217_token))))._field_File.ptr(), (*((*(_4217_token))))._field_Row);
	};
	return _4313_log;;
}



inline jule::Bool _20d433e3a_impIsLookupable(jule::Ptr<_20d414d94_ImportInfo>* _5621_i, jule::Str* _5638_ident) {
	if ((*((*(_5621_i))))._field_Binded) {
		return false;;
	};
	if ((!((*((*(_5621_i))))._field_ImportAll))) {
		if (((*((*(_5621_i))))._field_Selected.len() > 0LL)) {
			return _20d417726_existIdent((*(_5621_i)).ptr(), (*(_5638_ident)));;
		};
	};
	return (*((*(_5621_i))))._field_ImportAll;;
}



inline void _20d4341e3_appendRetVars(jule::Slice<jule::Ptr<_20d458aca_Var>>* _6823_dest, jule::Ptr<_20d3a5a49_FnIns>* _6842_f) {
	if ((_20d3a30b8_IsVoid((*((*(_6842_f))))._field_Decl.ptr()) || ((*((*(_6842_f))))._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_20d4de28c_TypeKind>> _7313_types = _20d3a6c48_Types((*(_6842_f)).ptr());;
	{
		auto expr = &((*((*((*((*(_6842_f))))._field_Decl))._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211a1da0a:;
		if (it != expr_end) {
			jule::I64 _7410_i = it - expr->begin();
			jule::Ptr<_20d3510bb_Token> _7417_ident = *it;
			{
				if ((_20d353a2a_IsIgnoreIdent((*(_7417_ident))._field_Kind) || _20d353ce4_IsAnonIdent((*(_7417_ident))._field_Kind))) {
					goto _iter_next_211a1da0a;
				};
				{ jule::Slice<jule::Ptr<_20d458aca_Var>> &__jule_push_dest = (*(_6823_dest)); __jule_push_dest.push(jule::new_ptr<_20d458aca_Var>(_20d458aca_Var{._field_Scope=(*((*(_6842_f))))._field_Scope, ._field_Token=_7417_ident, ._field_Ident=(*(_7417_ident))._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_20d4e6706_TypeSymbol>(_20d4e6706_TypeSymbol{._field_Kind=_7313_types[_7410_i]}), ._field_Value=jule::new_ptr<_20d0882a9_Value>(_20d0882a9_Value{._field_Data=jule::new_ptr<_20d087165_Data>()}), ._field_RetOrder=_7410_i, })); };
			}
			_iter_next_211a1da0a:;
			++it;
			_7410_i++;
			goto _iter_begin_211a1da0a;
		}
		_iter_end_211a1da0a:;
	};
	if ((((*((*((*((*(_6842_f))))._field_Decl))._field_Result))._field_Idents.len() == 1LL) && ((*(_6823_dest)).len() == 1LL))) {
		(*((*(_6823_dest))[((*(_6823_dest)).len() - 1LL)]))._field_RetOrder=-1LL;
	};
}



inline void _20d4344ce_appendParamVars(jule::Slice<jule::Ptr<_20d458aca_Var>>* _9825_dest, jule::Ptr<_20d3a5a49_FnIns>* _9844_f) {
	if (((*((*(_9844_f))))._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_9844_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211a2326d:;
		if (it != expr_end) {
			jule::Ptr<_20d3a4a9d_ParamIns> _10317_p = *it;
			{
				if ((_20d353a2a_IsIgnoreIdent((*((*(_10317_p))._field_Decl))._field_Ident) || _20d353ce4_IsAnonIdent((*((*(_10317_p))._field_Decl))._field_Ident))) {
					goto _iter_next_211a2326d;
				};
				jule::Ptr<_20d458aca_Var> _10817_v = jule::new_ptr<_20d458aca_Var>(_20d458aca_Var{._field_Scope=(*((*(_9844_f))))._field_Scope, ._field_Token=(*((*(_10317_p))._field_Decl))._field_Token, ._field_Ident=(*((*(_10317_p))._field_Decl))._field_Ident, ._field_Mutable=(*((*(_10317_p))._field_Decl))._field_Mutable, ._field_Used=true, ._field_Reference=(*((*(_10317_p))._field_Decl))._field_Reference, ._field_Kind=jule::new_ptr<_20d4e6706_TypeSymbol>(), ._field_Value=jule::new_ptr<_20d0882a9_Value>(_20d0882a9_Value{._field_Data=jule::new_ptr<_20d087165_Data>()}), });;
				{
					
					if (_20d3a178c_IsSelf((*(_10317_p))._field_Decl.ptr())) {
						_case_begin_211a27e65:;
						{
							(*((*(_10817_v))._field_Kind))._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_20d4ddcd6_Kind>((*((*(_9844_f))))._field_Owner, 0)});
							(*(_10817_v))._field_Reference=(!(_20d3a1a23_IsRef((*(_10317_p))._field_Decl.ptr())));
							if (_20d3a1a23_IsRef((*(_10317_p))._field_Decl.ptr())) {
								(*(_10817_v))._field_Ident=(*(_10817_v))._field_Ident.slice(1LL);
								(*((*((*(_10817_v))._field_Kind))._field_Kind))._field_Kind=jule::Trait<_20d4ddcd6_Kind>(jule::new_ptr<_20d4eab39_Sptr>(_20d4eab39_Sptr{._field_Elem=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_BindIdent=(*((*((*(_10817_v))._field_Kind))._field_Kind))._field_BindIdent, ._field_Kind=(*((*((*(_10817_v))._field_Kind))._field_Kind))._field_Kind})}), 21);
							};
						}
					}
					else if ((*((*(_10317_p))._field_Decl))._field_Variadic) {
						_case_begin_211a27937:;
						{
							(*((*(_10817_v))._field_Kind))._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_20d4ddcd6_Kind>(jule::new_ptr<_20d4eb60c_Slc>(_20d4eb60c_Slc{._field_Elem=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_BindIdent=(*((*(_10317_p))._field_Kind))._field_BindIdent, ._field_Kind=(*((*(_10317_p))._field_Kind))._field_Kind})}), 22)});
						}
					}
					else {
						_case_begin_211a275d5:;
						{
							(*((*(_10817_v))._field_Kind))._field_Kind=(*(_10317_p))._field_Kind;
						}
					}
					_match_end_211a274b4:;
				};
				{ jule::Slice<jule::Ptr<_20d458aca_Var>> &__jule_push_dest = (*(_9825_dest)); __jule_push_dest.push(_10817_v); };
			}
			_iter_next_211a2326d:;
			++it;
			goto _iter_begin_211a2326d;
		}
		_iter_end_211a2326d:;
	};
}



inline void _20d4347ba_appendGenericTypeAliases(jule::Slice<jule::Ptr<_20d4dd49a_TypeAlias>>* _15834_dest, jule::Ptr<_20d3a5a49_FnIns>* _15859_f) {
	jule::I64 _15913_size = (*((*(_15859_f))))._field_Generics.len();;
	if (((*((*((*(_15859_f))))._field_Decl))._field_Owner != nullptr)) {
		_15913_size+=(*((*((*((*(_15859_f))))._field_Decl))._field_Owner))._field_Generics.len();
	};
	if ((_15913_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_15859_f))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211a30896:;
		if (it != expr_end) {
			jule::I64 _16810_i = it - expr->begin();
			jule::Ptr<_20d4dc8a6_InsGeneric> _16817_g = *it;
			{
				jule::Ptr<_20d378ba4_GenericDecl> _16917_decl = (*((*((*(_15859_f))))._field_Decl))._field_Generics[_16810_i];;
				{ jule::Slice<jule::Ptr<_20d4dd49a_TypeAlias>> &__jule_push_dest = (*(_15834_dest)); __jule_push_dest.push(jule::new_ptr<_20d4dd49a_TypeAlias>(_20d4dd49a_TypeAlias{._field_Scope=(*((*((*(_15859_f))))._field_Decl))._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=(*(_16917_decl))._field_Token, ._field_Ident=(*(_16917_decl))._field_Ident, ._field_Kind=jule::new_ptr<_20d4e6706_TypeSymbol>(_20d4e6706_TypeSymbol{._field_Kind=(*(_16817_g))._field_Kind}), })); };
			}
			_iter_next_211a30896:;
			++it;
			_16810_i++;
			goto _iter_begin_211a30896;
		}
		_iter_end_211a30896:;
	};
	if (((*((*((*(_15859_f))))._field_Decl))._field_Owner != nullptr)) {
		jule::Ptr<_20d39066b_StructIns> _18117_owner = (*((*(_15859_f))))._field_Owner;;
		{
			auto expr = &((*(_18117_owner))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_211a320c3:;
			if (it != expr_end) {
				jule::I64 _18214_i = it - expr->begin();
				jule::Ptr<_20d4dc8a6_InsGeneric> _18221_g = *it;
				{
					jule::Ptr<_20d378ba4_GenericDecl> _18321_decl = (*((*(_18117_owner))._field_Decl))._field_Generics[_18214_i];;
					{ jule::Slice<jule::Ptr<_20d4dd49a_TypeAlias>> &__jule_push_dest = (*(_15834_dest)); __jule_push_dest.push(jule::new_ptr<_20d4dd49a_TypeAlias>(_20d4dd49a_TypeAlias{._field_Scope=(*((*((*(_15859_f))))._field_Decl))._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=(*(_18321_decl))._field_Token, ._field_Ident=(*(_18321_decl))._field_Ident, ._field_Kind=jule::new_ptr<_20d4e6706_TypeSymbol>(_20d4e6706_TypeSymbol{._field_Kind=(*(_18221_g))._field_Kind}), })); };
				}
				_iter_next_211a320c3:;
				++it;
				_18214_i++;
				goto _iter_begin_211a320c3;
			}
			_iter_end_211a320c3:;
		};
	};
}



inline jule::Ptr<_20d081e40_SymbolTable> _20d434b3e_findFile(jule::Slice<jule::Ptr<_20d081e40_SymbolTable>>* _19618_files, jule::Ptr<_20d356885_File>* _19642_handler) {
	{
		auto expr = _19618_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211a3546c:;
		if (it != expr_end) {
			jule::Ptr<_20d081e40_SymbolTable> _19717_fl = *it;
			{
				if (((*(_19717_fl))._field_File == (*(_19642_handler)))) {
					return _19717_fl;;
				};
			}
			_iter_next_211a3546c:;
			++it;
			goto _iter_begin_211a3546c;
		}
		_iter_end_211a3546c:;
	};
	return nullptr;;
}



inline void _20d4350e5_pushSuggestion(_22730be5e_Log* _20530_log, jule::Str _20541_fmt, jule::Slice<jule::Any> _20554_args) {
	(*(_20530_log))._field_Suggestion=_22730c3c1_Logf(_20541_fmt, _20554_args);
}



inline void _20d456db4_pushImplemented(jule::Ptr<_20d3b5dde_Trait> _291824_t, jule::Ptr<_20d38c58b_Struct>* _291840_d) {
	_julec_label_211a3843c:;
	{
		
		if (((*(_291824_t))._field_Implemented.len() > 0LL)) {
			_case_begin_211a38b35:;
			{
				{
					auto expr = &((*(_291824_t))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_211a39949:;
					if (it != expr_end) {
						jule::Ptr<_20d38c58b_Struct> _292216_s = *it;
						{
							if ((_292216_s == (*(_291840_d)))) {
								goto _match_end_211a3865c;
							};
						}
						_iter_next_211a39949:;
						++it;
						goto _iter_begin_211a39949;
					}
					_iter_end_211a39949:;
				};
				goto _case_begin_211a386c3;
			}
		}
		else {
			_case_begin_211a386c3:;
			{
				{ jule::Slice<jule::Ptr<_20d38c58b_Struct>> &__jule_push_dest = (*(_291824_t))._field_Implemented; __jule_push_dest.push((*(_291840_d))); };
			}
		}
		_match_end_211a3865c:;
	};
	{
		auto expr = &((*(_291824_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211a3a362:;
		if (it != expr_end) {
			jule::Ptr<_20d4e6706_TypeSymbol> _293117_i = *it;
			{
				_20d456db4_pushImplemented(_20d4e348e_Trait((*(_293117_i))._field_Kind.ptr()), _291840_d);
			}
			_iter_next_211a3a362:;
			++it;
			goto _iter_begin_211a3a362;
		}
		_iter_end_211a3a362:;
	};
}



inline void _20d4571a0_pushImplements(jule::Ptr<_20d38c58b_Struct>* _293624_s, jule::Ptr<_20d3b5dde_Trait> _293640_t) {
	_julec_label_211a3b3eb:;
	{
		
		if (((*((*(_293624_s))))._field_Implements.len() > 0LL)) {
			_case_begin_211a3bae4:;
			{
				{
					auto expr = &((*((*(_293624_s))))._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_211a3c908:;
					if (it != expr_end) {
						jule::Ptr<_20d3b5dde_Trait> _294016_b = *it;
						{
							if ((_294016_b == _293640_t)) {
								goto _match_end_211a3b61b;
							};
						}
						_iter_next_211a3c908:;
						++it;
						goto _iter_begin_211a3c908;
					}
					_iter_end_211a3c908:;
				};
				goto _case_begin_211a3b682;
			}
		}
		else {
			_case_begin_211a3b682:;
			{
				{ jule::Slice<jule::Ptr<_20d3b5dde_Trait>> &__jule_push_dest = (*((*(_293624_s))))._field_Implements; __jule_push_dest.push(_293640_t); };
			}
		}
		_match_end_211a3b61b:;
	};
	{
		auto expr = &((*(_293640_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211a3d321:;
		if (it != expr_end) {
			jule::Ptr<_20d4e6706_TypeSymbol> _294917_i = *it;
			{
				_20d4571a0_pushImplements(_293624_s, _20d4e348e_Trait((*(_294917_i))._field_Kind.ptr()));
			}
			_iter_next_211a3d321:;
			++it;
			goto _iter_begin_211a3d321;
		}
		_iter_end_211a3d321:;
	};
}



inline jule::Bool _20d06c9a8_traitHasReferenceReceiver(jule::Ptr<_20d3b5dde_Trait>* _2731_t) {
	{
		auto expr = &((*((*(_2731_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211cdc878:;
		if (it != expr_end) {
			jule::Ptr<_20d3a2b45_Fn> *_2812_f = it;
			{
				if ((*((*(_2812_f))))._field_Statically) {
					goto _iter_next_211cdc878;
				};
				jule::Ptr<_20d3a1171_Param> _3413_p = (*((*(_2812_f))))._field_Params[0LL];;
				if ((_20d3a1a23_IsRef(_3413_p.ptr()) && _20d3a178c_IsSelf(_3413_p.ptr()))) {
					return true;;
				};
			}
			_iter_next_211cdc878:;
			++it;
			goto _iter_begin_211cdc878;
		}
		_iter_end_211cdc878:;
	};
	return false;;
}



inline jule::Bool _20d06cd3d_floatAssignable(jule::Str* _4221_kind, jule::Ptr<_20d087165_Data>* _4233_d) {
	jule::Str _439_value = _20b038789_FmtFloat(static_cast<jule::F64>(_20b0682ad_AsF64((*((*(_4233_d))))._field_Constant.ptr())), 'g', -1LL, 64LL);;
	return _20b058c1b_CheckBitFloat(_439_value, static_cast<jule::I64>(_20b0576ed_BitsizeOf((*(_4221_kind)))));;
}



inline jule::Bool _20d06d1b2_sigAssignable(jule::Str _4718_kind, jule::Ptr<_20d087165_Data>* _4730_d) {
	jule::F64 _489_min = _20b05de30_Min(_4718_kind);;
	jule::F64 _499_max = _20b05e1e9_Max(_4718_kind);;
	{
		
		if (_20b06a106_IsF64((*((*(_4730_d))))._field_Constant.ptr())) {
			_case_begin_211ce1a7a:;
			{
				jule::F64 _5213_x = _20b067a0a_ReadF64((*((*(_4730_d))))._field_Constant.ptr());;
				jule::F64 _5314_i = 0;;
				jule::F64 _5317_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _20b00d94b_Modf(_5213_x);
					_5314_i = __jule_assign_result.__jule_result_arg0;
					_5317_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_5317_frac != 0LL)) {
					return false;;
				};
				return ((_5314_i >= _489_min) && (_5314_i <= _499_max));;
			}
		}
		else if (_20b069853_IsU64((*((*(_4730_d))))._field_Constant.ptr())) {
			_case_begin_211ce1b02:;
			{
				jule::F64 _5913_x = _20b0682ad_AsF64((*((*(_4730_d))))._field_Constant.ptr());;
				if ((_5913_x <= _499_max)) {
					return true;;
				};
			}
		}
		else if (_20b0695bc_IsI64((*((*(_4730_d))))._field_Constant.ptr())) {
			_case_begin_211ce1b79:;
			{
				jule::F64 _6413_x = _20b0682ad_AsF64((*((*(_4730_d))))._field_Constant.ptr());;
				return ((_489_min <= _6413_x) && (_6413_x <= _499_max));;
			}
		}
		_match_end_211ce1948:;
	};
	return false;;
}



inline jule::Bool _20d06d57a_unsigAssignable(jule::Str _7020_kind, jule::Ptr<_20d087165_Data>* _7032_d) {
	jule::F64 _719_max = _20b05e1e9_Max(_7020_kind);;
	if (((*((*(_7032_d))))._field_IsRune && _7020_kind.equal("u8", 2))) {
		return _20d05374c_IsAscii(static_cast<jule::I32>(static_cast<jule::I32>(_20b066ec1_ReadI64((*((*(_7032_d))))._field_Constant.ptr()))));;
	};
	{
		
		if (_20b06a106_IsF64((*((*(_7032_d))))._field_Constant.ptr())) {
			_case_begin_211ce75db:;
			{
				jule::F64 _7813_x = _20b067a0a_ReadF64((*((*(_7032_d))))._field_Constant.ptr());;
				if ((_7813_x < 0LL)) {
					return false;;
				};
				jule::F64 _8214_i = 0;;
				jule::F64 _8217_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _20b00d94b_Modf(_7813_x);
					_8214_i = __jule_assign_result.__jule_result_arg0;
					_8217_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_8217_frac != 0LL)) {
					return false;;
				};
				return (_8214_i <= _719_max);;
			}
		}
		else if (_20b069853_IsU64((*((*(_7032_d))))._field_Constant.ptr())) {
			_case_begin_211ce7652:;
			{
				jule::F64 _8813_x = _20b0682ad_AsF64((*((*(_7032_d))))._field_Constant.ptr());;
				if ((_8813_x <= _719_max)) {
					return true;;
				};
			}
		}
		else if (_20b0695bc_IsI64((*((*(_7032_d))))._field_Constant.ptr())) {
			_case_begin_211ce76b8:;
			{
				jule::F64 _9313_x = _20b0682ad_AsF64((*((*(_7032_d))))._field_Constant.ptr());;
				return ((0LL <= _9313_x) && (_9313_x <= _719_max));;
			}
		}
		_match_end_211ce6ca0:;
	};
	return false;;
}



inline jule::Bool _20d06d8ee_intAssignable(jule::Str _9918_kind, jule::Ptr<_20d087165_Data>* _9930_d) {
	{
		
		if (_20b064441_IsSigInt(_9918_kind)) {
			_case_begin_211cec2a0:;
			{
				return _20d06d1b2_sigAssignable(_9918_kind, _9930_d);;
			}
		}
		else if (_20b06474e_IsUnsigInt(_9918_kind)) {
			_case_begin_211cec327:;
			{
				return _20d06d57a_unsigAssignable(_9918_kind, _9930_d);;
			}
		}
		else {
			_case_begin_211cebc0b:;
			{
				return false;;
			}
		}
		_match_end_211ceae5d:;
	};
}



inline void _20d07a0ae_checkMutRiskOfStructLit(jule::Ptr<_20d435de8_Sema>* _94433_s, jule::Ptr<_20d3958a2_StructLitExprModel>* _94444_m) {
	{
		auto expr = &((*((*(_94444_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211cecb0d:;
		if (it != expr_end) {
			jule::Ptr<_20d39550b_StructArgExprModel> *_94512_arg = it;
			{
				if ((*((*((*((*(_94512_arg))))._field_Field))._field_Decl))._field_Mutable) {
					goto _iter_next_211cecb0d;
				};
				if (((!((*((*((*(_94512_arg))))._field_Expr))._field_Mutable)) && _20d4e0b2e_Mutable((*((*((*(_94512_arg))))._field_Expr))._field_Kind.ptr()))) {
					_20d438a33_pushErr((*(_94433_s)).ptr(), (*((*(_94512_arg))))._field_Token, jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*((*((*(_94512_arg))))._field_Expr))._field_Kind.ptr()), &__jule_any_type4)}));
				};
			}
			_iter_next_211cecb0d:;
			++it;
			goto _iter_begin_211cecb0d;
		}
		_iter_end_211cecb0d:;
	};
}



inline jule::Ptr<_20d4de28c_TypeKind> _20d080b53_lenKind(void) {
	return _20d5637b7_primInt;;
}



inline jule::Bool _20d080ea5_isGoodValueToInfer(jule::Ptr<_20d087165_Data>* _140824_d) {
	return (!(_20d08751c_IsNil((*(_140824_d)).ptr())));;
}



inline jule::Ptr<_20d36adb6_Directive> _20d4d76a3_findDirective(jule::Slice<jule::Ptr<_20d36adb6_Directive>>* _419523_directives, jule::Str _419554_d) {
	{
		auto expr = _419523_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211e36ecd:;
		if (it != expr_end) {
			jule::Ptr<_20d36adb6_Directive> _419617_dr = *it;
			{
				if (((*((*(_419617_dr))._field_Tag))._field_Kind == _419554_d)) {
					return _419617_dr;;
				};
			}
			_iter_next_211e36ecd:;
			++it;
			goto _iter_begin_211e36ecd;
		}
		_iter_end_211e36ecd:;
	};
	return nullptr;;
}



inline jule::Any _20d4d7a6b_findBuiltinsImport(jule::Str* _420424_ident, jule::Ptr<_20d414d94_ImportInfo> _420436_imp) {
	return _20d567018_findPackageBuiltinDef(&((*(_420436_imp))._field_LinkPath), _420424_ident);;
}



inline void _20d4d7c9c_fitBitsize(jule::Ptr<_20d087165_Data>* _421120_d) {
	jule::Ptr<_20d4e710d_Prim> _421213_prim = _20d4e1b85_Prim((*((*(_421120_d))))._field_Kind.ptr());;
	jule::I64 _42139_z = _20b0576ed_BitsizeOf(_20d4e744e_Str(_421213_prim.ptr()));;
	if ((_42139_z == 64LLU)) {
		return;;
	};
	jule::I64 _421813_k = 0LL;;
	{
		
		if (_20b0695bc_IsI64((*((*(_421120_d))))._field_Constant.ptr())) {
			_case_begin_211e3aa09:;
			{
				_421813_k=static_cast<jule::I64>(_20b05929e_BitsizeOfInt(static_cast<jule::I64>(_20b066ec1_ReadI64((*((*(_421120_d))))._field_Constant.ptr()))));
				if ((_421813_k > _42139_z)) {
					(*((*((*(_421120_d))))._field_Constant))._field_Kind=_20b057a3e_IntFromBits(_421813_k);
					(*((*(_421120_d))))._field_Kind=(*((*(_20d565bd7_findBuiltinTypeAlias((*((*((*(_421120_d))))._field_Constant))._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_20b069853_IsU64((*((*(_421120_d))))._field_Constant.ptr())) {
			_case_begin_211e3aa81:;
			{
				_421813_k=static_cast<jule::I64>(_20b059568_BitsizeOfUint(static_cast<jule::U64>(_20b067257_ReadU64((*((*(_421120_d))))._field_Constant.ptr()))));
				if ((_421813_k > _42139_z)) {
					(*((*((*(_421120_d))))._field_Constant))._field_Kind=_20b057d08_UintFromBits(_421813_k);
					(*((*(_421120_d))))._field_Kind=(*((*(_20d565bd7_findBuiltinTypeAlias((*((*((*(_421120_d))))._field_Constant))._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_20b06a106_IsF64((*((*(_421120_d))))._field_Constant.ptr())) {
			_case_begin_211e3ab08:;
			{
				_421813_k=static_cast<jule::I64>(_20b058ed5_BitsizeOfFloat(static_cast<jule::F64>(_20b067a0a_ReadF64((*((*(_421120_d))))._field_Constant.ptr()))));
				if ((_421813_k > _42139_z)) {
					(*((*((*(_421120_d))))._field_Constant))._field_Kind=_20b0580c2_FloatFromBits(_421813_k);
					(*((*(_421120_d))))._field_Kind=(*((*(_20d565bd7_findBuiltinTypeAlias((*((*((*(_421120_d))))._field_Constant))._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		_match_end_211e3a93d:;
	};
}



inline void _20d4d80cc_makeStructLitAlloc(jule::Ptr<_20d087165_Data>* _424128_d, jule::Ptr<_20d3958a2_StructLitExprModel>* _424143_lit) {
	(*((*(_424128_d))))._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(jule::new_ptr<_20d4eab39_Sptr>(_20d4eab39_Sptr{._field_Elem=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>((*((*(_424143_lit))))._field_Strct, 0)})}), 21)});
	(*((*(_424128_d))))._field_Model=jule::Any(jule::new_ptr<_20d395b9e_AllocStructLitExprModel>(_20d395b9e_AllocStructLitExprModel{._field_Lit=(*(_424143_lit))}), &__jule_any_type113);
}



inline jule::Ptr<_20d458aca_Var> _20d4d8451_buildErrorVar(jule::Ptr<_20d3e369c_Scope>* _425223_s, jule::Ptr<_20d374a07_FnCallExpr>* _425239_fc) {
	return jule::new_ptr<_20d458aca_Var>(_20d458aca_Var{._field_Scope=(*(_425223_s)), ._field_Token=(*((*(_425239_fc))))._field_Token, ._field_Ident=jule::Str("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=(*(_20d565bd7_findBuiltinTypeAlias(jule::Str("any", 3))))._field_Kind, ._field_Value=jule::new_ptr<_20d0882a9_Value>(_20d0882a9_Value{._field_Data=jule::new_ptr<_20d087165_Data>()}), });;
}



inline jule::Any _20d4d87c5_findBuiltinsSema(jule::Str* _426722_ident, jule::Ptr<_20d435de8_Sema> _426738_s) {
	{
		auto expr = &((*((*(_426738_s))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211e45b9b:;
		if (it != expr_end) {
			jule::Ptr<_20d414d94_ImportInfo> _426817_imp = *it;
			{
				if (((*(_426817_imp))._field_ImportAll || _20d417726_existIdent(_426817_imp.ptr(), (*(_426722_ident))))) {
					jule::Any _427021_def = _20d4d7a6b_findBuiltinsImport(_426722_ident, _426817_imp);;
					if ((_427021_def != nullptr)) {
						return _427021_def;;
					};
				};
			}
			_iter_next_211e45b9b:;
			++it;
			goto _iter_begin_211e45b9b;
		}
		_iter_end_211e45b9b:;
	};
	jule::Str _427813_ppath = _20d357006_Dir((*((*(_426738_s))._field_file))._field_File.ptr());;
	if (_2248aa0ae_HasPrefix(_427813_ppath, _2273c32ab_PathStdlib)) {
		(_427813_ppath).mut_slice(_2273c32ab_PathStdlib.len());;
		_427813_ppath=(jule::Str("std", 3) + _2248b168c_Replace(_427813_ppath, jule::Str("\\", 1), jule::Str("::", 2), -1LL));
		return _20d567018_findPackageBuiltinDef(&(_427813_ppath), _426722_ident);;
	};
	return nullptr;;
}



inline jule::Bool _20d4d8a8e_isOkForShifting(jule::Ptr<_20d087165_Data>* _429225_d) {
	if (_20d087a39_IsConst((*(_429225_d)).ptr())) {
		{
			
			if (_20b0695bc_IsI64((*((*(_429225_d))))._field_Constant.ptr())) {
				_case_begin_211e49573:;
				{
					return (_20b066ec1_ReadI64((*((*(_429225_d))))._field_Constant.ptr()) >= 0LL);;
				}
			}
			else if (_20b069853_IsU64((*((*(_429225_d))))._field_Constant.ptr())) {
				_case_begin_211e495ea:;
				{
					return true;;
				}
			}
			else if (_20b06a106_IsF64((*((*(_429225_d))))._field_Constant.ptr())) {
				_case_begin_211e49672:;
				{
					return (_20b067a0a_ReadF64((*((*(_429225_d))))._field_Constant.ptr()) >= 0LL);;
				}
			}
			else {
				_case_begin_211e49496:;
				{
					return false;;
				}
			}
			_match_end_211e493db:;
		};
	};
	jule::Ptr<_20d4e710d_Prim> _43059_prim = _20d4e1b85_Prim((*((*(_429225_d))))._field_Kind.ptr());;
	return ((_43059_prim != nullptr) && _20b064a18_IsInt(_20d4e744e_Str(_43059_prim.ptr())));;
}



inline jule::Bool _20d4d8e68_isInstancedStruct(jule::Ptr<_20d39066b_StructIns> _430922_s) {
	return ((*((*(_430922_s))._field_Decl))._field_Generics.len() == (*(_430922_s))._field_Generics.len());;
}



inline jule::Bool _20d4d92dc_isPtrArithmeticCompatible(jule::Ptr<_20d087165_Data>* _431335_l, jule::Ptr<_20d087165_Data>* _431350_r) {
	jule::Ptr<_20d4ee401_Ptr> _43149_ptr = _20d4e21a2_Ptr((*((*(_431350_r))))._field_Kind.ptr());;
	if ((_43149_ptr != nullptr)) {
		return _20d4de996_Equal((*(_20d4e21a2_Ptr((*((*(_431335_l))))._field_Kind.ptr())))._field_Elem, (*(_43149_ptr))._field_Elem);;
	};
	if (_20d087a39_IsConst((*(_431350_r)).ptr())) {
		return _20d06d8ee_intAssignable(jule::Str("int", 3), _431350_r);;
	};
	_20d06ddd8_typeCompatibilityChecker _432113_tcc = _20d06ddd8_typeCompatibilityChecker{._field_dest=_20d5637b7_primInt, ._field_src=(*((*(_431350_r))))._field_Kind, };;
	return _20d07059e_check(&_432113_tcc);;
}



inline void _20d4d95c8_applyCastKindModel(jule::Ptr<_20d087165_Data>* _432828_d, jule::Ptr<_20d4de28c_TypeKind>* _432843_t) {
	(*((*(_432828_d))))._field_Model=jule::Any(jule::new_ptr<_20d396232_CastingExprModel>(_20d396232_CastingExprModel{._field_Expr=(*((*(_432828_d))))._field_Model, ._field_Kind=(*(_432843_t)), ._field_ExprKind=(*((*(_432828_d))))._field_Kind}), &__jule_any_type96);
}



inline void _20d4d98b4_applyCastKind(jule::Ptr<_20d087165_Data>* _433623_d, jule::Ptr<_20d4de28c_TypeKind>* _433638_t) {
	_20d4d95c8_applyCastKindModel(_433623_d, _433638_t);
	(*((*(_433623_d))))._field_Kind=(*(_433638_t));
}



inline jule::Ptr<_20d087165_Data> _20d4d9ac3_buildVoidData(void) {
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d5624b9_primVoid, });;
}



inline jule::Str _20d4d9d8c_checkDataForIntegerIndexing(jule::Ptr<_20d087165_Data>* _434737_d) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_434737_d)) == nullptr)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	{
		
		if ((_20d4e1b85_Prim((*((*(_434737_d))))._field_Kind.ptr()) == nullptr)) {
			_case_begin_211e5367b:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if ((!(_20b064a18_IsInt(_20d4e744e_Str(_20d4e1b85_Prim((*((*(_434737_d))))._field_Kind.ptr()).ptr()))))) {
			_case_begin_211e536e2:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if (_20d087a39_IsConst((*(_434737_d)).ptr())) {
			_case_begin_211e53758:;
			{
				if ((_20b0682ad_AsF64((*((*(_434737_d))))._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = jule::Str("overflow the limit of data-type", 31);
					return __jule_func_result;;
				};
			}
		}
		else if ((_20d4e1b85_Prim((*((*(_434737_d))))._field_Kind.ptr()) == nullptr) || _20d087a39_IsConst((*(_434737_d)).ptr()) || (_20b057434_RealKindOf(_20d4e744e_Str(_20d4e1b85_Prim((*((*(_434737_d))))._field_Kind.ptr()).ptr())) != _20b057434_RealKindOf(jule::Str("int", 3)))) {
			_case_begin_211e537d0:;
			{
				_20d4d98b4_applyCastKind(_434737_d, &(_20d5637b7_primInt));
			}
		}
		_match_end_211e53329:;
	};
	__jule_func_result = jule::Str();
	return __jule_func_result;;
}



inline void _20d4da178_applyCastModelByEnum(jule::Ptr<_20d087165_Data>* _437230_d, jule::Ptr<_20d3b85d9_Enum> _437244_e) {
	if ((_437244_e == nullptr)) {
		return;;
	};
	jule::Ptr<_20d4e710d_Prim> _43769_p = _20d4e1b85_Prim((*((*(_437244_e))._field_Kind))._field_Kind.ptr());;
	if (_20d4ea595_IsStr(_43769_p.ptr())) {
		return;;
	};
	_20d4d95c8_applyCastKindModel(_437230_d, &((*((*(_437244_e))._field_Kind))._field_Kind));
}



inline void _20d4da464_castConstByType(jule::Str* _438321_t, jule::Ptr<_20d087165_Data>* _438334_d) {
	{
		
		if (_20b064441_IsSigInt((*(_438321_t)))) {
			_case_begin_211e593da:;
			{
				{
					auto _match_expr{ _20b0576ed_BitsizeOf(_20b057434_RealKindOf((*(_438321_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_211e5a045:;
						{
							_20b068566_SetI64((*((*(_438334_d))))._field_Constant.ptr(), static_cast<jule::I64>(_20b067c91_AsI64((*((*(_438334_d))))._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_211e5a0ab:;
						{
							_20b068566_SetI64((*((*(_438334_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_20b067c91_AsI64((*((*(_438334_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_211e5a122:;
						{
							_20b068566_SetI64((*((*(_438334_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_20b067c91_AsI64((*((*(_438334_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_211e5a188:;
						{
							_20b068566_SetI64((*((*(_438334_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_20b067c91_AsI64((*((*(_438334_d))))._field_Constant.ptr())))));
						}
					}
					_match_end_211e59c04:;
				};
			}
		}
		else if (_20b06474e_IsUnsigInt((*(_438321_t)))) {
			_case_begin_211e59462:;
			{
				{
					auto _match_expr{ _20b0576ed_BitsizeOf(_20b057434_RealKindOf((*(_438321_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_211e5e115:;
						{
							_20b06881e_SetU64((*((*(_438334_d))))._field_Constant.ptr(), static_cast<jule::U64>(_20b068027_AsU64((*((*(_438334_d))))._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_211e5e17b:;
						{
							_20b06881e_SetU64((*((*(_438334_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_20b068027_AsU64((*((*(_438334_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_211e5e1e2:;
						{
							_20b06881e_SetU64((*((*(_438334_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_20b068027_AsU64((*((*(_438334_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_211e5e258:;
						{
							_20b06881e_SetU64((*((*(_438334_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_20b068027_AsU64((*((*(_438334_d))))._field_Constant.ptr())))));
						}
					}
					_match_end_211e59990:;
				};
			}
		}
		else if (_20b064d59_IsFloat((*(_438321_t)))) {
			_case_begin_211e594d9:;
			{
				{
					auto _match_expr{ _20b0576ed_BitsizeOf(_20b057434_RealKindOf((*(_438321_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_211e63180:;
						{
							_20b069138_SetF64((*((*(_438334_d))))._field_Constant.ptr(), static_cast<jule::F64>(_20b0682ad_AsF64((*((*(_438334_d))))._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_211e63207:;
						{
							_20b069138_SetF64((*((*(_438334_d))))._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_20b0682ad_AsF64((*((*(_438334_d))))._field_Constant.ptr())))));
						}
					}
					_match_end_211e5e610:;
				};
			}
		}
		_match_end_211e592b9:;
	};
}



inline void _20d4da909_updateModelToGenericIns(jule::Any* _441733_m, jule::Ptr<_20d3a5a49_FnIns>* _441752_f) {
	{
		auto &_match_expr{ (*(_441733_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_211e621b2:;
			{
				(*(_441733_m))=jule::Any((*(_441752_f)), &__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_211e63526:;
			{
				(*((*(_441733_m)).cast_ptr<_20d399675_StructSubIdentExprModel>(&__jule_any_type71)))._field_Method=(*(_441752_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_211e6358c:;
			{
				(*((*(_441733_m)).cast_ptr<_20d399b2b_StructStaticIdentExprModel>(&__jule_any_type99)))._field_Method=(*(_441752_f));
			}
		}
		_match_end_211e6215c:;
	};
}



inline jule::Bool _20d4dac7d_pushSubIdentFromExpr(jule::Any _442829_expr, jule::Ptr<_20d36c3a1_SubIdentTypeDecl>* _442850_t) {
	{
		auto &_match_expr{ _442829_expr };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_211e66b67:;
			{
				jule::Ptr<_20d372708_IdentExpr> _443117_e = _442829_expr.cast_ptr<_20d372708_IdentExpr>(&__jule_any_type83);;
				{ jule::Slice<jule::Ptr<_20d36c0a4_IdentTypeDecl>> &__jule_push_dest = (*((*(_442850_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_20d36c0a4_IdentTypeDecl>(_20d36c0a4_IdentTypeDecl{._field_Token=(*(_443117_e))._field_Token, ._field_Ident=(*(_443117_e))._field_Ident, })); };
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_211e66bcd:;
			{
				jule::Ptr<_20d373de1_SubIdentExpr> _443717_e = _442829_expr.cast_ptr<_20d373de1_SubIdentExpr>(&__jule_any_type89);;
				if ((!(_20d4dac7d_pushSubIdentFromExpr((*((*(_443717_e))._field_Expr))._field_Kind, _442850_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_20d36c0a4_IdentTypeDecl>> &__jule_push_dest = (*((*(_442850_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_20d36c0a4_IdentTypeDecl>(_20d36c0a4_IdentTypeDecl{._field_Token=(*(_443717_e))._field_Ident, ._field_Ident=(*((*(_443717_e))._field_Ident))._field_Kind, })); };
			}
		}
		else {
			_case_begin_211e66b01:;
			{
				return false;;
			}
		}
		_match_end_211e65c87:;
	};
	return true;;
}



inline jule::Str _20d4db047_constoa(jule::Ptr<_20b0655eb_Const>* _445113_c) {
	{
		
		if (_20b0695bc_IsI64((*(_445113_c)).ptr())) {
			_case_begin_211e66d76:;
			{
				return _20b0550be_FmtInt(static_cast<jule::I64>(_20b066ec1_ReadI64((*(_445113_c)).ptr())), 10LL);;
			}
		}
		else if (_20b069853_IsU64((*(_445113_c)).ptr())) {
			_case_begin_211e69b37:;
			{
				return _20b054c06_FmtUint(static_cast<jule::U64>(_20b067257_ReadU64((*(_445113_c)).ptr())), 10LL);;
			}
		}
		else {
			_case_begin_211e6995b:;
			{
				return jule::Str();;
			}
		}
		_match_end_211e68eaa:;
	};
}



inline jule::Ptr<_20d087165_Data> _20d4db3bb_evalEnumStatic(jule::Ptr<_20d3b85d9_Enum>* _446224_enm, jule::Ptr<_20d3b7a6c_EnumItem>* _446241_item) {
	jule::Ptr<_20d087165_Data> _446313_d = jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>((*(_446224_enm)), 3)}), });;
	if (((*(_446241_item)) != nullptr)) {
		(*(_446313_d))._field_Constant=jule::new_ptr<_20b0655eb_Const>((*((*((*((*((*(_446241_item))))._field_Value))._field_Data))._field_Constant)));
		(*(_446313_d))._field_Model=jule::Any((*(_446313_d))._field_Constant, &__jule_any_type19);
		_20d4da178_applyCastModelByEnum(&(_446313_d), (*(_446224_enm)));
	};
	return _446313_d;;
}



inline jule::Ptr<_20d3958a2_StructLitExprModel> _20d4db685_isLitBased(jule::Any* _447920_m) {
	{
		auto &_match_expr{ (*(_447920_m)) };
		
		if (_match_expr.type == &__jule_any_type98) {
			_case_begin_211e6e4dd:;
			{
				return (*(_447920_m)).cast_ptr<_20d3958a2_StructLitExprModel>(&__jule_any_type98);;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_211e6e554:;
			{
				return (*((*(_447920_m)).cast_ptr<_20d395b9e_AllocStructLitExprModel>(&__jule_any_type113)))._field_Lit;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_211e6e5ba:;
			{
				jule::Ptr<_20d399675_StructSubIdentExprModel> _448617_ssi = (*(_447920_m)).cast_ptr<_20d399675_StructSubIdentExprModel>(&__jule_any_type71);;
				return _20d4db685_isLitBased(&((*((*(_448617_ssi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_211e6e631:;
			{
				jule::Ptr<_20d396232_CastingExprModel> _448917_c = (*(_447920_m)).cast_ptr<_20d396232_CastingExprModel>(&__jule_any_type96);;
				return _20d4db685_isLitBased(&((*(_448917_c))._field_Expr));;
			}
		}
		else {
			_case_begin_211e6e323:;
			{
				return nullptr;;
			}
		}
		_match_end_211e6cd05:;
	};
}



inline void _20d4db971_makeImplicitDeref(jule::Ptr<_20d087165_Data>* _449627_d, jule::Ptr<_20d3510bb_Token> _449641_baseToken) {
	jule::Ptr<_20d394ecd_UnaryExprModel> _449713_unary = jule::new_ptr<_20d394ecd_UnaryExprModel>(_20d394ecd_UnaryExprModel{._field_Expr=jule::new_ptr<_20d087165_Data>((*((*(_449627_d))))), ._field_Op=jule::new_ptr<_20d3510bb_Token>((*(_449641_baseToken)))});;
	(*((*(_449713_unary))._field_Op))._field_Id=static_cast<jule::U64>(62LLU);
	(*((*(_449713_unary))._field_Op))._field_Kind=jule::Str("*", 1);
	(*((*(_449627_d))))._field_Model=jule::Any(_449713_unary, &__jule_any_type72);
}



inline jule::Bool _20d509c8b_kindUsesGenerics(jule::Ptr<_20d4de28c_TypeKind>* _174126_k, jule::Slice<jule::Ptr<_20d378ba4_GenericDecl>>* _174141_generics) {
	{
		auto expr = _174141_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21234dee9:;
		if (it != expr_end) {
			jule::Ptr<_20d378ba4_GenericDecl> *_174212_g = it;
			{
				if (static__20d50985c_exist(&((*((*(_174212_g))))._field_Ident), _174126_k)) {
					return true;;
				};
			}
			_iter_next_21234dee9:;
			++it;
			goto _iter_begin_21234dee9;
		}
		_iter_end_21234dee9:;
	};
	return false;;
}



inline jule::Bool _20d50a154_hasDirective(jule::Slice<jule::Ptr<_20d36adb6_Directive>>* _175122_directives, jule::Str _175153_tag) {
	{
		auto expr = _175122_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21234e3c3:;
		if (it != expr_end) {
			jule::Ptr<_20d36adb6_Directive> _175217_dr = *it;
			{
				if (((*((*(_175217_dr))._field_Tag))._field_Kind == _175153_tag)) {
					return true;;
				};
			}
			_iter_next_21234e3c3:;
			++it;
			goto _iter_begin_21234e3c3;
		}
		_iter_end_21234e3c3:;
	};
	return false;;
}



inline jule::Bool _20d50a41d_canGetPtr(jule::Ptr<_20d087165_Data>* _176019_d) {
	{
		
		if ((!((*((*(_176019_d))))._field_Lvalue)) || _20d087a39_IsConst((*(_176019_d)).ptr())) {
			_case_begin_212351084:;
			{
				return false;;
			}
		}
		else if ((_20d4e2e72_Fn((*((*(_176019_d))))._field_Kind.ptr()) != nullptr) || (_20d4e2438_Enum((*((*(_176019_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_21235110b:;
			{
				return false;;
			}
		}
		else {
			_case_begin_212350380:;
			{
				return true;;
			}
		}
		_match_end_2123505b1:;
	};
}



inline jule::Bool _20d50a75e_isValidForSptrType(jule::Ptr<_20d4de28c_TypeKind>* _177228_t) {
	jule::Ptr<_20d39066b_StructIns> _177313_s = _20d4e3208_Struct((*(_177228_t)).ptr());;
	if ((((_177313_s != nullptr) && ((*(_177313_s))._field_Decl != nullptr)) && (*((*(_177313_s))._field_Decl))._field_Binded)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _20d50aa28_isValidForRef(jule::Ptr<_20d4de28c_TypeKind>* _178123_t) {
	return (_20d4e2e72_Fn((*(_178123_t)).ptr()) == nullptr);;
}



inline jule::Bool _20d50ace2_isBuiltinStrConvertable(jule::Ptr<_20d4de28c_TypeKind>* _178433_t) {
	return ((((!(_20d4e0612_Void((*(_178433_t)).ptr()))) && (_20d4e2e72_Fn((*(_178433_t)).ptr()) == nullptr)) && (_20d4e39ab_Tup((*(_178433_t)).ptr()) == nullptr)) && (!(_20d4e3c42_comptime((*(_178433_t)).ptr()))));;
}



inline jule::Str _20d50b0ab_buildLinkPathByTokens(jule::Slice<jule::Ptr<_20d3510bb_Token>>* _178827_tokens) {
	jule::I64 _178913_n = 0LL;;
	{
		auto expr = _178827_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212356133:;
		if (it != expr_end) {
			jule::Ptr<_20d3510bb_Token> *_179012_token = it;
			{
				_178913_n+=(*((*(_179012_token))))._field_Kind.len();
				_178913_n+=2LL;
			}
			_iter_next_212356133:;
			++it;
			goto _iter_begin_212356133;
		}
		_iter_end_212356133:;
	};
	_2240a0ad5_StrBuilder _179413_s = static__2240a0e04_New(_178913_n);;
	{
		auto expr = _178827_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212356287:;
		if (it != expr_end) {
			jule::I64 _17959_i = it - expr->begin();
			jule::Ptr<_20d3510bb_Token> *_179512_token = it;
			{
				_2240a989c_WriteStr(&_179413_s, (*((*(_179512_token))))._field_Kind);
				if ((((*(_178827_tokens)).len() - _17959_i) > 1LL)) {
					_2240a989c_WriteStr(&_179413_s, jule::Str("::", 2));
				};
			}
			_iter_next_212356287:;
			++it;
			_17959_i++;
			goto _iter_begin_212356287;
		}
		_iter_end_212356287:;
	};
	return _2240aa194_Str(&_179413_s);;
}



inline jule::Ptr<_20d4e710d_Prim> _20d50b452_buildPrimType(jule::Str _180418_kind) {
	return jule::new_ptr<_20d4e710d_Prim>(_20d4e710d_Prim{._field_Kind=_180418_kind});;
}



inline jule::Ptr<_20d38c58b_Struct> _20d50b71b_getStructFromKind(jule::Ptr<_20d4de28c_TypeKind> _181026_k) {
	{
		
		if ((_181026_k == nullptr)) {
			_case_begin_212359158:;
			{
				return nullptr;;
			}
		}
		else if ((_20d4e3208_Struct(_181026_k.ptr()) != nullptr)) {
			_case_begin_2123591d0:;
			{
				return (*(_20d4e3208_Struct(_181026_k.ptr())))._field_Decl;;
			}
		}
		else if ((_20d4e1e1b_Sptr(_181026_k.ptr()) != nullptr)) {
			_case_begin_212359488:;
			{
				return _20d50b71b_getStructFromKind((*(_20d4e1e1b_Sptr(_181026_k.ptr())))._field_Elem);;
			}
		}
		else if ((_20d4e2bdb_Slc(_181026_k.ptr()) != nullptr)) {
			_case_begin_2123594ee:;
			{
				return _20d50b71b_getStructFromKind((*(_20d4e2bdb_Slc(_181026_k.ptr())))._field_Elem);;
			}
		}
		else if ((_20d4e2955_Arr(_181026_k.ptr()) != nullptr)) {
			_case_begin_212359565:;
			{
				return _20d50b71b_getStructFromKind((*(_20d4e2955_Arr(_181026_k.ptr())))._field_Elem);;
			}
		}
		else if ((_20d4e21a2_Ptr(_181026_k.ptr()) != nullptr)) {
			_case_begin_2123595cb:;
			{
				return nullptr;;
			}
		}
		else {
			_case_begin_212357c28:;
			{
				return nullptr;;
			}
		}
		_match_end_212357b5c:;
	};
}



inline void _20d50ba07_applyImplicitCast(jule::Ptr<_20d4de28c_TypeKind>* _183227_dest, jule::Ptr<_20d087165_Data>* _183249_d) {
	if (_20d4e037b_IsNil((*((*(_183249_d))))._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_20d4e710d_Prim> _18369_destPrim = _20d4e1b85_Prim((*(_183227_dest)).ptr());;
	jule::Ptr<_20d4e710d_Prim> _18379_prim = _20d4e1b85_Prim((*((*(_183249_d))))._field_Kind.ptr());;
	if ((_18369_destPrim != nullptr)) {
		if (_20d4ea82b_IsAny(_18369_destPrim.ptr())) {
			if (((_18379_prim == nullptr) || (!(_20d4ea82b_IsAny(_18379_prim.ptr()))))) {
				_20d4d98b4_applyCastKind(_183249_d, _183227_dest);
			};
			return;;
		};
		if (((((((!(_20d4e00e5_Binded((*((*(_183249_d))))._field_Kind.ptr()))) && (!((*((*((*(_183249_d))))._field_Kind))._field_Variadic))) && (!((*((*(_183249_d))))._field_Lvalue))) && (!(_20d087a39_IsConst((*(_183249_d)).ptr())))) && (_18379_prim != nullptr)) && _20b065123_IsNum((*(_18379_prim))._field_Kind))) {
			_20d4d98b4_applyCastKind(_183249_d, _183227_dest);
		};
		return;;
	};
	jule::Ptr<_20d3b5dde_Trait> _18569_dt = _20d4e348e_Trait((*(_183227_dest)).ptr());;
	if ((_18569_dt != nullptr)) {
		jule::Ptr<_20d3b5dde_Trait> _185813_bt = _20d4e348e_Trait((*((*(_183249_d))))._field_Kind.ptr());;
		if (((_185813_bt == nullptr) || (_185813_bt != _18569_dt))) {
			_20d4d95c8_applyCastKindModel(_183249_d, _183227_dest);
			return;;
		};
	};
	if (((_20d4e26be_TypeEnum((*(_183227_dest)).ptr()) != nullptr) && (_20d4e26be_TypeEnum((*((*(_183249_d))))._field_Kind.ptr()) == nullptr))) {
		_20d4d95c8_applyCastKindModel(_183249_d, _183227_dest);
		return;;
	};
}



inline jule::Bool _20d50bcc1_validTypeForXof(jule::Ptr<_20d4de28c_TypeKind>* _187125_t) {
	return ((!(_20d4e0612_Void((*(_187125_t)).ptr()))) && (_20d4e2e72_Fn((*(_187125_t)).ptr()) == nullptr));;
}



inline __jule_tuple_x_20d081e40_SymbolTable__jule_tuple_s_22730be5e_Log _20d50ed5c_buildSymbols(jule::Ptr<_20d3699ec_Ast>* _1622_ast, jule::Trait<_20d411e7e_Importer>* _1638_importer, jule::Ptr<_20d3aecc8_symbolBuilder> _1662_owner) {
	__jule_tuple_x_20d081e40_SymbolTable__jule_tuple_s_22730be5e_Log __jule_func_result;
	jule::Ptr<_20d3aecc8_symbolBuilder> _1713_sb = jule::new_ptr<_20d3aecc8_symbolBuilder>(_20d3aecc8_symbolBuilder{._field_owner=_1662_owner, ._field_importer=(*(_1638_importer)), ._field_ast=(*(_1622_ast)), });;
	_20d3b52b7_build(_1713_sb);
	if (((*(_1713_sb))._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_1713_sb))._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = (*(_1713_sb))._field_errors;
	return __jule_func_result;;
}



inline __jule_tuple_x_20d417cba_Package__jule_tuple_s_22730be5e_Log _20d5102d0_analyzePackage(jule::Slice<jule::Ptr<_20d3699ec_Ast>>* _3024_files, jule::Trait<_20d411e7e_Importer>* _3044_importer, jule::I64* _3065_flags) {
	__jule_tuple_x_20d417cba_Package__jule_tuple_s_22730be5e_Log __jule_func_result;
	jule::Slice<jule::Ptr<_20d081e40_SymbolTable>> _3213_tables = jule::Slice<jule::Ptr<_20d081e40_SymbolTable>>::alloc(0LL, (*(_3024_files)).len());;
	{
		auto expr = _3024_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212486a16:;
		if (it != expr_end) {
			jule::Ptr<_20d3699ec_Ast> _3317_f = *it;
			{
				jule::Ptr<_20d081e40_SymbolTable> _3418_table;;
				jule::Slice<_22730be5e_Log> _3429_errors;;
				({
					__jule_tuple_x_20d081e40_SymbolTable__jule_tuple_s_22730be5e_Log __jule_assign_result = _20d50ed5c_buildSymbols(&(_3317_f), _3044_importer, nullptr);
					_3418_table = __jule_assign_result.__jule_result_arg0;
					_3429_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_3429_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _3429_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_20d081e40_SymbolTable>> &__jule_push_dest = _3213_tables; __jule_push_dest.push(_3418_table); };
			}
			_iter_next_212486a16:;
			++it;
			goto _iter_begin_212486a16;
		}
		_iter_end_212486a16:;
	};
	jule::Ptr<_20d435de8_Sema> _4113_sema = jule::new_ptr<_20d435de8_Sema>(_20d435de8_Sema{._field_flags=(*(_3065_flags)), ._field_meta=jule::new_ptr<_20d4352c1_commonSemaMeta>()});;
	_20d455104_check(_4113_sema, &(_3213_tables));
	if (((*(_4113_sema))._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = (*(_4113_sema))._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_20d417cba_Package> _5013_pkg = jule::new_ptr<_20d417cba_Package>(_20d417cba_Package{._field_Files=(*(_4113_sema))._field_files});;
	__jule_func_result.__jule_result_arg0 = _5013_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_20d417cba_Package__jule_tuple_s_22730be5e_Log _20d51070e_AnalyzePackage(jule::Slice<jule::Ptr<_20d3699ec_Ast>> _7423_files, jule::Trait<_20d411e7e_Importer> _7442_importer, jule::I64 _7462_flags) {
	__jule_tuple_x_20d417cba_Package__jule_tuple_s_22730be5e_Log __jule_func_result;
	if ((_7423_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_20d417cba_Package> _7814_package;;
	jule::Slice<_22730be5e_Log> _7827_logs;;
	({
		__jule_tuple_x_20d417cba_Package__jule_tuple_s_22730be5e_Log __jule_assign_result = _20d5102d0_analyzePackage(&(_7423_files), &(_7442_importer), &(_7462_flags));
		_7814_package = __jule_assign_result.__jule_result_arg0;
		_7827_logs = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _7814_package;
	__jule_func_result.__jule_result_arg1 = _7827_logs;
	return __jule_func_result;;
}



inline jule::Ptr<_20d3a5a49_FnIns> _20d561a90_findBuiltinFunc(jule::Str* _2521_ident) {
	{
		auto &_match_expr{ (*(_2521_ident)) };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_2124907cd:;
			{
				static jule::Ptr<_20d3a5a49_FnIns> _2820_f = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>(_20d567bea_builtinCallerOut), });;
				return _2820_f;;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_212490a75:;
			{
				static jule::Ptr<_20d3a5a49_FnIns> _3120_f = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>(_20d568129_builtinCallerOutln), });;
				return _3120_f;;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_212490aec:;
			{
				static jule::Ptr<_20d3a5a49_FnIns> _3420_f = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>(_20d568558_builtinCallerNew), });;
				return _3420_f;;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_212490d50:;
			{
				static jule::Ptr<_20d3a5a49_FnIns> _3720_f = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>(_20d568b41_builtinCallerPanic), });;
				return _3720_f;;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_212490dc7:;
			{
				static jule::Ptr<_20d3a5a49_FnIns> _4020_f = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>(_20d569070_builtinCallerMake), });;
				return _4020_f;;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_212490e4e:;
			{
				static jule::Ptr<_20d3a5a49_FnIns> _4320_f = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>(_20d56949e_builtinCallerAppend), });;
				return _4320_f;;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_212490ec6:;
			{
				static jule::Ptr<_20d3a5a49_FnIns> _4620_f = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>(_20d569db7_builtinCallerCopy), });;
				return _4620_f;;
			}
		}
		else if (_match_expr == jule::Str("len", 3)) {
			_case_begin_2124910a3:;
			{
				static jule::Ptr<_20d3a5a49_FnIns> _4920_f = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>(_20d56b55b_builtinCallerLen), });;
				return _4920_f;;
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_21249112a:;
			{
				static jule::Ptr<_20d3a5a49_FnIns> _5220_f = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>(_20d56bd0e_builtinCallerCap), });;
				return _5220_f;;
			}
		}
		else if (_match_expr == jule::Str("delete", 6)) {
			_case_begin_2124911a2:;
			{
				static jule::Ptr<_20d3a5a49_FnIns> _5520_f = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>(_20d56c727_builtinCallerDelete), });;
				return _5520_f;;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_212491229:;
			{
				static jule::Ptr<_20d3a5a49_FnIns> _5820_f = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>(_20d56cb56_builtinCallerClone), });;
				return _5820_f;;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_2124912a1:;
			{
				static jule::Ptr<_20d3a5a49_FnIns> _6120_f = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>(_20d56d22d_builtinCallerAssert), });;
				return _6120_f;;
			}
		}
		else {
			_case_begin_212490910:;
			{
				return nullptr;;
			}
		}
		_match_end_21248cd08:;
	};
}



inline jule::Ptr<_20d4dd49a_TypeAlias> _20d561d9d_primTypeAlias(jule::Ptr<_20d4de28c_TypeKind>* _6823_k) {
	return jule::new_ptr<_20d4dd49a_TypeAlias>(_20d4dd49a_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_20d4e6706_TypeSymbol>(_20d4e6706_TypeSymbol{._field_Kind=(*(_6823_k))}), });;
}



inline jule::Ptr<_20d458aca_Var> _20d5659a6_findBuiltinVar(jule::Str* _9620_ident) {
	{
		auto &_match_expr{ (*(_9620_ident)) };
		
		if (_match_expr == jule::Str("nil", 3)) {
			_case_begin_212498ebd:;
			{
				static jule::Ptr<_20d458aca_Var> _9920_v = jule::new_ptr<_20d458aca_Var>(_20d458aca_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=jule::new_ptr<_20d4e6706_TypeSymbol>(_20d4e6706_TypeSymbol{._field_Kind=_20d5621ab_primNil}), ._field_Value=jule::new_ptr<_20d0882a9_Value>(_20d0882a9_Value{._field_Data=jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Constant=static__20b066861_NewNil()})}), });;
				return _9920_v;;
			}
		}
		else if (_match_expr == jule::Str("true", 4)) {
			_case_begin_212499034:;
			{
				static jule::Ptr<_20d458aca_Var> _11420_v = jule::new_ptr<_20d458aca_Var>(_20d458aca_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=(*(_20d565bd7_findBuiltinTypeAlias(jule::Str("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_20d0882a9_Value>(_20d0882a9_Value{._field_Data=jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Constant=static__20b0660be_NewBool(true)})}), });;
				return _11420_v;;
			}
		}
		else if (_match_expr == jule::Str("false", 5)) {
			_case_begin_21249909a:;
			{
				static jule::Ptr<_20d458aca_Var> _12720_v = jule::new_ptr<_20d458aca_Var>(_20d458aca_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=(*(_20d565bd7_findBuiltinTypeAlias(jule::Str("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_20d0882a9_Value>(_20d0882a9_Value{._field_Data=jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Constant=static__20b0660be_NewBool(false)})}), });;
				return _12720_v;;
			}
		}
		else {
			_case_begin_212498e57:;
			{
				return nullptr;;
			}
		}
		_match_end_212497eab:;
	};
}



inline jule::Ptr<_20d4dd49a_TypeAlias> _20d565bd7_findBuiltinTypeAlias(jule::Str _14425_ident) {
	{
		auto &_match_expr{ _14425_ident };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_21249c587:;
			{
				static jule::Ptr<_20d4dd49a_TypeAlias> _14720_t = _20d561d9d_primTypeAlias(&(_20d562783_primAny));;
				return _14720_t;;
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_21249dde6:;
			{
				static jule::Ptr<_20d4dd49a_TypeAlias> _15020_t = _20d561d9d_primTypeAlias(&(_20d562a91_primStr));;
				return _15020_t;;
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_21249e18d:;
			{
				static jule::Ptr<_20d4dd49a_TypeAlias> _15320_t = _20d561d9d_primTypeAlias(&(_20d562d5a_primBool));;
				return _15320_t;;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_21249e204:;
			{
				static jule::Ptr<_20d4dd49a_TypeAlias> _15620_t = _20d561d9d_primTypeAlias(&(_20d563124_primUintptr));;
				return _15620_t;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_21249e26a:;
			{
				static jule::Ptr<_20d4dd49a_TypeAlias> _15920_t = _20d561d9d_primTypeAlias(&(_20d5633dd_primUint));;
				return _15920_t;;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_21249e2d1:;
			{
				static jule::Ptr<_20d4dd49a_TypeAlias> _16220_t = _20d561d9d_primTypeAlias(&(_20d5637b7_primInt));;
				return _16220_t;;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_21249e3d0:;
			{
				static jule::Ptr<_20d4dd49a_TypeAlias> _16520_t = _20d561d9d_primTypeAlias(&(_20d563a81_primI8));;
				return _16520_t;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_21249e446:;
			{
				static jule::Ptr<_20d4dd49a_TypeAlias> _16820_t = _20d561d9d_primTypeAlias(&(_20d563d4a_primI16));;
				return _16820_t;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_21249e4ac:;
			{
				static jule::Ptr<_20d4dd49a_TypeAlias> _17120_t = _20d561d9d_primTypeAlias(&(_20d5643cd_primI64));;
				return _17120_t;;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_21249e523:;
			{
				static jule::Ptr<_20d4dd49a_TypeAlias> _17420_t = _20d561d9d_primTypeAlias(&(_20d564961_primU16));;
				return _17420_t;;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_21249e59a:;
			{
				static jule::Ptr<_20d4dd49a_TypeAlias> _17720_t = _20d561d9d_primTypeAlias(&(_20d564c2a_primU32));;
				return _17720_t;;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_21249e622:;
			{
				static jule::Ptr<_20d4dd49a_TypeAlias> _18020_t = _20d561d9d_primTypeAlias(&(_20d56519d_primU64));;
				return _18020_t;;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_21249e699:;
			{
				static jule::Ptr<_20d4dd49a_TypeAlias> _18320_t = _20d561d9d_primTypeAlias(&(_20d565467_primF32));;
				return _18320_t;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_21249e721:;
			{
				static jule::Ptr<_20d4dd49a_TypeAlias> _18620_t = _20d561d9d_primTypeAlias(&(_20d565731_primF64));;
				return _18620_t;;
			}
		}
		else if (_match_expr == jule::Str("byte", 4) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_21249e798:;
			{
				static jule::Ptr<_20d4dd49a_TypeAlias> _18920_t = _20d561d9d_primTypeAlias(&(_20d564697_primU8));;
				return _18920_t;;
			}
		}
		else if (_match_expr == jule::Str("rune", 4) || _match_expr == jule::Str("i32", 3)) {
			_case_begin_21249e820:;
			{
				static jule::Ptr<_20d4dd49a_TypeAlias> _19220_t = _20d561d9d_primTypeAlias(&(_20d564114_primI32));;
				return _19220_t;;
			}
		}
		else {
			_case_begin_21249dc4d:;
			{
				return nullptr;;
			}
		}
		_match_end_21249c6b9:;
	};
}



inline jule::Any _20d565ea1_findBuiltinDef(jule::Str* _19920_ident) {
	jule::Ptr<_20d458aca_Var> _20013_v = _20d5659a6_findBuiltinVar(_19920_ident);;
	if ((_20013_v != nullptr)) {
		return jule::Any(_20013_v, &__jule_any_type8);;
	};
	jule::Ptr<_20d3a5a49_FnIns> _20413_f = _20d561a90_findBuiltinFunc(_19920_ident);;
	if ((_20413_f != nullptr)) {
		return jule::Any(_20413_f, &__jule_any_type7);;
	};
	jule::Ptr<_20d4dd49a_TypeAlias> _20813_ta = _20d565bd7_findBuiltinTypeAlias((*(_19920_ident)));;
	if ((_20813_ta != nullptr)) {
		return jule::Any(_20813_ta, &__jule_any_type67);;
	};
	return nullptr;;
}



inline jule::Any _20d56626a_findBuiltinDefStdDebug(jule::Str* _21528_ident) {
	{
		auto &_match_expr{ (*(_21528_ident)) };
		
		if (_match_expr == jule::Str("Out", 3)) {
			_case_begin_2124a9198:;
			{
				static jule::Ptr<_20d3a5a49_FnIns> _21820_f = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>(_20d571e13_builtinCallerStdDebugOut), });;
				return jule::Any(_21820_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Outln", 5)) {
			_case_begin_2124a920e:;
			{
				static jule::Ptr<_20d3a5a49_FnIns> _22120_f = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>(_20d572342_builtinCallerStdDebugOutln), });;
				return jule::Any(_22120_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_2124a8a7c:;
			{
				return nullptr;;
			}
		}
		_match_end_2124a784a:;
	};
}



inline jule::Any _20d566534_findBuiltinDefStdMem(jule::Str* _22826_ident) {
	{
		auto &_match_expr{ (*(_22826_ident)) };
		
		if (_match_expr == jule::Str("SizeOf", 6)) {
			_case_begin_2124aaaa1:;
			{
				static jule::Ptr<_20d3a5a49_FnIns> _23120_f = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>(_20d570818_builtinCallerStdMemSizeOf), });;
				return jule::Any(_23120_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("AlignOf", 7)) {
			_case_begin_2124aab17:;
			{
				static jule::Ptr<_20d3a5a49_FnIns> _23420_f = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>(_20d570c47_builtinCallerStdMemAlignOf), });;
				return jule::Any(_23420_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Free", 4)) {
			_case_begin_2124aab7d:;
			{
				static jule::Ptr<_20d3a5a49_FnIns> _23720_f = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>(_20d571176_builtinCallerStdMemFree), });;
				return jule::Any(_23720_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_2124aaa3a:;
			{
				return nullptr;;
			}
		}
		_match_end_2124a96c6:;
	};
}



inline jule::Any _20d5668ca_findBuiltinDefStdComptime(jule::Str* _24431_ident) {
	{
		auto &_match_expr{ (*(_24431_ident)) };
		
		if (_match_expr == jule::Str("TypeOf", 6)) {
			_case_begin_2124acec1:;
			{
				static jule::Ptr<_20d3a5a49_FnIns> _24720_f = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>(_20d56d5e6_builtinCallerStdComptimeTypeOf), });;
				return jule::Any(_24720_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("ValueOf", 7)) {
			_case_begin_2124ad048:;
			{
				static jule::Ptr<_20d3a5a49_FnIns> _25020_f = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>(_20d56da25_builtinCallerStdComptimeValueOf), });;
				return jule::Any(_25020_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Range", 5)) {
			_case_begin_2124ad0c0:;
			{
				static jule::Ptr<_20d3a5a49_FnIns> _25320_f = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>(_20d56e21d_builtinCallerStdComptimeRange), });;
				return jule::Any(_25320_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Line", 4)) {
			_case_begin_2124ad400:;
			{
				static jule::Ptr<_20d3a5a49_FnIns> _25620_f = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>(_20d56e64c_builtinCallerStdComptimeLine), });;
				return jule::Any(_25620_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("File", 4)) {
			_case_begin_2124ad466:;
			{
				static jule::Ptr<_20d3a5a49_FnIns> _25920_f = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>(_20d56ea7b_builtinCallerStdComptimeFile), });;
				return jule::Any(_25920_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Files", 5)) {
			_case_begin_2124ad4cc:;
			{
				static jule::Ptr<_20d3a5a49_FnIns> _26220_f = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>(_20d56eeaa_builtinCallerStdComptimeFiles), });;
				return jule::Any(_26220_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("TypeAlias", 9)) {
			_case_begin_2124ad543:;
			{
				static jule::Ptr<_20d3a5a49_FnIns> _26520_f = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>(_20d5703d9_builtinCallerStdComptimeTypeAlias), });;
				return jule::Any(_26520_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_2124ace5a:;
			{
				return nullptr;;
			}
		}
		_match_end_2124ac597:;
	};
}



inline jule::Any _20d566b94_findBuiltinDefStdJuleIntegrated(jule::Str* _27237_ident) {
	{
		auto &_match_expr{ (*(_27237_ident)) };
		
		if (_match_expr == jule::Str("ToStr", 5)) {
			_case_begin_2124b2c95:;
			{
				static jule::Ptr<_20d3a5a49_FnIns> _27520_f = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>(_20d5715a5_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_27520_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Emit", 4)) {
			_case_begin_2124b2d0b:;
			{
				static jule::Ptr<_20d3a5a49_FnIns> _27820_f = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_Decl=jule::new_ptr<_20d3a2b45_Fn>(_20d3a2b45_Fn{._field_Generics=jule::Slice<jule::Ptr<_20d378ba4_GenericDecl>>::alloc(1LL, 1LL), }), ._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>(_20d5719d4_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_27820_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_2124b2c2e:;
			{
				return nullptr;;
			}
		}
		_match_end_2124ad950:;
	};
}



inline jule::Any _20d567018_findPackageBuiltinDef(jule::Str* _29027_linkPath, jule::Str* _29043_ident) {
	{
		auto &_match_expr{ (*(_29027_linkPath)) };
		
		if (_match_expr == jule::Str("std::comptime", 13)) {
			_case_begin_2124b50b6:;
			{
				return _20d5668ca_findBuiltinDefStdComptime(_29043_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_2124b512c:;
			{
				return _20d56626a_findBuiltinDefStdDebug(_29043_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_2124b5193:;
			{
				return _20d566534_findBuiltinDefStdMem(_29043_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_2124b5209:;
			{
				return _20d566b94_findBuiltinDefStdJuleIntegrated(_29043_ident);;
			}
		}
		else {
			_case_begin_2124b4dda:;
			{
				return nullptr;;
			}
		}
		_match_end_2124b3d0c:;
	};
}



inline jule::Ptr<_20d087165_Data> _20d567447_builtinCallerCommonPlain(jule::Ptr<_20d088d59_Eval>* _30534_e, jule::Ptr<_20d374a07_FnCallExpr>* _30549_fc, jule::Ptr<_20d087165_Data>* _30571_d) {
	jule::Ptr<_20d3a5a49_FnIns> _30613_f = _20d4e2e72_Fn((*((*(_30571_d))))._field_Kind.ptr());;
	_20d077661_fnCallArgChecker _30813_fcac = _20d077661_fnCallArgChecker{._field_e=(*(_30534_e)), ._field_args=(*((*(_30549_fc))))._field_Args, ._field_errorToken=(*((*(_30549_fc))))._field_Token, ._field_f=_30613_f, ._field_dynamicAnnotation=false, };;
	if ((!(_20d079c18_check(&_30813_fcac)))) {
		return nullptr;;
	};
	jule::Ptr<_20d396ad4_FnCallExprModel> _31913_model = jule::new_ptr<_20d396ad4_FnCallExprModel>(_20d396ad4_FnCallExprModel{._field_Token=(*((*(_30549_fc))))._field_Token, ._field_Func=_30613_f, ._field_Expr=(*((*(_30571_d))))._field_Model, ._field_Args=_30813_fcac._field_argModels, });;
	if (((*(_30613_f))._field_Result == nullptr)) {
		(*(_30571_d))=_20d4d9ac3_buildVoidData();
	} else {
		(*(_30571_d))=jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=(*(_30613_f))._field_Result, });
	};
	(*((*(_30571_d))))._field_Model=jule::Any(_31913_model, &__jule_any_type35);
	return (*(_30571_d));;
}



inline jule::Ptr<_20d087165_Data> _20d5677bb_builtinCallerError(jule::Ptr<_20d088d59_Eval>* _33828_e, jule::Ptr<_20d374a07_FnCallExpr>* _33843_fc) {
	if (((*((*(_33843_fc))))._field_Args.len() < 1LL)) {
		_20d0893a9_pushErr((*(_33828_e)).ptr(), (*((*(_33843_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("err", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_33843_fc))))._field_Args.len() > 1LL)) {
		_20d0893a9_pushErr((*(_33828_e)).ptr(), (*((*((*(_33843_fc))))._field_Args[1LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("error", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_20d087165_Data> _34613_expr = _20d4cdc93_evalExpr((*(_33828_e)), (*((*(_33843_fc))))._field_Args[0LL]);;
	if ((_34613_expr == nullptr)) {
		return nullptr;;
	};
	if (_20d08751c_IsNil(_34613_expr.ptr())) {
		_20d0893a9_pushErr((*(_33828_e)).ptr(), (*((*((*(_33843_fc))))._field_Args[0LL]))._field_Token, jule::Str("you cannot call error function with nil", 39), jule::Slice<jule::Any>());
	};
	jule::Ptr<_20d087165_Data> _35513_d = _20d4d9ac3_buildVoidData();;
	(*(_35513_d))._field_Model=jule::Any(jule::new_ptr<_20d39d9a9_BuiltinErrorCallExprModel>(_20d39d9a9_BuiltinErrorCallExprModel{._field_Err=_34613_expr}), &__jule_any_type23);
	return _35513_d;;
}



inline jule::Ptr<_20d087165_Data> _20d567bea_builtinCallerOut(jule::Ptr<_20d088d59_Eval>* _36026_e, jule::Ptr<_20d374a07_FnCallExpr>* _36041_fc, jule::Ptr<_20d087165_Data>* ) {
	if (((*((*(_36041_fc))))._field_Args.len() < 1LL)) {
		_20d0893a9_pushErr((*(_36026_e)).ptr(), (*((*(_36041_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_36041_fc))))._field_Args.len() > 1LL)) {
		_20d0893a9_pushErr((*(_36026_e)).ptr(), (*((*((*(_36041_fc))))._field_Args[1LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("out", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_20d087165_Data> _36913_expr = _20d4cdc93_evalExpr((*(_36026_e)), (*((*(_36041_fc))))._field_Args[0LL]);;
	if ((_36913_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_20d50ace2_isBuiltinStrConvertable(&((*(_36913_expr))._field_Kind))))) {
		_20d0893a9_pushErr((*(_36026_e)).ptr(), (*((*((*(_36041_fc))))._field_Args[0LL]))._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20d087165_Data> _37913_d = _20d4d9ac3_buildVoidData();;
	(*(_37913_d))._field_Model=jule::Any(jule::new_ptr<_20d39a6cb_BuiltinOutCallExprModel>(_20d39a6cb_BuiltinOutCallExprModel{._field_Expr=(*(_36913_expr))._field_Model, }), &__jule_any_type28);
	return _37913_d;;
}



inline jule::Ptr<_20d087165_Data> _20d568129_builtinCallerOutln(jule::Ptr<_20d088d59_Eval>* _38428_e, jule::Ptr<_20d374a07_FnCallExpr>* _38443_fc, jule::Ptr<_20d087165_Data>* _38465_d) {
	(*(_38465_d))=_20d567bea_builtinCallerOut(_38428_e, _38443_fc, _38465_d);
	if (((*(_38465_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*(_38465_d))))._field_Model=jule::Any(jule::new_ptr<_20d39aaa5_BuiltinOutlnCallExprModel>(_20d39aaa5_BuiltinOutlnCallExprModel{._field_Expr=(*((*((*(_38465_d))))._field_Model.cast_ptr<_20d39a6cb_BuiltinOutCallExprModel>(&__jule_any_type28)))._field_Expr, }), &__jule_any_type29);
	return (*(_38465_d));;
}



inline jule::Ptr<_20d087165_Data> _20d568558_builtinCallerNew(jule::Ptr<_20d088d59_Eval>* _39626_e, jule::Ptr<_20d374a07_FnCallExpr>* _39641_fc, jule::Ptr<_20d087165_Data>* _39663_d) {
	if (((*((*(_39641_fc))))._field_Args.len() < 1LL)) {
		_20d0893a9_pushErr((*(_39626_e)).ptr(), (*((*(_39641_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_39641_fc))))._field_Args.len() > 2LL)) {
		_20d0893a9_pushErr((*(_39626_e)).ptr(), (*((*((*(_39641_fc))))._field_Args[2LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("new", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_20d087165_Data> _40513_t = _20d4cce7e_evalExprKind((*(_39626_e)), (*((*((*(_39641_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_40513_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_40513_t))._field_Decl))) {
		_20d0893a9_pushErr((*(_39626_e)).ptr(), (*((*((*(_39641_fc))))._field_Args[0LL]))._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_20d50a75e_isValidForSptrType(&((*(_40513_t))._field_Kind))))) {
		jule::Ptr<_20d39066b_StructIns> _41617_s = _20d4e3208_Struct((*(_40513_t))._field_Kind.ptr());;
		if ((((_41617_s != nullptr) && ((*(_41617_s))._field_Decl != nullptr)) && (*((*(_41617_s))._field_Decl))._field_Binded)) {
			_20d0893a9_pushErr((*(_39626_e)).ptr(), (*((*((*(_39641_fc))))._field_Args[0LL]))._field_Token, jule::Str("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*((*(_39663_d))))._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(jule::new_ptr<_20d4eab39_Sptr>(_20d4eab39_Sptr{._field_Elem=(*(_40513_t))._field_Kind}), 21)});
	if (((*((*(_39641_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_20d4de28c_TypeKind> _43017_old = (*((*(_39626_e))))._field_prefix;;
		(*((*(_39626_e))))._field_prefix=(*(_40513_t))._field_Kind;
		jule::Ptr<_20d087165_Data> _43317_init = _20d4cdc93_evalExpr((*(_39626_e)), (*((*(_39641_fc))))._field_Args[1LL]);;
		(*((*(_39626_e))))._field_prefix=_43017_old;
		if ((_43317_init != nullptr)) {
			jule::Ptr<_20d3510bb_Token> _43821_token = (*((*((*(_39641_fc))))._field_Args[1LL]))._field_Token;;
			;
			_20d444a50_checkValidityForInitExpr((*((*(_39626_e))))._field_s, (!((*((*(_39626_e))))._field_immutable)), false, &((*(_40513_t))._field_Kind), &(_43317_init), &(_43821_token));
			_20d441541_checkAssignType((*((*(_39626_e))))._field_s, false, &((*(_40513_t))._field_Kind), &(_43317_init), _43821_token);
			(*((*(_39663_d))))._field_Model=jule::Any(jule::new_ptr<_20d39b27b_BuiltinNewCallExprModel>(_20d39b27b_BuiltinNewCallExprModel{._field_Kind=(*(_40513_t))._field_Kind, ._field_Init=(*(_43317_init))._field_Model}), &__jule_any_type114);
		};
	} else {
		(*((*(_39663_d))))._field_Model=jule::Any(jule::new_ptr<_20d39b27b_BuiltinNewCallExprModel>(_20d39b27b_BuiltinNewCallExprModel{._field_Kind=(*(_40513_t))._field_Kind, }), &__jule_any_type114);
	};
	return (*(_39663_d));;
}



inline jule::Ptr<_20d087165_Data> _20d568b41_builtinCallerPanic(jule::Ptr<_20d088d59_Eval>* _45828_e, jule::Ptr<_20d374a07_FnCallExpr>* _45843_fc, jule::Ptr<_20d087165_Data>* ) {
	if (((*((*(_45843_fc))))._field_Args.len() < 1LL)) {
		_20d0893a9_pushErr((*(_45828_e)).ptr(), (*((*(_45843_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("message", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_45843_fc))))._field_Args.len() > 1LL)) {
		_20d0893a9_pushErr((*(_45828_e)).ptr(), (*((*((*(_45843_fc))))._field_Args[2LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("panic", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_20d087165_Data> _46713_expr = _20d4cdc93_evalExpr((*(_45828_e)), (*((*(_45843_fc))))._field_Args[0LL]);;
	if ((_46713_expr == nullptr)) {
		return nullptr;;
	};
	if (((_20d4e1b85_Prim((*(_46713_expr))._field_Kind.ptr()) == nullptr) || (!(_20d4ea595_IsStr(_20d4e1b85_Prim((*(_46713_expr))._field_Kind.ptr()).ptr()))))) {
		_20d0893a9_pushErr((*(_45828_e)).ptr(), (*((*(_45843_fc))))._field_Token, jule::Str("panic function only accepts strings", 35), jule::Slice<jule::Any>());
	};
	jule::Ptr<_20d087165_Data> _47613_d = _20d4d9ac3_buildVoidData();;
	(*(_47613_d))._field_Model=jule::Any(jule::new_ptr<_20d39b655_BuiltinPanicCallExprModel>(_20d39b655_BuiltinPanicCallExprModel{._field_Token=(*((*(_45843_fc))))._field_Token, ._field_Expr=(*(_46713_expr))._field_Model}), &__jule_any_type30);
	return _47613_d;;
}



inline jule::Ptr<_20d087165_Data> _20d569070_builtinCallerMake(jule::Ptr<_20d088d59_Eval>* _48427_e, jule::Ptr<_20d374a07_FnCallExpr>* _48442_fc, jule::Ptr<_20d087165_Data>* _48464_d) {
	if (((*((*(_48442_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_48442_fc))))._field_Args.len() == 1LL)) {
			_20d0893a9_pushErr((*(_48427_e)).ptr(), (*((*(_48442_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("size", 4), &__jule_any_type4)}));
			return nullptr;;
		};
		_20d0893a9_pushErr((*(_48427_e)).ptr(), (*((*(_48442_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type, size", 10), &__jule_any_type4)}));
		return nullptr;;
	} else if (((*((*(_48442_fc))))._field_Args.len() > 3LL)) {
		_20d0893a9_pushErr((*(_48427_e)).ptr(), (*((*((*(_48442_fc))))._field_Args[3LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("make", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20d087165_Data> _49713_t = _20d4cce7e_evalExprKind((*(_48427_e)), (*((*((*(_48442_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_49713_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_49713_t))._field_Decl))) {
		_20d0893a9_pushErr((*(_48427_e)).ptr(), (*((*((*(_48442_fc))))._field_Args[0LL]))._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_20d4e2bdb_Slc((*(_49713_t))._field_Kind.ptr()) == nullptr)) {
		_20d0893a9_pushErr((*(_48427_e)).ptr(), (*((*((*(_48442_fc))))._field_Args[0LL]))._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_49713_t))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str("make", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	(*((*(_48464_d))))._field_Kind=(*(_49713_t))._field_Kind;
	jule::Ptr<_20d087165_Data> _51213_lenExpr = _20d4cdc93_evalExpr(_20d440b8e_evalp((*((*(_48427_e))))._field_s, (*((*(_48427_e))))._field_lookup, (*(_49713_t))._field_Kind), (*((*(_48442_fc))))._field_Args[1LL]);;
	if ((_51213_lenExpr == nullptr)) {
		return nullptr;;
	};
	_20d092d0d_checkIntegerIndexingByData((*(_48427_e)).ptr(), &(_51213_lenExpr), (*((*((*(_48442_fc))))._field_Args[1LL]))._field_Token);
	jule::Ptr<_20d39c0b2_BuiltinMakeCallExprModel> _51913_model = jule::new_ptr<_20d39c0b2_BuiltinMakeCallExprModel>(_20d39c0b2_BuiltinMakeCallExprModel{._field_Kind=(*(_49713_t))._field_Kind, ._field_Len=(*(_51213_lenExpr))._field_Model, });;
	(*((*(_48464_d))))._field_Model=jule::Any(_51913_model, &__jule_any_type115);
	if (((*((*(_48442_fc))))._field_Args.len() == 3LL)) {
		jule::Ptr<_20d087165_Data> _52517_capExpr = _20d4cdc93_evalExpr(_20d440b8e_evalp((*((*(_48427_e))))._field_s, (*((*(_48427_e))))._field_lookup, (*(_49713_t))._field_Kind), (*((*(_48442_fc))))._field_Args[2LL]);;
		if ((_52517_capExpr == nullptr)) {
			return (*(_48464_d));;
		};
		_20d092d0d_checkIntegerIndexingByData((*(_48427_e)).ptr(), &(_52517_capExpr), (*((*((*(_48442_fc))))._field_Args[2LL]))._field_Token);
		(*(_51913_model))._field_Cap=(*(_52517_capExpr))._field_Model;
	};
	return (*(_48464_d));;
}



inline jule::Ptr<_20d087165_Data> _20d56949e_builtinCallerAppend(jule::Ptr<_20d088d59_Eval>* _53529_e, jule::Ptr<_20d374a07_FnCallExpr>* _53544_fc, jule::Ptr<_20d087165_Data>* _53566_d) {
	if (((*((*(_53544_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_53544_fc))))._field_Args.len() == 1LL)) {
			_20d0893a9_pushErr((*(_53529_e)).ptr(), (*((*(_53544_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3), &__jule_any_type4)}));
			return nullptr;;
		};
		_20d0893a9_pushErr((*(_53529_e)).ptr(), (*((*(_53544_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20d087165_Data> _54513_t = _20d4cdc93_evalExpr((*(_53529_e)), (*((*(_53544_fc))))._field_Args[0LL]);;
	if ((_54513_t == nullptr)) {
		return nullptr;;
	};
	if ((_20d4e2bdb_Slc((*(_54513_t))._field_Kind.ptr()) == nullptr)) {
		_20d0893a9_pushErr((*(_53529_e)).ptr(), (*((*((*(_53544_fc))))._field_Args[0LL]))._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20d3a5a49_FnIns> _55513_f = jule::new_ptr<_20d3a5a49_FnIns>(_20d3a5a49_FnIns{._field_Params=jule::Slice<jule::Ptr<_20d3a4a9d_ParamIns>>::make({jule::new_ptr<_20d3a4a9d_ParamIns>(_20d3a4a9d_ParamIns{._field_Decl=jule::new_ptr<_20d3a1171_Param>(_20d3a1171_Param{._field_Mutable=true, }), ._field_Kind=(*(_54513_t))._field_Kind}),jule::new_ptr<_20d3a4a9d_ParamIns>(_20d3a4a9d_ParamIns{._field_Decl=jule::new_ptr<_20d3a1171_Param>(_20d3a1171_Param{._field_Mutable=true, ._field_Variadic=true, }), ._field_Kind=(*(_20d4e2bdb_Slc((*(_54513_t))._field_Kind.ptr())))._field_Elem})}), ._field_Result=(*(_54513_t))._field_Kind, ._field_caller=jule::Fn<jule::Ptr<_20d087165_Data>(jule::Ptr<_20d088d59_Eval>*,jule::Ptr<_20d374a07_FnCallExpr>*,jule::Ptr<_20d087165_Data>*)>(_20d567447_builtinCallerCommonPlain), });;
	(*((*(_53566_d))))._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(_55513_f, 1)});
	(*(_53566_d))=_20d567447_builtinCallerCommonPlain(_53529_e, _53544_fc, _53566_d);
	if (((*(_53566_d)) != nullptr)) {
		jule::Ptr<_20d396ad4_FnCallExprModel> _57917_model = (*((*(_53566_d))))._field_Model.cast_ptr<_20d396ad4_FnCallExprModel>(&__jule_any_type35);;
		(*((*(_53566_d))))._field_Model=jule::Any(jule::new_ptr<_20d39c48b_BuiltinAppendCallExprModel>(_20d39c48b_BuiltinAppendCallExprModel{._field_Dest=(*(_57917_model))._field_Args[0LL], ._field_Elements=(*(_57917_model))._field_Args[1LL]}), &__jule_any_type26);
	};
	return (*(_53566_d));;
}



inline jule::Ptr<_20d087165_Data> _20d569988_callerCopySlice(jule::Ptr<_20d087165_Data>* _58825_dest, jule::Ptr<_20d088d59_Eval>* _58843_e, jule::Ptr<_20d374a07_FnCallExpr>* _58858_fc, jule::Ptr<_20d087165_Data>* _58880_d) {
	if ((!((*((*(_58825_dest))))._field_Mutable))) {
		_20d0893a9_pushErr((*(_58843_e)).ptr(), (*((*((*(_58858_fc))))._field_Args[0LL]))._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_20d087165_Data> _59313_src = _20d4cdc93_evalExpr((*(_58843_e)), (*((*(_58858_fc))))._field_Args[1LL]);;
	if ((_59313_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_20d4eb60c_Slc> _59713_slc = _20d4e2bdb_Slc((*(_59313_src))._field_Kind.ptr());;
	if ((_59713_slc != nullptr)) {
		if (((!((*(_59313_src))._field_Mutable)) && _20d4e0b2e_Mutable((*(_59713_slc))._field_Elem.ptr()))) {
			_20d0893a9_pushErr((*(_58843_e)).ptr(), (*((*((*(_58858_fc))))._field_Args[1LL]))._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		};
		if ((!(_20d4de996_Equal((*((*(_58825_dest))))._field_Kind, (*(_59313_src))._field_Kind)))) {
			_20d0893a9_pushErr((*(_58843_e)).ptr(), (*((*((*(_58858_fc))))._field_Args[1LL]))._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*((*(_58825_dest))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_20d4de655_Str((*(_59313_src))._field_Kind.ptr()), &__jule_any_type4)}));
		};
	} else {
		jule::Ptr<_20d4e710d_Prim> _60713_destPrim = _20d4e1b85_Prim((*(_20d4e2bdb_Slc((*((*(_58825_dest))))._field_Kind.ptr())))._field_Elem.ptr());;
		jule::Ptr<_20d4e710d_Prim> _60813_prim = _20d4e1b85_Prim((*(_59313_src))._field_Kind.ptr());;
		if (((((_60713_destPrim == nullptr) || (_60813_prim == nullptr)) || (!(_20d4ea595_IsStr(_60813_prim.ptr())))) || (!(_20d4e8a05_IsU8(_60713_destPrim.ptr()))))) {
			_20d0893a9_pushErr((*(_58843_e)).ptr(), (*((*((*(_58858_fc))))._field_Args[1LL]))._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*((*(_58825_dest))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_20d4de655_Str((*(_59313_src))._field_Kind.ptr()), &__jule_any_type4)}));
		};
	};
	(*((*(_58880_d))))._field_Kind=_20d080b53_lenKind();
	(*((*(_58880_d))))._field_Model=jule::Any(jule::new_ptr<_20d39d338_BuiltinCopyCallExprModel>(_20d39d338_BuiltinCopyCallExprModel{._field_Dest=(*(_58825_dest)), ._field_Src=_59313_src}), &__jule_any_type32);
	return (*(_58880_d));;
}



inline jule::Ptr<_20d087165_Data> _20d569db7_builtinCallerCopy(jule::Ptr<_20d088d59_Eval>* _62227_e, jule::Ptr<_20d374a07_FnCallExpr>* _62242_fc, jule::Ptr<_20d087165_Data>* _62264_d) {
	if (((*((*(_62242_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_62242_fc))))._field_Args.len() == 1LL)) {
			_20d0893a9_pushErr((*(_62227_e)).ptr(), (*((*(_62242_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3), &__jule_any_type4)}));
			return nullptr;;
		};
		_20d0893a9_pushErr((*(_62227_e)).ptr(), (*((*(_62242_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_62242_fc))))._field_Args.len() > 2LL)) {
		_20d0893a9_pushErr((*(_62227_e)).ptr(), (*((*((*(_62242_fc))))._field_Args[2LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("copy", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_20d087165_Data> _63513_dest = _20d4cdc93_evalExpr((*(_62227_e)), (*((*(_62242_fc))))._field_Args[0LL]);;
	{
		
		if ((_63513_dest == nullptr)) {
			_case_begin_212513510:;
			{
				return nullptr;;
			}
		}
		else if ((_20d4e2bdb_Slc((*(_63513_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_2125141d1:;
			{
				return _20d569988_callerCopySlice(&(_63513_dest), _62227_e, _62242_fc, _62264_d);;
			}
		}
		else {
			_case_begin_212513169:;
			{
				_20d0893a9_pushErr((*(_62227_e)).ptr(), (*((*((*(_62242_fc))))._field_Args[0LL]))._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_2125116b7:;
	};
}



inline jule::Ptr<_20d087165_Data> _20d56a23b_callerLenSlice(jule::Ptr<_20d087165_Data>* _64724_expr, jule::Ptr<_20d087165_Data>* _64742_d) {
	(*((*(_64742_d))))._field_Kind=_20d080b53_lenKind();
	(*((*(_64742_d))))._field_Model=jule::Any(jule::new_ptr<_20d39c788_BuiltinLenCallExprModel>(_20d39c788_BuiltinLenCallExprModel{._field_Expr=(*(_64724_expr))}), &__jule_any_type116);
	return (*(_64742_d));;
}



inline jule::Ptr<_20d087165_Data> _20d56a5b0_callerLenMap(jule::Ptr<_20d087165_Data>* _65522_expr, jule::Ptr<_20d087165_Data>* _65540_d) {
	(*((*(_65540_d))))._field_Kind=_20d080b53_lenKind();
	(*((*(_65540_d))))._field_Model=jule::Any(jule::new_ptr<_20d39c788_BuiltinLenCallExprModel>(_20d39c788_BuiltinLenCallExprModel{._field_Expr=(*(_65522_expr))}), &__jule_any_type116);
	return (*(_65540_d));;
}



inline jule::Ptr<_20d087165_Data> _20d56a934_callerLenArr(jule::Ptr<_20d087165_Data>* _66322_expr, jule::Ptr<_20d087165_Data>* _66340_d) {
	(*((*(_66340_d))))._field_Kind=_20d080b53_lenKind();
	(*((*(_66340_d))))._field_Constant=static__20b065a3b_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_20d4e2955_Arr((*((*(_66322_expr))))._field_Kind.ptr())))._field_N)));
	(*((*(_66340_d))))._field_Model=jule::Any((*((*(_66340_d))))._field_Constant, &__jule_any_type19);
	return (*(_66340_d));;
}



inline jule::Ptr<_20d087165_Data> _20d56aca8_callerLenStr(jule::Ptr<_20d087165_Data>* _67022_expr, jule::Ptr<_20d087165_Data>* _67040_d) {
	(*((*(_67040_d))))._field_Kind=_20d080b53_lenKind();
	if (_20d087a39_IsConst((*(_67022_expr)).ptr())) {
		(*((*(_67040_d))))._field_Constant=static__20b065a3b_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_20b067774_ReadStr((*((*(_67022_expr))))._field_Constant.ptr()).len())));
		(*((*(_67040_d))))._field_Model=jule::Any((*((*(_67040_d))))._field_Constant, &__jule_any_type19);
	} else {
		(*((*(_67040_d))))._field_Model=jule::Any(jule::new_ptr<_20d39c788_BuiltinLenCallExprModel>(_20d39c788_BuiltinLenCallExprModel{._field_Expr=(*(_67022_expr))}), &__jule_any_type116);
	};
	return (*(_67040_d));;
}



inline jule::Ptr<_20d087165_Data> _20d56b12c_callerLenComptime(jule::Ptr<_20d087165_Data>* _68327_d, jule::I64 _68337_n) {
	(*((*(_68327_d))))._field_Kind=_20d080b53_lenKind();
	(*((*(_68327_d))))._field_Constant=static__20b065a3b_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_68337_n)));
	(*((*(_68327_d))))._field_Model=jule::Any((*((*(_68327_d))))._field_Constant, &__jule_any_type19);
	return (*(_68327_d));;
}



inline jule::Ptr<_20d087165_Data> _20d56b55b_builtinCallerLen(jule::Ptr<_20d088d59_Eval>* _69026_e, jule::Ptr<_20d374a07_FnCallExpr>* _69041_fc, jule::Ptr<_20d087165_Data>* _69063_d) {
	if (((*((*(_69041_fc))))._field_Args.len() < 1LL)) {
		_20d0893a9_pushErr((*(_69026_e)).ptr(), (*((*(_69041_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_69041_fc))))._field_Args.len() > 1LL)) {
		_20d0893a9_pushErr((*(_69026_e)).ptr(), (*((*((*(_69041_fc))))._field_Args[1LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("len", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_20d087165_Data> _69813_dest = _20d4cd952_evalExpr1((*(_69026_e)), (*((*(_69041_fc))))._field_Args[0LL]);;
	{
		
		if ((_69813_dest == nullptr)) {
			_case_begin_21252064e:;
			{
				return nullptr;;
			}
		}
		else if ((_20d4e2bdb_Slc((*(_69813_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_212521320:;
			{
				return _20d56a23b_callerLenSlice(&(_69813_dest), _69063_d);;
			}
		}
		else if ((_20d4e2955_Arr((*(_69813_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_212521386:;
			{
				return _20d56a934_callerLenArr(&(_69813_dest), _69063_d);;
			}
		}
		else if ((_20d4e3725_Map((*(_69813_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_2125213ec:;
			{
				return _20d56a5b0_callerLenMap(&(_69813_dest), _69063_d);;
			}
		}
		else if (((_20d4e1b85_Prim((*(_69813_dest))._field_Kind.ptr()) != nullptr) && _20d4ea595_IsStr(_20d4e1b85_Prim((*(_69813_dest))._field_Kind.ptr()).ptr()))) {
			_case_begin_21252031e:;
			{
				return _20d56aca8_callerLenStr(&(_69813_dest), _69063_d);;
			}
		}
		else if ((_20d4e3ec8_comptimeStructFields((*(_69813_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_212520385:;
			{
				return _20d56b12c_callerLenComptime(_69063_d, static_cast<jule::I64>((*(_20d4e3ec8_comptimeStructFields((*(_69813_dest))._field_Kind.ptr())))._field_fields.len()));;
			}
		}
		else if ((_20d4e44e5_comptimeEnumFields((*(_69813_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_2125203eb:;
			{
				return _20d56b12c_callerLenComptime(_69063_d, static_cast<jule::I64>((*(_20d4e44e5_comptimeEnumFields((*(_69813_dest))._field_Kind.ptr())))._field_fields.len()));;
			}
		}
		else if ((_20d4e52b5_comptimeTypeInfos((*(_69813_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_212520462:;
			{
				return _20d56b12c_callerLenComptime(_69063_d, static_cast<jule::I64>((*(_20d4e52b5_comptimeTypeInfos((*(_69813_dest))._field_Kind.ptr())))._field_types.len()));;
			}
		}
		else if ((_20d4e4a12_comptimeParams((*(_69813_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_2125214b8:;
			{
				return _20d56b12c_callerLenComptime(_69063_d, static_cast<jule::I64>((*(_20d4e4a12_comptimeParams((*(_69813_dest))._field_Kind.ptr())))._field_params.len()));;
			}
		}
		else if ((_20d4e57d2_comptimeStatics((*(_69813_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_21252152e:;
			{
				return _20d56b12c_callerLenComptime(_69063_d, static_cast<jule::I64>((*(_20d4e57d2_comptimeStatics((*(_69813_dest))._field_Kind.ptr())))._field_fields.len()));;
			}
		}
		else if ((_20d4e631b_comptimeFiles((*(_69813_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_212521595:;
			{
				return _20d56b12c_callerLenComptime(_69063_d, static_cast<jule::I64>((*(_20d4e631b_comptimeFiles((*(_69813_dest))._field_Kind.ptr())))._field_files.len()));;
			}
		}
		else {
			_case_begin_2125202a8:;
			{
				_20d0893a9_pushErr((*(_69026_e)).ptr(), (*((*((*(_69041_fc))))._field_Args[0LL]))._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_21251d806:;
	};
}



inline jule::Ptr<_20d087165_Data> _20d56b8d0_callerCapSlice(jule::Ptr<_20d087165_Data>* _72824_expr, jule::Ptr<_20d087165_Data>* _72842_d) {
	(*((*(_72842_d))))._field_Kind=_20d080b53_lenKind();
	(*((*(_72842_d))))._field_Model=jule::Any(jule::new_ptr<_20d39ca85_BuiltinCapCallExprModel>(_20d39ca85_BuiltinCapCallExprModel{._field_Expr=(*(_72824_expr))}), &__jule_any_type117);
	return (*(_72842_d));;
}



inline jule::Ptr<_20d087165_Data> _20d56bd0e_builtinCallerCap(jule::Ptr<_20d088d59_Eval>* _73626_e, jule::Ptr<_20d374a07_FnCallExpr>* _73641_fc, jule::Ptr<_20d087165_Data>* _73663_d) {
	if (((*((*(_73641_fc))))._field_Args.len() < 1LL)) {
		_20d0893a9_pushErr((*(_73626_e)).ptr(), (*((*(_73641_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_73641_fc))))._field_Args.len() > 1LL)) {
		_20d0893a9_pushErr((*(_73626_e)).ptr(), (*((*((*(_73641_fc))))._field_Args[1LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("cap", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_20d087165_Data> _74413_dest = _20d4cdc93_evalExpr((*(_73626_e)), (*((*(_73641_fc))))._field_Args[0LL]);;
	{
		
		if ((_74413_dest == nullptr)) {
			_case_begin_21253030c:;
			{
				return nullptr;;
			}
		}
		else if ((*(_74413_dest))._field_Decl) {
			_case_begin_212530ecd:;
			{
				_20d0893a9_pushErr((*(_73626_e)).ptr(), (*((*((*(_73641_fc))))._field_Args[0LL]))._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_20d4e2bdb_Slc((*(_74413_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_212531044:;
			{
				return _20d56b8d0_callerCapSlice(&(_74413_dest), _73663_d);;
			}
		}
		else {
			_case_begin_21252ee66:;
			{
				_20d0893a9_pushErr((*(_73626_e)).ptr(), (*((*((*(_73641_fc))))._field_Args[0LL]))._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_21252d4b4:;
	};
}



inline jule::Ptr<_20d087165_Data> _20d56c2e8_callerDeleteMap(jule::Ptr<_20d088d59_Eval>* _75925_e, jule::Ptr<_20d374a07_FnCallExpr>* _75940_fc, jule::Ptr<_20d087165_Data>* _75962_expr, jule::Ptr<_20d087165_Data>* _75980_d) {
	if ((!((*((*(_75962_expr))))._field_Mutable))) {
		_20d0893a9_pushErr((*(_75925_e)).ptr(), (*((*((*(_75940_fc))))._field_Args[0LL]))._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	(*(_75980_d))=_20d4d9ac3_buildVoidData();
	jule::Ptr<_20d39ce5e_BuiltinDeleteCallExprModel> _76413_model = jule::new_ptr<_20d39ce5e_BuiltinDeleteCallExprModel>(_20d39ce5e_BuiltinDeleteCallExprModel{._field_Dest=(*(_75962_expr)), });;
	if (((*((*(_75940_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_20d087165_Data> _76817_key = _20d4cdc93_evalExpr((*(_75925_e)), (*((*(_75940_fc))))._field_Args[1LL]);;
		{
			
			if ((_76817_key == nullptr)) {
				_case_begin_212536d6e:;
				{
					return nullptr;;
				}
			}
			else if ((*(_76817_key))._field_Decl) {
				_case_begin_212535961:;
				{
					_20d0893a9_pushErr((*(_75925_e)).ptr(), (*((*((*(_75940_fc))))._field_Args[1LL]))._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_2125358ea:;
				{
					;
					jule::Ptr<_20d4de28c_TypeKind> _77721_keyType = (*(_20d4e3725_Map((*((*(_75962_expr))))._field_Kind.ptr())))._field_Key;;
					if ((!(_20d441541_checkAssignType((*((*(_75925_e))))._field_s, false, &(_77721_keyType), &(_76817_key), (*((*((*(_75940_fc))))._field_Args[1LL]))._field_Token)))) {
						return nullptr;;
					};
				}
			}
			_match_end_212535884:;
		};
		(*(_76413_model))._field_Key=_76817_key;
	};
	(*((*(_75980_d))))._field_Model=jule::Any(_76413_model, &__jule_any_type33);
	return (*(_75980_d));;
}



inline jule::Ptr<_20d087165_Data> _20d56c727_builtinCallerDelete(jule::Ptr<_20d088d59_Eval>* _78829_e, jule::Ptr<_20d374a07_FnCallExpr>* _78844_fc, jule::Ptr<_20d087165_Data>* _78866_d) {
	if (((*((*(_78844_fc))))._field_Args.len() < 1LL)) {
		_20d0893a9_pushErr((*(_78829_e)).ptr(), (*((*(_78844_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("map", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_78844_fc))))._field_Args.len() > 2LL)) {
		_20d0893a9_pushErr((*(_78829_e)).ptr(), (*((*((*(_78844_fc))))._field_Args[1LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("delete", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_20d087165_Data> _79613_dest = _20d4cdc93_evalExpr((*(_78829_e)), (*((*(_78844_fc))))._field_Args[0LL]);;
	{
		
		if ((_79613_dest == nullptr)) {
			_case_begin_21253cca9:;
			{
				return nullptr;;
			}
		}
		else if ((*(_79613_dest))._field_Decl) {
			_case_begin_21253d97a:;
			{
				_20d0893a9_pushErr((*(_78829_e)).ptr(), (*((*((*(_78844_fc))))._field_Args[0LL]))._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_20d4e3725_Map((*(_79613_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_21253d9e1:;
			{
				return _20d56c2e8_callerDeleteMap(_78829_e, _78844_fc, &(_79613_dest), _78866_d);;
			}
		}
		else {
			_case_begin_21253c913:;
			{
				_20d0893a9_pushErr((*(_78829_e)).ptr(), (*((*((*(_78844_fc))))._field_Args[0LL]))._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_21253ae61:;
	};
}



inline jule::Ptr<_20d087165_Data> _20d56cb56_builtinCallerClone(jule::Ptr<_20d088d59_Eval>* _81128_e, jule::Ptr<_20d374a07_FnCallExpr>* _81143_fc, jule::Ptr<_20d087165_Data>* ) {
	if (((*((*(_81143_fc))))._field_Args.len() < 1LL)) {
		_20d0893a9_pushErr((*(_81128_e)).ptr(), (*((*(_81143_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_81143_fc))))._field_Args.len() > 1LL)) {
		_20d0893a9_pushErr((*(_81128_e)).ptr(), (*((*((*(_81143_fc))))._field_Args[1LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("clone", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_20d087165_Data> _82013_d = _20d4cdc93_evalExpr((*(_81128_e)), (*((*(_81143_fc))))._field_Args[0LL]);;
	if ((_82013_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_20d4e1668_SupportsCloning((*(_82013_d))._field_Kind.ptr())))) {
		{
			
			if ((_20d4e2bdb_Slc((*(_82013_d))._field_Kind.ptr()) != nullptr) || (_20d4e3725_Map((*(_82013_d))._field_Kind.ptr()) != nullptr) || (_20d4e2955_Arr((*(_82013_d))._field_Kind.ptr()) != nullptr) || (_20d4e1e1b_Sptr((*(_82013_d))._field_Kind.ptr()) != nullptr)) {
				_case_begin_212544552:;
				{
					{
						_20d0893a9_pushErr((*(_81128_e)).ptr(), (*((*((*(_81143_fc))))._field_Args[0LL]))._field_Token, jule::Str("type @ has internally types which is not supports cloning", 57), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_82013_d))._field_Kind.ptr()), &__jule_any_type4)}));
					};
				}
			}
			else if ((_20d4e3208_Struct((*(_82013_d))._field_Kind.ptr()) != nullptr)) {
				_case_begin_212543de2:;
				{
					{
						_20d0893a9_pushErr((*(_81128_e)).ptr(), (*((*((*(_81143_fc))))._field_Args[0LL]))._field_Token, jule::Str("type @ is not derives @", 23), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_82013_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str("Clone", 5), &__jule_any_type4)}));
					};
				}
			}
			else {
				_case_begin_212543d7b:;
				{
					{
						_20d0893a9_pushErr((*(_81128_e)).ptr(), (*((*((*(_81143_fc))))._field_Args[0LL]))._field_Token, jule::Str("type @ is not support cloning", 29), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_82013_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str("Clone", 5), &__jule_any_type4)}));
					};
				}
			}
			_match_end_212543cb0:;
		};
	};
	(*(_82013_d))._field_Mutable=true;
	(*(_82013_d))._field_Model=jule::Any(jule::new_ptr<_20d39ada2_BuiltinCloneCallExprModel>(_20d39ada2_BuiltinCloneCallExprModel{._field_Expr=(*(_82013_d))._field_Model}), &__jule_any_type27);
	return _82013_d;;
}



inline jule::Ptr<_20d087165_Data> _20d56d22d_builtinCallerAssert(jule::Ptr<_20d088d59_Eval>* _85329_e, jule::Ptr<_20d374a07_FnCallExpr>* _85344_fc, jule::Ptr<_20d087165_Data>* ) {
	if (((*((*(_85344_fc))))._field_Args.len() < 1LL)) {
		_20d0893a9_pushErr((*(_85329_e)).ptr(), (*((*(_85344_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_85344_fc))))._field_Args.len() > 2LL)) {
		_20d0893a9_pushErr((*(_85329_e)).ptr(), (*((*((*(_85344_fc))))._field_Args[2LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("assert", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_20d087165_Data> _86213_expr = _20d4cdc93_evalExpr((*(_85329_e)), (*((*(_85344_fc))))._field_Args[0LL]);;
	if ((_86213_expr == nullptr)) {
		return nullptr;;
	};
	if (((_20d4e1b85_Prim((*(_86213_expr))._field_Kind.ptr()) == nullptr) || (!(_20d4ea30e_IsBool(_20d4e1b85_Prim((*(_86213_expr))._field_Kind.ptr()).ptr()))))) {
		_20d0893a9_pushErr((*(_85329_e)).ptr(), (*((*(_85344_fc))))._field_Token, jule::Str("assertion requires boolean expression", 37), jule::Slice<jule::Any>());
	};
	jule::Ptr<_20d39bb0b_BuiltinAssertCallExprModel> _87113_model = jule::new_ptr<_20d39bb0b_BuiltinAssertCallExprModel>(_20d39bb0b_BuiltinAssertCallExprModel{._field_Token=(*((*(_85344_fc))))._field_Token, ._field_Expr=(*(_86213_expr))._field_Model, ._field_Log=jule::Str("assertion failed", 16)});;
	if (((*((*(_85344_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_20d087165_Data> _87917_log = _20d4cdc93_evalExpr((*(_85329_e)), (*((*(_85344_fc))))._field_Args[1LL]);;
		if ((_87917_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_20d087a39_IsConst(_87917_log.ptr()))) || (_20d4e1b85_Prim((*(_87917_log))._field_Kind.ptr()) == nullptr)) || (!(_20d4ea595_IsStr(_20d4e1b85_Prim((*(_87917_log))._field_Kind.ptr()).ptr()))))) {
			_20d0893a9_pushErr((*(_85329_e)).ptr(), (*((*((*(_85344_fc))))._field_Args[1LL]))._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("const str", 9), &__jule_any_type4),jule::Any(_20d4de655_Str((*(_87917_log))._field_Kind.ptr()), &__jule_any_type4)}));
			return nullptr;;
		};
		(*(_87113_model))._field_Log=_20b067774_ReadStr((*(_87917_log))._field_Constant.ptr());
	};
	jule::Ptr<_20d087165_Data> _89213_d = _20d4d9ac3_buildVoidData();;
	(*(_89213_d))._field_Model=jule::Any(_87113_model, &__jule_any_type31);
	return _89213_d;;
}



inline jule::Ptr<_20d087165_Data> _20d56d5e6_builtinCallerStdComptimeTypeOf(jule::Ptr<_20d088d59_Eval>* _89740_e, jule::Ptr<_20d374a07_FnCallExpr>* _89755_fc, jule::Ptr<_20d087165_Data>* ) {
	if (((*((*(_89755_fc))))._field_Args.len() < 1LL)) {
		_20d0893a9_pushErr((*(_89740_e)).ptr(), (*((*(_89755_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_89755_fc))))._field_Args.len() > 1LL)) {
		_20d0893a9_pushErr((*(_89740_e)).ptr(), (*((*((*(_89755_fc))))._field_Args[1LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("TypeOf", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_20d087165_Data> _90613_d = _20d4cce7e_evalExprKind((*(_89740_e)), (*((*((*(_89755_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_90613_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_20d3a5a49_FnIns> _9109_f = _20d4e2e72_Fn((*(_90613_d))._field_Kind.ptr());;
	if ((_9109_f != nullptr)) {
		if (_20d3a6ece_IsBuiltin(_9109_f.ptr())) {
			_20d0893a9_pushErr((*(_89740_e)).ptr(), (*((*((*(_89755_fc))))._field_Args[0LL]))._field_Token, jule::Str("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(jule::Str("<built-in fn>", 13), &__jule_any_type4)}));
			return nullptr;;
		};
		if (((*(_9109_f))._field_Generics.len() != (*((*(_9109_f))._field_Decl))._field_Generics.len())) {
			_20d0893a9_pushErr((*(_89740_e)).ptr(), (*((*((*(_89755_fc))))._field_Args[0LL]))._field_Token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_20d39066b_StructIns> _9219_s = _20d4e3208_Struct((*(_90613_d))._field_Kind.ptr());;
	if (((_9219_s != nullptr) && ((*(_9219_s))._field_Generics.len() != (*((*(_9219_s))._field_Decl))._field_Generics.len()))) {
		_20d0893a9_pushErr((*(_89740_e)).ptr(), (*((*((*(_89755_fc))))._field_Args[0LL]))._field_Token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_20d4e3c42_comptime((*(_90613_d))._field_Kind.ptr())) {
		_20d0893a9_pushErr((*(_89740_e)).ptr(), (*((*((*(_89755_fc))))._field_Args[0LL]))._field_Token, jule::Str("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_90613_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	return _20d3d93da_buildComptimeTypeInfoData(&((*((*(_89740_e))))._field_s), &((*(_90613_d))._field_Kind));;
}



inline jule::Ptr<_20d087165_Data> _20d56da25_builtinCallerStdComptimeValueOf(jule::Ptr<_20d088d59_Eval>* _93341_e, jule::Ptr<_20d374a07_FnCallExpr>* _93356_fc, jule::Ptr<_20d087165_Data>* ) {
	if (((*((*(_93356_fc))))._field_Args.len() < 1LL)) {
		_20d0893a9_pushErr((*(_93341_e)).ptr(), (*((*(_93356_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_93356_fc))))._field_Args.len() > 1LL)) {
		_20d0893a9_pushErr((*(_93341_e)).ptr(), (*((*((*(_93356_fc))))._field_Args[1LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("ValueOf", 7), &__jule_any_type4)}));
	};
	jule::Ptr<_20d087165_Data> _94113_d = _20d4cdc93_evalExpr((*(_93341_e)), (*((*(_93356_fc))))._field_Args[0LL]);;
	if ((_94113_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_20d080ea5_isGoodValueToInfer(&(_94113_d))))) {
		_20d0893a9_pushErr((*(_93341_e)).ptr(), (*((*((*(_93356_fc))))._field_Args[0LL]))._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_94113_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str("ValueOf", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	return _20d3d961b_buildComptimeValue(&(_94113_d));;
}



inline jule::Ptr<_20d087165_Data> _20d56dcde_rangeData(jule::Trait<_20d3bbea0_comptimeRangeKind> _95318_kind) {
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(jule::new_ptr<_20d3bc18c_comptimeRange>(_20d3bc18c_comptimeRange{._field_kind=_95318_kind}), 5)}), });;
}



inline jule::Ptr<_20d087165_Data> _20d56e21d_builtinCallerStdComptimeRange(jule::Ptr<_20d088d59_Eval>* _96339_e, jule::Ptr<_20d374a07_FnCallExpr>* _96354_fc, jule::Ptr<_20d087165_Data>* ) {
	if (((*((*(_96354_fc))))._field_Args.len() < 1LL)) {
		_20d0893a9_pushErr((*(_96339_e)).ptr(), (*((*(_96354_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_96354_fc))))._field_Args.len() > 1LL)) {
		_20d0893a9_pushErr((*(_96339_e)).ptr(), (*((*((*(_96354_fc))))._field_Args[1LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Range", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_20d087165_Data> _97213_d = _20d4cce7e_evalExprKind((*(_96339_e)), (*((*((*(_96354_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_97213_d == nullptr)) {
		return nullptr;;
	};
	{
		
		if ((_20d4e3ec8_comptimeStructFields((*(_97213_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_21256bb73:;
			{
				return _20d56dcde_rangeData(jule::Trait<_20d3bbea0_comptimeRangeKind>(_20d4e3ec8_comptimeStructFields((*(_97213_d))._field_Kind.ptr()), 0));;
			}
		}
		else if ((_20d4e44e5_comptimeEnumFields((*(_97213_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_21256ab2d:;
			{
				return _20d56dcde_rangeData(jule::Trait<_20d3bbea0_comptimeRangeKind>(_20d4e44e5_comptimeEnumFields((*(_97213_d))._field_Kind.ptr()), 2));;
			}
		}
		else if ((_20d4e52b5_comptimeTypeInfos((*(_97213_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_21256ab94:;
			{
				return _20d56dcde_rangeData(jule::Trait<_20d3bbea0_comptimeRangeKind>(_20d4e52b5_comptimeTypeInfos((*(_97213_d))._field_Kind.ptr()), 4));;
			}
		}
		else if ((_20d4e4a12_comptimeParams((*(_97213_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_21256ac0a:;
			{
				return _20d56dcde_rangeData(jule::Trait<_20d3bbea0_comptimeRangeKind>(_20d4e4a12_comptimeParams((*(_97213_d))._field_Kind.ptr()), 3));;
			}
		}
		else if ((_20d4e57d2_comptimeStatics((*(_97213_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_21256a7ba:;
			{
				return _20d56dcde_rangeData(jule::Trait<_20d3bbea0_comptimeRangeKind>(_20d4e57d2_comptimeStatics((*(_97213_d))._field_Kind.ptr()), 1));;
			}
		}
		else if ((_20d4e631b_comptimeFiles((*(_97213_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_21256a831:;
			{
				return _20d56dcde_rangeData(jule::Trait<_20d3bbea0_comptimeRangeKind>(_20d4e631b_comptimeFiles((*(_97213_d))._field_Kind.ptr()), 5));;
			}
		}
		else {
			_case_begin_21256a754:;
			{
				_20d0893a9_pushErr((*(_96339_e)).ptr(), (*((*(_96354_fc))))._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_97213_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str("Range", 5), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_21256a4e0:;
	};
}



inline jule::Ptr<_20d087165_Data> _20d56e64c_builtinCallerStdComptimeLine(jule::Ptr<_20d088d59_Eval>* _99538_e, jule::Ptr<_20d374a07_FnCallExpr>* _99553_fc, jule::Ptr<_20d087165_Data>* ) {
	if (((*((*(_99553_fc))))._field_Args.len() > 0LL)) {
		_20d0893a9_pushErr((*(_99538_e)).ptr(), (*((*((*(_99553_fc))))._field_Args[1LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Line", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_20b0655eb_Const> _99913_constant = static__20b065a3b_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*((*((*(_99553_fc))))._field_Token))._field_Row)));;
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d5637b7_primInt, ._field_Model=jule::Any(_99913_constant, &__jule_any_type19), ._field_Constant=_99913_constant});;
}



inline jule::Ptr<_20d087165_Data> _20d56ea7b_builtinCallerStdComptimeFile(jule::Ptr<_20d088d59_Eval>* _100738_e, jule::Ptr<_20d374a07_FnCallExpr>* _100753_fc, jule::Ptr<_20d087165_Data>* ) {
	if (((*((*(_100753_fc))))._field_Args.len() > 0LL)) {
		_20d0893a9_pushErr((*(_100738_e)).ptr(), (*((*((*(_100753_fc))))._field_Args[1LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("File", 4), &__jule_any_type4)}));
	};
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(jule::new_ptr<_20d3d70b9_comptimeFile>(_20d3d70b9_comptimeFile{._field_file=(*((*((*(_100738_e))))._field_s))._field_file}), 18)}), });;
}



inline jule::Ptr<_20d087165_Data> _20d56eeaa_builtinCallerStdComptimeFiles(jule::Ptr<_20d088d59_Eval>* _102039_e, jule::Ptr<_20d374a07_FnCallExpr>* _102054_fc, jule::Ptr<_20d087165_Data>* ) {
	if (((*((*(_102054_fc))))._field_Args.len() > 0LL)) {
		_20d0893a9_pushErr((*(_102039_e)).ptr(), (*((*((*(_102054_fc))))._field_Args[1LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Files", 5), &__jule_any_type4)}));
	};
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=jule::new_ptr<_20d4de28c_TypeKind>(_20d4de28c_TypeKind{._field_Kind=jule::Trait<_20d4ddcd6_Kind>(jule::new_ptr<_20d3d59be_comptimeFiles>(_20d3d59be_comptimeFiles{._field_files=(*((*((*(_102039_e))))._field_s))._field_files}), 17)}), });;
}



inline jule::Ptr<_20d087165_Data> _20d5703d9_builtinCallerStdComptimeTypeAlias(jule::Ptr<_20d088d59_Eval>* _103343_e, jule::Ptr<_20d374a07_FnCallExpr>* _103358_fc, jule::Ptr<_20d087165_Data>* ) {
	if (((*((*(_103358_fc))))._field_Args.len() > 2LL)) {
		_20d0893a9_pushErr((*(_103343_e)).ptr(), (*((*((*(_103358_fc))))._field_Args[1LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("TypeAlias", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_103358_fc))))._field_Args.len() == 0LL)) {
		_20d0893a9_pushErr((*(_103343_e)).ptr(), (*((*(_103358_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("ident, type", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_103358_fc))))._field_Args.len() == 1LL)) {
		_20d0893a9_pushErr((*(_103343_e)).ptr(), (*((*(_103358_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_103358_fc))))._field_Args[0LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_21257b765:;
			{
				goto _match_end_21257c975;
			}
		}
		else {
			_case_begin_21257c9db:;
			{
				_20d0893a9_pushErr((*(_103343_e)).ptr(), (*((*((*(_103358_fc))))._field_Args[0LL]))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				_20d08971c_pushSuggestion((*(_103343_e)).ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_21257c975:;
	};
	jule::Ptr<_20d3510bb_Token> _105413_ident = (*((*((*((*(_103358_fc))))._field_Args[0LL]))._field_Kind.cast_ptr<_20d372708_IdentExpr>(&__jule_any_type83)))._field_Token;;
	{
		auto &_match_expr{ (*((*(_103343_e))))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_21258520d:;
			{
				goto _match_end_212584d34;
			}
		}
		else {
			_case_begin_212584d89:;
			{
				_20d0893a9_pushErr((*(_103343_e)).ptr(), (*((*(_103358_fc))))._field_Token, jule::Str("you can call @ function in the scopes only", 42), jule::Slice<jule::Any>::make({jule::Any(jule::Str("TypeAlias", 9), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_212584d34:;
	};
	jule::Ptr<_20d3ea9a1_scopeChecker> _106313_sc = (*((*(_103343_e))))._field_lookup.cast_ptr<_20d3ea9a1_scopeChecker>(0);;
	jule::Ptr<_20d4dd49a_TypeAlias> _106413_alias = jule::new_ptr<_20d4dd49a_TypeAlias>(_20d4dd49a_TypeAlias{._field_Scope=(*(_106313_sc))._field_tree, ._field_Public=_20d432ee4_IsPub(&((*(_105413_ident))._field_Kind)), ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=_105413_ident, ._field_Ident=(*(_105413_ident))._field_Kind, ._field_Kind=jule::new_ptr<_20d4e6706_TypeSymbol>(), });;
	jule::Ptr<_20d087165_Data> _107413_t = _20d4cd2c0_eval1((*(_103343_e)), (*((*(_103358_fc))))._field_Args[1LL]);;
	if ((_107413_t == nullptr)) {
		return nullptr;;
	};
	if ((*(_107413_t))._field_Decl) {
		(*((*(_106413_alias))._field_Kind))._field_Kind=(*(_107413_t))._field_Kind;
	} else {
		jule::Ptr<_20d3cbb5d_comptimeTypeInfo> _108117_cti = _20d4e554b_comptimeTypeInfo((*(_107413_t))._field_Kind.ptr());;
		if ((_108117_cti == nullptr)) {
			_20d0893a9_pushErr((*(_103343_e)).ptr(), (*((*((*(_103358_fc))))._field_Args[1LL]))._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			_20d08971c_pushSuggestion((*(_103343_e)).ptr(), jule::Str("expected type declaration", 25), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*((*(_106413_alias))._field_Kind))._field_Kind=(*(_108117_cti))._field_base;
	};
	_20d400258_checkTypeAlias(_106313_sc, &(_106413_alias));
	return _20d4d9ac3_buildVoidData();;
}



inline jule::Ptr<_20d087165_Data> _20d570818_builtinCallerStdMemSizeOf(jule::Ptr<_20d088d59_Eval>* _109335_e, jule::Ptr<_20d374a07_FnCallExpr>* _109350_fc, jule::Ptr<_20d087165_Data>* ) {
	jule::Ptr<_20d087165_Data> _109413_result = jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d5633dd_primUint, });;
	if (((*((*(_109350_fc))))._field_Args.len() < 1LL)) {
		_20d0893a9_pushErr((*(_109335_e)).ptr(), (*((*(_109350_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type4)}));
		return _109413_result;;
	};
	if (((*((*(_109350_fc))))._field_Args.len() > 1LL)) {
		_20d0893a9_pushErr((*(_109335_e)).ptr(), (*((*((*(_109350_fc))))._field_Args[1LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("SizeOf", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_20d087165_Data> _110613_d = _20d4cce7e_evalExprKind((*(_109335_e)), (*((*((*(_109350_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_110613_d == nullptr)) {
		return _109413_result;;
	};
	if ((!(_20d50bcc1_validTypeForXof(&((*(_110613_d))._field_Kind))))) {
		_20d0893a9_pushErr((*(_109335_e)).ptr(), (*((*((*(_109350_fc))))._field_Args[0LL]))._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_110613_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str("SizeOf", 6), &__jule_any_type4)}));
	};
	(*(_109413_result))._field_Model=jule::Any(jule::new_ptr<_20d39db96_SizeofExprModel>(_20d39db96_SizeofExprModel{._field_Expr=(*(_110613_d))._field_Model}), &__jule_any_type118);
	return _109413_result;;
}



inline jule::Ptr<_20d087165_Data> _20d570c47_builtinCallerStdMemAlignOf(jule::Ptr<_20d088d59_Eval>* _111836_e, jule::Ptr<_20d374a07_FnCallExpr>* _111851_fc, jule::Ptr<_20d087165_Data>* ) {
	jule::Ptr<_20d087165_Data> _111913_result = jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d5633dd_primUint, });;
	if (((*((*(_111851_fc))))._field_Args.len() < 1LL)) {
		_20d0893a9_pushErr((*(_111836_e)).ptr(), (*((*(_111851_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type4)}));
		return _111913_result;;
	};
	if (((*((*(_111851_fc))))._field_Args.len() > 1LL)) {
		_20d0893a9_pushErr((*(_111836_e)).ptr(), (*((*((*(_111851_fc))))._field_Args[1LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("AlignOf", 7), &__jule_any_type4)}));
	};
	jule::Ptr<_20d087165_Data> _113113_d = _20d4cce7e_evalExprKind((*(_111836_e)), (*((*((*(_111851_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_113113_d == nullptr)) {
		return _111913_result;;
	};
	if ((!(_20d50bcc1_validTypeForXof(&((*(_113113_d))._field_Kind))))) {
		_20d0893a9_pushErr((*(_111836_e)).ptr(), (*((*((*(_111851_fc))))._field_Args[0LL]))._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_20d4de655_Str((*(_113113_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str("AlignOf", 7), &__jule_any_type4)}));
	};
	(*(_111913_result))._field_Model=jule::Any(jule::new_ptr<_20d39de3d_AlignofExprModel>(_20d39de3d_AlignofExprModel{._field_Expr=(*(_113113_d))._field_Model}), &__jule_any_type119);
	return _111913_result;;
}



inline jule::Ptr<_20d087165_Data> _20d571176_builtinCallerStdMemFree(jule::Ptr<_20d088d59_Eval>* _114333_e, jule::Ptr<_20d374a07_FnCallExpr>* _114348_fc, jule::Ptr<_20d087165_Data>* ) {
	if (((*((*(_114348_fc))))._field_Args.len() < 1LL)) {
		_20d0893a9_pushErr((*(_114333_e)).ptr(), (*((*(_114348_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("h", 1), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_114348_fc))))._field_Args.len() > 1LL)) {
		_20d0893a9_pushErr((*(_114333_e)).ptr(), (*((*((*(_114348_fc))))._field_Args[1LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Free", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_20d087165_Data> _115213_d = _20d4cdc93_evalExpr((*(_114333_e)), (*((*(_114348_fc))))._field_Args[0LL]);;
	if ((_115213_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_20d4e13d2_PerformsRC((*(_115213_d))._field_Kind.ptr())))) {
		_20d0893a9_pushErr((*(_114333_e)).ptr(), (*((*((*(_114348_fc))))._field_Args[0LL]))._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
	};
	jule::Ptr<_20d087165_Data> _116113_result = _20d4d9ac3_buildVoidData();;
	(*(_116113_result))._field_Model=jule::Any(jule::new_ptr<_20d39ec0d_FreeExprModel>(_20d39ec0d_FreeExprModel{._field_Expr=(*(_115213_d))._field_Model}), &__jule_any_type34);
	return _116113_result;;
}



inline jule::Ptr<_20d087165_Data> _20d5715a5_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_20d088d59_Eval>* _116645_e, jule::Ptr<_20d374a07_FnCallExpr>* _116660_fc, jule::Ptr<_20d087165_Data>* ) {
	if (((*((*(_116660_fc))))._field_Args.len() < 1LL)) {
		_20d0893a9_pushErr((*(_116645_e)).ptr(), (*((*(_116660_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_116660_fc))))._field_Args.len() > 1LL)) {
		_20d0893a9_pushErr((*(_116645_e)).ptr(), (*((*((*(_116660_fc))))._field_Args[1LL]))._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("ToStr", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_20d087165_Data> _117513_d = _20d4cdc93_evalExpr((*(_116645_e)), (*((*(_116660_fc))))._field_Args[0LL]);;
	if ((_117513_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_20d50ace2_isBuiltinStrConvertable(&((*(_117513_d))._field_Kind))))) {
		_20d0893a9_pushErr((*(_116645_e)).ptr(), (*((*((*(_116660_fc))))._field_Args[0LL]))._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_20d087165_Data>(_20d087165_Data{._field_Kind=_20d562a91_primStr, ._field_Model=jule::Any(jule::new_ptr<_20d39e537_IntegratedToStrExprModel>(_20d39e537_IntegratedToStrExprModel{._field_Expr=(*(_117513_d))._field_Model}), &__jule_any_type120), });;
}



inline jule::Ptr<_20d087165_Data> _20d5719d4_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_20d088d59_Eval>* _119344_e, jule::Ptr<_20d374a07_FnCallExpr>* _119359_fc, jule::Ptr<_20d087165_Data>* _119381_d) {
	if ((!(_20d089d9e_isUnsafe((*(_119344_e)).ptr())))) {
		_20d0893a9_pushErr((*(_119344_e)).ptr(), (*((*(_119359_fc))))._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	if (((*((*(_119359_fc))))._field_Args.len() < 1LL)) {
		_20d0893a9_pushErr((*(_119344_e)).ptr(), (*((*(_119359_fc))))._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("code", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_20d087165_Data> _120313_argd = _20d4cdc93_evalExpr((*(_119344_e)), (*((*(_119359_fc))))._field_Args[0LL]);;
	if ((_120313_argd == nullptr)) {
		return nullptr;;
	};
	if (((_20d4e1b85_Prim((*(_120313_argd))._field_Kind.ptr()) == nullptr) || (!(_20d4ea595_IsStr(_20d4e1b85_Prim((*(_120313_argd))._field_Kind.ptr()).ptr()))))) {
		_20d0893a9_pushErr((*(_119344_e)).ptr(), (*((*((*(_119359_fc))))._field_Args[0LL]))._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type4),jule::Any(_20d4de655_Str((*(_120313_argd))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((!(_20d087a39_IsConst(_120313_argd.ptr()))) || (!(_20b069d70_IsStr((*(_120313_argd))._field_Constant.ptr()))))) {
		_20d0893a9_pushErr((*(_119344_e)).ptr(), (*((*((*(_119359_fc))))._field_Args[0LL]))._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20d087165_Data> _121813_r = _20d4d9ac3_buildVoidData();;
	jule::Ptr<_20d3a5a49_FnIns> _122013_f = _20d4e2e72_Fn((*((*(_119381_d))))._field_Kind.ptr());;
	if (((*(_122013_f))._field_Generics.len() > 0LL)) {
		(*(_121813_r))._field_Kind=(*((*(_122013_f))._field_Generics[0LL]))._field_Kind;
	};
	jule::Ptr<_20d39e911_BackendEmitExprModel> _122513_model = jule::new_ptr<_20d39e911_BackendEmitExprModel>(_20d39e911_BackendEmitExprModel{._field_Code=_20b067774_ReadStr((*(_120313_argd))._field_Constant.ptr()), });;
	if (((*((*(_119359_fc))))._field_Args.len() > 1LL)) {
		(*(_122513_model))._field_Exprs=jule::Slice<jule::Any>::alloc(0LL, ((*((*(_119359_fc))))._field_Args.len() - 1LL), jule::Any(nullptr));
		{
			auto expr = (*((*(_119359_fc))))._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_2125adc3c:;
			if (it != expr_end) {
				jule::Ptr<_20d370ccd_Expr> _123121_arg = *it;
				{
					_120313_argd=_20d4cd2c0_eval1((*(_119344_e)), _123121_arg);
					if ((_120313_argd == nullptr)) {
						return nullptr;;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = (*(_122513_model))._field_Exprs; __jule_push_dest.push((*(_120313_argd))._field_Model); };
				}
				_iter_next_2125adc3c:;
				++it;
				goto _iter_begin_2125adc3c;
			}
			_iter_end_2125adc3c:;
		};
	};
	(*(_121813_r))._field_Model=jule::Any(_122513_model, &__jule_any_type25);
	return _121813_r;;
}



inline jule::Ptr<_20d087165_Data> _20d571e13_builtinCallerStdDebugOut(jule::Ptr<_20d088d59_Eval>* _124434_e, jule::Ptr<_20d374a07_FnCallExpr>* _124449_fc, jule::Ptr<_20d087165_Data>* _124471_d) {
	(*(_124471_d))=_20d567bea_builtinCallerOut(_124434_e, _124449_fc, _124471_d);
	if (((*(_124471_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_124471_d))))._field_Model.cast_ptr<_20d39a6cb_BuiltinOutCallExprModel>(&__jule_any_type28)))._field_Debug=true;
	return (*(_124471_d));;
}



inline jule::Ptr<_20d087165_Data> _20d572342_builtinCallerStdDebugOutln(jule::Ptr<_20d088d59_Eval>* _125336_e, jule::Ptr<_20d374a07_FnCallExpr>* _125351_fc, jule::Ptr<_20d087165_Data>* _125373_d) {
	(*(_125373_d))=_20d568129_builtinCallerOutln(_125336_e, _125351_fc, _125373_d);
	if (((*(_125373_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_125373_d))))._field_Model.cast_ptr<_20d39aaa5_BuiltinOutlnCallExprModel>(&__jule_any_type29)))._field_Debug=true;
	return (*(_125373_d));;
}



inline jule::Ptr<_20de98bad_FileInfo> _20dedd450_ParseFile(jule::Ptr<_20d356885_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_20de98bad_FileInfo> _2713_finf = jule::new_ptr<_20de98bad_FileInfo>();;
	({
		__jule_tuple_x_20d3699ec_Ast__jule_tuple_s_22730be5e_Log __jule_assign_result = _20dedda27_parseFileset(_2318_f);
		(*(_2713_finf))._field_Ast = __jule_assign_result.__jule_result_arg0;
		(*(_2713_finf))._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if (((*(_2713_finf))._field_Errors.len() > 0LL)) {
		(*(_2713_finf))._field_Ast=nullptr;
	};
	return _2713_finf;;
}



inline __jule_tuple_x_20d3699ec_Ast__jule_tuple_s_22730be5e_Log _20dedda27_parseFileset(jule::Ptr<_20d356885_File> _5521_f) {
	__jule_tuple_x_20d3699ec_Ast__jule_tuple_s_22730be5e_Log __jule_func_result;
	jule::Ptr<_20e00e284_parser> _5613_p = jule::new_ptr<_20e00e284_parser>();;
	_20e01ed55_parse(_5613_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = (*(_5613_p))._field_ast;
	__jule_func_result.__jule_result_arg1 = (*(_5613_p))._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_20d37b9ba_ScopeTree> _20dede4a6_newScope(void) {
	return jule::new_ptr<_20d37b9ba_ScopeTree>();;
}



inline __jule_tuple_bool__jule_tuple_bool _20dede82a_isSt(jule::Ptr<_20d3510bb_Token> _499_current, jule::Ptr<_20d3510bb_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=(((*(_499_current))._field_Id == static_cast<jule::U64>(3LLU)) || ((*(_4926_prev))._field_Row < (*(_499_current))._field_Row));
	__jule_func_result.__jule_result_arg1=((*(_499_current))._field_Id == static_cast<jule::U64>(3LLU));
	return __jule_func_result;;
}



inline jule::Bool _20dedeb9e_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_20d3510bb_Token>>* _5526_tokens, jule::I64* _5545_i) {
	if ((((*(_5545_i)) > 1LL) && ((*((*(_5526_tokens))[((*(_5545_i)) - 2LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_20d3510bb_Token> _6113_prev = (*(_5526_tokens))[((*(_5545_i)) - 1LL)];;
		return (((*(_6113_prev))._field_Id == static_cast<jule::U64>(17LLU)) || (_20d351b16_IsBinOp((*(_6113_prev))._field_Id) && ((*(_6113_prev))._field_Row < (*((*(_5526_tokens))[(*(_5545_i))]))._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _20dee0067_nextStPos(jule::Slice<jule::Ptr<_20d3510bb_Token>>* _6815_tokens, jule::I64 _6833_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _6913_braceN = 0LL;;
	jule::I64 _7013_i = _6833_start;;
	for (; (_7013_i < (*(_6815_tokens)).len()); (_7013_i)++) {
		{
			jule::Bool _7217_ok = false;;
			jule::Bool _7317_terminated = false;;
			jule::Ptr<_20d3510bb_Token> _7413_tok = (*(_6815_tokens))[_7013_i];;
			{
				auto &_match_expr{ (*(_7413_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_21263bbcc:;
					{
						if (((_6913_braceN == 0LL) && (_7013_i > _6833_start))) {
							if ((!(_20dedeb9e_prevIsIncompleteExpr(_6815_tokens, &(_7013_i))))) {
								({
									__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _20dede82a_isSt(_7413_tok, (*(_6815_tokens))[(_7013_i - 1LL)]);
									_7217_ok = __jule_assign_result.__jule_result_arg0;
									_7317_terminated = __jule_assign_result.__jule_result_arg1;
								});
								if (_7217_ok) {
									goto _julec_label_21263b825;
								};
							};
						};
						(_6913_braceN)++;
						goto _iter_next_21263a549;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_21263bc43:;
					{
						(_6913_braceN)--;
						if (((_6913_braceN == 0LL) && ((_7013_i + 1LL) < (*(_6815_tokens)).len()))) {
							({
								__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _20dede82a_isSt((*(_6815_tokens))[(_7013_i + 1LL)], _7413_tok);
								_7217_ok = __jule_assign_result.__jule_result_arg0;
								_7317_terminated = __jule_assign_result.__jule_result_arg1;
							});
							if (_7217_ok) {
								(_7013_i)++;
								goto _julec_label_21263b825;
							};
						};
						goto _iter_next_21263a549;
					}
				}
				_match_end_21263bb77:;
			};
			if ((_6913_braceN != 0LL)) {
				goto _iter_next_21263a549;
			};
			if ((_7013_i > _6833_start)) {
				if (_20dedeb9e_prevIsIncompleteExpr(_6815_tokens, &(_7013_i))) {
					goto _iter_next_21263a549;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _20dede82a_isSt(_7413_tok, (*(_6815_tokens))[(_7013_i - 1LL)]);
					_7217_ok = __jule_assign_result.__jule_result_arg0;
					_7317_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _20dede82a_isSt(_7413_tok, _7413_tok);
					_7217_ok = __jule_assign_result.__jule_result_arg0;
					_7317_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_7217_ok))) {
				goto _iter_next_21263a549;
			};
			_julec_label_21263b825:;
			if (_7317_terminated) {
				(_7013_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _7013_i;
			__jule_func_result.__jule_result_arg1 = _7317_terminated;
			return __jule_func_result;;
		}
	_iter_next_21263a549:;
	}
	_iter_end_21263a549:;;
	__jule_func_result.__jule_result_arg0 = _7013_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_20d3510bb_Token__jule_tuple_bool _20dee03db_skipSt(jule::I64* _13016_i, jule::Slice<jule::Ptr<_20d3510bb_Token>> _13028_tokens) {
	__jule_tuple_sx_20d3510bb_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _1319_start = (*(_13016_i));;
	jule::Bool _13213_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _20dee0067_nextStPos(&(_13028_tokens), _1319_start);
		(*(_13016_i)) = __jule_assign_result.__jule_result_arg0;
		_13213_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_20d3510bb_Token>> _13413_stTokens = _13028_tokens.slice(_1319_start, (*(_13016_i)));;
	if (_13213_terminated) {
		if ((_13413_stTokens.len() == 1LL)) {
			({
				__jule_tuple_sx_20d3510bb_Token__jule_tuple_bool __jule_assign_result = _20dee03db_skipSt(_13016_i, _13028_tokens);
				_13413_stTokens = __jule_assign_result.__jule_result_arg0;
				_13213_terminated = __jule_assign_result.__jule_result_arg1;
			});
			__jule_func_result.__jule_result_arg0 = _13413_stTokens;
			__jule_func_result.__jule_result_arg1 = _13213_terminated;
			return __jule_func_result;;
		};
		_13413_stTokens=_13413_stTokens.slice(0LL, (_13413_stTokens.len() - 1LL));
	};
	__jule_func_result.__jule_result_arg0 = _13413_stTokens;
	__jule_func_result.__jule_result_arg1 = _13213_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_20dee071b_stmt>> _20dee0ac3_splitStmts(jule::Slice<jule::Ptr<_20d3510bb_Token>>* _15220_tokens) {
	jule::Slice<jule::Ptr<_20dee071b_stmt>> _15313_stmts = jule::Slice<jule::Ptr<_20dee071b_stmt>>::alloc(0LL, 20LL);;
	jule::I64 _15413_pos = 0LL;;
	while ((_15413_pos < (*(_15220_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_20d3510bb_Token>> _15618_stmt;;
			jule::Bool _15624_terminated = false;;
			({
				__jule_tuple_sx_20d3510bb_Token__jule_tuple_bool __jule_assign_result = _20dee03db_skipSt(&(_15413_pos), (*(_15220_tokens)));
				_15618_stmt = __jule_assign_result.__jule_result_arg0;
				_15624_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_20dee071b_stmt>> &__jule_push_dest = _15313_stmts; __jule_push_dest.push(jule::new_ptr<_20dee071b_stmt>(_20dee071b_stmt{._field_tokens=_15618_stmt, ._field_terminated=_15624_terminated})); };
		}
	_iter_next_212646698:;
	}
	_iter_end_212646698:;;
	return _15313_stmts;;
}



inline jule::Bool _20e008da5_isTypeOp(jule::U64* _88214_id) {
	return ((((*(_88214_id)) == static_cast<jule::U64>(65LLU)) || ((*(_88214_id)) == static_cast<jule::U64>(54LLU))) || ((*(_88214_id)) == static_cast<jule::U64>(62LLU)));;
}



inline jule::Bool _20e0091b3_isTypeRange(jule::Slice<jule::Ptr<_20d3510bb_Token>>* _88921_tokens) {
	jule::Bool _89013_op = false;;
	{
		auto expr = _88921_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2127098d2:;
		if (it != expr_end) {
			jule::I64 _8919_i = it - expr->begin();
			jule::Ptr<_20d3510bb_Token> _89112_token = *it;
			{
				if (((*(_89112_token))._field_Id == static_cast<jule::U64>(76LLU))) {
					if (_89013_op) {
						return true;;
					};
					jule::I64 _89621_rangeN = 0LL;;
					jule::Slice<jule::Ptr<_20d3510bb_Token>> _89721_lTokens = (*(_88921_tokens)).slice(_8919_i);;
					{
						auto expr = &(_89721_lTokens);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_21270cc37:;
						if (it != expr_end) {
							jule::Ptr<_20d3510bb_Token> _89820_lToken = *it;
							{
								{
									auto &_match_expr{ (*(_89820_lToken))._field_Id };
									
									if (_match_expr == static_cast<jule::U64>(76LLU)) {
										_case_begin_21270d809:;
										{
											(_89621_rangeN)++;
											goto _iter_next_21270cc37;
										}
									}
									else if (_match_expr == static_cast<jule::U64>(77LLU)) {
										_case_begin_21270d881:;
										{
											(_89621_rangeN)--;
											goto _iter_next_21270cc37;
										}
									}
									_match_end_21270d73d:;
								};
								if ((_89621_rangeN == 0LL)) {
									return _20e008da5_isTypeOp(&((*(_89820_lToken))._field_Id));;
								};
							}
							_iter_next_21270cc37:;
							++it;
							goto _iter_begin_21270cc37;
						}
						_iter_end_21270cc37:;
					};
					return true;;
				};
				if ((!(_20e008da5_isTypeOp(&((*(_89112_token))._field_Id))))) {
					return false;;
				};
				_89013_op=true;
			}
			_iter_next_2127098d2:;
			++it;
			_8919_i++;
			goto _iter_begin_2127098d2;
		}
		_iter_end_2127098d2:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_20d3510bb_Token>> _20e00947c_getBlockExpr(jule::Slice<jule::Ptr<_20d3510bb_Token>>* _92222_tokens) {
	jule::I64 _92313_braceN = 0LL;;
	jule::I64 _92413_skipToNextBraceClose = 0LL;;
	{
		auto expr = _92222_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2127105a8:;
		if (it != expr_end) {
			jule::I64 _9259_i = it - expr->begin();
			jule::Ptr<_20d3510bb_Token> _92512_tok = *it;
			{
				{
					auto &_match_expr{ (*(_92512_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(13LLU) || _match_expr == static_cast<jule::U64>(14LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_2127114bb:;
						{
							(_92413_skipToNextBraceClose)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_212711543:;
						{
							if (((_92313_braceN > 0LL) || (_92413_skipToNextBraceClose > 0LL))) {
								if ((_92413_skipToNextBraceClose > 0LL)) {
									(_92413_skipToNextBraceClose)--;
								};
								(_92313_braceN)++;
								goto _match_end_2127113cd;
							};
							return (*(_92222_tokens)).slice(0LL, _9259_i);;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_2127115ba:;
						{
							(_92313_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_212711642:;
						{
							(_92313_braceN)--;
						}
					}
					_match_end_2127113cd:;
				};
			}
			_iter_next_2127105a8:;
			++it;
			_9259_i++;
			goto _iter_begin_2127105a8;
		}
		_iter_end_2127105a8:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_20d3510bb_Token__jule_tuple_sx_20d3510bb_Token _20e009845_splitDelim(jule::Slice<jule::Ptr<_20d3510bb_Token>>* _95220_tokens, jule::U64 _95238_delim) {
	__jule_tuple_sx_20d3510bb_Token__jule_tuple_sx_20d3510bb_Token __jule_func_result;
	jule::I64 _95313_rangeN = 0LL;;
	{
		auto expr = _95220_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212713e4c:;
		if (it != expr_end) {
			jule::I64 _9549_i = it - expr->begin();
			jule::Ptr<_20d3510bb_Token> _95412_token = *it;
			{
				{
					auto &_match_expr{ (*(_95412_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_212714c50:;
						{
							(_95313_rangeN)++;
							goto _iter_next_212713e4c;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_212714cc7:;
						{
							(_95313_rangeN)--;
						}
					}
					else if (_match_expr == _95238_delim) {
						_case_begin_212714d4e:;
						{
							if ((_95313_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_20d3510bb_Token>> _96725_l = (*(_95220_tokens)).slice(0LL, _9549_i);;
								jule::Slice<jule::Ptr<_20d3510bb_Token>> _96825_r = (*(_95220_tokens)).slice((_9549_i + 1LL));;
								__jule_func_result.__jule_result_arg0 = _96725_l;
								__jule_func_result.__jule_result_arg1 = _96825_r;
								return __jule_func_result;;
							};
						}
					}
					_match_end_212714b73:;
				};
			}
			_iter_next_212713e4c:;
			++it;
			_9549_i++;
			goto _iter_begin_212713e4c;
		}
		_iter_end_212713e4c:;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I64 _20e009b0e_findLowestPrecOp(jule::Slice<jule::Ptr<_20d3510bb_Token>>* _97822_tokens) {
	jule::U8 _98313_prec = 255LLU;;
	jule::I64 _98413_precPos = -1LL;;
	jule::I64 _98613_braceN = 0LL;;
	jule::Bool _98713_skipToNextBraceOpen = false;;
	{
		auto expr = _97822_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21271824d:;
		if (it != expr_end) {
			jule::I64 _9889_i = it - expr->begin();
			jule::Ptr<_20d3510bb_Token> *_98812_token = it;
			{
				{
					auto &_match_expr{ (*((*(_98812_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_212719095:;
						{
							_98713_skipToNextBraceOpen=false;
							goto _case_begin_21271911c;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_21271911c:;
						{
							(_98613_braceN)++;
							goto _iter_next_21271824d;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_212719194:;
						{
							(_98613_braceN)--;
							goto _iter_next_21271824d;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(13LLU)) {
						_case_begin_21271921b:;
						{
							_98713_skipToNextBraceOpen=true;
							goto _iter_next_21271824d;
						}
					}
					_match_end_212718ea7:;
				};
				{
					
					if (_98713_skipToNextBraceOpen) {
						_case_begin_21271a67e:;
						{
							goto _iter_next_21271824d;
						}
					}
					else if ((_9889_i == 0LL)) {
						_case_begin_21271a706:;
						{
							goto _iter_next_21271824d;
						}
					}
					else if ((_98613_braceN > 0LL)) {
						_case_begin_21271a77d:;
						{
							goto _iter_next_21271824d;
						}
					}
					else if ((!(_20d351b16_IsBinOp((*((*(_98812_token))))._field_Id)))) {
						_case_begin_21271a805:;
						{
							goto _iter_next_21271824d;
						}
					}
					_match_end_21271a42b:;
				};
				jule::Ptr<_20d3510bb_Token> _101713_left = (*(_97822_tokens))[(_9889_i - 1LL)];;
				if ((_20d351808_IsUnaryOp((*(_101713_left))._field_Id) || ((*(_101713_left))._field_Id == static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_21271824d;
				};
				if (((_9889_i > 1LL) && ((*(_101713_left))._field_Id == static_cast<jule::U64>(77LLU)))) {
					jule::Ptr<_20d3510bb_Token> _102517_lleft = (*(_97822_tokens))[(_9889_i - 2LL)];;
					if (((*(_102517_lleft))._field_Id == static_cast<jule::U64>(76LLU))) {
						if ((((*((*(_98812_token))))._field_Id == static_cast<jule::U64>(65LLU)) || ((*((*(_98812_token))))._field_Id == static_cast<jule::U64>(62LLU)))) {
							goto _iter_next_21271824d;
						};
					};
				};
				jule::U8 _103413_p = _20d351440_Prec((*(_98812_token)).ptr());;
				if (((_103413_p != 0LLU) && (_103413_p <= _98313_prec))) {
					_98313_prec=_103413_p;
					_98413_precPos=_9889_i;
				};
			}
			_iter_next_21271824d:;
			++it;
			_9889_i++;
			goto _iter_begin_21271824d;
		}
		_iter_end_21271824d:;
	};
	return _98413_precPos;;
}



inline jule::Ptr<_20d372708_IdentExpr> _20e009dc8_buildIdentExpr(jule::Ptr<_20d3510bb_Token>* _104324_token) {
	return jule::new_ptr<_20d372708_IdentExpr>(_20d372708_IdentExpr{._field_Token=(*(_104324_token)), ._field_Ident=(*((*(_104324_token))))._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_20d3510bb_Token__jule_tuple_int _20e00a192_getRangeExprTokens(jule::Slice<jule::Ptr<_20d3510bb_Token>>* _105128_tokens) {
	__jule_tuple_sx_20d3510bb_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I64 _105213_rangeN = 0LL;;
	jule::I64 _105313_i = ((*(_105128_tokens)).len() - 1LL);;
	for (; (_105313_i >= 0LL); (_105313_i)--) {
		{
			jule::Ptr<_20d3510bb_Token> _105513_tok = (*(_105128_tokens))[_105313_i];;
			{
				auto &_match_expr{ (*(_105513_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_212722840:;
					{
						(_105213_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_2127228b7:;
					{
						(_105213_rangeN)--;
					}
				}
				_match_end_2127227c9:;
			};
			if ((_105213_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_105128_tokens)).slice(0LL, _105313_i);
				__jule_func_result.__jule_result_arg1 = _105213_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_212721ae7:;
	}
	_iter_end_212721ae7:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _105213_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _20e00ae95_checkAssignTokens(jule::Slice<jule::Ptr<_20d3510bb_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_20d355994_IsAssign((*((*(_1623_tokens))[0LL]))._field_Id))))) {
		return false;;
	};
	jule::I64 _2013_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2127ada52:;
		if (it != expr_end) {
			jule::Ptr<_20d3510bb_Token> *_2112_t = it;
			{
				{
					auto &_match_expr{ (*((*(_2112_t))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_2127ae635:;
						{
							(_2013_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_2127ae6ac:;
						{
							(_2013_braceN)--;
						}
					}
					_match_end_2127ae569:;
				};
				{
					
					if ((_2013_braceN < 0LL)) {
						_case_begin_2127b0548:;
						{
							return false;;
						}
					}
					else if ((_2013_braceN > 0LL)) {
						_case_begin_2127b05ae:;
						{
							goto _iter_next_2127ada52;
						}
					}
					else if (_20d356027_IsAssignOp((*((*(_2112_t))))._field_Id) || ((*((*(_2112_t))))._field_Id == static_cast<jule::U64>(38LLU))) {
						_case_begin_2127b0636:;
						{
							return true;;
						}
					}
					_match_end_2127b049e:;
				};
			}
			_iter_next_2127ada52:;
			++it;
			goto _iter_begin_2127ada52;
		}
		_iter_end_2127ada52:;
	};
	return false;;
}



inline _22730be5e_Log _20e00c172_makeErr(jule::I64 _5112_row, jule::I64 _5122_col, jule::Ptr<_20d356885_File>* _5133_f, jule::Str _5143_fmt, jule::Slice<jule::Any> _5156_args) {
	return _22730be5e_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5112_row, ._field_Column=_5122_col, ._field_Path=(*((*(_5133_f))))._field_Path, ._field_Text=_22730c3c1_Logf(_5143_fmt, _5156_args), };;
}



inline jule::Slice<jule::Ptr<_20d3510bb_Token>> _20e00c66c_range(jule::I64* _6915_i, jule::U64 _6923_open, jule::U64 _6938_close, jule::Slice<jule::Ptr<_20d3510bb_Token>>* _6959_tokens) {
	if (((*(_6915_i)) >= (*(_6959_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_20d3510bb_Token> _739_tok = (*(_6959_tokens))[(*(_6915_i))];;
	if (((*(_739_tok))._field_Id != _6923_open)) {
		return nullptr;;
	};
	((*(_6915_i)))++;
	jule::I64 _7813_rangeN = 1LL;;
	jule::I64 _799_start = (*(_6915_i));;
	for (; ((_7813_rangeN != 0LL) && ((*(_6915_i)) < (*(_6959_tokens)).len())); ((*(_6915_i)))++) {
		{
			jule::Ptr<_20d3510bb_Token> _8113_token = (*(_6959_tokens))[(*(_6915_i))];;
			{
				auto &_match_expr{ (*(_8113_token))._field_Id };
				
				if (_match_expr == _6923_open) {
					_case_begin_2127b599e:;
					{
						(_7813_rangeN)++;
					}
				}
				else if (_match_expr == _6938_close) {
					_case_begin_2127b5a26:;
					{
						(_7813_rangeN)--;
					}
				}
				_match_end_2127b5938:;
			};
		}
	_iter_next_2127b4b79:;
	}
	_iter_end_2127b4b79:;;
	return (*(_6959_tokens)).slice(_799_start, ((*(_6915_i)) - 1LL));;
}



inline __jule_tuple_sx_20d3510bb_Token__jule_tuple_sx_20d3510bb_Token _20e00c936_rangeLast(jule::Slice<jule::Ptr<_20d3510bb_Token>>* _9919_tokens) {
	__jule_tuple_sx_20d3510bb_Token__jule_tuple_sx_20d3510bb_Token __jule_func_result;
	if (((*(_9919_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::U64 _1039_first = (*((*(_9919_tokens))[((*(_9919_tokens)).len() - 1LL)]))._field_Id;;
	if ((((_1039_first != static_cast<jule::U64>(73LLU)) && (_1039_first != static_cast<jule::U64>(76LLU))) && (_1039_first != static_cast<jule::U64>(75LLU)))) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _10913_braceN = 0LL;;
	jule::I64 _11013_i = ((*(_9919_tokens)).len() - 1LL);;
	for (; (_11013_i >= 0LL); (_11013_i)--) {
		{
			jule::Ptr<_20d3510bb_Token> _11213_token = (*(_9919_tokens))[_11013_i];;
			{
				auto &_match_expr{ (*(_11213_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_2127b9ba1:;
					{
						(_10913_braceN)++;
						goto _iter_next_2127b9013;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_2127b9c28:;
					{
						(_10913_braceN)--;
					}
				}
				_match_end_2127b9b3a:;
			};
			if ((_10913_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_9919_tokens)).slice(0LL, _11013_i);
				__jule_func_result.__jule_result_arg1 = (*(_9919_tokens)).slice(_11013_i);
				return __jule_func_result;;
			};
		}
	_iter_next_2127b9013:;
	}
	_iter_end_2127b9013:;;
	__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_20d3510bb_Token__jule_tuple_s_22730be5e_Log _20e00cddc_parts(jule::Slice<jule::Ptr<_20d3510bb_Token>>* _13715_tokens, jule::U64 _13733_id, jule::Bool _13746_exprMust) {
	__jule_tuple_ssx_20d3510bb_Token__jule_tuple_s_22730be5e_Log __jule_func_result;
	if (((*(_13715_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>> _14213_parts = nullptr;;
	jule::Slice<_22730be5e_Log> _14313_errors = nullptr;;
	jule::I64 _14513_rangeN = 0LL;;
	jule::I64 _14613_last = 0LL;;
	{
		auto expr = _13715_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2127b7880:;
		if (it != expr_end) {
			jule::I64 _1479_i = it - expr->begin();
			jule::Ptr<_20d3510bb_Token> _14712_token = *it;
			{
				{
					auto &_match_expr{ (*(_14712_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_2127be090:;
						{
							(_14513_rangeN)++;
							goto _iter_next_2127b7880;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_2127be117:;
						{
							(_14513_rangeN)--;
						}
					}
					_match_end_2127bdec4:;
				};
				if ((_14513_rangeN > 0LL)) {
					goto _iter_next_2127b7880;
				};
				if (((*(_14712_token))._field_Id == _13733_id)) {
					if ((_13746_exprMust && ((_1479_i - _14613_last) <= 0LL))) {
						_22730be5e_Log _16621_err = _20e00c172_makeErr((*(_14712_token))._field_Row, (*(_14712_token))._field_Column, &((*(_14712_token))._field_File), jule::Str("expression missing", 18), jule::Slice<jule::Any>());;
						{ jule::Slice<_22730be5e_Log> &__jule_push_dest = _14313_errors; __jule_push_dest.push(_16621_err); };
					};
					{ jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>> &__jule_push_dest = _14213_parts; __jule_push_dest.push((*(_13715_tokens)).slice(_14613_last, _1479_i)); };
					_14613_last=static_cast<jule::I64>((_1479_i + 1LL));
				};
			}
			_iter_next_2127b7880:;
			++it;
			_1479_i++;
			goto _iter_begin_2127b7880;
		}
		_iter_end_2127b7880:;
	};
	if ((_14613_last < (*(_13715_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>> &__jule_push_dest = _14213_parts; __jule_push_dest.push((*(_13715_tokens)).slice(_14613_last)); };
	} else if ((!(_13746_exprMust))) {
		{ jule::Slice<jule::Slice<jule::Ptr<_20d3510bb_Token>>> &__jule_push_dest = _14213_parts; __jule_push_dest.push(jule::Slice<jule::Ptr<_20d3510bb_Token>>()); };
	};
	__jule_func_result.__jule_result_arg0 = _14213_parts;
	__jule_func_result.__jule_result_arg1 = _14313_errors;
	return __jule_func_result;;
}



inline jule::U64 _20e00d1a6_getCloseOfBrace(jule::U64 _18320_left) {
	{
		auto &_match_expr{ _18320_left };
		
		if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_2127c23d4:;
			{
				return static_cast<jule::U64>(74LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_2127c244a:;
			{
				return static_cast<jule::U64>(72LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_2127c24b1:;
			{
				return static_cast<jule::U64>(76LLU);;
			}
		}
		else {
			_case_begin_2127c236d:;
			{
				return _18320_left;;
			}
		}
		_match_end_2127c2cb9:;
	};
}



inline _22730be5e_Log _20e00d5d5_compilerErr(jule::Ptr<_20d3510bb_Token>* _19617_token, jule::Str* _19633_fmt, jule::Slice<jule::Any> _19646_args) {
	return _22730be5e_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_19617_token))))._field_Row, ._field_Column=(*((*(_19617_token))))._field_Column, ._field_Path=(*((*((*(_19617_token))))._field_File))._field_Path, ._field_Text=_22730c3c1_Logf((*(_19633_fmt)), _19646_args), ._field_Line=_20d357864_GetRow((*((*(_19617_token))))._field_File.ptr(), (*((*(_19617_token))))._field_Row), };;
}



inline void _20e00d97b_pushSuggestion(_22730be5e_Log* _20730_log, jule::Str _20741_fmt, jule::Slice<jule::Any> _20754_args) {
	(*(_20730_log))._field_Suggestion=_22730c3c1_Logf(_20741_fmt, _20754_args);
}



inline jule::Str _20e00dd22_tokstoa(jule::Slice<jule::Ptr<_20d3510bb_Token>>* _21113_tokens) {
	jule::I64 _21213_n = 0LL;;
	{
		auto expr = _21113_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2127c6c8a:;
		if (it != expr_end) {
			jule::Ptr<_20d3510bb_Token> *_21312_token = it;
			{
				_21213_n+=(*((*(_21312_token))))._field_Kind.len();
			}
			_iter_next_2127c6c8a:;
			++it;
			goto _iter_begin_2127c6c8a;
		}
		_iter_end_2127c6c8a:;
	};
	_2240a0ad5_StrBuilder _21613_s = static__2240a0e04_New(_21213_n);;
	{
		auto expr = _21113_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2127c6e22:;
		if (it != expr_end) {
			jule::Ptr<_20d3510bb_Token> *_21712_token = it;
			{
				_2240a989c_WriteStr(&_21613_s, (*((*(_21712_token))))._field_Kind);
			}
			_iter_next_2127c6e22:;
			++it;
			goto _iter_begin_2127c6e22;
		}
		_iter_end_2127c6e22:;
	};
	return _2240aa194_Str(&_21613_s);;
}



inline jule::Ptr<_20d36b999_TypeDecl> _20e02084a_buildVoidType(void) {
	return jule::new_ptr<_20d36b999_TypeDecl>();;
}



inline __jule_tuple_bool__jule_tuple_bool _20d79da35_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_212983760:;
			{
				__jule_func_result.__jule_result_arg0=_22731035d_IsWindows(_2273c3d8e_Os);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_2129837c6:;
			{
				__jule_func_result.__jule_result_arg0=_227310638_IsDarwin(_2273c3d8e_Os);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_2129834a7:;
			{
				__jule_func_result.__jule_result_arg0=_227310902_IsLinux(_2273c3d8e_Os);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_21298351d:;
			{
				__jule_func_result.__jule_result_arg0=_227311590_IsUnix(_2273c3d8e_Os);
			}
		}
		else {
			_case_begin_212982e57:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_212983397:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _20d79db78_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_2129859d7:;
			{
				__jule_func_result.__jule_result_arg0=_227310c43_IsI386(_2273c4158_Arch);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_2129856b8:;
			{
				__jule_func_result.__jule_result_arg0=_22731100c_IsAmd64(_2273c4158_Arch);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_21298572e:;
			{
				__jule_func_result.__jule_result_arg0=_2273112c6_IsArm64(_2273c4158_Arch);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_212985795:;
			{
				__jule_func_result.__jule_result_arg0=_227311c00_Is64Bit(_2273c4158_Arch);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_21298580b:;
			{
				__jule_func_result.__jule_result_arg0=_227311936_Is32Bit(_2273c4158_Arch);
			}
		}
		else {
			_case_begin_212985168:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_2129855a8:;
	};
	return __jule_func_result;;
}



inline jule::Bool _20d7b8731_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_22726aa8d_Base(_5029_p);
	jule::I64 _529_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_529_n - _22726a50a_Ext(_5029_p).len()));;
	jule::Str _5813_a1 = jule::Str();;
	jule::Str _6113_a2 = jule::Str();;
	jule::I64 _6413_i = _2248ad799_FindLastByte(_5029_p, '_');;
	if ((_6413_i == -1LL)) {
		jule::Bool _6718_ok = false;;
		jule::Bool _6726_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _20d79da35_checkOs(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6726_exist) {
			return _6718_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _20d79db78_checkArch(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6726_exist)) || _6718_ok);;
	};
	if (((_6413_i + 1LL) >= _529_n)) {
		return true;;
	};
	_5813_a1=_5029_p.slice((_6413_i + 1LL));
	(_5029_p).mut_slice(0LL, _6413_i);;
	_6413_i=static_cast<jule::I64>(_2248ad799_FindLastByte(_5029_p, '_'));
	if ((_6413_i != -1LL)) {
		_6113_a2=_5029_p.slice((_6413_i + 1LL));
	};
	if (_6113_a2.empty()) {
		jule::Bool _8818_ok = false;;
		jule::Bool _8826_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _20d79da35_checkOs(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8826_exist) {
			return _8818_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _20d79db78_checkArch(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8826_exist)) || _8818_ok);;
	};
	jule::Bool _9614_ok = false;;
	jule::Bool _9622_exist = false;;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _20d79db78_checkArch(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9622_exist) {
		if ((!(_9614_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _20d79da35_checkOs(_6113_a2);
			_9614_ok = __jule_assign_result.__jule_result_arg0;
			_9622_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9622_exist)) || _9614_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _20d79da35_checkOs(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9622_exist)) || _9614_ok);;
}



inline void _20d7b98a8_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(_2273c3d8e_Os); };
	if (_227311590_IsUnix(_2273c3d8e_Os)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(jule::Str("unix", 4)); };
	};
}



inline void _20d7b9b2d_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(_2273c4158_Arch); };
	if (_227311c00_Is64Bit(_2273c4158_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str("x64", 3)); };
	};
	if (_227311936_Is32Bit(_2273c4158_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str("x32", 3)); };
	};
}



inline void _20d7b9e19_initVars(jule::Slice<jule::Str>* _5518_vars, _20d7b9589_CompileInfo* _5532_info) {
	_20d7b98a8_setOsVars(_5518_vars);
	_20d7b9b2d_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("production", 10)); };
	};
	if ((*(_5532_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_212990edc:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("clang", 5)); };
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_212991053:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("gcc", 3)); };
			}
		}
		_match_end_2129918e4:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_212992032:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("cpp14", 5)); };
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_212992098:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("cpp17", 5)); };
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_2129923c8:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("cpp20", 5)); };
			}
		}
		_match_end_212991dab:;
	};
}



inline jule::Slice<jule::U8> _20e024970_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__223ddb701_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			;
			_2273c2cd3_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _22730be5e_Log _20e024c4a_flatCompilerErr(jule::Str _4120_text) {
	return _22730be5e_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Text=_4120_text, };;
}



inline void _20e029568_pushPasses(jule::Ptr<_20d417cba_Package>* _11120_p, jule::Slice<jule::Str>* _11144_passes) {
	{
		auto expr = &((*((*(_11120_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2129c7672:;
		if (it != expr_end) {
			jule::Ptr<_20d081e40_SymbolTable> _11217_f = *it;
			{
				_julec_label_2129c8035:;
				{
					auto expr = &((*(_11217_f))._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2129c8200:;
					if (it != expr_end) {
						_20d3aa213_Pass _11416_pass = *it;
						{
							if (_11416_pass._field_Text.empty()) {
								goto _iter_next_2129c8200;
							};
							{
								auto expr = _11144_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_2129c8c17:;
								if (it != expr_end) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_2129c8200;
										};
									}
									_iter_next_2129c8c17:;
									++it;
									goto _iter_begin_2129c8c17;
								}
								_iter_end_2129c8c17:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_11144_passes)); __jule_push_dest.push(_11416_pass._field_Text); };
						}
						_iter_next_2129c8200:;
						++it;
						goto _iter_begin_2129c8200;
					}
					_iter_end_2129c8200:;
				};
			}
			_iter_next_2129c7672:;
			++it;
			goto _iter_begin_2129c7672;
		}
		_iter_end_2129c7672:;
	};
}



inline jule::Slice<jule::Str> _20e029931_getAllUniquePasses(jule::Ptr<_20d417cba_Package>* _12828_pkg, jule::Slice<jule::Ptr<_20d414d94_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_20e029568_pushPasses(_12828_pkg, &(_12913_passes));
	{
		auto expr = &(_12853_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2129ca785:;
		if (it != expr_end) {
			jule::Ptr<_20d414d94_ImportInfo> _13217_u = *it;
			{
				if ((!((*(_13217_u))._field_Binded))) {
					_20e029568_pushPasses(&((*(_13217_u))._field_Package), &(_12913_passes));
				};
			}
			_iter_next_2129ca785:;
			++it;
			goto _iter_begin_2129ca785;
		}
		_iter_end_2129ca785:;
	};
	return _12913_passes;;
}



inline _20d7b9589_CompileInfo _20e029b40_buildCompileInfo(void) {
	_20d7b9589_CompileInfo _14213_info = _20d7b9589_CompileInfo{._field_Prod=_23c5b2375_Production, ._field_Test=_23c5b1918_Test, };;
	{
		auto &_match_expr{ _23c5aeaae_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_2129cbbd7:;
			{
				_14213_info._field_Compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_2129cbc70:;
			{
				_14213_info._field_Compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_2129cbac7:;
	};
	{
		auto &_match_expr{ _23c5b10ee_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_2129cc853:;
			{
				_14213_info._field_CppStd=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_2129ca3cd:;
			{
				_14213_info._field_CppStd=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_2129cc127:;
			{
				_14213_info._field_CppStd=jule::Str("cpp20", 5);
			}
		}
		_match_end_2129cca95:;
	};
	return _14213_info;;
}



inline void _20db6e5ba_EliminateDefines(jule::Ptr<_20e027be8_IR>* _29026_ir) {
	jule::Ptr<_20db6b7d7_ObjectDeadCode> _29113_ocd = static__20db6bb4a_new(_29026_ir);;
	_20db6e28a_elimanate(_29113_ocd);
}



inline jule::Ptr<_20d36adb6_Directive> _20db6e983_findDirective(jule::Slice<jule::Ptr<_20d36adb6_Directive>>* _29623_directives, jule::Str _29654_tag) {
	{
		auto expr = _29623_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212a171a6:;
		if (it != expr_end) {
			jule::Ptr<_20d36adb6_Directive> _29717_dr = *it;
			{
				if (((*((*(_29717_dr))._field_Tag))._field_Kind == _29654_tag)) {
					return _29717_dr;;
				};
			}
			_iter_next_212a171a6:;
			++it;
			goto _iter_begin_212a171a6;
		}
		_iter_end_212a171a6:;
	};
	return nullptr;;
}



inline jule::Bool _20db6ed07_hasDirective(jule::Slice<jule::Ptr<_20d36adb6_Directive>>* _30618_directives, jule::Str _30649_tag) {
	return (_20db6e983_findDirective(&((*(_30618_directives))), _30649_tag) != nullptr);;
}



inline jule::Bool _20db701c0_isTraitMethod(jule::Ptr<_20d39066b_StructIns>* _31123_owner, jule::Ptr<_20d3a5a49_FnIns>* _31143_f) {
	{
		auto expr = &((*((*((*(_31123_owner))))._field_Decl))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212a183e9:;
		if (it != expr_end) {
			jule::Ptr<_20d3b5dde_Trait> _31217_t = *it;
			{
				if ((_20d3b6a8d_FindMethod(_31217_t.ptr(), (*((*((*(_31143_f))))._field_Decl))._field_Ident) != nullptr)) {
					return true;;
				};
			}
			_iter_next_212a183e9:;
			++it;
			goto _iter_begin_212a183e9;
		}
		_iter_end_212a183e9:;
	};
	return false;;
}



inline void _20db741c4_eliminateDeadCodeOfScope(jule::Ptr<_20d3e369c_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_20d3e6040_Label>> _2429_labels = jule::Slice<jule::Ptr<_20d3e6040_Label>>::alloc(0LL, 16LLU);;
	jule::Slice<jule::Ptr<_20d3e6419_GotoSt>> _2439_gotos = jule::Slice<jule::Ptr<_20d3e6419_GotoSt>>::alloc(0LL, 16LLU);;
	jule::Ptr<_20db70ec3_scopeDeadCode> _24413_sdc = jule::new_ptr<_20db70ec3_scopeDeadCode>(_20db70ec3_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&((*(_24133_s))._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_20d3e6040_Label>>>)((&(_2429_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_20d3e6419_GotoSt>>>)((&(_2439_gotos)))), });;
	{
		_20db73d94_optimizeStmts(_24413_sdc);
	};
}



inline void _20db74449_eliminateScopeFunctions(jule::Slice<jule::Ptr<_20d3a2b45_Fn>>* _25433_funcs) {
	{
		auto expr = _25433_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212a5de45:;
		if (it != expr_end) {
			jule::Ptr<_20d3a2b45_Fn> _25517_func = *it;
			{
				{
					auto expr = &((*(_25517_func))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_212a61c4a:;
					if (it != expr_end) {
						jule::Ptr<_20d3a5a49_FnIns> _25621_ins = *it;
						{
							_20db741c4_eliminateDeadCodeOfScope((*(_25621_ins))._field_Scope);
						}
						_iter_next_212a61c4a:;
						++it;
						goto _iter_begin_212a61c4a;
					}
					_iter_end_212a61c4a:;
				};
			}
			_iter_next_212a5de45:;
			++it;
			goto _iter_begin_212a5de45;
		}
		_iter_end_212a5de45:;
	};
}



inline void _20db7467a_eliminateFunctionsScopePackage(jule::Ptr<_20d417cba_Package>* _26240_pkg) {
	{
		auto expr = &((*((*(_26240_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212a61a6e:;
		if (it != expr_end) {
			jule::Ptr<_20d081e40_SymbolTable> _26317_f = *it;
			{
				_20db74449_eliminateScopeFunctions(&((*(_26317_f))._field_Funcs));
			}
			_iter_next_212a61a6e:;
			++it;
			goto _iter_begin_212a61a6e;
		}
		_iter_end_212a61a6e:;
	};
}



inline void _20db74933_eliminateScopePackage(jule::Ptr<_20d417cba_Package>* _26831_pkg) {
	_20db7467a_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _20db74b64_EliminateScopes(jule::Ptr<_20e027be8_IR>* _27325_ir) {
	jule::I64 _27413_i = ((*((*(_27325_ir))))._field_Used.len() - 1LL);;
	for (; (_27413_i >= 0LL); (_27413_i)--) {
		{
			jule::Ptr<_20d414d94_ImportInfo> _27617_u = (*((*(_27325_ir))))._field_Used[_27413_i];;
			if ((!((*(_27617_u))._field_Binded))) {
				_20db74933_eliminateScopePackage(&((*(_27617_u))._field_Package));
			};
		}
	_iter_next_212a638a6:;
	}
	_iter_end_212a638a6:;;
	_20db74933_eliminateScopePackage(&((*((*(_27325_ir))))._field_Main));
}



inline jule::Uintptr _20d572683_typeData(jule::Any* _1714_m) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)(((*(_1714_m))).type)));;
}



inline jule::Bool _20d572a4b_equalConst(jule::Ptr<_20b0655eb_Const> _2115_l, jule::Ptr<_20b0655eb_Const> _2126_r) {
	{
		
		if (_20b0695bc_IsI64(_2115_l.ptr())) {
			_case_begin_212ae8ebe:;
			{
				return (_20b0695bc_IsI64(_2126_r.ptr()) && (_20b066ec1_ReadI64(_2115_l.ptr()) == _20b066ec1_ReadI64(_2126_r.ptr())));;
			}
		}
		else if (_20b069853_IsU64(_2115_l.ptr())) {
			_case_begin_212ae9046:;
			{
				return (_20b069853_IsU64(_2126_r.ptr()) && (_20b067257_ReadU64(_2115_l.ptr()) == _20b067257_ReadU64(_2126_r.ptr())));;
			}
		}
		else if (_20b06a106_IsF64(_2115_l.ptr())) {
			_case_begin_212ae92ee:;
			{
				return (_20b06a106_IsF64(_2126_r.ptr()) && (_20b067a0a_ReadF64(_2115_l.ptr()) == _20b067a0a_ReadF64(_2126_r.ptr())));;
			}
		}
		else if (_20b069d70_IsStr(_2115_l.ptr())) {
			_case_begin_212ae9365:;
			{
				return (_20b069d70_IsStr(_2126_r.ptr()) && (_20b067774_ReadStr(_2115_l.ptr()) == _20b067774_ReadStr(_2126_r.ptr())));;
			}
		}
		else if (_20b069ad9_IsBool(_2115_l.ptr())) {
			_case_begin_212ae93cb:;
			{
				return (_20b069ad9_IsBool(_2126_r.ptr()) && (_20b0674dd_ReadBool(_2115_l.ptr()) == _20b0674dd_ReadBool(_2126_r.ptr())));;
			}
		}
		else if (_20b06a38c_IsNil(_2115_l.ptr())) {
			_case_begin_212ae9442:;
			{
				return _20b06a38c_IsNil(_2126_r.ptr());;
			}
		}
		else {
			_case_begin_212ae8dc0:;
			{
				return false;;
			}
		}
		_match_end_212ae8d26:;
	};
}



inline jule::Bool _20d572dc0_equalCasting(jule::Ptr<_20d396232_CastingExprModel> _4017_l, jule::Ptr<_20d396232_CastingExprModel> _4039_r) {
	if ((!(_20d4de996_Equal((*(_4017_l))._field_Kind, (*(_4039_r))._field_Kind)))) {
		return false;;
	};
	return _20d573c6c_equalModels((*(_4017_l))._field_Expr, (*(_4039_r))._field_Expr);;
}



inline jule::Bool _20d573200_equalUnary(jule::Ptr<_20d394ecd_UnaryExprModel> _4715_l, jule::Ptr<_20d394ecd_UnaryExprModel> _4735_r) {
	if ((((*((*(_4715_l))._field_Op))._field_Id != (*((*(_4735_r))._field_Op))._field_Id) || ((*((*(_4715_l))._field_Op))._field_Kind != (*((*(_4735_r))._field_Op))._field_Kind))) {
		return false;;
	};
	return _20d573c6c_equalModels((*((*(_4715_l))._field_Expr))._field_Model, (*((*(_4735_r))._field_Expr))._field_Model);;
}



inline jule::Bool _20d573574_equalIndexing(jule::Ptr<_20d397464_IndexingExprModel> _5418_l, jule::Ptr<_20d397464_IndexingExprModel> _5441_r) {
	return (_20d573c6c_equalModels((*((*(_5418_l))._field_Expr))._field_Model, (*((*(_5441_r))._field_Expr))._field_Model) && _20d573c6c_equalModels((*((*(_5418_l))._field_Index))._field_Model, (*((*(_5441_r))._field_Index))._field_Model));;
}



inline jule::Bool _20d5738e8_equalBinary(jule::Ptr<_20d394b04_BinopExprModel> _5916_l, jule::Ptr<_20d394b04_BinopExprModel> _5936_r) {
	if ((((*((*(_5916_l))._field_Op))._field_Id != (*((*(_5936_r))._field_Op))._field_Id) || ((*((*(_5916_l))._field_Op))._field_Kind != (*((*(_5936_r))._field_Op))._field_Kind))) {
		return false;;
	};
	return (_20d573c6c_equalModels((*((*(_5916_l))._field_Left))._field_Model, (*((*(_5936_r))._field_Left))._field_Model) && _20d573c6c_equalModels((*((*(_5916_l))._field_Right))._field_Model, (*((*(_5936_r))._field_Right))._field_Model));;
}



inline jule::Bool _20d573c6c_equalModels(jule::Any _7016_l, jule::Any _7030_r) {
	if ((_20d572683_typeData(&(_7016_l)) != _20d572683_typeData(&(_7030_r)))) {
		return false;;
	};
	{
		auto &_match_expr{ _7016_l };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_212b07e9a:;
			{
				return (_7016_l.cast_ptr<_20d458aca_Var>(&__jule_any_type8) == _7030_r.cast_ptr<_20d458aca_Var>(&__jule_any_type8));;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_212b08022:;
			{
				jule::Ptr<_20d399675_StructSubIdentExprModel> _7813_li = _7016_l.cast_ptr<_20d399675_StructSubIdentExprModel>(&__jule_any_type71);;
				jule::Ptr<_20d399675_StructSubIdentExprModel> _7913_ri = _7030_r.cast_ptr<_20d399675_StructSubIdentExprModel>(&__jule_any_type71);;
				return (((*(_7813_li))._field_Field == (*(_7913_ri))._field_Field) && _20d573c6c_equalModels((*((*(_7813_li))._field_Expr))._field_Model, (*((*(_7913_ri))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_212b08099:;
			{
				return _20d572a4b_equalConst(_7016_l.cast_ptr<_20b0655eb_Const>(&__jule_any_type19), _7030_r.cast_ptr<_20b0655eb_Const>(&__jule_any_type19));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_212b082a8:;
			{
				return _20d572dc0_equalCasting(_7016_l.cast_ptr<_20d396232_CastingExprModel>(&__jule_any_type96), _7030_r.cast_ptr<_20d396232_CastingExprModel>(&__jule_any_type96));;
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_212b0831e:;
			{
				return _20d573200_equalUnary(_7016_l.cast_ptr<_20d394ecd_UnaryExprModel>(&__jule_any_type72), _7030_r.cast_ptr<_20d394ecd_UnaryExprModel>(&__jule_any_type72));;
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_212b08385:;
			{
				return _20d573574_equalIndexing(_7016_l.cast_ptr<_20d397464_IndexingExprModel>(&__jule_any_type46), _7030_r.cast_ptr<_20d397464_IndexingExprModel>(&__jule_any_type46));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_212b083eb:;
			{
				return _20d5738e8_equalBinary(_7016_l.cast_ptr<_20d394b04_BinopExprModel>(&__jule_any_type112), _7030_r.cast_ptr<_20d394b04_BinopExprModel>(&__jule_any_type112));;
			}
		}
		else {
			_case_begin_212b07e34:;
			{
				return false;;
			}
		}
		_match_end_212b07d35:;
	};
}



inline jule::Bool _20d57c3a2_isStdPackage(jule::Str* _45118_f, jule::Str _45126_p) {
	return _2248aa0ae_HasPrefix((*(_45118_f)), _22726a241_Join(jule::Slice<jule::Str>::make({_2273c32ab_PathStdlib,_45126_p})));;
}



inline jule::Bool _20d57c6b0_isConstantValidConditionalCase(jule::Ptr<_20d3e3aba_If>* _45536_i) {
	{
		auto &_match_expr{ (*((*(_45536_i))))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_212b136e2:;
			{
				jule::Ptr<_20b0655eb_Const> _45813_c = (*((*(_45536_i))))._field_Expr.cast_ptr<_20b0655eb_Const>(&__jule_any_type19);;
				return (_20b069ad9_IsBool(_45813_c.ptr()) && _20b0674dd_ReadBool(_45813_c.ptr()));;
			}
		}
		_match_end_212b1368c:;
	};
	return false;;
}



inline jule::Bool _20d57c979_isUnreachableExpr(jule::Any* _46423_expr) {
	{
		auto &_match_expr{ (*(_46423_expr)) };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_212b13a55:;
			{
				jule::Ptr<_20b0655eb_Const> _46713_c = (*(_46423_expr)).cast_ptr<_20b0655eb_Const>(&__jule_any_type19);;
				return (_20b069ad9_IsBool(_46713_c.ptr()) && (!(_20b0674dd_ReadBool(_46713_c.ptr()))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_212b13abb:;
			{
				jule::Ptr<_20d394b04_BinopExprModel> _47013_m = (*(_46423_expr)).cast_ptr<_20d394b04_BinopExprModel>(&__jule_any_type112);;
				if (((*((*(_47013_m))._field_Op))._field_Id == static_cast<jule::U64>(54LLU))) {
					return (_20d57c979_isUnreachableExpr(&((*((*(_47013_m))._field_Left))._field_Model)) || _20d57c979_isUnreachableExpr(&((*((*(_47013_m))._field_Right))._field_Model)));;
				};
			}
		}
		_match_end_212b13a00:;
	};
	return false;;
}



inline jule::Bool _20d57ccba_isConstantValidMatchCase(jule::Ptr<_20d3e841b_Case>* _47930_case) {
	{
		auto expr = &((*((*(_47930_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212b167c2:;
		if (it != expr_end) {
			jule::Ptr<_20d087165_Data> *_48012_expr = it;
			{
				if (((_20d087a39_IsConst((*(_48012_expr)).ptr()) && _20b069ad9_IsBool((*((*(_48012_expr))))._field_Constant.ptr())) && _20b0674dd_ReadBool((*((*(_48012_expr))))._field_Constant.ptr()))) {
					return true;;
				};
			}
			_iter_next_212b167c2:;
			++it;
			goto _iter_begin_212b167c2;
		}
		_iter_end_212b167c2:;
	};
	return false;;
}



inline jule::Bool _20d57d084_isUnreachableConditionalCase(jule::Ptr<_20d3e3aba_If>* _48834_i) {
	return _20d57c979_isUnreachableExpr(&((*((*(_48834_i))))._field_Expr));;
}



inline jule::Bool _20d57d34d_isUnreachableMatchCase(jule::Ptr<_20d3e841b_Case>* _49228_case) {
	{
		auto expr = &((*((*(_49228_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212b197d6:;
		if (it != expr_end) {
			jule::Ptr<_20d087165_Data> *_49312_expr = it;
			{
				if ((!(_20d57c979_isUnreachableExpr(&((*((*(_49312_expr))))._field_Model))))) {
					return false;;
				};
			}
			_iter_next_212b197d6:;
			++it;
			goto _iter_begin_212b197d6;
		}
		_iter_end_212b197d6:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _20d586774_checkForBitShiftOpt(jule::Ptr<_20d394609_OperandExprModel>* _48025_l, jule::Ptr<_20d394609_OperandExprModel>* _48048_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_20b064a18_IsInt(_20d4de655_Str((*((*(_48025_l))))._field_Kind.ptr())))) || (!(_20b064a18_IsInt(_20d4de655_Str((*((*(_48048_r))))._field_Kind.ptr())))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_48048_r))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_212b64c0a:;
			{
				goto _match_end_212b65c72;
			}
		}
		else {
			_case_begin_212b65cc7:;
			{
				__jule_func_result.__jule_result_arg0 = false;
				__jule_func_result.__jule_result_arg1 = 0LLU;
				return __jule_func_result;;
			}
		}
		_match_end_212b65c72:;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>(_20b068027_AsU64((*((*(_48048_r))))._field_Model.cast_ptr<_20b0655eb_Const>(&__jule_any_type19).ptr()));
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _4949_j = _20b00e254_Log2(static_cast<jule::F64>(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1)));;
	jule::U64 _4959_z = static_cast<jule::U64>(_4949_j);;
	if ((static_cast<jule::F64>(_4959_z) != _4949_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _4959_z;
	return __jule_func_result;;
}



inline jule::Bool _20d586b3c_areSameLvalueExprModel(jule::Any* _50328_l, jule::Any* _50343_r) {
	{
		auto &_match_expr{ (*(_50328_l)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_212b69072:;
			{
				return ((*(_50343_r)) == (*(_50328_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_212b690d8:;
			{
				{
					auto &_match_expr{ (*(_50343_r)) };
					
					if (_match_expr.type == &__jule_any_type71) {
						_case_begin_212b69979:;
						{
							goto _match_end_212b69c21;
						}
					}
					else {
						_case_begin_212b69c76:;
						{
							return false;;
						}
					}
					_match_end_212b69c21:;
				};
				jule::Ptr<_20d399675_StructSubIdentExprModel> _51613_lsi = (*(_50328_l)).cast_ptr<_20d399675_StructSubIdentExprModel>(&__jule_any_type71);;
				jule::Ptr<_20d399675_StructSubIdentExprModel> _51713_rsi = (*(_50343_r)).cast_ptr<_20d399675_StructSubIdentExprModel>(&__jule_any_type71);;
				if (((*(_51613_lsi))._field_Field != (*(_51713_rsi))._field_Field)) {
					return false;;
				};
				return _20d586b3c_areSameLvalueExprModel(&((*((*(_51613_lsi))._field_Expr))._field_Model), &((*((*(_51713_rsi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_212b6914e:;
			{
				{
					auto &_match_expr{ (*(_50343_r)) };
					
					if (_match_expr.type == &__jule_any_type72) {
						_case_begin_212b6c163:;
						{
							jule::Ptr<_20d394ecd_UnaryExprModel> _52917_ul = (*(_50328_l)).cast_ptr<_20d394ecd_UnaryExprModel>(&__jule_any_type72);;
							jule::Ptr<_20d394ecd_UnaryExprModel> _53017_ur = (*(_50343_r)).cast_ptr<_20d394ecd_UnaryExprModel>(&__jule_any_type72);;
							if ((((*((*(_52917_ul))._field_Op))._field_Id != (*((*(_53017_ur))._field_Op))._field_Id) || ((*((*(_52917_ul))._field_Op))._field_Kind != (*((*(_53017_ur))._field_Op))._field_Kind))) {
								return false;;
							};
							return _20d586b3c_areSameLvalueExprModel(&((*((*(_52917_ul))._field_Expr))._field_Model), &((*((*(_53017_ur))._field_Expr))._field_Model));;
						}
					}
					_match_end_212b6c10d:;
				};
			}
		}
		_match_end_212b68923:;
	};
	return false;;
}



inline void _20d587379_doInternalNosafeStobs(_20d57e22d_exprOptimizer* _727_op, _20e02c04e_stdCacheData* _747_data, jule::Ptr<_20d396ad4_FnCallExprModel>* _772_m) {
	jule::Any _813_model = jule::Any(jule::new_ptr<_20d576da2_InlineStdInternalNosafeStobs>(_20d576da2_InlineStdInternalNosafeStobs{._field_Str=(*((*(_772_m))))._field_Args[0LL]}), &__jule_any_type130);;
	{
		(*((*(_727_op))._field_model))=(*(((jule::Any*)((&(_813_model))))));
	};
}



inline void _20e02c6e2_buildCache(jule::Ptr<_20e027be8_IR>* _2720_ir) {
	_20e02c934_buildStdInternalNosafeCache(_2720_ir);
}



inline void _20e02c934_buildStdInternalNosafeCache(jule::Ptr<_20e027be8_IR>* _3137_ir) {
	jule::Ptr<_20d417cba_Package> _3213_p = _20e02d517_getPackage(_3137_ir, &(_20e02bb0e_stdPackageInternalNosafe));;
	if ((_3213_p == nullptr)) {
		return;;
	};
	_20e02ccca_pushCache(&(_3213_p), jule::Str("Stobs", 5), jule::Fn<void(_20d57e22d_exprOptimizer*,_20e02c04e_stdCacheData*,jule::Ptr<_20d396ad4_FnCallExprModel>*)>(_20d587379_doInternalNosafeStobs));
}



inline void _20e02ccca_pushCache(jule::Ptr<_20d417cba_Package>* _4119_p, jule::Str _4132_ident, jule::Fn<void(_20d57e22d_exprOptimizer*,_20e02c04e_stdCacheData*,jule::Ptr<_20d396ad4_FnCallExprModel>*)> _4144_do) {
	jule::Ptr<_20d3a5a49_FnIns> _4213_f = _20e02d193_getFunc(_4119_p, &(_4132_ident));;
	_20e02c47d_stdCache[static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_4213_f))]=_20e02c04e_stdCacheData{._field_f=_4213_f, ._field_do=_4144_do};
}



inline jule::Ptr<_20d3a5a49_FnIns> _20e02d193_getFunc(jule::Ptr<_20d417cba_Package>* _5017_p, jule::Str* _5031_ident) {
	;
	jule::Ptr<_20d3a2b45_Fn> _5213_f = _20d41934e_FindFn((*(_5017_p)).ptr(), (*(_5031_ident)), false);;
	if ((_5213_f == nullptr)) {
		return nullptr;;
	};
	return (*(_5213_f))._field_Instances[0LL];;
}



inline jule::Ptr<_20d417cba_Package> _20e02d517_getPackage(jule::Ptr<_20e027be8_IR>* _5920_ir, jule::Str* _5930_path) {
	{
		auto expr = &((*((*(_5920_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_212bc88b7:;
		if (it != expr_end) {
			jule::Ptr<_20d414d94_ImportInfo> _6017_u = *it;
			{
				if (((*(_6017_u))._field_Std && ((*(_6017_u))._field_LinkPath == (*(_5930_path))))) {
					return (*(_6017_u))._field_Package;;
				};
			}
			_iter_next_212bc88b7:;
			++it;
			goto _iter_begin_212bc88b7;
		}
		_iter_end_212bc88b7:;
	};
	return nullptr;;
}



inline void _20e03120c_PushOptLevel(jule::I64 _3417_level) {
	jule::Bool _359_l1 = (_3417_level >= static_cast<jule::I64>(1LL));;
	jule::Bool _369_l2 = (_3417_level >= static_cast<jule::I64>(2LL));;
	_20e02dced_Copy=_359_l1;
	_20e02e10b_Deadcode=_359_l1;
	_20e02e3c5_Append=_359_l1;
	_20e02e6d3_Math=_359_l1;
	_20e02e99c_Access=_359_l1;
	_20e02ec66_Inline=_359_l1;
	_20e030030_Ptr=_359_l1;
	_20e030409_Cond=_359_l1;
	_20e0306c3_Str=_359_l1;
	_20e03098c_Slice=_359_l1;
	_20e030c56_Assign=_359_l1;
	_20e031020_StdInternalNosafe=_369_l2;
}



inline void _20db7e71d_detectEnabled(void) {
	_20db7c166_exprEnabled=((((_20e030030_Ptr || _20e02e6d3_Math) || _20e02e99c_Access) || _20e030409_Cond) || _20e031020_StdInternalNosafe);
	_20db7c41e_scopeEnabled=(((((_20e030409_Cond || _20e02e3c5_Append) || _20e02dced_Copy) || _20e0306c3_Str) || _20e03098c_Slice) || _20e030c56_Assign);
	_20db7c6d8_stdEnabled=_20e031020_StdInternalNosafe;
}



inline void _20e23ae3e_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_2273c2cd3_Exit(1LL);
}



inline jule::U64 _20ebe2cbe_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));;
}



inline jule::Bool _20ea21bdb_isCopyOptimizable(jule::Ptr<_20d087165_Data>* _82323_expr) {
	if ((!((*((*(_82323_expr))))._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_82323_expr))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type95) {
			_case_begin_212cbd160:;
			{
				return false;;
			}
		}
		_match_end_212cbd10a:;
	};
	return true;;
}



inline jule::Bool _20ea220a4_isIterCopyOptimizable(jule::Ptr<_20d087165_Data>* _83427_expr, jule::Ptr<_20d458aca_Var>* _83441_v) {
	if (((!((*((*(_83427_expr))))._field_Lvalue)) && (!(_20d4e0b2e_Mutable((*((*(_83427_expr))))._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*((*(_83441_v))))._field_Mutable)) && (!((*((*(_83427_expr))))._field_Mutable)));;
}



inline jule::Str _20ea327e0_decomposeCommonEsq(jule::U8 _149423_b) {
	{
		auto &_match_expr{ _149423_b };
		
		if (_match_expr == '\\') {
			_case_begin_20c3e7dbc:;
			{
				return jule::Str("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_20c3e852c:;
			{
				return jule::Str("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_20c3e8087:;
			{
				return jule::Str("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_20c3e80ed:;
			{
				return jule::Str("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_20c3e8164:;
			{
				return jule::Str("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_20c3e81ca:;
			{
				return jule::Str("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_20c3e86e7:;
			{
				return jule::Str("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_20c3e875d:;
			{
				return jule::Str("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_20c3e87c4:;
			{
				return jule::Str("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_20c3e883a:;
			{
				return jule::Str("\\v", 2);;
			}
		}
		else {
			_case_begin_20c3e8021:;
			{
				return jule::Str();;
			}
		}
		_match_end_20c3dd6dc:;
	};
}



inline jule::Str _20ea32aed_sbtoa(jule::U8 _152110_b) {
	if ((_152110_b == 0LLU)) {
		return jule::Str("\\x00", 4);;
	};
	if ((_152110_b < 128LLU)) {
		jule::Str _152613_seq = _20ea327e0_decomposeCommonEsq(_152110_b);;
		if ((!(_152613_seq.empty()))) {
			return _152613_seq;;
		};
		if (((32LL <= _152110_b) && (_152110_b <= 126LLU))) {
			return jule::Str::from_byte(_152110_b);;
		};
	};
	jule::Str _15349_seq = _20b054c06_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_152110_b)), 8LL);;
	if ((_15349_seq.len() == 2LL)) {
		return (jule::Str("\\0", 2) + _15349_seq);;
	};
	return (jule::Str("\\", 1) + _15349_seq);;
}



inline void _20ea32dd9_cstrBytes(_2240a0ad5_StrBuilder* _154119_s, jule::Str _154134_ctx) {
	{
		auto expr = &(_154134_ctx);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c3eca81:;
		if (it != expr_end) {
			jule::U8 *_154212_b = it;
			{
				_2240a989c_WriteStr(_154119_s, _20ea32aed_sbtoa((*(_154212_b))));
			}
			_iter_next_20c3eca81:;
			++it;
			goto _iter_begin_20c3eca81;
		}
		_iter_end_20c3eca81:;
	};
}



inline void _20ea33219_cstrLit(_2240a0ad5_StrBuilder* _154717_s, jule::Str _154732_ctx) {
	_2240a9b55_WriteByte(_154717_s, '\"');
	_20ea32dd9_cstrBytes(_154717_s, _154732_ctx);
	_2240a9b55_WriteByte(_154717_s, '\"');
}



inline void _20ea335b0_ftoa(_2240a0ad5_StrBuilder* _155314_s, jule::F64 _155329_f, jule::I64 _155337_bitsize) {
	if ((_155337_bitsize != 32LL)) {
		if ((_155329_f == static_cast<jule::F64>(static_cast<jule::I64>(_155329_f)))) {
			_20ea3389b_itoa(_155314_s, static_cast<jule::I64>(static_cast<jule::I64>(_155329_f)));
			return;;
		};
		if ((_155329_f == static_cast<jule::F64>(static_cast<jule::U64>(_155329_f)))) {
			_20ea33b87_utoa(_155314_s, static_cast<jule::U64>(static_cast<jule::U64>(_155329_f)));
			return;;
		};
	};
	jule::Str _15649_m = _20b038789_FmtFloat(_155329_f, 'f', -1LL, _155337_bitsize);;
	_2240a989c_WriteStr(_155314_s, _15649_m);
	if ((!(_2248b02b2_Contains(_15649_m, jule::Str(".", 1))))) {
		_2240a989c_WriteStr(_155314_s, jule::Str(".0", 2));
	};
}



inline void _20ea3389b_itoa(_2240a0ad5_StrBuilder* _157114_s, jule::I64 _157129_x) {
	{
		
		if ((_157129_x == jule::MAX_I64)) {
			_case_begin_20c402844:;
			{
				_2240a989c_WriteStr(_157114_s, jule::Str("jule::MAX_I64", 13));
				return;;
			}
		}
		else if ((_157129_x == jule::MIN_I64)) {
			_case_begin_20c4028bb:;
			{
				_2240a989c_WriteStr(_157114_s, jule::Str("jule::MIN_I64", 13));
				return;;
			}
		}
		_match_end_20c402734:;
	};
	_2240a989c_WriteStr(_157114_s, _20b0550be_FmtInt(_157129_x, 10LL));
	if (_227311c00_Is64Bit(jule::Str("amd64", 5))) {
		_2240a9b55_WriteByte(_157114_s, 'L');
	};
	_2240a9b55_WriteByte(_157114_s, 'L');
}



inline void _20ea33b87_utoa(_2240a0ad5_StrBuilder* _158814_s, jule::U64 _158829_x) {
	{
		
		if ((_158829_x == jule::MAX_U64)) {
			_case_begin_20c4049bc:;
			{
				_2240a989c_WriteStr(_158814_s, jule::Str("jule::MAX_U64", 13));
				return;;
			}
		}
		_match_end_20c4048bd:;
	};
	_2240a989c_WriteStr(_158814_s, _20b054c06_FmtUint(_158829_x, 10LL));
	if (_227311c00_Is64Bit(jule::Str("amd64", 5))) {
		_2240a9b55_WriteByte(_158814_s, 'L');
	};
	_2240a989c_WriteStr(_158814_s, jule::Str("LU", 2));
}



inline jule::Bool _20ea34061_isForwarded(jule::Ptr<_20d3e369c_Scope>* _160217_s) {
	jule::Any _16039_last = (*((*(_160217_s))))._field_Stmts[((*((*(_160217_s))))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _16039_last };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_20c406ccc:;
			{
				{
					auto &_match_expr{ (*(_16039_last.cast_ptr<_20d087165_Data>(&__jule_any_type24)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_20c407b46:;
						{
							return true;;
						}
					}
					else {
						_case_begin_20c407ad0:;
						{
							return false;;
						}
					}
					_match_end_20c407a7a:;
				};
			}
		}
		else {
			_case_begin_20c406dcb:;
			{
				return true;;
			}
		}
		_match_end_20c4063d6:;
	};
}



inline jule::Bool _20ea3432a_isExprComesFromBind(jule::Ptr<_20d087165_Data>* _161725_d) {
	{
		auto &_match_expr{ (*((*(_161725_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_20c408394:;
			{
				return (*((*((*(_161725_d))))._field_Model.cast_ptr<_20d458aca_Var>(&__jule_any_type8)))._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_20c40840a:;
			{
				return (*((*((*((*((*(_161725_d))))._field_Model.cast_ptr<_20d399675_StructSubIdentExprModel>(&__jule_any_type71)))._field_Owner))._field_Decl))._field_Binded;;
			}
		}
		else {
			_case_begin_20c40832d:;
			{
				return false;;
			}
		}
		_match_end_20c4082c8:;
	};
}



inline jule::Bool _20ea345e4_isAny(jule::Ptr<_20d4de28c_TypeKind>* _162915_t) {
	if ((_20d4e26be_TypeEnum((*(_162915_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_20d4e710d_Prim> _16339_prim = _20d4e1b85_Prim((*(_162915_t)).ptr());;
	return ((_16339_prim != nullptr) && _20d4ea82b_IsAny(_16339_prim.ptr()));;
}



inline void _20ec077c8_iterFiles(jule::Ptr<_20d417cba_Package>* _139019_pkg, jule::Fn<void(jule::Ptr<_20d081e40_SymbolTable>*)> _139034_f) {
	{
		auto expr = &((*((*(_139019_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21160710a:;
		if (it != expr_end) {
			jule::Ptr<_20d081e40_SymbolTable> _139117_file = *it;
			{
				_139034_f(&(_139117_file));
			}
			_iter_next_21160710a:;
			++it;
			goto _iter_begin_21160710a;
		}
		_iter_end_21160710a:;
	};
}



inline jule::Str _20ec07ad6_concatAllParts(jule::Slice<jule::Ptr<_20d3510bb_Token>> _139719_parts) {
	jule::I64 _139813_n = 0LL;;
	{
		auto expr = &(_139719_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2116083b4:;
		if (it != expr_end) {
			jule::Ptr<_20d3510bb_Token> *_139912_part = it;
			{
				_139813_n+=(*((*(_139912_part))))._field_Kind.len();
			}
			_iter_next_2116083b4:;
			++it;
			goto _iter_begin_2116083b4;
		}
		_iter_end_2116083b4:;
	};
	if ((_139813_n == 0LL)) {
		return jule::Str();;
	};
	_2240a0ad5_StrBuilder _140513_s = static__2240a0e04_New(_139813_n);;
	{
		auto expr = &(_139719_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_211607ca9:;
		if (it != expr_end) {
			jule::Ptr<_20d3510bb_Token> *_140612_p = it;
			{
				_2240a989c_WriteStr(&_140513_s, (*((*(_140612_p))))._field_Kind);
			}
			_iter_next_211607ca9:;
			++it;
			goto _iter_begin_211607ca9;
		}
		_iter_end_211607ca9:;
	};
	return _2240aa194_Str(&_140513_s);;
}



inline jule::Bool _20ec07e5a_containsTraitMethod(jule::Ptr<_20d3b5dde_Trait>* _141329_t, jule::Str* _141341_ident) {
	{
		auto expr = &((*((*(_141329_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21160a680:;
		if (it != expr_end) {
			jule::Ptr<_20d3a2b45_Fn> _141412_m = *it;
			{
				if (((*(_141412_m))._field_Ident == (*(_141341_ident)))) {
					return true;;
				};
			}
			_iter_next_21160a680:;
			++it;
			goto _iter_begin_21160a680;
		}
		_iter_end_21160a680:;
	};
	return false;;
}



inline void _20ec0828a_pushMethodsFromInherit(jule::Ptr<_20d3b5dde_Trait>* _142532_dest, jule::Ptr<_20d3b5dde_Trait>* _142551_src) {
	_20ec08576_pushMethodsFromInherits(_142532_dest, _142551_src);
	{
		auto expr = &((*((*(_142551_src))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21160b153:;
		if (it != expr_end) {
			jule::Ptr<_20d3a2b45_Fn> _142717_m = *it;
			{
				if ((!(_20ec07e5a_containsTraitMethod(_142532_dest, &((*(_142717_m))._field_Ident))))) {
					{ jule::Slice<jule::Ptr<_20d3a2b45_Fn>> &__jule_push_dest = (*((*(_142532_dest))))._field_Methods; __jule_push_dest.push(_142717_m); };
				};
			}
			_iter_next_21160b153:;
			++it;
			goto _iter_begin_21160b153;
		}
		_iter_end_21160b153:;
	};
}



inline void _20ec08576_pushMethodsFromInherits(jule::Ptr<_20d3b5dde_Trait>* _143633_dest, jule::Ptr<_20d3b5dde_Trait>* _143652_src) {
	{
		auto expr = &((*((*(_143652_src))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_21160c253:;
		if (it != expr_end) {
			jule::Ptr<_20d4e6706_TypeSymbol> _143717_inh = *it;
			{
				jule::Ptr<_20d3b5dde_Trait> _143817_t2 = _20d4e348e_Trait((*(_143717_inh))._field_Kind.ptr());;
				_20ec0828a_pushMethodsFromInherit(_143633_dest, &(_143817_t2));
			}
			_iter_next_21160c253:;
			++it;
			goto _iter_begin_21160c253;
		}
		_iter_end_21160c253:;
	};
}



inline jule::Bool _20ec08840_isOpMethod(jule::Ptr<_20d3a2b45_Fn>* _144416_m) {
	if ((((*((*(_144416_m))))._field_Generics.len() > 0LL) || ((*((*(_144416_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	jule::Ptr<_20d3a5a49_FnIns> _14489_mi = (*((*(_144416_m))))._field_Instances[0LL];;
	;
	;
	{
		if ((_14489_mi == (*((*(_14489_mi))._field_Owner))._field_Operators._field_Eq)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == (*((*(_14489_mi))._field_Owner))._field_Operators._field_Gt)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == (*((*(_14489_mi))._field_Owner))._field_Operators._field_GtEq)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == (*((*(_14489_mi))._field_Owner))._field_Operators._field_Lt)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == (*((*(_14489_mi))._field_Owner))._field_Operators._field_LtEq)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == (*((*(_14489_mi))._field_Owner))._field_Operators._field_Shl)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == (*((*(_14489_mi))._field_Owner))._field_Operators._field_Shr)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == (*((*(_14489_mi))._field_Owner))._field_Operators._field_Add)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == (*((*(_14489_mi))._field_Owner))._field_Operators._field_Sub)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == (*((*(_14489_mi))._field_Owner))._field_Operators._field_Div)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == (*((*(_14489_mi))._field_Owner))._field_Operators._field_Mul)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == (*((*(_14489_mi))._field_Owner))._field_Operators._field_Mod)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == (*((*(_14489_mi))._field_Owner))._field_Operators._field_BitAnd)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == (*((*(_14489_mi))._field_Owner))._field_Operators._field_BitOr)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == (*((*(_14489_mi))._field_Owner))._field_Operators._field_BitXor)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == (*((*(_14489_mi))._field_Owner))._field_Operators._field_Neg)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == (*((*(_14489_mi))._field_Owner))._field_Operators._field_Pos)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == (*((*(_14489_mi))._field_Owner))._field_Operators._field_BitNot)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == (*((*(_14489_mi))._field_Owner))._field_Operators._field_AddAssign)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == (*((*(_14489_mi))._field_Owner))._field_Operators._field_SubAssign)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == (*((*(_14489_mi))._field_Owner))._field_Operators._field_DivAssign)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == (*((*(_14489_mi))._field_Owner))._field_Operators._field_MulAssign)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == (*((*(_14489_mi))._field_Owner))._field_Operators._field_ModAssign)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == (*((*(_14489_mi))._field_Owner))._field_Operators._field_ShlAssign)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == (*((*(_14489_mi))._field_Owner))._field_Operators._field_ShrAssign)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == (*((*(_14489_mi))._field_Owner))._field_Operators._field_BitOrAssign)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == (*((*(_14489_mi))._field_Owner))._field_Operators._field_BitAndAssign)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == (*((*(_14489_mi))._field_Owner))._field_Operators._field_BitXorAssign)) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _20ec08b09_isHeadDecl(jule::Ptr<_20d3a2b45_Fn>* _146020_m) {
	if ((((*((*(_146020_m))))._field_Generics.len() > 0LL) || ((*((*(_146020_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	if (_20ec08840_isOpMethod(_146020_m)) {
		return true;;
	};
	jule::Ptr<_20d3a5a49_FnIns> _146713_mi = (*((*(_146020_m))))._field_Instances[0LL];;
	;
	return static__20d45a02c_Dispose(_20d3916d3_FindMethod((*(_146713_mi))._field_Owner.ptr(), jule::Str("Dispose", 7), false));;
}



inline jule::Ptr<_20d36adb6_Directive> _20ec176c8_findDirective(jule::Slice<jule::Ptr<_20d36adb6_Directive>>* _48023_directives, jule::Str _48054_tag) {
	{
		auto expr = _48023_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_224918caa:;
		if (it != expr_end) {
			jule::Ptr<_20d36adb6_Directive> _48117_dr = *it;
			{
				if (((*((*(_48117_dr))._field_Tag))._field_Kind == _48054_tag)) {
					return _48117_dr;;
				};
			}
			_iter_next_224918caa:;
			++it;
			goto _iter_begin_224918caa;
		}
		_iter_end_224918caa:;
	};
	return nullptr;;
}



inline jule::Bool _20ec17a91_hasDirective(jule::Slice<jule::Ptr<_20d36adb6_Directive>>* _49018_directives, jule::Str _49049_tag) {
	return (_20ec176c8_findDirective(&((*(_49018_directives))), _49049_tag) != nullptr);;
}



inline jule::Bool _20ec17d5a_shouldInitialized(jule::Ptr<_20d4de28c_TypeKind>* _49727_t) {
	jule::Ptr<_20d4e710d_Prim> _4989_prim = _20d4e1b85_Prim((*(_49727_t)).ptr());;
	if ((_4989_prim != nullptr)) {
		return ((!(_20d4ea82b_IsAny(_4989_prim.ptr()))) && (!(_20d4ea595_IsStr(_4989_prim.ptr()))));;
	};
	{
		
		if ((_20d4e1e1b_Sptr((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_22491bad2:;
			{
				return false;;
			}
		}
		else if ((_20d4e3725_Map((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_22491bb48:;
			{
				return false;;
			}
		}
		else if ((_20d4e2bdb_Slc((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_22491bbc0:;
			{
				return false;;
			}
		}
		else if ((_20d4e348e_Trait((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_22491bc47:;
			{
				return false;;
			}
		}
		else if ((_20d4e2e72_Fn((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_22491bcbe:;
			{
				return false;;
			}
		}
		else if ((_20d4e2955_Arr((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_22491bd46:;
			{
				jule::Ptr<_20d4ed92d_Arr> _51417_arr = _20d4e2955_Arr((*(_49727_t)).ptr());;
				return _20ec17d5a_shouldInitialized(&((*(_51417_arr))._field_Elem));;
			}
		}
		else if ((_20d4e3208_Struct((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_22491bdbd:;
			{
				return false;;
			}
		}
		else {
			_case_begin_22491ad78:;
			{
				return true;;
			}
		}
		_match_end_22491ab58:;
	};
}



inline void _2273c729e_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _2273c7524_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_2273c729e_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I64 _4113_max = _2273c70b2_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_2273c70b2_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2249bae7d:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_4212_k = it;
			{
				jule::I64 _4313_n = (*(_4212_k))[0LL].len();;
				if ((_4313_n > _4113_max)) {
					_4113_max=_4313_n;
				};
			}
			_iter_next_2249bae7d:;
			++it;
			goto _iter_begin_2249bae7d;
		}
		_iter_end_2249bae7d:;
	};
	_2240a0ad5_StrBuilder _4913_s = static__2240a0e04_New(32LL);;
	;
	{
		auto expr = &(_2273c70b2_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2249bc776:;
		if (it != expr_end) {
			jule::I64 _519_i = it - expr->begin();
			jule::Array<jule::Str,2> *_5112_part = it;
			{
				_2240a989c_WriteStr(&_4913_s, (*(_5112_part))[0LL]);
				_2240a989c_WriteStr(&_4913_s, _2248a97b7_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(((_4113_max - (*(_5112_part))[0LL].len()) + 5LL))));
				_2240a989c_WriteStr(&_4913_s, (*(_5112_part))[1LL]);
				if (((_519_i + 1LL) < 5LL)) {
					_2240a9b55_WriteByte(&_4913_s, '\n');
				};
			}
			_iter_next_2249bc776:;
			++it;
			_519_i++;
			goto _iter_begin_2249bc776;
		}
		_iter_end_2249bc776:;
	};
	jule::outln(_4913_s);
}



inline void _2273c7755_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_2273c729e_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str("jule0.0.15 @master", 18));
}



inline void _2273c7953_toolDistos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	jule::out(jule::Str("windows", 7));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("linux", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("darwin", 6));
	jule::outln(jule::Str());
}



inline void _2273c7ac9_toolDistarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	jule::out(jule::Str("amd64", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("i386", 4));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("arm64", 5));
	jule::outln(jule::Str());
}



inline void _2273c7d0a_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_2273c729e_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1059_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1059_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_2249c3925:;
			{
				_2273c7953_toolDistos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_2249c3848:;
			{
				_2273c7ac9_toolDistarch();
			}
		}
		else {
			_case_begin_2249c2ea7:;
			{
				_2273c729e_printErrorMessage((jule::Str("undefined command: ", 19) + _1059_cmd));
			}
		}
		_match_end_2249c3408:;
	};
}



inline void _2273c803b_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_2273c729e_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str("julec version: jule0.0.15 @master", 33));
	jule::outln(jule::Str("architecture: amd64", 19));
	jule::outln(jule::Str("operating system: windows", 25));
	jule::outln((jule::Str("default compiler: ", 18) + _23c5aeaae_Compiler));
	jule::outln((jule::Str("default C++ standard: ", 22) + _23c5b10ee_CppStd));
}



inline void _2273c8349_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_2273c729e_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_2249c7132:;
			{
				({
					auto except = static__223ddba97_Write(jule::Str("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_2273c729e_printErrorMessage(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_2249c6a27:;
			{
				_2273c729e_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_2249c6b7b:;
	};
}



inline jule::Bool _2273c8613_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_2249c86b6:;
			{
				_2273c7524_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_2249c872c:;
			{
				_2273c7755_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_2249c8793:;
			{
				_2273c7d0a_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_2249c8809:;
			{
				_2273c803b_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_2249c8001:;
			{
				_2273c8349_mod(_15320_args);
			}
		}
		else {
			_case_begin_2249c7e8a:;
			{
				return false;;
			}
		}
		_match_end_2249c7880:;
	};
	return true;;
}



inline void _2273c8789_showInfo(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18913_args = _2240d77a9_Args();;
	if ((_18913_args.len() < 2LL)) {
		_2273c8789_showInfo();
		return;;
	};
	if (_2273c8613_processCommand(&(_18913_args))) {
		return;;
	};
	_20ec88a8a_compileCommand(&(_18913_args));
}



inline void _2273c91a2_enableVtp(void) {
	jule::Uintptr _199_hOut = _223db7ce8_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551605LLU));;
	if ((_199_hOut == jule::MAX_U64)) {
		return;;
	};
	jule::I64 _2413_dwMode = 0LL;;
	if ((!(_223dba36c_GetConsoleMode(_199_hOut, &(_2413_dwMode))))) {
		return;;
	};
	_2413_dwMode|=4LL;
	_223dba944_SetConsoleMode(_199_hOut, _2413_dwMode);
}



inline void _2273c936c_init(void) {
	_2273c91a2_enableVtp();
}



inline void _20ec85889_init(void) {
	_23c5aeaae_Compiler=jule::Str("clang", 5);
}



inline jule::Ptr<_223ddac3e_File> _20ec85b64_openOutput(jule::Str* _4316_path) {
	jule::Str _449_dir = _22726ae34_Dir((*(_4316_path)));;
	({
		auto except = static__22726c562_Of(_449_dir);
		if (!except.ok()) {
			({
				auto except = static__22726b93a_Create(_449_dir);
				if (!except.ok()) {
					_20e23ae3e_Throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__223ddb437_Create((*(_4316_path)));
		(except.ok()) ? (except.result) : ({
			_20e23ae3e_Throw(jule::Str("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _20ec85cda_clearObjects(void) {
	({
		auto except = static__223eeadb5_Remove(_20ec86ed9_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__22726bb6b_Remove(_20ec8513b_OutDir);
}



inline void _20ec8611a_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_2273b5cd7_Cmd> _7313_cmd = static__2273b6205_New(_7214_compiler);;
	(*(_7313_cmd))._field_Args=_2248aee3d_Split(_7229_compilerCmd, jule::Str(" ", 1), -1LL);
	({
		auto except = _2273b6403_Spawn(_7313_cmd.ptr());
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0) == _match_expr) {
					_case_begin_2249d1416:;
					{
						static__20db7eab4_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL), &__jule_any_type0) == _match_expr) {
					_case_begin_2249d0a42:;
					{
						static__20db7eab4_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_2249d0c51:;
					{
						static__20db7eab4_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_2249d0ba7:;
			};
			_20e23ae3e_Throw(jule::Str());
		}
	});
	jule::I64 _869_status = ({
		auto except = _2273b6887_Wait(_7313_cmd.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:86:18"));
		(except.result);
	});;
	if ((_869_status != 0LL)) {
		jule::Str _8813_errorMessage = ((jule::Str("\n>>> your backend compiler (", 28) + _23c5aeaae_Compiler) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__20db7eab4_Print(jule::Str("\033[31m", 5), _8813_errorMessage);
		_20e23ae3e_Throw(jule::Str());
	};
	_20ec85cda_clearObjects();
}



inline jule::Bool _20ec863d4_isCppSourceFile(jule::Str _9920_path) {
	jule::I64 _1009_offset = _2248ad799_FindLastByte(_9920_path, '.');;
	if ((_1009_offset == -1LL)) {
		return false;;
	};
	return _227300095_IsValidCppExt(_9920_path.slice(_1009_offset));;
}



inline void _20ec86615_pushCompCmdClang(_2240a0ad5_StrBuilder* _10726_cmd) {
	_2240a989c_WriteStr(_10726_cmd, jule::Str("-Wno-everything ", 16));
	_2240a989c_WriteStr(_10726_cmd, jule::Str("--std=", 6));
	{
		auto &_match_expr{ _23c5b10ee_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_2249d3da8:;
			{
				_2240a989c_WriteStr(_10726_cmd, jule::Str("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_2249d4d76:;
			{
				_2240a989c_WriteStr(_10726_cmd, jule::Str("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_2249d4ddc:;
			{
				_2240a989c_WriteStr(_10726_cmd, jule::Str("c++20", 5));
			}
		}
		_match_end_2249d43c5:;
	};
	_2240a9b55_WriteByte(_10726_cmd, ' ');
	if (_23c5b2375_Production) {
		_2240a989c_WriteStr(_10726_cmd, jule::Str("-O3 ", 4));
		_2240a989c_WriteStr(_10726_cmd, jule::Str("-flto ", 6));
		_2240a989c_WriteStr(_10726_cmd, jule::Str("-DNDEBUG ", 9));
		_2240a989c_WriteStr(_10726_cmd, jule::Str("-fomit-frame-pointer ", 21));
	} else {
		_2240a989c_WriteStr(_10726_cmd, jule::Str("-O0 ", 4));
	};
}



inline void _20ec86846_pushCompCmdGcc(_2240a0ad5_StrBuilder* _13324_cmd) {
	_2240a989c_WriteStr(_13324_cmd, jule::Str("-w ", 3));
	_2240a989c_WriteStr(_13324_cmd, jule::Str("--std=", 6));
	{
		auto &_match_expr{ _23c5b10ee_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_2249d7ebc:;
			{
				_2240a989c_WriteStr(_13324_cmd, jule::Str("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_2249d6509:;
			{
				_2240a989c_WriteStr(_13324_cmd, jule::Str("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_2249d6570:;
			{
				_2240a989c_WriteStr(_13324_cmd, jule::Str("c++20", 5));
			}
		}
		_match_end_2249d7e67:;
	};
	_2240a9b55_WriteByte(_13324_cmd, ' ');
	if (_23c5b2375_Production) {
		_2240a989c_WriteStr(_13324_cmd, jule::Str("-O3 ", 4));
		_2240a989c_WriteStr(_13324_cmd, jule::Str("-DNDEBUG ", 9));
		_2240a989c_WriteStr(_13324_cmd, jule::Str("-fomit-frame-pointer ", 21));
	} else {
		_2240a989c_WriteStr(_13324_cmd, jule::Str("-O0 ", 4));
	};
}



inline __jule_tuple_str__jule_tuple_str _20ec86cca_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_20e027be8_IR>* _15936_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_16010_compiler = &(_23c5b0d9b_CompilerPath);;
	_2240a0ad5_StrBuilder _16113_cmd = static__2240a0e04_New(64LL);;
	{
		auto &_match_expr{ _23c5aeaae_Compiler };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_2249dae6a:;
			{
				_20ec86846_pushCompCmdGcc(&(_16113_cmd));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_2249db443:;
			{
				_20ec86615_pushCompCmdClang(&(_16113_cmd));
			}
		}
		_match_end_2249db157:;
	};
	{
		auto expr = &((*((*(_15936_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2249db6c9:;
		if (it != expr_end) {
			jule::Ptr<_20d414d94_ImportInfo> *_17112_u = it;
			{
				if (((*((*(_17112_u))))._field_Binded && _20ec863d4_isCppSourceFile((*((*(_17112_u))))._field_Path))) {
					_2240a989c_WriteStr(&_16113_cmd, (*((*(_17112_u))))._field_Path);
					_2240a9b55_WriteByte(&_16113_cmd, ' ');
				};
			}
			_iter_next_2249db6c9:;
			++it;
			goto _iter_begin_2249db6c9;
		}
		_iter_end_2249db6c9:;
	};
	if ((!(_20ec856d0_Out.empty()))) {
		_2240a989c_WriteStr(&_16113_cmd, jule::Str("-o ", 3));
		_2240a989c_WriteStr(&_16113_cmd, _20ec856d0_Out);
		_2240a9b55_WriteByte(&_16113_cmd, ' ');
	};
	_2240a989c_WriteStr(&_16113_cmd, _15918_sourcePath);
	{
		auto expr = &((*((*(_15936_ir))))._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2249de29d:;
		if (it != expr_end) {
			jule::Str *_18612_pass = it;
			{
				_2240a9b55_WriteByte(&_16113_cmd, ' ');
				_2240a989c_WriteStr(&_16113_cmd, (*(_18612_pass)));
			}
			_iter_next_2249de29d:;
			++it;
			goto _iter_begin_2249de29d;
		}
		_iter_end_2249de29d:;
	};
	if (_2273c3d8e_Os.equal("windows", 7)) {
		_2240a989c_WriteStr(&_16113_cmd, jule::Str(" -lshell32", 10));
	};
	__jule_func_result.__jule_result_arg0 = (*(_16010_compiler));
	__jule_func_result.__jule_result_arg1 = _2240aa194_Str(&_16113_cmd);
	return __jule_func_result;;
}



inline jule::Str _20ec86ed9_getCompilePath(void) {
	return _22726a241_Join(jule::Slice<jule::Str>::make({_20ec8513b_OutDir,_20ec85416_OutName}));;
}



inline void _20ec8721a_applyTargetIndependentOptimizations(jule::Ptr<_20e027be8_IR>* _20545_ir) {
	jule::Ptr<_20db7c96e_Optimizer> _20613_opt = static__20db7cdae_New(_20545_ir);;
	_20db7e498_Optimize(_20613_opt.ptr());
}



inline void _20ec87391_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _23c5aeaae_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_2249e0e1a:;
			{
				_20e23ae3e_Throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_2249e1965:;
			{
				if (_23c5b0d9b_CompilerPath.empty()) {
					_23c5b0d9b_CompilerPath=jule::Str("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_2249e1646:;
			{
				if (_23c5b0d9b_CompilerPath.empty()) {
					_23c5b0d9b_CompilerPath=jule::Str("g++", 3);
				};
			}
		}
		else {
			_case_begin_2249e15d0:;
			{
				_20e23ae3e_Throw((jule::Str("invalid option value for --compiler: ", 37) + _23c5aeaae_Compiler));
			}
		}
		_match_end_2249e126c:;
	};
}



inline void _20ec875c2_checkTargetArch(jule::Str _22720_arch) {
	if ((((!_22720_arch.equal("amd64", 5)) && (!_22720_arch.equal("arm64", 5))) && (!_22720_arch.equal("i386", 4)))) {
		_20e23ae3e_Throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _22720_arch));
	};
}



inline void _20ec87803_checkTargetOs(jule::Str _23518_os) {
	if ((((!_23518_os.equal("windows", 7)) && (!_23518_os.equal("linux", 5))) && (!_23518_os.equal("darwin", 6)))) {
		_20e23ae3e_Throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _23518_os));
	};
}



inline void _20ec87a34_checkTargetFlag(jule::Str* _24321_target) {
	if ((*(_24321_target)).empty()) {
		_20e23ae3e_Throw(jule::Str("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2489_parts = _2248aee3d_Split((*(_24321_target)), jule::Str("-", 1), -1LL);;
	if ((_2489_parts.len() != 2LL)) {
		_20e23ae3e_Throw((jule::Str("--target: undefined platform target format: ", 44) + (*(_24321_target))));
	};
	jule::Str _25310_os;;
	jule::Str _25314_arch;;
	({
		jule::Str ___jule_assign_arg = _2489_parts[0LL];
		jule::Str _1___jule_assign_arg = _2489_parts[1LL];
		_25310_os = ___jule_assign_arg;
		_25314_arch = _1___jule_assign_arg;
	});
	if ((!_25310_os.equal("native", 6))) {
		_20ec87803_checkTargetOs(_25310_os);
		_2273c3d8e_Os=_25310_os;
	};
	if ((!_25314_arch.equal("native", 6))) {
		_20ec875c2_checkTargetArch(_25314_arch);
		_2273c4158_Arch=_25314_arch;
	};
	_20b0596de_UpdateTarget();
}



inline void _20ec87c65_checkOptFlag(jule::Str* _26618_opt) {
	if ((*(_26618_opt)).empty()) {
		_20e23ae3e_Throw(jule::Str("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_26618_opt)) };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_2249e7e11:;
			{
				goto _match_end_2249e7e99;
			}
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_2249e8384:;
			{
				_20e03120c_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else if (_match_expr == jule::Str("L2", 2)) {
			_case_begin_2249e83ea:;
			{
				_20e03120c_PushOptLevel(static_cast<jule::I64>(2LL));
			}
		}
		else {
			_case_begin_2249e831d:;
			{
				_20e23ae3e_Throw((jule::Str("--opt: invalid optimization level: ", 35) + (*(_26618_opt))));
			}
		}
		_match_end_2249e7e99:;
	};
}



inline void _20ec880ea_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _23c5b10ee_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_2249e8461:;
			{
				goto _match_end_2249e953e;
			}
		}
		else {
			_case_begin_2249e9220:;
			{
				_20e23ae3e_Throw((jule::Str("--cppstd: invalid cpp standard: ", 32) + _23c5b10ee_CppStd));
			}
		}
		_match_end_2249e953e:;
	};
}



inline jule::Slice<jule::Str> _20ec8835e_checkFlags(jule::Slice<jule::Str>* _29416_args) {
	jule::Str _29513_opt = jule::Str("L0", 2);;
	jule::Str _29613_target = jule::Str("native-native", 13);;
	jule::Ptr<_20ec801be_FlagSet> _29813_fs = static__20ec804aa_New();;
	_2249eb5eb_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29513_opt)))), jule::Str("opt", 3), 0LL, jule::Str("Optimization level", 18));
	_2249eb5eb_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29613_target)))), jule::Str("target", 6), 0LL, jule::Str("Target system", 13));
	_2249eb5eb_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_20ec856d0_Out)))), jule::Str("out", 3), 'o', jule::Str("Output identifier", 17));
	_224a04c53_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_23c5b1385_Shadowing)))), jule::Str("shadowing", 9), 0LL, jule::Str("Allow shadowing", 15));
	_224a04c53_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_23c5b164e_Transpilation)))), jule::Str("transpile", 9), 't', jule::Str("Transpile code", 14));
	_2249eb5eb_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_23c5aeaae_Compiler)))), jule::Str("compiler", 8), 0LL, jule::Str("Backend compiler", 16));
	_2249eb5eb_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_23c5b0d9b_CompilerPath)))), jule::Str("compiler-path", 13), 0LL, jule::Str("Path of backend compiler", 24));
	_224a04c53_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_23c5b2375_Production)))), jule::Str("production", 10), 'p', jule::Str("Compile for production", 22));
	_224a04c53_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_23c5b1bd2_RC)))), jule::Str("disable-rc", 10), 0LL, jule::Str("Disable reference counting", 26));
	_224a04c53_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_23c5b20ab_Safety)))), jule::Str("disable-safety", 14), 0LL, jule::Str("Disable safety", 14));
	_2249eb5eb_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_23c5b10ee_CppStd)))), jule::Str("cppstd", 6), 0LL, jule::Str("C++ standard", 12));
	_224a04c53_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20e02dced_Copy)))), jule::Str("opt-copy", 8), 0LL, jule::Str("Copy optimization", 17));
	_224a04c53_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20e02e10b_Deadcode)))), jule::Str("opt-deadcode", 12), 0LL, jule::Str("Deadcode optimization", 21));
	_224a04c53_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20e02e3c5_Append)))), jule::Str("opt-append", 10), 0LL, jule::Str("Append optimization", 19));
	_224a04c53_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20e02e6d3_Math)))), jule::Str("opt-math", 8), 0LL, jule::Str("Math optimization", 17));
	_224a04c53_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20e02e99c_Access)))), jule::Str("opt-access", 10), 0LL, jule::Str("Access optimization", 19));
	_224a04c53_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20e02ec66_Inline)))), jule::Str("opt-inline", 10), 0LL, jule::Str("Inline optimization", 19));
	_224a04c53_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20e030030_Ptr)))), jule::Str("opt-ptr", 7), 0LL, jule::Str("Pointer optimizations", 21));
	_224a04c53_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20e030409_Cond)))), jule::Str("opt-cond", 8), 0LL, jule::Str("Conditional optimizations", 25));
	_224a04c53_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20e0306c3_Str)))), jule::Str("opt-str", 7), 0LL, jule::Str("String optimizations", 20));
	_224a04c53_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20e03098c_Slice)))), jule::Str("opt-slice", 9), 0LL, jule::Str("Slice optimizations", 19));
	_224a04c53_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20e030c56_Assign)))), jule::Str("opt-assign", 10), 0LL, jule::Str("Assignment optimizations", 24));
	_224a04c53_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20e031020_StdInternalNosafe)))), jule::Str("opt-internal-nosafe", 19), 0LL, jule::Str("Special optimizations for std::internal::nosafe", 47));
	jule::Slice<jule::Str> _32413_content = ({
		auto except = _20ec81346_Parse(_29813_fs.ptr(), (*(_29416_args)));
		(except.ok()) ? (except.result) : ({
			_20e23ae3e_Throw(except.error.cast<jule::Str>(&__jule_any_type4));

			nullptr;
		});
	});;
	_20ec87391_checkCompilerFlag();
	_20ec880ea_checkCppStdFlag();
	_20ec87a34_checkTargetFlag(&(_29613_target));
	_20ec87c65_checkOptFlag(&(_29513_opt));
	return _32413_content;;
}



inline void _20ec88590_setupSemaFlags(jule::I64* _33724_flags) {
	if (_23c5b1385_Shadowing) {
		(*(_33724_flags))|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_20e027be8_IR> _20ec88859_buildIr(jule::Slice<jule::Str>* _34313_args) {
	jule::Slice<jule::Str> _3449_content = _20ec8835e_checkFlags(_34313_args);;
	jule::I64 _34613_semaFlags = static_cast<jule::I64>(0LL);;
	_20ec88590_setupSemaFlags(&(_34613_semaFlags));
	if ((_3449_content.len() == 0LL)) {
		_20e23ae3e_Throw(_22730c3c1_Logf(jule::Str("missing compile path", 20), jule::Slice<jule::Any>()));
	} else if ((_3449_content.len() > 1LL)) {
		_20e23ae3e_Throw((jule::Str("undefined content: ", 19) + _3449_content[1LL]));
	};
	jule::Str _35414_path;;
	jule::Bool _35420_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _22726a7c4_Abs(_3449_content[0LL]);
		_35414_path = __jule_assign_result.__jule_result_arg0;
		_35420_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_35420_ok))) {
		_20e23ae3e_Throw(jule::Str("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_223ddd57c_Status> _3609_inf = ({
		auto except = static__22726c562_Of(_2273c32ab_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_20e23ae3e_Throw(_22730c3c1_Logf(jule::Str("standard library directory not found", 36), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_223ddd57c_Status>(nullptr);});
	});;
	if ((!(_223ddd956_IsDir(_3609_inf.ptr())))) {
		_20e23ae3e_Throw(_22730c3c1_Logf(jule::Str("standard library directory not found", 36), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_20e027be8_IR> _36814_ir;;
	jule::Slice<_22730be5e_Log> _36818_logs;;
	({
		__jule_tuple_x_20e027be8_IR__jule_tuple_s_22730be5e_Log __jule_assign_result = static__20e02815a_Build(_35414_path, _34613_semaFlags);
		_36814_ir = __jule_assign_result.__jule_result_arg0;
		_36818_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_36814_ir == nullptr) && (_36818_logs == nullptr))) {
		_20e23ae3e_Throw(_22730c3c1_Logf(jule::Str("there is no Jule source code in package: @", 42), jule::Slice<jule::Any>::make({jule::Any(_35414_path, &__jule_any_type4)})));
	};
	if ((_36818_logs != nullptr)) {
		static__20e23a46b_PrintLogs(&(_36818_logs));
		_20e23ae3e_Throw(jule::Str());
	};
	return _36814_ir;;
}



inline void _20ec88a8a_compileCommand(jule::Slice<jule::Str>* _38324_args) {
	(*(_38324_args))=(*(_38324_args)).slice(1LL);
	if ((*(_38324_args))[0LL].equal("test", 4)) {
		_23c5b1918_Test=true;
		(*(_38324_args))=(*(_38324_args)).slice(1LL);
	};
	jule::Ptr<_20e027be8_IR> _38913_ir = _20ec88859_buildIr(_38324_args);;
	;
	if ((!(_23c5b1918_Test))) {
		jule::Ptr<_20d3a2b45_Fn> _39417_main = _20d41934e_FindFn((*(_38913_ir))._field_Main.ptr(), jule::Str("main", 4), false);;
		if ((_39417_main == nullptr)) {
			_20e23ae3e_Throw(_22730c3c1_Logf(jule::Str("missing entry point: entry point (main) function is not defined", 63), jule::Slice<jule::Any>()));
		};
	};
	_20ec8721a_applyTargetIndependentOptimizations(&(_38913_ir));
	_20e0291c2_Order(_38913_ir.ptr());
	jule::Str _4059_compPath = _20ec86ed9_getCompilePath();;
	jule::Str _40610_compiler;;
	jule::Str _40620_compilerCmd;;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _20ec86cca_genCompileCmd(_4059_compPath, &(_38913_ir));
		_40610_compiler = __jule_assign_result.__jule_result_arg0;
		_40620_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_20ebea2d2_ObjectCoder> _40813_oc = static__20ebea6cd_New(&(_38913_ir), _20ebe86dc_SerializationInfo{._field_Compiler=_40610_compiler, ._field_CompilerCommand=_40620_compilerCmd});;
	if (_23c5b1918_Test) {
		jule::Ptr<_20ea368c1_TestCoder> _41317_tc = static__20ea36d11_New(&(_40813_oc));;
		_20ea38186_Serialize(_41317_tc);
	} else {
		_20ec073dd_Serialize(_40813_oc);
	};
	jule::Ptr<_223ddac3e_File> _41913_file = _20ec85b64_openOutput(&(_4059_compPath));;
	({
		auto except = _223eeb349_Write(_41913_file.ptr(), _2240aab45_Buf(&(*(_40813_oc))._field_Obj));
		if (!except.ok()) {
			_20e23ae3e_Throw(jule::Str("object code could not write", 27));
		}
	});
	({
		auto except = _223ddc9cc_Close(_41913_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:423:5"));
	});
	if ((!(_23c5b164e_Transpilation))) {
		_20ec8611a_compileIr(_40610_compiler, _40620_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_2273c428a_init();
	_20b059865_init();
	_2273c936c_init();
	_20ec85889_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}