// Auto generated by JuleC.
// JuleC version: jule0.0.16 @master
// Date: 30/8/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp -lws2_32 -lshell32 -lshell32

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <winsock2.h>
#include <ws2ipdef.h>
#include <windows.h>
#include <fcntl.h>
#include <io.h>
#include <cstdio>
#include <sys/stat.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _1c0cb08c0_comptimeRangeKind{};
struct _1c0d0686c_Importer{};
struct _1c0dd793c_Kind{};
struct _1c0e079d4_Lookup{};
struct _1c1cd266b_CommonFlag{};
struct _234b9c03e_acceptRange;
struct _234c76a64_StrBuilder;
struct _21b826022_Range16;
struct _21b826550_Range32;
struct _21b8269c3_RangeTable;
struct _21b873a20_lazyBuff;
struct _234b095c8_DirEntry;
struct _234b0985e_Directory;
struct _234b0aa5d_File;
struct _234b0cb92_Status;
struct _21b986913_cmdAttrs;
struct _21b8c54de_Log;
struct _2021c009a_floatInfo;
struct _2021c0c27_decimalSlice;
struct _2021d2e6a_leftCheat;
struct _2021d3982_decimal;
struct _2021e617b_Const;
struct _1c0c49480_Token;
struct _1c0c4ec16_File;
struct _1c0c51d6c_kindPair;
struct _1c0c57d51_lex;
struct _1c0c5ca26_Ast;
struct _1c0c5d939_Node;
struct _1c0c5dd57_Directive;
struct _1c0c5e93a_TypeDecl;
struct _1c0c60045_IdentTypeDecl;
struct _1c0c6030e_SubIdentTypeDecl;
struct _1c0c606d8_NamespaceTypeDecl;
struct _1c0c609d5_SptrTypeDecl;
struct _1c0c60d6a_SlcTypeDecl;
struct _1c0c61167_TupleTypeDecl;
struct _1c0c61464_PtrTypeDecl;
struct _1c0c61c06_ArrTypeDecl;
struct _1c0c62454_MapTypeDecl;
struct _1c0c6282d_RetTypeDecl;
struct _1c0c63c6e_Expr;
struct _1c0c64038_RangeExpr;
struct _1c0c64643_UseExpr;
struct _1c0c64863_TupleExpr;
struct _1c0c64c09_LitExpr;
struct _1c0c650d3_UnsafeExpr;
struct _1c0c65589_IdentExpr;
struct _1c0c65d2b_UnaryExpr;
struct _1c0c66205_VariadicExpr;
struct _1c0c665ce_CastExpr;
struct _1c0c669a8_NsSelectionExpr;
struct _1c0c66d82_SubIdentExpr;
struct _1c0c67338_BinaryExpr;
struct _1c0c67998_FnCallExpr;
struct _1c0c6848d_FieldExprPair;
struct _1c0c68cb8_StructLit;
struct _1c0c6926e_BraceLit;
struct _1c0c69a99_KeyValPair;
struct _1c0c6a2c5_SliceExpr;
struct _1c0c6ac32_IndexingExpr;
struct _1c0c6b392_SlicingExpr;
struct _1c0c6b68e_Constraint;
struct _1c0c6bb45_GenericDecl;
struct _1c0c6c01e_LabelSt;
struct _1c0c6c3e8_GotoSt;
struct _1c0c6c6e5_FallSt;
struct _1c0c6cd55_AssignLeft;
struct _1c0c6d3d8_AssignSt;
struct _1c0c6e2eb_Stmt;
struct _1c0c6e95b_ScopeTree;
struct _1c0c70198_ParamDecl;
struct _1c0c715ea_FnDecl;
struct _1c0c727a5_VarDecl;
struct _1c0c72b7e_RetSt;
struct _1c0c733ee_Iter;
struct _1c0c73c29_WhileKind;
struct _1c0c74631_RangeKind;
struct _1c0c74a0a_BreakSt;
struct _1c0c74dd4_ContSt;
struct _1c0c7538a_If;
struct _1c0c75764_Else;
struct _1c0c75c1a_Conditional;
struct _1c0c76457_TypeAliasDecl;
struct _1c0c7690d_Case;
struct _1c0c77227_MatchCase;
struct _1c0c77a41_UseDecl;
struct _1c0c77ee7_EnumItemDecl;
struct _1c0c78aa8_EnumDecl;
struct _1c0c793d3_TypeEnumItemDecl;
struct _1c0c79a43_TypeEnumDecl;
struct _1c0c79d0c_FieldDecl;
struct _1c0c7a703_StructDecl;
struct _1c0c7ae40_TraitDecl;
struct _1c0c7b5a0_Impl;
struct _1c0c7c89d_Field;
struct _1c0c7e8b1_Operators;
struct _1c0c807c4_Struct;
struct _1c0c829a2_FieldIns;
struct _1c0c87457_OperandExprModel;
struct _1c0c87952_BinaryExprModel;
struct _1c0c87d2b_UnaryExprModel;
struct _1c0c88359_StructArgExprModel;
struct _1c0c88700_StructLitExprModel;
struct _1c0c889ec_AllocStructLitExprModel;
struct _1c0c89080_CastingExprModel;
struct _1c0c89932_FnCallExprModel;
struct _1c0c89d0b_SliceExprModel;
struct _1c0c8a2b2_IndexingExprModel;
struct _1c0c8a768_AnonFnExprModel;
struct _1c0c8ab42_KeyValPairExprModel;
struct _1c0c8b0e8_MapExprModel;
struct _1c0c8b67b_SlicingExprModel;
struct _1c0c8bc0e_TraitSubIdentExprModel;
struct _1c0c8c5a0_StructSubIdentExprModel;
struct _1c0c8c946_StructStaticIdentExprModel;
struct _1c0c8cd20_ArrayExprModel;
struct _1c0c8d11c_TupleExprModel;
struct _1c0c8d4e6_BuiltinOutCallExprModel;
struct _1c0c8d8c0_BuiltinOutlnCallExprModel;
struct _1c0c8dc99_BuiltinNewCallExprModel;
struct _1c0c8e173_BuiltinPanicCallExprModel;
struct _1c0c8e629_BuiltinAssertCallExprModel;
struct _1c0c8ead0_BuiltinMakeCallExprModel;
struct _1c0c8eea9_BuiltinAppendCallExprModel;
struct _1c0c902a6_BuiltinLenCallExprModel;
struct _1c0c905a3_BuiltinCapCallExprModel;
struct _1c0c9097c_BuiltinDeleteCallExprModel;
struct _1c0c90d56_BuiltinCopyCallExprModel;
struct _1c0c91230_BuiltinErrorCallExprModel;
struct _1c0c918d4_SizeofExprModel;
struct _1c0c91ac1_AlignofExprModel;
struct _1c0c91d68_RuneExprModel;
struct _1c0c92165_IntegratedToStrExprModel;
struct _1c0c9253e_BackendEmitExprModel;
struct _1c0c9283b_FreeExprModel;
struct _1c0c93540_RetType;
struct _1c0c93cc1_Param;
struct _1c0c95795_Fn;
struct _1c0c976ed_ParamIns;
struct _1c0c98699_FnIns;
struct _1c0c9b878_ReferenceStack;
struct _1c0c9cd85_Pass;
struct _1c0ca283a_symbolBuilder;
struct _1c0ca8a72_Trait;
struct _1c0caa711_EnumItem;
struct _1c0cab27d_Enum;
struct _1c0cac3b1_TypeEnumItem;
struct _1c0cac988_TypeEnum;
struct _1c0cb0ae0_comptimeRange;
struct _1c0cb15b3_comptimeStructField;
struct _1c0cb3274_comptimeStructFields;
struct _1c0cb486e_comptimeStatic;
struct _1c0cb6530_comptimeStatics;
struct _1c0cb7b2a_comptimeEnumField;
struct _1c0cb8ec2_comptimeEnumFields;
struct _1c0cba5bc_comptimeParam;
struct _1c0cbc756_comptimeParams;
struct _1c0cbdd1d_comptimeTypeInfos;
struct _1c0cc0418_comptimeTypeInfo;
struct _1c0cc692a_comptimeValue;
struct _1c0cc9279_comptimeFiles;
struct _1c0cca874_comptimeFile;
struct _1c0cced84_constraintChecker;
struct _1c0cd21d8_Impl;
struct _1c0cd763e_Scope;
struct _1c0cd7a5c_If;
struct _1c0cd7d59_Else;
struct _1c0cd8277_Conditional;
struct _1c0cd8574_InfIter;
struct _1c0cd8a2a_WhileIter;
struct _1c0cd9476_RangeIter;
struct _1c0cd980b_ContSt;
struct _1c0cd9bd5_BreakSt;
struct _1c0cd9ed2_Label;
struct _1c0cda3ab_GotoSt;
struct _1c0cda785_Postfix;
struct _1c0cdac3b_Assign;
struct _1c0cdb1e2_MultiAssign;
struct _1c0cdb852_Match;
struct _1c0cdc37a_Case;
struct _1c0cdca73_FallSt;
struct _1c0cdce19_RetSt;
struct _1c0cdd579_scopeLabel;
struct _1c0cddb0c_scopeGoto;
struct _1c0cdeaec_scopeChecker;
struct _1c0d032d6_directiveChecker;
struct _1c0d09782_ImportInfo;
struct _1c0d0c6a8_Package;
struct _1c0d2a473_commonSemaMeta;
struct _1c0d2b078_Sema;
struct _1c0d4ac46_missingRetChecker;
struct _1c0d4dde2_Var;
struct _1c0d4ec6c_FuncPattern;
struct _1c0d8d6b2_typeCompatibilityChecker;
struct _1c0d90461_assignTypeChecker;
struct _1c0d91d36_dynamicTypeAnnotation;
struct _1c0d96b93_fnCallArgChecker;
struct _1c0d99aca_structLitChecker;
struct _1c0d9b8ac_rangeChecker;
struct _1c0d9e11d_retTypeChecker;
struct _1c0da1681_SymbolTable;
struct _1c0da69e9_Data;
struct _1c0da7b71_Value;
struct _1c0da8721_Eval;
struct _1c0dc6e48_unaryEval;
struct _1c0dc8dd4_binaryEval;
struct _1c0dd650c_InsGeneric;
struct _1c0dd7101_TypeAlias;
struct _1c0dd7de3_TypeKind;
struct _1c0de00b5_TypeSymbol;
struct _1c0de09bc_Prim;
struct _1c0de44e8_Sptr;
struct _1c0de4ebb_Slc;
struct _1c0de5ab0_Tuple;
struct _1c0de6660_Map;
struct _1c0de72dc_Arr;
struct _1c0de7cb0_Ptr;
struct _1c0de8cb1_referencer;
struct _1c0de9ca1_typeChecker;
struct _1c0e02957_identTypeLookup;
struct _1c1905ec6_FileInfo;
struct _1c1951a8d_stmt;
struct _1c195242e_scopeParser;
struct _1c195ed54_exprBuilder;
struct _1c196c2e5_assignInfo;
struct _1c19706e4_parser;
struct _1c1982816_typeBuilder;
struct _1c114d5a9_CompileInfo;
struct _1c114ea83_directiveEval;
struct _1c198694c_JuleImporter;
struct _1c198b9da_OrderedDefines;
struct _1c198bc71_defineOrderer;
struct _1c13413c3_liveTable;
struct _1c13460cb_scopeDeadCode;
struct _1c134a366_exprDeadCode;
struct _1c0ed9d3b_ExceptionalForwardingExprModel;
struct _1c0eda1b0_SwapExprModel;
struct _1c0eda589_EmptyCompareExprModel;
struct _1c0eda90d_RefExprModel;
struct _1c0edad81_StrCompExprModel;
struct _1c0edb414_MutSlicingExprModel;
struct _1c0edb711_UnsafeBinaryExprModel;
struct _1c0edba96_UnsafeIndexingExprModel;
struct _1c0edbe70_PushToSliceExprModel;
struct _1c0edc349_AppendToSliceExprModel;
struct _1c0edc723_StrRuneIter;
struct _1c0edca20_UnsafeDerefExprModel;
struct _1c0edcd1c_UnsafeCastingExprModel;
struct _1c0edd9ee_nilVar;
struct _1c0eddd40_nils;
struct _1c0ee1abd_scopeOptimizer;
struct _1c0ee891b_exprOptimizer;
struct _1c10032d8_dynamicVar;
struct _1c1003629_dynamic;
struct _1c1006572_data;
struct _1c1007b28_boundaryVar;
struct _1c1007e69_boundary;
struct _1c135247d_Optimizer;
struct _1c0e57c43_AnsiEscape;
struct _1c0e59629_Logger;
struct _1c2540cec_AbsTime;
struct _1c25414c3_Time;
struct _1c246a95d_scopeCoder;
struct _1c2475e30_exprCoder;
struct _1c2487084_TestCoder;
struct _1c2489d9a_identCoder;
struct _1c25493ee_SerializationInfo;
struct _1c25499c6_traitHash;
struct _1c2549da0_traitCast;
struct _1c254a2bd_anonHash;
struct _1c255bad7_customType;
struct _1c255c6ed_typeCoder;
struct _1c25659d1_resultCoder;
struct _1c6ae615b_Flag;
struct _1c6ae9c53_Flag;
struct _1c6aed3b6_Flag;
struct _1c6b01a6d_Flag;
struct _1c6b051d1_Flag;
struct _1c1cd423e_FlagSet;
struct _1c1cd6c03_argParser;
struct _1c254b467_ObjectCoder;
struct _1c1006077_dataCheckpoint;
struct _1c13417e1_ObjectDeadCode;
struct _1c1989301_IR;
struct _1c0c83552_StructIns;
struct _21b9826bc_Cmd;
struct _234b9c03e_acceptRange {
	jule::U8 _field_lo = 0;
	jule::U8 _field_hi = 0;
	

	inline bool operator==(_234b9c03e_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_234b9c03e_acceptRange _other) { return !this->operator==(_other); }


};
struct _234c76a64_StrBuilder {
	jule::Slice<jule::U8> _field_buf;
	


};
struct _21b826022_Range16 {
	jule::U16 _field_Lo = 0;
	jule::U16 _field_Hi = 0;
	jule::U16 _field_Stride = 0;
	

	inline bool operator==(_21b826022_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_21b826022_Range16 _other) { return !this->operator==(_other); }


};
struct _21b826550_Range32 {
	jule::U32 _field_Lo = 0;
	jule::U32 _field_Hi = 0;
	jule::U32 _field_Stride = 0;
	

	inline bool operator==(_21b826550_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_21b826550_Range32 _other) { return !this->operator==(_other); }


};
struct _21b8269c3_RangeTable {
	jule::Slice<_21b826022_Range16> _field_R16;
	jule::Slice<_21b826550_Range32> _field_R32;
	jule::I64 _field_LatinOffset = 0;
	


};
struct _21b873a20_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I64 _field_w = 0;
	jule::Str _field_volAndPath;
	jule::I64 _field_volLen = 0;
	


};
struct _234b095c8_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_234b0cb92_Status> _field_Stat;
	

	inline bool operator==(_234b095c8_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_234b095c8_DirEntry _other) { return !this->operator==(_other); }


};
struct _234b0985e_Directory {
	

	inline bool operator==(_234b0985e_Directory _other) { return true; }

	inline bool operator!=(_234b0985e_Directory _other) { return !this->operator==(_other); }


};
struct _234b0aa5d_File {
	jule::Uintptr _field_handle = 0;
	

	inline bool operator==(_234b0aa5d_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_234b0aa5d_File _other) { return !this->operator==(_other); }


};
struct _234b0cb92_Status {
	jule::I64 _field_mode = 0LL;
	jule::U64 _field_size = 0;
	

	inline bool operator==(_234b0cb92_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_234b0cb92_Status _other) { return !this->operator==(_other); }


};
struct _21b986913_cmdAttrs {
	HANDLE _field_hProcess = nullptr;
	HANDLE _field_hThread = nullptr;
	

	inline bool operator==(_21b986913_cmdAttrs _other) {
		return 
			this->_field_hProcess == _other._field_hProcess &&
			this->_field_hThread == _other._field_hThread;
	}

	inline bool operator!=(_21b986913_cmdAttrs _other) { return !this->operator==(_other); }


};
struct _21b8c54de_Log {
	jule::I64 _field_Kind = 0LL;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

	inline bool operator==(_21b8c54de_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_21b8c54de_Log _other) { return !this->operator==(_other); }


};
struct _2021c009a_floatInfo {
	jule::U64 _field_mantbits = 0;
	jule::U64 _field_expbits = 0;
	jule::I64 _field_bias = 0;
	

	inline bool operator==(_2021c009a_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_2021c009a_floatInfo _other) { return !this->operator==(_other); }


};
struct _2021c0c27_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	


};
struct _2021d2e6a_leftCheat {
	jule::I64 _field_delta = 0;
	jule::Str _field_cutoff;
	

	inline bool operator==(_2021d2e6a_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_2021d2e6a_leftCheat _other) { return !this->operator==(_other); }


};
struct _2021d3982_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>(0);
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	jule::Bool _field_trunc = false;
	

	inline bool operator==(_2021d3982_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_2021d3982_decimal _other) { return !this->operator==(_other); }


};
inline jule::Bool _2021ebc31_Eq(_2021e617b_Const*, _2021e617b_Const);
inline jule::Bool _2021ec072_Lt(_2021e617b_Const*, _2021e617b_Const);
inline jule::Bool _2021ec3b3_LtEq(_2021e617b_Const*, _2021e617b_Const);
inline jule::Bool _2021ec704_Gt(_2021e617b_Const*, _2021e617b_Const);
inline jule::Bool _2021eca45_GtEq(_2021e617b_Const*, _2021e617b_Const);
struct _2021e617b_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

	inline jule::Bool operator==(_2021e617b_Const _other) { return _2021ebc31_Eq(this, _other); }

	inline bool operator!=(_2021e617b_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_2021e617b_Const _other) { return _2021ec704_Gt(this, _other); }

	inline jule::Bool operator>=(_2021e617b_Const _other) { return _2021eca45_GtEq(this, _other); }

	inline jule::Bool operator<(_2021e617b_Const _other) { return _2021ec072_Lt(this, _other); }

	inline jule::Bool operator<=(_2021e617b_Const _other) { return _2021ec3b3_LtEq(this, _other); }


};
struct _1c0c49480_Token {
	jule::Ptr<_1c0c4ec16_File> _field_File;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Kind;
	jule::U64 _field_Id = 0LLU;
	

	inline bool operator==(_1c0c49480_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_1c0c49480_Token _other) { return !this->operator==(_other); }


};
struct _1c0c4ec16_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _field_Tokens;
	


};
struct _1c0c51d6c_kindPair {
	jule::Str _field_kind = jule::Str::lit("::", 2);
	jule::U64 _field_id = 0LLU;
	

	inline bool operator==(_1c0c51d6c_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1c0c51d6c_kindPair _other) { return !this->operator==(_other); }


};
struct _1c0c57d51_lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _field_tokens;
	jule::Ptr<_1c0c4ec16_File> _field_file;
	jule::I64 _field_pos = 0;
	jule::I64 _field_column = 0;
	jule::I64 _field_row = 0;
	jule::Slice<_21b8c54de_Log> _field_errors;
	


};
struct _1c0c5ca26_Ast {
	jule::Ptr<_1c0c4ec16_File> _field_File;
	jule::Slice<jule::Ptr<_1c0c5dd57_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1c0c77a41_UseDecl>> _field_UseDecls;
	jule::Slice<_1c0c5d939_Node> _field_Nodes;
	


};
struct _1c0c5d939_Node {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1c0c5d939_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1c0c5d939_Node _other) { return !this->operator==(_other); }


};
struct _1c0c5dd57_Directive {
	jule::Ptr<_1c0c49480_Token> _field_Tag;
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _field_Args;
	


};
struct _1c0c5e93a_TypeDecl {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1c0c5e93a_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1c0c5e93a_TypeDecl _other) { return !this->operator==(_other); }


};
struct _1c0c60045_IdentTypeDecl {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1c0c5e93a_TypeDecl>> _field_Generics;
	


};
struct _1c0c6030e_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1c0c60045_IdentTypeDecl>> _field_Idents;
	


};
struct _1c0c606d8_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _field_Idents;
	jule::Ptr<_1c0c5e93a_TypeDecl> _field_Kind;
	


};
struct _1c0c609d5_SptrTypeDecl {
	jule::Ptr<_1c0c5e93a_TypeDecl> _field_Elem;
	

	inline bool operator==(_1c0c609d5_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1c0c609d5_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1c0c60d6a_SlcTypeDecl {
	jule::Ptr<_1c0c5e93a_TypeDecl> _field_Elem;
	

	inline bool operator==(_1c0c60d6a_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1c0c60d6a_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1c0c61167_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1c0c5e93a_TypeDecl>> _field_Types;
	


};
struct _1c0c61464_PtrTypeDecl {
	jule::Ptr<_1c0c5e93a_TypeDecl> _field_Elem;
	

	inline bool operator==(_1c0c61464_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1c0c61464_PtrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1c0c61c06_ArrTypeDecl {
	jule::Ptr<_1c0c5e93a_TypeDecl> _field_Elem;
	jule::Ptr<_1c0c63c6e_Expr> _field_Size;
	

	inline bool operator==(_1c0c61c06_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_1c0c61c06_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1c0c62454_MapTypeDecl {
	jule::Ptr<_1c0c5e93a_TypeDecl> _field_Key;
	jule::Ptr<_1c0c5e93a_TypeDecl> _field_Val;
	

	inline bool operator==(_1c0c62454_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1c0c62454_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1c0c6282d_RetTypeDecl {
	jule::Ptr<_1c0c5e93a_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _field_Idents;
	


};
struct _1c0c63c6e_Expr {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Ptr<_1c0c49480_Token> _field_End;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1c0c63c6e_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1c0c63c6e_Expr _other) { return !this->operator==(_other); }


};
struct _1c0c64038_RangeExpr {
	jule::Ptr<_1c0c63c6e_Expr> _field_Expr;
	

	inline bool operator==(_1c0c64038_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c0c64038_RangeExpr _other) { return !this->operator==(_other); }


};
struct _1c0c64643_UseExpr {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Ptr<_1c0c63c6e_Expr> _field_Expr;
	

	inline bool operator==(_1c0c64643_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c0c64643_UseExpr _other) { return !this->operator==(_other); }


};
struct _1c0c64863_TupleExpr {
	jule::Slice<jule::Ptr<_1c0c63c6e_Expr>> _field_Expr;
	


};
struct _1c0c64c09_LitExpr {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Str _field_Value;
	

	inline bool operator==(_1c0c64c09_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1c0c64c09_LitExpr _other) { return !this->operator==(_other); }


};
struct _1c0c650d3_UnsafeExpr {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Ptr<_1c0c63c6e_Expr> _field_Expr;
	

	inline bool operator==(_1c0c650d3_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c0c650d3_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _1c0c65589_IdentExpr {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	

	inline bool operator==(_1c0c65589_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Binded == _other._field_Binded;
	}

	inline bool operator!=(_1c0c65589_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1c0c65d2b_UnaryExpr {
	jule::Ptr<_1c0c49480_Token> _field_Op;
	jule::Ptr<_1c0c63c6e_Expr> _field_Expr;
	

	inline bool operator==(_1c0c65d2b_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c0c65d2b_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1c0c66205_VariadicExpr {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Ptr<_1c0c63c6e_Expr> _field_Expr;
	

	inline bool operator==(_1c0c66205_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c0c66205_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1c0c665ce_CastExpr {
	jule::Ptr<_1c0c5e93a_TypeDecl> _field_Kind;
	jule::Ptr<_1c0c63c6e_Expr> _field_Expr;
	

	inline bool operator==(_1c0c665ce_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c0c665ce_CastExpr _other) { return !this->operator==(_other); }


};
struct _1c0c669a8_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _field_Ns;
	jule::Ptr<_1c0c49480_Token> _field_Ident;
	


};
struct _1c0c66d82_SubIdentExpr {
	jule::Ptr<_1c0c63c6e_Expr> _field_Expr;
	jule::Ptr<_1c0c49480_Token> _field_Ident;
	

	inline bool operator==(_1c0c66d82_SubIdentExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1c0c66d82_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1c0c67338_BinaryExpr {
	jule::Ptr<_1c0c63c6e_Expr> _field_Left;
	jule::Ptr<_1c0c63c6e_Expr> _field_Right;
	jule::Ptr<_1c0c49480_Token> _field_Op;
	

	inline bool operator==(_1c0c67338_BinaryExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1c0c67338_BinaryExpr _other) { return !this->operator==(_other); }


};
struct _1c0c67998_FnCallExpr {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Ptr<_1c0c63c6e_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1c0c63c6e_Expr>> _field_Args;
	jule::Ptr<_1c0c6e95b_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo = false;
	


};
struct _1c0c6848d_FieldExprPair {
	jule::Ptr<_1c0c49480_Token> _field_Field;
	jule::Ptr<_1c0c63c6e_Expr> _field_Expr;
	

	inline bool operator==(_1c0c6848d_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c0c6848d_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1c0c68cb8_StructLit {
	jule::Ptr<_1c0c49480_Token> _field_End;
	jule::Ptr<_1c0c5e93a_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1c0c63c6e_Expr>> _field_Exprs;
	


};
struct _1c0c6926e_BraceLit {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Ptr<_1c0c49480_Token> _field_End;
	jule::Slice<jule::Ptr<_1c0c63c6e_Expr>> _field_Exprs;
	


};
struct _1c0c69a99_KeyValPair {
	jule::Ptr<_1c0c63c6e_Expr> _field_Key;
	jule::Ptr<_1c0c63c6e_Expr> _field_Val;
	jule::Ptr<_1c0c49480_Token> _field_Colon;
	

	inline bool operator==(_1c0c69a99_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_1c0c69a99_KeyValPair _other) { return !this->operator==(_other); }


};
struct _1c0c6a2c5_SliceExpr {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Ptr<_1c0c49480_Token> _field_End;
	jule::Slice<jule::Ptr<_1c0c63c6e_Expr>> _field_Exprs;
	


};
struct _1c0c6ac32_IndexingExpr {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Ptr<_1c0c49480_Token> _field_End;
	jule::Ptr<_1c0c63c6e_Expr> _field_Expr;
	jule::Ptr<_1c0c63c6e_Expr> _field_Index;
	

	inline bool operator==(_1c0c6ac32_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1c0c6ac32_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1c0c6b392_SlicingExpr {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Ptr<_1c0c49480_Token> _field_End;
	jule::Ptr<_1c0c63c6e_Expr> _field_Expr;
	jule::Ptr<_1c0c63c6e_Expr> _field_Start;
	jule::Ptr<_1c0c63c6e_Expr> _field_To;
	

	inline bool operator==(_1c0c6b392_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_1c0c6b392_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1c0c6b68e_Constraint {
	jule::Slice<jule::Ptr<_1c0c5e93a_TypeDecl>> _field_Mask;
	


};
struct _1c0c6bb45_GenericDecl {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1c0c6b68e_Constraint> _field_Constraint;
	

	inline bool operator==(_1c0c6bb45_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_1c0c6bb45_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1c0c6c01e_LabelSt {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Str _field_Ident;
	

	inline bool operator==(_1c0c6c01e_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1c0c6c01e_LabelSt _other) { return !this->operator==(_other); }


};
struct _1c0c6c3e8_GotoSt {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Ptr<_1c0c49480_Token> _field_Label;
	

	inline bool operator==(_1c0c6c3e8_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1c0c6c3e8_GotoSt _other) { return !this->operator==(_other); }


};
struct _1c0c6c6e5_FallSt {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	

	inline bool operator==(_1c0c6c6e5_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_1c0c6c6e5_FallSt _other) { return !this->operator==(_other); }


};
struct _1c0c6cd55_AssignLeft {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Str _field_Ident;
	jule::Ptr<_1c0c63c6e_Expr> _field_Expr;
	

	inline bool operator==(_1c0c6cd55_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c0c6cd55_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1c0c6d3d8_AssignSt {
	jule::Bool _field_Declarative = false;
	jule::Ptr<_1c0c49480_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1c0c6cd55_AssignLeft>> _field_Left;
	jule::Ptr<_1c0c63c6e_Expr> _field_Right;
	


};
struct _1c0c6e2eb_Stmt {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1c0c6e2eb_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1c0c6e2eb_Stmt _other) { return !this->operator==(_other); }


};
struct _1c0c6e95b_ScopeTree {
	jule::Ptr<_1c0c6e95b_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<_1c0c6e2eb_Stmt> _field_Stmts;
	jule::Ptr<_1c0c49480_Token> _field_End;
	


};
struct _1c0c70198_ParamDecl {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1c0c5e93a_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1c0c70198_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1c0c70198_ParamDecl _other) { return !this->operator==(_other); }


};
struct _1c0c715ea_FnDecl {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1c0c5dd57_Directive>> _field_Directives;
	jule::Ptr<_1c0c6e95b_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1c0c6bb45_GenericDecl>> _field_Generics;
	jule::Ptr<_1c0c6282d_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1c0c70198_ParamDecl>> _field_Params;
	


};
struct _1c0c727a5_VarDecl {
	jule::Ptr<_1c0c6e95b_ScopeTree> _field_Scope;
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Ptr<_1c0c49480_Token> _field_Setter;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Slice<jule::Ptr<_1c0c5dd57_Directive>> _field_Directives;
	jule::Ptr<_1c0c5e93a_TypeDecl> _field_Kind;
	jule::Ptr<_1c0c63c6e_Expr> _field_Expr;
	


};
struct _1c0c72b7e_RetSt {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Ptr<_1c0c63c6e_Expr> _field_Expr;
	

	inline bool operator==(_1c0c72b7e_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c0c72b7e_RetSt _other) { return !this->operator==(_other); }


};
struct _1c0c733ee_Iter {
	jule::Bool _field_Comptime = false;
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	jule::Ptr<_1c0c6e95b_ScopeTree> _field_Scope;
	

	inline bool operator==(_1c0c733ee_Iter _other) {
		return 
			this->_field_Comptime == _other._field_Comptime &&
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1c0c733ee_Iter _other) { return !this->operator==(_other); }


};
struct _1c0c73c29_WhileKind {
	jule::Ptr<_1c0c63c6e_Expr> _field_Expr;
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1c0c49480_Token> _field_NextToken;
	

	inline bool operator==(_1c0c73c29_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_1c0c73c29_WhileKind _other) { return !this->operator==(_other); }


};
struct _1c0c74631_RangeKind {
	jule::Ptr<_1c0c49480_Token> _field_InToken;
	jule::Ptr<_1c0c63c6e_Expr> _field_Expr;
	jule::Ptr<_1c0c727a5_VarDecl> _field_KeyA;
	jule::Ptr<_1c0c727a5_VarDecl> _field_KeyB;
	

	inline bool operator==(_1c0c74631_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1c0c74631_RangeKind _other) { return !this->operator==(_other); }


};
struct _1c0c74a0a_BreakSt {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Ptr<_1c0c49480_Token> _field_Label;
	

	inline bool operator==(_1c0c74a0a_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1c0c74a0a_BreakSt _other) { return !this->operator==(_other); }


};
struct _1c0c74dd4_ContSt {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Ptr<_1c0c49480_Token> _field_Label;
	

	inline bool operator==(_1c0c74dd4_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1c0c74dd4_ContSt _other) { return !this->operator==(_other); }


};
struct _1c0c7538a_If {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Ptr<_1c0c63c6e_Expr> _field_Expr;
	jule::Ptr<_1c0c6e95b_ScopeTree> _field_Scope;
	

	inline bool operator==(_1c0c7538a_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1c0c7538a_If _other) { return !this->operator==(_other); }


};
struct _1c0c75764_Else {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Ptr<_1c0c6e95b_ScopeTree> _field_Scope;
	

	inline bool operator==(_1c0c75764_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1c0c75764_Else _other) { return !this->operator==(_other); }


};
struct _1c0c75c1a_Conditional {
	jule::Ptr<_1c0c7538a_If> _field_Head;
	jule::Slice<jule::Ptr<_1c0c7538a_If>> _field_Tail;
	jule::Ptr<_1c0c75764_Else> _field_Default;
	


};
struct _1c0c76457_TypeAliasDecl {
	jule::Ptr<_1c0c6e95b_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1c0c5e93a_TypeDecl> _field_Kind;
	

	inline bool operator==(_1c0c76457_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_Binded == _other._field_Binded &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1c0c76457_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1c0c7690d_Case {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Ptr<_1c0c6e95b_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1c0c63c6e_Expr>> _field_Exprs;
	


};
struct _1c0c77227_MatchCase {
	jule::Bool _field_Comptime = false;
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Ptr<_1c0c49480_Token> _field_End;
	jule::Bool _field_TypeMatch = false;
	jule::Ptr<_1c0c63c6e_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1c0c7690d_Case>> _field_Cases;
	jule::Ptr<_1c0c75764_Else> _field_Default;
	


};
struct _1c0c77a41_UseDecl {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full = false;
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _field_Selected;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	


};
struct _1c0c77ee7_EnumItemDecl {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1c0c63c6e_Expr> _field_Expr;
	

	inline bool operator==(_1c0c77ee7_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c0c77ee7_EnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1c0c78aa8_EnumDecl {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1c0c5e93a_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1c0c77ee7_EnumItemDecl>> _field_Items;
	jule::Ptr<_1c0c49480_Token> _field_End;
	


};
struct _1c0c793d3_TypeEnumItemDecl {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1c0c5e93a_TypeDecl> _field_Kind;
	

	inline bool operator==(_1c0c793d3_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1c0c793d3_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1c0c79a43_TypeEnumDecl {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1c0c793d3_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_1c0c49480_Token> _field_End;
	


};
struct _1c0c79d0c_FieldDecl {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1c0c5e93a_TypeDecl> _field_Kind;
	jule::Ptr<_1c0c63c6e_Expr> _field_Default;
	

	inline bool operator==(_1c0c79d0c_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1c0c79d0c_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1c0c7a703_StructDecl {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Ptr<_1c0c49480_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1c0c79d0c_FieldDecl>> _field_Fields;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1c0c5dd57_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1c0c6bb45_GenericDecl>> _field_Generics;
	


};
struct _1c0c7ae40_TraitDecl {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Ptr<_1c0c49480_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1c0c5e93a_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_1c0c715ea_FnDecl>> _field_Methods;
	


};
struct _1c0c7b5a0_Impl {
	jule::Ptr<_1c0c49480_Token> _field_End;
	jule::Ptr<_1c0c5e93a_TypeDecl> _field_Base;
	jule::Ptr<_1c0c5e93a_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1c0c715ea_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1c0c727a5_VarDecl>> _field_Statics;
	


};
struct _1c0c7c89d_Field {
	jule::Ptr<_1c0c807c4_Struct> _field_Owner;
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1c0de00b5_TypeSymbol> _field_Kind;
	jule::Ptr<_1c0c63c6e_Expr> _field_Default;
	

	inline bool operator==(_1c0c7c89d_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1c0c7c89d_Field _other) { return !this->operator==(_other); }


};
struct _1c0c7e8b1_Operators {
	jule::Ptr<_1c0c98699_FnIns> _field_Eq;
	jule::Ptr<_1c0c98699_FnIns> _field_Gt;
	jule::Ptr<_1c0c98699_FnIns> _field_GtEq;
	jule::Ptr<_1c0c98699_FnIns> _field_Lt;
	jule::Ptr<_1c0c98699_FnIns> _field_LtEq;
	jule::Ptr<_1c0c98699_FnIns> _field_Shl;
	jule::Ptr<_1c0c98699_FnIns> _field_Shr;
	jule::Ptr<_1c0c98699_FnIns> _field_Add;
	jule::Ptr<_1c0c98699_FnIns> _field_Sub;
	jule::Ptr<_1c0c98699_FnIns> _field_Div;
	jule::Ptr<_1c0c98699_FnIns> _field_Mul;
	jule::Ptr<_1c0c98699_FnIns> _field_Mod;
	jule::Ptr<_1c0c98699_FnIns> _field_BitAnd;
	jule::Ptr<_1c0c98699_FnIns> _field_BitOr;
	jule::Ptr<_1c0c98699_FnIns> _field_BitXor;
	jule::Ptr<_1c0c98699_FnIns> _field_Neg;
	jule::Ptr<_1c0c98699_FnIns> _field_Pos;
	jule::Ptr<_1c0c98699_FnIns> _field_BitNot;
	jule::Ptr<_1c0c98699_FnIns> _field_AddAssign;
	jule::Ptr<_1c0c98699_FnIns> _field_SubAssign;
	jule::Ptr<_1c0c98699_FnIns> _field_DivAssign;
	jule::Ptr<_1c0c98699_FnIns> _field_MulAssign;
	jule::Ptr<_1c0c98699_FnIns> _field_ModAssign;
	jule::Ptr<_1c0c98699_FnIns> _field_ShlAssign;
	jule::Ptr<_1c0c98699_FnIns> _field_ShrAssign;
	jule::Ptr<_1c0c98699_FnIns> _field_BitOrAssign;
	jule::Ptr<_1c0c98699_FnIns> _field_BitAndAssign;
	jule::Ptr<_1c0c98699_FnIns> _field_BitXorAssign;
	

	inline bool operator==(_1c0c7e8b1_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_1c0c7e8b1_Operators _other) { return !this->operator==(_other); }


};
struct _1c0c807c4_Struct {
	jule::Ptr<_1c0d2b078_Sema> _field_sema;
	jule::Slice<jule::Ptr<_1c0c807c4_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1c0c807c4_Struct>> _field_Uses;
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1c0c7c89d_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1c0c95795_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1c0d4dde2_Var>> _field_Statics;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1c0c5dd57_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1c0c6bb45_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1c0ca8a72_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1c0c83552_StructIns>> _field_Instances;
	


};
struct _1c0c829a2_FieldIns {
	jule::Ptr<_1c0c7c89d_Field> _field_Decl;
	jule::Ptr<_1c0dd7de3_TypeKind> _field_Kind;
	jule::Ptr<_1c0da69e9_Data> _field_Default;
	

	inline bool operator==(_1c0c829a2_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1c0c829a2_FieldIns _other) { return !this->operator==(_other); }


};
struct _1c0c87457_OperandExprModel {
	jule::Ptr<_1c0dd7de3_TypeKind> _field_Kind;
	jule::Any _field_Model = jule::Any(nullptr);
	

	inline bool operator==(_1c0c87457_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_1c0c87457_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c87952_BinaryExprModel {
	jule::Ptr<_1c0c87457_OperandExprModel> _field_Left;
	jule::Ptr<_1c0c87457_OperandExprModel> _field_Right;
	jule::Ptr<_1c0c49480_Token> _field_Op;
	

	inline bool operator==(_1c0c87952_BinaryExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1c0c87952_BinaryExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c87d2b_UnaryExprModel {
	jule::Ptr<_1c0da69e9_Data> _field_Expr;
	jule::Ptr<_1c0c49480_Token> _field_Op;
	

	inline bool operator==(_1c0c87d2b_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1c0c87d2b_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c88359_StructArgExprModel {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Ptr<_1c0c829a2_FieldIns> _field_Field;
	jule::Ptr<_1c0da69e9_Data> _field_Expr;
	

	inline bool operator==(_1c0c88359_StructArgExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c0c88359_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c88700_StructLitExprModel {
	jule::Ptr<_1c0c83552_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1c0c88359_StructArgExprModel>> _field_Args;
	


};
struct _1c0c889ec_AllocStructLitExprModel {
	jule::Ptr<_1c0c88700_StructLitExprModel> _field_Lit;
	

	inline bool operator==(_1c0c889ec_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_1c0c889ec_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c89080_CastingExprModel {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Ptr<_1c0da69e9_Data> _field_Expr;
	jule::Ptr<_1c0dd7de3_TypeKind> _field_Kind;
	jule::Ptr<_1c0dd7de3_TypeKind> _field_ExprKind;
	

	inline bool operator==(_1c0c89080_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_1c0c89080_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c89932_FnCallExprModel {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Ptr<_1c0c98699_FnIns> _field_Func;
	jule::Bool _field_IsCo = false;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1c0cd763e_Scope> _field_Except;
	jule::Bool _field_Assigned = false;
	


};
struct _1c0c89d0b_SliceExprModel {
	jule::Ptr<_1c0dd7de3_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1c0c8a2b2_IndexingExprModel {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Ptr<_1c0da69e9_Data> _field_Expr;
	jule::Ptr<_1c0da69e9_Data> _field_Index;
	

	inline bool operator==(_1c0c8a2b2_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1c0c8a2b2_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c8a768_AnonFnExprModel {
	jule::Slice<jule::Ptr<_1c0d4dde2_Var>> _field_Captured;
	jule::Ptr<_1c0c98699_FnIns> _field_Func;
	jule::Bool _field_Global = false;
	


};
struct _1c0c8ab42_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any(nullptr);
	jule::Any _field_Val = jule::Any(nullptr);
	

	inline bool operator==(_1c0c8ab42_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1c0c8ab42_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c8b0e8_MapExprModel {
	jule::Ptr<_1c0dd7de3_TypeKind> _field_KeyKind;
	jule::Ptr<_1c0dd7de3_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_1c0c8ab42_KeyValPairExprModel>> _field_Entries;
	


};
struct _1c0c8b67b_SlicingExprModel {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1c0c8b67b_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1c0c8b67b_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c8bc0e_TraitSubIdentExprModel {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1c0c95795_Fn> _field_Method;
	jule::Ptr<_1c0ca8a72_Trait> _field_Trt;
	

	inline bool operator==(_1c0c8bc0e_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_1c0c8bc0e_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c8c5a0_StructSubIdentExprModel {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Ptr<_1c0da69e9_Data> _field_Expr;
	jule::Ptr<_1c0c98699_FnIns> _field_Method;
	jule::Ptr<_1c0c829a2_FieldIns> _field_Field;
	jule::Ptr<_1c0c83552_StructIns> _field_Owner;
	

	inline bool operator==(_1c0c8c5a0_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_1c0c8c5a0_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c8c946_StructStaticIdentExprModel {
	jule::Ptr<_1c0c83552_StructIns> _field_Structure;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1c0c98699_FnIns> _field_Method;
	

	inline bool operator==(_1c0c8c946_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_1c0c8c946_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c8cd20_ArrayExprModel {
	jule::Ptr<_1c0de72dc_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1c0c8d11c_TupleExprModel {
	jule::Slice<jule::Ptr<_1c0da69e9_Data>> _field_Datas;
	


};
struct _1c0c8d4e6_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1c0c8d4e6_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1c0c8d4e6_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c8d8c0_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1c0c8d8c0_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1c0c8d8c0_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c8dc99_BuiltinNewCallExprModel {
	jule::Ptr<_1c0dd7de3_TypeKind> _field_Kind;
	jule::Any _field_Init = jule::Any(nullptr);
	

	inline bool operator==(_1c0c8dc99_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_1c0c8dc99_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c8e173_BuiltinPanicCallExprModel {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1c0c8e173_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c0c8e173_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c8e629_BuiltinAssertCallExprModel {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Log;
	

	inline bool operator==(_1c0c8e629_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_1c0c8e629_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c8ead0_BuiltinMakeCallExprModel {
	jule::Ptr<_1c0dd7de3_TypeKind> _field_Kind;
	jule::Any _field_Len = jule::Any(nullptr);
	jule::Any _field_Cap = jule::Any(nullptr);
	

	inline bool operator==(_1c0c8ead0_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_1c0c8ead0_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c8eea9_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Elements = jule::Any(nullptr);
	

	inline bool operator==(_1c0c8eea9_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_1c0c8eea9_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c902a6_BuiltinLenCallExprModel {
	jule::Ptr<_1c0da69e9_Data> _field_Expr;
	

	inline bool operator==(_1c0c902a6_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c0c902a6_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c905a3_BuiltinCapCallExprModel {
	jule::Ptr<_1c0da69e9_Data> _field_Expr;
	

	inline bool operator==(_1c0c905a3_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c0c905a3_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c9097c_BuiltinDeleteCallExprModel {
	jule::Ptr<_1c0da69e9_Data> _field_Dest;
	jule::Ptr<_1c0da69e9_Data> _field_Key;
	

	inline bool operator==(_1c0c9097c_BuiltinDeleteCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Key == _other._field_Key;
	}

	inline bool operator!=(_1c0c9097c_BuiltinDeleteCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c90d56_BuiltinCopyCallExprModel {
	jule::Ptr<_1c0da69e9_Data> _field_Dest;
	jule::Ptr<_1c0da69e9_Data> _field_Src;
	

	inline bool operator==(_1c0c90d56_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_1c0c90d56_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c91230_BuiltinErrorCallExprModel {
	jule::Ptr<_1c0c98699_FnIns> _field_Func;
	jule::Ptr<_1c0da69e9_Data> _field_Err;
	

	inline bool operator==(_1c0c91230_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_1c0c91230_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c918d4_SizeofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1c0c918d4_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c0c918d4_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c91ac1_AlignofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1c0c91ac1_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c0c91ac1_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c91d68_RuneExprModel {
	jule::I32 _field_Code = 0;
	

	inline bool operator==(_1c0c91d68_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_1c0c91d68_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c92165_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1c0c92165_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c0c92165_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c9253e_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	


};
struct _1c0c9283b_FreeExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1c0c9283b_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c0c9283b_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c93540_RetType {
	jule::Ptr<_1c0de00b5_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _field_Idents;
	


};
struct _1c0c93cc1_Param {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1c0de00b5_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1c0c93cc1_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1c0c93cc1_Param _other) { return !this->operator==(_other); }


};
struct _1c0c95795_Fn {
	jule::Ptr<_1c0d2b078_Sema> _field_sema;
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1c0c5dd57_Directive>> _field_Directives;
	jule::Ptr<_1c0c6e95b_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1c0c6bb45_GenericDecl>> _field_Generics;
	jule::Ptr<_1c0c93540_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1c0c93cc1_Param>> _field_Params;
	jule::Ptr<_1c0c807c4_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1c0c98699_FnIns>> _field_Instances;
	


};
struct _1c0c976ed_ParamIns {
	jule::Ptr<_1c0c93cc1_Param> _field_Decl;
	jule::Ptr<_1c0dd7de3_TypeKind> _field_Kind;
	

	inline bool operator==(_1c0c976ed_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1c0c976ed_ParamIns _other) { return !this->operator==(_other); }


};
struct _1c0c98699_FnIns {
	jule::Ptr<_1c0c83552_StructIns> _field_Owner;
	jule::Ptr<_1c0c95795_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1c0dd650c_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1c0c976ed_ParamIns>> _field_Params;
	jule::Ptr<_1c0dd7de3_TypeKind> _field_Result;
	jule::Ptr<_1c0cd763e_Scope> _field_Scope;
	jule::Ptr<_1c0c9b878_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon = false;
	jule::Fn<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*> _field_caller;
	jule::Bool _field_reloaded = false;
	


};
struct _1c0c9b878_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	


};
struct _1c0c9cd85_Pass {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Str _field_Text;
	

	inline bool operator==(_1c0c9cd85_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_1c0c9cd85_Pass _other) { return !this->operator==(_other); }


};
struct _1c0ca283a_symbolBuilder {
	jule::Ptr<_1c0ca283a_symbolBuilder> _field_owner;
	jule::Trait<_1c0d0686c_Importer> _field_importer;
	jule::Slice<_21b8c54de_Log> _field_errors;
	jule::Ptr<_1c0c5ca26_Ast> _field_ast;
	jule::Ptr<_1c0da1681_SymbolTable> _field_table;
	


};
struct _1c0ca8a72_Trait {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1c0de00b5_TypeSymbol>> _field_Inherits;
	jule::Slice<jule::Ptr<_1c0c95795_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1c0c807c4_Struct>> _field_Implemented;
	


};
struct _1c0caa711_EnumItem {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1c0da7b71_Value> _field_Value;
	

	inline bool operator==(_1c0caa711_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1c0caa711_EnumItem _other) { return !this->operator==(_other); }


};
struct _1c0cab27d_Enum {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1c0de00b5_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1c0caa711_EnumItem>> _field_Items;
	


};
struct _1c0cac3b1_TypeEnumItem {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1c0de00b5_TypeSymbol> _field_Kind;
	

	inline bool operator==(_1c0cac3b1_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1c0cac3b1_TypeEnumItem _other) { return !this->operator==(_other); }


};
struct _1c0cac988_TypeEnum {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1c0cac3b1_TypeEnumItem>> _field_Items;
	


};
struct _1c0cb0ae0_comptimeRange {
	jule::Trait<_1c0cb08c0_comptimeRangeKind> _field_kind;
	

	inline bool operator==(_1c0cb0ae0_comptimeRange _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1c0cb0ae0_comptimeRange _other) { return !this->operator==(_other); }


};
struct _1c0cb15b3_comptimeStructField {
	jule::Ptr<_1c0c829a2_FieldIns> _field_field;
	

	inline bool operator==(_1c0cb15b3_comptimeStructField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1c0cb15b3_comptimeStructField _other) { return !this->operator==(_other); }


};
struct _1c0cb3274_comptimeStructFields {
	jule::Slice<jule::Ptr<_1c0c829a2_FieldIns>> _field_fields;
	


};
struct _1c0cb486e_comptimeStatic {
	jule::Ptr<_1c0d4dde2_Var> _field_field;
	

	inline bool operator==(_1c0cb486e_comptimeStatic _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1c0cb486e_comptimeStatic _other) { return !this->operator==(_other); }


};
struct _1c0cb6530_comptimeStatics {
	jule::Slice<jule::Ptr<_1c0d4dde2_Var>> _field_fields;
	


};
struct _1c0cb7b2a_comptimeEnumField {
	jule::Ptr<_1c0caa711_EnumItem> _field_field;
	

	inline bool operator==(_1c0cb7b2a_comptimeEnumField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1c0cb7b2a_comptimeEnumField _other) { return !this->operator==(_other); }


};
struct _1c0cb8ec2_comptimeEnumFields {
	jule::Slice<jule::Ptr<_1c0caa711_EnumItem>> _field_fields;
	


};
struct _1c0cba5bc_comptimeParam {
	jule::Ptr<_1c0c976ed_ParamIns> _field_param;
	

	inline bool operator==(_1c0cba5bc_comptimeParam _other) {
		return 
			this->_field_param == _other._field_param;
	}

	inline bool operator!=(_1c0cba5bc_comptimeParam _other) { return !this->operator==(_other); }


};
struct _1c0cbc756_comptimeParams {
	jule::Slice<jule::Ptr<_1c0c976ed_ParamIns>> _field_params;
	


};
struct _1c0cbdd1d_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_1c0cc0418_comptimeTypeInfo>> _field_types;
	


};
struct _1c0cc0418_comptimeTypeInfo {
	jule::Ptr<_1c0dd7de3_TypeKind> _field_base;
	

	inline bool operator==(_1c0cc0418_comptimeTypeInfo _other) {
		return 
			this->_field_base == _other._field_base;
	}

	inline bool operator!=(_1c0cc0418_comptimeTypeInfo _other) { return !this->operator==(_other); }


};
struct _1c0cc692a_comptimeValue {
	jule::Ptr<_1c0da69e9_Data> _field_data;
	

	inline bool operator==(_1c0cc692a_comptimeValue _other) {
		return 
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1c0cc692a_comptimeValue _other) { return !this->operator==(_other); }


};
struct _1c0cc9279_comptimeFiles {
	jule::Slice<jule::Ptr<_1c0da1681_SymbolTable>> _field_files;
	


};
struct _1c0cca874_comptimeFile {
	jule::Ptr<_1c0da1681_SymbolTable> _field_file;
	

	inline bool operator==(_1c0cca874_comptimeFile _other) {
		return 
			this->_field_file == _other._field_file;
	}

	inline bool operator!=(_1c0cca874_comptimeFile _other) { return !this->operator==(_other); }


};
struct _1c0cced84_constraintChecker {
	jule::Ptr<_1c0d2b078_Sema> _field_s;
	jule::Slice<jule::Ptr<_1c0c6bb45_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1c0dd650c_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1c0dd7101_TypeAlias>> _field_genericsA;
	jule::Ptr<_1c0c98699_FnIns> _field_fi;
	jule::Ptr<_1c0c83552_StructIns> _field_si;
	jule::Ptr<_1c0c49480_Token> _field_et;
	jule::Bool _field_uniq = false;
	


};
struct _1c0cd21d8_Impl {
	jule::Ptr<_1c0c5e93a_TypeDecl> _field_Base;
	jule::Ptr<_1c0c5e93a_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1c0c95795_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1c0d4dde2_Var>> _field_Statics;
	


};
struct _1c0cd763e_Scope {
	jule::Ptr<_1c0cd763e_Scope> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<jule::Any> _field_Stmts;
	


};
struct _1c0cd7a5c_If {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1c0cd763e_Scope> _field_Scope;
	

	inline bool operator==(_1c0cd7a5c_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1c0cd7a5c_If _other) { return !this->operator==(_other); }


};
struct _1c0cd7d59_Else {
	jule::Ptr<_1c0cd763e_Scope> _field_Scope;
	

	inline bool operator==(_1c0cd7d59_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1c0cd7d59_Else _other) { return !this->operator==(_other); }


};
struct _1c0cd8277_Conditional {
	jule::Slice<jule::Ptr<_1c0cd7a5c_If>> _field_Elifs;
	jule::Ptr<_1c0cd7d59_Else> _field_Default;
	


};
struct _1c0cd8574_InfIter {
	jule::Ptr<_1c0cd763e_Scope> _field_Scope;
	

	inline bool operator==(_1c0cd8574_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1c0cd8574_InfIter _other) { return !this->operator==(_other); }


};
struct _1c0cd8a2a_WhileIter {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1c0cd763e_Scope> _field_Scope;
	

	inline bool operator==(_1c0cd8a2a_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1c0cd8a2a_WhileIter _other) { return !this->operator==(_other); }


};
struct _1c0cd9476_RangeIter {
	jule::Ptr<_1c0da69e9_Data> _field_Expr;
	jule::Ptr<_1c0cd763e_Scope> _field_Scope;
	jule::Ptr<_1c0d4dde2_Var> _field_KeyA;
	jule::Ptr<_1c0d4dde2_Var> _field_KeyB;
	

	inline bool operator==(_1c0cd9476_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1c0cd9476_RangeIter _other) { return !this->operator==(_other); }


};
struct _1c0cd980b_ContSt {
	jule::Uintptr _field_It = 0;
	

	inline bool operator==(_1c0cd980b_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_1c0cd980b_ContSt _other) { return !this->operator==(_other); }


};
struct _1c0cd9bd5_BreakSt {
	jule::Uintptr _field_It = 0;
	jule::Uintptr _field_Mtch = 0;
	

	inline bool operator==(_1c0cd9bd5_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_1c0cd9bd5_BreakSt _other) { return !this->operator==(_other); }


};
struct _1c0cd9ed2_Label {
	jule::Str _field_Ident;
	

	inline bool operator==(_1c0cd9ed2_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1c0cd9ed2_Label _other) { return !this->operator==(_other); }


};
struct _1c0cda3ab_GotoSt {
	jule::Str _field_Ident;
	jule::Ptr<_1c0cd9ed2_Label> _field_Label;
	

	inline bool operator==(_1c0cda3ab_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1c0cda3ab_GotoSt _other) { return !this->operator==(_other); }


};
struct _1c0cda785_Postfix {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Op;
	

	inline bool operator==(_1c0cda785_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1c0cda785_Postfix _other) { return !this->operator==(_other); }


};
struct _1c0cdac3b_Assign {
	jule::Ptr<_1c0c87457_OperandExprModel> _field_Left;
	jule::Ptr<_1c0c87457_OperandExprModel> _field_Right;
	jule::Ptr<_1c0c49480_Token> _field_Op;
	

	inline bool operator==(_1c0cdac3b_Assign _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1c0cdac3b_Assign _other) { return !this->operator==(_other); }


};
struct _1c0cdb1e2_MultiAssign {
	jule::Slice<jule::Ptr<_1c0d4dde2_Var>> _field_Decls;
	jule::Slice<jule::Ptr<_1c0da69e9_Data>> _field_Left;
	jule::Any _field_Right = jule::Any(nullptr);
	


};
struct _1c0cdb852_Match {
	jule::Ptr<_1c0da69e9_Data> _field_Expr;
	jule::Bool _field_TypeMatch = false;
	jule::Bool _field_Comptime = false;
	jule::Slice<jule::Ptr<_1c0cdc37a_Case>> _field_Cases;
	jule::Ptr<_1c0cdc37a_Case> _field_Default;
	


};
struct _1c0cdc37a_Case {
	jule::Ptr<_1c0cdb852_Match> _field_Owner;
	jule::Ptr<_1c0cd763e_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1c0da69e9_Data>> _field_Exprs;
	jule::Ptr<_1c0cdc37a_Case> _field_Next;
	


};
struct _1c0cdca73_FallSt {
	jule::Uintptr _field_DestCase = 0;
	

	inline bool operator==(_1c0cdca73_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_1c0cdca73_FallSt _other) { return !this->operator==(_other); }


};
struct _1c0cdce19_RetSt {
	jule::Ptr<_1c0c98699_FnIns> _field_Func;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1c0cdce19_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c0cdce19_RetSt _other) { return !this->operator==(_other); }


};
struct _1c0cdd579_scopeLabel {
	jule::Ptr<_1c0c49480_Token> _field_token;
	jule::Ptr<_1c0cd9ed2_Label> _field_label;
	jule::I64 _field_pos = 0;
	jule::Ptr<_1c0cdeaec_scopeChecker> _field_scope;
	jule::Bool _field_used = false;
	

	inline bool operator==(_1c0cdd579_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1c0cdd579_scopeLabel _other) { return !this->operator==(_other); }


};
struct _1c0cddb0c_scopeGoto {
	jule::Ptr<_1c0cda3ab_GotoSt> _field_st;
	jule::Ptr<_1c0c6c3e8_GotoSt> _field_gt;
	jule::Ptr<_1c0cdeaec_scopeChecker> _field_scope;
	jule::I64 _field_pos = 0;
	

	inline bool operator==(_1c0cddb0c_scopeGoto _other) {
		return 
			this->_field_st == _other._field_st &&
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1c0cddb0c_scopeGoto _other) { return !this->operator==(_other); }


};
struct _1c0cdeaec_scopeChecker {
	jule::Ptr<_1c0c49480_Token> _field_calledFrom;
	jule::Ptr<_1c0d2b078_Sema> _field_s;
	jule::Ptr<_1c0c98699_FnIns> _field_owner;
	jule::Ptr<_1c0cdeaec_scopeChecker> _field_parent;
	jule::I64 _field_childIndex = 0;
	jule::Ptr<_1c0da1681_SymbolTable> _field_table;
	jule::Ptr<_1c0cd763e_Scope> _field_scope;
	jule::Ptr<_1c0c6e95b_ScopeTree> _field_tree;
	jule::Ptr<_1c0c98699_FnIns> _field_result;
	jule::Uintptr _field_it = 0;
	jule::Uintptr _field_cse = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1c0d4dde2_Var>>> _field_captured;
	jule::Ptr<jule::Slice<jule::Ptr<_1c0cdd579_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1c0cddb0c_scopeGoto>>> _field_gotos;
	jule::I64 _field_i = 0;
	

	inline bool operator==(_1c0cdeaec_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_captured == _other._field_captured &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1c0cdeaec_scopeChecker _other) { return !this->operator==(_other); }


};
struct _1c0d032d6_directiveChecker {
	jule::Ptr<_1c0d2b078_Sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1c0c5dd57_Directive>>> _field_d;
	jule::Any _field_o;
	

	inline bool operator==(_1c0d032d6_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1c0d032d6_directiveChecker _other) { return !this->operator==(_other); }


};
struct _1c0d09782_ImportInfo {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	jule::Bool _field_ImportAll = false;
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _field_Selected;
	jule::Ptr<_1c0d0c6a8_Package> _field_Package;
	jule::I64 _field_ModId = 0;
	


};
struct _1c0d0c6a8_Package {
	jule::Slice<jule::Ptr<_1c0da1681_SymbolTable>> _field_Files;
	


};
struct _1c0d2a473_commonSemaMeta {
	jule::Slice<jule::Ptr<_1c0cc0418_comptimeTypeInfo>> _field_comptimeTypeInfos;
	


};
struct _1c0d2b078_Sema {
	jule::Slice<_21b8c54de_Log> _field_errors;
	jule::Slice<jule::Ptr<_1c0da1681_SymbolTable>> _field_files;
	jule::Ptr<_1c0da1681_SymbolTable> _field_file;
	jule::I64 _field_flags = 0LL;
	jule::Ptr<_1c0d2a473_commonSemaMeta> _field_meta;
	


};
struct _1c0d4ac46_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled = false;
	


};
struct _1c0d4dde2_Var {
	jule::Ptr<_1c0cd763e_Scope> _field_Scope;
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1c0de00b5_TypeSymbol> _field_Kind;
	jule::Ptr<_1c0da7b71_Value> _field_Value;
	jule::Ptr<_1c0c9b878_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1c0c5dd57_Directive>> _field_Directives;
	jule::I64 _field_RetOrder = -2LL;
	jule::Slice<jule::Ptr<_1c0d4dde2_Var>> _field_Depends;
	


};
struct _1c0d4ec6c_FuncPattern {
	


};
struct _1c0d8d6b2_typeCompatibilityChecker {
	jule::Ptr<_1c0d2b078_Sema> _field_s;
	jule::Ptr<_1c0dd7de3_TypeKind> _field_dest;
	jule::Ptr<_1c0dd7de3_TypeKind> _field_src;
	jule::Ptr<_1c0c49480_Token> _field_errorToken;
	

	inline bool operator==(_1c0d8d6b2_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1c0d8d6b2_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
struct _1c0d90461_assignTypeChecker {
	jule::Ptr<_1c0d2b078_Sema> _field_s;
	jule::Ptr<_1c0dd7de3_TypeKind> _field_dest;
	jule::Ptr<_1c0da69e9_Data> _field_d;
	jule::Ptr<_1c0c49480_Token> _field_errorToken;
	

	inline bool operator==(_1c0d90461_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1c0d90461_assignTypeChecker _other) { return !this->operator==(_other); }


};
struct _1c0d91d36_dynamicTypeAnnotation {
	jule::Ptr<_1c0da8721_Eval> _field_e;
	jule::Ptr<_1c0c98699_FnIns> _field_f;
	jule::Ptr<_1c0c976ed_ParamIns> _field_p;
	jule::Ptr<_1c0da69e9_Data> _field_a;
	jule::Ptr<_1c0c49480_Token> _field_errorToken;
	jule::Ptr<_1c0dd7de3_TypeKind>* _field_k = nullptr;
	jule::Ptr<_1c0c5e93a_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1c0dd7de3_TypeKind>> _field_ignored;
	


};
struct _1c0d96b93_fnCallArgChecker {
	jule::Ptr<_1c0da8721_Eval> _field_e;
	jule::Slice<jule::Ptr<_1c0c63c6e_Expr>> _field_args;
	jule::Ptr<_1c0c49480_Token> _field_errorToken;
	jule::Ptr<_1c0c98699_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation = false;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1c0dd7de3_TypeKind>> _field_ignored;
	


};
struct _1c0d99aca_structLitChecker {
	jule::Ptr<_1c0da8721_Eval> _field_e;
	jule::Ptr<_1c0c49480_Token> _field_errorToken;
	jule::Ptr<_1c0c83552_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1c0c88359_StructArgExprModel>> _field_args;
	


};
struct _1c0d9b8ac_rangeChecker {
	jule::Ptr<_1c0cdeaec_scopeChecker> _field_sc;
	jule::Ptr<_1c0c74631_RangeKind> _field_rang;
	jule::Ptr<_1c0cd9476_RangeIter> _field_Kind;
	jule::Ptr<_1c0da69e9_Data> _field_d;
	

	inline bool operator==(_1c0d9b8ac_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1c0d9b8ac_rangeChecker _other) { return !this->operator==(_other); }


};
struct _1c0d9e11d_retTypeChecker {
	jule::Ptr<_1c0cdeaec_scopeChecker> _field_sc;
	jule::Ptr<_1c0c98699_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1c0dd7de3_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_1c0c63c6e_Expr>> _field_exprs;
	jule::Ptr<_1c0c49480_Token> _field_errorToken;
	jule::Any _field_model = jule::Any(nullptr);
	


};
struct _1c0da1681_SymbolTable {
	jule::Ptr<_1c0c4ec16_File> _field_File;
	jule::Slice<_1c0c9cd85_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1c0d09782_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1c0d4dde2_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1c0dd7101_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1c0c807c4_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1c0c95795_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1c0ca8a72_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1c0cab27d_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1c0cac988_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1c0cd21d8_Impl>> _field_Impls;
	


};
struct _1c0da69e9_Data {
	jule::Bool _field_untyped = false;
	jule::Ptr<_1c0dd7de3_TypeKind> _field_Kind;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Bool _field_Lvalue = false;
	jule::Bool _field_IsRune = false;
	jule::Any _field_Model = jule::Any(nullptr);
	jule::Bool _field_Decl = false;
	jule::Ptr<_2021e617b_Const> _field_Constant;
	

	inline bool operator==(_1c0da69e9_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_1c0da69e9_Data _other) { return !this->operator==(_other); }


};
struct _1c0da7b71_Value {
	jule::Ptr<_1c0c63c6e_Expr> _field_Expr;
	jule::Ptr<_1c0da69e9_Data> _field_Data;
	

	inline bool operator==(_1c0da7b71_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1c0da7b71_Value _other) { return !this->operator==(_other); }


};
struct _1c0da8721_Eval {
	jule::Ptr<_1c0d2b078_Sema> _field_s;
	jule::Trait<_1c0e079d4_Lookup> _field_lookup;
	jule::Ptr<_1c0dd7de3_TypeKind> _field_prefix;
	jule::Bool _field_unsafety = false;
	jule::Bool _field_immutable = false;
	jule::Bool _field_ignored = false;
	jule::Bool _field_disBuiltin = false;
	jule::Ptr<_1c0d4dde2_Var> _field_owner;
	jule::Ptr<_1c0c829a2_FieldIns> _field_field;
	jule::Bool _field_arg = false;
	

	inline bool operator==(_1c0da8721_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1c0da8721_Eval _other) { return !this->operator==(_other); }


};
struct _1c0dc6e48_unaryEval {
	jule::Ptr<_1c0da8721_Eval> _field_e;
	jule::Ptr<_1c0da69e9_Data> _field_d;
	jule::Ptr<_1c0c65d2b_UnaryExpr> _field_u;
	

	inline bool operator==(_1c0dc6e48_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1c0dc6e48_unaryEval _other) { return !this->operator==(_other); }


};
struct _1c0dc8dd4_binaryEval {
	jule::Ptr<_1c0da8721_Eval> _field_e;
	jule::Ptr<_1c0da69e9_Data> _field_l;
	jule::Ptr<_1c0da69e9_Data> _field_r;
	jule::Ptr<_1c0c49480_Token> _field_op;
	

	inline bool operator==(_1c0dc8dd4_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1c0dc8dd4_binaryEval _other) { return !this->operator==(_other); }


};
struct _1c0dd650c_InsGeneric {
	jule::Ptr<_1c0dd7de3_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_1c0dd7de3_TypeKind>> _field_Constraint;
	


};
struct _1c0dd7101_TypeAlias {
	jule::Ptr<_1c0c6e95b_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Generic = false;
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1c0de00b5_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1c0dd7101_TypeAlias>> _field_Generics;
	


};
struct _1c0dd7de3_TypeKind {
	jule::Str _field_BindIdent;
	jule::Bool _field_Generic = false;
	jule::Bool _field_Variadic = false;
	jule::Trait<_1c0dd793c_Kind> _field_Kind;
	

	inline bool operator==(_1c0dd7de3_TypeKind _other) {
		return 
			this->_field_BindIdent == _other._field_BindIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1c0dd7de3_TypeKind _other) { return !this->operator==(_other); }


};
struct _1c0de00b5_TypeSymbol {
	jule::Ptr<_1c0c5e93a_TypeDecl> _field_Decl;
	jule::Ptr<_1c0dd7de3_TypeKind> _field_Kind;
	

	inline bool operator==(_1c0de00b5_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1c0de00b5_TypeSymbol _other) { return !this->operator==(_other); }


};
struct _1c0de09bc_Prim {
	jule::Str _field_Kind;
	

	inline bool operator==(_1c0de09bc_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1c0de09bc_Prim _other) { return !this->operator==(_other); }


};
struct _1c0de44e8_Sptr {
	jule::Ptr<_1c0dd7de3_TypeKind> _field_Elem;
	

	inline bool operator==(_1c0de44e8_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1c0de44e8_Sptr _other) { return !this->operator==(_other); }


};
struct _1c0de4ebb_Slc {
	jule::Ptr<_1c0dd7de3_TypeKind> _field_Elem;
	

	inline bool operator==(_1c0de4ebb_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1c0de4ebb_Slc _other) { return !this->operator==(_other); }


};
struct _1c0de5ab0_Tuple {
	jule::Slice<jule::Ptr<_1c0dd7de3_TypeKind>> _field_Types;
	


};
struct _1c0de6660_Map {
	jule::Ptr<_1c0dd7de3_TypeKind> _field_Key;
	jule::Ptr<_1c0dd7de3_TypeKind> _field_Val;
	

	inline bool operator==(_1c0de6660_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1c0de6660_Map _other) { return !this->operator==(_other); }


};
struct _1c0de72dc_Arr {
	jule::Bool _field_Auto = false;
	jule::I64 _field_N = 0;
	jule::Ptr<_1c0dd7de3_TypeKind> _field_Elem;
	

	inline bool operator==(_1c0de72dc_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1c0de72dc_Arr _other) { return !this->operator==(_other); }


};
struct _1c0de7cb0_Ptr {
	jule::Ptr<_1c0dd7de3_TypeKind> _field_Elem;
	

	inline bool operator==(_1c0de7cb0_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1c0de7cb0_Ptr _other) { return !this->operator==(_other); }


};
struct _1c0de8cb1_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	inline bool operator==(_1c0de8cb1_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1c0de8cb1_referencer _other) { return !this->operator==(_other); }


};
struct _1c0de9ca1_typeChecker {
	jule::Ptr<_1c0d2b078_Sema> _field_s;
	jule::Trait<_1c0e079d4_Lookup> _field_rootLookup;
	jule::Trait<_1c0e079d4_Lookup> _field_lookup;
	jule::Ptr<_1c0de8cb1_referencer> _field_referencer;
	jule::Ptr<_1c0c9b878_ReferenceStack> _field_refers;
	jule::Ptr<_1c0c49480_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1c0c6bb45_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1c0dd7de3_TypeKind>>* _field_ignoredGenerics = nullptr;
	jule::Slice<jule::Ptr<_1c0dd7101_TypeAlias>> _field_useGenerics;
	jule::Bool _field_cycleRisk = true;
	jule::Bool _field_disBuiltin = false;
	jule::Bool _field_selection = false;
	jule::Ptr<_1c0dd7101_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1c0dd7101_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch = false;
	


};
struct _1c0e02957_identTypeLookup {
	

	inline bool operator==(_1c0e02957_identTypeLookup _other) { return true; }

	inline bool operator!=(_1c0e02957_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _1c1905ec6_FileInfo {
	jule::Ptr<_1c0c5ca26_Ast> _field_Ast;
	jule::Slice<_21b8c54de_Log> _field_Errors;
	


};
struct _1c1951a8d_stmt {
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _field_tokens;
	jule::Bool _field_terminated = false;
	


};
struct _1c195242e_scopeParser {
	jule::Ptr<_1c19706e4_parser> _field_p;
	jule::Ptr<_1c0c6e95b_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1c1951a8d_stmt>> _field_stmts;
	jule::I64 _field_pos = 0;
	


};
struct _1c195ed54_exprBuilder {
	jule::Ptr<_1c19706e4_parser> _field_p;
	

	inline bool operator==(_1c195ed54_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1c195ed54_exprBuilder _other) { return !this->operator==(_other); }


};
struct _1c196c2e5_assignInfo {
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _field_l;
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _field_r;
	jule::Ptr<_1c0c49480_Token> _field_setter;
	jule::Bool _field_ok = false;
	


};
struct _1c19706e4_parser {
	jule::Ptr<_1c0c5ca26_Ast> _field_ast;
	jule::Slice<jule::Ptr<_1c0c5dd57_Directive>> _field_directives;
	jule::Slice<_21b8c54de_Log> _field_errors;
	jule::Ptr<_1c195ed54_exprBuilder> _field_ep;
	


};
struct _1c1982816_typeBuilder {
	jule::Ptr<_1c19706e4_parser> _field_p;
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _field_tokens;
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = false;
	


};
struct _1c114d5a9_CompileInfo {
	jule::Bool _field_Prod = false;
	jule::Bool _field_Test = false;
	jule::Str _field_Compiler = jule::Str::lit("clang", 5);
	jule::Str _field_CppStd = jule::Str::lit("cpp14", 5);
	

	inline bool operator==(_1c114d5a9_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_1c114d5a9_CompileInfo _other) { return !this->operator==(_other); }


};
struct _1c114ea83_directiveEval {
	jule::Slice<_21b8c54de_Log> _field_logs;
	jule::Ptr<_1c0c5dd57_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1c198694c_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1c0d09782_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1c198b9da_OrderedDefines {
	jule::Slice<jule::Ptr<_1c0c807c4_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1c0d4dde2_Var>> _field_Globals;
	


};
struct _1c198bc71_defineOrderer {
	

	inline bool operator==(_1c198bc71_defineOrderer _other) { return true; }

	inline bool operator!=(_1c198bc71_defineOrderer _other) { return !this->operator==(_other); }


};
struct _1c13413c3_liveTable {
	jule::Slice<jule::Ptr<_1c0d4dde2_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1c0c98699_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1c0c83552_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1c0ca8a72_Trait>> _field_traits;
	


};
struct _1c13460cb_scopeDeadCode {
	jule::Ptr<_1c13460cb_scopeDeadCode> _field_parent;
	jule::Ptr<_1c0cd763e_Scope> _field_s;
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1c0cd9ed2_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1c0cda3ab_GotoSt>>> _field_gotos;
	jule::Bool _field_except = false;
	

	inline bool operator==(_1c13460cb_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_1c13460cb_scopeDeadCode _other) { return !this->operator==(_other); }


};
struct _1c134a366_exprDeadCode {
	jule::Ptr<_1c13460cb_scopeDeadCode> _field_s;
	

	inline bool operator==(_1c134a366_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1c134a366_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _1c0ed9d3b_ExceptionalForwardingExprModel {
	jule::Ptr<_1c0c89932_FnCallExprModel> _field_Expr;
	

	inline bool operator==(_1c0ed9d3b_ExceptionalForwardingExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c0ed9d3b_ExceptionalForwardingExprModel _other) { return !this->operator==(_other); }


};
struct _1c0eda1b0_SwapExprModel {
	jule::Ptr<_1c0da69e9_Data> _field_Left;
	jule::Ptr<_1c0da69e9_Data> _field_Right;
	

	inline bool operator==(_1c0eda1b0_SwapExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1c0eda1b0_SwapExprModel _other) { return !this->operator==(_other); }


};
struct _1c0eda589_EmptyCompareExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Neg = false;
	

	inline bool operator==(_1c0eda589_EmptyCompareExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Neg == _other._field_Neg;
	}

	inline bool operator!=(_1c0eda589_EmptyCompareExprModel _other) { return !this->operator==(_other); }


};
struct _1c0eda90d_RefExprModel {
	jule::Ptr<_1c0d4dde2_Var> _field_Var;
	

	inline bool operator==(_1c0eda90d_RefExprModel _other) {
		return 
			this->_field_Var == _other._field_Var;
	}

	inline bool operator!=(_1c0eda90d_RefExprModel _other) { return !this->operator==(_other); }


};
struct _1c0edad81_StrCompExprModel {
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Ptr<_2021e617b_Const> _field_Right;
	jule::Bool _field_NotEq = false;
	

	inline bool operator==(_1c0edad81_StrCompExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_NotEq == _other._field_NotEq;
	}

	inline bool operator!=(_1c0edad81_StrCompExprModel _other) { return !this->operator==(_other); }


};
struct _1c0edb414_MutSlicingExprModel {
	jule::Ptr<_1c0c49480_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1c0edb414_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1c0edb414_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1c0edb711_UnsafeBinaryExprModel {
	jule::Ptr<_1c0c87952_BinaryExprModel> _field_Node;
	

	inline bool operator==(_1c0edb711_UnsafeBinaryExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1c0edb711_UnsafeBinaryExprModel _other) { return !this->operator==(_other); }


};
struct _1c0edba96_UnsafeIndexingExprModel {
	jule::Ptr<_1c0c8a2b2_IndexingExprModel> _field_Node;
	

	inline bool operator==(_1c0edba96_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1c0edba96_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1c0edbe70_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Ptr<_1c0c89d0b_SliceExprModel> _field_Elems;
	

	inline bool operator==(_1c0edbe70_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1c0edbe70_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1c0edc349_AppendToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Slice = jule::Any(nullptr);
	

	inline bool operator==(_1c0edc349_AppendToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Slice == _other._field_Slice;
	}

	inline bool operator!=(_1c0edc349_AppendToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1c0edc723_StrRuneIter {
	jule::Ptr<_1c0da69e9_Data> _field_Expr;
	jule::Ptr<_1c0cd9476_RangeIter> _field_Base;
	

	inline bool operator==(_1c0edc723_StrRuneIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Base == _other._field_Base;
	}

	inline bool operator!=(_1c0edc723_StrRuneIter _other) { return !this->operator==(_other); }


};
struct _1c0edca20_UnsafeDerefExprModel {
	jule::Ptr<_1c0c87d2b_UnaryExprModel> _field_Base;
	

	inline bool operator==(_1c0edca20_UnsafeDerefExprModel _other) {
		return 
			this->_field_Base == _other._field_Base;
	}

	inline bool operator!=(_1c0edca20_UnsafeDerefExprModel _other) { return !this->operator==(_other); }


};
struct _1c0edcd1c_UnsafeCastingExprModel {
	jule::Ptr<_1c0c89080_CastingExprModel> _field_Base;
	

	inline bool operator==(_1c0edcd1c_UnsafeCastingExprModel _other) {
		return 
			this->_field_Base == _other._field_Base;
	}

	inline bool operator!=(_1c0edcd1c_UnsafeCastingExprModel _other) { return !this->operator==(_other); }


};
struct _1c0edd9ee_nilVar {
	jule::Uintptr _field_var = 0;
	jule::Bool _field_safe = false;
	

	inline bool operator==(_1c0edd9ee_nilVar _other) {
		return 
			this->_field_var == _other._field_var &&
			this->_field_safe == _other._field_safe;
	}

	inline bool operator!=(_1c0edd9ee_nilVar _other) { return !this->operator==(_other); }


};
struct _1c0eddd40_nils {
	jule::Slice<_1c0edd9ee_nilVar> _field_vars;
	


};
struct _1c0ee1abd_scopeOptimizer {
	jule::Ptr<_1c0ee1abd_scopeOptimizer> _field_parent;
	jule::I64 _field_i = 0;
	jule::Ptr<_1c0cd763e_Scope> _field_scope;
	jule::Ptr<_1c1006572_data> _field_data;
	

	inline bool operator==(_1c0ee1abd_scopeOptimizer _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1c0ee1abd_scopeOptimizer _other) { return !this->operator==(_other); }


};
struct _1c0ee891b_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	jule::Ptr<_1c1006572_data> _field_data;
	

	inline bool operator==(_1c0ee891b_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1c0ee891b_exprOptimizer _other) { return !this->operator==(_other); }


};
struct _1c10032d8_dynamicVar {
	jule::Uintptr _field_var = 0;
	jule::Ptr<_1c0dd7de3_TypeKind> _field_kind;
	

	inline bool operator==(_1c10032d8_dynamicVar _other) {
		return 
			this->_field_var == _other._field_var &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1c10032d8_dynamicVar _other) { return !this->operator==(_other); }


};
struct _1c1003629_dynamic {
	jule::Slice<_1c10032d8_dynamicVar> _field_vars;
	


};
struct _1c1006572_data {
	jule::Ptr<_1c1007e69_boundary> _field_boundary;
	jule::Ptr<_1c0eddd40_nils> _field_nils;
	jule::Ptr<_1c1003629_dynamic> _field_dynamic;
	

	inline bool operator==(_1c1006572_data _other) {
		return 
			this->_field_boundary == _other._field_boundary &&
			this->_field_nils == _other._field_nils &&
			this->_field_dynamic == _other._field_dynamic;
	}

	inline bool operator!=(_1c1006572_data _other) { return !this->operator==(_other); }


};
struct _1c1007b28_boundaryVar {
	jule::Uintptr _field_var = 0;
	jule::Slice<jule::Any> _field_maxSize;
	


};
struct _1c1007e69_boundary {
	jule::Slice<_1c1007b28_boundaryVar> _field_vars;
	


};
struct _1c135247d_Optimizer {
	jule::Ptr<_1c1989301_IR> _field_ir;
	

	inline bool operator==(_1c135247d_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1c135247d_Optimizer _other) { return !this->operator==(_other); }


};
struct _1c0e57c43_AnsiEscape {
	

	inline bool operator==(_1c0e57c43_AnsiEscape _other) { return true; }

	inline bool operator!=(_1c0e57c43_AnsiEscape _other) { return !this->operator==(_other); }


};
struct _1c0e59629_Logger {
	

	inline bool operator==(_1c0e59629_Logger _other) { return true; }

	inline bool operator!=(_1c0e59629_Logger _other) { return !this->operator==(_other); }


};
struct _1c2540cec_AbsTime {
	jule::U64 _field_Day = 0;
	jule::U64 _field_WeekDay = 0;
	jule::U64 _field_YearDay = 0;
	jule::U64 _field_Month = 0;
	jule::U64 _field_Year = 0;
	jule::U64 _field_Second = 0;
	jule::U64 _field_Minute = 0;
	jule::U64 _field_Hour = 0;
	

	inline bool operator==(_1c2540cec_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_1c2540cec_AbsTime _other) { return !this->operator==(_other); }


};
struct _1c25414c3_Time {
	jule::U64 _field_sec = 0;
	

	inline bool operator==(_1c25414c3_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1c25414c3_Time _other) { return !this->operator==(_other); }


};
struct _1c246a95d_scopeCoder {
	jule::Ptr<_1c254b467_ObjectCoder> _field_oc;
	

	inline bool operator==(_1c246a95d_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1c246a95d_scopeCoder _other) { return !this->operator==(_other); }


};
struct _1c2475e30_exprCoder {
	jule::Ptr<_1c254b467_ObjectCoder> _field_oc;
	jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1c0d4dde2_Var>>> _field_varPrefixes;
	


};
struct _1c2487084_TestCoder {
	jule::Ptr<_1c0c83552_StructIns> _field_t;
	jule::Ptr<_1c0c95795_Fn> _field_tmReset;
	jule::Ptr<_1c0c95795_Fn> _field_tmFailed;
	jule::Ptr<_1c0c95795_Fn> _field_tmSkipped;
	jule::Ptr<_1c254b467_ObjectCoder> _field_oc;
	

	inline bool operator==(_1c2487084_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1c2487084_TestCoder _other) { return !this->operator==(_other); }


};
struct _1c2489d9a_identCoder {
	

	inline bool operator==(_1c2489d9a_identCoder _other) { return true; }

	inline bool operator!=(_1c2489d9a_identCoder _other) { return !this->operator==(_other); }


};
struct _1c25493ee_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

	inline bool operator==(_1c25493ee_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_1c25493ee_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1c25499c6_traitHash {
	jule::Ptr<_1c0ca8a72_Trait> _field_t;
	jule::Str _field_ti;
	jule::Ptr<_1c0c83552_StructIns> _field_s;
	jule::I64 _field_i = 0;
	

	inline bool operator==(_1c25499c6_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_ti == _other._field_ti &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1c25499c6_traitHash _other) { return !this->operator==(_other); }


};
struct _1c2549da0_traitCast {
	jule::Ptr<_1c0ca8a72_Trait> _field_t1;
	jule::Ptr<_1c0ca8a72_Trait> _field_t2;
	

	inline bool operator==(_1c2549da0_traitCast _other) {
		return 
			this->_field_t1 == _other._field_t1 &&
			this->_field_t2 == _other._field_t2;
	}

	inline bool operator!=(_1c2549da0_traitCast _other) { return !this->operator==(_other); }


};
struct _1c254a2bd_anonHash {
	jule::Ptr<_1c0c8a768_AnonFnExprModel> _field_expr;
	jule::Str _field_ident;
	

	inline bool operator==(_1c254a2bd_anonHash _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1c254a2bd_anonHash _other) { return !this->operator==(_other); }


};
struct _1c255bad7_customType {
	jule::Str _field_kind;
	

	inline bool operator==(_1c255bad7_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1c255bad7_customType _other) { return !this->operator==(_other); }


};
struct _1c255c6ed_typeCoder {
	jule::Ptr<_1c254b467_ObjectCoder> _field_oc;
	jule::Ptr<_1c25659d1_resultCoder> _field_rc;
	

	inline bool operator==(_1c255c6ed_typeCoder _other) {
		return 
			this->_field_oc == _other._field_oc &&
			this->_field_rc == _other._field_rc;
	}

	inline bool operator!=(_1c255c6ed_typeCoder _other) { return !this->operator==(_other); }


};
struct _1c25659d1_resultCoder {
	jule::Ptr<_1c255c6ed_typeCoder> _field_tc;
	

	inline bool operator==(_1c25659d1_resultCoder _other) {
		return 
			this->_field_tc == _other._field_tc;
	}

	inline bool operator!=(_1c25659d1_resultCoder _other) { return !this->operator==(_other); }


};
struct _1c6ae615b_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::I64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

	inline bool operator==(_1c6ae615b_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1c6ae615b_Flag _other) { return !this->operator==(_other); }


};struct _1c6ae9c53_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::U64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

	inline bool operator==(_1c6ae9c53_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1c6ae9c53_Flag _other) { return !this->operator==(_other); }


};struct _1c6aed3b6_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::F64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

	inline bool operator==(_1c6aed3b6_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1c6aed3b6_Flag _other) { return !this->operator==(_other); }


};struct _1c6b01a6d_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Bool _field_default = false;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

	inline bool operator==(_1c6b01a6d_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1c6b01a6d_Flag _other) { return !this->operator==(_other); }


};struct _1c6b051d1_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

	inline bool operator==(_1c6b051d1_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1c6b051d1_Flag _other) { return !this->operator==(_other); }


};
struct _1c1cd423e_FlagSet {
	jule::Slice<jule::Trait<_1c1cd266b_CommonFlag>> _field_flags;
	


};
struct _1c1cd6c03_argParser {
	_1c1cd423e_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I64 _field_i = 0;
	


};
struct _1c254b467_ObjectCoder {
	_234c76a64_StrBuilder _field_Buf;
	_234c76a64_StrBuilder _field_resultDecls;
	_234c76a64_StrBuilder _field_anyObj;
	_234c76a64_StrBuilder _field_anonObj;
	jule::Ptr<_1c1989301_IR> _field_ir;
	_1c25493ee_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1c25499c6_traitHash>> _field_tmap;
	jule::Slice<jule::Ptr<_1c254a2bd_anonHash>> _field_anons;
	jule::Slice<jule::U8> _field_indentBuffer;
	jule::Map<jule::Str,jule::Bool> _field_resultMap;
	jule::Slice<jule::Ptr<_1c0dd7de3_TypeKind>> _field_anyTypeMap;
	jule::Slice<_1c2549da0_traitCast> _field_traitCastMap;
	jule::Ptr<_1c2475e30_exprCoder> _field_ec;
	jule::Ptr<_1c246a95d_scopeCoder> _field_sc;
	jule::Ptr<_1c255c6ed_typeCoder> _field_tc;
	jule::I64 _field_headPos = 0;
	jule::I64 _field_declPos = 0;
	


};
struct _1c1006077_dataCheckpoint {
	_1c1007e69_boundary _field_boundary;
	_1c0eddd40_nils _field_nils;
	_1c1003629_dynamic _field_dynamic;
	


};
struct _1c13417e1_ObjectDeadCode {
	_1c13413c3_liveTable _field_live;
	jule::Ptr<_1c1989301_IR> _field_ir;
	


};
struct _1c1989301_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1c0d0c6a8_Package> _field_Main;
	jule::Slice<jule::Ptr<_1c0d09782_ImportInfo>> _field_Used;
	_1c198b9da_OrderedDefines _field_Ordered;
	


};
struct _1c0c83552_StructIns {
	jule::Bool _field_Checked = false;
	jule::Ptr<_1c0c807c4_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1c0dd650c_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1c0c829a2_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1c0d4dde2_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1c0c95795_Fn>> _field_Methods;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Comparable = false;
	jule::Ptr<_1c0c9b878_ReferenceStack> _field_Refers;
	_1c0c7e8b1_Operators _field_Operators;
	


};
struct _21b9826bc_Cmd {
	_21b986913_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	


};
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1c0da69e9_Data__jule_tuple_x_1c0da69e9_Data {
	jule::Ptr<_1c0da69e9_Data> __jule_result_arg0;
	jule::Ptr<_1c0da69e9_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1c0da69e9_Data__jule_tuple_bool {
	jule::Ptr<_1c0da69e9_Data> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1c0c63c6e_Expr__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1c0c63c6e_Expr>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1c0c7690d_Case__jule_tuple_bool {
	jule::Ptr<_1c0c7690d_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1c0c7690d_Case__jule_tuple_x_1c0c75764_Else {
	jule::Slice<jule::Ptr<_1c0c7690d_Case>> __jule_result_arg0;
	jule::Ptr<_1c0c75764_Else> __jule_result_arg1;
};
struct __jule_tuple__1c0c6e098_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1c0c6d3d8_AssignSt__jule_tuple_bool {
	jule::Ptr<_1c0c6d3d8_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1c0c5e93a_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1c0c5e93a_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1c0c6282d_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1c0c6282d_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1c0c5ca26_Ast__jule_tuple_s_21b8c54de_Log {
	jule::Slice<jule::Ptr<_1c0c5ca26_Ast>> __jule_result_arg0;
	jule::Slice<_21b8c54de_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_21b8c54de_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_21b8c54de_Log> __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1c1989301_IR__jule_tuple_s_21b8c54de_Log {
	jule::Ptr<_1c1989301_IR> __jule_result_arg0;
	jule::Slice<_21b8c54de_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_i32 {
	jule::I32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__201a13724_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I64 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__201a13724_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__201a13724_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__201a13724_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I64 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1c0da1681_SymbolTable__jule_tuple_s_21b8c54de_Log {
	jule::Ptr<_1c0da1681_SymbolTable> __jule_result_arg0;
	jule::Slice<_21b8c54de_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1c0d0c6a8_Package__jule_tuple_s_21b8c54de_Log {
	jule::Ptr<_1c0d0c6a8_Package> __jule_result_arg0;
	jule::Slice<_21b8c54de_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1c0c5ca26_Ast__jule_tuple_s_21b8c54de_Log {
	jule::Ptr<_1c0c5ca26_Ast> __jule_result_arg0;
	jule::Slice<_21b8c54de_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1c0c49480_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1c0c49480_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1c0c49480_Token__jule_tuple_sx_1c0c49480_Token {
	jule::Slice<jule::Ptr<_1c0c49480_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_1c0c49480_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_1c0c49480_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_1c0c49480_Token>> __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_ssx_1c0c49480_Token__jule_tuple_s_21b8c54de_Log {
	jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>> __jule_result_arg0;
	jule::Slice<_21b8c54de_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline _234c76a64_StrBuilder static__234c76ec6_New(jule::I64);
inline void _234c7727e_Write(_234c76a64_StrBuilder*, jule::Slice<jule::U8>);
inline void _234c77537_WriteStr(_234c76a64_StrBuilder*, jule::Str);
inline void _234c777e0_WriteByte(_234c76a64_StrBuilder*, jule::U8);
inline jule::Str _234c77d2e_Str(_234c76a64_StrBuilder*);
inline void _234c7802c_Clear(_234c76a64_StrBuilder*);
inline jule::I64 _234c782b3_Len(_234c76a64_StrBuilder*);
inline jule::Slice<jule::U8> _234c787d0_Buf(_234c76a64_StrBuilder*);
inline void _234c78a88_SetBuf(_234c76a64_StrBuilder*, jule::Slice<jule::U8>);
inline jule::U8 _21b873ea4_index(_21b873a20_lazyBuff*, jule::I64);
inline void _21b87425c_append(_21b873a20_lazyBuff*, jule::U8);
inline jule::Str _21b8744e3_string(_21b873a20_lazyBuff*);
inline jule::Exceptional<jule::Slice<jule::Ptr<_234b095c8_DirEntry>>> static__21b8768ad_Read(jule::Str);
inline jule::VoidExceptional static__21b876ade_Create(jule::Str);
inline jule::VoidExceptional static__21b876d20_Remove(jule::Str);
inline jule::Ptr<_234b0aa5d_File> static__234b0ae7b_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_234b0aa5d_File>> static__234b0b245_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__234b0b50e_Read(jule::Str);
inline jule::VoidExceptional static__234b0b8a5_Write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::VoidExceptional _234b0c0e2_Close(_234b0aa5d_File*);
inline jule::Exceptional<jule::Ptr<_234b0aa5d_File>> static__234ba7b2c_Open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__234ba7d5d_Remove(jule::Str);
inline jule::Exceptional<jule::I64> _234ba82e2_Write(_234b0aa5d_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _234ba8633_Read(_234b0aa5d_File*, jule::Slice<jule::U8>);
inline jule::Bool _234b0d06b_IsDir(_234b0cb92_Status*);
inline jule::Bool _234b0d302_IsReg(_234b0cb92_Status*);
inline jule::U64 _234b0d588_Size(_234b0cb92_Status*);
inline jule::Exceptional<jule::Ptr<_234b0cb92_Status>> static__21b87777c_Of(jule::Str);
inline jule::Bool _2021ca3b3_set(_2021d3982_decimal*, jule::Slice<jule::U8>);
inline __jule_tuple_u64__jule_tuple_bool _2021ca704_floatBits(_2021d3982_decimal*, _2021c009a_floatInfo*);
inline void _2021d3d39_assign(_2021d3982_decimal*, jule::U64);
inline void _2021d40e2_shift(_2021d3982_decimal*, jule::I64);
inline void _2021d439a_roundDown(_2021d3982_decimal*, jule::I64);
inline void _2021d4653_roundUp(_2021d3982_decimal*, jule::I64);
inline void _2021d490b_round(_2021d3982_decimal*, jule::I64);
inline jule::U64 _2021d4b92_roundedInteger(_2021d3982_decimal*);
inline jule::Ptr<_2021e617b_Const> static__2021e65bb_NewI64(jule::I64);
inline jule::Ptr<_2021e617b_Const> static__2021e6885_NewU64(jule::U64);
inline jule::Ptr<_2021e617b_Const> static__2021e6b4e_NewBool(jule::Bool);
inline jule::Ptr<_2021e617b_Const> static__2021e6e18_NewStr(jule::Str);
inline jule::Ptr<_2021e617b_Const> static__2021e71d2_NewF64(jule::F64);
inline jule::Ptr<_2021e617b_Const> static__2021e73e1_NewNil(void);
inline jule::I64 _2021e7a51_ReadI64(_2021e617b_Const*);
inline jule::U64 _2021e7cd7_ReadU64(_2021e617b_Const*);
inline jule::Bool _2021e806d_ReadBool(_2021e617b_Const*);
inline jule::Str _2021e8304_ReadStr(_2021e617b_Const*);
inline jule::F64 _2021e858a_ReadF64(_2021e617b_Const*);
inline jule::I64 _2021e8821_AsI64(_2021e617b_Const*);
inline jule::U64 _2021e8aa7_AsU64(_2021e617b_Const*);
inline jule::F64 _2021e8d3d_AsF64(_2021e617b_Const*);
inline void _2021e90e6_SetI64(_2021e617b_Const*, jule::I64);
inline void _2021e939e_SetU64(_2021e617b_Const*, jule::U64);
inline void _2021e9657_SetBool(_2021e617b_Const*, jule::Bool);
inline void _2021e9910_SetStr(_2021e617b_Const*, jule::Str);
inline void _2021e9bb8_SetF64(_2021e617b_Const*, jule::F64);
inline jule::Bool _2021ea14c_IsI64(_2021e617b_Const*);
inline jule::Bool _2021ea3d3_IsU64(_2021e617b_Const*);
inline jule::Bool _2021ea669_IsBool(_2021e617b_Const*);
inline jule::Bool _2021ea900_IsStr(_2021e617b_Const*);
inline jule::Bool _2021eab86_IsF64(_2021e617b_Const*);
inline jule::Bool _2021eae1c_IsNil(_2021e617b_Const*);
inline jule::Bool _2021eb59e_And(_2021e617b_Const*, _2021e617b_Const);
inline jule::Bool _2021eb8e0_Or(_2021e617b_Const*, _2021e617b_Const);
inline jule::Bool _2021ecd86_Add(_2021e617b_Const*, _2021e617b_Const);
inline jule::Bool _2021ed1c7_Sub(_2021e617b_Const*, _2021e617b_Const);
inline jule::Bool _2021ed518_Mul(_2021e617b_Const*, _2021e617b_Const);
inline jule::Bool _2021ed859_Div(_2021e617b_Const*, _2021e617b_Const);
inline jule::Bool _2021edb9a_Mod(_2021e617b_Const*, _2021e617b_Const);
inline jule::Bool _2021ededb_BitwiseAnd(_2021e617b_Const*, _2021e617b_Const);
inline jule::Bool _2021ee32c_BitwiseOr(_2021e617b_Const*, _2021e617b_Const);
inline jule::Bool _2021ee66d_Xor(_2021e617b_Const*, _2021e617b_Const);
inline jule::Bool _2021ee9ae_Lshift(_2021e617b_Const*, _2021e617b_Const);
inline jule::Bool _2021eed00_Rshift(_2021e617b_Const*, _2021e617b_Const);
inline jule::U8 _1c0c49804_Prec(_1c0c49480_Token*);
inline void _1c0c50134_Fill(_1c0c4ec16_File*, jule::Slice<jule::U8>);
inline jule::Str _1c0c503ba_Dir(_1c0c4ec16_File*);
inline jule::Str _1c0c50651_Name(_1c0c4ec16_File*);
inline jule::Str _1c0c50c28_GetRow(_1c0c4ec16_File*, jule::I64);
inline void _1c0c583d4_pushErr(_1c0c57d51_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _1c0c58945_lex(_1c0c57d51_lex*);
inline jule::Str _1c0c58c86_id(_1c0c57d51_lex*, jule::Slice<jule::U8>*);
inline jule::Slice<jule::U8> _1c0c5901c_resume(_1c0c57d51_lex*);
inline void _1c0c592c5_lexLineComment(_1c0c57d51_lex*, jule::Ptr<_1c0c49480_Token>*);
inline void _1c0c5957d_lexRangeComment(_1c0c57d51_lex*, jule::Ptr<_1c0c49480_Token>*);
inline jule::Str _1c0c598be_num(_1c0c57d51_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1c0c59c10_escapeSeq(_1c0c57d51_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1c0c5a10b_getRune(_1c0c57d51_lex*, jule::Slice<jule::U8>*, jule::Bool);
inline jule::Str _1c0c5a44c_lexRune(_1c0c57d51_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1c0c5a6d3_lexStr(_1c0c57d51_lex*);
inline void _1c0c5ab67_newLine(_1c0c57d51_lex*);
inline jule::Bool _1c0c5b1c8_isOp(_1c0c57d51_lex*, jule::Slice<jule::U8>*, jule::Str, jule::U64, jule::Ptr<_1c0c49480_Token>*);
inline jule::Bool _1c0c5b5c4_lexBasicOps(_1c0c57d51_lex*, jule::Slice<jule::U8>, jule::Ptr<_1c0c49480_Token>*);
inline jule::Bool _1c0c5b9c0_lexId(_1c0c57d51_lex*, jule::Slice<jule::U8>*, jule::Ptr<_1c0c49480_Token>*);
inline jule::Bool _1c0c5bdbb_lexNum(_1c0c57d51_lex*, jule::Slice<jule::U8>*, jule::Ptr<_1c0c49480_Token>*);
inline jule::Ptr<_1c0c49480_Token> _1c0c5c152_token(_1c0c57d51_lex*);
inline jule::Bool _1c0c617c7_IsUnsafe(_1c0c61464_PtrTypeDecl*);
inline jule::Bool _1c0c62069_AutoSized(_1c0c61c06_ArrTypeDecl*);
inline jule::Bool _1c0c67d1c_Unhandled(_1c0c67998_FnCallExpr*);
inline jule::Bool _1c0c680a3_Ignored(_1c0c67998_FnCallExpr*);
inline jule::Bool _1c0c7051c_IsSelf(_1c0c70198_ParamDecl*);
inline jule::Bool _1c0c7195d_IsAnon(_1c0c715ea_FnDecl*);
inline jule::Bool _1c0c73762_IsInf(_1c0c733ee_Iter*);
inline jule::Bool _1c0c7408c_IsWhileNext(_1c0c73c29_WhileKind*);
inline jule::Ptr<_1c0c829a2_FieldIns> _1c0c7cc55_instance(jule::Ptr<_1c0c7c89d_Field>);
inline jule::Ptr<_1c0c83552_StructIns> _1c0c80c36_instance(jule::Ptr<_1c0c807c4_Struct>);
inline jule::Ptr<_1c0c83552_StructIns> _1c0c81044_appendInstance(_1c0c807c4_Struct*, jule::Ptr<_1c0c83552_StructIns>*);
inline jule::Ptr<_1c0c95795_Fn> _1c0c81440_FindMethod(_1c0c807c4_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0d4dde2_Var> _1c0c81781_FindStatic(_1c0c807c4_Struct*, jule::Str);
inline jule::Ptr<_1c0c7c89d_Field> _1c0c81ac2_FindField(_1c0c807c4_Struct*, jule::Str);
inline jule::Bool _1c0c81e13_IsImplements(_1c0c807c4_Struct*, jule::Ptr<_1c0ca8a72_Trait>);
inline jule::Bool _1c0c82254_IsUses(_1c0c807c4_Struct*, jule::Ptr<_1c0c807c4_Struct>);
inline jule::Ptr<_1c0c976ed_ParamIns> _1c0c94156_instance(jule::Ptr<_1c0c93cc1_Param>);
inline jule::Bool _1c0c943dc_IsSelf(_1c0c93cc1_Param*);
inline jule::Bool _1c0c94673_IsRef(_1c0c93cc1_Param*);
inline jule::Bool _1c0c95c18_IsVoid(_1c0c95795_Fn*);
inline jule::Bool _1c0c95e9e_IsMethod(_1c0c95795_Fn*);
inline jule::Bool _1c0c96235_IsEntryPoint(_1c0c95795_Fn*);
inline jule::Bool _1c0c964bb_IsInit(_1c0c95795_Fn*);
inline jule::Bool _1c0c96752_IsAnon(_1c0c95795_Fn*);
inline jule::Bool _1c0c969d8_AnyVar(_1c0c95795_Fn*);
inline jule::Ptr<_1c0c98699_FnIns> _1c0c96c6e_instanceForce(jule::Ptr<_1c0c95795_Fn>);
inline jule::Ptr<_1c0c98699_FnIns> _1c0c97005_instance(jule::Ptr<_1c0c95795_Fn>);
inline jule::Ptr<_1c0c98699_FnIns> _1c0c97313_appendInstance(_1c0c95795_Fn*, jule::Ptr<_1c0c98699_FnIns>*);
inline jule::Str _1c0c97a61_Str(_1c0c976ed_ParamIns*);
inline jule::Str _1c0c989da_Str(_1c0c98699_FnIns*);
inline jule::Bool _1c0c98d2b_Equal(jule::Ptr<_1c0c98699_FnIns>, jule::Ptr<_1c0dd7de3_TypeKind>);
inline jule::Bool _1c0c992c1_EqualFn(jule::Ptr<_1c0c98699_FnIns>, jule::Ptr<_1c0c98699_FnIns>*);
inline jule::Bool _1c0c99612_equalTrait(jule::Ptr<_1c0c98699_FnIns>, jule::Ptr<_1c0c98699_FnIns>*);
inline jule::Slice<jule::Ptr<_1c0dd7de3_TypeKind>> _1c0c99898_Types(_1c0c98699_FnIns*);
inline jule::Bool _1c0c99b2e_IsBuiltin(_1c0c98699_FnIns*);
inline jule::Bool _1c0c99db5_IsAnon(_1c0c98699_FnIns*);
inline jule::Bool _1c0c9a206_Same(_1c0c98699_FnIns*, jule::Ptr<_1c0c98699_FnIns>);
inline jule::Str _1c0c9a547_GetKindStr(_1c0c98699_FnIns*, jule::Bool);
inline jule::Ptr<_1c0c9b878_ReferenceStack> static__1c0c9bb64_new(void);
inline jule::I64 _1c0c9c060_Len(_1c0c9b878_ReferenceStack*);
inline jule::Any _1c0c9c3a1_At(_1c0c9b878_ReferenceStack*, jule::I64);
inline void _1c0c9c659_Push(_1c0c9b878_ReferenceStack*, jule::Any);
inline jule::Bool _1c44535c0_Exist(_1c0c9b878_ReferenceStack*, jule::Ptr<_1c0c98699_FnIns>);
inline jule::Bool _1c4469927_Exist(_1c0c9b878_ReferenceStack*, jule::Ptr<_1c0d4dde2_Var>);
inline jule::Bool _1c452e756_Exist(_1c0c9b878_ReferenceStack*, jule::Ptr<_1c0c83552_StructIns>);
inline jule::Bool _1c5ac657c_Exist(_1c0c9b878_ReferenceStack*, jule::Ptr<_1c0ca8a72_Trait>);
inline void _1c0ca32db_pushErr(_1c0ca283a_symbolBuilder*, jule::Ptr<_1c0c49480_Token>*, jule::Str, jule::Slice<jule::Any>);
inline void _1c0ca3a6c_pushSuggestion(_1c0ca283a_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c0ca3e68_checkCppUseDeclPath(_1c0ca283a_symbolBuilder*, jule::Ptr<_1c0c77a41_UseDecl>*, jule::Str*);
inline jule::Ptr<_1c0d09782_ImportInfo> _1c0ca4276_buildCppHeaderImport(_1c0ca283a_symbolBuilder*, jule::Ptr<_1c0c77a41_UseDecl>*);
inline jule::Ptr<_1c0d09782_ImportInfo> _1c0ca45b7_buildStdImport(_1c0ca283a_symbolBuilder*, jule::Ptr<_1c0c77a41_UseDecl>*);
inline jule::Ptr<_1c0d09782_ImportInfo> _1c0ca4908_buildIdentImport(jule::Ptr<_1c0ca283a_symbolBuilder>, jule::Ptr<_1c0c77a41_UseDecl>*);
inline jule::Ptr<_1c0d09782_ImportInfo> _1c0ca4c49_buildImport(jule::Ptr<_1c0ca283a_symbolBuilder>, jule::Ptr<_1c0c77a41_UseDecl>*);
inline jule::Bool _1c0ca508a_checkDuplicateUseDecl(_1c0ca283a_symbolBuilder*, jule::Ptr<_1c0d09782_ImportInfo>*);
inline void _1c0ca53ed_implImportSelections(_1c0ca283a_symbolBuilder*, jule::Ptr<_1c0d09782_ImportInfo>*, jule::Ptr<_1c0c77a41_UseDecl>*);
inline jule::Str _1c0ca573e_getAsLinkPath(jule::Ptr<_1c0ca283a_symbolBuilder>, jule::Str);
inline void _1c0ca5b5c_pushCycleError(jule::Ptr<_1c0ca283a_symbolBuilder>, jule::Ptr<_1c0ca283a_symbolBuilder>*, jule::Str, _234c76a64_StrBuilder*);
inline void _1c0ca607a_pushCrossCycleError(jule::Ptr<_1c0ca283a_symbolBuilder>, jule::Ptr<_1c0ca283a_symbolBuilder>*, jule::Ptr<_1c0d09782_ImportInfo>*, jule::Ptr<_1c0c49480_Token>*);
inline jule::Bool _1c0ca6476_checkImportCycles(jule::Ptr<_1c0ca283a_symbolBuilder>, jule::Ptr<_1c0d09782_ImportInfo>, jule::Ptr<_1c0c77a41_UseDecl>*);
inline void _1c0ca6894_checkPackageAccessibility(_1c0ca283a_symbolBuilder*, jule::Ptr<_1c0c77a41_UseDecl>*, jule::Str*, jule::Str*);
inline jule::Bool _1c0ca6c90_importPackage(jule::Ptr<_1c0ca283a_symbolBuilder>, jule::Ptr<_1c0d09782_ImportInfo>*, jule::Ptr<_1c0c77a41_UseDecl>*);
inline jule::Ptr<_1c0d09782_ImportInfo> _1c0ca70d1_importUseDecl(jule::Ptr<_1c0ca283a_symbolBuilder>, jule::Ptr<_1c0c77a41_UseDecl>*);
inline void _1c0ca72ce_importUseDecls(jule::Ptr<_1c0ca283a_symbolBuilder>);
inline void _1c0ca7587_appendNode(_1c0ca283a_symbolBuilder*, _1c0c5d939_Node*);
inline void _1c0ca7785_appendNodes(_1c0ca283a_symbolBuilder*);
inline void _1c0ca7a3d_pushDirectivePass(_1c0ca283a_symbolBuilder*, jule::Ptr<_1c0c5dd57_Directive>*);
inline void _1c0ca7c3b_appendTopDirectives(_1c0ca283a_symbolBuilder*);
inline void _1c0ca7e39_build(jule::Ptr<_1c0ca283a_symbolBuilder>);
inline jule::Str _1c0ca8e3a_Str(_1c0ca8a72_Trait*);
inline jule::Bool _1c0ca927b_Equal(jule::Ptr<_1c0ca8a72_Trait>, jule::Ptr<_1c0dd7de3_TypeKind>);
inline jule::Ptr<_1c0c95795_Fn> _1c0ca9721_FindMethod(_1c0ca8a72_Trait*, jule::Str);
inline jule::Ptr<_1c0c95795_Fn> _1c0ca9da3_findMethodInherit(_1c0ca8a72_Trait*, jule::Str*);
inline jule::Bool _1c0caaab8_AutoExpr(_1c0caa711_EnumItem*);
inline jule::Str _1c0cab602_Str(_1c0cab27d_Enum*);
inline jule::Bool _1c0cab943_Equal(jule::Ptr<_1c0cab27d_Enum>, jule::Ptr<_1c0dd7de3_TypeKind>);
inline jule::Ptr<_1c0caa711_EnumItem> _1c0cabd72_FindItem(_1c0cab27d_Enum*, jule::Str);
inline jule::Str _1c0caccc9_Str(_1c0cac988_TypeEnum*);
inline jule::Bool _1c0cad11a_Equal(jule::Ptr<_1c0cac988_TypeEnum>, jule::Ptr<_1c0dd7de3_TypeKind>);
inline jule::Ptr<_1c0cac3b1_TypeEnumItem> _1c0cad549_FindItem(_1c0cac988_TypeEnum*, jule::Str);
inline jule::Str _1c0cb0e64_Str(_1c0cb0ae0_comptimeRange*);
inline jule::Bool _1c0cb12a5_Equal(jule::Ptr<_1c0cb0ae0_comptimeRange>, jule::Ptr<_1c0dd7de3_TypeKind>);
inline jule::Str _1c0cb197b_Str(_1c0cb15b3_comptimeStructField*);
inline jule::Bool _1c0cb1cbc_Equal(jule::Ptr<_1c0cb15b3_comptimeStructField>, jule::Ptr<_1c0dd7de3_TypeKind>);
inline jule::Ptr<_1c0da69e9_Data> _1c0cb2361__Name(jule::Ptr<_1c0cb15b3_comptimeStructField>, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0cb275c__Type(jule::Ptr<_1c0cb15b3_comptimeStructField>, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0cb2b58__Public(jule::Ptr<_1c0cb15b3_comptimeStructField>, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0cb2e66_subIdent(jule::Ptr<_1c0cb15b3_comptimeStructField>, jule::Str*);
inline jule::Str _1c0cb35e8_Str(_1c0cb3274_comptimeStructFields*);
inline jule::Bool _1c0cb3939_Equal(jule::Ptr<_1c0cb3274_comptimeStructFields>, jule::Ptr<_1c0dd7de3_TypeKind>);
inline void _1c0cb3dac_ready(_1c0cb3274_comptimeStructFields*, jule::Ptr<_1c0d4dde2_Var>*, jule::Ptr<_1c0d4dde2_Var>*);
inline void _1c0cb42ca_step(_1c0cb3274_comptimeStructFields*, jule::I64, jule::Ptr<_1c0d4dde2_Var>*, jule::Ptr<_1c0d4dde2_Var>*);
inline jule::I64 _1c0cb4561_len(_1c0cb3274_comptimeStructFields*);
inline jule::Str _1c0cb4be3_Str(_1c0cb486e_comptimeStatic*);
inline jule::Bool _1c0cb5034_Equal(jule::Ptr<_1c0cb486e_comptimeStatic>, jule::Ptr<_1c0dd7de3_TypeKind>);
inline jule::Ptr<_1c0da69e9_Data> _1c0cb5661__Name(jule::Ptr<_1c0cb486e_comptimeStatic>, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0cb5a5c__Type(jule::Ptr<_1c0cb486e_comptimeStatic>, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0cb5e58__Public(jule::Ptr<_1c0cb486e_comptimeStatic>, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0cb6299_subIdent(jule::Ptr<_1c0cb486e_comptimeStatic>, jule::Str*);
inline jule::Str _1c0cb68a4_Str(_1c0cb6530_comptimeStatics*);
inline jule::Bool _1c0cb6be5_Equal(jule::Ptr<_1c0cb6530_comptimeStatics>, jule::Ptr<_1c0dd7de3_TypeKind>);
inline void _1c0cb7168_ready(_1c0cb6530_comptimeStatics*, jule::Ptr<_1c0d4dde2_Var>*, jule::Ptr<_1c0d4dde2_Var>*);
inline void _1c0cb7586_step(_1c0cb6530_comptimeStatics*, jule::I64, jule::Ptr<_1c0d4dde2_Var>*, jule::Ptr<_1c0d4dde2_Var>*);
inline jule::I64 _1c0cb781c_len(_1c0cb6530_comptimeStatics*);
inline jule::Str _1c0cb80ae_Str(_1c0cb7b2a_comptimeEnumField*);
inline jule::Bool _1c0cb8400_Equal(jule::Ptr<_1c0cb7b2a_comptimeEnumField>, jule::Ptr<_1c0dd7de3_TypeKind>);
inline jule::Ptr<_1c0da69e9_Data> _1c0cb8873__Name(jule::Ptr<_1c0cb7b2a_comptimeEnumField>, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0cb8bb4_subIdent(jule::Ptr<_1c0cb7b2a_comptimeEnumField>, jule::Str*);
inline jule::Str _1c0cb9346_Str(_1c0cb8ec2_comptimeEnumFields*);
inline jule::Bool _1c0cb9687_Equal(jule::Ptr<_1c0cb8ec2_comptimeEnumFields>, jule::Ptr<_1c0dd7de3_TypeKind>);
inline void _1c0cb9b0a_ready(_1c0cb8ec2_comptimeEnumFields*, jule::Ptr<_1c0d4dde2_Var>*, jule::Ptr<_1c0d4dde2_Var>*);
inline void _1c0cba028_step(_1c0cb8ec2_comptimeEnumFields*, jule::I64, jule::Ptr<_1c0d4dde2_Var>*, jule::Ptr<_1c0d4dde2_Var>*);
inline jule::I64 _1c0cba2ae_len(_1c0cb8ec2_comptimeEnumFields*);
inline jule::Str _1c0cba941_Str(_1c0cba5bc_comptimeParam*);
inline jule::Bool _1c0cbac82_Equal(jule::Ptr<_1c0cba5bc_comptimeParam>, jule::Ptr<_1c0dd7de3_TypeKind>);
inline jule::Ptr<_1c0da69e9_Data> _1c0cbb4e1__Name(jule::Ptr<_1c0cba5bc_comptimeParam>, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0cbb8dc__Type(jule::Ptr<_1c0cba5bc_comptimeParam>, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0cbbcd8__Variadic(jule::Ptr<_1c0cba5bc_comptimeParam>, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0cbc1d4__Reference(jule::Ptr<_1c0cba5bc_comptimeParam>, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0cbc525_subIdent(jule::Ptr<_1c0cba5bc_comptimeParam>, jule::Str*);
inline jule::Str _1c0cbca97_Str(_1c0cbc756_comptimeParams*);
inline jule::Bool _1c0cbcdd8_Equal(jule::Ptr<_1c0cbc756_comptimeParams>, jule::Ptr<_1c0dd7de3_TypeKind>);
inline void _1c0cbd35b_ready(_1c0cbc756_comptimeParams*, jule::Ptr<_1c0d4dde2_Var>*, jule::Ptr<_1c0d4dde2_Var>*);
inline void _1c0cbd779_step(_1c0cbc756_comptimeParams*, jule::I64, jule::Ptr<_1c0d4dde2_Var>*, jule::Ptr<_1c0d4dde2_Var>*);
inline jule::I64 _1c0cbda10_len(_1c0cbc756_comptimeParams*);
inline jule::Str _1c0cbe192_Str(_1c0cbdd1d_comptimeTypeInfos*);
inline jule::Bool _1c0cbe4d3_Equal(jule::Ptr<_1c0cbdd1d_comptimeTypeInfos>, jule::Ptr<_1c0dd7de3_TypeKind>);
inline void _1c0cbe956_ready(_1c0cbdd1d_comptimeTypeInfos*, jule::Ptr<_1c0d4dde2_Var>*, jule::Ptr<_1c0d4dde2_Var>*);
inline void _1c0cbed74_step(_1c0cbdd1d_comptimeTypeInfos*, jule::I64, jule::Ptr<_1c0d4dde2_Var>*, jule::Ptr<_1c0d4dde2_Var>*);
inline jule::I64 _1c0cc010a_len(_1c0cbdd1d_comptimeTypeInfos*);
inline jule::Str _1c0cc078c_Str(_1c0cc0418_comptimeTypeInfo*);
inline jule::Bool _1c0cc0acd_Equal(jule::Ptr<_1c0cc0418_comptimeTypeInfo>, jule::Ptr<_1c0dd7de3_TypeKind>);
inline jule::Ptr<_1c0da69e9_Data> _1c0cc122c__Str(jule::Ptr<_1c0cc0418_comptimeTypeInfo>, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0cc1628__Kind(jule::Ptr<_1c0cc0418_comptimeTypeInfo>, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0cc1a24__Bits(jule::Ptr<_1c0cc0418_comptimeTypeInfo>, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0cc1e20__Elem(jule::Ptr<_1c0cc0418_comptimeTypeInfo>, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0cc231b__Size(jule::Ptr<_1c0cc0418_comptimeTypeInfo>, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0cc2717__Key(jule::Ptr<_1c0cc0418_comptimeTypeInfo>, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0cc2b13__Value(jule::Ptr<_1c0cc0418_comptimeTypeInfo>, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0cc300e__Fields(jule::Ptr<_1c0cc0418_comptimeTypeInfo>, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0cc340a__Statics(jule::Ptr<_1c0cc0418_comptimeTypeInfo>, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0cc3806__Public(jule::Ptr<_1c0cc0418_comptimeTypeInfo>, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0cc3c02__Binded(jule::Ptr<_1c0cc0418_comptimeTypeInfo>, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0cc40ed__Ordered(jule::Ptr<_1c0cc0418_comptimeTypeInfo>, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0cc44e9__Comparable(jule::Ptr<_1c0cc0418_comptimeTypeInfo>, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0cc48e5__Mutable(jule::Ptr<_1c0cc0418_comptimeTypeInfo>, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0cc4ce1__Types(jule::Ptr<_1c0cc0418_comptimeTypeInfo>, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0cc51dc__Exceptional(jule::Ptr<_1c0cc0418_comptimeTypeInfo>, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0cc55d8__CanNil(jule::Ptr<_1c0cc0418_comptimeTypeInfo>, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0cc59d4__RC(jule::Ptr<_1c0cc0418_comptimeTypeInfo>, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0cc5dd0__Result(jule::Ptr<_1c0cc0418_comptimeTypeInfo>, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0cc62cb__Params(jule::Ptr<_1c0cc0418_comptimeTypeInfo>, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0cc661c_subIdent(jule::Ptr<_1c0cc0418_comptimeTypeInfo>, jule::Str*);
inline jule::Str _1c0cc6c9e_Str(_1c0cc692a_comptimeValue*);
inline jule::Bool _1c0cc70e0_Equal(jule::Ptr<_1c0cc692a_comptimeValue>, jule::Ptr<_1c0dd7de3_TypeKind>);
inline jule::Ptr<_1c0da69e9_Data> _1c0cc7640__Unwrap(jule::Ptr<_1c0cc692a_comptimeValue>, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0cc7a3b__Type(jule::Ptr<_1c0cc692a_comptimeValue>, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0cc7e37__Lvalue(jule::Ptr<_1c0cc692a_comptimeValue>, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0cc8333__Mutable(jule::Ptr<_1c0cc692a_comptimeValue>, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0cc872e__Const(jule::Ptr<_1c0cc692a_comptimeValue>, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0cc8b2a__Field(jule::Ptr<_1c0cc692a_comptimeValue>, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0cc8e6b_subIdent(jule::Ptr<_1c0cc692a_comptimeValue>, jule::Str*);
inline jule::Str _1c0cc95ed_Str(_1c0cc9279_comptimeFiles*);
inline jule::Bool _1c0cc993e_Equal(jule::Ptr<_1c0cc9279_comptimeFiles>, jule::Ptr<_1c0dd7de3_TypeKind>);
inline void _1c0cc9db2_ready(_1c0cc9279_comptimeFiles*, jule::Ptr<_1c0d4dde2_Var>*, jule::Ptr<_1c0d4dde2_Var>*);
inline void _1c0cca2d0_step(_1c0cc9279_comptimeFiles*, jule::I64, jule::Ptr<_1c0d4dde2_Var>*, jule::Ptr<_1c0d4dde2_Var>*);
inline jule::I64 _1c0cca566_len(_1c0cc9279_comptimeFiles*);
inline jule::Str _1c0ccae29_Str(_1c0cca874_comptimeFile*);
inline jule::Bool _1c0ccb26a_Equal(jule::Ptr<_1c0cca874_comptimeFile>, jule::Ptr<_1c0dd7de3_TypeKind>);
inline jule::Ptr<_1c0da69e9_Data> _1c0ccb677__Path(jule::Ptr<_1c0cca874_comptimeFile>, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0ccba73__Name(jule::Ptr<_1c0cca874_comptimeFile>, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0ccbe6e__Dir(jule::Ptr<_1c0cca874_comptimeFile>, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0ccc2b0_subIdent(jule::Ptr<_1c0cca874_comptimeFile>, jule::Str*);
inline jule::Fn<jule::Bool,jule::Ptr<_1c0d2b078_Sema>*,jule::Slice<jule::Ptr<_1c0dd7101_TypeAlias>>*> _1c0cd0280_readyFn(jule::Ptr<_1c0cced84_constraintChecker>);
inline jule::Bool _1c0cd0516_readyFi(jule::Ptr<_1c0cced84_constraintChecker>);
inline jule::Bool _1c0cd079c_readySi(jule::Ptr<_1c0cced84_constraintChecker>);
inline jule::Bool _1c0cd0a33_ready(jule::Ptr<_1c0cced84_constraintChecker>);
inline jule::Bool _1c0cd0cb9_check(jule::Ptr<_1c0cced84_constraintChecker>);
inline jule::Bool _1c0cd25a1_IsTraitImpl(_1c0cd21d8_Impl*);
inline jule::Bool _1c0cd2837_IsStructImpl(_1c0cd21d8_Impl*);
inline jule::Ptr<_1c0d09782_ImportInfo> _1c0ce0092_SelectPackage(_1c0cdeaec_scopeChecker*, jule::Fn<jule::Bool,jule::Ptr<_1c0d09782_ImportInfo>>);
inline jule::Ptr<_1c0d4dde2_Var> _1c0ce048d_FindVar(_1c0cdeaec_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0dd7101_TypeAlias> _1c0ce0889_FindTypeAlias(_1c0cdeaec_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0c807c4_Struct> _1c0ce0c85_FindStruct(_1c0cdeaec_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0c95795_Fn> _1c0ce1181_FindFn(_1c0cdeaec_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0ca8a72_Trait> _1c0ce14c2_FindTrait(_1c0cdeaec_scopeChecker*, jule::Str);
inline jule::Ptr<_1c0cab27d_Enum> _1c0ce1813_FindEnum(_1c0cdeaec_scopeChecker*, jule::Str);
inline jule::Ptr<_1c0cac988_TypeEnum> _1c0ce1b54_FindTypeEnum(_1c0cdeaec_scopeChecker*, jule::Str);
inline jule::Bool _1c0ce1ea6_isUnsafe(jule::Ptr<_1c0cdeaec_scopeChecker>);
inline jule::Bool _1c0ce223c_isRoot(_1c0cdeaec_scopeChecker*);
inline void _1c0ce243a_stop(_1c0cdeaec_scopeChecker*);
inline jule::Bool _1c0ce26c1_stopped(_1c0cdeaec_scopeChecker*);
inline jule::Bool _1c0ce2957_isDeferred(jule::Ptr<_1c0cdeaec_scopeChecker>);
inline void _1c0ce2c10_pushCaptured(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0d4dde2_Var>*);
inline jule::Ptr<_1c0cdeaec_scopeChecker> _1c0ce2e96_getRoot(jule::Ptr<_1c0cdeaec_scopeChecker>);
inline jule::Ptr<_1c0cdeaec_scopeChecker> _1c0ce322c_getHardRoot(jule::Ptr<_1c0cdeaec_scopeChecker>);
inline jule::Ptr<_1c0d4dde2_Var> _1c0ce3628_findVar(_1c0cdeaec_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0cd9ed2_Label> _1c0ce3969_findLabel(_1c0cdeaec_scopeChecker*, jule::Str*);
inline jule::Ptr<_1c0cdd579_scopeLabel> _1c0ce3caa_findLabelScope(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Str*);
inline jule::Ptr<_1c0cdd579_scopeLabel> _1c0ce40eb_findLabelAll(_1c0cdeaec_scopeChecker*, jule::Str*);
inline jule::Bool _1c0ce44e7_isDuplicatedIdent(_1c0cdeaec_scopeChecker*, jule::Uintptr, jule::Str*);
inline void _1c0ce47a0_checkVarDecl(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0c727a5_VarDecl>);
inline void _1c0ce4a58_checkTypeAlias(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0dd7101_TypeAlias>*);
inline void _1c0ce4d11_checkTypeAliasDecl(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0c76457_TypeAliasDecl>);
inline jule::Ptr<_1c0cd763e_Scope> _1c0ce5097_getChild(_1c0cdeaec_scopeChecker*);
inline void _1c0ce54b5_checkChildSsc(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0c6e95b_ScopeTree>*, jule::Ptr<_1c0cd763e_Scope>*, jule::Ptr<_1c0cdeaec_scopeChecker>*);
inline jule::Ptr<_1c0cd763e_Scope> _1c0ce58b1_checkChildSc(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0c6e95b_ScopeTree>*, jule::Ptr<_1c0cdeaec_scopeChecker>*);
inline jule::Ptr<_1c0cd763e_Scope> _1c0ce5c02_checkChild(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0c6e95b_ScopeTree>*);
inline void _1c0ce5eaa_checkAnonScope(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0c6e95b_ScopeTree>);
inline void _1c0ce631d_processErrorCall(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0c91230_BuiltinErrorCallExprModel>*, jule::Ptr<_1c0c49480_Token>);
inline void _1c0ce65c6_checkExpr(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0c63c6e_Expr>);
inline jule::Ptr<_1c0cd7a5c_If> _1c0ce6917_checkIf(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0c7538a_If>);
inline jule::Ptr<_1c0cd7d59_Else> _1c0ce6c58_checkElse(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0c75764_Else>);
inline void _1c0ce7011_checkConditional(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0c75c1a_Conditional>);
inline void _1c0ce74d9_checkIterScopeSsc(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Uintptr, jule::Ptr<_1c0c6e95b_ScopeTree>, jule::Ptr<_1c0cd763e_Scope>*, jule::Ptr<_1c0cdeaec_scopeChecker>);
inline jule::Ptr<_1c0cd763e_Scope> _1c0ce7990_checkIterScopeSc(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Uintptr, jule::Ptr<_1c0c6e95b_ScopeTree>, jule::Ptr<_1c0cdeaec_scopeChecker>);
inline jule::Ptr<_1c0cd763e_Scope> _1c0ce7d8b_checkIterScope(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Uintptr, jule::Ptr<_1c0c6e95b_ScopeTree>*);
inline void _1c0ce8144_checkInfIter(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0c733ee_Iter>*);
inline void _1c0ce83ec_checkWhileIter(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0c733ee_Iter>*);
inline void _1c0ce881a_checkComptimeRangeIter(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0c733ee_Iter>*, jule::Ptr<_1c0cd9476_RangeIter>*, jule::Ptr<_1c0da69e9_Data>*);
inline void _1c0ce8ac3_checkRangeIter(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0c733ee_Iter>*);
inline void _1c0ce8d7b_checkIter(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0c733ee_Iter>);
inline jule::Bool _1c0ce91bc_checkValidContLabel(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Uintptr);
inline jule::Bool _1c0ce950d_checkValidBreakLabel(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_1c0cd980b_ContSt> _1c0ce984e_checkContValidScope(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0c74dd4_ContSt>);
inline void _1c0ce9b07_checkCont(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0c74dd4_ContSt>);
inline void _1c0ce9db0_checkLabel(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0c6c01e_LabelSt>);
inline void _1c0cea168_pushGoto(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0c6c3e8_GotoSt>);
inline void _1c0cea421_checkPostfix(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0c6d3d8_AssignSt>);
inline jule::Bool _1c0cea762_isNewAssignIdent(_1c0cdeaec_scopeChecker*, jule::Str);
inline void _1c0ceaa1a_removeInteriorMutRisk(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0da69e9_Data>*);
inline jule::Bool _1c0ceaec1_checkStructureAssignOp(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0c83552_StructIns>*, jule::Ptr<_1c0c6d3d8_AssignSt>*, jule::Ptr<_1c0da69e9_Data>*);
inline void _1c0ceb279_checkSingleAssign(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0c6d3d8_AssignSt>*);
inline void _1c0ceb80c_processEndPartOfMultiAssign(_1c0cdeaec_scopeChecker*, jule::Ptr<_1c0cdb1e2_MultiAssign>*, jule::Ptr<_1c0c6d3d8_AssignSt>*, jule::Ptr<_1c0c6cd55_AssignLeft>*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0da69e9_Data>*);
inline void _1c0cebab5_checkMultiAssign(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0c6d3d8_AssignSt>*);
inline void _1c0cebd6d_checkAssignSt(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0c6d3d8_AssignSt>);
inline jule::Ptr<_1c0cd763e_Scope> _1c0cec269_checkCaseScope(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0cdc37a_Case>*, jule::Ptr<_1c0c6e95b_ScopeTree>*);
inline jule::Ptr<_1c0cdc37a_Case> _1c0cec7ca_checkCase(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0cdb852_Match>, jule::I64, jule::Ptr<_1c0c7690d_Case>, jule::Ptr<_1c0da69e9_Data>);
inline void _1c0cecbe8_checkCases(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0c77227_MatchCase>*, jule::Ptr<_1c0cdb852_Match>, jule::Ptr<_1c0da69e9_Data>);
inline jule::Ptr<_1c0cdc37a_Case> _1c0ced0e4_checkDefault(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0cdb852_Match>, jule::Ptr<_1c0c75764_Else>);
inline void _1c0ced457_checkComptimePanic(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0c49480_Token>, jule::Ptr<_1c0cd763e_Scope>*);
inline void _1c0ced7ba_processConstMatch(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0cdb852_Match>*, jule::Ptr<_1c0c77227_MatchCase>*);
inline void _1c0ceda73_checkTypeMatch(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0c77227_MatchCase>*);
inline void _1c0cedd2b_checkCommonMatch(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0c77227_MatchCase>*);
inline void _1c0cee0d4_checkMatch(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0c77227_MatchCase>);
inline void _1c0cee38c_checkFall(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0c6c6e5_FallSt>);
inline jule::Ptr<_1c0cd9bd5_BreakSt> _1c0cee6cd_checkBreakWithLabel(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0c74a0a_BreakSt>);
inline jule::Ptr<_1c0cd9bd5_BreakSt> _1c0ceea1e_checkPlainBreak(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0c74a0a_BreakSt>);
inline void _1c0ceecc7_checkBreak(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0c74a0a_BreakSt>);
inline void _1c0d00080_checkRet(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0c72b7e_RetSt>);
inline void _1c0d00338_checkUseExpr(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0c64643_UseExpr>);
inline void _1c0d005e1_checkNode(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Any*);
inline void _1c0d007de_checkResult(jule::Ptr<_1c0cdeaec_scopeChecker>);
inline void _1c0d009dc_checkTree(jule::Ptr<_1c0cdeaec_scopeChecker>);
inline void _1c0d00d50_checkGoto(_1c0cdeaec_scopeChecker*, jule::Ptr<_1c0cddb0c_scopeGoto>*, jule::Ptr<_1c0cdd579_scopeLabel>*);
inline void _1c0d0104d_checkGotos(_1c0cdeaec_scopeChecker*);
inline void _1c0d0124b_checkLabels(_1c0cdeaec_scopeChecker*);
inline void _1c0d01449_checkVars(_1c0cdeaec_scopeChecker*);
inline void _1c0d01647_checkAliases(_1c0cdeaec_scopeChecker*);
inline void _1c0d019aa_check(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0c6e95b_ScopeTree>*, jule::Ptr<_1c0cd763e_Scope>*);
inline jule::Ptr<_1c0cdeaec_scopeChecker> _1c0d01c41_newChildChecker(jule::Ptr<_1c0cdeaec_scopeChecker>);
inline void _1c0d036e3_checkCdef(_1c0d032d6_directiveChecker*, jule::Ptr<_1c0c5dd57_Directive>*);
inline void _1c0d0399b_checkTypedef(_1c0d032d6_directiveChecker*, jule::Ptr<_1c0c5dd57_Directive>*);
inline void _1c0d03c54_checkNamespace(_1c0d032d6_directiveChecker*, jule::Ptr<_1c0c5dd57_Directive>*);
inline void _1c0d0400c_checkDeprecated(_1c0d032d6_directiveChecker*, jule::Ptr<_1c0c5dd57_Directive>*);
inline void _1c0d042b5_checkTest(_1c0d032d6_directiveChecker*, jule::Ptr<_1c0c5dd57_Directive>*);
inline void _1c0d0456d_checkDirective(_1c0d032d6_directiveChecker*, jule::Ptr<_1c0c5dd57_Directive>*);
inline void _1c0d0476b_check(_1c0d032d6_directiveChecker*);
inline jule::Ptr<_1c0d09782_ImportInfo> _1c0d09c6b_SelectPackage(_1c0d09782_ImportInfo*, jule::Fn<jule::Bool,jule::Ptr<_1c0d09782_ImportInfo>>);
inline jule::Ptr<_1c0d4dde2_Var> _1c0d0a167_FindVar(_1c0d09782_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0dd7101_TypeAlias> _1c0d0a563_FindTypeAlias(_1c0d09782_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0c807c4_Struct> _1c0d0a95e_FindStruct(_1c0d09782_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0c95795_Fn> _1c0d0ad5a_FindFn(_1c0d09782_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0ca8a72_Trait> _1c0d0b19b_FindTrait(_1c0d09782_ImportInfo*, jule::Str);
inline jule::Ptr<_1c0cab27d_Enum> _1c0d0b4dc_FindEnum(_1c0d09782_ImportInfo*, jule::Str);
inline jule::Ptr<_1c0cac988_TypeEnum> _1c0d0b82d_FindTypeEnum(_1c0d09782_ImportInfo*, jule::Str);
inline jule::Bool _1c0d0bcc3_isLookupable(_1c0d09782_ImportInfo*, jule::Str*);
inline jule::Bool _1c0d0c114_existIdent(_1c0d09782_ImportInfo*, jule::Str);
inline jule::Bool _1c0d0c39a_isAccessibleViaSelection(_1c0d09782_ImportInfo*);
inline jule::Ptr<_1c0d09782_ImportInfo> _1c0d0cb4d_SelectPackage(_1c0d0c6a8_Package*, jule::Fn<jule::Bool,jule::Ptr<_1c0d09782_ImportInfo>>);
inline jule::Ptr<_1c0d4dde2_Var> _1c0d0d049_FindVar(_1c0d0c6a8_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0dd7101_TypeAlias> _1c0d0d445_FindTypeAlias(_1c0d0c6a8_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0c807c4_Struct> _1c0d0d841_FindStruct(_1c0d0c6a8_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0c95795_Fn> _1c0d0dc3c_FindFn(_1c0d0c6a8_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0ca8a72_Trait> _1c0d0e07d_FindTrait(_1c0d0c6a8_Package*, jule::Str);
inline jule::Ptr<_1c0cab27d_Enum> _1c0d0e3be_FindEnum(_1c0d0c6a8_Package*, jule::Str);
inline jule::Ptr<_1c0cac988_TypeEnum> _1c0d0e710_FindTypeEnum(_1c0d0c6a8_Package*, jule::Str);
inline jule::Ptr<_1c0cc0418_comptimeTypeInfo> _1c0d2a8b3_pushComptimeTypeInfo(_1c0d2a473_commonSemaMeta*, jule::Ptr<_1c0dd7de3_TypeKind>*);
inline jule::Ptr<_1c0d09782_ImportInfo> _1c0d2b51d_SelectPackage(_1c0d2b078_Sema*, jule::Fn<jule::Bool,jule::Ptr<_1c0d09782_ImportInfo>>);
inline jule::Ptr<_1c0d4dde2_Var> _1c0d2b919_FindVar(_1c0d2b078_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0dd7101_TypeAlias> _1c0d2bd15_FindTypeAlias(_1c0d2b078_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0c807c4_Struct> _1c0d2c211_FindStruct(_1c0d2b078_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0c95795_Fn> _1c0d2c60c_FindFn(_1c0d2b078_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0ca8a72_Trait> _1c0d2c94d_FindTrait(_1c0d2b078_Sema*, jule::Str);
inline jule::Ptr<_1c0cab27d_Enum> _1c0d2cc8e_FindEnum(_1c0d2b078_Sema*, jule::Str);
inline jule::Ptr<_1c0cac988_TypeEnum> _1c0d2d0d0_FindTypeEnum(_1c0d2b078_Sema*, jule::Str);
inline jule::Bool _1c0d2d4dc_isFlag(_1c0d2b078_Sema*, jule::I64);
inline void _1c0d2d795_setCurrentFile(_1c0d2b078_Sema*, jule::Ptr<_1c0da1681_SymbolTable>);
inline void _1c0d2dbb3_pushErr(_1c0d2b078_Sema*, jule::Ptr<_1c0c49480_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c0d2e026_pushSuggestion(_1c0d2b078_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c0d2e422_isAccessibleDefine(_1c0d2b078_Sema*, jule::Bool, jule::Ptr<_1c0c49480_Token>);
inline jule::Bool _1c0d2e8c8_isDuplicatedIdent(_1c0d2b078_Sema*, jule::Uintptr, jule::Str*, jule::Bool);
inline void _1c0d2ec3b_checkDirectives(jule::Ptr<_1c0d2b078_Sema>, jule::Slice<jule::Ptr<_1c0c5dd57_Directive>>*, jule::Any);
inline jule::Bool _1c0d301e2_checkGenericQuantity(_1c0d2b078_Sema*, jule::I64, jule::I64, jule::Ptr<_1c0c49480_Token>);
inline jule::Bool _1c0d305dd_isDuplicatedImportSelection(_1c0d2b078_Sema*, jule::Uintptr, jule::Str*);
inline jule::Any _1c0d309d9_getImportDef(_1c0d2b078_Sema*, jule::Str*, jule::Ptr<_1c0d09782_ImportInfo>*);
inline jule::Bool _1c4646494_checkImportSelection(_1c0d2b078_Sema*, jule::Ptr<_1c0c49480_Token>*, jule::Ptr<_1c0d4dde2_Var>*);
inline jule::Bool _1c464a762_checkImportSelection(_1c0d2b078_Sema*, jule::Ptr<_1c0c49480_Token>*, jule::Ptr<_1c0dd7101_TypeAlias>*);
inline jule::Bool _1c464e9db_checkImportSelection(_1c0d2b078_Sema*, jule::Ptr<_1c0c49480_Token>*, jule::Ptr<_1c0c807c4_Struct>*);
inline jule::Bool _1c4654051_checkImportSelection(_1c0d2b078_Sema*, jule::Ptr<_1c0c49480_Token>*, jule::Ptr<_1c0ca8a72_Trait>*);
inline jule::Bool _1c465830d_checkImportSelection(_1c0d2b078_Sema*, jule::Ptr<_1c0c49480_Token>*, jule::Ptr<_1c0cab27d_Enum>*);
inline jule::Bool _1c465c5a9_checkImportSelection(_1c0d2b078_Sema*, jule::Ptr<_1c0c49480_Token>*, jule::Ptr<_1c0cac988_TypeEnum>*);
inline jule::Bool _1c4661822_checkImportSelection(_1c0d2b078_Sema*, jule::Ptr<_1c0c49480_Token>*, jule::Ptr<_1c0c95795_Fn>*);
inline jule::Bool _1c0d31226_checkImportSelectedSelections(_1c0d2b078_Sema*, jule::Ptr<_1c0d09782_ImportInfo>*);
inline jule::Bool _1c46660c9_checkImportsAllSelectionsFromCollection(_1c0d2b078_Sema*, jule::Slice<jule::Ptr<_1c0d4dde2_Var>>*, jule::Ptr<_1c0c49480_Token>*);
inline jule::Bool _1c4666c67_checkImportsAllSelectionsFromCollection(_1c0d2b078_Sema*, jule::Slice<jule::Ptr<_1c0dd7101_TypeAlias>>*, jule::Ptr<_1c0c49480_Token>*);
inline jule::Bool _1c466997e_checkImportsAllSelectionsFromCollection(_1c0d2b078_Sema*, jule::Slice<jule::Ptr<_1c0c807c4_Struct>>*, jule::Ptr<_1c0c49480_Token>*);
inline jule::Bool _1c466b277_checkImportsAllSelectionsFromCollection(_1c0d2b078_Sema*, jule::Slice<jule::Ptr<_1c0c95795_Fn>>*, jule::Ptr<_1c0c49480_Token>*);
inline jule::Bool _1c466ed4c_checkImportsAllSelectionsFromCollection(_1c0d2b078_Sema*, jule::Slice<jule::Ptr<_1c0ca8a72_Trait>>*, jule::Ptr<_1c0c49480_Token>*);
inline jule::Bool _1c4672019_checkImportsAllSelectionsFromCollection(_1c0d2b078_Sema*, jule::Slice<jule::Ptr<_1c0cab27d_Enum>>*, jule::Ptr<_1c0c49480_Token>*);
inline jule::Bool _1c46746ae_checkImportsAllSelectionsFromCollection(_1c0d2b078_Sema*, jule::Slice<jule::Ptr<_1c0cac988_TypeEnum>>*, jule::Ptr<_1c0c49480_Token>*);
inline jule::Bool _1c0d31963_checkImportAllSelections(_1c0d2b078_Sema*, jule::Ptr<_1c0d09782_ImportInfo>*);
inline jule::Bool _1c0d31ca4_checkImportSelections(_1c0d2b078_Sema*, jule::Ptr<_1c0d09782_ImportInfo>*);
inline jule::Bool _1c0d320e5_isUseAliasDuplication(_1c0d2b078_Sema*, jule::Ptr<_1c0d09782_ImportInfo>*);
inline jule::Bool _1c0d32436_checkImport(_1c0d2b078_Sema*, jule::Ptr<_1c0d09782_ImportInfo>*);
inline void _1c0d32634_checkImports(_1c0d2b078_Sema*);
inline void _1c0d32832_implFileImpls(jule::Ptr<_1c0d2b078_Sema>);
inline void _1c0d32a30_implImpls(jule::Ptr<_1c0d2b078_Sema>);
inline void _1c0d32c2d_checkEnums(jule::Ptr<_1c0d2b078_Sema>);
inline void _1c0d32e2b_checkFileInherits(jule::Ptr<_1c0d2b078_Sema>);
inline void _1c0d33129_checkInherits(jule::Ptr<_1c0d2b078_Sema>);
inline _1c0de9ca1_typeChecker _1c0d335d0_typeChecker(jule::Ptr<_1c0d2b078_Sema>, jule::Trait<_1c0e079d4_Lookup>, jule::Slice<jule::Ptr<_1c0dd7101_TypeAlias>>, jule::Ptr<_1c0de8cb1_referencer>);
inline jule::Ptr<_1c0dd7de3_TypeKind> _1c0d33b41_buildTypeWithRefers(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0c5e93a_TypeDecl>*, jule::Trait<_1c0e079d4_Lookup>, jule::Slice<jule::Ptr<_1c0dd7101_TypeAlias>>, jule::Ptr<_1c0de8cb1_referencer>);
inline jule::Bool _1c0d341a2_checkTypeWithRefers(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0de00b5_TypeSymbol>*, jule::Trait<_1c0e079d4_Lookup>, jule::Slice<jule::Ptr<_1c0dd7101_TypeAlias>>, jule::Ptr<_1c0de8cb1_referencer>);
inline jule::Ptr<_1c0cced84_constraintChecker> _1c0d34438_constraintChecker(jule::Ptr<_1c0d2b078_Sema>);
inline jule::Bool _1c0d34834_checkType(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0de00b5_TypeSymbol>*, jule::Trait<_1c0e079d4_Lookup>);
inline jule::Ptr<_1c0dd7de3_TypeKind> _1c0d34cda_buildTypeWithGenerics(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0c5e93a_TypeDecl>*, jule::Slice<jule::Ptr<_1c0dd7101_TypeAlias>>, jule::Ptr<_1c0c9b878_ReferenceStack>);
inline jule::Ptr<_1c0dd7de3_TypeKind> _1c0d3546c_selectType(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0c5e93a_TypeDecl>*);
inline jule::Ptr<_1c0da8721_Eval> _1c0d35923_evalpd(jule::Ptr<_1c0d2b078_Sema>, jule::Trait<_1c0e079d4_Lookup>, jule::Ptr<_1c0dd7de3_TypeKind>, jule::Ptr<_1c0d4dde2_Var>);
inline jule::Ptr<_1c0da8721_Eval> _1c0d35d1e_evalp(jule::Ptr<_1c0d2b078_Sema>, jule::Trait<_1c0e079d4_Lookup>, jule::Ptr<_1c0dd7de3_TypeKind>);
inline jule::Ptr<_1c0da8721_Eval> _1c0d36160_eval(jule::Ptr<_1c0d2b078_Sema>, jule::Trait<_1c0e079d4_Lookup>);
inline jule::Bool _1c0d366c1_checkAssignType(jule::Ptr<_1c0d2b078_Sema>, jule::Bool, jule::Ptr<_1c0dd7de3_TypeKind>*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0c49480_Token>);
inline jule::Bool _1c0d36b77__checkTypeCompatibility(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0dd7de3_TypeKind>*, jule::Ptr<_1c0dd7de3_TypeKind>*, jule::Ptr<_1c0c49480_Token>);
inline jule::Bool _1c0d3712d_checkTypeCompatibility(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0dd7de3_TypeKind>*, jule::Ptr<_1c0dd7de3_TypeKind>*, jule::Ptr<_1c0c49480_Token>*);
inline void _1c0d3754b_pushCompatiblityError(_1c0d2b078_Sema*, jule::Ptr<_1c0dd7de3_TypeKind>*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0c49480_Token>*);
inline jule::Bool _1c0d37a02_checkTypeCompatibility1(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0dd7de3_TypeKind>*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0c49480_Token>*);
inline jule::Ptr<_1c0dd7de3_TypeKind> _1c0d37ea8_buildNonGenericTypeKind(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0c5e93a_TypeDecl>*, jule::Slice<jule::Ptr<_1c0c6bb45_GenericDecl>>*, jule::Slice<jule::Ptr<_1c0dd7de3_TypeKind>>*);
inline jule::Bool _1c0d383a4_buildFnNonGenericTypeKinds(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0c98699_FnIns>*, jule::Slice<jule::Ptr<_1c0dd7de3_TypeKind>>*);
inline jule::Ptr<_1c0c98699_FnIns> _1c0d386e5_getTraitCheckFnKind(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0c95795_Fn>*);
inline jule::Bool _1c0d38b9b_checkConstraintsFn(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0c98699_FnIns>*, jule::Ptr<_1c0c49480_Token>*, jule::Ptr<_1c0c98699_FnIns>);
inline jule::Bool _1c0d39152_checkConstraintsStruct(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0c83552_StructIns>*, jule::Ptr<_1c0c49480_Token>*, jule::Ptr<_1c0c83552_StructIns>);
inline jule::Bool _1c0d3954d_fnEnvironment(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0c98699_FnIns>*, jule::Fn<jule::Bool,jule::Ptr<_1c0d2b078_Sema>*,jule::Slice<jule::Ptr<_1c0dd7101_TypeAlias>>*>);
inline void _1c0d39806_checkFnParamKind(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0c976ed_ParamIns>*);
inline jule::Bool _1c0d39b47_reloadFnInsTypes(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0c98699_FnIns>);
inline jule::Bool _1c0d3a0ed_checkRefValidityForInitExpr(jule::Ptr<_1c0d2b078_Sema>, jule::Bool, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0c49480_Token>*);
inline jule::Bool _1c0d3a43e_isMutRiskyStruct(_1c0d2b078_Sema*, jule::Ptr<_1c0c83552_StructIns>*);
inline jule::Bool _1c0d3aa5a_checkValidityForInitExpr(jule::Ptr<_1c0d2b078_Sema>, jule::Bool, jule::Bool, jule::Ptr<_1c0dd7de3_TypeKind>*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0c49480_Token>*);
inline jule::Bool _1c0d3ae56_checkTypeAliasDeclKind(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0dd7101_TypeAlias>*, jule::Trait<_1c0e079d4_Lookup>);
inline void _1c0d3b2b9_checkTypeAliasDecl(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0dd7101_TypeAlias>*, jule::Trait<_1c0e079d4_Lookup>);
inline void _1c0d3b572_checkTypeAliasDeclDup(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0dd7101_TypeAlias>*);
inline jule::Bool _1c0d3b808_checkTypeAliasDecls(jule::Ptr<_1c0d2b078_Sema>);
inline void _1c5337dbb_checkEnumItemsDup(_1c0d2b078_Sema*, jule::Slice<jule::Ptr<_1c0caa711_EnumItem>>);
inline void _1c53451c5_checkEnumItemsDup(_1c0d2b078_Sema*, jule::Slice<jule::Ptr<_1c0cac3b1_TypeEnumItem>>);
inline void _1c0d3bd69_checkEnumItemsStr(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0cab27d_Enum>*);
inline void _1c531884c_checkEnumItemInt(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0cab27d_Enum>*, jule::Ptr<_1c0de09bc_Prim>*, jule::Ptr<_1c0caa711_EnumItem>*, jule::U64*);
inline void _1c53288d4_checkEnumItemInt(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0cab27d_Enum>*, jule::Ptr<_1c0de09bc_Prim>*, jule::Ptr<_1c0caa711_EnumItem>*, jule::I64*);
inline void _1c53149d0_checkEnumItemsInt1(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0de09bc_Prim>*, jule::Ptr<_1c0cab27d_Enum>*);
inline void _1c5314dba_checkEnumItemsInt1(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0de09bc_Prim>*, jule::Ptr<_1c0cab27d_Enum>*);
inline void _1c0d3ca18_checkEnumItemsInt(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0cab27d_Enum>*);
inline void _1c0d3ccc1_checkEnumDecl(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0cab27d_Enum>*);
inline void _1c0d3d079_checkTypeEnumDecl(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0cac988_TypeEnum>*);
inline jule::Bool _1c0d3d310_checkEnumDecls(jule::Ptr<_1c0d2b078_Sema>);
inline jule::Bool _1c0d3d596_checkTypeEnumDecls(jule::Ptr<_1c0d2b078_Sema>);
inline jule::Bool _1c0d3d8d7_checkDeclGenerics(_1c0d2b078_Sema*, jule::Slice<jule::Ptr<_1c0c6bb45_GenericDecl>>*);
inline jule::Bool _1c0d3dc28_checkFnDeclParamsDup(_1c0d2b078_Sema*, jule::Ptr<_1c0c95795_Fn>*);
inline jule::Bool _1c0d3e069_checkFnDeclResultDup(_1c0d2b078_Sema*, jule::Ptr<_1c0c95795_Fn>*);
inline jule::Bool _1c0d3e3aa_checkFnVariadicParam(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0c95795_Fn>*);
inline void _1c0d3e663_checkFnDeclPrototype(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0c95795_Fn>*);
inline jule::Bool _1c0d3eb19_catchTraitInheritCycle(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0ca8a72_Trait>, jule::Ptr<_1c0ca8a72_Trait>, _234c76a64_StrBuilder*);
inline jule::Bool _1c0d3ee5a__checkTraitDeclInherits(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0ca8a72_Trait>*);
inline void _1c0d40213_checkTraitDeclInherits(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0ca8a72_Trait>*);
inline void _1c0d404bb_checkTraitDeclMethod(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0c95795_Fn>*);
inline void _1c0d40774_checkTraitDeclMethods(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0ca8a72_Trait>*);
inline void _1c0d40a2c_checkTraitDecl(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0ca8a72_Trait>*);
inline jule::Bool _1c0d40cb3_checkTraitDecls(jule::Ptr<_1c0d2b078_Sema>);
inline jule::Bool _1c0d411ae_checkTraitImplMethods(_1c0d2b078_Sema*, jule::Ptr<_1c0ca8a72_Trait>*, jule::Ptr<_1c0cd21d8_Impl>*);
inline jule::Bool _1c0d415aa_implToStruct(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0c807c4_Struct>*, jule::Ptr<_1c0cd21d8_Impl>*);
inline void _1c0d41863_implTrait(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0cd21d8_Impl>*);
inline void _1c0d41b1b_implStruct(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0cd21d8_Impl>*);
inline void _1c0d41dc4_implImpl(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0cd21d8_Impl>*);
inline void _1c0d42237_checkVarDecl(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0d4dde2_Var>*, jule::Trait<_1c0e079d4_Lookup>);
inline void _1c0d424e0_checkGlobalVarDecl(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0d4dde2_Var>*);
inline jule::Bool _1c0d42776_checkGlobalDecls(jule::Ptr<_1c0d2b078_Sema>);
inline jule::Bool _1c0d42b72_checkStructTraitImpl(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0c807c4_Struct>*, jule::Ptr<_1c0ca8a72_Trait>*);
inline jule::Bool _1c0d42eb3_checkStructImpls(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0c807c4_Struct>*);
inline jule::Bool _1c0d43304_checkStructFields(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0c807c4_Struct>*);
inline void _1c0d435ac_checkStructDecl(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0c807c4_Struct>*);
inline jule::Bool _1c0d43843_checkStructDecls(jule::Ptr<_1c0d2b078_Sema>);
inline void _1c0d43aeb_checkAnonFuncDecl(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0c95795_Fn>*);
inline void _1c0d43da4_checkFuncDecl(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0c95795_Fn>*);
inline jule::Bool _1c0d441e5_checkFuncDeclsBy(jule::Ptr<_1c0d2b078_Sema>, jule::Slice<jule::Ptr<_1c0c95795_Fn>>*);
inline jule::Bool _1c0d4447b_checkFuncDecls(jule::Ptr<_1c0d2b078_Sema>);
inline void _1c0d44899_pushCycleError(_1c0d2b078_Sema*, jule::Str*, jule::Str*, _234c76a64_StrBuilder*);
inline void _1c0d4504d_checkPackageDecls(jule::Ptr<_1c0d2b078_Sema>);
inline void _1c0d453b1_checkDataForTypeInference(_1c0d2b078_Sema*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0c49480_Token>*);
inline void _1c0d45669_checkVarValue(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0d4dde2_Var>*);
inline void _1c0d459cc_evalVarValue(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0d4dde2_Var>*, jule::Trait<_1c0e079d4_Lookup>);
inline void _1c0d45d40_checkVar(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0d4dde2_Var>*, jule::Trait<_1c0e079d4_Lookup>);
inline void _1c0d4603d_checkGlobals(jule::Ptr<_1c0d2b078_Sema>);
inline jule::Ptr<_1c0c98699_FnIns> _1c0d46439_readyToCheckFn(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0c83552_StructIns>*, jule::Ptr<_1c0c95795_Fn>*);
inline void _1c0d4679c_checkTypeMethod(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0c83552_StructIns>*, jule::Ptr<_1c0c95795_Fn>*);
inline jule::Ptr<_1c0c98699_FnIns> _1c0d46c53_checkStructInsOp(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0c83552_StructIns>*, jule::Ptr<_1c0c95795_Fn>*, jule::Fn<jule::Bool,jule::Ptr<_1c0c95795_Fn>>);
inline jule::Bool _1c0d4714e_checkStructEnv(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0c83552_StructIns>*, jule::Ptr<_1c0c49480_Token>);
inline jule::Bool _1c0d4754a_precheckStructIns(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0c83552_StructIns>*, jule::Ptr<_1c0c49480_Token>);
inline void _1c0d47803_checkStructIns(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0c83552_StructIns>*);
inline void _1c0d47aab_checkTypeStruct(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0c807c4_Struct>*);
inline void _1c0d47ca9_checkStructTypes(jule::Ptr<_1c0d2b078_Sema>);
inline void _1c0d48062_checkStructInsOperators(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0c83552_StructIns>);
inline void _1c0d4831a_precheckStructType(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0c807c4_Struct>*);
inline void _1c0d48518_precheckStructTypes(jule::Ptr<_1c0d2b078_Sema>);
inline void _1c0d487c1_checkRets(_1c0d2b078_Sema*, jule::Ptr<_1c0c98699_FnIns>*);
inline void _1c0d48b34_checkFnInsSc(_1c0d2b078_Sema*, jule::Ptr<_1c0c98699_FnIns>*, jule::Ptr<_1c0cdeaec_scopeChecker>*);
inline void _1c0d48e97_checkFnInsCaller(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0c98699_FnIns>*, jule::Ptr<_1c0c49480_Token>);
inline void _1c0d49250_checkFnIns(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0c98699_FnIns>*);
inline void _1c0d49508_checkFunc(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0c95795_Fn>*);
inline void _1c0d497b1_checkTestFn(_1c0d2b078_Sema*, jule::Ptr<_1c0c98699_FnIns>*);
inline void _1c0d49a69_precheckFunc(jule::Ptr<_1c0d2b078_Sema>, jule::Ptr<_1c0c95795_Fn>*);
inline void _1c0d49c67_precheckFuncs(jule::Ptr<_1c0d2b078_Sema>);
inline void _1c0d49e65_checkFuncs(jule::Ptr<_1c0d2b078_Sema>);
inline void _1c0d4a163_checkPackageTypes(jule::Ptr<_1c0d2b078_Sema>);
inline void _1c0d4a361_setFileSemaFields(jule::Ptr<_1c0d2b078_Sema>);
inline void _1c0d4a55e_setSemaFields(jule::Ptr<_1c0d2b078_Sema>);
inline void _1c0d4a817_check(jule::Ptr<_1c0d2b078_Sema>, jule::Slice<jule::Ptr<_1c0da1681_SymbolTable>>*);
inline _1c0d4ac46_missingRetChecker static__1c0d4b10e_new(void);
inline jule::Bool _1c0d4b41c_checkConditional(_1c0d4ac46_missingRetChecker*, jule::Ptr<_1c0cd8277_Conditional>);
inline jule::Bool _1c0d4b75d_checkMatch(_1c0d4ac46_missingRetChecker*, jule::Ptr<_1c0cdb852_Match>);
inline jule::Bool _1c0d4ba9e_checkInfIter(_1c0d4ac46_missingRetChecker*, jule::Ptr<_1c0cd8574_InfIter>);
inline jule::Bool _1c0d4bde0_checkScope(_1c0d4ac46_missingRetChecker*, jule::Ptr<_1c0cd763e_Scope>);
inline jule::Bool _1c0d4c231_check(_1c0d4ac46_missingRetChecker*, jule::Ptr<_1c0cd763e_Scope>);
inline jule::Bool _1c0d4e2bb_IsInitialized(_1c0d4dde2_Var*);
inline jule::Bool _1c0d4e552_IsTypeInferred(_1c0d4dde2_Var*);
inline jule::Bool _1c0d4e7d8_untypedConstant(_1c0d4dde2_Var*);
inline jule::Bool static__1c0d50388_Dispose(jule::Ptr<_1c0c95795_Fn>);
inline jule::Bool static__1c0d50652_Str(jule::Ptr<_1c0c95795_Fn>);
inline jule::Bool static__1c0d509c6_logical(jule::Ptr<_1c0c95795_Fn>*, jule::Str);
inline jule::Bool static__1c0d50c90_Eq(jule::Ptr<_1c0c95795_Fn>);
inline jule::Bool static__1c0d51059_Gt(jule::Ptr<_1c0c95795_Fn>);
inline jule::Bool static__1c0d51323_GtEq(jule::Ptr<_1c0c95795_Fn>);
inline jule::Bool static__1c0d515dc_Lt(jule::Ptr<_1c0c95795_Fn>);
inline jule::Bool static__1c0d518a6_LtEq(jule::Ptr<_1c0c95795_Fn>);
inline jule::Bool static__1c0d51c2a_result(jule::Ptr<_1c0c95795_Fn>*, jule::Str);
inline jule::Bool static__1c0d51ee4_Shl(jule::Ptr<_1c0c95795_Fn>);
inline jule::Bool static__1c0d522ad_Shr(jule::Ptr<_1c0c95795_Fn>);
inline jule::Bool static__1c0d52577_Add(jule::Ptr<_1c0c95795_Fn>);
inline jule::Bool static__1c0d52841_Sub(jule::Ptr<_1c0c95795_Fn>);
inline jule::Bool static__1c0d52b0a_Div(jule::Ptr<_1c0c95795_Fn>);
inline jule::Bool static__1c0d52dc4_Mul(jule::Ptr<_1c0c95795_Fn>);
inline jule::Bool static__1c0d5318d_Mod(jule::Ptr<_1c0c95795_Fn>);
inline jule::Bool static__1c0d53457_BitAnd(jule::Ptr<_1c0c95795_Fn>);
inline jule::Bool static__1c0d53721_BitOr(jule::Ptr<_1c0c95795_Fn>);
inline jule::Bool static__1c0d539da_BitXor(jule::Ptr<_1c0c95795_Fn>);
inline jule::Bool static__1c0d53d5e_unary(jule::Ptr<_1c0c95795_Fn>*, jule::Str);
inline jule::Bool static__1c0d54128_Neg(jule::Ptr<_1c0c95795_Fn>);
inline jule::Bool static__1c0d543e2_Pos(jule::Ptr<_1c0c95795_Fn>);
inline jule::Bool static__1c0d546ab_BitNot(jule::Ptr<_1c0c95795_Fn>);
inline jule::Bool static__1c0d54a30_assign(jule::Ptr<_1c0c95795_Fn>*, jule::Str);
inline jule::Bool static__1c0d54ce9_AddAssign(jule::Ptr<_1c0c95795_Fn>);
inline jule::Bool static__1c0d550b3_SubAssign(jule::Ptr<_1c0c95795_Fn>);
inline jule::Bool static__1c0d5537c_DivAssign(jule::Ptr<_1c0c95795_Fn>);
inline jule::Bool static__1c0d55646_MulAssign(jule::Ptr<_1c0c95795_Fn>);
inline jule::Bool static__1c0d55910_ModAssign(jule::Ptr<_1c0c95795_Fn>);
inline jule::Bool static__1c0d55bc9_ShlAssign(jule::Ptr<_1c0c95795_Fn>);
inline jule::Bool static__1c0d55e93_ShrAssign(jule::Ptr<_1c0c95795_Fn>);
inline jule::Bool static__1c0d5625c_BitOrAssign(jule::Ptr<_1c0c95795_Fn>);
inline jule::Bool static__1c0d56526_BitAndAssign(jule::Ptr<_1c0c95795_Fn>);
inline jule::Bool static__1c0d567e0_BitXorAssign(jule::Ptr<_1c0c95795_Fn>);
inline void _1c0d8dbac_pushErr(_1c0d8d6b2_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c0d8de43_checkTrait(_1c0d8d6b2_typeCompatibilityChecker*);
inline jule::Bool _1c0d8e1c9_checkPtr(_1c0d8d6b2_typeCompatibilityChecker*);
inline jule::Bool _1c0d8e460_checkPrim(_1c0d8d6b2_typeCompatibilityChecker*);
inline jule::Bool _1c0d8e85b_typeEnum(_1c0d8d6b2_typeCompatibilityChecker*, jule::Ptr<_1c0cac988_TypeEnum>*, jule::Ptr<_1c0dd7de3_TypeKind>*);
inline jule::Bool _1c0d8eae2_checkTypeEnum(_1c0d8d6b2_typeCompatibilityChecker*);
inline jule::Bool _1c0d8ed78_check(_1c0d8d6b2_typeCompatibilityChecker*);
inline void _1c0d908e5_pushErr(_1c0d90461_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c0d90b7b_checkValidity(_1c0d90461_assignTypeChecker*);
inline jule::Bool _1c0d90e12_checkConst(_1c0d90461_assignTypeChecker*);
inline jule::Bool _1c0d91198_checkCompatibility(_1c0d90461_assignTypeChecker*);
inline jule::Bool _1c0d9142e_check(_1c0d90461_assignTypeChecker*);
inline jule::Bool _1c556c8a3_annotateConstraintElem(_1c0d91d36_dynamicTypeAnnotation*, jule::Ptr<_1c0dd7de3_TypeKind>*);
inline jule::Bool _1c556c144_annotateConstraintElem(_1c0d91d36_dynamicTypeAnnotation*, jule::Ptr<_1c0dd7de3_TypeKind>*);
inline jule::Bool _1c556e399_annotateConstraintElem(_1c0d91d36_dynamicTypeAnnotation*, jule::Ptr<_1c0dd7de3_TypeKind>*);
inline jule::Bool _1c557689b_annotateConstraintElem(_1c0d91d36_dynamicTypeAnnotation*, jule::Ptr<_1c0dd7de3_TypeKind>*);
inline jule::Bool _1c0d9272c_annotateConstraintMap(_1c0d91d36_dynamicTypeAnnotation*, jule::Ptr<_1c0dd7de3_TypeKind>*);
inline jule::Bool _1c0d92a6d_annotateConstraintTup(_1c0d91d36_dynamicTypeAnnotation*, jule::Ptr<_1c0dd7de3_TypeKind>*);
inline jule::Bool _1c0d92dae_annotateConstraintFn(_1c0d91d36_dynamicTypeAnnotation*, jule::Ptr<_1c0dd7de3_TypeKind>*);
inline jule::Bool _1c0d93200_annotateConstraintIdent(_1c0d91d36_dynamicTypeAnnotation*, jule::Ptr<_1c0dd7de3_TypeKind>*);
inline jule::Bool _1c0d93541_annotateConstraint(_1c0d91d36_dynamicTypeAnnotation*, jule::Ptr<_1c0dd7de3_TypeKind>*);
inline void _1c0d938a4_pushGeneric(_1c0d91d36_dynamicTypeAnnotation*, jule::Ptr<_1c0dd7de3_TypeKind>*, jule::I64);
inline jule::Bool _1c0d93be5_annotatePrim(_1c0d91d36_dynamicTypeAnnotation*, jule::Ptr<_1c0dd7de3_TypeKind>*);
inline jule::Bool _1c0d94036_annotateArr(_1c0d91d36_dynamicTypeAnnotation*, jule::Ptr<_1c0dd7de3_TypeKind>*);
inline jule::Bool _1c0d94377_annotateSlc(_1c0d91d36_dynamicTypeAnnotation*, jule::Ptr<_1c0dd7de3_TypeKind>*);
inline jule::Bool _1c0d94773_checkMapKey(_1c0d91d36_dynamicTypeAnnotation*, jule::Ptr<_1c0dd7de3_TypeKind>*, jule::Ptr<_1c0dd7de3_TypeKind>*);
inline jule::Bool _1c0d94ab4_annotateMap(_1c0d91d36_dynamicTypeAnnotation*, jule::Ptr<_1c0dd7de3_TypeKind>*);
inline jule::Bool _1c0d94e05_annotateFn(_1c0d91d36_dynamicTypeAnnotation*, jule::Ptr<_1c0dd7de3_TypeKind>*);
inline jule::Bool _1c0d95246_annotatePtr(_1c0d91d36_dynamicTypeAnnotation*, jule::Ptr<_1c0dd7de3_TypeKind>*);
inline jule::Bool _1c0d95587_annotateSptr(_1c0d91d36_dynamicTypeAnnotation*, jule::Ptr<_1c0dd7de3_TypeKind>*);
inline jule::Bool _1c0d958c8_annotateStruct(_1c0d91d36_dynamicTypeAnnotation*, jule::Ptr<_1c0dd7de3_TypeKind>*);
inline jule::Bool _1c0d95c19_annotateAny(_1c0d91d36_dynamicTypeAnnotation*, jule::Ptr<_1c0dd7de3_TypeKind>*);
inline jule::Bool _1c0d9605a_annotateKind(_1c0d91d36_dynamicTypeAnnotation*, jule::Ptr<_1c0dd7de3_TypeKind>*);
inline jule::Bool _1c0d962e1_annotate(_1c0d91d36_dynamicTypeAnnotation*);
inline void _1c0d97204_pushErrToken(_1c0d96b93_fnCallArgChecker*, jule::Ptr<_1c0c49480_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c0d97567_pushErr(_1c0d96b93_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1c0c976ed_ParamIns>> _1c0d977ed_getParams(_1c0d96b93_fnCallArgChecker*);
inline jule::Bool _1c0d97b3e_checkCounts(_1c0d96b93_fnCallArgChecker*, jule::Slice<jule::Ptr<_1c0c976ed_ParamIns>>*);
inline jule::Bool _1c0d980e5_checkArg(_1c0d96b93_fnCallArgChecker*, jule::Ptr<_1c0c976ed_ParamIns>*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0c49480_Token>*);
inline jule::Bool _1c0d984e1_push(_1c0d96b93_fnCallArgChecker*, jule::Ptr<_1c0c976ed_ParamIns>*, jule::Ptr<_1c0c63c6e_Expr>);
inline jule::Bool _1c0d988dc_pushVariadic(_1c0d96b93_fnCallArgChecker*, jule::Ptr<_1c0c976ed_ParamIns>*, jule::I64);
inline jule::Bool _1c0d98c2d_checkArgs(_1c0d96b93_fnCallArgChecker*, jule::Slice<jule::Ptr<_1c0c976ed_ParamIns>>*);
inline jule::Bool _1c0d98eb4_checkDynamicTypeAnnotation(_1c0d96b93_fnCallArgChecker*);
inline jule::Bool _1c0d9924a_check(_1c0d96b93_fnCallArgChecker*);
inline void _1c0d9a12a_pushErr(_1c0d99aca_structLitChecker*, jule::Ptr<_1c0c49480_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c0d9a48d_pushSuggestion(_1c0d99aca_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _1c0d9a8ab_pushMatch(_1c0d99aca_structLitChecker*, jule::Ptr<_1c0c829a2_FieldIns>*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0c49480_Token>*);
inline void _1c0d9ac1e_checkPair(_1c0d99aca_structLitChecker*, jule::Ptr<_1c0c6848d_FieldExprPair>*, jule::Slice<jule::Ptr<_1c0c63c6e_Expr>>*);
inline jule::Bool _1c0d9b060_readyExprs(_1c0d99aca_structLitChecker*, jule::Slice<jule::Ptr<_1c0c63c6e_Expr>>*);
inline void _1c0d9b318_check(_1c0d99aca_structLitChecker*, jule::Slice<jule::Ptr<_1c0c63c6e_Expr>>*);
inline jule::Ptr<_1c0d4dde2_Var> _1c0d9bd96_buildVar(_1c0d9b8ac_rangeChecker*, jule::Ptr<_1c0c727a5_VarDecl>*);
inline void _1c0d9c094_setSizeKey(_1c0d9b8ac_rangeChecker*);
inline void _1c0d9c4b2_checkRangeExprValidity(_1c0d9b8ac_rangeChecker*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0d4dde2_Var>*, jule::Ptr<_1c0dd7de3_TypeKind>*);
inline void _1c0d9c6b0_checkSlice(_1c0d9b8ac_rangeChecker*);
inline void _1c0d9c8ad_checkArray(_1c0d9b8ac_rangeChecker*);
inline void _1c0d9caab_checkMapKeyA(_1c0d9b8ac_rangeChecker*);
inline void _1c0d9cca9_checkMapKeyB(_1c0d9b8ac_rangeChecker*);
inline void _1c0d9cea7_checkMap(_1c0d9b8ac_rangeChecker*);
inline void _1c0d9d1a5_checkStr(_1c0d9b8ac_rangeChecker*);
inline void _1c0d9d3a3_checkComptime(_1c0d9b8ac_rangeChecker*);
inline jule::Bool _1c0d9d639_checkComptimeRange(_1c0d9b8ac_rangeChecker*);
inline jule::Bool _1c0d9d8c0_check(_1c0d9b8ac_rangeChecker*);
inline void _1c0d9e54c_prepareTypes(_1c0d9e11d_retTypeChecker*);
inline void _1c0d9e805_prepareExprs(_1c0d9e11d_retTypeChecker*, jule::Ptr<_1c0c63c6e_Expr>*);
inline void _1c0d9ea03_checkExprs(_1c0d9e11d_retTypeChecker*);
inline jule::Bool _1c0d9ec89_tryFuncMultiRetForward(_1c0d9e11d_retTypeChecker*);
inline jule::Bool _1c0da00ca_check(_1c0d9e11d_retTypeChecker*, jule::Ptr<_1c0c63c6e_Expr>*);
inline jule::Ptr<_1c0d09782_ImportInfo> _1c0da1b6a_SelectPackage(_1c0da1681_SymbolTable*, jule::Fn<jule::Bool,jule::Ptr<_1c0d09782_ImportInfo>>);
inline jule::Ptr<_1c0d4dde2_Var> _1c0da2066_FindVar(_1c0da1681_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0dd7101_TypeAlias> _1c0da2462_FindTypeAlias(_1c0da1681_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0c807c4_Struct> _1c0da285d_FindStruct(_1c0da1681_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0c95795_Fn> _1c0da2c59_FindFn(_1c0da1681_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0ca8a72_Trait> _1c0da309a_FindTrait(_1c0da1681_SymbolTable*, jule::Str);
inline jule::Ptr<_1c0cab27d_Enum> _1c0da33db_FindEnum(_1c0da1681_SymbolTable*, jule::Str);
inline jule::Ptr<_1c0cac988_TypeEnum> _1c0da372c_FindTypeEnum(_1c0da1681_SymbolTable*, jule::Str);
inline jule::Ptr<_1c0d4dde2_Var> _1c0da3d48_findVar(_1c0da1681_SymbolTable*, jule::Str*, jule::Bool, jule::Bool);
inline jule::Ptr<_1c0dd7101_TypeAlias> _1c0da42ee_findTypeAlias(_1c0da1681_SymbolTable*, jule::Str*, jule::Bool, jule::Bool);
inline jule::Any _1c0da46ea_defByIdent(_1c0da1681_SymbolTable*, jule::Str*, jule::Bool);
inline jule::Bool _1c0da4ba1_isDuplicatedIdent(_1c0da1681_SymbolTable*, jule::Uintptr, jule::Str*, jule::Bool);
inline jule::Bool _1c0da6dd4_IsNil(_1c0da69e9_Data*);
inline jule::Bool _1c0da716a_IsVoid(_1c0da69e9_Data*);
inline jule::Bool _1c0da7401_IsConst(_1c0da69e9_Data*);
inline jule::Bool _1c0da7742_GoodOperand(_1c0da69e9_Data*, jule::Ptr<_1c0da69e9_Data>*);
inline void _1c0da8c71_pushErr(_1c0da8721_Eval*, jule::Ptr<_1c0c49480_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c0da90d4_pushSuggestion(_1c0da8721_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _1c0da92d2_allowBuiltin(_1c0da8721_Eval*);
inline void _1c0da94d0_disallowBuiltin(_1c0da8721_Eval*);
inline jule::Bool _1c0da9766_isUnsafe(_1c0da8721_Eval*);
inline jule::Bool _1c0da99ec_isGlobal(_1c0da8721_Eval*);
inline jule::Bool _1c0da9d0a_applyNumericPrefix(_1c0da8721_Eval*, jule::Ptr<_1c0da69e9_Data>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0daa14b_litStr(_1c0da8721_Eval*, jule::Ptr<_1c0c64c09_LitExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0daa48c_litRune(_1c0da8721_Eval*, jule::Ptr<_1c0c64c09_LitExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0daa7cd_litFloat(_1c0da8721_Eval*, jule::Ptr<_1c0c64c09_LitExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0daab1e_litInt(_1c0da8721_Eval*, jule::Ptr<_1c0c64c09_LitExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0daae60_litNum(_1c0da8721_Eval*, jule::Ptr<_1c0c64c09_LitExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0dab2a1_evalLit(_1c0da8721_Eval*, jule::Ptr<_1c0c64c09_LitExpr>);
inline jule::Any _1c0dab5e2_findBuiltins(_1c0da8721_Eval*, jule::Str*);
inline jule::Any _1c0dab9dd_getDef(_1c0da8721_Eval*, jule::Str*, jule::Bool);
inline jule::Ptr<_1c0c9b878_ReferenceStack> _1c0dabc74_getOwnerRefers(_1c0da8721_Eval*);
inline void _1c4451469_pushReference(_1c0da8721_Eval*, jule::Ptr<_1c0c98699_FnIns>*);
inline void _1c4467606_pushReference(_1c0da8721_Eval*, jule::Ptr<_1c0d4dde2_Var>*);
inline void _1c452c413_pushReference(_1c0da8721_Eval*, jule::Ptr<_1c0c83552_StructIns>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0dac36d__evalEnum(_1c0da8721_Eval*, jule::Ptr<_1c0cab27d_Enum>);
inline jule::Ptr<_1c0da69e9_Data> _1c0dac769_evalEnum(_1c0da8721_Eval*, jule::Ptr<_1c0cab27d_Enum>, jule::Ptr<_1c0c49480_Token>);
inline jule::Ptr<_1c0da69e9_Data> _1c0dacaaa__evalTypeEnum(_1c0da8721_Eval*, jule::Ptr<_1c0cac988_TypeEnum>);
inline jule::Ptr<_1c0da69e9_Data> _1c0dacea6_evalTypeEnum(_1c0da8721_Eval*, jule::Ptr<_1c0cac988_TypeEnum>, jule::Ptr<_1c0c49480_Token>);
inline jule::Ptr<_1c0da69e9_Data> _1c0dad2e7__evalStruct(_1c0da8721_Eval*, jule::Ptr<_1c0c83552_StructIns>);
inline jule::Ptr<_1c0da69e9_Data> _1c0dad6e3_evalStruct(_1c0da8721_Eval*, jule::Ptr<_1c0c83552_StructIns>, jule::Ptr<_1c0c49480_Token>);
inline jule::Ptr<_1c0da69e9_Data> _1c0dada34_evalFnIns(_1c0da8721_Eval*, jule::Ptr<_1c0c98699_FnIns>);
inline void _1c0dadd97_checkDeprecated(_1c0da8721_Eval*, jule::Slice<jule::Ptr<_1c0c5dd57_Directive>>*, jule::Ptr<_1c0c49480_Token>);
inline jule::Ptr<_1c0da69e9_Data> _1c0dae293_evalFn(_1c0da8721_Eval*, jule::Ptr<_1c0c95795_Fn>, jule::Ptr<_1c0c49480_Token>);
inline void _1c0dae6b1_pushIllegalCycleError(_1c0da8721_Eval*, jule::Ptr<_1c0d4dde2_Var>*, jule::Ptr<_1c0d4dde2_Var>*, _234c76a64_StrBuilder*);
inline jule::Bool _1c0daeaac_checkCrossCycle(_1c0da8721_Eval*, jule::Ptr<_1c0d4dde2_Var>*, _234c76a64_StrBuilder*);
inline jule::Bool _1c0daeea8_checkIllegalCycles(_1c0da8721_Eval*, jule::Ptr<_1c0d4dde2_Var>*, jule::Ptr<_1c0c49480_Token>);
inline jule::Ptr<_1c0da69e9_Data> _1c0db03a4_evalVar(_1c0da8721_Eval*, jule::Ptr<_1c0d4dde2_Var>, jule::Ptr<_1c0c49480_Token>);
inline jule::Ptr<_1c0da69e9_Data> _1c0db07a0_evalTypeAlias(_1c0da8721_Eval*, jule::Ptr<_1c0dd7101_TypeAlias>, jule::Ptr<_1c0c49480_Token>);
inline jule::Ptr<_1c0da69e9_Data> _1c0db0b9b_evalDef(_1c0da8721_Eval*, jule::Any*, jule::Ptr<_1c0c49480_Token>);
inline jule::Ptr<_1c0da69e9_Data> _1c0db0edc_evalIdent(_1c0da8721_Eval*, jule::Ptr<_1c0c65589_IdentExpr>);
inline jule::Ptr<_1c0da69e9_Data> _1c0db132d_evalUnary(jule::Ptr<_1c0da8721_Eval>, jule::Ptr<_1c0c65d2b_UnaryExpr>);
inline jule::Ptr<_1c0da69e9_Data> _1c0db166e_evalVariadic(jule::Ptr<_1c0da8721_Eval>, jule::Ptr<_1c0c66205_VariadicExpr>);
inline jule::Ptr<_1c0da69e9_Data> _1c0db19b0_evalUnsafe(jule::Ptr<_1c0da8721_Eval>, jule::Ptr<_1c0c650d3_UnsafeExpr>);
inline jule::Ptr<_1c0da69e9_Data> _1c0db1d01_evalArr(jule::Ptr<_1c0da8721_Eval>, jule::Ptr<_1c0c6a2c5_SliceExpr>);
inline jule::Ptr<_1c0da69e9_Data> _1c0db22a7_evalExpSlc(jule::Ptr<_1c0da8721_Eval>, jule::Ptr<_1c0c6a2c5_SliceExpr>, jule::Ptr<_1c0dd7de3_TypeKind>, jule::Any);
inline jule::Ptr<_1c0da69e9_Data> _1c0db25e8_evalSliceExpr(jule::Ptr<_1c0da8721_Eval>, jule::Ptr<_1c0c6a2c5_SliceExpr>);
inline void _1c0db295b_checkIntegerIndexingByData(_1c0da8721_Eval*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0c49480_Token>);
inline void _1c0db2d79_indexingPtr(_1c0da8721_Eval*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0c6ac32_IndexingExpr>*);
inline void _1c0db3297_indexingArr(_1c0da8721_Eval*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0c6ac32_IndexingExpr>*);
inline void _1c0db36b5_indexingSlc(_1c0da8721_Eval*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0c6ac32_IndexingExpr>*);
inline void _1c0db3ad3_indexingMap(_1c0da8721_Eval*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0c6ac32_IndexingExpr>*);
inline void _1c0db4001_indexingStr(_1c0da8721_Eval*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0c6ac32_IndexingExpr>*);
inline void _1c0db441e_toIndexing(_1c0da8721_Eval*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0c6ac32_IndexingExpr>*);
inline jule::Bool _1c0db48c5_pushGenericsFromExprSubIdent(jule::Ptr<_1c0da8721_Eval>, jule::Ptr<_1c0c66d82_SubIdentExpr>*, jule::Slice<jule::Ptr<_1c0c5e93a_TypeDecl>>*, jule::Ptr<_1c0c63c6e_Expr>*);
inline jule::Bool _1c0db4cc1_pushGenericsFromData(jule::Ptr<_1c0da8721_Eval>, jule::Slice<jule::Ptr<_1c0c5e93a_TypeDecl>>*, jule::Ptr<_1c0c63c6e_Expr>*);
inline void _1c0db5134_evalIdentDeclFromIndexing(jule::Ptr<_1c0da8721_Eval>, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0c6ac32_IndexingExpr>*);
inline jule::Bool _1c0db55da_checkGenericFn(jule::Ptr<_1c0da8721_Eval>, jule::Ptr<_1c0c98699_FnIns>*, jule::Ptr<_1c0c49480_Token>*, jule::Any*);
inline void _1c0db594d_evalFnGenericFromIndexing(jule::Ptr<_1c0da8721_Eval>, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0c6ac32_IndexingExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0db5c8e_evalIndexing(jule::Ptr<_1c0da8721_Eval>, jule::Ptr<_1c0c6ac32_IndexingExpr>);
inline __jule_tuple_x_1c0da69e9_Data__jule_tuple_x_1c0da69e9_Data _1c0db60d0_evalSlicingExprs(jule::Ptr<_1c0da8721_Eval>, jule::Ptr<_1c0c6b392_SlicingExpr>*);
inline void _1c0db6388_slicingArr(_1c0da8721_Eval*, jule::Ptr<_1c0da69e9_Data>*);
inline void _1c0db67a6_slicingStr(_1c0da8721_Eval*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0da69e9_Data>*);
inline void _1c0db6c7e_checkSlicing(_1c0da8721_Eval*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0c6b392_SlicingExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0db70c0_evalSlicing(jule::Ptr<_1c0da8721_Eval>, jule::Ptr<_1c0c6b392_SlicingExpr>);
inline void _1c0db74dd_castPtr(_1c0da8721_Eval*, jule::Ptr<_1c0dd7de3_TypeKind>, jule::Ptr<_1c0da69e9_Data>, jule::Ptr<_1c0c49480_Token>);
inline void _1c0db790b_castStruct(_1c0da8721_Eval*, jule::Ptr<_1c0dd7de3_TypeKind>, jule::Ptr<_1c0da69e9_Data>, jule::Ptr<_1c0c49480_Token>);
inline void _1c0db7d29_castRef(_1c0da8721_Eval*, jule::Ptr<_1c0dd7de3_TypeKind>, jule::Ptr<_1c0da69e9_Data>, jule::Ptr<_1c0c49480_Token>);
inline void _1c0db8247_castSlc(_1c0da8721_Eval*, jule::Ptr<_1c0dd7de3_TypeKind>, jule::Ptr<_1c0da69e9_Data>, jule::Ptr<_1c0c49480_Token>);
inline void _1c0db85aa_castStr(_1c0da8721_Eval*, jule::Ptr<_1c0da69e9_Data>, jule::Ptr<_1c0c49480_Token>);
inline void _1c0db89c8_castInt(_1c0da8721_Eval*, jule::Ptr<_1c0dd7de3_TypeKind>, jule::Ptr<_1c0da69e9_Data>, jule::Ptr<_1c0c49480_Token>);
inline void _1c0db8de6_castNum(_1c0da8721_Eval*, jule::Ptr<_1c0dd7de3_TypeKind>, jule::Ptr<_1c0da69e9_Data>, jule::Ptr<_1c0c49480_Token>);
inline void _1c0db9314_castPrim(_1c0da8721_Eval*, jule::Ptr<_1c0dd7de3_TypeKind>, jule::Ptr<_1c0da69e9_Data>, jule::Ptr<_1c0c49480_Token>);
inline void _1c0db9677_castConstant(_1c0da8721_Eval*, jule::Ptr<_1c0dd7de3_TypeKind>*, jule::Ptr<_1c0da69e9_Data>*);
inline void _1c0db9a95_castTypeEnum(_1c0da8721_Eval*, jule::Ptr<_1c0dd7de3_TypeKind>*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0c49480_Token>*);
inline void _1c0db9eb3_castTypeEnumT(_1c0da8721_Eval*, jule::Ptr<_1c0dd7de3_TypeKind>*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0c49480_Token>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0dba469_evalCastByTypeNData(_1c0da8721_Eval*, jule::Ptr<_1c0dd7de3_TypeKind>, jule::Ptr<_1c0da69e9_Data>, jule::Ptr<_1c0c49480_Token>);
inline jule::Ptr<_1c0da69e9_Data> _1c0dba920_evalCastT(jule::Ptr<_1c0da8721_Eval>, jule::Ptr<_1c0dd7de3_TypeKind>*, jule::Ptr<_1c0c63c6e_Expr>*, jule::Ptr<_1c0c49480_Token>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0dbac61_evalCast(jule::Ptr<_1c0da8721_Eval>, jule::Ptr<_1c0c665ce_CastExpr>);
inline jule::Ptr<_1c0da69e9_Data> _1c0dbb0a2_evalNsSelection(_1c0da8721_Eval*, jule::Ptr<_1c0c669a8_NsSelectionExpr>);
inline jule::Ptr<_1c0da69e9_Data> _1c0dbb558_evalStructLitExplicit(jule::Ptr<_1c0da8721_Eval>, jule::Ptr<_1c0c83552_StructIns>, jule::Slice<jule::Ptr<_1c0c63c6e_Expr>>, jule::Ptr<_1c0c49480_Token>);
inline jule::Ptr<_1c0da69e9_Data> _1c0dbb899_evalStructLit(jule::Ptr<_1c0da8721_Eval>, jule::Ptr<_1c0c68cb8_StructLit>);
inline _1c0de9ca1_typeChecker _1c0dbbb30_typeChecker(_1c0da8721_Eval*);
inline jule::Ptr<_1c0da69e9_Data> _1c0dbbe71_evalType(_1c0da8721_Eval*, jule::Ptr<_1c0c5e93a_TypeDecl>);
inline void _1c0dbc2d4_callTypeFn(jule::Ptr<_1c0da8721_Eval>, jule::Ptr<_1c0c67998_FnCallExpr>*, jule::Ptr<_1c0da69e9_Data>*);
inline void _1c0dbc647_callBuiltinFn(jule::Ptr<_1c0da8721_Eval>, jule::Ptr<_1c0c67998_FnCallExpr>*, jule::Ptr<_1c0da69e9_Data>*);
inline void _1c0dbc9aa_checkFnOfConcurrentCall(_1c0da8721_Eval*, jule::Ptr<_1c0c98699_FnIns>*, jule::Ptr<_1c0c49480_Token>);
inline void _1c0dbcdc8_processExceptionalHandler(_1c0da8721_Eval*, jule::Ptr<_1c0c98699_FnIns>*, jule::Ptr<_1c0c67998_FnCallExpr>*, jule::Ptr<_1c0da69e9_Data>*);
inline void _1c0dbd23b_callFn(jule::Ptr<_1c0da8721_Eval>, jule::Ptr<_1c0c67998_FnCallExpr>*, jule::Ptr<_1c0da69e9_Data>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0dbd57c_evalFnCall(jule::Ptr<_1c0da8721_Eval>, jule::Ptr<_1c0c67998_FnCallExpr>);
inline jule::Ptr<_1c0da69e9_Data> _1c0dbd978_evalEnumStatic(_1c0da8721_Eval*, jule::Ptr<_1c0cab27d_Enum>, jule::Ptr<_1c0c49480_Token>);
inline jule::Ptr<_1c0da69e9_Data> _1c0dbdd74_evalTypeEnumStatic(_1c0da8721_Eval*, jule::Ptr<_1c0cac988_TypeEnum>, jule::Ptr<_1c0c49480_Token>);
inline jule::Ptr<_1c0da69e9_Data> _1c0dbe270_evalStructStatic(_1c0da8721_Eval*, jule::Ptr<_1c0c83552_StructIns>, jule::Ptr<_1c0c49480_Token>);
inline jule::Ptr<_1c0da69e9_Data> _1c0dbe726_evalTraitSubIdent(_1c0da8721_Eval*, jule::Ptr<_1c0da69e9_Data>, jule::Ptr<_1c0ca8a72_Trait>, jule::Ptr<_1c0c49480_Token>);
inline jule::Ptr<_1c0da69e9_Data> _1c0dbec87_evalStructSubIdentField(_1c0da8721_Eval*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0c83552_StructIns>*, jule::Ptr<_1c0c49480_Token>*, jule::Ptr<_1c0c829a2_FieldIns>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0dc02e8_evalStructSubIdent(_1c0da8721_Eval*, jule::Ptr<_1c0da69e9_Data>, jule::Ptr<_1c0c83552_StructIns>, jule::Ptr<_1c0c66d82_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_1c0da69e9_Data> _1c0dc0639_evalIntTypeStatic(_1c0da8721_Eval*, jule::Ptr<_1c0c49480_Token>);
inline jule::Ptr<_1c0da69e9_Data> _1c0dc097a_evalUintTypeStatic(_1c0da8721_Eval*, jule::Ptr<_1c0c49480_Token>);
inline jule::Ptr<_1c0da69e9_Data> _1c0dc0cbb_evalI8TypeStatic(_1c0da8721_Eval*, jule::Ptr<_1c0c49480_Token>);
inline jule::Ptr<_1c0da69e9_Data> _1c0dc110c_evalI16TypeStatic(_1c0da8721_Eval*, jule::Ptr<_1c0c49480_Token>);
inline jule::Ptr<_1c0da69e9_Data> _1c0dc144d_evalI32TypeStatic(_1c0da8721_Eval*, jule::Ptr<_1c0c49480_Token>);
inline jule::Ptr<_1c0da69e9_Data> _1c0dc178e_evalI64TypeStatic(_1c0da8721_Eval*, jule::Ptr<_1c0c49480_Token>);
inline jule::Ptr<_1c0da69e9_Data> _1c0dc1ad0_evalU8TypeStatic(_1c0da8721_Eval*, jule::Ptr<_1c0c49480_Token>);
inline jule::Ptr<_1c0da69e9_Data> _1c0dc1e21_evalU16TypeStatic(_1c0da8721_Eval*, jule::Ptr<_1c0c49480_Token>);
inline jule::Ptr<_1c0da69e9_Data> _1c0dc2262_evalU32TypeStatic(_1c0da8721_Eval*, jule::Ptr<_1c0c49480_Token>);
inline jule::Ptr<_1c0da69e9_Data> _1c0dc25a3_evalU64TypeStatic(_1c0da8721_Eval*, jule::Ptr<_1c0c49480_Token>);
inline jule::Ptr<_1c0da69e9_Data> _1c0dc28e4_evalF32TypeStatic(_1c0da8721_Eval*, jule::Ptr<_1c0c49480_Token>);
inline jule::Ptr<_1c0da69e9_Data> _1c0dc2c35_evalF64TypeStatic(_1c0da8721_Eval*, jule::Ptr<_1c0c49480_Token>);
inline jule::Ptr<_1c0da69e9_Data> _1c0dc3131_evalPrimStatic(_1c0da8721_Eval*, jule::Str, jule::Ptr<_1c0c49480_Token>);
inline jule::Ptr<_1c0da69e9_Data> _1c0dc352c_evalTypeStatic(_1c0da8721_Eval*, jule::Ptr<_1c0da69e9_Data>, jule::Ptr<_1c0c66d82_SubIdentExpr>);
inline jule::Ptr<_1c0da69e9_Data> _1c57e2089_comptimeObjSubIdent(_1c0da8721_Eval*, jule::Ptr<_1c0cc0418_comptimeTypeInfo>*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0c66d82_SubIdentExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c57e66dc_comptimeObjSubIdent(_1c0da8721_Eval*, jule::Ptr<_1c0cb15b3_comptimeStructField>*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0c66d82_SubIdentExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c57eaceb_comptimeObjSubIdent(_1c0da8721_Eval*, jule::Ptr<_1c0cb7b2a_comptimeEnumField>*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0c66d82_SubIdentExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c580044e_comptimeObjSubIdent(_1c0da8721_Eval*, jule::Ptr<_1c0cba5bc_comptimeParam>*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0c66d82_SubIdentExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c5804cd3_comptimeObjSubIdent(_1c0da8721_Eval*, jule::Ptr<_1c0cb486e_comptimeStatic>*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0c66d82_SubIdentExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c58093e2_comptimeObjSubIdent(_1c0da8721_Eval*, jule::Ptr<_1c0cc692a_comptimeValue>*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0c66d82_SubIdentExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c580da01_comptimeObjSubIdent(_1c0da8721_Eval*, jule::Ptr<_1c0cca874_comptimeFile>*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0c66d82_SubIdentExpr>*);
inline __jule_tuple_x_1c0da69e9_Data__jule_tuple_bool _1c0dc3dce_tryComptimeObjSubIdent(_1c0da8721_Eval*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0c66d82_SubIdentExpr>);
inline jule::Ptr<_1c0da69e9_Data> _1c0dc42ca_evalObjSubIdent(_1c0da8721_Eval*, jule::Ptr<_1c0da69e9_Data>, jule::Ptr<_1c0c66d82_SubIdentExpr>);
inline jule::Ptr<_1c0da69e9_Data> _1c0dc461b_evalSubIdent(jule::Ptr<_1c0da8721_Eval>, jule::Ptr<_1c0c66d82_SubIdentExpr>);
inline jule::Ptr<_1c0da69e9_Data> _1c0dc495c_evalTuple(jule::Ptr<_1c0da8721_Eval>, jule::Ptr<_1c0c64863_TupleExpr>);
inline jule::Ptr<_1c0da69e9_Data> _1c0dc4d58_evalMap(jule::Ptr<_1c0da8721_Eval>, jule::Ptr<_1c0de6660_Map>, jule::Ptr<_1c0c6926e_BraceLit>);
inline jule::Ptr<_1c0da69e9_Data> _1c0dc5199_evalBraceLit(jule::Ptr<_1c0da8721_Eval>, jule::Ptr<_1c0c6926e_BraceLit>);
inline jule::Ptr<_1c0da69e9_Data> _1c0dc54da_evalAnonFunc(jule::Ptr<_1c0da8721_Eval>, jule::Ptr<_1c0c715ea_FnDecl>);
inline jule::Ptr<_1c0da69e9_Data> _1c0dc582b_evalBinary(jule::Ptr<_1c0da8721_Eval>, jule::Ptr<_1c0c67338_BinaryExpr>);
inline jule::Ptr<_1c0da69e9_Data> _1c0dc5b6c_evalExprKind(jule::Ptr<_1c0da8721_Eval>, jule::Any);
inline jule::Ptr<_1c0da69e9_Data> _1c0dc5ead_eval1(jule::Ptr<_1c0da8721_Eval>, jule::Ptr<_1c0c63c6e_Expr>);
inline jule::Ptr<_1c0da69e9_Data> _1c0dc62ee_eval(jule::Ptr<_1c0da8721_Eval>, jule::Ptr<_1c0c63c6e_Expr>);
inline jule::Ptr<_1c0da69e9_Data> _1c0dc6640_evalExpr1(jule::Ptr<_1c0da8721_Eval>, jule::Ptr<_1c0c63c6e_Expr>);
inline jule::Ptr<_1c0da69e9_Data> _1c0dc6981_evalExpr(jule::Ptr<_1c0da8721_Eval>, jule::Ptr<_1c0c63c6e_Expr>);
inline _1c0dc6e48_unaryEval static__1c0dc7388_new(jule::Ptr<_1c0da8721_Eval>);
inline void _1c0dc7586_minus(_1c0dc6e48_unaryEval*);
inline void _1c0dc7784_plus(_1c0dc6e48_unaryEval*);
inline void _1c0dc7982_caret(_1c0dc6e48_unaryEval*);
inline void _1c0dc7b80_excl(_1c0dc6e48_unaryEval*);
inline void _1c0dc7d7d_star(_1c0dc6e48_unaryEval*);
inline void _1c0dc807b_amper(_1c0dc6e48_unaryEval*);
inline void _1c0dc8279_typeDecl(_1c0dc6e48_unaryEval*);
inline void _1c0dc8477_evalData(_1c0dc6e48_unaryEval*);
inline jule::Ptr<_1c0da69e9_Data> _1c0dc87b8_eval(_1c0dc6e48_unaryEval*, jule::Ptr<_1c0c65d2b_UnaryExpr>);
inline _1c0dc8dd4_binaryEval static__1c0dc9489_newPlain(jule::Ptr<_1c0da8721_Eval>);
inline _1c0dc8dd4_binaryEval static__1c0dc980d_new(jule::Ptr<_1c0da8721_Eval>, jule::Ptr<_1c0c49480_Token>);
inline jule::Bool _1c0dc9a94_checkTypeCompatibility(_1c0dc8dd4_binaryEval*);
inline jule::Bool _1c0dc9d2a_checkStructCommonOperatorCompatibility(_1c0dc8dd4_binaryEval*);
inline jule::Ptr<_1c0da69e9_Data> _1c0dca0b1_evalComptimeTypeInfo(_1c0dc8dd4_binaryEval*);
inline jule::Ptr<_1c0da69e9_Data> _1c0dca347_evalNil(_1c0dc8dd4_binaryEval*);
inline jule::Ptr<_1c0da69e9_Data> _1c0dca5cd_evalEnum(_1c0dc8dd4_binaryEval*);
inline jule::Ptr<_1c0da69e9_Data> _1c0dca864_evalTypeEnum(_1c0dc8dd4_binaryEval*);
inline jule::Ptr<_1c0da69e9_Data> _1c0dcaaea_evalSptr(_1c0dc8dd4_binaryEval*);
inline jule::Ptr<_1c0da69e9_Data> _1c0dcad81_evalPtr(_1c0dc8dd4_binaryEval*);
inline jule::Ptr<_1c0da69e9_Data> _1c0dcb117_evalArr(_1c0dc8dd4_binaryEval*);
inline jule::Ptr<_1c0da69e9_Data> _1c0dcb39d_evalSlc(_1c0dc8dd4_binaryEval*);
inline jule::Ptr<_1c0da69e9_Data> _1c0dcb634_evalStruct(_1c0dc8dd4_binaryEval*);
inline jule::Ptr<_1c0da69e9_Data> _1c0dcb8ba_evalTrait(_1c0dc8dd4_binaryEval*);
inline jule::Ptr<_1c0da69e9_Data> _1c0dcbb51_evalAny(_1c0dc8dd4_binaryEval*);
inline jule::Ptr<_1c0da69e9_Data> _1c0dcbdd7_evalBool(_1c0dc8dd4_binaryEval*);
inline jule::Ptr<_1c0da69e9_Data> _1c0dcc16d_evalStr(_1c0dc8dd4_binaryEval*);
inline void _1c0dcc36b_setTypeToGreater(_1c0dc8dd4_binaryEval*);
inline void _1c0dcc624_checkModData(_1c0dc8dd4_binaryEval*, jule::Ptr<_1c0da69e9_Data>*);
inline void _1c0dcc822_mod(_1c0dc8dd4_binaryEval*);
inline jule::Bool _1c0dccc1d_numbersAreCompatibile(_1c0dc8dd4_binaryEval*, jule::Str*, jule::Str*);
inline jule::Ptr<_1c0da69e9_Data> _1c0dccea4_evalFloat(_1c0dc8dd4_binaryEval*);
inline jule::Ptr<_1c0da69e9_Data> _1c0dcd23a_evalInt(_1c0dc8dd4_binaryEval*);
inline jule::Ptr<_1c0da69e9_Data> _1c0dcd4c1_evalPrim(_1c0dc8dd4_binaryEval*);
inline void _1c0dcd6be_checkSpecialCases(_1c0dc8dd4_binaryEval*);
inline jule::Ptr<_1c0da69e9_Data> _1c0dcd955_evalOp(_1c0dc8dd4_binaryEval*);
inline void _1c0dcdc0d_evalConst(_1c0dc8dd4_binaryEval*, jule::Ptr<_1c0da69e9_Data>*);
inline void _1c0dcdeb6_checkData(_1c0dc8dd4_binaryEval*, jule::Ptr<_1c0da69e9_Data>*);
inline void _1c0dce1b4_checkDatas(_1c0dc8dd4_binaryEval*);
inline void _1c0dce46c_setModel(_1c0dc8dd4_binaryEval*, jule::Ptr<_1c0da69e9_Data>*);
inline void _1c0dce725_postEval(_1c0dc8dd4_binaryEval*, jule::Ptr<_1c0da69e9_Data>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0dceb21_solveExplicit(_1c0dc8dd4_binaryEval*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0da69e9_Data>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0dcee62_eval(_1c0dc8dd4_binaryEval*, jule::Ptr<_1c0c67338_BinaryExpr>*);
inline jule::Str _1c0dd82ab_Str(_1c0dd7de3_TypeKind*);
inline jule::Bool _1c0dd85ec_Equal(jule::Ptr<_1c0dd7de3_TypeKind>, jule::Ptr<_1c0dd7de3_TypeKind>);
inline jule::Bool _1c0dd8c3a_Binded(_1c0dd7de3_TypeKind*);
inline jule::Bool _1c0dd8ec1_IsNil(_1c0dd7de3_TypeKind*);
inline jule::Bool _1c0dd9257_Void(_1c0dd7de3_TypeKind*);
inline jule::Bool _1c0dd94dd_Comparable(_1c0dd7de3_TypeKind*);
inline jule::Bool _1c0dd9774_Mutable(_1c0dd7de3_TypeKind*);
inline jule::Bool _1c0dd9a0a_Ordered(_1c0dd7de3_TypeKind*);
inline jule::Bool _1c0dd9c91_NilCompatible(_1c0dd7de3_TypeKind*);
inline jule::Bool _1c0dda027_PerformsRC(_1c0dd7de3_TypeKind*);
inline jule::Bool _1c0dda2ad_Variadicable(_1c0dd7de3_TypeKind*);
inline jule::Ptr<_1c0de09bc_Prim> _1c0dda544_Prim(_1c0dd7de3_TypeKind*);
inline jule::Ptr<_1c0de44e8_Sptr> _1c0dda7ca_Sptr(_1c0dd7de3_TypeKind*);
inline jule::Ptr<_1c0de7cb0_Ptr> _1c0ddaa61_Ptr(_1c0dd7de3_TypeKind*);
inline jule::Ptr<_1c0cab27d_Enum> _1c0ddace7_Enum(_1c0dd7de3_TypeKind*);
inline jule::Ptr<_1c0cac988_TypeEnum> _1c0ddb07d_TypeEnum(_1c0dd7de3_TypeKind*);
inline jule::Ptr<_1c0de72dc_Arr> _1c0ddb314_Arr(_1c0dd7de3_TypeKind*);
inline jule::Ptr<_1c0de4ebb_Slc> _1c0ddb59a_Slc(_1c0dd7de3_TypeKind*);
inline jule::Ptr<_1c0c98699_FnIns> _1c0ddb831_Fn(_1c0dd7de3_TypeKind*);
inline jule::Ptr<_1c0c83552_StructIns> _1c0ddbab7_Struct(_1c0dd7de3_TypeKind*);
inline jule::Ptr<_1c0ca8a72_Trait> _1c0ddbd4d_Trait(_1c0dd7de3_TypeKind*);
inline jule::Ptr<_1c0de6660_Map> _1c0ddc0d4_Map(_1c0dd7de3_TypeKind*);
inline jule::Ptr<_1c0de5ab0_Tuple> _1c0ddc36a_Tup(_1c0dd7de3_TypeKind*);
inline jule::Bool _1c0ddc601_comptime(_1c0dd7de3_TypeKind*);
inline jule::Ptr<_1c0cb3274_comptimeStructFields> _1c0ddc887_comptimeStructFields(_1c0dd7de3_TypeKind*);
inline jule::Ptr<_1c0cb15b3_comptimeStructField> _1c0ddcb1d_comptimeStructField(_1c0dd7de3_TypeKind*);
inline jule::Ptr<_1c0cb8ec2_comptimeEnumFields> _1c0ddcda4_comptimeEnumFields(_1c0dd7de3_TypeKind*);
inline jule::Ptr<_1c0cb7b2a_comptimeEnumField> _1c0ddd13a_comptimeEnumField(_1c0dd7de3_TypeKind*);
inline jule::Ptr<_1c0cbc756_comptimeParams> _1c0ddd3c1_comptimeParams(_1c0dd7de3_TypeKind*);
inline jule::Ptr<_1c0cba5bc_comptimeParam> _1c0ddd657_comptimeParam(_1c0dd7de3_TypeKind*);
inline jule::Ptr<_1c0cb0ae0_comptimeRange> _1c0ddd8dd_comptimeRange(_1c0dd7de3_TypeKind*);
inline jule::Ptr<_1c0cbdd1d_comptimeTypeInfos> _1c0dddb74_comptimeTypeInfos(_1c0dd7de3_TypeKind*);
inline jule::Ptr<_1c0cc0418_comptimeTypeInfo> _1c0ddde0a_comptimeTypeInfo(_1c0dd7de3_TypeKind*);
inline jule::Ptr<_1c0cb6530_comptimeStatics> _1c0dde191_comptimeStatics(_1c0dd7de3_TypeKind*);
inline jule::Ptr<_1c0cb486e_comptimeStatic> _1c0dde427_comptimeStatic(_1c0dd7de3_TypeKind*);
inline jule::Ptr<_1c0cc692a_comptimeValue> _1c0dde6ad_comptimeValue(_1c0dd7de3_TypeKind*);
inline jule::Ptr<_1c0cca874_comptimeFile> _1c0dde944_comptimeFile(_1c0dd7de3_TypeKind*);
inline jule::Ptr<_1c0cc9279_comptimeFiles> _1c0ddebca_comptimeFiles(_1c0dd7de3_TypeKind*);
inline jule::Bool _1c0de0439_checked(_1c0de00b5_TypeSymbol*);
inline jule::Str _1c0de0d0d_Str(_1c0de09bc_Prim*);
inline jule::Bool _1c0de114e_Equal(jule::Ptr<_1c0de09bc_Prim>, jule::Ptr<_1c0dd7de3_TypeKind>);
inline jule::Bool _1c0de15e4_IsConstraint(_1c0de09bc_Prim*);
inline jule::Bool _1c0de187a_IsI8(_1c0de09bc_Prim*);
inline jule::Bool _1c0de1b11_IsI16(_1c0de09bc_Prim*);
inline jule::Bool _1c0de1d97_IsI32(_1c0de09bc_Prim*);
inline jule::Bool _1c0de212d_IsI64(_1c0de09bc_Prim*);
inline jule::Bool _1c0de23b4_IsU8(_1c0de09bc_Prim*);
inline jule::Bool _1c0de264a_IsU16(_1c0de09bc_Prim*);
inline jule::Bool _1c0de28d1_IsU32(_1c0de09bc_Prim*);
inline jule::Bool _1c0de2b67_IsU64(_1c0de09bc_Prim*);
inline jule::Bool _1c0de2ded_IsF32(_1c0de09bc_Prim*);
inline jule::Bool _1c0de3184_IsF64(_1c0de09bc_Prim*);
inline jule::Bool _1c0de341a_IsInt(_1c0de09bc_Prim*);
inline jule::Bool _1c0de36a1_IsUint(_1c0de09bc_Prim*);
inline jule::Bool _1c0de3937_IsUintptr(_1c0de09bc_Prim*);
inline jule::Bool _1c0de3bbd_IsBool(_1c0de09bc_Prim*);
inline jule::Bool _1c0de3e54_IsStr(_1c0de09bc_Prim*);
inline jule::Bool _1c0de41da_IsAny(_1c0de09bc_Prim*);
inline jule::Str _1c0de486c_Str(_1c0de44e8_Sptr*);
inline jule::Bool _1c0de4bad_Equal(jule::Ptr<_1c0de44e8_Sptr>, jule::Ptr<_1c0dd7de3_TypeKind>);
inline jule::Str _1c0de5450_Str(_1c0de4ebb_Slc*);
inline jule::Bool _1c0de5791_Equal(jule::Ptr<_1c0de4ebb_Slc>, jule::Ptr<_1c0dd7de3_TypeKind>);
inline jule::Str _1c0de5e34_Str(_1c0de5ab0_Tuple*);
inline jule::Bool _1c0de6275_Equal(jule::Ptr<_1c0de5ab0_Tuple>, jule::Ptr<_1c0dd7de3_TypeKind>);
inline jule::Str _1c0de69d4_Str(_1c0de6660_Map*);
inline jule::Bool _1c0de6d25_Equal(jule::Ptr<_1c0de6660_Map>, jule::Ptr<_1c0dd7de3_TypeKind>);
inline jule::Str _1c0de7661_Str(_1c0de72dc_Arr*);
inline jule::Bool _1c0de79a2_Equal(jule::Ptr<_1c0de72dc_Arr>, jule::Ptr<_1c0dd7de3_TypeKind>);
inline jule::Str _1c0de8134_Str(_1c0de7cb0_Ptr*);
inline jule::Bool _1c0de8475_Equal(jule::Ptr<_1c0de7cb0_Ptr>, jule::Ptr<_1c0dd7de3_TypeKind>);
inline jule::Bool _1c0de87e9_IsUnsafe(_1c0de7cb0_Ptr*);
inline void _1c0dea4dd_pushErr(_1c0de9ca1_typeChecker*, jule::Ptr<_1c0c49480_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c0dea6db_allowBuiltin(_1c0de9ca1_typeChecker*);
inline void _1c0dea8d9_disallowBuiltin(_1c0de9ca1_typeChecker*);
inline void _1c5ac1e29_pushReference(_1c0de9ca1_typeChecker*, jule::Ptr<_1c0c83552_StructIns>*);
inline void _1c5ac4811_pushReference(_1c0de9ca1_typeChecker*, jule::Ptr<_1c0ca8a72_Trait>*);
inline void _1c0deae4a_pushReferenceByKind(_1c0de9ca1_typeChecker*, jule::Ptr<_1c0dd7de3_TypeKind>*);
inline void _1c0deb368_pushCycleError(_1c0de9ca1_typeChecker*, jule::Any, jule::Any, _234c76a64_StrBuilder*);
inline jule::Bool _1c0deb764_checkCrossCycle(_1c0de9ca1_typeChecker*, jule::Any, _234c76a64_StrBuilder*);
inline jule::Bool _1c0debb60_checkIllegalCycles(_1c0de9ca1_typeChecker*, jule::Ptr<_1c0c60045_IdentTypeDecl>*, jule::Any);
inline jule::Trait<_1c0dd793c_Kind> _1c0dec05b_fromTypeAlias(_1c0de9ca1_typeChecker*, jule::Ptr<_1c0c60045_IdentTypeDecl>*, jule::Ptr<_1c0dd7101_TypeAlias>*);
inline jule::Ptr<_1c0cab27d_Enum> _1c0dec457_fromEnum(_1c0de9ca1_typeChecker*, jule::Ptr<_1c0c60045_IdentTypeDecl>*, jule::Ptr<_1c0cab27d_Enum>*);
inline jule::Ptr<_1c0cac988_TypeEnum> _1c0dec853_fromTypeEnum(_1c0de9ca1_typeChecker*, jule::Ptr<_1c0c60045_IdentTypeDecl>*, jule::Ptr<_1c0cac988_TypeEnum>*);
inline jule::Ptr<_1c0ca8a72_Trait> _1c0decc4e_fromTrait(_1c0de9ca1_typeChecker*, jule::Ptr<_1c0c60045_IdentTypeDecl>*, jule::Ptr<_1c0ca8a72_Trait>*);
inline jule::Bool _1c0ded14a_checkStructIns(_1c0de9ca1_typeChecker*, jule::Ptr<_1c0c83552_StructIns>*, jule::Ptr<_1c0c49480_Token>*);
inline void _1c0ded403_appendUsedStructReference(_1c0de9ca1_typeChecker*, jule::Ptr<_1c0c807c4_Struct>*);
inline jule::Ptr<_1c0c83552_StructIns> _1c0ded7ee_buildStructInstance(_1c0de9ca1_typeChecker*, jule::Ptr<_1c0c60045_IdentTypeDecl>*, jule::Ptr<_1c0c807c4_Struct>*);
inline jule::Ptr<_1c0c83552_StructIns> _1c0dedbea_fromStruct(_1c0de9ca1_typeChecker*, jule::Ptr<_1c0c60045_IdentTypeDecl>*, jule::Ptr<_1c0c807c4_Struct>*);
inline jule::Trait<_1c0dd793c_Kind> _1c0dee03b_getDef(_1c0de9ca1_typeChecker*, jule::Ptr<_1c0c60045_IdentTypeDecl>*);
inline jule::Trait<_1c0dd793c_Kind> _1c0dee37c_buildIdent(_1c0de9ca1_typeChecker*, jule::Ptr<_1c0c60045_IdentTypeDecl>);
inline jule::Trait<_1c0dd793c_Kind> _1c0dee6bd_buildSubIdent(_1c0de9ca1_typeChecker*, jule::Ptr<_1c0c6030e_SubIdentTypeDecl>);
inline jule::Ptr<_1c0de44e8_Sptr> _1c0deea0e_buildSptrFromType(_1c0de9ca1_typeChecker*, jule::Ptr<_1c0dd7de3_TypeKind>*);
inline jule::Ptr<_1c0de44e8_Sptr> _1c0deed50_buildSptr(_1c0de9ca1_typeChecker*, jule::Ptr<_1c0c609d5_SptrTypeDecl>);
inline jule::Ptr<_1c0de7cb0_Ptr> _1c0e00191_buildPtrFromType(_1c0de9ca1_typeChecker*, jule::Ptr<_1c0dd7de3_TypeKind>*);
inline jule::Ptr<_1c0de7cb0_Ptr> _1c0e004d2_buildPtr(_1c0de9ca1_typeChecker*, jule::Ptr<_1c0c61464_PtrTypeDecl>);
inline jule::Ptr<_1c0de4ebb_Slc> _1c0e00823_buildSlc(_1c0de9ca1_typeChecker*, jule::Ptr<_1c0c60d6a_SlcTypeDecl>);
inline jule::Ptr<_1c0de72dc_Arr> _1c0e00b64_buildArr(_1c0de9ca1_typeChecker*, jule::Ptr<_1c0c61c06_ArrTypeDecl>);
inline jule::Ptr<_1c0de6660_Map> _1c0e00ea5_buildMap(_1c0de9ca1_typeChecker*, jule::Ptr<_1c0c62454_MapTypeDecl>);
inline jule::Ptr<_1c0de5ab0_Tuple> _1c0e012e6_buildTuple(_1c0de9ca1_typeChecker*, jule::Ptr<_1c0c61167_TupleTypeDecl>);
inline jule::Bool _1c0e01637_checkFuncTypes(_1c0de9ca1_typeChecker*, jule::Ptr<_1c0c98699_FnIns>*);
inline jule::Ptr<_1c0c98699_FnIns> _1c0e01978_buildFunc(_1c0de9ca1_typeChecker*, jule::Ptr<_1c0c715ea_FnDecl>);
inline jule::Trait<_1c0dd793c_Kind> _1c0e01cb9_buildByNamespace(_1c0de9ca1_typeChecker*, jule::Ptr<_1c0c606d8_NamespaceTypeDecl>);
inline jule::Ptr<_1c0dd7de3_TypeKind> _1c0e0210a_build(_1c0de9ca1_typeChecker*, jule::Any*);
inline jule::Ptr<_1c0dd7de3_TypeKind> _1c0e0244b_checkDecl(_1c0de9ca1_typeChecker*, jule::Ptr<_1c0c5e93a_TypeDecl>*);
inline jule::Bool static__1c0e02d97_prim(jule::Str*, jule::Ptr<_1c0de09bc_Prim>);
inline jule::Bool static__1c0e0321b_exist(jule::Str*, jule::Ptr<_1c0dd7de3_TypeKind>*);
inline void _1c1952aa0_stop(_1c195242e_scopeParser*);
inline jule::Bool _1c1952d36_stopped(_1c195242e_scopeParser*);
inline jule::Bool _1c19530bc_finished(_1c195242e_scopeParser*);
inline jule::Bool _1c1953353_isLastSt(_1c195242e_scopeParser*);
inline void _1c19536b6_pushErr(_1c195242e_scopeParser*, jule::Ptr<_1c0c49480_Token>, jule::Str);
inline void _1c1953a29_pushSuggestion(_1c195242e_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1c1953cd2_insertAsNext(_1c195242e_scopeParser*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Ptr<_1c1951a8d_stmt> _1c1954068_next(_1c195242e_scopeParser*);
inline jule::Ptr<_1c0c6e95b_ScopeTree> _1c1954464_buildScope(_1c195242e_scopeParser*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*, jule::Ptr<_1c0c49480_Token>);
inline jule::Ptr<_1c0c727a5_VarDecl> _1c19547a5_buildVarSt(_1c195242e_scopeParser*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Ptr<_1c0c72b7e_RetSt> _1c1954ae6_buildRetSt(_1c195242e_scopeParser*, jule::Slice<jule::Ptr<_1c0c49480_Token>>);
inline jule::Ptr<_1c0c733ee_Iter> _1c1954e37_buildWhileNextIter(_1c195242e_scopeParser*, jule::Ptr<_1c1951a8d_stmt>*);
inline jule::Ptr<_1c0c73c29_WhileKind> _1c1955278_buildWhileIterKind(_1c195242e_scopeParser*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>> _1c19555b9_getRangeKindKeysTokens(_1c195242e_scopeParser*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Ptr<_1c0c727a5_VarDecl> _1c195590a_buildRangeKindKey(_1c195242e_scopeParser*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Slice<jule::Ptr<_1c0c727a5_VarDecl>> _1c1955c4b_buildRangeKindKeys(_1c195242e_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>>*);
inline void _1c19560ae_setupRangeKindKeysPlain(_1c195242e_scopeParser*, jule::Ptr<_1c0c74631_RangeKind>*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline void _1c1956422_setupRangeKindKeysExplicit(_1c195242e_scopeParser*, jule::Ptr<_1c0c74631_RangeKind>*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline void _1c1956785_setupRangeKindKeys(_1c195242e_scopeParser*, jule::Ptr<_1c0c74631_RangeKind>*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Ptr<_1c0c74631_RangeKind> _1c1956c3b_buildRangeIterKind(_1c195242e_scopeParser*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*, jule::Ptr<_1c0c49480_Token>*);
inline jule::Any _1c1957137_buildCommonIterKind(_1c195242e_scopeParser*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*, jule::Ptr<_1c0c49480_Token>*);
inline jule::Ptr<_1c0c733ee_Iter> _1c1957478_buildCommonIter(_1c195242e_scopeParser*, jule::Slice<jule::Ptr<_1c0c49480_Token>>);
inline jule::Ptr<_1c0c733ee_Iter> _1c19577b9_buildIterSt(_1c195242e_scopeParser*, jule::Ptr<_1c1951a8d_stmt>*);
inline jule::Ptr<_1c0c74a0a_BreakSt> _1c1957b0a_buildBreakSt(_1c195242e_scopeParser*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Ptr<_1c0c74dd4_ContSt> _1c1957e4b_buildContSt(_1c195242e_scopeParser*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Ptr<_1c0c7538a_If> _1c195828c_buildIf(_1c195242e_scopeParser*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Ptr<_1c0c75764_Else> _1c19585cd_buildElse(_1c195242e_scopeParser*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Ptr<_1c0c75c1a_Conditional> _1c195891e_buildIfElseChain(_1c195242e_scopeParser*, jule::Slice<jule::Ptr<_1c0c49480_Token>>);
inline jule::Ptr<_1c0c63c6e_Expr> _1c1958c60_buildCoCallSt(_1c195242e_scopeParser*, jule::Slice<jule::Ptr<_1c0c49480_Token>>);
inline jule::Ptr<_1c0c6c3e8_GotoSt> _1c19590a1_buildGotoSt(_1c195242e_scopeParser*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Ptr<_1c0c6c6e5_FallSt> _1c19593e2_buildFallSt(_1c195242e_scopeParser*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Ptr<_1c0c76457_TypeAliasDecl> _1c1959733_buildTypeAliasSt(_1c195242e_scopeParser*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline void _1c1959c0b_pushCaseExpr(_1c195242e_scopeParser*, jule::Slice<jule::Ptr<_1c0c49480_Token>>, jule::Ptr<_1c0c49480_Token>, jule::Bool, jule::Slice<jule::Ptr<_1c0c63c6e_Expr>>*);
inline __jule_tuple_sx_1c0c63c6e_Expr__jule_tuple_bool _1c195a1b2_buildCaseExprs(_1c195242e_scopeParser*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*, jule::Ptr<_1c0c49480_Token>*, jule::Bool);
inline jule::Ptr<_1c0c6e95b_ScopeTree> _1c195a503_buildCaseScope(_1c195242e_scopeParser*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline __jule_tuple_x_1c0c7690d_Case__jule_tuple_bool _1c195a8ee_buildCase(_1c195242e_scopeParser*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*, jule::Bool);
inline __jule_tuple_sx_1c0c7690d_Case__jule_tuple_x_1c0c75764_Else _1c195acea_buildCases(_1c195242e_scopeParser*, jule::Slice<jule::Ptr<_1c0c49480_Token>>, jule::Bool);
inline jule::Ptr<_1c0c77227_MatchCase> _1c195b13b_buildMatchCase(_1c195242e_scopeParser*, jule::Slice<jule::Ptr<_1c0c49480_Token>>);
inline jule::Ptr<_1c0c6e95b_ScopeTree> _1c195b47c_buildScopeSt(_1c195242e_scopeParser*, jule::Slice<jule::Ptr<_1c0c49480_Token>>);
inline jule::Ptr<_1c0c6c01e_LabelSt> _1c195b7bd_buildLabelSt(_1c195242e_scopeParser*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline __jule_tuple__1c0c6e098_StmtData__jule_tuple_bool _1c195bb0e_buildIdSt(_1c195242e_scopeParser*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Ptr<_1c196c2e5_assignInfo> _1c195be50_buildAssignInfo(_1c195242e_scopeParser*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Ptr<_1c0c6cd55_AssignLeft> _1c195c291_buildAssignL(_1c195242e_scopeParser*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Slice<jule::Ptr<_1c0c6cd55_AssignLeft>> _1c195c5d2_buildAssignLs(_1c195242e_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>>*);
inline __jule_tuple__1c0c6e098_StmtData__jule_tuple_bool _1c195c923_buildPlainAssign(_1c195242e_scopeParser*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Bool _1c195cd1e_buildDeclAssign1(_1c195242e_scopeParser*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*, jule::Ptr<_1c0c6d3d8_AssignSt>*);
inline __jule_tuple_x_1c0c6d3d8_AssignSt__jule_tuple_bool _1c195d160_buildDeclAssign(_1c195242e_scopeParser*, jule::Slice<jule::Ptr<_1c0c49480_Token>>);
inline __jule_tuple__1c0c6e098_StmtData__jule_tuple_bool _1c195d4a1_buildAssignSt(_1c195242e_scopeParser*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Ptr<_1c0c64643_UseExpr> _1c195d7e2_buildUseExpr(_1c195242e_scopeParser*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Any _1c195db33_buildConstSt(_1c195242e_scopeParser*, jule::Ptr<_1c1951a8d_stmt>*);
inline jule::Any _1c195de74_buildSt(_1c195242e_scopeParser*, jule::Ptr<_1c1951a8d_stmt>*);
inline void _1c195e2d7_build(_1c195242e_scopeParser*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*, jule::Ptr<_1c0c6e95b_ScopeTree>*);
inline void _1c196063a_pushErr(_1c195ed54_exprBuilder*, jule::Ptr<_1c0c49480_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c196099d_pushSuggestion(_1c195ed54_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1c0c64863_TupleExpr> _1c1960cde_buildTuple(_1c195ed54_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>>*);
inline jule::Ptr<_1c0c64c09_LitExpr> _1c1961130_buildLit(_1c195ed54_exprBuilder*, jule::Ptr<_1c0c49480_Token>);
inline jule::Any _1c19617b2_buildSingle(_1c195ed54_exprBuilder*, jule::Ptr<_1c0c49480_Token>);
inline jule::Ptr<_1c0c65589_IdentExpr> _1c1961b03_buildBindIdent(_1c195ed54_exprBuilder*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Ptr<_1c0c65d2b_UnaryExpr> _1c1961e44_buildUnary(_1c195ed54_exprBuilder*, jule::Slice<jule::Ptr<_1c0c49480_Token>>);
inline jule::Ptr<_1c0c66d82_SubIdentExpr> _1c1962285_buildObjSubIdent(_1c195ed54_exprBuilder*, jule::Slice<jule::Ptr<_1c0c49480_Token>>);
inline jule::Ptr<_1c0c669a8_NsSelectionExpr> _1c19625c6_buildNsSubIdent(_1c195ed54_exprBuilder*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Ptr<_1c0c5e93a_TypeDecl> _1c1962917_buildType(_1c195ed54_exprBuilder*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Any _1c1962c58_buildSubIdent(_1c195ed54_exprBuilder*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Ptr<_1c0c66205_VariadicExpr> _1c1963099_buildVariadic(_1c195ed54_exprBuilder*, jule::Slice<jule::Ptr<_1c0c49480_Token>>);
inline jule::Ptr<_1c0c64038_RangeExpr> _1c19633da_buildBetweenParentheses(_1c195ed54_exprBuilder*, jule::Slice<jule::Ptr<_1c0c49480_Token>>);
inline jule::Ptr<_1c0c665ce_CastExpr> _1c196372b_tryBuildCast(_1c195ed54_exprBuilder*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline void _1c1963b49_pushArg(_1c195ed54_exprBuilder*, jule::Slice<jule::Ptr<_1c0c63c6e_Expr>>*, jule::Slice<jule::Ptr<_1c0c49480_Token>>, jule::Ptr<_1c0c49480_Token>);
inline jule::Slice<jule::Ptr<_1c0c63c6e_Expr>> _1c1963e8a_buildArgs(_1c195ed54_exprBuilder*, jule::Slice<jule::Ptr<_1c0c49480_Token>>);
inline jule::Ptr<_1c0c67998_FnCallExpr> _1c1964782_buildFnCall(_1c195ed54_exprBuilder*, jule::Ptr<_1c0c49480_Token>*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Any _1c1964ac3_buildParenthesesRange(_1c195ed54_exprBuilder*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Ptr<_1c0c650d3_UnsafeExpr> _1c1964e14_buildUnsafeExpr(_1c195ed54_exprBuilder*, jule::Slice<jule::Ptr<_1c0c49480_Token>>);
inline jule::Ptr<_1c0c715ea_FnDecl> _1c1965255_buildAnonFn(_1c195ed54_exprBuilder*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Any _1c1965596_buildUnsafe(_1c195ed54_exprBuilder*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline void _1c19659b4_pushRangeLitPart(_1c195ed54_exprBuilder*, jule::Slice<jule::Ptr<_1c0c49480_Token>>, jule::Ptr<_1c0c49480_Token>, jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>> _1c1965d05_getBraceRangeLitExprParts(_1c195ed54_exprBuilder*, jule::Slice<jule::Ptr<_1c0c49480_Token>>);
inline jule::Ptr<_1c0c6848d_FieldExprPair> _1c1966146_buildFieldExprPair(_1c195ed54_exprBuilder*, jule::Slice<jule::Ptr<_1c0c49480_Token>>);
inline jule::Ptr<_1c0c63c6e_Expr> _1c1966487_buildStructLitExpr(_1c195ed54_exprBuilder*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Slice<jule::Ptr<_1c0c63c6e_Expr>> _1c19667c8_buildStructLitExprs(_1c195ed54_exprBuilder*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Ptr<_1c0c68cb8_StructLit> _1c1966b19_buildTypedStructLiteral(_1c195ed54_exprBuilder*, jule::Slice<jule::Ptr<_1c0c49480_Token>>);
inline jule::Ptr<_1c0c63c6e_Expr> _1c1966e5a_buildBraceLitPart(_1c195ed54_exprBuilder*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Ptr<_1c0c6926e_BraceLit> _1c196729b_buildBraceLit(_1c195ed54_exprBuilder*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Any _1c19675dc_buildBraceRange(_1c195ed54_exprBuilder*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>> _1c196792d_getEnumerableParts(_1c195ed54_exprBuilder*, jule::Slice<jule::Ptr<_1c0c49480_Token>>);
inline jule::Ptr<_1c0c6a2c5_SliceExpr> _1c1967c6e_buildSlice(_1c195ed54_exprBuilder*, jule::Slice<jule::Ptr<_1c0c49480_Token>>);
inline jule::Ptr<_1c0c6ac32_IndexingExpr> _1c1968225_buildIndexing(_1c195ed54_exprBuilder*, jule::Slice<jule::Ptr<_1c0c49480_Token>>, jule::Slice<jule::Ptr<_1c0c49480_Token>>, jule::Ptr<_1c0c49480_Token>);
inline jule::Ptr<_1c0c6b392_SlicingExpr> _1c1968841_buildSlicing(_1c195ed54_exprBuilder*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*, jule::Ptr<_1c0c49480_Token>*, jule::Ptr<_1c0c49480_Token>);
inline jule::Any _1c1968b82_buildBracketRange(_1c195ed54_exprBuilder*, jule::Slice<jule::Ptr<_1c0c49480_Token>>);
inline jule::Any _1c1968ec3_buildExclRight(_1c195ed54_exprBuilder*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Any _1c1969314_buildData(_1c195ed54_exprBuilder*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Any _1c1969710_buildBinary(_1c195ed54_exprBuilder*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*, jule::I64);
inline jule::Any _1c1969a51_build(_1c195ed54_exprBuilder*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Any _1c1969d92_buildKind(_1c195ed54_exprBuilder*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Ptr<_1c0c63c6e_Expr> _1c196a1d3_buildFromTokens(_1c195ed54_exprBuilder*, jule::Slice<jule::Ptr<_1c0c49480_Token>>);
inline void _1c19709e1_stop(_1c19706e4_parser*);
inline jule::Bool _1c1970c77_stopped(_1c19706e4_parser*);
inline void _1c1971195_pushErr(_1c19706e4_parser*, jule::Ptr<_1c0c49480_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c1971508_pushSuggestion(_1c19706e4_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1c0c63c6e_Expr> _1c1971849_buildExpr(jule::Ptr<_1c19706e4_parser>, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Ptr<_1c0c5dd57_Directive> _1c1971b8a_buildDirective(_1c19706e4_parser*, jule::Slice<jule::Ptr<_1c0c49480_Token>>);
inline void _1c1971e43_pushDirective(_1c19706e4_parser*, jule::Ptr<_1c0c5dd57_Directive>);
inline jule::Ptr<_1c0c6e95b_ScopeTree> _1c197233e_buildScope(jule::Ptr<_1c19706e4_parser>, jule::Slice<jule::Ptr<_1c0c49480_Token>>*, jule::Ptr<_1c0c49480_Token>);
inline __jule_tuple_x_1c0c5e93a_TypeDecl__jule_tuple_bool _1c19727e5__buildType(jule::Ptr<_1c19706e4_parser>, jule::Slice<jule::Ptr<_1c0c49480_Token>>*, jule::I64*, jule::Bool);
inline __jule_tuple_x_1c0c5e93a_TypeDecl__jule_tuple_bool _1c1972c9b_buildType(jule::Ptr<_1c19706e4_parser>, jule::Slice<jule::Ptr<_1c0c49480_Token>>*, jule::I64*, jule::Bool);
inline jule::Ptr<_1c0c76457_TypeAliasDecl> _1c19730dc_buildTypeAliasDecl(jule::Ptr<_1c19706e4_parser>, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline void _1c1973450_buildVarTypeAndExpr(jule::Ptr<_1c19706e4_parser>, jule::Ptr<_1c0c727a5_VarDecl>*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline void _1c19737b3_buildVarCommon(jule::Ptr<_1c19706e4_parser>, jule::Ptr<_1c0c727a5_VarDecl>*, jule::Slice<jule::Ptr<_1c0c49480_Token>>);
inline void _1c1973b26_buildVarBegin(_1c19706e4_parser*, jule::Ptr<_1c0c727a5_VarDecl>*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Ptr<_1c0c727a5_VarDecl> _1c1973e67_buildVar(jule::Ptr<_1c19706e4_parser>, jule::Slice<jule::Ptr<_1c0c49480_Token>>);
inline jule::Ptr<_1c0c6bb45_GenericDecl> _1c19742a8_buildGeneric(jule::Ptr<_1c19706e4_parser>, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Slice<jule::Ptr<_1c0c6bb45_GenericDecl>> _1c19746a4_buildGenerics(jule::Ptr<_1c19706e4_parser>, jule::Slice<jule::Ptr<_1c0c49480_Token>>*, jule::Ptr<_1c0c49480_Token>*);
inline jule::Ptr<_1c0c70198_ParamDecl> _1c19749e5_buildSelfParam(_1c19706e4_parser*, jule::Slice<jule::Ptr<_1c0c49480_Token>>);
inline void _1c1974e13_paramTypeBegin(_1c19706e4_parser*, jule::Ptr<_1c0c70198_ParamDecl>*, jule::I64*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline void _1c1975276_buildParamType(jule::Ptr<_1c19706e4_parser>, jule::Ptr<_1c0c70198_ParamDecl>*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline void _1c19755d9_buildParamBody(jule::Ptr<_1c19706e4_parser>, jule::Ptr<_1c0c70198_ParamDecl>*, jule::Slice<jule::Ptr<_1c0c49480_Token>>);
inline jule::Ptr<_1c0c70198_ParamDecl> _1c197592a_buildParam(jule::Ptr<_1c19706e4_parser>, jule::Slice<jule::Ptr<_1c0c49480_Token>>);
inline void _1c1975bd3_checkParams(_1c19706e4_parser*, jule::Slice<jule::Ptr<_1c0c70198_ParamDecl>>*);
inline jule::Slice<jule::Ptr<_1c0c70198_ParamDecl>> _1c19760ce_buildParams(jule::Ptr<_1c19706e4_parser>, jule::Slice<jule::Ptr<_1c0c49480_Token>>*, jule::Bool);
inline __jule_tuple_x_1c0c6282d_RetTypeDecl__jule_tuple_bool _1c19764ca_buildMultiRetType(jule::Ptr<_1c19706e4_parser>, jule::Slice<jule::Ptr<_1c0c49480_Token>>*, jule::I64*);
inline __jule_tuple_x_1c0c6282d_RetTypeDecl__jule_tuple_bool _1c19768c6_buildRetType(jule::Ptr<_1c19706e4_parser>, jule::Slice<jule::Ptr<_1c0c49480_Token>>*, jule::I64*);
inline jule::Ptr<_1c0c715ea_FnDecl> _1c1976d7c_buildFnPrototype(jule::Ptr<_1c19706e4_parser>, jule::Slice<jule::Ptr<_1c0c49480_Token>>*, jule::I64*, jule::Bool);
inline jule::Ptr<_1c0c715ea_FnDecl> _1c1977333_buildFn(jule::Ptr<_1c19706e4_parser>, jule::Slice<jule::Ptr<_1c0c49480_Token>>*, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_1c0c49480_Token>> _1c1977674_getUseDeclSelectors(_1c19706e4_parser*, jule::Slice<jule::Ptr<_1c0c49480_Token>>);
inline void _1c19779d7_buildBindUseDecl(_1c19706e4_parser*, jule::Ptr<_1c0c77a41_UseDecl>*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Str _1c1977d28_useDeclTokstoa(_1c19706e4_parser*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline void _1c197818b_buildStdUseDecl(_1c19706e4_parser*, jule::Ptr<_1c0c77a41_UseDecl>*, jule::Slice<jule::Ptr<_1c0c49480_Token>>);
inline void _1c19784ee_buildIdentUseDecl(_1c19706e4_parser*, jule::Ptr<_1c0c77a41_UseDecl>*, jule::Slice<jule::Ptr<_1c0c49480_Token>>);
inline void _1c1978862_parseUseDecl(_1c19706e4_parser*, jule::Ptr<_1c0c77a41_UseDecl>*, jule::Slice<jule::Ptr<_1c0c49480_Token>>);
inline jule::Ptr<_1c0c77a41_UseDecl> _1c1978c5d_buildUseDecl(_1c19706e4_parser*, jule::Slice<jule::Ptr<_1c0c49480_Token>>, jule::Bool);
inline jule::Ptr<_1c0c5e93a_TypeDecl> _1c1979159_buildTypeEnumItemKind(jule::Ptr<_1c19706e4_parser>, jule::I64*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Slice<jule::Ptr<_1c0c793d3_TypeEnumItemDecl>> _1c197949a_buildTypeEnumItems(jule::Ptr<_1c19706e4_parser>, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Ptr<_1c0c79a43_TypeEnumDecl> _1c19797db_buildTypeEnumDecl(jule::Ptr<_1c19706e4_parser>, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Ptr<_1c0c63c6e_Expr> _1c1979bd7_buildEnumItemExpr(jule::Ptr<_1c19706e4_parser>, jule::I64*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Slice<jule::Ptr<_1c0c77ee7_EnumItemDecl>> _1c197a028_buildEnumItems(jule::Ptr<_1c19706e4_parser>, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Ptr<_1c0c78aa8_EnumDecl> _1c197a369_buildEnumDecl(jule::Ptr<_1c19706e4_parser>, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Any _1c197a6aa_buildNodeEnumDecl(jule::Ptr<_1c19706e4_parser>, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Ptr<_1c0c79d0c_FieldDecl> _1c197a9eb_buildField(jule::Ptr<_1c19706e4_parser>, jule::Slice<jule::Ptr<_1c0c49480_Token>>);
inline jule::Slice<jule::Ptr<_1c0c79d0c_FieldDecl>> _1c197ad3c_buildStructDeclFields(jule::Ptr<_1c19706e4_parser>, jule::Slice<jule::Ptr<_1c0c49480_Token>>);
inline jule::Ptr<_1c0c7a703_StructDecl> _1c197b17d_buildStructDecl(jule::Ptr<_1c19706e4_parser>, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline void _1c197b436_checkMethodReceiver(_1c19706e4_parser*, jule::Ptr<_1c0c715ea_FnDecl>*);
inline void _1c197b799_buildTraitBody(jule::Ptr<_1c19706e4_parser>, jule::Ptr<_1c0c7ae40_TraitDecl>*, jule::Slice<jule::Ptr<_1c0c49480_Token>>);
inline jule::Ptr<_1c0c7ae40_TraitDecl> _1c197bada_buildTraitDecl(jule::Ptr<_1c19706e4_parser>, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Ptr<_1c0c715ea_FnDecl> _1c197be2b_buildBindFn(jule::Ptr<_1c19706e4_parser>, jule::Slice<jule::Ptr<_1c0c49480_Token>>);
inline jule::Ptr<_1c0c727a5_VarDecl> _1c197c26c_buildBindVar(jule::Ptr<_1c19706e4_parser>, jule::Slice<jule::Ptr<_1c0c49480_Token>>);
inline jule::Ptr<_1c0c7a703_StructDecl> _1c197c5ad_buildBindStruct(jule::Ptr<_1c19706e4_parser>, jule::Slice<jule::Ptr<_1c0c49480_Token>>);
inline jule::Ptr<_1c0c76457_TypeAliasDecl> _1c197c8ee_buildBindTypeAlias(jule::Ptr<_1c19706e4_parser>, jule::Slice<jule::Ptr<_1c0c49480_Token>>);
inline jule::Ptr<_1c0c77a41_UseDecl> _1c197cc40_buildBindUse(jule::Ptr<_1c19706e4_parser>, jule::Slice<jule::Ptr<_1c0c49480_Token>>);
inline jule::Any _1c197d081_buildBind(jule::Ptr<_1c19706e4_parser>, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Ptr<_1c0c715ea_FnDecl> _1c197d3c2_getMethod(jule::Ptr<_1c19706e4_parser>, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline void _1c197d735_parseImplBody(jule::Ptr<_1c19706e4_parser>, jule::Ptr<_1c0c7b5a0_Impl>*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Ptr<_1c0c7b5a0_Impl> _1c197da76_buildImpl(jule::Ptr<_1c19706e4_parser>, jule::Slice<jule::Ptr<_1c0c49480_Token>>);
inline jule::Any _1c197ddb7_buildNodeData(jule::Ptr<_1c19706e4_parser>, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline void _1c197e170_applyFnMeta(_1c19706e4_parser*, jule::Ptr<_1c0c715ea_FnDecl>*);
inline void _1c197e428_applyMeta(_1c19706e4_parser*, _1c0c5d939_Node*);
inline void _1c197e6d1_pushUseDecl(jule::Ptr<_1c19706e4_parser>, jule::Ptr<_1c0c77a41_UseDecl>*);
inline jule::Bool _1c197ea22_pushMetaNodes(jule::Ptr<_1c19706e4_parser>, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline _1c0c5d939_Node _1c197ed63_parseNode(jule::Ptr<_1c19706e4_parser>, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline void _1c198011b_appendNode(jule::Ptr<_1c19706e4_parser>, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline void _1c19805e4_removeRange(_1c19706e4_parser*, jule::I64, jule::U64, jule::Slice<jule::Ptr<_1c0c49480_Token>>*, jule::Slice<jule::I64>*);
inline void _1c1980a12_pushWrongOrderCloseErr(_1c19706e4_parser*, jule::Ptr<_1c0c49480_Token>*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*, jule::Slice<jule::I64>*);
inline void _1c1980eda_pushRangeClose(_1c19706e4_parser*, jule::Ptr<_1c0c49480_Token>, jule::U64, jule::Slice<jule::Ptr<_1c0c49480_Token>>*, jule::Slice<jule::I64>*);
inline void _1c1981293_checkRanges(_1c19706e4_parser*, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline void _1c198154b_parse(jule::Ptr<_1c19706e4_parser>, jule::Ptr<_1c0c4ec16_File>*);
inline void _1c1982daa_pushErr(_1c1982816_typeBuilder*, jule::Ptr<_1c0c49480_Token>, jule::Str);
inline void _1c198321d_pushSuggestion(_1c1982816_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1c0c5e93a_TypeDecl> _1c19834a4_buildNamespace(_1c1982816_typeBuilder*);
inline jule::Slice<jule::Ptr<_1c0c5e93a_TypeDecl>> _1c198373a_buildGenerics(_1c1982816_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>> _1c19839c1_identGenerics(_1c1982816_typeBuilder*);
inline jule::Ptr<_1c0c5e93a_TypeDecl> _1c1983c57_buildIdent(_1c1982816_typeBuilder*);
inline jule::Ptr<_1c0c5e93a_TypeDecl> _1c1983edd_buildCppLink(_1c1982816_typeBuilder*);
inline jule::Ptr<_1c0c5e93a_TypeDecl> _1c1984274_buildFn(_1c1982816_typeBuilder*);
inline jule::Ptr<_1c0c5e93a_TypeDecl> _1c198450a_buildPtr(_1c1982816_typeBuilder*);
inline jule::Ptr<_1c0c5e93a_TypeDecl> _1c1984791_buildSptr(_1c1982816_typeBuilder*);
inline jule::Ptr<_1c0c5e93a_TypeDecl> _1c1984a27_buildSlc(_1c1982816_typeBuilder*);
inline jule::Ptr<_1c0c5e93a_TypeDecl> _1c1984cad_buildArr(_1c1982816_typeBuilder*);
inline jule::Ptr<_1c0c5e93a_TypeDecl> _1c1985044_buildMap(_1c1982816_typeBuilder*);
inline jule::Ptr<_1c0c5e93a_TypeDecl> _1c19852ca_buildEnumerable(_1c1982816_typeBuilder*);
inline jule::Ptr<_1c0c5e93a_TypeDecl> _1c1985561_step(_1c1982816_typeBuilder*);
inline __jule_tuple_x_1c0c5e93a_TypeDecl__jule_tuple_bool _1c19857e7_build(_1c1982816_typeBuilder*);
inline void _1c11500d3_pushErr(_1c114ea83_directiveEval*, jule::Ptr<_1c0c49480_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>> _1c11504ce_splitOperans(_1c114ea83_directiveEval*, jule::U64, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Bool _1c1150820_evalDirectiveIdent(_1c114ea83_directiveEval*, jule::Str);
inline jule::Bool _1c1150b61_evalDirectivePart(_1c114ea83_directiveEval*, jule::Slice<jule::Ptr<_1c0c49480_Token>>);
inline jule::Bool _1c1150de7_eval(_1c114ea83_directiveEval*);
inline jule::Ptr<_1c198694c_JuleImporter> static__1c1986d48_New(_1c114d5a9_CompileInfo);
inline jule::Slice<jule::Ptr<_1c0d09782_ImportInfo>> _1c19870ce_AllPackages(_1c198694c_JuleImporter*);
inline void _1c198751e_SetModPath(_1c198694c_JuleImporter*, jule::Str);
inline jule::Str _1c19877a5_GetModPath(_1c198694c_JuleImporter*);
inline jule::Str _1c1987ae6_ModById(_1c198694c_JuleImporter*, jule::I64);
inline jule::Ptr<_1c0d09782_ImportInfo> _1c1987e37_GetImport(_1c198694c_JuleImporter*, jule::Str);
inline __jule_tuple_sx_1c0c5ca26_Ast__jule_tuple_s_21b8c54de_Log _1c1988333_ImportPackage(_1c198694c_JuleImporter*, jule::Str, jule::Bool);
inline void _1c19885db_Imported(_1c198694c_JuleImporter*, jule::Ptr<_1c0d09782_ImportInfo>);
inline __jule_tuple_bool__jule_tuple_s_21b8c54de_Log _1c1988a1a_isPassBuildDirectives(_1c198694c_JuleImporter*, jule::Ptr<_1c0c5ca26_Ast>*);
inline jule::Bool _1c61ebb08_isCommonOrdered(jule::Slice<jule::Ptr<_1c0c807c4_Struct>>, jule::Ptr<_1c0c807c4_Struct>);
inline jule::Bool _1c6201a0e_isCommonOrdered(jule::Slice<jule::Ptr<_1c0d4dde2_Var>>, jule::Ptr<_1c0d4dde2_Var>);
inline void _1c61e81ed_orderCommon(jule::Slice<jule::Ptr<_1c0c807c4_Struct>>*);
inline void _1c61e8ebd_orderCommon(jule::Slice<jule::Ptr<_1c0d4dde2_Var>>*);
inline void static__1c198c645_orderStructures(jule::Slice<jule::Ptr<_1c0c807c4_Struct>>*);
inline void static__1c198c876_orderVars(jule::Slice<jule::Ptr<_1c0d4dde2_Var>>*);
inline void _1c13465b5_optimizeChild(jule::Ptr<_1c13460cb_scopeDeadCode>, jule::Ptr<_1c0cd763e_Scope>*);
inline void _1c134686d_optimizeBodyChildExceptional(jule::Ptr<_1c13460cb_scopeDeadCode>, jule::Ptr<_1c0cd763e_Scope>*);
inline void _1c1346b26_optimizeBodyChild(jule::Ptr<_1c13460cb_scopeDeadCode>, jule::Ptr<_1c0cd763e_Scope>*);
inline void _1c1346dce_optimizeExprModel(jule::Ptr<_1c13460cb_scopeDeadCode>, jule::Any*);
inline void _1c13470cc_eliminateFollowed(_1c13460cb_scopeDeadCode*);
inline void _1c1347385_pushGoto(jule::Ptr<_1c13460cb_scopeDeadCode>, jule::Ptr<_1c0cda3ab_GotoSt>);
inline void _1c134763d_pushLabel(jule::Ptr<_1c13460cb_scopeDeadCode>, jule::Ptr<_1c0cd9ed2_Label>);
inline void _1c13478e6_optimizeRangeIter(jule::Ptr<_1c13460cb_scopeDeadCode>, jule::Ptr<_1c0cd9476_RangeIter>);
inline void _1c1347b9e_optimizeWhileIter(jule::Ptr<_1c13460cb_scopeDeadCode>, jule::Ptr<_1c0cd8a2a_WhileIter>);
inline void _1c1347e57_optimizeInfIter(jule::Ptr<_1c13460cb_scopeDeadCode>, jule::Ptr<_1c0cd8574_InfIter>);
inline void _1c1348210_optimizeConditional(jule::Ptr<_1c13460cb_scopeDeadCode>, jule::Ptr<_1c0cd8277_Conditional>);
inline void _1c13484b8_optimizeMatch(jule::Ptr<_1c13460cb_scopeDeadCode>, jule::Ptr<_1c0cdb852_Match>);
inline void _1c1348771_optimizeAssign(jule::Ptr<_1c13460cb_scopeDeadCode>, jule::Ptr<_1c0cdac3b_Assign>);
inline void _1c1348a29_optimizeMultiAssign(jule::Ptr<_1c13460cb_scopeDeadCode>, jule::Ptr<_1c0cdb1e2_MultiAssign>);
inline void _1c1348cd2_optimizeStmt(jule::Ptr<_1c13460cb_scopeDeadCode>, jule::Any);
inline void _1c1348ed0_optimizeStmts(jule::Ptr<_1c13460cb_scopeDeadCode>);
inline _1c134a366_exprDeadCode static__1c134a9a4_new(jule::Ptr<_1c13460cb_scopeDeadCode>*);
inline void _1c134ac5c_binary(_1c134a366_exprDeadCode*, jule::Ptr<_1c0c87952_BinaryExprModel>);
inline void _1c134b015_unary(_1c134a366_exprDeadCode*, jule::Ptr<_1c0c87d2b_UnaryExprModel>);
inline void _1c134b2bd_structureLit(_1c134a366_exprDeadCode*, jule::Ptr<_1c0c88700_StructLitExprModel>);
inline void _1c134b576_allocStructure(_1c134a366_exprDeadCode*, jule::Ptr<_1c0c889ec_AllocStructLitExprModel>);
inline void _1c134b82e_casting(_1c134a366_exprDeadCode*, jule::Ptr<_1c0c89080_CastingExprModel>);
inline void _1c134bad7_args(_1c134a366_exprDeadCode*, jule::Slice<jule::Any>*);
inline void _1c134bd90_funcCall(_1c134a366_exprDeadCode*, jule::Ptr<_1c0c89932_FnCallExprModel>);
inline void _1c134c148_slice(_1c134a366_exprDeadCode*, jule::Ptr<_1c0c89d0b_SliceExprModel>);
inline void _1c134c401_array(_1c134a366_exprDeadCode*, jule::Ptr<_1c0c8cd20_ArrayExprModel>);
inline void _1c134c6a9_indexing(_1c134a366_exprDeadCode*, jule::Ptr<_1c0c8a2b2_IndexingExprModel>);
inline void _1c134c962_anonFunc(_1c134a366_exprDeadCode*, jule::Ptr<_1c0c8a768_AnonFnExprModel>);
inline void _1c134cc1a_mapExpr(_1c134a366_exprDeadCode*, jule::Ptr<_1c0c8b0e8_MapExprModel>);
inline void _1c134cec3_slicing(_1c134a366_exprDeadCode*, jule::Ptr<_1c0c8b67b_SlicingExprModel>);
inline void _1c134d27b_traitSub(_1c134a366_exprDeadCode*, jule::Ptr<_1c0c8bc0e_TraitSubIdentExprModel>);
inline void _1c134d534_structureSub(_1c134a366_exprDeadCode*, jule::Ptr<_1c0c8c5a0_StructSubIdentExprModel>);
inline void _1c134d7dc_tuple(_1c134a366_exprDeadCode*, jule::Ptr<_1c0c8d11c_TupleExprModel>);
inline void _1c134da95_newCall(_1c134a366_exprDeadCode*, jule::Ptr<_1c0c8dc99_BuiltinNewCallExprModel>);
inline void _1c134dd4d_outCall(_1c134a366_exprDeadCode*, jule::Ptr<_1c0c8d4e6_BuiltinOutCallExprModel>);
inline void _1c134e106_outlnCall(_1c134a366_exprDeadCode*, jule::Ptr<_1c0c8d8c0_BuiltinOutlnCallExprModel>);
inline void _1c134e3ae_panicCall(_1c134a366_exprDeadCode*, jule::Ptr<_1c0c8e173_BuiltinPanicCallExprModel>);
inline void _1c134e667_assertCall(_1c134a366_exprDeadCode*, jule::Ptr<_1c0c8e629_BuiltinAssertCallExprModel>);
inline void _1c134e920_errorCall(_1c134a366_exprDeadCode*, jule::Ptr<_1c0c91230_BuiltinErrorCallExprModel>);
inline void _1c134ebc8_makeCall(_1c134a366_exprDeadCode*, jule::Ptr<_1c0c8ead0_BuiltinMakeCallExprModel>);
inline void _1c134ee81_appendCall(_1c134a366_exprDeadCode*, jule::Ptr<_1c0c8eea9_BuiltinAppendCallExprModel>);
inline void _1c1350239_lenCall(_1c134a366_exprDeadCode*, jule::Ptr<_1c0c902a6_BuiltinLenCallExprModel>);
inline void _1c13504e2_capCall(_1c134a366_exprDeadCode*, jule::Ptr<_1c0c905a3_BuiltinCapCallExprModel>);
inline void _1c135079a_deleteCall(_1c134a366_exprDeadCode*, jule::Ptr<_1c0c9097c_BuiltinDeleteCallExprModel>);
inline void _1c1350a53_sizeof(_1c134a366_exprDeadCode*, jule::Ptr<_1c0c918d4_SizeofExprModel>);
inline void _1c1350d0b_alignof(_1c134a366_exprDeadCode*, jule::Ptr<_1c0c91ac1_AlignofExprModel>);
inline void _1c13510b4_integratedToStr(_1c134a366_exprDeadCode*, jule::Ptr<_1c0c92165_IntegratedToStrExprModel>);
inline void _1c135136c_free(_1c134a366_exprDeadCode*, jule::Ptr<_1c0c9283b_FreeExprModel>);
inline void _1c1351625_backendEmit(_1c134a366_exprDeadCode*, jule::Ptr<_1c0c9253e_BackendEmitExprModel>);
inline void _1c13518cd_optimize(_1c134a366_exprDeadCode*, jule::Any*);
inline void _1c0ede2a2_pushVar(_1c0eddd40_nils*, jule::Uintptr, jule::Bool);
inline jule::Bool _1c0ede5e3_removeVar(_1c0eddd40_nils*, jule::Uintptr);
inline jule::Bool _1c0ede934_isSafe(_1c0eddd40_nils*, jule::Uintptr);
inline jule::Ptr<_1c0ee1abd_scopeOptimizer> static__1c0ee2140_new(jule::Ptr<_1c0cd763e_Scope>);
inline void _1c0ee23e8_setCurrentStmt(jule::Ptr<_1c0ee1abd_scopeOptimizer>, jule::Any);
inline void _1c0ee25e6_removeCurrent(jule::Ptr<_1c0ee1abd_scopeOptimizer>);
inline jule::Bool _1c0ee287c_isLastStmt(jule::Ptr<_1c0ee1abd_scopeOptimizer>);
inline jule::Bool _1c0ee2b13_isIter(jule::Ptr<_1c0ee1abd_scopeOptimizer>);
inline void _1c0ee2dbb_optimizeData(jule::Ptr<_1c0ee1abd_scopeOptimizer>, jule::Ptr<_1c0da69e9_Data>);
inline void _1c0ee3174_optimizeVar(jule::Ptr<_1c0ee1abd_scopeOptimizer>, jule::Ptr<_1c0d4dde2_Var>);
inline void _1c0ee342c_optimizeConditional(jule::Ptr<_1c0ee1abd_scopeOptimizer>, jule::Ptr<_1c0cd8277_Conditional>);
inline void _1c0ee384a_buildDefaultConstantTrueCase(jule::Ptr<_1c0ee1abd_scopeOptimizer>, jule::Ptr<_1c0cdc37a_Case>, jule::I64*, jule::Ptr<_1c0cdb852_Match>*);
inline void _1c0ee3b03_optimizeMatch(jule::Ptr<_1c0ee1abd_scopeOptimizer>, jule::Ptr<_1c0cdb852_Match>);
inline void _1c0ee3dab_optimizeRangeIter(jule::Ptr<_1c0ee1abd_scopeOptimizer>, jule::Ptr<_1c0cd9476_RangeIter>);
inline void _1c0ee4164_optimizeWhileIter(jule::Ptr<_1c0ee1abd_scopeOptimizer>, jule::Ptr<_1c0cd8a2a_WhileIter>);
inline jule::Bool _1c0ee44a5_substr(jule::Ptr<_1c0ee1abd_scopeOptimizer>, jule::Ptr<_1c0cdac3b_Assign>);
inline jule::Bool _1c0ee47e6_strAssign(jule::Ptr<_1c0ee1abd_scopeOptimizer>, jule::Ptr<_1c0cdac3b_Assign>);
inline jule::Bool _1c0ee4b37_sliceAssign(jule::Ptr<_1c0ee1abd_scopeOptimizer>, jule::Ptr<_1c0cdac3b_Assign>);
inline void _1c0ee4de0_optimizePostfix(jule::Ptr<_1c0ee1abd_scopeOptimizer>, jule::Ptr<_1c0cda785_Postfix>);
inline void _1c0ee5198_optimizeAssign(jule::Ptr<_1c0ee1abd_scopeOptimizer>, jule::Ptr<_1c0cdac3b_Assign>);
inline jule::Bool _1c0ee54d9_tryOptimizeSwap(jule::Ptr<_1c0ee1abd_scopeOptimizer>, jule::Ptr<_1c0cdb1e2_MultiAssign>*);
inline void _1c0ee5792_optimizeMultiAssign(jule::Ptr<_1c0ee1abd_scopeOptimizer>, jule::Ptr<_1c0cdb1e2_MultiAssign>);
inline void _1c0ee5a4a_optimizeRet(jule::Ptr<_1c0ee1abd_scopeOptimizer>, jule::Ptr<_1c0cdce19_RetSt>);
inline void _1c0ee5d03_optimizeStmt(jule::Ptr<_1c0ee1abd_scopeOptimizer>, jule::Any);
inline void _1c0ee60ab_optimizeChild(jule::Ptr<_1c0ee1abd_scopeOptimizer>, jule::Ptr<_1c0cd763e_Scope>);
inline void _1c0ee62a9_optimize(jule::Ptr<_1c0ee1abd_scopeOptimizer>);
inline void static__1c0ee906a_optimize(jule::Any*);
inline void static__1c0ee9356_optimizeData(jule::Any*, jule::Ptr<_1c1006572_data>*);
inline jule::Bool _1c0ee9697_selfCmpCond(_1c0ee891b_exprOptimizer*, jule::Ptr<_1c0c87952_BinaryExprModel>*);
inline jule::Bool _1c0ee99d8_boolCond(_1c0ee891b_exprOptimizer*, jule::Ptr<_1c0c87952_BinaryExprModel>*);
inline jule::Bool _1c0ee9d29_strCond(_1c0ee891b_exprOptimizer*, jule::Ptr<_1c0c87952_BinaryExprModel>);
inline jule::Bool _1c0eea2d0_tryNeutralElement1(_1c0ee891b_exprOptimizer*, jule::Ptr<_1c0c87952_BinaryExprModel>*, jule::Ptr<_2021e617b_Const>, jule::Ptr<_1c0c87457_OperandExprModel>*);
inline jule::Bool _1c0eea621_tryNeutralElement(_1c0ee891b_exprOptimizer*, jule::Ptr<_1c0c87952_BinaryExprModel>*);
inline void _1c0eea8c9_checkBinaryForBoundary(_1c0ee891b_exprOptimizer*, jule::Ptr<_1c0c87952_BinaryExprModel>*);
inline void _1c0eeab82_checkBinaryForNil(_1c0ee891b_exprOptimizer*, jule::Ptr<_1c0c87952_BinaryExprModel>*);
inline void _1c0eeae3a_binary(_1c0ee891b_exprOptimizer*, jule::Ptr<_1c0c87952_BinaryExprModel>);
inline void _1c0eeb1e3_unary(_1c0ee891b_exprOptimizer*, jule::Ptr<_1c0c87d2b_UnaryExprModel>);
inline void _1c0eeb49b_structureLit(_1c0ee891b_exprOptimizer*, jule::Ptr<_1c0c88700_StructLitExprModel>);
inline void _1c0eeb754_allocStructure(_1c0ee891b_exprOptimizer*, jule::Ptr<_1c0c889ec_AllocStructLitExprModel>);
inline void _1c0eeba0c_casting(_1c0ee891b_exprOptimizer*, jule::Ptr<_1c0c89080_CastingExprModel>);
inline void _1c0eebd70_args(_1c0ee891b_exprOptimizer*, jule::Slice<jule::Ptr<_1c0c976ed_ParamIns>>, jule::Slice<jule::Any>*);
inline void _1c0eec128_scope(_1c0ee891b_exprOptimizer*, jule::Ptr<_1c0cd763e_Scope>*);
inline void _1c0eec3d1_funcCall(_1c0ee891b_exprOptimizer*, jule::Ptr<_1c0c89932_FnCallExprModel>);
inline void _1c0eec689_slice(_1c0ee891b_exprOptimizer*, jule::Ptr<_1c0c89d0b_SliceExprModel>);
inline void _1c0eec942_array(_1c0ee891b_exprOptimizer*, jule::Ptr<_1c0c8cd20_ArrayExprModel>);
inline void _1c0eecbea_indexing(_1c0ee891b_exprOptimizer*, jule::Ptr<_1c0c8a2b2_IndexingExprModel>);
inline void _1c0eecea3_anonFunc(_1c0ee891b_exprOptimizer*, jule::Ptr<_1c0c8a768_AnonFnExprModel>);
inline void _1c0eed25b_mapExpr(_1c0ee891b_exprOptimizer*, jule::Ptr<_1c0c8b0e8_MapExprModel>);
inline void _1c0eed514_slicing(_1c0ee891b_exprOptimizer*, jule::Ptr<_1c0c8b67b_SlicingExprModel>);
inline void _1c0eed7bc_traitSub(_1c0ee891b_exprOptimizer*, jule::Ptr<_1c0c8bc0e_TraitSubIdentExprModel>);
inline void _1c0eeda75_structureSub(_1c0ee891b_exprOptimizer*, jule::Ptr<_1c0c8c5a0_StructSubIdentExprModel>);
inline void _1c0eedd2d_tuple(_1c0ee891b_exprOptimizer*, jule::Ptr<_1c0c8d11c_TupleExprModel>);
inline void _1c0eee0d6_newCall(_1c0ee891b_exprOptimizer*, jule::Ptr<_1c0c8dc99_BuiltinNewCallExprModel>);
inline void _1c0eee38e_outCall(_1c0ee891b_exprOptimizer*, jule::Ptr<_1c0c8d4e6_BuiltinOutCallExprModel>);
inline void _1c0eee647_outlnCall(_1c0ee891b_exprOptimizer*, jule::Ptr<_1c0c8d8c0_BuiltinOutlnCallExprModel>);
inline void _1c0eee900_panicCall(_1c0ee891b_exprOptimizer*, jule::Ptr<_1c0c8e173_BuiltinPanicCallExprModel>);
inline void _1c0eeeba8_assertCall(_1c0ee891b_exprOptimizer*, jule::Ptr<_1c0c8e629_BuiltinAssertCallExprModel>);
inline void _1c0eeee61_errorCall(_1c0ee891b_exprOptimizer*, jule::Ptr<_1c0c91230_BuiltinErrorCallExprModel>);
inline void _1c1000219_makeCall(_1c0ee891b_exprOptimizer*, jule::Ptr<_1c0c8ead0_BuiltinMakeCallExprModel>);
inline void _1c10004c2_appendCall(_1c0ee891b_exprOptimizer*, jule::Ptr<_1c0c8eea9_BuiltinAppendCallExprModel>);
inline void _1c100077a_lenCall(_1c0ee891b_exprOptimizer*, jule::Ptr<_1c0c902a6_BuiltinLenCallExprModel>);
inline void _1c1000a33_capCall(_1c0ee891b_exprOptimizer*, jule::Ptr<_1c0c905a3_BuiltinCapCallExprModel>);
inline void _1c1000cdb_deleteCall(_1c0ee891b_exprOptimizer*, jule::Ptr<_1c0c9097c_BuiltinDeleteCallExprModel>);
inline void _1c1001094_sizeof(_1c0ee891b_exprOptimizer*, jule::Ptr<_1c0c918d4_SizeofExprModel>);
inline void _1c100134c_alignof(_1c0ee891b_exprOptimizer*, jule::Ptr<_1c0c91ac1_AlignofExprModel>);
inline void _1c1001605_integratedToStr(_1c0ee891b_exprOptimizer*, jule::Ptr<_1c0c92165_IntegratedToStrExprModel>);
inline void _1c10018ad_free(_1c0ee891b_exprOptimizer*, jule::Ptr<_1c0c9283b_FreeExprModel>);
inline void _1c1001b66_backendEmit(_1c0ee891b_exprOptimizer*, jule::Ptr<_1c0c9253e_BackendEmitExprModel>);
inline void _1c1001d64_do(_1c0ee891b_exprOptimizer*);
inline void _1c1003a8b_pushVar(jule::Ptr<_1c1003629_dynamic>, jule::Uintptr, jule::Ptr<_1c0dd7de3_TypeKind>);
inline jule::Bool _1c1003dcc_removeVar(_1c1003629_dynamic*, jule::Uintptr);
inline jule::Bool _1c10042c8_isFits(_1c1003629_dynamic*, jule::Uintptr, jule::Ptr<_1c0dd7de3_TypeKind>);
inline _1c1006077_dataCheckpoint _1c10068e6_getCheckpoint(_1c1006572_data*);
inline void _1c1006b9e_loadCheckpoint(_1c1006572_data*, _1c1006077_dataCheckpoint*);
inline void _1c10083cb_pushVar(_1c1007e69_boundary*, jule::Uintptr, jule::Any);
inline jule::Bool _1c1008b18_fitsMaxSize(_1c1007e69_boundary*, jule::Uintptr, jule::Any);
inline jule::Ptr<_1c135247d_Optimizer> static__1c1352901_New(jule::Ptr<_1c1989301_IR>*);
inline void _1c1352ba9_optimizeGlobal(_1c135247d_Optimizer*, jule::Ptr<_1c0d4dde2_Var>*);
inline void _1c1352e62_optimizeFunction(_1c135247d_Optimizer*, jule::Ptr<_1c0c95795_Fn>*);
inline void _1c135321a_optimizeStruct(_1c135247d_Optimizer*, jule::Ptr<_1c0c807c4_Struct>*);
inline void _1c13534c3_optimizeGlobals(_1c135247d_Optimizer*, jule::Ptr<_1c0d0c6a8_Package>*);
inline void _1c135377b_optimizeFunctions(_1c135247d_Optimizer*, jule::Ptr<_1c0d0c6a8_Package>*);
inline void _1c1353a34_optimizeStructs(_1c135247d_Optimizer*, jule::Ptr<_1c0d0c6a8_Package>*);
inline void _1c1353cdc_optimizePackage(_1c135247d_Optimizer*, jule::Ptr<_1c0d0c6a8_Package>*);
inline void _1c1353eda_Optimize(_1c135247d_Optimizer*);
inline void static__1c0e56abb_Reset(void);
inline void static__1c0e57eeb_Print(jule::Str, jule::Str);
inline void static__1c0e59904_LogFlat(_21b8c54de_Log*);
inline void static__1c0e59b35_LogError(_21b8c54de_Log*);
inline void static__1c0e59d66_Log(_21b8c54de_Log*);
inline void static__1c0e5a097_PrintLogs(jule::Slice<_21b8c54de_Log>*);
inline _1c25414c3_Time static__1c254187a_Unix(jule::U64);
inline _1c25414c3_Time static__1c2541a89_Now(void);
inline _1c2540cec_AbsTime _1c2543272_Abs(_1c25414c3_Time*);
inline jule::Ptr<_1c246a95d_scopeCoder> static__1c246b0bd_new(jule::Ptr<_1c254b467_ObjectCoder>*);
inline void _1c65bcbaa_iterHead(jule::Ptr<_1c246a95d_scopeCoder>, jule::Ptr<_1c0cd9476_RangeIter>*, jule::Bool*, jule::Str);
inline void _1c246b794_rangeIndexIter(jule::Ptr<_1c246a95d_scopeCoder>, jule::Ptr<_1c0cd9476_RangeIter>*);
inline void _1c246ba4c_rangeHashmapIter(jule::Ptr<_1c246a95d_scopeCoder>, jule::Ptr<_1c0cd9476_RangeIter>*);
inline void _1c246bd05_strRuneIter(jule::Ptr<_1c246a95d_scopeCoder>, jule::Ptr<_1c0edc723_StrRuneIter>);
inline void _1c246c0ad_ifCase(jule::Ptr<_1c246a95d_scopeCoder>, jule::Ptr<_1c0cd7a5c_If>);
inline void _1c246c366_conditional(jule::Ptr<_1c246a95d_scopeCoder>, jule::Ptr<_1c0cd8277_Conditional>);
inline void _1c246c61e_infIter(jule::Ptr<_1c246a95d_scopeCoder>, jule::Ptr<_1c0cd8574_InfIter>);
inline void _1c246c8c7_whileIter(jule::Ptr<_1c246a95d_scopeCoder>, jule::Ptr<_1c0cd8a2a_WhileIter>);
inline void _1c246cb80_rangeIter(jule::Ptr<_1c246a95d_scopeCoder>, jule::Ptr<_1c0cd9476_RangeIter>);
inline void _1c246ce38_cont(jule::Ptr<_1c246a95d_scopeCoder>, jule::Ptr<_1c0cd980b_ContSt>);
inline void _1c246d1e1_label(jule::Ptr<_1c246a95d_scopeCoder>, jule::Ptr<_1c0cd9ed2_Label>);
inline void _1c246d499_gotoSt(jule::Ptr<_1c246a95d_scopeCoder>, jule::Ptr<_1c0cda3ab_GotoSt>);
inline void _1c246d752_postfix(jule::Ptr<_1c246a95d_scopeCoder>, jule::Ptr<_1c0cda785_Postfix>);
inline void _1c246da0a_assign(jule::Ptr<_1c246a95d_scopeCoder>, jule::Ptr<_1c0cdac3b_Assign>);
inline void _1c246dcb3_mapLookupAssign(jule::Ptr<_1c246a95d_scopeCoder>, jule::Ptr<_1c0cdb1e2_MultiAssign>*);
inline void _1c246e06b_multiAssignTup(jule::Ptr<_1c246a95d_scopeCoder>, jule::Ptr<_1c0cdb1e2_MultiAssign>*);
inline void _1c246e324_multiAssignFn(jule::Ptr<_1c246a95d_scopeCoder>, jule::Ptr<_1c0cdb1e2_MultiAssign>*);
inline void _1c246e5cc_multiAssign(jule::Ptr<_1c246a95d_scopeCoder>, jule::Ptr<_1c0cdb1e2_MultiAssign>);
inline jule::Fn<void> _1c246e91d_matchExpr(jule::Ptr<_1c246a95d_scopeCoder>, jule::Ptr<_1c0cdb852_Match>);
inline void _1c246ec81_case(jule::Ptr<_1c246a95d_scopeCoder>, jule::Ptr<_1c0cdb852_Match>, jule::Ptr<_1c0cdc37a_Case>);
inline void _1c2470039_matchSt(jule::Ptr<_1c246a95d_scopeCoder>, jule::Ptr<_1c0cdb852_Match>);
inline void _1c24702e2_fallSt(jule::Ptr<_1c246a95d_scopeCoder>, jule::Ptr<_1c0cdca73_FallSt>);
inline void _1c247059a_breakSt(jule::Ptr<_1c246a95d_scopeCoder>, jule::Ptr<_1c0cd9bd5_BreakSt>);
inline void _1c2470853_setResult(jule::Ptr<_1c246a95d_scopeCoder>, jule::Ptr<_1c0cdce19_RetSt>);
inline void _1c2470b0b_retSt(jule::Ptr<_1c246a95d_scopeCoder>, jule::Ptr<_1c0cdce19_RetSt>);
inline void _1c2470db4_var(jule::Ptr<_1c246a95d_scopeCoder>, jule::Ptr<_1c0d4dde2_Var>);
inline void _1c247116c_mutSlicing(jule::Ptr<_1c246a95d_scopeCoder>, jule::Ptr<_1c0edb414_MutSlicingExprModel>);
inline void _1c2471425_swap(jule::Ptr<_1c246a95d_scopeCoder>, jule::Ptr<_1c0eda1b0_SwapExprModel>);
inline void _1c24716cd_exceptionalForwarding(jule::Ptr<_1c246a95d_scopeCoder>, jule::Ptr<_1c0ed9d3b_ExceptionalForwardingExprModel>);
inline void _1c2471986_st(jule::Ptr<_1c246a95d_scopeCoder>, jule::Any);
inline void _1c2471c3e_scopeStmts(jule::Ptr<_1c246a95d_scopeCoder>, jule::Ptr<_1c0cd763e_Scope>*);
inline void _1c2471ee7_scope(jule::Ptr<_1c246a95d_scopeCoder>, jule::Ptr<_1c0cd763e_Scope>);
inline void _1c24722a0_commonFuncScope(jule::Ptr<_1c246a95d_scopeCoder>, jule::Ptr<_1c0c98699_FnIns>*);
inline void _1c2472613_anonFuncScope(jule::Ptr<_1c246a95d_scopeCoder>, jule::Ptr<_1c0c8a768_AnonFnExprModel>, jule::Str);
inline void _1c24728bb_funcScope(jule::Ptr<_1c246a95d_scopeCoder>, jule::Ptr<_1c0c98699_FnIns>);
inline jule::Ptr<_1c2475e30_exprCoder> static__1c24762e8_new(jule::Ptr<_1c254b467_ObjectCoder>*);
inline void _1c24765a1_string(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_2021e617b_Const>*);
inline void _1c2476859_boolean(jule::Ptr<_1c2475e30_exprCoder>, jule::Bool);
inline void _1c2476a57_nilLit(jule::Ptr<_1c2475e30_exprCoder>);
inline jule::Bool _1c2476d98_ftoaSpecialCases(jule::Ptr<_1c2475e30_exprCoder>, jule::F64*);
inline void _1c2477151_float32(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_2021e617b_Const>*);
inline void _1c2477409_float64(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_2021e617b_Const>*);
inline void _1c24776b2_constant(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_2021e617b_Const>);
inline void _1c2477ad0_divByZeroBinary(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c49480_Token>*, jule::Ptr<_1c0c87457_OperandExprModel>*, jule::Ptr<_1c0c87457_OperandExprModel>*);
inline void _1c2477d88_unsafeBinary(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c87952_BinaryExprModel>);
inline void _1c2478141_binary(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c87952_BinaryExprModel>);
inline void _1c24783e9_var(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0d4dde2_Var>);
inline void _1c24786a2_structureIns(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c83552_StructIns>);
inline void _1c247895a_unary(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c87d2b_UnaryExprModel>);
inline void _1c2478c13_structureLit(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c88700_StructLitExprModel>);
inline void _1c2478ebb_allocStructure(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c889ec_AllocStructLitExprModel>);
inline void _1c2479274_possibleRefExpr(jule::Ptr<_1c2475e30_exprCoder>, jule::Any);
inline void _1c2479692_castTraitFromTrait(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c89080_CastingExprModel>*, jule::Ptr<_1c0ca8a72_Trait>, jule::Ptr<_1c0ca8a72_Trait>);
inline void _1c247994a_casting(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c89080_CastingExprModel>);
inline void _1c2479c03_models(jule::Ptr<_1c2475e30_exprCoder>, jule::Slice<jule::Any>);
inline void _1c2479eab_args(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c89932_FnCallExprModel>*);
inline void _1c247a264_modelForCall(jule::Ptr<_1c2475e30_exprCoder>, jule::Any);
inline void _1c247a51c_pushCallInf(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c89932_FnCallExprModel>*);
inline jule::Bool _1c247a85d_isWrapped(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c89932_FnCallExprModel>*);
inline jule::Bool _1c247ab9e_writeReceiver(jule::Ptr<_1c2475e30_exprCoder>, jule::Any);
inline void _1c247ae57_pureFuncCall(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c89932_FnCallExprModel>*);
inline void _1c247b210_coFuncCall(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c89932_FnCallExprModel>*);
inline void _1c247b573_writeUseExpr(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c98699_FnIns>*, jule::Ptr<_1c0da69e9_Data>);
inline void _1c247b82b_funcCall(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c89932_FnCallExprModel>);
inline void _1c247bad4_slice(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c89d0b_SliceExprModel>);
inline void _1c247bd8c_indexing(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c8a2b2_IndexingExprModel>);
inline void _1c247c145_unsafeIndexing(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0edba96_UnsafeIndexingExprModel>);
inline void _1c247c3ed_anonFunc(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c8a768_AnonFnExprModel>);
inline void _1c247c6a6_mapExpr(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c8b0e8_MapExprModel>);
inline void _1c247c95e_slicing(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c8b67b_SlicingExprModel>);
inline void _1c247cc17_traitSub(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c8bc0e_TraitSubIdentExprModel>);
inline void _1c247cec0_structureSub(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c8c5a0_StructSubIdentExprModel>);
inline void _1c247d278_array(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c8cd20_ArrayExprModel>);
inline void _1c247d531_funcInsCommon(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c98699_FnIns>);
inline void _1c247d7d9_funcIns(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c98699_FnIns>);
inline void _1c247da92_tuple(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c8d11c_TupleExprModel>);
inline void _1c247dd4a_newCall(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c8dc99_BuiltinNewCallExprModel>);
inline void _1c247e103_outCall(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c8d4e6_BuiltinOutCallExprModel>);
inline void _1c247e3ab_outlnCall(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c8d8c0_BuiltinOutlnCallExprModel>);
inline void _1c247e664_panicCall(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c8e173_BuiltinPanicCallExprModel>);
inline void _1c247e91c_assertCall(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c8e629_BuiltinAssertCallExprModel>);
inline void _1c247ebc5_errorCall(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c91230_BuiltinErrorCallExprModel>);
inline void _1c247ee7d_copyCall(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c90d56_BuiltinCopyCallExprModel>);
inline void _1c2480236_lenCall(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c902a6_BuiltinLenCallExprModel>);
inline void _1c24804de_capCall(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c905a3_BuiltinCapCallExprModel>);
inline void _1c2480797_deleteCall(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c9097c_BuiltinDeleteCallExprModel>);
inline void _1c2480a50_makeCallSlice(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c8ead0_BuiltinMakeCallExprModel>*);
inline void _1c2480d08_makeCallStr(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c8ead0_BuiltinMakeCallExprModel>*);
inline void _1c24810b1_makeCall(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c8ead0_BuiltinMakeCallExprModel>);
inline void _1c2481369_pushToSlice(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0edbe70_PushToSliceExprModel>);
inline void _1c2481622_appendToSlice(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0edc349_AppendToSliceExprModel>);
inline void _1c24818ca_appendCall(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c8eea9_BuiltinAppendCallExprModel>);
inline void _1c2481b83_sizeof(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c918d4_SizeofExprModel>);
inline void _1c2481e3b_alignof(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c91ac1_AlignofExprModel>);
inline void _1c24821e4_runeLit(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c91d68_RuneExprModel>);
inline void _1c248249c_structureStatic(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c8c946_StructStaticIdentExprModel>);
inline void _1c2482755_integratedToStr(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c92165_IntegratedToStrExprModel>);
inline void _1c2482a0d_backendEmit(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c9253e_BackendEmitExprModel>);
inline void _1c2482cb6_free(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0c9283b_FreeExprModel>);
inline void _1c248306e_strComp(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0edad81_StrCompExprModel>);
inline void _1c2483327_emptyCompare(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0eda589_EmptyCompareExprModel>);
inline void _1c24835d0_unsafeDeref(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0edca20_UnsafeDerefExprModel>);
inline void _1c2483888_unsafeCasting(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0edcd1c_UnsafeCastingExprModel>);
inline void _1c2483b41_model(jule::Ptr<_1c2475e30_exprCoder>, jule::Any);
inline void _1c2483de9_initExpr(jule::Ptr<_1c2475e30_exprCoder>, jule::Ptr<_1c0dd7de3_TypeKind>);
inline jule::Ptr<_1c2487084_TestCoder> static__1c2487507_New(jule::Ptr<_1c254b467_ObjectCoder>*);
inline jule::Ptr<_1c0d09782_ImportInfo> _1c248778d_findTestingPackage(jule::Ptr<_1c2487084_TestCoder>);
inline void _1c2487a46_appendTest(jule::Ptr<_1c2487084_TestCoder>, jule::Ptr<_1c0c98699_FnIns>);
inline void _1c2487cee_appendPackageTests(jule::Ptr<_1c2487084_TestCoder>, jule::Ptr<_1c0d0c6a8_Package>*);
inline jule::Bool _1c2488085_readyTestingPackage(jule::Ptr<_1c2487084_TestCoder>);
inline void _1c2488283_callTmReset(jule::Ptr<_1c2487084_TestCoder>);
inline void _1c2488481_callTmFailed(jule::Ptr<_1c2487084_TestCoder>);
inline void _1c248867e_callTmSkipped(jule::Ptr<_1c2487084_TestCoder>);
inline void _1c248887c_Serialize(jule::Ptr<_1c2487084_TestCoder>);
inline void static__1c248a3a6_writeIdentTo(_234c76a64_StrBuilder*, jule::Str*);
inline void static__1c248a74c_toOut(_234c76a64_StrBuilder*, jule::Str, jule::Uintptr);
inline void static__1c248ab9d_toLocal(_234c76a64_StrBuilder*, jule::I64, jule::I64, jule::Str*);
inline void static__1c248ae89_func(_234c76a64_StrBuilder*, jule::Ptr<_1c0c95795_Fn>*);
inline void static__1c248b275_funcIns(_234c76a64_StrBuilder*, jule::Ptr<_1c0c98699_FnIns>*);
inline void static__1c248b561_traitDecl(_234c76a64_StrBuilder*, jule::Ptr<_1c0ca8a72_Trait>);
inline void static__1c248b84c_param(_234c76a64_StrBuilder*, jule::Ptr<_1c0c93cc1_Param>*);
inline void static__1c248bb38_structure(_234c76a64_StrBuilder*, jule::Ptr<_1c0c807c4_Struct>*);
inline void static__1c248be24_structureIns(_234c76a64_StrBuilder*, jule::Ptr<_1c0c83552_StructIns>*);
inline void static__1c248c210_field(_234c76a64_StrBuilder*, jule::Ptr<_1c0c7c89d_Field>*);
inline void static__1c248c4eb_var(_234c76a64_StrBuilder*, jule::Ptr<_1c0d4dde2_Var>);
inline void static__1c248c7d7_iterBegin(_234c76a64_StrBuilder*, jule::Uintptr);
inline void static__1c248cac3_iterEnd(_234c76a64_StrBuilder*, jule::Uintptr);
inline void static__1c248cdae_iterNext(_234c76a64_StrBuilder*, jule::Uintptr);
inline void static__1c248d19a_label(_234c76a64_StrBuilder*, jule::Uintptr);
inline void static__1c248d486_matchEnd(_234c76a64_StrBuilder*, jule::Uintptr);
inline void static__1c248d772_caseBegin(_234c76a64_StrBuilder*, jule::Uintptr);
inline jule::Str _1c255be7d_Str(_1c255bad7_customType*);
inline jule::Bool _1c255c2be_Equal(jule::Ptr<_1c255bad7_customType>, jule::Ptr<_1c0dd7de3_TypeKind>);
inline jule::Ptr<_1c255c6ed_typeCoder> static__1c255cc3c_new(jule::Ptr<_1c254b467_ObjectCoder>*);
inline void _1c255d0a0_toType(_1c255c6ed_typeCoder*, _234c76a64_StrBuilder*, jule::Str);
inline void _1c255d413_prim(_1c255c6ed_typeCoder*, _234c76a64_StrBuilder*, jule::Ptr<_1c0de09bc_Prim>);
inline void _1c255d776_tuple(_1c255c6ed_typeCoder*, _234c76a64_StrBuilder*, jule::Ptr<_1c0de5ab0_Tuple>);
inline void _1c255dad9_asSptr(_1c255c6ed_typeCoder*, _234c76a64_StrBuilder*, jule::Slice<jule::U8>);
inline void _1c255de4c_sptr(_1c255c6ed_typeCoder*, _234c76a64_StrBuilder*, jule::Ptr<_1c0de44e8_Sptr>);
inline void _1c255e2b0_ptr(_1c255c6ed_typeCoder*, _234c76a64_StrBuilder*, jule::Ptr<_1c0de7cb0_Ptr>);
inline void _1c255e623_enumDecl(_1c255c6ed_typeCoder*, _234c76a64_StrBuilder*, jule::Ptr<_1c0cab27d_Enum>);
inline void _1c255e986_typeEnumDecl(_1c255c6ed_typeCoder*, _234c76a64_StrBuilder*, jule::Ptr<_1c0cac988_TypeEnum>);
inline void _1c255ece9_asSlice(_1c255c6ed_typeCoder*, _234c76a64_StrBuilder*, jule::Ptr<_1c0dd7de3_TypeKind>);
inline void _1c256015c_slice(_1c255c6ed_typeCoder*, _234c76a64_StrBuilder*, jule::Ptr<_1c0de4ebb_Slc>);
inline void _1c25604c0_mapType(_1c255c6ed_typeCoder*, _234c76a64_StrBuilder*, jule::Ptr<_1c0de6660_Map>);
inline void _1c2560b96_traitDecl(_1c255c6ed_typeCoder*, _234c76a64_StrBuilder*, jule::Ptr<_1c0ca8a72_Trait>);
inline void _1c2561009_structure(_1c255c6ed_typeCoder*, _234c76a64_StrBuilder*, jule::Ptr<_1c0c807c4_Struct>);
inline void _1c256136c_structureIns(_1c255c6ed_typeCoder*, _234c76a64_StrBuilder*, jule::Ptr<_1c0c83552_StructIns>);
inline void _1c25616d0_array(_1c255c6ed_typeCoder*, _234c76a64_StrBuilder*, jule::Ptr<_1c0de72dc_Arr>);
inline void _1c2561da6_paramIns(_1c255c6ed_typeCoder*, _234c76a64_StrBuilder*, jule::Ptr<_1c0c976ed_ParamIns>*);
inline void _1c256257c_funcInsResult(_1c255c6ed_typeCoder*, _234c76a64_StrBuilder*, jule::Ptr<_1c0c98699_FnIns>*);
inline void _1c25628e0_anonFunc(_1c255c6ed_typeCoder*, _234c76a64_StrBuilder*, jule::Ptr<_1c0c98699_FnIns>);
inline void _1c2562c53_func(_1c255c6ed_typeCoder*, _234c76a64_StrBuilder*, jule::Ptr<_1c0c98699_FnIns>);
inline void _1c25630b6_kind(_1c255c6ed_typeCoder*, _234c76a64_StrBuilder*, jule::Ptr<_1c0dd7de3_TypeKind>);
inline jule::Ptr<_1c25659d1_resultCoder> static__1c2565ea9_new(jule::Ptr<_1c255c6ed_typeCoder>*);
inline void _1c256631c_ptr(_1c25659d1_resultCoder*, _234c76a64_StrBuilder*, jule::Ptr<_1c0de7cb0_Ptr>);
inline void _1c2566680_sptr(_1c25659d1_resultCoder*, _234c76a64_StrBuilder*, jule::Ptr<_1c0de44e8_Sptr>);
inline void _1c25669e3_mapType(_1c25659d1_resultCoder*, _234c76a64_StrBuilder*, jule::Ptr<_1c0de6660_Map>);
inline void _1c2566d56_slice(_1c25659d1_resultCoder*, _234c76a64_StrBuilder*, jule::Ptr<_1c0de4ebb_Slc>);
inline void _1c25671b9_arr(_1c25659d1_resultCoder*, _234c76a64_StrBuilder*, jule::Ptr<_1c0de72dc_Arr>);
inline void _1c256752c_func(_1c25659d1_resultCoder*, _234c76a64_StrBuilder*, jule::Ptr<_1c0c98699_FnIns>);
inline void _1c2567890_tup(_1c25659d1_resultCoder*, _234c76a64_StrBuilder*, jule::Ptr<_1c0de5ab0_Tuple>);
inline void _1c2567c03_codeMut(_1c25659d1_resultCoder*, _234c76a64_StrBuilder*, jule::Ptr<_1c0dd7de3_TypeKind>*);
inline void _1c2568066_codeMut1(_1c25659d1_resultCoder*, _234c76a64_StrBuilder*, jule::Ptr<_1c0dd7de3_TypeKind>*);
inline jule::Slice<jule::U8> _1c2568374_code(_1c25659d1_resultCoder*, jule::Ptr<_1c0dd7de3_TypeKind>*);
inline jule::Str _1c6ae65ac_Name(_1c6ae615b_Flag*);
inline jule::Str _1c6ae6711_What(_1c6ae615b_Flag*);
inline void _1c6ae6865_Reset(_1c6ae615b_Flag*);
inline jule::I32 _1c6ae69b9_Short(_1c6ae615b_Flag*);
inline jule::Str _1c6ae98bd_Name(_1c6ae9c53_Flag*);
inline jule::Str _1c6aea03e_What(_1c6ae9c53_Flag*);
inline void _1c6aea182_Reset(_1c6ae9c53_Flag*);
inline jule::I32 _1c6aea2c5_Short(_1c6ae9c53_Flag*);
inline jule::Str _1c6aed031_Name(_1c6aed3b6_Flag*);
inline jule::Str _1c6aed6a2_What(_1c6aed3b6_Flag*);
inline void _1c6aed7e5_Reset(_1c6aed3b6_Flag*);
inline jule::I32 _1c6aed938_Short(_1c6aed3b6_Flag*);
inline jule::Str _1c6b016d8_Name(_1c6b01a6d_Flag*);
inline jule::Str _1c6b01d59_What(_1c6b01a6d_Flag*);
inline void _1c6b01e9c_Reset(_1c6b01a6d_Flag*);
inline jule::I32 _1c6b020e0_Short(_1c6b01a6d_Flag*);
inline jule::Str _1c6b04d4b_Name(_1c6b051d1_Flag*);
inline jule::Str _1c6b054bc_What(_1c6b051d1_Flag*);
inline void _1c6b05610_Reset(_1c6b051d1_Flag*);
inline jule::I32 _1c6b05753_Short(_1c6b051d1_Flag*);
inline jule::Ptr<_1c1cd423e_FlagSet> static__1c1cd452a_New(void);
inline jule::Trait<_1c1cd266b_CommonFlag> _1c1cd49d1_FindFlag(_1c1cd423e_FlagSet*, jule::Str);
inline jule::Trait<_1c1cd266b_CommonFlag> _1c1cd4d22_FindFlagShort(_1c1cd423e_FlagSet*, jule::I32);
inline jule::Exceptional<jule::Slice<jule::Str>> _1c1cd53e9_Parse(_1c1cd423e_FlagSet*, jule::Slice<jule::Str>);
inline jule::Ptr<_1c6b051d1_Flag> _1c6b70306_addFlagCommon(_1c1cd423e_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1c6b01a6d_Flag> _1c6b771ed_addFlagCommon(_1c1cd423e_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1c6b6d05c_AddVar(_1c1cd423e_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1c6b74e98_AddVar(_1c1cd423e_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
inline __jule_tuple_i64__jule_tuple_bool _1c6b17db4_parseInteger(_1c1cd6c03_argParser*, jule::Str*, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64>);
inline __jule_tuple_u64__jule_tuple_bool _1c6b20839_parseInteger(_1c1cd6c03_argParser*, jule::Str*, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64>);
inline jule::Str _1c1cd751c_getData(_1c1cd6c03_argParser*);
inline jule::VoidExceptional _1c1cd7792_processFlag(_1c1cd6c03_argParser*, jule::Trait<_1c1cd266b_CommonFlag>*);
inline jule::VoidExceptional _1c1cd7a4a_singleDash(_1c1cd6c03_argParser*, jule::Str*);
inline jule::VoidExceptional _1c1cd7d03_doubleDash(_1c1cd6c03_argParser*, jule::Str*);
inline jule::VoidExceptional _1c1cd8001_tryArg(_1c1cd6c03_argParser*);
inline jule::VoidExceptional _1c1cd81ee_parse(_1c1cd6c03_argParser*);
inline jule::Ptr<_1c254b467_ObjectCoder> static__1c254b896_New(jule::Ptr<_1c1989301_IR>*, _1c25493ee_SerializationInfo);
inline void _1c254bb4e_write(jule::Ptr<_1c254b467_ObjectCoder>, jule::Str);
inline void _1c254be07_writeBytes(jule::Ptr<_1c254b467_ObjectCoder>, jule::Slice<jule::U8>);
inline void _1c254c105_addIndent(jule::Ptr<_1c254b467_ObjectCoder>);
inline void _1c254c303_doneIndent(jule::Ptr<_1c254b467_ObjectCoder>);
inline void _1c254c501_indent(jule::Ptr<_1c254b467_ObjectCoder>);
inline jule::I64 _1c254c842_findAnyType(jule::Ptr<_1c254b467_ObjectCoder>, jule::Ptr<_1c0dd7de3_TypeKind>*);
inline jule::Str _1c254cb83_pushAnonFn(jule::Ptr<_1c254b467_ObjectCoder>, jule::Ptr<_1c0c8a768_AnonFnExprModel>*);
inline jule::I64 _1c254cec4_pushAnyType(jule::Ptr<_1c254b467_ObjectCoder>, jule::Ptr<_1c0dd7de3_TypeKind>);
inline void _1c254d27c_pushResultIns(jule::Ptr<_1c254b467_ObjectCoder>, jule::Ptr<_1c0c98699_FnIns>*);
inline void _1c254d535_pushResult(jule::Ptr<_1c254b467_ObjectCoder>, jule::Ptr<_1c0c95795_Fn>*);
inline jule::I64 _1c254d931_findTypeOffsetS(_1c254b467_ObjectCoder*, jule::Ptr<_1c0ca8a72_Trait>, jule::Ptr<_1c0c83552_StructIns>);
inline jule::I64 _1c254dd2c_findTypeOffset(_1c254b467_ObjectCoder*, jule::Ptr<_1c0ca8a72_Trait>, jule::Ptr<_1c0dd7de3_TypeKind>);
inline void _1c254e190_pushAndWriteMaskMapper(jule::Ptr<_1c254b467_ObjectCoder>, jule::Ptr<_1c0ca8a72_Trait>, jule::Ptr<_1c0ca8a72_Trait>);
inline void _1c254e448_locInfo(jule::Ptr<_1c254b467_ObjectCoder>, jule::Ptr<_1c0c49480_Token>*);
inline void _1c254e646_head(jule::Ptr<_1c254b467_ObjectCoder>);
inline void _1c254e844_links(jule::Ptr<_1c254b467_ObjectCoder>);
inline void _1c254eaec_prepareStructure(_1c254b467_ObjectCoder*, jule::Ptr<_1c0c807c4_Struct>*);
inline void _1c254ecea_prepareStructures(jule::Ptr<_1c254b467_ObjectCoder>);
inline void _1c25500a3_iterPackages(jule::Ptr<_1c254b467_ObjectCoder>, jule::Fn<void,jule::Ptr<_1c0d0c6a8_Package>*>);
inline void _1c25502a1_buildTraitMap(jule::Ptr<_1c254b467_ObjectCoder>);
inline void _1c255049e_traitDecls(jule::Ptr<_1c254b467_ObjectCoder>);
inline void _1c2550757_structurePlainDecl(jule::Ptr<_1c254b467_ObjectCoder>, jule::Ptr<_1c0c807c4_Struct>*);
inline void _1c2550955_structurePlainDecls(jule::Ptr<_1c254b467_ObjectCoder>);
inline void _1c2550c0d_fieldDecl(jule::Ptr<_1c254b467_ObjectCoder>, jule::Ptr<_1c0c829a2_FieldIns>*);
inline void _1c2550eb6_structureDestructor(jule::Ptr<_1c254b467_ObjectCoder>, jule::Ptr<_1c0c83552_StructIns>*);
inline void _1c2551329_structureOperatorEq(jule::Ptr<_1c254b467_ObjectCoder>, jule::Slice<jule::U8>, jule::Ptr<_1c0c83552_StructIns>*);
inline void _1c255168c_structureOperatorNotEq(jule::Ptr<_1c254b467_ObjectCoder>, jule::Slice<jule::U8>, jule::Ptr<_1c0c83552_StructIns>*);
inline void _1c2551aaa_structureOperator(jule::Ptr<_1c254b467_ObjectCoder>, jule::Slice<jule::U8>, jule::Ptr<_1c0c98699_FnIns>*, jule::Str);
inline void _1c2551d63_structureOperators(jule::Ptr<_1c254b467_ObjectCoder>, jule::Ptr<_1c0c83552_StructIns>*);
inline void _1c255211b_structureInsDecl(jule::Ptr<_1c254b467_ObjectCoder>, jule::Ptr<_1c0c83552_StructIns>*);
inline void _1c25523c4_structureDecl(jule::Ptr<_1c254b467_ObjectCoder>, jule::Ptr<_1c0c807c4_Struct>*);
inline void _1c25525c2_structureDecls(jule::Ptr<_1c254b467_ObjectCoder>);
inline void _1c25527c0_structureMethodDecls(jule::Ptr<_1c254b467_ObjectCoder>);
inline void _1c2552a78_paramsDecls(jule::Ptr<_1c254b467_ObjectCoder>, jule::Slice<jule::Ptr<_1c0c976ed_ParamIns>>*);
inline void _1c2553051_funcHead(jule::Ptr<_1c254b467_ObjectCoder>, _234c76a64_StrBuilder*, jule::Ptr<_1c0c98699_FnIns>*, jule::Bool, jule::Str);
inline void _1c25533b4_funcDeclIns(jule::Ptr<_1c254b467_ObjectCoder>, jule::Ptr<_1c0c98699_FnIns>*, jule::Bool);
inline void _1c2553727_funcDecl(jule::Ptr<_1c254b467_ObjectCoder>, jule::Ptr<_1c0c95795_Fn>*, jule::Bool);
inline void _1c2553b45_funcDeclTrait(jule::Ptr<_1c254b467_ObjectCoder>, jule::Ptr<_1c0ca8a72_Trait>*, jule::Ptr<_1c0c95795_Fn>*, jule::Bool);
inline void _1c2553d43_funcDecls(jule::Ptr<_1c254b467_ObjectCoder>);
inline void _1c25541a6_traitDataTypeMethods(jule::Ptr<_1c254b467_ObjectCoder>, jule::Ptr<_1c0ca8a72_Trait>*, jule::Ptr<_1c0ca8a72_Trait>*);
inline void _1c25543a4_traitDataTypes(jule::Ptr<_1c254b467_ObjectCoder>);
inline void _1c2554717_paramIns(jule::Ptr<_1c254b467_ObjectCoder>, _234c76a64_StrBuilder*, jule::Ptr<_1c0c976ed_ParamIns>*);
inline void _1c2554a7a_paramsIns(jule::Ptr<_1c254b467_ObjectCoder>, _234c76a64_StrBuilder*, jule::Slice<jule::Ptr<_1c0c976ed_ParamIns>>*);
inline void _1c2554ddd_varInitExpr(jule::Ptr<_1c254b467_ObjectCoder>, jule::Ptr<_1c0d4dde2_Var>*, jule::Fn<void>);
inline void _1c2555196_var(jule::Ptr<_1c254b467_ObjectCoder>, jule::Ptr<_1c0d4dde2_Var>);
inline void _1c2555509_anonFuncInsDecl(jule::Ptr<_1c254b467_ObjectCoder>, jule::Ptr<_1c0c8a768_AnonFnExprModel>*, jule::Str);
inline void _1c255586c_anonFuncIns(jule::Ptr<_1c254b467_ObjectCoder>, jule::Ptr<_1c0c8a768_AnonFnExprModel>*, jule::Str);
inline void _1c2555b25_funcIns(jule::Ptr<_1c254b467_ObjectCoder>, jule::Ptr<_1c0c98699_FnIns>*);
inline void _1c2555dcd_func(jule::Ptr<_1c254b467_ObjectCoder>, jule::Ptr<_1c0c95795_Fn>*);
inline void _1c2556241_funcTrait(jule::Ptr<_1c254b467_ObjectCoder>, jule::Ptr<_1c25499c6_traitHash>*, jule::Ptr<_1c0c95795_Fn>*);
inline void _1c25565a4_traitWrapper(jule::Ptr<_1c254b467_ObjectCoder>, jule::Ptr<_1c0c95795_Fn>*, jule::Ptr<_1c25499c6_traitHash>*);
inline void _1c25567a2_traitWrappers(jule::Ptr<_1c254b467_ObjectCoder>);
inline void _1c2556b15_traitDataMethods(jule::Ptr<_1c254b467_ObjectCoder>, jule::Ptr<_1c0ca8a72_Trait>*, jule::Ptr<_1c25499c6_traitHash>*);
inline void _1c2556e78_traitData(jule::Ptr<_1c254b467_ObjectCoder>, jule::Ptr<_1c25499c6_traitHash>*, jule::Ptr<_1c0ca8a72_Trait>*);
inline void _1c2557176_traitDatas(jule::Ptr<_1c254b467_ObjectCoder>);
inline void _1c2557374_globals(jule::Ptr<_1c254b467_ObjectCoder>);
inline void _1c2557572_decls(jule::Ptr<_1c254b467_ObjectCoder>);
inline void _1c255782a_structureMethods(jule::Ptr<_1c254b467_ObjectCoder>, jule::Ptr<_1c0c83552_StructIns>*);
inline void _1c2557ad3_structureOstream(jule::Ptr<_1c254b467_ObjectCoder>, jule::Ptr<_1c0c83552_StructIns>*);
inline void _1c2557d8b_structureIns(jule::Ptr<_1c254b467_ObjectCoder>, jule::Ptr<_1c0c83552_StructIns>*);
inline void _1c2558144_structure(jule::Ptr<_1c254b467_ObjectCoder>, jule::Ptr<_1c0c807c4_Struct>*);
inline void _1c2558342_structures(jule::Ptr<_1c254b467_ObjectCoder>);
inline void _1c2558540_funcs(jule::Ptr<_1c254b467_ObjectCoder>);
inline void _1c25587e8_pushInit(jule::Ptr<_1c254b467_ObjectCoder>, jule::Ptr<_1c0d0c6a8_Package>*);
inline void _1c25589e6_anonHashes(jule::Ptr<_1c254b467_ObjectCoder>);
inline void _1c2558be4_initCaller(jule::Ptr<_1c254b467_ObjectCoder>);
inline void _1c2558de2_end(jule::Ptr<_1c254b467_ObjectCoder>);
inline void _1c25590e0_serializeHead(jule::Ptr<_1c254b467_ObjectCoder>);
inline void _1c25592dd_Serialize(jule::Ptr<_1c254b467_ObjectCoder>);
inline jule::Ptr<_1c13417e1_ObjectDeadCode> static__1c1341c86_new(jule::Ptr<_1c1989301_IR>*);
inline jule::Bool _1c622b6b5_isLive(jule::Ptr<_1c13417e1_ObjectDeadCode>, jule::Ptr<_1c0ca8a72_Trait>*);
inline jule::Bool _1c6232116_isLive(jule::Ptr<_1c13417e1_ObjectDeadCode>, jule::Ptr<_1c0c98699_FnIns>*);
inline jule::Bool _1c6237e74_isLive(jule::Ptr<_1c13417e1_ObjectDeadCode>, jule::Ptr<_1c0c83552_StructIns>*);
inline jule::Bool _1c62401ac_isLive(jule::Ptr<_1c13417e1_ObjectDeadCode>, jule::Ptr<_1c0d4dde2_Var>*);
inline void _1c622d068_pushLive(jule::Ptr<_1c13417e1_ObjectDeadCode>, jule::Ptr<_1c0ca8a72_Trait>);
inline void _1c623237a_pushLive(jule::Ptr<_1c13417e1_ObjectDeadCode>, jule::Ptr<_1c0c98699_FnIns>);
inline void _1c623853a_pushLive(jule::Ptr<_1c13417e1_ObjectDeadCode>, jule::Ptr<_1c0c83552_StructIns>);
inline void _1c6240421_pushLive(jule::Ptr<_1c13417e1_ObjectDeadCode>, jule::Ptr<_1c0d4dde2_Var>);
inline void _1c1342638_setReferencesAsLive(jule::Ptr<_1c13417e1_ObjectDeadCode>, jule::Ptr<_1c0c9b878_ReferenceStack>*);
inline void _1c13428e1_inits(jule::Ptr<_1c13417e1_ObjectDeadCode>, jule::Ptr<_1c0d0c6a8_Package>*);
inline void _1c1342b99_collectLivePackage(jule::Ptr<_1c13417e1_ObjectDeadCode>, jule::Ptr<_1c0d0c6a8_Package>*);
inline void _1c1342d97_collectLive(jule::Ptr<_1c13417e1_ObjectDeadCode>);
inline void _1c1343150_removeDeadGlobals(jule::Ptr<_1c13417e1_ObjectDeadCode>, jule::Slice<jule::Ptr<_1c0d4dde2_Var>>*);
inline void _1c1343408_removeDeadFns(jule::Ptr<_1c13417e1_ObjectDeadCode>, jule::Slice<jule::Ptr<_1c0c95795_Fn>>*);
inline void _1c13436b1_removeDeadStructs(jule::Ptr<_1c13417e1_ObjectDeadCode>, jule::Slice<jule::Ptr<_1c0c807c4_Struct>>*);
inline void _1c1343969_removeDeadTraits(jule::Ptr<_1c13417e1_ObjectDeadCode>, jule::Slice<jule::Ptr<_1c0ca8a72_Trait>>*);
inline void _1c1343c22_removeDeadsFile(jule::Ptr<_1c13417e1_ObjectDeadCode>, jule::Ptr<_1c0da1681_SymbolTable>*);
inline void _1c1343eca_removeDeadsPackage(jule::Ptr<_1c13417e1_ObjectDeadCode>, jule::Ptr<_1c0d0c6a8_Package>*);
inline void _1c13441c8_removeDeads(jule::Ptr<_1c13417e1_ObjectDeadCode>);
inline void _1c13443c6_elimanate(jule::Ptr<_1c13417e1_ObjectDeadCode>);
inline __jule_tuple_x_1c1989301_IR__jule_tuple_s_21b8c54de_Log static__1c1989796_Build(jule::Str, jule::I64);
inline void _1c1989c80_appendStructs(_1c1989301_IR*, jule::Ptr<_1c0d0c6a8_Package>*, jule::Slice<jule::Ptr<_1c0c807c4_Struct>>*);
inline jule::Slice<jule::Ptr<_1c0c807c4_Struct>> _1c198a016_GetAllStructures(_1c1989301_IR*);
inline void _1c198a379_appendGlobals(_1c1989301_IR*, jule::Ptr<_1c0d0c6a8_Package>*, jule::Slice<jule::Ptr<_1c0d4dde2_Var>>*);
inline jule::Slice<jule::Ptr<_1c0d4dde2_Var>> _1c198a610_GetAllGlobals(_1c1989301_IR*);
inline void _1c198a80d_Order(_1c1989301_IR*);
inline jule::Str _1c0c838c6_Str(_1c0c83552_StructIns*);
inline jule::Bool _1c0c83c17_Equal(jule::Ptr<_1c0c83552_StructIns>, jule::Ptr<_1c0dd7de3_TypeKind>);
inline jule::Bool _1c0c841bd_Same(_1c0c83552_StructIns*, jule::Ptr<_1c0c83552_StructIns>);
inline jule::Ptr<_1c0c95795_Fn> _1c0c845b9_FindMethod(_1c0c83552_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0c829a2_FieldIns> _1c0c8490a_FindField(_1c0c83552_StructIns*, jule::Str);
inline jule::Ptr<_1c0d4dde2_Var> _1c0c84c4b_FindStatic(_1c0c83552_StructIns*, jule::Str);
inline jule::Ptr<_21b9826bc_Cmd> static__21b982ab8_New(jule::Str);
inline jule::VoidExceptional _21b982cb6_Spawn(_21b9826bc_Cmd*);
inline jule::Exceptional<jule::I64> _21b98324a_Wait(_21b9826bc_Cmd*);
inline jule::VoidExceptional _21b986c87_spawn(_21b9826bc_Cmd*);
inline jule::Exceptional<jule::I64> _21b98721b_wait(_21b9826bc_Cmd*);
inline jule::I32 _234ab70e1_DecodeRune(jule::I32, jule::I32);
inline __jule_tuple_i32__jule_tuple_i32 _234ab73aa_EncodeRune(jule::I32);
inline jule::Slice<jule::U16> _234ab76eb_Encode(jule::Slice<jule::I32>);
inline jule::Slice<jule::I32> _234ab7982_Decode(jule::Slice<jule::U16>);
inline jule::Slice<jule::U16> _234ab7d06_AppendRune(jule::Slice<jule::U16>, jule::I32);
inline jule::Slice<jule::U16> _234ab8059_UTF16FromStr(jule::Str);
inline jule::Str _234ab8367_UTF16ToStr(jule::Slice<jule::U16>);
inline jule::Str _234ab8631_U16PtrToStr(jule::U16*);
inline jule::I64 _234a16183_GetLastErrno(void);
inline jule::Uintptr _234ae1d1e_GetStdHandle(jule::Uintptr);
inline jule::Bool _234ae20d8_CloseHandle(jule::Uintptr);
inline jule::I64 _234ae245c_Wstat(jule::U16*, struct _stat*);
inline jule::I64 _234ae288b_Wopen(jule::U16*, jule::I64, jule::I64);
inline jule::U32 _234ae2a9a_GetLastError(void);
inline jule::U32 _234ae2e1e_GetCurrentDirectory(jule::U32, jule::U16*);
inline jule::Bool _234ae34a2_DeleteFile(jule::U16*);
inline jule::Bool _234ae376b_CreateDirectory(jule::U16*);
inline jule::Bool _234ae3a35_RemoveDirectory(jule::U16*);
inline jule::U32 _234ae401e_GetFullPathName(jule::U16*, jule::U32, jule::U16*, jule::U16**);
inline jule::Bool _234ae4393_GetConsoleMode(jule::Uintptr, jule::I64*);
inline jule::Bool _234ae499d_SetConsoleMode(jule::Uintptr, jule::I64);
inline jule::Bool _234ae4eed_WriteConsole(jule::Uintptr, jule::U16*, jule::I64, jule::I64*, void*);
inline jule::Bool _234ae54d7_ReadConsole(jule::Uintptr, jule::U16*, jule::I64, jule::I64*);
inline jule::Uintptr _234ae5a6a_FindFirstFile(jule::U16*, WIN32_FIND_DATAW*);
inline jule::I64 _234ae5dde_FindNextFile(jule::Uintptr, WIN32_FIND_DATAW*);
inline jule::I64 _234ae61a8_FindClose(jule::Uintptr);
inline jule::I64 _234ae8287_Read(jule::I64, void*, jule::U64);
inline jule::I64 _234ae8661_Close(jule::I64);
inline jule::I64 _234ae8a18_Write(jule::I64, void*, jule::U64);
inline void _234ae8c49_Exit(jule::I64);
inline __jule_tuple_i32__jule_tuple_int _234b9cc21_DecodeRune(jule::Slice<jule::U8>);
inline __jule_tuple_i32__jule_tuple_int _234b9d062_DecodeRuneStr(jule::Str);
inline __jule_tuple_i32__jule_tuple_int _234b9d5b2_DecodeLastRuneStr(jule::Str);
inline jule::I64 _234b9d87b_RuneLen(jule::I32);
inline jule::I64 _234b9dd10_EncodeRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _234b9e10c_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _234b9e481_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _234b9ea14_RuneCountStr(jule::Str);
inline jule::Bool _234b9eccd_RuneStart(jule::U8);
inline void _234ba0e22_handleRW(jule::Slice<jule::U8>*);
inline void _234ba69a5_HandleRW(jule::Slice<jule::U8>*);
inline jule::Str _234c6a085_Str(jule::U8*, jule::I64);
inline jule::Slice<jule::U8> _1c27477d9_Slice(jule::U8*, jule::I64);
inline jule::Slice<jule::U8> _234c75d2c_StrBytes(jule::Str);
inline jule::Str _234c760b3_BytesStr(jule::Slice<jule::U8>);
inline jule::Str _234c7637c_StrFromBytes(jule::Slice<jule::U8>);
inline jule::I64 _234ca4b3b_getLastOsErrorWindows(void);
inline jule::Slice<jule::Str> _234ca5bb4_Args(void);
inline jule::Exceptional<jule::Str> _234ca6126_WorkingDir(void);
inline jule::Exceptional<jule::Str> _234ca704a_getwd(void);
inline jule::Bool _21b7b2772_IsLetter(jule::I32);
inline jule::Bool _21b827cb0_is16(jule::Slice<_21b826022_Range16>, jule::U16);
inline jule::Bool _21b828134_is32(jule::Slice<_21b826550_Range32>, jule::U32);
inline jule::Bool _21b82893c_isExcludingLatin(jule::Ptr<_21b8269c3_RangeTable>, jule::I32);
inline jule::Bool _21b828b7e_IsUpper(jule::I32);
inline jule::I64 _21b8694b6_findLastByte(jule::U8*, jule::U8*, jule::U8);
inline jule::I64 _21b869ae3_FindByteStr(jule::Str, jule::U8);
inline jule::I64 _21b869e67_FindLastByteStr(jule::Str, jule::U8);
inline jule::Str _21b86a264_Repeat(jule::Str, jule::I64);
inline jule::Bool _21b86a62c_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _21b86a9a1_HasSuffix(jule::Str, jule::Str);
inline jule::I64 _21b86ae57_FindAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _21b86b298_Find(jule::Str, jule::Str);
inline jule::I64 _21b86b6c7_FindLastAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _21b86ba4b_FindLast(jule::Str, jule::Str);
inline jule::I64 _21b86d333_FindLastByte(jule::Str, jule::U8);
inline jule::I64 _21b86d6a7_FindRune(jule::Str, jule::I32);
inline jule::I64 _21b86e0d1_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _21b86e774_Split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _21b86eae8_Contains(jule::Str, jule::Str);
inline jule::Bool _21b870665_ContainsAny(jule::Str, jule::Str);
inline jule::I64 _21b8709d9_Count(jule::Str, jule::Str);
inline jule::Str _21b870ec3_Replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline jule::Str _21b871c4e_TrimLeft(jule::Str, jule::Str);
inline jule::Str _21b8720c3_TrimRight(jule::Str, jule::Str);
inline jule::Str _21b872447_Trim(jule::Str, jule::Str);
inline jule::Bool _234c795e4_IsPathSep(jule::U8);
inline jule::Bool _234c79902_isSlash(jule::U8);
inline jule::U8 _234c79bbb_toUpper(jule::U8);
inline jule::I64 _234c7a293_volumeNameLen(jule::Str);
inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _234c7a55c_cutPath(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _234c7a826_fullPath(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _234c7ac00_abs(jule::Str);
inline jule::Str _234c7ae42_join(jule::Slice<jule::Str>);
inline jule::Str _21b8748ab_Clean(jule::Str);
inline jule::Str _21b874e83_FromSlash(jule::Str);
inline jule::Str _21b8752c4_Join(jule::Slice<jule::Str>);
inline jule::Str _21b87555a_Ext(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _21b875824_Abs(jule::Str);
inline jule::Str _21b875add_Base(jule::Str);
inline jule::Str _21b875eb7_Dir(jule::Str);
inline jule::Str _21b876209_VolumeName(jule::Str);
inline jule::I64 _234b08e79_getLastFsError(void);
inline jule::Bool _234ba89a7_isConsoleHandle(jule::Uintptr);
inline void _21b9875c3_appendEscapeArg(_234c76a64_StrBuilder*, jule::Str);
inline jule::Str _21b98788c_makeCmdLine(jule::Slice<jule::Str>);
inline jule::Exceptional<jule::Slice<jule::U16>> _21b987c66_createEnvBlock(jule::Slice<jule::Str>);
inline jule::I64 _21b988c67_processErrorFromCode(jule::I64);
inline jule::I64 _21b988e87_getLastProcessError(void);
inline void _21b9897a1_Exit(jule::I64);
inline jule::Str _21b9899b0_Executable(void);
inline jule::Bool _21b8b8081_IsStdHeaderPath(jule::Str);
inline jule::Bool _21b8b81c4_IsValidHeaderExt(jule::Str);
inline jule::Bool _21b8b846b_IsValidCppExt(jule::Str);
inline jule::Str _21b8c5951_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _21b8c5c5e_argToStr(jule::Any);
inline jule::I64 _21b8c6028_findNextFmt(jule::Str);
inline jule::Str _21b8c63e1_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _21b8c7249_IsTopDirective(jule::Str);
inline jule::Bool _21b8c8668_IsWindows(jule::Str);
inline jule::Bool _21b8c8976_IsDarwin(jule::Str);
inline jule::Bool _21b8c8c40_IsLinux(jule::Str);
inline jule::Bool _21b8c9081_IsI386(jule::Str);
inline jule::Bool _21b8c9317_IsAmd64(jule::Str);
inline jule::Bool _21b8c95d1_IsArm64(jule::Str);
inline jule::Bool _21b8c989a_IsUnix(jule::Str);
inline jule::Bool _21b8c9c74_Is32Bit(jule::Str);
inline jule::Bool _21b8c9eb6_Is64Bit(jule::Str);
inline void _21b98ac47_init(void);
inline jule::I64 _20217a2a8_LeadingZeros64(jule::U64);
inline jule::I64 _20217b1ee_TrailingZeros(jule::U64);
inline jule::I64 _20217bad4_TrailingZeros32(jule::U32);
inline jule::I64 _20217bd9d_TrailingZeros64(jule::U64);
inline jule::I64 _202182876_Len32(jule::U32);
inline jule::I64 _202182b40_Len64(jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _2021838cc_Add64(jule::U64, jule::U64, jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _2021851d6_Mul64(jule::U64, jule::U64);
inline jule::U32 _2020870b6_F32Bits(jule::F32);
inline jule::F32 _2020873c4_F32FromBits(jule::U32);
inline jule::U64 _20208768d_F64Bits(jule::F64);
inline jule::F64 _2020879ce_F64FromBits(jule::U64);
inline __jule_tuple_f64__jule_tuple_int _20208a042_Frexp(jule::F64);
inline jule::F64 _20218c320_NaN(void);
inline jule::Bool _20218c62d_IsNaN(jule::F64);
inline jule::F64 _20218c8e7_Inf(jule::I64);
inline jule::Bool _20218ccb0_IsInf(jule::F64, jule::I64);
inline __jule_tuple_f64__jule_tuple_int _20218d079_normalize(jule::F64);
inline jule::F64 _20218ea4d_Log(jule::F64);
inline jule::F64 _202190433_Abs(jule::F64);
inline __jule_tuple_f64__jule_tuple_f64 _20219700b_Modf(jule::F64);
inline jule::F64 _202197814_Log2(jule::F64);
inline jule::Str _2021c12aa_FmtFloat(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _2021c1893_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _2021c209c_bigFtoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _2021c009a_floatInfo*);
inline jule::Slice<jule::U8> _2021c2773_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _2021c0c27_decimalSlice, jule::I64, jule::U8);
inline void _2021c2b91_roundShortest(_2021d3982_decimal*, jule::U64, jule::I64, _2021c009a_floatInfo*);
inline jule::Slice<jule::U8> _2021c3235_fmtE(jule::Slice<jule::U8>, jule::Bool, _2021c0c27_decimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _2021c371e_fmtF(jule::Slice<jule::U8>, jule::Bool, _2021c0c27_decimalSlice, jule::I64);
inline jule::Slice<jule::U8> _2021c3dc3_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _2021c009a_floatInfo*);
inline jule::Slice<jule::U8> _2021c4555_fmtX(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _2021c009a_floatInfo*);
inline jule::I64 _2021c48c9_min(jule::I64, jule::I64);
inline jule::I64 _2021c4c4d_max(jule::I64, jule::I64);
inline jule::U8 _2021c58db_lower(jule::U8);
inline __jule_tuple_u64__jule_tuple__201a13724_ConvError _2021c5d5e_parseUint(jule::Str*, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _2021c628d_ParseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _2021c6744_ParseInt(jule::Str, jule::I64, jule::I64);
inline __jule_tuple_f64__jule_tuple_bool _2021c7404_eiselLemire64(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _2021c7877_eiselLemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _2021c9659_commonPrefixLenIgnoreCase(jule::Str, jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _2021c9967_special(jule::Str);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _2021c9c31_readFloat(jule::Str*);
inline __jule_tuple_f64__jule_tuple_bool _2021cb77c_atof64exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _2021cbbab_atof32exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f64__jule_tuple__201a13724_ConvError _2021cc250_atofHex(_2021c009a_floatInfo*, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__201a13724_ConvError _2021cc629_atof32(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__201a13724_ConvError _2021cc86b_atof64(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__201a13724_ConvError _2021ccbe0_parseFloatPrefix(jule::Str*, jule::I64);
inline jule::Exceptional<jule::F64> _2021cd064_ParseFloat(jule::Str, jule::I64);
inline void _2021cd8e4_ryuFtoaFixed32(_2021c0c27_decimalSlice*, jule::U32, jule::I64, jule::I64);
inline void _2021cdd89_ryuFtoaFixed64(_2021c0c27_decimalSlice*, jule::U64, jule::I64, jule::I64);
inline void _2021ce6c5_formatDecimal(_2021c0c27_decimalSlice*, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _2021ceb9d_ryuFtoaShortest(_2021c0c27_decimalSlice*, jule::U64, jule::I64, _2021c009a_floatInfo*);
inline jule::I64 _2021cee34_mulByLog2Log10(jule::I64);
inline jule::I64 _2021d01ed_mulByLog10Log2(jule::I64);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _2021d062c_computeBounds(jule::U64, jule::I64, _2021c009a_floatInfo*);
inline void _2021d0c7b_ryuDigits(_2021c0c27_decimalSlice*, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _2021d13ec_ryuDigits32(_2021c0c27_decimalSlice*, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _2021d182b_mult64bitPow10(jule::U32, jule::I64, jule::I64);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _2021d1c5a_mult128bitPow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _2021d20ce_divisibleByPow5(jule::U64, jule::I64);
inline __jule_tuple_u32__jule_tuple_u32 _2021d2398_divmod1e9(jule::U64);
inline void _2021d52d0_trim(_2021d3982_decimal*);
inline void _2021d55bb_rightShift(_2021d3982_decimal*, jule::U64);
inline jule::Bool _2021d5a72_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I64, jule::Str*);
inline void _2021d5d2a_leftShift(_2021d3982_decimal*, jule::U64);
inline jule::Bool _2021d619e_shouldRoundUp(_2021d3982_decimal*, jule::I64);
inline jule::Str _2021d7931_FmtUint(jule::U64, jule::I64);
inline jule::Str _2021d7ce9_FmtInt(jule::I64, jule::I64);
inline jule::Str _2021d80b3_Itoa(jule::I64);
inline jule::Str _2021d8404_small(jule::I64);
inline jule::Bool _2021d868a_isPowerOfTwo(jule::I64);
inline __jule_tuple_su8__jule_tuple_str _2021d8c2e_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline jule::Str _2021da22a_RealKindOf(jule::Str);
inline jule::I64 _2021da4e4_BitsizeOf(jule::Str);
inline jule::Str _2021da835_IntFromBits(jule::I64);
inline jule::Str _2021daabb_UintFromBits(jule::I64);
inline jule::Str _2021dad85_FloatFromBits(jule::I64);
inline jule::Bool _2021db98a_CheckBitFloat(jule::Str, jule::I64);
inline jule::I64 _2021dbc54_BitsizeOfFloat(jule::F64);
inline jule::I64 _2021dc01d_BitsizeOfInt(jule::I64);
inline jule::I64 _2021dc2d7_BitsizeOfUint(jule::U64);
inline void _2021dc480_UpdateTarget(void);
inline void _2021dc606_init(void);
inline jule::I64 _2021e1264_MinI(jule::Str);
inline jule::I64 _2021e1572_MaxI(jule::Str);
inline jule::U64 _2021e183b_MaxU(jule::Str);
inline jule::F64 _2021e1b7c_Min(jule::Str);
inline jule::F64 _2021e1e13_Max(jule::Str);
inline jule::Bool _2021e23b9_IsI16Greater(jule::Str);
inline jule::Bool _2021e26c7_IsI32Greater(jule::Str);
inline jule::Bool _2021e2991_IsI64Greater(jule::Str);
inline jule::Bool _2021e2cd2_IsU16Greater(jule::Str);
inline jule::Bool _2021e3068_IsU32Greater(jule::Str);
inline jule::Bool _2021e3332_IsU64Greater(jule::Str);
inline jule::Bool _2021e35eb_IsF32Greater(jule::Str);
inline jule::Bool _2021e39c5_IsF64Greater(jule::Str);
inline jule::Bool _2021e3cc2_IsGreater(jule::Str, jule::Str);
inline jule::Bool _2021e4e38_IsSigInt(jule::Str);
inline jule::Bool _2021e5246_IsUnsigInt(jule::Str);
inline jule::Bool _2021e5510_IsInt(jule::Str);
inline jule::Bool _2021e5851_IsFloat(jule::Str);
inline jule::Bool _2021e5ad7_IsNum(jule::Str);
inline jule::Bool _2021e5da1_IsSigNum(jule::Str);
inline void _202200196_lshiftUnsig(_2021e617b_Const*, _2021e617b_Const*);
inline void _2022004c6_rshiftUnsig(_2021e617b_Const*, _2021e617b_Const*);
inline jule::Bool _1c0c49bbc_IsUnaryOp(jule::U64);
inline jule::Bool _1c0c49eca_IsBinOp(jule::U64);
inline jule::Bool _1c0c4a5d5_IsStr(jule::Str);
inline jule::Bool _1c0c4a86b_IsRawStr(jule::Str);
inline jule::Bool _1c0c4ab35_IsRune(jule::Str);
inline jule::Bool _1c0c4b51a_IsFloat(jule::Str);
inline jule::Bool _1c0c4b7d4_IsNum(jule::Str);
inline jule::Bool _1c0c4bd67_IsIgnoreIdent(jule::Str);
inline jule::Bool _1c0c4c131_IsAnonIdent(jule::Str);
inline jule::Bool _1c0c4c6b4_IsSpace(jule::I32);
inline jule::Bool _1c0c4cbae_IsLetter(jule::I32);
inline jule::Bool _1c0c4d132_IsDecimal(jule::U8);
inline jule::Bool _1c0c4d3eb_IsBinary(jule::U8);
inline jule::Bool _1c0c4d6b5_IsOctal(jule::U8);
inline jule::Bool _1c0c4d97e_IsHex(jule::U8);
inline jule::Bool _1c0c4dc48_IsAssign(jule::U64);
inline jule::Bool _1c0c4e012_IsPostfixOp(jule::U64);
inline jule::Bool _1c0c4e2cb_IsAssignOp(jule::U64);
inline jule::Ptr<_1c0c4ec16_File> _1c0c510e1_NewFileSet(jule::Str);
inline _21b8c54de_Log _1c0c52b1a_makeErr(jule::I64, jule::I64, jule::Ptr<_1c0c4ec16_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c0c52ed3_bytesHasPrefix(jule::Slice<jule::U8>*, jule::Str);
inline jule::Str _1c0c53357_floatFmtE(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1c0c53720_floatFmtP(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1c0c53a94_floatFmtDotnp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1c0c53e18_floatFmtDotfp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1c0c5428c_floatFmtDotp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1c0c54721_floatNum(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1c0c54963_commonNum(jule::Slice<jule::U8>*);
inline jule::Str _1c0c54c2c_binaryNum(jule::Slice<jule::U8>*);
inline jule::Bool _1c0c550a1_isFloatFmtE(jule::U8, jule::I64);
inline jule::Bool _1c0c55425_isFloatFmtP(jule::U8, jule::I64);
inline jule::Bool _1c0c55799_isFloatFmtDotnp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Bool _1c0c55b1d_isFloatFmtDotp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Bool _1c0c55e92_isFloatFmtDotfp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1c0c5648c_octalNum(jule::Slice<jule::U8>*);
inline jule::Str _1c0c56668_hexNum(jule::Slice<jule::U8>*);
inline jule::Str _1c0c569ba_hexEscape(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1c0c56c84_bigUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _1c0c5704d_littleUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _1c0c57317_hexByteEscape(jule::Slice<jule::U8>*);
inline jule::Str _1c0c575d1_byteEscape(jule::Slice<jule::U8>*);
inline jule::Slice<_21b8c54de_Log> _1c0c5c5c5_Lex(jule::Ptr<_1c0c4ec16_File>, jule::I64);
inline jule::Bool _1c0d27272_FindModuleFile(jule::Slice<jule::Ptr<_234b095c8_DirEntry>>*);
inline jule::Str _1c0d2752a_FindModuleFileDeep(jule::Str);
inline jule::Slice<_21b8c54de_Log> _1c0d277e4_CheckModuleFile(jule::Str*);
inline jule::Bool _1c0d28141_IsPub(jule::Str);
inline jule::Bool _1c0d709a2_IsAscii(jule::I32);
inline jule::I32 _1c0d8a9cd_ToRune(jule::Str);
inline jule::Str _1c0d8abdc_ToRawStr(jule::Str);
inline jule::Str _1c0d8b02d_ToStr(jule::Str);
inline __jule_tuple_u8__jule_tuple_bool _1c0d8b2b4_tryBtoaCommonEsq(jule::Str);
inline jule::I32 _1c0d8b638_runeFromEsqSeq(jule::Str, jule::I64*);
inline void _1c0d8b9ce_strEsqSeq(jule::Slice<jule::U8>*, jule::Str, jule::I64*);
inline jule::I64 _1c0ec4452_findFormatPrefix(jule::Slice<jule::U8>*, jule::I64);
inline jule::Slice<jule::U8> _1c0ec4782_getFormatRange(jule::I64*, jule::Slice<jule::U8>*);
inline void _1c0ec4a6d_FmtByDefault(_234c76a64_StrBuilder*, jule::Any*);
inline void _1c0ec4e8b_applyFmtByDefault(_234c76a64_StrBuilder*, jule::I64*, jule::Slice<jule::Any>);
inline void _1c0ec53a9_applyFmt(jule::Slice<jule::U8>*, _234c76a64_StrBuilder*, jule::I64*, jule::Slice<jule::Any>);
inline jule::Slice<jule::U8> _1c0ec572d_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1c0ec77eb_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c0c9a976_parameterUsesGenerics(jule::Ptr<_1c0c976ed_ParamIns>*, jule::Slice<jule::Ptr<_1c0c6bb45_GenericDecl>>*);
inline jule::Ptr<_1c0de00b5_TypeSymbol> _1c0c9d1e8_buildType(jule::Ptr<_1c0c5e93a_TypeDecl>);
inline jule::Ptr<_1c0da7b71_Value> _1c0c9d506_buildExpr(jule::Ptr<_1c0c63c6e_Expr>);
inline jule::Ptr<_1c0dd7101_TypeAlias> _1c0c9d7c0_buildTypeAlias(jule::Ptr<_1c0c76457_TypeAliasDecl>);
inline jule::Ptr<_1c0c7c89d_Field> _1c0c9db11_buildField(jule::Ptr<_1c0c79d0c_FieldDecl>);
inline jule::Slice<jule::Ptr<_1c0c7c89d_Field>> _1c0c9dd97_buildFields(jule::Slice<jule::Ptr<_1c0c79d0c_FieldDecl>>*);
inline jule::Ptr<_1c0c807c4_Struct> _1c0c9e161_buildStruct(jule::Ptr<_1c0c7a703_StructDecl>);
inline jule::Ptr<_1c0c93cc1_Param> _1c0c9e42a_buildParam(jule::Ptr<_1c0c70198_ParamDecl>);
inline jule::Slice<jule::Ptr<_1c0c93cc1_Param>> _1c0c9e804_buildParams(jule::Slice<jule::Ptr<_1c0c70198_ParamDecl>>*);
inline jule::Ptr<_1c0c93540_RetType> _1c0c9ea46_buildRetType(jule::Ptr<_1c0c6282d_RetTypeDecl>);
inline jule::Ptr<_1c0c95795_Fn> _1c0c9ed10_buildFunc(jule::Ptr<_1c0c715ea_FnDecl>);
inline jule::Slice<jule::Ptr<_1c0c95795_Fn>> _1c0ca00c9_buildMethods(jule::Slice<jule::Ptr<_1c0c715ea_FnDecl>>*);
inline jule::Slice<jule::Ptr<_1c0de00b5_TypeSymbol>> _1c0ca0393_buildTraitInherits(jule::Slice<jule::Ptr<_1c0c5e93a_TypeDecl>>*);
inline jule::Ptr<_1c0ca8a72_Trait> _1c0ca065c_buildTrait(jule::Ptr<_1c0c7ae40_TraitDecl>);
inline jule::Ptr<_1c0caa711_EnumItem> _1c0ca0926_buildEnumItem(jule::Ptr<_1c0c77ee7_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1c0caa711_EnumItem>> _1c0ca0be0_buildEnumItems(jule::Slice<jule::Ptr<_1c0c77ee7_EnumItemDecl>>*);
inline jule::Ptr<_1c0cab27d_Enum> _1c0ca11da_buildEnum(jule::Ptr<_1c0c78aa8_EnumDecl>);
inline jule::Ptr<_1c0cac3b1_TypeEnumItem> _1c0ca13b6_buildTypeEnumItem(jule::Ptr<_1c0c793d3_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_1c0cac3b1_TypeEnumItem>> _1c0ca165d_buildTypeEnumItems(jule::Slice<jule::Ptr<_1c0c793d3_TypeEnumItemDecl>>*);
inline jule::Ptr<_1c0cac988_TypeEnum> _1c0ca1927_buildTypeEnum(jule::Ptr<_1c0c79a43_TypeEnumDecl>);
inline jule::Ptr<_1c0d4dde2_Var> _1c0ca1be1_buildVar(jule::Ptr<_1c0c727a5_VarDecl>);
inline jule::Slice<jule::Ptr<_1c0d4dde2_Var>> _1c0ca1eaa_buildVars(jule::Slice<jule::Ptr<_1c0c727a5_VarDecl>>);
inline jule::Ptr<_1c0cd21d8_Impl> _1c0ca2274_buildImpl(jule::Ptr<_1c0c7b5a0_Impl>);
inline jule::Ptr<_1c0da69e9_Data> _1c0ccc634_buildAsComptimeMethodData(jule::Ptr<_1c0c98699_FnIns>*);
inline jule::Ptr<_1c0d09782_ImportInfo> _1c0ccc942_findComptimePackage(jule::Ptr<_1c0d2b078_Sema>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0ccccb6_buildComptimeTypeInfoData(jule::Ptr<_1c0d2b078_Sema>*, jule::Ptr<_1c0dd7de3_TypeKind>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0ccd107_buildComptimeValue(jule::Ptr<_1c0da69e9_Data>*);
inline jule::Str _1c0cd1182_toStrConstraints(jule::Ptr<_1c0dd650c_InsGeneric>);
inline jule::Bool _1c0cd154a_matchConstraint(jule::Str*, jule::Ptr<_1c0dd7de3_TypeKind>*);
inline jule::Bool _1c0cd1814_isBuiltinConstraint(jule::Str*);
inline jule::Ptr<_1c0cdeaec_scopeChecker> _1c0cd441b_newScopeCheckerBase(jule::Ptr<_1c0d2b078_Sema>*, jule::Ptr<_1c0c98699_FnIns>);
inline jule::Ptr<_1c0cdeaec_scopeChecker> _1c0cd47d4_newScopeChecker(jule::Ptr<_1c0d2b078_Sema>*, jule::Ptr<_1c0c98699_FnIns>);
inline jule::Ptr<_1c0cdd579_scopeLabel> _1c0cd4b58_findLabelParent(jule::Str*, jule::Ptr<_1c0cdeaec_scopeChecker>);
inline jule::Bool _1c0cd5021_modelIsGotoScope(jule::Any, jule::Ptr<_1c0cd763e_Scope>*);
inline jule::Bool _1c0cd5395_stmtIsGotoScope(jule::Any*, jule::Ptr<_1c0cd763e_Scope>*);
inline jule::I64 _1c0cd5719_countMatchType(jule::Ptr<_1c0cdb852_Match>*, jule::Ptr<_1c0dd7de3_TypeKind>*);
inline jule::Slice<jule::Ptr<_1c0da69e9_Data>> _1c0cd59d3_getDatasFromTupleData(jule::Ptr<_1c0da69e9_Data>*);
inline jule::Bool _1c0cd631e_checkMut(jule::Ptr<_1c0d2b078_Sema>*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0da69e9_Data>, jule::Ptr<_1c0c49480_Token>);
inline jule::Bool _1c0cd6808_checkAssign(jule::Ptr<_1c0d2b078_Sema>*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0da69e9_Data>, jule::Ptr<_1c0c49480_Token>);
inline jule::Bool _1c0cd6ac2_isValidAstStForNextSt(jule::Any*);
inline jule::Bool _1c0cd6d8b_isValidStForNextSt(jule::Any*);
inline jule::Bool _1c0cd7155_stmtIsDef(jule::Any*);
inline jule::U64 _1c0d020b5_removeEqFromOp(jule::U64);
inline void _1c0d022e6_makeComptimeRange(jule::Ptr<_1c0da69e9_Data>*);
inline jule::Bool _1c0d027e1_canComptimeMatch(jule::Ptr<_1c0da69e9_Data>*);
inline jule::Ptr<_1c0d4dde2_Var> _1c0d06c68_findVarInPackage(jule::Slice<jule::Ptr<_1c0da1681_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1c0dd7101_TypeAlias> _1c0d071db_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1c0da1681_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1c0c807c4_Struct> _1c0d0761a_findStructInPackage(jule::Slice<jule::Ptr<_1c0da1681_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1c0c95795_Fn> _1c0d07ac1_findFnInPackage(jule::Slice<jule::Ptr<_1c0da1681_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1c0ca8a72_Trait> _1c0d07e12_findTraitInPackage(jule::Slice<jule::Ptr<_1c0da1681_SymbolTable>>*, jule::Str*);
inline jule::Ptr<_1c0cab27d_Enum> _1c0d08286_findEnumInPackage(jule::Slice<jule::Ptr<_1c0da1681_SymbolTable>>*, jule::Str*);
inline jule::Ptr<_1c0cac988_TypeEnum> _1c0d0860a_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1c0da1681_SymbolTable>>*, jule::Str*);
inline jule::Any _1c0d08b49_defByIdentPackage(jule::Slice<jule::Ptr<_1c0da1681_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Bool _1c0d0eb83_isStdPackage(jule::Str*, jule::Str);
inline jule::Bool _1c0d28718_isValidModelForRef(jule::Any*);
inline _21b8c54de_Log _1c0d28bbe_compilerErr(jule::Ptr<_1c0c49480_Token>*, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c0d29043_impIsLookupable(jule::Ptr<_1c0d09782_ImportInfo>*, jule::Str*);
inline void _1c0d29373_appendRetVars(jule::Slice<jule::Ptr<_1c0d4dde2_Var>>*, jule::Ptr<_1c0c98699_FnIns>*);
inline void _1c0d2965e_appendParamVars(jule::Slice<jule::Ptr<_1c0d4dde2_Var>>*, jule::Ptr<_1c0c98699_FnIns>*);
inline void _1c0d2994a_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1c0dd7101_TypeAlias>>*, jule::Ptr<_1c0c98699_FnIns>*);
inline jule::Ptr<_1c0da1681_SymbolTable> _1c0d29cbe_findFile(jule::Slice<jule::Ptr<_1c0da1681_SymbolTable>>*, jule::Ptr<_1c0c4ec16_File>*);
inline void _1c0d2a275_pushSuggestion(_21b8c54de_Log*, jule::Str, jule::Slice<jule::Any>);
inline void _1c0d4c5c7_pushImplemented(jule::Ptr<_1c0ca8a72_Trait>, jule::Ptr<_1c0c807c4_Struct>*);
inline void _1c0d4c8b3_pushImplements(jule::Ptr<_1c0c807c4_Struct>*, jule::Ptr<_1c0ca8a72_Trait>);
inline jule::Bool _1c0d8c260_traitHasReferenceReceiver(jule::Ptr<_1c0ca8a72_Trait>*);
inline jule::Bool _1c0d8c617_floatAssignable(jule::Str*, jule::Ptr<_1c0da69e9_Data>*);
inline jule::Bool _1c0d8c98b_sigAssignable(jule::Str, jule::Ptr<_1c0da69e9_Data>*);
inline jule::Bool _1c0d8cd54_unsigAssignable(jule::Str, jule::Ptr<_1c0da69e9_Data>*);
inline jule::Bool _1c0d8d1c8_intAssignable(jule::Str, jule::Ptr<_1c0da69e9_Data>*);
inline void _1c0d995e1_checkMutRiskOfStructLit(jule::Ptr<_1c0d2b078_Sema>*, jule::Ptr<_1c0c88700_StructLitExprModel>*);
inline jule::Ptr<_1c0dd7de3_TypeKind> _1c0da042c_lenKind(void);
inline jule::Bool _1c0da077e_isGoodValueToInfer(jule::Ptr<_1c0da69e9_Data>*);
inline jule::Ptr<_1c0c5dd57_Directive> _1c0dd0391_findDirective(jule::Slice<jule::Ptr<_1c0c5dd57_Directive>>*, jule::Str);
inline jule::Any _1c0dd0759_findBuiltinsImport(jule::Str*, jule::Ptr<_1c0d09782_ImportInfo>);
inline void _1c0dd098a_fitBitsize(jule::Ptr<_1c0da69e9_Data>*);
inline void _1c0dd0cba_makeStructLitAlloc(jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0c88700_StructLitExprModel>*);
inline jule::Ptr<_1c0d4dde2_Var> _1c0dd113e_buildErrorVar(jule::Ptr<_1c0cd763e_Scope>*, jule::Ptr<_1c0c67998_FnCallExpr>*);
inline jule::Any _1c0dd14b3_findBuiltinsSema(jule::Str*, jule::Ptr<_1c0d2b078_Sema>);
inline jule::Bool _1c0dd177c_isOkForShifting(jule::Ptr<_1c0da69e9_Data>*);
inline jule::Bool _1c0dd1b56_isInstancedStruct(jule::Ptr<_1c0c83552_StructIns>);
inline jule::Bool _1c0dd1e53_isPtrArithmeticCompatible(jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0da69e9_Data>*);
inline void _1c0dd22e9_applyCastKindModel(jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0dd7de3_TypeKind>*, jule::Ptr<_1c0c49480_Token>*);
inline void _1c0dd2690_applyCastKind(jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0dd7de3_TypeKind>*, jule::Ptr<_1c0c49480_Token>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0dd289e_buildVoidData(void);
inline jule::Str _1c0dd2c23_checkDataForIntegerIndexing(jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0c49480_Token>*);
inline void _1c0dd30b9_applyCastModelByEnum(jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0cab27d_Enum>, jule::Ptr<_1c0c49480_Token>*);
inline void _1c0dd33a5_castConstByType(jule::Str*, jule::Ptr<_1c0da69e9_Data>*);
inline void _1c0dd38c2_updateModelToGenericIns(jule::Any*, jule::Ptr<_1c0c98699_FnIns>*);
inline jule::Bool _1c0dd3b36_pushSubIdentFromExpr(jule::Any, jule::Ptr<_1c0c6030e_SubIdentTypeDecl>*);
inline jule::Str _1c0dd3e00_constoa(jule::Ptr<_2021e617b_Const>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0dd432e_evalEnumStatic(jule::Ptr<_1c0cab27d_Enum>*, jule::Ptr<_1c0caa711_EnumItem>*, jule::Ptr<_1c0c49480_Token>*);
inline jule::Ptr<_1c0c88700_StructLitExprModel> _1c0dd45e8_isLitBased(jule::Any*);
inline void _1c0dd48d4_makeImplicitDeref(jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0c49480_Token>);
inline void _1c44e6762_updateRefer(jule::Ptr<_1c0c9b878_ReferenceStack>, jule::Ptr<_1c0c98699_FnIns>*, jule::Ptr<_1c0c98699_FnIns>*);
inline void _1c0dd5066_makeVariadic(jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0dd7de3_TypeKind>);
inline jule::Bool _1c0dd5495_isVarCaptured(jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0cdeaec_scopeChecker>, jule::Ptr<_1c0d4dde2_Var>);
inline jule::Bool _1c0e0364a_kindUsesGenerics(jule::Ptr<_1c0dd7de3_TypeKind>*, jule::Slice<jule::Ptr<_1c0c6bb45_GenericDecl>>*);
inline jule::Bool _1c0e03a13_hasDirective(jule::Slice<jule::Ptr<_1c0c5dd57_Directive>>*, jule::Str);
inline jule::Bool _1c0e03ccc_canGetPtr(jule::Ptr<_1c0da69e9_Data>*);
inline jule::Bool _1c0e0411d_isValidForSptrType(jule::Ptr<_1c0dd7de3_TypeKind>*);
inline jule::Bool _1c0e043a4_isValidForRef(jule::Ptr<_1c0dd7de3_TypeKind>*);
inline jule::Bool _1c0e0466d_isBuiltinStrConvertable(jule::Ptr<_1c0dd7de3_TypeKind>*);
inline jule::Str _1c0e04937_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Ptr<_1c0de09bc_Prim> _1c0e04d11_buildPrimType(jule::Str);
inline void _1c0e053e9_applyImplicitCast(jule::Ptr<_1c0dd7de3_TypeKind>*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0c49480_Token>*);
inline jule::Bool _1c0e056b3_validTypeForXof(jule::Ptr<_1c0dd7de3_TypeKind>*);
inline __jule_tuple_x_1c0da1681_SymbolTable__jule_tuple_s_21b8c54de_Log _1c0e087c6_buildSymbols(jule::Ptr<_1c0c5ca26_Ast>*, jule::Trait<_1c0d0686c_Importer>*, jule::Ptr<_1c0ca283a_symbolBuilder>);
inline __jule_tuple_x_1c0d0c6a8_Package__jule_tuple_s_21b8c54de_Log _1c0e08c49_analyzePackage(jule::Slice<jule::Ptr<_1c0c5ca26_Ast>>*, jule::Trait<_1c0d0686c_Importer>*, jule::I64*);
inline __jule_tuple_x_1c0d0c6a8_Package__jule_tuple_s_21b8c54de_Log _1c0e09178_AnalyzePackage(jule::Slice<jule::Ptr<_1c0c5ca26_Ast>>, jule::Trait<_1c0d0686c_Importer>, jule::I64);
inline jule::Ptr<_1c0c98699_FnIns> _1c0ec8302_findBuiltinFunc(jule::Str*);
inline jule::Ptr<_1c0dd7101_TypeAlias> _1c0ec8610_primTypeAlias(jule::Ptr<_1c0dd7de3_TypeKind>*);
inline jule::Ptr<_1c0d4dde2_Var> _1c0ecbeb5_findBuiltinVar(jule::Str*);
inline jule::Ptr<_1c0dd7101_TypeAlias> _1c0ecc306_findBuiltinTypeAlias(jule::Str);
inline jule::Any _1c0ecc58c_findBuiltinDef(jule::Str*);
inline jule::Any _1c0ecc856_findBuiltinDefStdDebug(jule::Str*);
inline jule::Any _1c0eccb20_findBuiltinDefStdMem(jule::Str*);
inline jule::Any _1c0eccee9_findBuiltinDefStdComptime(jule::Str*);
inline jule::Any _1c0ecd23b_findBuiltinDefStdJuleIntegrated(jule::Str*);
inline jule::Any _1c0ecd5b0_findPackageBuiltinDef(jule::Str*, jule::Str*);
inline jule::Ptr<_1c0da69e9_Data> _1c0ecd934_builtinCallerError(jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0ecdd63_builtinCallerOut(jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*, jule::Ptr<_1c0da69e9_Data>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0ece292_builtinCallerOutln(jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*, jule::Ptr<_1c0da69e9_Data>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0ece6c1_builtinCallerNew(jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*, jule::Ptr<_1c0da69e9_Data>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0eceb00_builtinCallerPanic(jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*, jule::Ptr<_1c0da69e9_Data>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0ed0260_builtinCallerMake(jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*, jule::Ptr<_1c0da69e9_Data>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0ed057e_builtinCallerAppend(jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*, jule::Ptr<_1c0da69e9_Data>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0ed0a68_callerCopySlice(jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*, jule::Ptr<_1c0da69e9_Data>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0ed0e97_builtinCallerCopy(jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*, jule::Ptr<_1c0da69e9_Data>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0ed131b_callerLenSlice(jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0da69e9_Data>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0ed1690_callerLenMap(jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0da69e9_Data>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0ed1a14_callerLenArr(jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0da69e9_Data>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0ed1d88_callerLenStr(jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0da69e9_Data>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0ed220c_callerLenComptime(jule::Ptr<_1c0da69e9_Data>*, jule::I64);
inline jule::Ptr<_1c0da69e9_Data> _1c0ed263b_builtinCallerLen(jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*, jule::Ptr<_1c0da69e9_Data>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0ed29b0_callerCapSlice(jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0da69e9_Data>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0ed2dde_builtinCallerCap(jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*, jule::Ptr<_1c0da69e9_Data>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0ed33c8_callerDeleteMap(jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*, jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0da69e9_Data>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0ed3807_builtinCallerDelete(jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*, jule::Ptr<_1c0da69e9_Data>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0ed3c36_builtinCallerAssert(jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*, jule::Ptr<_1c0da69e9_Data>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0ed4165_builtinCallerStdComptimeTypeOf(jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*, jule::Ptr<_1c0da69e9_Data>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0ed47d6_builtinCallerStdComptimeValueOf(jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*, jule::Ptr<_1c0da69e9_Data>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0ed4c15_builtinCallerStdComptimeLine(jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*, jule::Ptr<_1c0da69e9_Data>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0ed5144_builtinCallerStdComptimeFile(jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*, jule::Ptr<_1c0da69e9_Data>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0ed5573_builtinCallerStdComptimeFiles(jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*, jule::Ptr<_1c0da69e9_Data>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0ed59a2_builtinCallerStdComptimeTypeAlias(jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*, jule::Ptr<_1c0da69e9_Data>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0ed5dd1_builtinCallerStdMemSizeOf(jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*, jule::Ptr<_1c0da69e9_Data>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0ed6310_builtinCallerStdMemAlignOf(jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*, jule::Ptr<_1c0da69e9_Data>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0ed673e_builtinCallerStdMemFree(jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*, jule::Ptr<_1c0da69e9_Data>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0ed6b6d_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*, jule::Ptr<_1c0da69e9_Data>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0ed709c_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*, jule::Ptr<_1c0da69e9_Data>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0ed74cb_builtinCallerStdDebugOut(jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*, jule::Ptr<_1c0da69e9_Data>*);
inline jule::Ptr<_1c0da69e9_Data> _1c0ed790a_builtinCallerStdDebugOutln(jule::Ptr<_1c0da8721_Eval>*, jule::Ptr<_1c0c67998_FnCallExpr>*, jule::Ptr<_1c0da69e9_Data>*);
inline jule::Ptr<_1c1905ec6_FileInfo> _1c194e7d3_ParseFile(jule::Ptr<_1c0c4ec16_File>);
inline __jule_tuple_x_1c0c5ca26_Ast__jule_tuple_s_21b8c54de_Log _1c194ed77_parseFileset(jule::Ptr<_1c0c4ec16_File>);
inline jule::Ptr<_1c0c6e95b_ScopeTree> _1c1950817_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1c1950b9c_isSt(jule::Ptr<_1c0c49480_Token>, jule::Ptr<_1c0c49480_Token>);
inline jule::Bool _1c1951021_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1c0c49480_Token>>*, jule::I64*);
inline __jule_tuple_int__jule_tuple_bool _1c19513d9_nextStPos(jule::Slice<jule::Ptr<_1c0c49480_Token>>*, jule::I64);
inline __jule_tuple_sx_1c0c49480_Token__jule_tuple_bool _1c195175d_skipSt(jule::I64*, jule::Slice<jule::Ptr<_1c0c49480_Token>>);
inline jule::Slice<jule::Ptr<_1c1951a8d_stmt>> _1c1951e45_splitStmts(jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Bool _1c196a59b_isTypeOp(jule::U64*);
inline jule::Bool _1c196a8a9_isTypeRange(jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Slice<jule::Ptr<_1c0c49480_Token>> _1c196ab73_getBlockExpr(jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline __jule_tuple_sx_1c0c49480_Token__jule_tuple_sx_1c0c49480_Token _1c196b03b_splitDelim(jule::Slice<jule::Ptr<_1c0c49480_Token>>*, jule::U64);
inline jule::I64 _1c196b305_findLowestPrecOp(jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Ptr<_1c0c65589_IdentExpr> _1c196b5be_buildIdentExpr(jule::Ptr<_1c0c49480_Token>*);
inline __jule_tuple_sx_1c0c49480_Token__jule_tuple_int _1c196b888_getRangeExprTokens(jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline jule::Bool _1c196c69c_checkAssignTokens(jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline _21b8c54de_Log _1c196d868_makeErr(jule::I64, jule::I64, jule::Ptr<_1c0c4ec16_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1c0c49480_Token>> _1c196dd96_range(jule::I64*, jule::U64, jule::U64, jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline __jule_tuple_sx_1c0c49480_Token__jule_tuple_sx_1c0c49480_Token _1c196e160_rangeLast(jule::Slice<jule::Ptr<_1c0c49480_Token>>*);
inline __jule_tuple_ssx_1c0c49480_Token__jule_tuple_s_21b8c54de_Log _1c196e616_parts(jule::Slice<jule::Ptr<_1c0c49480_Token>>*, jule::U64, jule::Bool);
inline jule::U64 _1c196e89c_getCloseOfBrace(jule::U64);
inline _21b8c54de_Log _1c196eccb_compilerErr(jule::Ptr<_1c0c49480_Token>*, jule::Str*, jule::Slice<jule::Any>);
inline void _1c1970172_pushSuggestion(_21b8c54de_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1c0c5e93a_TypeDecl> _1c1982052_buildVoidType(void);
inline __jule_tuple_bool__jule_tuple_bool _1c113299a_checkOs(jule::Str);
inline __jule_tuple_bool__jule_tuple_bool _1c114c3bb_checkArch(jule::Str);
inline jule::Bool _1c114c641_isPassFileAnnotation(jule::Str);
inline void _1c114d8c8_setOsVars(jule::Slice<jule::Str>*);
inline void _1c114db4d_setArchVars(jule::Slice<jule::Str>*);
inline void _1c114de39_initVars(jule::Slice<jule::Str>*, _1c114d5a9_CompileInfo*);
inline jule::Slice<jule::U8> _1c1986155_readBuff(jule::Str);
inline _21b8c54de_Log _1c1986463_flatCompilerErr(jule::Str);
inline void _1c198aba4_pushPasses(jule::Ptr<_1c0d0c6a8_Package>*, jule::Slice<jule::Str>*);
inline jule::Slice<jule::Str> _1c198b06c_getAllUniquePasses(jule::Ptr<_1c0d0c6a8_Package>*, jule::Slice<jule::Ptr<_1c0d09782_ImportInfo>>);
inline _1c114d5a9_CompileInfo _1c198b27b_buildCompileInfo(void);
inline void _1c1344706_EliminateDefines(jule::Ptr<_1c1989301_IR>*);
inline jule::Ptr<_1c0c5dd57_Directive> _1c1344abe_findDirective(jule::Slice<jule::Ptr<_1c0c5dd57_Directive>>*, jule::Str);
inline jule::Bool _1c1344e43_hasDirective(jule::Slice<jule::Ptr<_1c0c5dd57_Directive>>*, jule::Str);
inline jule::Bool _1c134530b_isTraitMethod(jule::Ptr<_1c0c83552_StructIns>*, jule::Ptr<_1c0c98699_FnIns>*);
inline void _1c1349310_eliminateDeadCodeOfScope(jule::Ptr<_1c0cd763e_Scope>);
inline void _1c1349585_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1c0c95795_Fn>>*);
inline void _1c13497b6_eliminateFunctionsScopePackage(jule::Ptr<_1c0d0c6a8_Package>*);
inline void _1c1349a6e_eliminateScopePackage(jule::Ptr<_1c0d0c6a8_Package>*);
inline void _1c1349c6c_EliminateScopes(jule::Ptr<_1c1989301_IR>*);
inline jule::Uintptr _1c0ed7a81_typeData(jule::Any*);
inline jule::Bool _1c0ed7e49_equalConst(jule::Ptr<_2021e617b_Const>, jule::Ptr<_2021e617b_Const>);
inline jule::Bool _1c0ed82bd_equalCasting(jule::Ptr<_1c0c89080_CastingExprModel>, jule::Ptr<_1c0c89080_CastingExprModel>);
inline jule::Bool _1c0ed8686_equalUnary(jule::Ptr<_1c0c87d2b_UnaryExprModel>, jule::Ptr<_1c0c87d2b_UnaryExprModel>);
inline jule::Bool _1c0ed8a0a_equalIndexing(jule::Ptr<_1c0c8a2b2_IndexingExprModel>, jule::Ptr<_1c0c8a2b2_IndexingExprModel>);
inline jule::Bool _1c0ed8d7e_equalBinary(jule::Ptr<_1c0c87952_BinaryExprModel>, jule::Ptr<_1c0c87952_BinaryExprModel>);
inline jule::Bool _1c0ed9203_equalModels(jule::Any, jule::Any);
inline void _1c0eded1e_possibleNilRemove(jule::Ptr<_1c0eddd40_nils>*, jule::Any);
inline jule::Bool _1c0ee01d7_isGuaranteedNonNilExpr(jule::Ptr<_1c0eddd40_nils>*, jule::Any);
inline jule::Bool _1c0ee04a1_isNilValidType(jule::Ptr<_1c0dd7de3_TypeKind>);
inline jule::Uintptr _1c0ee07e2_getNilVar(jule::Any);
inline jule::Bool _1c0ee672c_isStdPackage(jule::Str*, jule::Str);
inline jule::Bool _1c0ee6a3a_isConstantValidConditionalCase(jule::Ptr<_1c0cd7a5c_If>*);
inline jule::Bool _1c0ee6d04_isUnreachableExpr(jule::Any*);
inline jule::Bool _1c0ee7145_isConstantValidMatchCase(jule::Ptr<_1c0cdc37a_Case>*);
inline jule::Bool _1c0ee73cb_isUnreachableConditionalCase(jule::Ptr<_1c0cd7a5c_If>*);
inline jule::Bool _1c0ee7695_isUnreachableMatchCase(jule::Ptr<_1c0cdc37a_Case>*);
inline jule::Bool _1c0ee795e_isForwarded(jule::Ptr<_1c0cd763e_Scope>*);
inline __jule_tuple_bool__jule_tuple_u64 _1c10022d7_checkForBitShiftOpt(jule::Ptr<_1c0c87457_OperandExprModel>*, jule::Ptr<_1c0c87457_OperandExprModel>*);
inline jule::Bool _1c10026a0_areSameLvalueExprModel(jule::Any*, jule::Any*);
inline void _1c10046b3_possibleDynamicRemove(jule::Ptr<_1c1003629_dynamic>*, jule::Any);
inline jule::Bool _1c10049c1_isDynamicValidType(jule::Ptr<_1c0dd7de3_TypeKind>);
inline jule::Ptr<_1c0dd7de3_TypeKind> _1c1004e00_isTypeGuaranteedDynamicData(jule::Ptr<_1c1003629_dynamic>*, jule::Ptr<_1c0dd7de3_TypeKind>, jule::Any);
inline jule::Uintptr _1c1005241_getDynamicVar(jule::Any);
inline jule::Bool _1c10054c7_isAny(jule::Ptr<_1c0dd7de3_TypeKind>*);
inline jule::Bool _1c1008ed1_isValidBoundaryInfo(jule::Any);
inline jule::I64 _1c1009399_fitsMaxSize(jule::Slice<jule::Any>, jule::Any);
inline jule::Bool _1c100971d_fitsSize(jule::Any, jule::Any);
inline void _1c1009a4d_possibleBoundaryRemove(jule::Ptr<_1c1007e69_boundary>*, jule::Any);
inline jule::Bool _1c1009d17_isBoundaryRiskyType(jule::Ptr<_1c0dd7de3_TypeKind>);
inline jule::Bool _1c100a0d1_isBoundaryValidType(jule::Ptr<_1c0dd7de3_TypeKind>);
inline jule::Uintptr _1c100a39a_getBoundaryVar(jule::Any);
inline void _1c100d425_PushOptLevel(jule::I64);
inline void _1c1354282_detectEnabled(void);
inline void _1c0e5aa59_Throw(jule::Str);
inline jule::U64 _1c25435b3_unix(void);
inline jule::Bool _1c2472c84_isCopyOptimizable(jule::Ptr<_1c0da69e9_Data>*);
inline jule::Bool _1c247314c_isIterCopyOptimizable(jule::Ptr<_1c0da69e9_Data>*, jule::Ptr<_1c0d4dde2_Var>*);
inline jule::Bool _1c247357b_captureVarHandling(jule::Ptr<_1c254b467_ObjectCoder>*, jule::Ptr<_1c0c8a768_AnonFnExprModel>*, jule::Ptr<_1c0d4dde2_Var>*);
inline jule::Str _1c24842b2_decomposeCommonEsq(jule::U8);
inline jule::Str _1c24845c0_sbtoa(jule::U8);
inline void _1c24848ab_cstrBytes(_234c76a64_StrBuilder*, jule::Str);
inline void _1c2484bdb_cstrLit(_234c76a64_StrBuilder*, jule::Str);
inline void _1c2485082_ftoa(_234c76a64_StrBuilder*, jule::F64, jule::I64);
inline void _1c248536d_itoa(_234c76a64_StrBuilder*, jule::I64);
inline void _1c2485659_utoa(_234c76a64_StrBuilder*, jule::U64);
inline jule::Bool _1c2485a33_isForwarded(jule::Ptr<_1c0cd763e_Scope>*);
inline jule::Bool _1c2485c75_isExprComesFromBind(jule::Ptr<_1c0da69e9_Data>*);
inline jule::Bool _1c248603e_isAny(jule::Ptr<_1c0dd7de3_TypeKind>*);
inline void _1c25596c8_iterFiles(jule::Ptr<_1c0d0c6a8_Package>*, jule::Fn<void,jule::Ptr<_1c0da1681_SymbolTable>*>);
inline jule::Slice<jule::U8> _1c25599d6_concatAllParts(jule::Slice<jule::Ptr<_1c0c49480_Token>>);
inline jule::Bool _1c2559d5a_containsTraitMethod(jule::Ptr<_1c0ca8a72_Trait>*, jule::Str*);
inline void _1c255a18a_pushMethodsFromInherit(jule::Ptr<_1c0ca8a72_Trait>*, jule::Ptr<_1c0ca8a72_Trait>*);
inline void _1c255a476_pushMethodsFromInherits(jule::Ptr<_1c0ca8a72_Trait>*, jule::Ptr<_1c0ca8a72_Trait>*);
inline jule::Bool _1c255a740_isOpMethod(jule::Ptr<_1c0c95795_Fn>*);
inline jule::Bool _1c255aa09_isHeadDecl(jule::Ptr<_1c0c95795_Fn>*);
inline jule::Ptr<_1c0c5dd57_Directive> _1c2569c5a_findDirective(jule::Slice<jule::Ptr<_1c0c5dd57_Directive>>*, jule::Str);
inline jule::Bool _1c256a123_hasDirective(jule::Slice<jule::Ptr<_1c0c5dd57_Directive>>*, jule::Str);
inline jule::Bool _1c256a3dc_shouldInitialized(jule::Ptr<_1c0dd7de3_TypeKind>*);
inline void _21b98db5c_printErrorMessage(jule::Str);
inline void _21b98ddd2_help(jule::Slice<jule::Str>*);
inline void _21b98e113_version(jule::Slice<jule::Str>*);
inline void _21b98e322_toolDistos(void);
inline void _21b98e487_toolDistarch(void);
inline void _21b98e685_tool(jule::Slice<jule::Str>*);
inline void _21b98e8b6_julenv(jule::Slice<jule::Str>*);
inline void _21b98ec07_mod(jule::Slice<jule::Str>*);
inline jule::Bool _21b98ee49_processCommand(jule::Slice<jule::Str>*);
inline void _21b9900e2_showInfo(void);
void entry_point(void);
inline void _21b990a71_enableVtp(void);
inline void _21b990c3b_init(void);
inline void _1c1cd9a08_init(void);
inline jule::Ptr<_234b0aa5d_File> _1c1cd9cc2_openOutput(jule::Str*);
inline void _1c1cd9e6a_clearObjects(void);
inline void _1c1cda278_compileIr(jule::Str, jule::Str);
inline jule::Bool _1c1cda542_isCppSourceFile(jule::Str);
inline void _1c1cda773_pushCompCmdClang(_234c76a64_StrBuilder*);
inline void _1c1cda9a4_pushCompCmdGcc(_234c76a64_StrBuilder*);
inline __jule_tuple_str__jule_tuple_str _1c1cdae38_genCompileCmd(jule::Str, jule::Ptr<_1c1989301_IR>*);
inline jule::Str _1c1cdb0c0_getCompilePath(void);
inline void _1c1cdb301_applyTargetIndependentOptimizations(jule::Ptr<_1c1989301_IR>*);
inline void _1c1cdb499_checkCompilerFlag(void);
inline void _1c1cdb6a8_checkTargetArch(jule::Str);
inline void _1c1cdb8d9_checkTargetOs(jule::Str);
inline void _1c1cdbb1a_checkTargetFlag(jule::Str*);
inline void _1c1cdbd4b_checkOptFlag(jule::Str*);
inline void _1c1cdc214_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1c1cdc3ce_checkFlags(jule::Slice<jule::Str>*);
inline void _1c1cdc5dd_setupSemaFlags(jule::I64*);
inline jule::Ptr<_1c1989301_IR> _1c1cdc8a7_buildIr(jule::Slice<jule::Str>*);
inline void _1c1cdcad8_compileCommand(jule::Slice<jule::Str>*);


struct _1c0cb08c0_comptimeRangeKindMptrData {
	void(*_1c0cb00b7_ready)(jule::Trait<_1c0cb08c0_comptimeRangeKind>, jule::Ptr<_1c0d4dde2_Var>*, jule::Ptr<_1c0d4dde2_Var>*);
	void(*_1c0cb04d5_step)(jule::Trait<_1c0cb08c0_comptimeRangeKind>, jule::I64, jule::Ptr<_1c0d4dde2_Var>*, jule::Ptr<_1c0d4dde2_Var>*);
	jule::I64(*_1c0cb076b_len)(jule::Trait<_1c0cb08c0_comptimeRangeKind>);
};

struct _1c0d0686c_ImporterMptrData {
	void(*_1c0d0564b_SetModPath)(jule::Trait<_1c0d0686c_Importer>, jule::Str);
	jule::Str(*_1c0d058d2_GetModPath)(jule::Trait<_1c0d0686c_Importer>);
	jule::Str(*_1c0d05c23_ModById)(jule::Trait<_1c0d0686c_Importer>, jule::I64);
	jule::Ptr<_1c0d09782_ImportInfo>(*_1c0d06064_GetImport)(jule::Trait<_1c0d0686c_Importer>, jule::Str);
	__jule_tuple_sx_1c0c5ca26_Ast__jule_tuple_s_21b8c54de_Log(*_1c0d06460_ImportPackage)(jule::Trait<_1c0d0686c_Importer>, jule::Str, jule::Bool);
	void(*_1c0d06718_Imported)(jule::Trait<_1c0d0686c_Importer>, jule::Ptr<_1c0d09782_ImportInfo>);
};

struct _1c0dd793c_KindMptrData {
	jule::Str(*_1c0dd7497_Str)(jule::Trait<_1c0dd793c_Kind>);
	jule::Bool(*_1c0dd77d8_Equal)(jule::Trait<_1c0dd793c_Kind>, jule::Ptr<_1c0dd7de3_TypeKind>);
};

struct _1c0e079d4_LookupMptrData {
	jule::Ptr<_1c0d09782_ImportInfo>(*_1c0e05cbd_SelectPackage)(jule::Trait<_1c0e079d4_Lookup>, jule::Fn<jule::Bool,jule::Ptr<_1c0d09782_ImportInfo>>);
	jule::Ptr<_1c0d4dde2_Var>(*_1c0e061b9_FindVar)(jule::Trait<_1c0e079d4_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1c0dd7101_TypeAlias>(*_1c0e065b5_FindTypeAlias)(jule::Trait<_1c0e079d4_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1c0c807c4_Struct>(*_1c0e069b1_FindStruct)(jule::Trait<_1c0e079d4_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1c0c95795_Fn>(*_1c0e06dac_FindFn)(jule::Trait<_1c0e079d4_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1c0ca8a72_Trait>(*_1c0e071ed_FindTrait)(jule::Trait<_1c0e079d4_Lookup>, jule::Str);
	jule::Ptr<_1c0cab27d_Enum>(*_1c0e0753e_FindEnum)(jule::Trait<_1c0e079d4_Lookup>, jule::Str);
	jule::Ptr<_1c0cac988_TypeEnum>(*_1c0e07880_FindTypeEnum)(jule::Trait<_1c0e079d4_Lookup>, jule::Str);
};

struct _1c1cd266b_CommonFlagMptrData {
	jule::Str(*_1c1cd1cec_Name)(jule::Trait<_1c1cd266b_CommonFlag>);
	jule::I32(*_1c1cd2083_Short)(jule::Trait<_1c1cd266b_CommonFlag>);
	jule::Str(*_1c1cd2319_What)(jule::Trait<_1c1cd266b_CommonFlag>);
	void(*_1c1cd2517_Reset)(jule::Trait<_1c1cd266b_CommonFlag>);
};



inline void _1c0cb00b7_ready_comptimeRangeKind_0(jule::Trait<_1c0cb08c0_comptimeRangeKind> _self_, jule::Ptr<_1c0d4dde2_Var>* _2429_keyA, jule::Ptr<_1c0d4dde2_Var>* _2446_keyB) {
	_1c0cb3dac_ready(_self_.safe_ptr<_1c0cb3274_comptimeStructFields>(), _2429_keyA, _2446_keyB);
}
inline void _1c0cb04d5_step_comptimeRangeKind_0(jule::Trait<_1c0cb08c0_comptimeRangeKind> _self_, jule::I64 _2523_i, jule::Ptr<_1c0d4dde2_Var>* _2536_keyA, jule::Ptr<_1c0d4dde2_Var>* _2553_keyB) {
	_1c0cb42ca_step(_self_.safe_ptr<_1c0cb3274_comptimeStructFields>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 _1c0cb076b_len_comptimeRangeKind_0(jule::Trait<_1c0cb08c0_comptimeRangeKind> _self_) {
	return _1c0cb4561_len(_self_.safe_ptr<_1c0cb3274_comptimeStructFields>());
}
inline void _1c0cb00b7_ready_comptimeRangeKind_1(jule::Trait<_1c0cb08c0_comptimeRangeKind> _self_, jule::Ptr<_1c0d4dde2_Var>* _2429_keyA, jule::Ptr<_1c0d4dde2_Var>* _2446_keyB) {
	_1c0cb7168_ready(_self_.safe_ptr<_1c0cb6530_comptimeStatics>(), _2429_keyA, _2446_keyB);
}
inline void _1c0cb04d5_step_comptimeRangeKind_1(jule::Trait<_1c0cb08c0_comptimeRangeKind> _self_, jule::I64 _2523_i, jule::Ptr<_1c0d4dde2_Var>* _2536_keyA, jule::Ptr<_1c0d4dde2_Var>* _2553_keyB) {
	_1c0cb7586_step(_self_.safe_ptr<_1c0cb6530_comptimeStatics>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 _1c0cb076b_len_comptimeRangeKind_1(jule::Trait<_1c0cb08c0_comptimeRangeKind> _self_) {
	return _1c0cb781c_len(_self_.safe_ptr<_1c0cb6530_comptimeStatics>());
}
inline void _1c0cb00b7_ready_comptimeRangeKind_2(jule::Trait<_1c0cb08c0_comptimeRangeKind> _self_, jule::Ptr<_1c0d4dde2_Var>* _2429_keyA, jule::Ptr<_1c0d4dde2_Var>* _2446_keyB) {
	_1c0cb9b0a_ready(_self_.safe_ptr<_1c0cb8ec2_comptimeEnumFields>(), _2429_keyA, _2446_keyB);
}
inline void _1c0cb04d5_step_comptimeRangeKind_2(jule::Trait<_1c0cb08c0_comptimeRangeKind> _self_, jule::I64 _2523_i, jule::Ptr<_1c0d4dde2_Var>* _2536_keyA, jule::Ptr<_1c0d4dde2_Var>* _2553_keyB) {
	_1c0cba028_step(_self_.safe_ptr<_1c0cb8ec2_comptimeEnumFields>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 _1c0cb076b_len_comptimeRangeKind_2(jule::Trait<_1c0cb08c0_comptimeRangeKind> _self_) {
	return _1c0cba2ae_len(_self_.safe_ptr<_1c0cb8ec2_comptimeEnumFields>());
}
inline void _1c0cb00b7_ready_comptimeRangeKind_3(jule::Trait<_1c0cb08c0_comptimeRangeKind> _self_, jule::Ptr<_1c0d4dde2_Var>* _2429_keyA, jule::Ptr<_1c0d4dde2_Var>* _2446_keyB) {
	_1c0cbd35b_ready(_self_.safe_ptr<_1c0cbc756_comptimeParams>(), _2429_keyA, _2446_keyB);
}
inline void _1c0cb04d5_step_comptimeRangeKind_3(jule::Trait<_1c0cb08c0_comptimeRangeKind> _self_, jule::I64 _2523_i, jule::Ptr<_1c0d4dde2_Var>* _2536_keyA, jule::Ptr<_1c0d4dde2_Var>* _2553_keyB) {
	_1c0cbd779_step(_self_.safe_ptr<_1c0cbc756_comptimeParams>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 _1c0cb076b_len_comptimeRangeKind_3(jule::Trait<_1c0cb08c0_comptimeRangeKind> _self_) {
	return _1c0cbda10_len(_self_.safe_ptr<_1c0cbc756_comptimeParams>());
}
inline void _1c0cb00b7_ready_comptimeRangeKind_4(jule::Trait<_1c0cb08c0_comptimeRangeKind> _self_, jule::Ptr<_1c0d4dde2_Var>* _2429_keyA, jule::Ptr<_1c0d4dde2_Var>* _2446_keyB) {
	_1c0cbe956_ready(_self_.safe_ptr<_1c0cbdd1d_comptimeTypeInfos>(), _2429_keyA, _2446_keyB);
}
inline void _1c0cb04d5_step_comptimeRangeKind_4(jule::Trait<_1c0cb08c0_comptimeRangeKind> _self_, jule::I64 _2523_i, jule::Ptr<_1c0d4dde2_Var>* _2536_keyA, jule::Ptr<_1c0d4dde2_Var>* _2553_keyB) {
	_1c0cbed74_step(_self_.safe_ptr<_1c0cbdd1d_comptimeTypeInfos>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 _1c0cb076b_len_comptimeRangeKind_4(jule::Trait<_1c0cb08c0_comptimeRangeKind> _self_) {
	return _1c0cc010a_len(_self_.safe_ptr<_1c0cbdd1d_comptimeTypeInfos>());
}
inline void _1c0cb00b7_ready_comptimeRangeKind_5(jule::Trait<_1c0cb08c0_comptimeRangeKind> _self_, jule::Ptr<_1c0d4dde2_Var>* _2429_keyA, jule::Ptr<_1c0d4dde2_Var>* _2446_keyB) {
	_1c0cc9db2_ready(_self_.safe_ptr<_1c0cc9279_comptimeFiles>(), _2429_keyA, _2446_keyB);
}
inline void _1c0cb04d5_step_comptimeRangeKind_5(jule::Trait<_1c0cb08c0_comptimeRangeKind> _self_, jule::I64 _2523_i, jule::Ptr<_1c0d4dde2_Var>* _2536_keyA, jule::Ptr<_1c0d4dde2_Var>* _2553_keyB) {
	_1c0cca2d0_step(_self_.safe_ptr<_1c0cc9279_comptimeFiles>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 _1c0cb076b_len_comptimeRangeKind_5(jule::Trait<_1c0cb08c0_comptimeRangeKind> _self_) {
	return _1c0cca566_len(_self_.safe_ptr<_1c0cc9279_comptimeFiles>());
}
inline void _1c0d0564b_SetModPath_Importer_0(jule::Trait<_1c0d0686c_Importer> _self_, jule::Str _1729_path) {
	_1c198751e_SetModPath(_self_.safe_ptr<_1c198694c_JuleImporter>(), _1729_path);
}
inline jule::Str _1c0d058d2_GetModPath_Importer_0(jule::Trait<_1c0d0686c_Importer> _self_) {
	return _1c19877a5_GetModPath(_self_.safe_ptr<_1c198694c_JuleImporter>());
}
inline jule::Str _1c0d05c23_ModById_Importer_0(jule::Trait<_1c0d0686c_Importer> _self_, jule::I64 _2522_id) {
	return _1c1987ae6_ModById(_self_.safe_ptr<_1c198694c_JuleImporter>(), _2522_id);
}
inline jule::Ptr<_1c0d09782_ImportInfo> _1c0d06064_GetImport_Importer_0(jule::Trait<_1c0d0686c_Importer> _self_, jule::Str _3128_path) {
	return _1c1987e37_GetImport(_self_.safe_ptr<_1c198694c_JuleImporter>(), _3128_path);
}
inline __jule_tuple_sx_1c0c5ca26_Ast__jule_tuple_s_21b8c54de_Log _1c0d06460_ImportPackage_Importer_0(jule::Trait<_1c0d0686c_Importer> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _1c1988333_ImportPackage(_self_.safe_ptr<_1c198694c_JuleImporter>(), _3732_path, _3743_update_mod);
}
inline void _1c0d06718_Imported_Importer_0(jule::Trait<_1c0d0686c_Importer> _self_, jule::Ptr<_1c0d09782_ImportInfo> _4131__0) {
	_1c19885db_Imported(_self_.safe_ptr<_1c198694c_JuleImporter>(), _4131__0);
}
inline jule::Str _1c0dd7497_Str_Kind_0(jule::Trait<_1c0dd793c_Kind> _self_) {
	return _1c0c838c6_Str(_self_.safe_ptr<_1c0c83552_StructIns>());
}
inline jule::Bool _1c0dd77d8_Equal_Kind_0(jule::Trait<_1c0dd793c_Kind> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _5621_other) {
	return _1c0c83c17_Equal(_self_.data.as<_1c0c83552_StructIns>(), _5621_other);
}
inline jule::Str _1c0dd7497_Str_Kind_1(jule::Trait<_1c0dd793c_Kind> _self_) {
	return _1c0c989da_Str(_self_.safe_ptr<_1c0c98699_FnIns>());
}
inline jule::Bool _1c0dd77d8_Equal_Kind_1(jule::Trait<_1c0dd793c_Kind> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _5621_other) {
	return _1c0c98d2b_Equal(_self_.data.as<_1c0c98699_FnIns>(), _5621_other);
}
inline jule::Str _1c0dd7497_Str_Kind_2(jule::Trait<_1c0dd793c_Kind> _self_) {
	return _1c0ca8e3a_Str(_self_.safe_ptr<_1c0ca8a72_Trait>());
}
inline jule::Bool _1c0dd77d8_Equal_Kind_2(jule::Trait<_1c0dd793c_Kind> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _5621_other) {
	return _1c0ca927b_Equal(_self_.data.as<_1c0ca8a72_Trait>(), _5621_other);
}
inline jule::Str _1c0dd7497_Str_Kind_3(jule::Trait<_1c0dd793c_Kind> _self_) {
	return _1c0cab602_Str(_self_.safe_ptr<_1c0cab27d_Enum>());
}
inline jule::Bool _1c0dd77d8_Equal_Kind_3(jule::Trait<_1c0dd793c_Kind> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _5621_other) {
	return _1c0cab943_Equal(_self_.data.as<_1c0cab27d_Enum>(), _5621_other);
}
inline jule::Str _1c0dd7497_Str_Kind_4(jule::Trait<_1c0dd793c_Kind> _self_) {
	return _1c0caccc9_Str(_self_.safe_ptr<_1c0cac988_TypeEnum>());
}
inline jule::Bool _1c0dd77d8_Equal_Kind_4(jule::Trait<_1c0dd793c_Kind> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _5621_other) {
	return _1c0cad11a_Equal(_self_.data.as<_1c0cac988_TypeEnum>(), _5621_other);
}
inline jule::Str _1c0dd7497_Str_Kind_5(jule::Trait<_1c0dd793c_Kind> _self_) {
	return _1c0cb0e64_Str(_self_.safe_ptr<_1c0cb0ae0_comptimeRange>());
}
inline jule::Bool _1c0dd77d8_Equal_Kind_5(jule::Trait<_1c0dd793c_Kind> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _5621_other) {
	return _1c0cb12a5_Equal(_self_.data.as<_1c0cb0ae0_comptimeRange>(), _5621_other);
}
inline jule::Str _1c0dd7497_Str_Kind_6(jule::Trait<_1c0dd793c_Kind> _self_) {
	return _1c0cb197b_Str(_self_.safe_ptr<_1c0cb15b3_comptimeStructField>());
}
inline jule::Bool _1c0dd77d8_Equal_Kind_6(jule::Trait<_1c0dd793c_Kind> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _5621_other) {
	return _1c0cb1cbc_Equal(_self_.data.as<_1c0cb15b3_comptimeStructField>(), _5621_other);
}
inline jule::Str _1c0dd7497_Str_Kind_7(jule::Trait<_1c0dd793c_Kind> _self_) {
	return _1c0cb35e8_Str(_self_.safe_ptr<_1c0cb3274_comptimeStructFields>());
}
inline jule::Bool _1c0dd77d8_Equal_Kind_7(jule::Trait<_1c0dd793c_Kind> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _5621_other) {
	return _1c0cb3939_Equal(_self_.data.as<_1c0cb3274_comptimeStructFields>(), _5621_other);
}
inline jule::Str _1c0dd7497_Str_Kind_8(jule::Trait<_1c0dd793c_Kind> _self_) {
	return _1c0cb4be3_Str(_self_.safe_ptr<_1c0cb486e_comptimeStatic>());
}
inline jule::Bool _1c0dd77d8_Equal_Kind_8(jule::Trait<_1c0dd793c_Kind> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _5621_other) {
	return _1c0cb5034_Equal(_self_.data.as<_1c0cb486e_comptimeStatic>(), _5621_other);
}
inline jule::Str _1c0dd7497_Str_Kind_9(jule::Trait<_1c0dd793c_Kind> _self_) {
	return _1c0cb68a4_Str(_self_.safe_ptr<_1c0cb6530_comptimeStatics>());
}
inline jule::Bool _1c0dd77d8_Equal_Kind_9(jule::Trait<_1c0dd793c_Kind> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _5621_other) {
	return _1c0cb6be5_Equal(_self_.data.as<_1c0cb6530_comptimeStatics>(), _5621_other);
}
inline jule::Str _1c0dd7497_Str_Kind_10(jule::Trait<_1c0dd793c_Kind> _self_) {
	return _1c0cb80ae_Str(_self_.safe_ptr<_1c0cb7b2a_comptimeEnumField>());
}
inline jule::Bool _1c0dd77d8_Equal_Kind_10(jule::Trait<_1c0dd793c_Kind> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _5621_other) {
	return _1c0cb8400_Equal(_self_.data.as<_1c0cb7b2a_comptimeEnumField>(), _5621_other);
}
inline jule::Str _1c0dd7497_Str_Kind_11(jule::Trait<_1c0dd793c_Kind> _self_) {
	return _1c0cb9346_Str(_self_.safe_ptr<_1c0cb8ec2_comptimeEnumFields>());
}
inline jule::Bool _1c0dd77d8_Equal_Kind_11(jule::Trait<_1c0dd793c_Kind> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _5621_other) {
	return _1c0cb9687_Equal(_self_.data.as<_1c0cb8ec2_comptimeEnumFields>(), _5621_other);
}
inline jule::Str _1c0dd7497_Str_Kind_12(jule::Trait<_1c0dd793c_Kind> _self_) {
	return _1c0cba941_Str(_self_.safe_ptr<_1c0cba5bc_comptimeParam>());
}
inline jule::Bool _1c0dd77d8_Equal_Kind_12(jule::Trait<_1c0dd793c_Kind> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _5621_other) {
	return _1c0cbac82_Equal(_self_.data.as<_1c0cba5bc_comptimeParam>(), _5621_other);
}
inline jule::Str _1c0dd7497_Str_Kind_13(jule::Trait<_1c0dd793c_Kind> _self_) {
	return _1c0cbca97_Str(_self_.safe_ptr<_1c0cbc756_comptimeParams>());
}
inline jule::Bool _1c0dd77d8_Equal_Kind_13(jule::Trait<_1c0dd793c_Kind> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _5621_other) {
	return _1c0cbcdd8_Equal(_self_.data.as<_1c0cbc756_comptimeParams>(), _5621_other);
}
inline jule::Str _1c0dd7497_Str_Kind_14(jule::Trait<_1c0dd793c_Kind> _self_) {
	return _1c0cbe192_Str(_self_.safe_ptr<_1c0cbdd1d_comptimeTypeInfos>());
}
inline jule::Bool _1c0dd77d8_Equal_Kind_14(jule::Trait<_1c0dd793c_Kind> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _5621_other) {
	return _1c0cbe4d3_Equal(_self_.data.as<_1c0cbdd1d_comptimeTypeInfos>(), _5621_other);
}
inline jule::Str _1c0dd7497_Str_Kind_15(jule::Trait<_1c0dd793c_Kind> _self_) {
	return _1c0cc078c_Str(_self_.safe_ptr<_1c0cc0418_comptimeTypeInfo>());
}
inline jule::Bool _1c0dd77d8_Equal_Kind_15(jule::Trait<_1c0dd793c_Kind> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _5621_other) {
	return _1c0cc0acd_Equal(_self_.data.as<_1c0cc0418_comptimeTypeInfo>(), _5621_other);
}
inline jule::Str _1c0dd7497_Str_Kind_16(jule::Trait<_1c0dd793c_Kind> _self_) {
	return _1c0cc6c9e_Str(_self_.safe_ptr<_1c0cc692a_comptimeValue>());
}
inline jule::Bool _1c0dd77d8_Equal_Kind_16(jule::Trait<_1c0dd793c_Kind> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _5621_other) {
	return _1c0cc70e0_Equal(_self_.data.as<_1c0cc692a_comptimeValue>(), _5621_other);
}
inline jule::Str _1c0dd7497_Str_Kind_17(jule::Trait<_1c0dd793c_Kind> _self_) {
	return _1c0cc95ed_Str(_self_.safe_ptr<_1c0cc9279_comptimeFiles>());
}
inline jule::Bool _1c0dd77d8_Equal_Kind_17(jule::Trait<_1c0dd793c_Kind> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _5621_other) {
	return _1c0cc993e_Equal(_self_.data.as<_1c0cc9279_comptimeFiles>(), _5621_other);
}
inline jule::Str _1c0dd7497_Str_Kind_18(jule::Trait<_1c0dd793c_Kind> _self_) {
	return _1c0ccae29_Str(_self_.safe_ptr<_1c0cca874_comptimeFile>());
}
inline jule::Bool _1c0dd77d8_Equal_Kind_18(jule::Trait<_1c0dd793c_Kind> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _5621_other) {
	return _1c0ccb26a_Equal(_self_.data.as<_1c0cca874_comptimeFile>(), _5621_other);
}
inline jule::Str _1c0dd7497_Str_Kind_19(jule::Trait<_1c0dd793c_Kind> _self_) {
	return _1c0dd82ab_Str(_self_.safe_ptr<_1c0dd7de3_TypeKind>());
}
inline jule::Bool _1c0dd77d8_Equal_Kind_19(jule::Trait<_1c0dd793c_Kind> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _5621_other) {
	return _1c0dd85ec_Equal(_self_.data.as<_1c0dd7de3_TypeKind>(), _5621_other);
}
inline jule::Str _1c0dd7497_Str_Kind_20(jule::Trait<_1c0dd793c_Kind> _self_) {
	return _1c0de0d0d_Str(_self_.safe_ptr<_1c0de09bc_Prim>());
}
inline jule::Bool _1c0dd77d8_Equal_Kind_20(jule::Trait<_1c0dd793c_Kind> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _5621_other) {
	return _1c0de114e_Equal(_self_.data.as<_1c0de09bc_Prim>(), _5621_other);
}
inline jule::Str _1c0dd7497_Str_Kind_21(jule::Trait<_1c0dd793c_Kind> _self_) {
	return _1c0de486c_Str(_self_.safe_ptr<_1c0de44e8_Sptr>());
}
inline jule::Bool _1c0dd77d8_Equal_Kind_21(jule::Trait<_1c0dd793c_Kind> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _5621_other) {
	return _1c0de4bad_Equal(_self_.data.as<_1c0de44e8_Sptr>(), _5621_other);
}
inline jule::Str _1c0dd7497_Str_Kind_22(jule::Trait<_1c0dd793c_Kind> _self_) {
	return _1c0de5450_Str(_self_.safe_ptr<_1c0de4ebb_Slc>());
}
inline jule::Bool _1c0dd77d8_Equal_Kind_22(jule::Trait<_1c0dd793c_Kind> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _5621_other) {
	return _1c0de5791_Equal(_self_.data.as<_1c0de4ebb_Slc>(), _5621_other);
}
inline jule::Str _1c0dd7497_Str_Kind_23(jule::Trait<_1c0dd793c_Kind> _self_) {
	return _1c0de5e34_Str(_self_.safe_ptr<_1c0de5ab0_Tuple>());
}
inline jule::Bool _1c0dd77d8_Equal_Kind_23(jule::Trait<_1c0dd793c_Kind> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _5621_other) {
	return _1c0de6275_Equal(_self_.data.as<_1c0de5ab0_Tuple>(), _5621_other);
}
inline jule::Str _1c0dd7497_Str_Kind_24(jule::Trait<_1c0dd793c_Kind> _self_) {
	return _1c0de69d4_Str(_self_.safe_ptr<_1c0de6660_Map>());
}
inline jule::Bool _1c0dd77d8_Equal_Kind_24(jule::Trait<_1c0dd793c_Kind> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _5621_other) {
	return _1c0de6d25_Equal(_self_.data.as<_1c0de6660_Map>(), _5621_other);
}
inline jule::Str _1c0dd7497_Str_Kind_25(jule::Trait<_1c0dd793c_Kind> _self_) {
	return _1c0de7661_Str(_self_.safe_ptr<_1c0de72dc_Arr>());
}
inline jule::Bool _1c0dd77d8_Equal_Kind_25(jule::Trait<_1c0dd793c_Kind> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _5621_other) {
	return _1c0de79a2_Equal(_self_.data.as<_1c0de72dc_Arr>(), _5621_other);
}
inline jule::Str _1c0dd7497_Str_Kind_26(jule::Trait<_1c0dd793c_Kind> _self_) {
	return _1c0de8134_Str(_self_.safe_ptr<_1c0de7cb0_Ptr>());
}
inline jule::Bool _1c0dd77d8_Equal_Kind_26(jule::Trait<_1c0dd793c_Kind> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _5621_other) {
	return _1c0de8475_Equal(_self_.data.as<_1c0de7cb0_Ptr>(), _5621_other);
}
inline jule::Str _1c0dd7497_Str_Kind_27(jule::Trait<_1c0dd793c_Kind> _self_) {
	return _1c255be7d_Str(_self_.safe_ptr<_1c255bad7_customType>());
}
inline jule::Bool _1c0dd77d8_Equal_Kind_27(jule::Trait<_1c0dd793c_Kind> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _5621_other) {
	return _1c255c2be_Equal(_self_.data.as<_1c255bad7_customType>(), _5621_other);
}
inline jule::Ptr<_1c0d09782_ImportInfo> _1c0e05cbd_SelectPackage_Lookup_0(jule::Trait<_1c0e079d4_Lookup> _self_, jule::Fn<jule::Bool,jule::Ptr<_1c0d09782_ImportInfo>> _932_selector) {
	return _1c0ce0092_SelectPackage(_self_.safe_ptr<_1c0cdeaec_scopeChecker>(), _932_selector);
}
inline jule::Ptr<_1c0d4dde2_Var> _1c0e061b9_FindVar_Lookup_0(jule::Trait<_1c0e079d4_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1c0ce048d_FindVar(_self_.safe_ptr<_1c0cdeaec_scopeChecker>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1c0dd7101_TypeAlias> _1c0e065b5_FindTypeAlias_Lookup_0(jule::Trait<_1c0e079d4_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1c0ce0889_FindTypeAlias(_self_.safe_ptr<_1c0cdeaec_scopeChecker>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1c0c807c4_Struct> _1c0e069b1_FindStruct_Lookup_0(jule::Trait<_1c0e079d4_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1c0ce0c85_FindStruct(_self_.safe_ptr<_1c0cdeaec_scopeChecker>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1c0c95795_Fn> _1c0e06dac_FindFn_Lookup_0(jule::Trait<_1c0e079d4_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1c0ce1181_FindFn(_self_.safe_ptr<_1c0cdeaec_scopeChecker>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1c0ca8a72_Trait> _1c0e071ed_FindTrait_Lookup_0(jule::Trait<_1c0e079d4_Lookup> _self_, jule::Str _2928_ident) {
	return _1c0ce14c2_FindTrait(_self_.safe_ptr<_1c0cdeaec_scopeChecker>(), _2928_ident);
}
inline jule::Ptr<_1c0cab27d_Enum> _1c0e0753e_FindEnum_Lookup_0(jule::Trait<_1c0e079d4_Lookup> _self_, jule::Str _3327_ident) {
	return _1c0ce1813_FindEnum(_self_.safe_ptr<_1c0cdeaec_scopeChecker>(), _3327_ident);
}
inline jule::Ptr<_1c0cac988_TypeEnum> _1c0e07880_FindTypeEnum_Lookup_0(jule::Trait<_1c0e079d4_Lookup> _self_, jule::Str _3731_ident) {
	return _1c0ce1b54_FindTypeEnum(_self_.safe_ptr<_1c0cdeaec_scopeChecker>(), _3731_ident);
}
inline jule::Ptr<_1c0d09782_ImportInfo> _1c0e05cbd_SelectPackage_Lookup_1(jule::Trait<_1c0e079d4_Lookup> _self_, jule::Fn<jule::Bool,jule::Ptr<_1c0d09782_ImportInfo>> _932_selector) {
	return _1c0d09c6b_SelectPackage(_self_.safe_ptr<_1c0d09782_ImportInfo>(), _932_selector);
}
inline jule::Ptr<_1c0d4dde2_Var> _1c0e061b9_FindVar_Lookup_1(jule::Trait<_1c0e079d4_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1c0d0a167_FindVar(_self_.safe_ptr<_1c0d09782_ImportInfo>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1c0dd7101_TypeAlias> _1c0e065b5_FindTypeAlias_Lookup_1(jule::Trait<_1c0e079d4_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1c0d0a563_FindTypeAlias(_self_.safe_ptr<_1c0d09782_ImportInfo>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1c0c807c4_Struct> _1c0e069b1_FindStruct_Lookup_1(jule::Trait<_1c0e079d4_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1c0d0a95e_FindStruct(_self_.safe_ptr<_1c0d09782_ImportInfo>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1c0c95795_Fn> _1c0e06dac_FindFn_Lookup_1(jule::Trait<_1c0e079d4_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1c0d0ad5a_FindFn(_self_.safe_ptr<_1c0d09782_ImportInfo>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1c0ca8a72_Trait> _1c0e071ed_FindTrait_Lookup_1(jule::Trait<_1c0e079d4_Lookup> _self_, jule::Str _2928_ident) {
	return _1c0d0b19b_FindTrait(_self_.safe_ptr<_1c0d09782_ImportInfo>(), _2928_ident);
}
inline jule::Ptr<_1c0cab27d_Enum> _1c0e0753e_FindEnum_Lookup_1(jule::Trait<_1c0e079d4_Lookup> _self_, jule::Str _3327_ident) {
	return _1c0d0b4dc_FindEnum(_self_.safe_ptr<_1c0d09782_ImportInfo>(), _3327_ident);
}
inline jule::Ptr<_1c0cac988_TypeEnum> _1c0e07880_FindTypeEnum_Lookup_1(jule::Trait<_1c0e079d4_Lookup> _self_, jule::Str _3731_ident) {
	return _1c0d0b82d_FindTypeEnum(_self_.safe_ptr<_1c0d09782_ImportInfo>(), _3731_ident);
}
inline jule::Ptr<_1c0d09782_ImportInfo> _1c0e05cbd_SelectPackage_Lookup_2(jule::Trait<_1c0e079d4_Lookup> _self_, jule::Fn<jule::Bool,jule::Ptr<_1c0d09782_ImportInfo>> _932_selector) {
	return _1c0d0cb4d_SelectPackage(_self_.safe_ptr<_1c0d0c6a8_Package>(), _932_selector);
}
inline jule::Ptr<_1c0d4dde2_Var> _1c0e061b9_FindVar_Lookup_2(jule::Trait<_1c0e079d4_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1c0d0d049_FindVar(_self_.safe_ptr<_1c0d0c6a8_Package>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1c0dd7101_TypeAlias> _1c0e065b5_FindTypeAlias_Lookup_2(jule::Trait<_1c0e079d4_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1c0d0d445_FindTypeAlias(_self_.safe_ptr<_1c0d0c6a8_Package>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1c0c807c4_Struct> _1c0e069b1_FindStruct_Lookup_2(jule::Trait<_1c0e079d4_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1c0d0d841_FindStruct(_self_.safe_ptr<_1c0d0c6a8_Package>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1c0c95795_Fn> _1c0e06dac_FindFn_Lookup_2(jule::Trait<_1c0e079d4_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1c0d0dc3c_FindFn(_self_.safe_ptr<_1c0d0c6a8_Package>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1c0ca8a72_Trait> _1c0e071ed_FindTrait_Lookup_2(jule::Trait<_1c0e079d4_Lookup> _self_, jule::Str _2928_ident) {
	return _1c0d0e07d_FindTrait(_self_.safe_ptr<_1c0d0c6a8_Package>(), _2928_ident);
}
inline jule::Ptr<_1c0cab27d_Enum> _1c0e0753e_FindEnum_Lookup_2(jule::Trait<_1c0e079d4_Lookup> _self_, jule::Str _3327_ident) {
	return _1c0d0e3be_FindEnum(_self_.safe_ptr<_1c0d0c6a8_Package>(), _3327_ident);
}
inline jule::Ptr<_1c0cac988_TypeEnum> _1c0e07880_FindTypeEnum_Lookup_2(jule::Trait<_1c0e079d4_Lookup> _self_, jule::Str _3731_ident) {
	return _1c0d0e710_FindTypeEnum(_self_.safe_ptr<_1c0d0c6a8_Package>(), _3731_ident);
}
inline jule::Ptr<_1c0d09782_ImportInfo> _1c0e05cbd_SelectPackage_Lookup_3(jule::Trait<_1c0e079d4_Lookup> _self_, jule::Fn<jule::Bool,jule::Ptr<_1c0d09782_ImportInfo>> _932_selector) {
	return _1c0d2b51d_SelectPackage(_self_.safe_ptr<_1c0d2b078_Sema>(), _932_selector);
}
inline jule::Ptr<_1c0d4dde2_Var> _1c0e061b9_FindVar_Lookup_3(jule::Trait<_1c0e079d4_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1c0d2b919_FindVar(_self_.safe_ptr<_1c0d2b078_Sema>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1c0dd7101_TypeAlias> _1c0e065b5_FindTypeAlias_Lookup_3(jule::Trait<_1c0e079d4_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1c0d2bd15_FindTypeAlias(_self_.safe_ptr<_1c0d2b078_Sema>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1c0c807c4_Struct> _1c0e069b1_FindStruct_Lookup_3(jule::Trait<_1c0e079d4_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1c0d2c211_FindStruct(_self_.safe_ptr<_1c0d2b078_Sema>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1c0c95795_Fn> _1c0e06dac_FindFn_Lookup_3(jule::Trait<_1c0e079d4_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1c0d2c60c_FindFn(_self_.safe_ptr<_1c0d2b078_Sema>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1c0ca8a72_Trait> _1c0e071ed_FindTrait_Lookup_3(jule::Trait<_1c0e079d4_Lookup> _self_, jule::Str _2928_ident) {
	return _1c0d2c94d_FindTrait(_self_.safe_ptr<_1c0d2b078_Sema>(), _2928_ident);
}
inline jule::Ptr<_1c0cab27d_Enum> _1c0e0753e_FindEnum_Lookup_3(jule::Trait<_1c0e079d4_Lookup> _self_, jule::Str _3327_ident) {
	return _1c0d2cc8e_FindEnum(_self_.safe_ptr<_1c0d2b078_Sema>(), _3327_ident);
}
inline jule::Ptr<_1c0cac988_TypeEnum> _1c0e07880_FindTypeEnum_Lookup_3(jule::Trait<_1c0e079d4_Lookup> _self_, jule::Str _3731_ident) {
	return _1c0d2d0d0_FindTypeEnum(_self_.safe_ptr<_1c0d2b078_Sema>(), _3731_ident);
}
inline jule::Ptr<_1c0d09782_ImportInfo> _1c0e05cbd_SelectPackage_Lookup_4(jule::Trait<_1c0e079d4_Lookup> _self_, jule::Fn<jule::Bool,jule::Ptr<_1c0d09782_ImportInfo>> _932_selector) {
	return _1c0da1b6a_SelectPackage(_self_.safe_ptr<_1c0da1681_SymbolTable>(), _932_selector);
}
inline jule::Ptr<_1c0d4dde2_Var> _1c0e061b9_FindVar_Lookup_4(jule::Trait<_1c0e079d4_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1c0da2066_FindVar(_self_.safe_ptr<_1c0da1681_SymbolTable>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1c0dd7101_TypeAlias> _1c0e065b5_FindTypeAlias_Lookup_4(jule::Trait<_1c0e079d4_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1c0da2462_FindTypeAlias(_self_.safe_ptr<_1c0da1681_SymbolTable>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1c0c807c4_Struct> _1c0e069b1_FindStruct_Lookup_4(jule::Trait<_1c0e079d4_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1c0da285d_FindStruct(_self_.safe_ptr<_1c0da1681_SymbolTable>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1c0c95795_Fn> _1c0e06dac_FindFn_Lookup_4(jule::Trait<_1c0e079d4_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1c0da2c59_FindFn(_self_.safe_ptr<_1c0da1681_SymbolTable>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1c0ca8a72_Trait> _1c0e071ed_FindTrait_Lookup_4(jule::Trait<_1c0e079d4_Lookup> _self_, jule::Str _2928_ident) {
	return _1c0da309a_FindTrait(_self_.safe_ptr<_1c0da1681_SymbolTable>(), _2928_ident);
}
inline jule::Ptr<_1c0cab27d_Enum> _1c0e0753e_FindEnum_Lookup_4(jule::Trait<_1c0e079d4_Lookup> _self_, jule::Str _3327_ident) {
	return _1c0da33db_FindEnum(_self_.safe_ptr<_1c0da1681_SymbolTable>(), _3327_ident);
}
inline jule::Ptr<_1c0cac988_TypeEnum> _1c0e07880_FindTypeEnum_Lookup_4(jule::Trait<_1c0e079d4_Lookup> _self_, jule::Str _3731_ident) {
	return _1c0da372c_FindTypeEnum(_self_.safe_ptr<_1c0da1681_SymbolTable>(), _3731_ident);
}
inline jule::Str _1c1cd1cec_Name_CommonFlag_0(jule::Trait<_1c1cd266b_CommonFlag> _self_) {
	return _1c6ae65ac_Name(_self_.safe_ptr<_1c6ae615b_Flag>());
}
inline jule::I32 _1c1cd2083_Short_CommonFlag_0(jule::Trait<_1c1cd266b_CommonFlag> _self_) {
	return _1c6ae69b9_Short(_self_.safe_ptr<_1c6ae615b_Flag>());
}
inline jule::Str _1c1cd2319_What_CommonFlag_0(jule::Trait<_1c1cd266b_CommonFlag> _self_) {
	return _1c6ae6711_What(_self_.safe_ptr<_1c6ae615b_Flag>());
}
inline void _1c1cd2517_Reset_CommonFlag_0(jule::Trait<_1c1cd266b_CommonFlag> _self_) {
	_1c6ae6865_Reset(_self_.safe_ptr<_1c6ae615b_Flag>());
}
inline jule::Str _1c1cd1cec_Name_CommonFlag_1(jule::Trait<_1c1cd266b_CommonFlag> _self_) {
	return _1c6ae98bd_Name(_self_.safe_ptr<_1c6ae9c53_Flag>());
}
inline jule::I32 _1c1cd2083_Short_CommonFlag_1(jule::Trait<_1c1cd266b_CommonFlag> _self_) {
	return _1c6aea2c5_Short(_self_.safe_ptr<_1c6ae9c53_Flag>());
}
inline jule::Str _1c1cd2319_What_CommonFlag_1(jule::Trait<_1c1cd266b_CommonFlag> _self_) {
	return _1c6aea03e_What(_self_.safe_ptr<_1c6ae9c53_Flag>());
}
inline void _1c1cd2517_Reset_CommonFlag_1(jule::Trait<_1c1cd266b_CommonFlag> _self_) {
	_1c6aea182_Reset(_self_.safe_ptr<_1c6ae9c53_Flag>());
}
inline jule::Str _1c1cd1cec_Name_CommonFlag_2(jule::Trait<_1c1cd266b_CommonFlag> _self_) {
	return _1c6aed031_Name(_self_.safe_ptr<_1c6aed3b6_Flag>());
}
inline jule::I32 _1c1cd2083_Short_CommonFlag_2(jule::Trait<_1c1cd266b_CommonFlag> _self_) {
	return _1c6aed938_Short(_self_.safe_ptr<_1c6aed3b6_Flag>());
}
inline jule::Str _1c1cd2319_What_CommonFlag_2(jule::Trait<_1c1cd266b_CommonFlag> _self_) {
	return _1c6aed6a2_What(_self_.safe_ptr<_1c6aed3b6_Flag>());
}
inline void _1c1cd2517_Reset_CommonFlag_2(jule::Trait<_1c1cd266b_CommonFlag> _self_) {
	_1c6aed7e5_Reset(_self_.safe_ptr<_1c6aed3b6_Flag>());
}
inline jule::Str _1c1cd1cec_Name_CommonFlag_3(jule::Trait<_1c1cd266b_CommonFlag> _self_) {
	return _1c6b016d8_Name(_self_.safe_ptr<_1c6b01a6d_Flag>());
}
inline jule::I32 _1c1cd2083_Short_CommonFlag_3(jule::Trait<_1c1cd266b_CommonFlag> _self_) {
	return _1c6b020e0_Short(_self_.safe_ptr<_1c6b01a6d_Flag>());
}
inline jule::Str _1c1cd2319_What_CommonFlag_3(jule::Trait<_1c1cd266b_CommonFlag> _self_) {
	return _1c6b01d59_What(_self_.safe_ptr<_1c6b01a6d_Flag>());
}
inline void _1c1cd2517_Reset_CommonFlag_3(jule::Trait<_1c1cd266b_CommonFlag> _self_) {
	_1c6b01e9c_Reset(_self_.safe_ptr<_1c6b01a6d_Flag>());
}
inline jule::Str _1c1cd1cec_Name_CommonFlag_4(jule::Trait<_1c1cd266b_CommonFlag> _self_) {
	return _1c6b04d4b_Name(_self_.safe_ptr<_1c6b051d1_Flag>());
}
inline jule::I32 _1c1cd2083_Short_CommonFlag_4(jule::Trait<_1c1cd266b_CommonFlag> _self_) {
	return _1c6b05753_Short(_self_.safe_ptr<_1c6b051d1_Flag>());
}
inline jule::Str _1c1cd2319_What_CommonFlag_4(jule::Trait<_1c1cd266b_CommonFlag> _self_) {
	return _1c6b054bc_What(_self_.safe_ptr<_1c6b051d1_Flag>());
}
inline void _1c1cd2517_Reset_CommonFlag_4(jule::Trait<_1c1cd266b_CommonFlag> _self_) {
	_1c6b05610_Reset(_self_.safe_ptr<_1c6b051d1_Flag>());
}


static _1c0cb08c0_comptimeRangeKindMptrData _1c0cb08c0_comptimeRangeKind_mptr_data[] = {
	{
		._1c0cb00b7_ready=_1c0cb00b7_ready_comptimeRangeKind_0,
		._1c0cb04d5_step=_1c0cb04d5_step_comptimeRangeKind_0,
		._1c0cb076b_len=_1c0cb076b_len_comptimeRangeKind_0,
	},
	{
		._1c0cb00b7_ready=_1c0cb00b7_ready_comptimeRangeKind_1,
		._1c0cb04d5_step=_1c0cb04d5_step_comptimeRangeKind_1,
		._1c0cb076b_len=_1c0cb076b_len_comptimeRangeKind_1,
	},
	{
		._1c0cb00b7_ready=_1c0cb00b7_ready_comptimeRangeKind_2,
		._1c0cb04d5_step=_1c0cb04d5_step_comptimeRangeKind_2,
		._1c0cb076b_len=_1c0cb076b_len_comptimeRangeKind_2,
	},
	{
		._1c0cb00b7_ready=_1c0cb00b7_ready_comptimeRangeKind_3,
		._1c0cb04d5_step=_1c0cb04d5_step_comptimeRangeKind_3,
		._1c0cb076b_len=_1c0cb076b_len_comptimeRangeKind_3,
	},
	{
		._1c0cb00b7_ready=_1c0cb00b7_ready_comptimeRangeKind_4,
		._1c0cb04d5_step=_1c0cb04d5_step_comptimeRangeKind_4,
		._1c0cb076b_len=_1c0cb076b_len_comptimeRangeKind_4,
	},
	{
		._1c0cb00b7_ready=_1c0cb00b7_ready_comptimeRangeKind_5,
		._1c0cb04d5_step=_1c0cb04d5_step_comptimeRangeKind_5,
		._1c0cb076b_len=_1c0cb076b_len_comptimeRangeKind_5,
	},
};
static _1c0d0686c_ImporterMptrData _1c0d0686c_Importer_mptr_data[] = {
	{
		._1c0d0564b_SetModPath=_1c0d0564b_SetModPath_Importer_0,
		._1c0d058d2_GetModPath=_1c0d058d2_GetModPath_Importer_0,
		._1c0d05c23_ModById=_1c0d05c23_ModById_Importer_0,
		._1c0d06064_GetImport=_1c0d06064_GetImport_Importer_0,
		._1c0d06460_ImportPackage=_1c0d06460_ImportPackage_Importer_0,
		._1c0d06718_Imported=_1c0d06718_Imported_Importer_0,
	},
};
static _1c0dd793c_KindMptrData _1c0dd793c_Kind_mptr_data[] = {
	{
		._1c0dd7497_Str=_1c0dd7497_Str_Kind_0,
		._1c0dd77d8_Equal=_1c0dd77d8_Equal_Kind_0,
	},
	{
		._1c0dd7497_Str=_1c0dd7497_Str_Kind_1,
		._1c0dd77d8_Equal=_1c0dd77d8_Equal_Kind_1,
	},
	{
		._1c0dd7497_Str=_1c0dd7497_Str_Kind_2,
		._1c0dd77d8_Equal=_1c0dd77d8_Equal_Kind_2,
	},
	{
		._1c0dd7497_Str=_1c0dd7497_Str_Kind_3,
		._1c0dd77d8_Equal=_1c0dd77d8_Equal_Kind_3,
	},
	{
		._1c0dd7497_Str=_1c0dd7497_Str_Kind_4,
		._1c0dd77d8_Equal=_1c0dd77d8_Equal_Kind_4,
	},
	{
		._1c0dd7497_Str=_1c0dd7497_Str_Kind_5,
		._1c0dd77d8_Equal=_1c0dd77d8_Equal_Kind_5,
	},
	{
		._1c0dd7497_Str=_1c0dd7497_Str_Kind_6,
		._1c0dd77d8_Equal=_1c0dd77d8_Equal_Kind_6,
	},
	{
		._1c0dd7497_Str=_1c0dd7497_Str_Kind_7,
		._1c0dd77d8_Equal=_1c0dd77d8_Equal_Kind_7,
	},
	{
		._1c0dd7497_Str=_1c0dd7497_Str_Kind_8,
		._1c0dd77d8_Equal=_1c0dd77d8_Equal_Kind_8,
	},
	{
		._1c0dd7497_Str=_1c0dd7497_Str_Kind_9,
		._1c0dd77d8_Equal=_1c0dd77d8_Equal_Kind_9,
	},
	{
		._1c0dd7497_Str=_1c0dd7497_Str_Kind_10,
		._1c0dd77d8_Equal=_1c0dd77d8_Equal_Kind_10,
	},
	{
		._1c0dd7497_Str=_1c0dd7497_Str_Kind_11,
		._1c0dd77d8_Equal=_1c0dd77d8_Equal_Kind_11,
	},
	{
		._1c0dd7497_Str=_1c0dd7497_Str_Kind_12,
		._1c0dd77d8_Equal=_1c0dd77d8_Equal_Kind_12,
	},
	{
		._1c0dd7497_Str=_1c0dd7497_Str_Kind_13,
		._1c0dd77d8_Equal=_1c0dd77d8_Equal_Kind_13,
	},
	{
		._1c0dd7497_Str=_1c0dd7497_Str_Kind_14,
		._1c0dd77d8_Equal=_1c0dd77d8_Equal_Kind_14,
	},
	{
		._1c0dd7497_Str=_1c0dd7497_Str_Kind_15,
		._1c0dd77d8_Equal=_1c0dd77d8_Equal_Kind_15,
	},
	{
		._1c0dd7497_Str=_1c0dd7497_Str_Kind_16,
		._1c0dd77d8_Equal=_1c0dd77d8_Equal_Kind_16,
	},
	{
		._1c0dd7497_Str=_1c0dd7497_Str_Kind_17,
		._1c0dd77d8_Equal=_1c0dd77d8_Equal_Kind_17,
	},
	{
		._1c0dd7497_Str=_1c0dd7497_Str_Kind_18,
		._1c0dd77d8_Equal=_1c0dd77d8_Equal_Kind_18,
	},
	{
		._1c0dd7497_Str=_1c0dd7497_Str_Kind_19,
		._1c0dd77d8_Equal=_1c0dd77d8_Equal_Kind_19,
	},
	{
		._1c0dd7497_Str=_1c0dd7497_Str_Kind_20,
		._1c0dd77d8_Equal=_1c0dd77d8_Equal_Kind_20,
	},
	{
		._1c0dd7497_Str=_1c0dd7497_Str_Kind_21,
		._1c0dd77d8_Equal=_1c0dd77d8_Equal_Kind_21,
	},
	{
		._1c0dd7497_Str=_1c0dd7497_Str_Kind_22,
		._1c0dd77d8_Equal=_1c0dd77d8_Equal_Kind_22,
	},
	{
		._1c0dd7497_Str=_1c0dd7497_Str_Kind_23,
		._1c0dd77d8_Equal=_1c0dd77d8_Equal_Kind_23,
	},
	{
		._1c0dd7497_Str=_1c0dd7497_Str_Kind_24,
		._1c0dd77d8_Equal=_1c0dd77d8_Equal_Kind_24,
	},
	{
		._1c0dd7497_Str=_1c0dd7497_Str_Kind_25,
		._1c0dd77d8_Equal=_1c0dd77d8_Equal_Kind_25,
	},
	{
		._1c0dd7497_Str=_1c0dd7497_Str_Kind_26,
		._1c0dd77d8_Equal=_1c0dd77d8_Equal_Kind_26,
	},
	{
		._1c0dd7497_Str=_1c0dd7497_Str_Kind_27,
		._1c0dd77d8_Equal=_1c0dd77d8_Equal_Kind_27,
	},
};
static _1c0e079d4_LookupMptrData _1c0e079d4_Lookup_mptr_data[] = {
	{
		._1c0e05cbd_SelectPackage=_1c0e05cbd_SelectPackage_Lookup_0,
		._1c0e061b9_FindVar=_1c0e061b9_FindVar_Lookup_0,
		._1c0e065b5_FindTypeAlias=_1c0e065b5_FindTypeAlias_Lookup_0,
		._1c0e069b1_FindStruct=_1c0e069b1_FindStruct_Lookup_0,
		._1c0e06dac_FindFn=_1c0e06dac_FindFn_Lookup_0,
		._1c0e071ed_FindTrait=_1c0e071ed_FindTrait_Lookup_0,
		._1c0e0753e_FindEnum=_1c0e0753e_FindEnum_Lookup_0,
		._1c0e07880_FindTypeEnum=_1c0e07880_FindTypeEnum_Lookup_0,
	},
	{
		._1c0e05cbd_SelectPackage=_1c0e05cbd_SelectPackage_Lookup_1,
		._1c0e061b9_FindVar=_1c0e061b9_FindVar_Lookup_1,
		._1c0e065b5_FindTypeAlias=_1c0e065b5_FindTypeAlias_Lookup_1,
		._1c0e069b1_FindStruct=_1c0e069b1_FindStruct_Lookup_1,
		._1c0e06dac_FindFn=_1c0e06dac_FindFn_Lookup_1,
		._1c0e071ed_FindTrait=_1c0e071ed_FindTrait_Lookup_1,
		._1c0e0753e_FindEnum=_1c0e0753e_FindEnum_Lookup_1,
		._1c0e07880_FindTypeEnum=_1c0e07880_FindTypeEnum_Lookup_1,
	},
	{
		._1c0e05cbd_SelectPackage=_1c0e05cbd_SelectPackage_Lookup_2,
		._1c0e061b9_FindVar=_1c0e061b9_FindVar_Lookup_2,
		._1c0e065b5_FindTypeAlias=_1c0e065b5_FindTypeAlias_Lookup_2,
		._1c0e069b1_FindStruct=_1c0e069b1_FindStruct_Lookup_2,
		._1c0e06dac_FindFn=_1c0e06dac_FindFn_Lookup_2,
		._1c0e071ed_FindTrait=_1c0e071ed_FindTrait_Lookup_2,
		._1c0e0753e_FindEnum=_1c0e0753e_FindEnum_Lookup_2,
		._1c0e07880_FindTypeEnum=_1c0e07880_FindTypeEnum_Lookup_2,
	},
	{
		._1c0e05cbd_SelectPackage=_1c0e05cbd_SelectPackage_Lookup_3,
		._1c0e061b9_FindVar=_1c0e061b9_FindVar_Lookup_3,
		._1c0e065b5_FindTypeAlias=_1c0e065b5_FindTypeAlias_Lookup_3,
		._1c0e069b1_FindStruct=_1c0e069b1_FindStruct_Lookup_3,
		._1c0e06dac_FindFn=_1c0e06dac_FindFn_Lookup_3,
		._1c0e071ed_FindTrait=_1c0e071ed_FindTrait_Lookup_3,
		._1c0e0753e_FindEnum=_1c0e0753e_FindEnum_Lookup_3,
		._1c0e07880_FindTypeEnum=_1c0e07880_FindTypeEnum_Lookup_3,
	},
	{
		._1c0e05cbd_SelectPackage=_1c0e05cbd_SelectPackage_Lookup_4,
		._1c0e061b9_FindVar=_1c0e061b9_FindVar_Lookup_4,
		._1c0e065b5_FindTypeAlias=_1c0e065b5_FindTypeAlias_Lookup_4,
		._1c0e069b1_FindStruct=_1c0e069b1_FindStruct_Lookup_4,
		._1c0e06dac_FindFn=_1c0e06dac_FindFn_Lookup_4,
		._1c0e071ed_FindTrait=_1c0e071ed_FindTrait_Lookup_4,
		._1c0e0753e_FindEnum=_1c0e0753e_FindEnum_Lookup_4,
		._1c0e07880_FindTypeEnum=_1c0e07880_FindTypeEnum_Lookup_4,
	},
};
static _1c1cd266b_CommonFlagMptrData _1c1cd266b_CommonFlag_mptr_data[] = {
	{
		._1c1cd1cec_Name=_1c1cd1cec_Name_CommonFlag_0,
		._1c1cd2083_Short=_1c1cd2083_Short_CommonFlag_0,
		._1c1cd2319_What=_1c1cd2319_What_CommonFlag_0,
		._1c1cd2517_Reset=_1c1cd2517_Reset_CommonFlag_0,
	},
	{
		._1c1cd1cec_Name=_1c1cd1cec_Name_CommonFlag_1,
		._1c1cd2083_Short=_1c1cd2083_Short_CommonFlag_1,
		._1c1cd2319_What=_1c1cd2319_What_CommonFlag_1,
		._1c1cd2517_Reset=_1c1cd2517_Reset_CommonFlag_1,
	},
	{
		._1c1cd1cec_Name=_1c1cd1cec_Name_CommonFlag_2,
		._1c1cd2083_Short=_1c1cd2083_Short_CommonFlag_2,
		._1c1cd2319_What=_1c1cd2319_What_CommonFlag_2,
		._1c1cd2517_Reset=_1c1cd2517_Reset_CommonFlag_2,
	},
	{
		._1c1cd1cec_Name=_1c1cd1cec_Name_CommonFlag_3,
		._1c1cd2083_Short=_1c1cd2083_Short_CommonFlag_3,
		._1c1cd2319_What=_1c1cd2319_What_CommonFlag_3,
		._1c1cd2517_Reset=_1c1cd2517_Reset_CommonFlag_3,
	},
	{
		._1c1cd1cec_Name=_1c1cd1cec_Name_CommonFlag_4,
		._1c1cd2083_Short=_1c1cd2083_Short_CommonFlag_4,
		._1c1cd2319_What=_1c1cd2319_What_CommonFlag_4,
		._1c1cd2517_Reset=_1c1cd2517_Reset_CommonFlag_4,
	},
};


void __jule_any_type0_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type0_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_any_type0_dealloc, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
void __jule_any_type1_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type1_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_any_type1_dealloc, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
void __jule_any_type2_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other); }
jule::Str __jule_any_type2_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_any_type2_dealloc, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
void __jule_any_type3_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other); }
jule::Str __jule_any_type3_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_any_type3_dealloc, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
void __jule_any_type4_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other); }
jule::Str __jule_any_type4_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_any_type4_dealloc, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
void __jule_any_type5_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other); }
jule::Str __jule_any_type5_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_any_type5_dealloc, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
void __jule_any_type6_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type6_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_any_type6_dealloc, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
void __jule_any_type7_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c98699_FnIns>().dealloc(); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_any_type7_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1c0c98699_FnIns> &other) { return any.type == &__jule_any_type7 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type8_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0d4dde2_Var>().dealloc(); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_any_type8_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1c0d4dde2_Var> &other) { return any.type == &__jule_any_type8 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type9_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c83552_StructIns>().dealloc(); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_any_type9_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1c0c83552_StructIns> &other) { return any.type == &__jule_any_type9 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type10_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0ca8a72_Trait>().dealloc(); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_any_type10_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1c0ca8a72_Trait> &other) { return any.type == &__jule_any_type10 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type11_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c7b5a0_Impl>().dealloc(); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_any_type11_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1c0c7b5a0_Impl> &other) { return any.type == &__jule_any_type11 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type12_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c76457_TypeAliasDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_any_type12_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1c0c76457_TypeAliasDecl> &other) { return any.type == &__jule_any_type12 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type13_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c7a703_StructDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_any_type13_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1c0c7a703_StructDecl> &other) { return any.type == &__jule_any_type13 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type14_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c715ea_FnDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_any_type14_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1c0c715ea_FnDecl> &other) { return any.type == &__jule_any_type14 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type15_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c7ae40_TraitDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_any_type15_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1c0c7ae40_TraitDecl> &other) { return any.type == &__jule_any_type15 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type16_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c727a5_VarDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_any_type16_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1c0c727a5_VarDecl> &other) { return any.type == &__jule_any_type16 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type17_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c78aa8_EnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_any_type17_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1c0c78aa8_EnumDecl> &other) { return any.type == &__jule_any_type17 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type18_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c79a43_TypeEnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_any_type18_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1c0c79a43_TypeEnumDecl> &other) { return any.type == &__jule_any_type18 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type19_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2021e617b_Const>().dealloc(); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_any_type19_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_2021e617b_Const> &other) { return any.type == &__jule_any_type19 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type20_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0cd9ed2_Label>().dealloc(); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_any_type20_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1c0cd9ed2_Label> &other) { return any.type == &__jule_any_type20 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type21_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0cd763e_Scope>().dealloc(); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_any_type21_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1c0cd763e_Scope> &other) { return any.type == &__jule_any_type21 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type22_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c91230_BuiltinErrorCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_any_type22_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1c0c91230_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type22 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type23_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0da69e9_Data>().dealloc(); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_any_type23_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1c0da69e9_Data> &other) { return any.type == &__jule_any_type23 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type24_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c9253e_BackendEmitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_any_type24_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1c0c9253e_BackendEmitExprModel> &other) { return any.type == &__jule_any_type24 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type25_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c8eea9_BuiltinAppendCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_any_type25_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1c0c8eea9_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type25 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type26_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c8d4e6_BuiltinOutCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_any_type26_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1c0c8d4e6_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type26 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type27_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c8d8c0_BuiltinOutlnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_any_type27_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1c0c8d8c0_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type27 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type28_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c8e173_BuiltinPanicCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_any_type28_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1c0c8e173_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type28 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type29_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c8e629_BuiltinAssertCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_any_type29_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1c0c8e629_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type29 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type30_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c90d56_BuiltinCopyCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_any_type30_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1c0c90d56_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type30 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type31_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c9097c_BuiltinDeleteCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_any_type31_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1c0c9097c_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type31 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type32_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c9283b_FreeExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_any_type32_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1c0c9283b_FreeExprModel> &other) { return any.type == &__jule_any_type32 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type33_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c89932_FnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_any_type33_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1c0c89932_FnCallExprModel> &other) { return any.type == &__jule_any_type33 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type34_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0cd8277_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_any_type34_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1c0cd8277_Conditional> &other) { return any.type == &__jule_any_type34 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type35_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0cd8574_InfIter>().dealloc(); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_any_type35_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1c0cd8574_InfIter> &other) { return any.type == &__jule_any_type35 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type36_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c73c29_WhileKind>().dealloc(); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_any_type36_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1c0c73c29_WhileKind> &other) { return any.type == &__jule_any_type36 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type37_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0cd8a2a_WhileIter>().dealloc(); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_any_type37_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1c0cd8a2a_WhileIter> &other) { return any.type == &__jule_any_type37 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type38_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c74631_RangeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_any_type38_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1c0c74631_RangeKind> &other) { return any.type == &__jule_any_type38 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type39_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0cd9476_RangeIter>().dealloc(); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_any_type39_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1c0cd9476_RangeIter> &other) { return any.type == &__jule_any_type39 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type40_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0cd980b_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_any_type40_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1c0cd980b_ContSt> &other) { return any.type == &__jule_any_type40 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type41_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0cda3ab_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_any_type41_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1c0cda3ab_GotoSt> &other) { return any.type == &__jule_any_type41 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type42_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0cda785_Postfix>().dealloc(); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_any_type42_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1c0cda785_Postfix> &other) { return any.type == &__jule_any_type42 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type43_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0cdac3b_Assign>().dealloc(); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_any_type43_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1c0cdac3b_Assign> &other) { return any.type == &__jule_any_type43 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type44_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c8a2b2_IndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_any_type44_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1c0c8a2b2_IndexingExprModel> &other) { return any.type == &__jule_any_type44 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type45_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0cdb1e2_MultiAssign>().dealloc(); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_any_type45_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1c0cdb1e2_MultiAssign> &other) { return any.type == &__jule_any_type45 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type46_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0cdb852_Match>().dealloc(); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_any_type46_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1c0cdb852_Match> &other) { return any.type == &__jule_any_type46 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type47_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0cdca73_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_any_type47_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1c0cdca73_FallSt> &other) { return any.type == &__jule_any_type47 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type48_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0cd9bd5_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_any_type48_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1c0cd9bd5_BreakSt> &other) { return any.type == &__jule_any_type48 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type49_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0cdce19_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_any_type49_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1c0cdce19_RetSt> &other) { return any.type == &__jule_any_type49 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type50_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c6e95b_ScopeTree>().dealloc(); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_any_type50_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1c0c6e95b_ScopeTree> &other) { return any.type == &__jule_any_type50 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type51_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c63c6e_Expr>().dealloc(); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_any_type51_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1c0c63c6e_Expr> &other) { return any.type == &__jule_any_type51 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type52_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c75c1a_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_any_type52_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1c0c75c1a_Conditional> &other) { return any.type == &__jule_any_type52 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type53_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c733ee_Iter>().dealloc(); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_any_type53_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1c0c733ee_Iter> &other) { return any.type == &__jule_any_type53 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type54_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c74dd4_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_any_type54_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1c0c74dd4_ContSt> &other) { return any.type == &__jule_any_type54 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type55_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c6c01e_LabelSt>().dealloc(); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_any_type55_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1c0c6c01e_LabelSt> &other) { return any.type == &__jule_any_type55 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type56_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c6c3e8_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_any_type56_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1c0c6c3e8_GotoSt> &other) { return any.type == &__jule_any_type56 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type57_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c6d3d8_AssignSt>().dealloc(); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_any_type57_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1c0c6d3d8_AssignSt> &other) { return any.type == &__jule_any_type57 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type58_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c77227_MatchCase>().dealloc(); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_any_type58_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1c0c77227_MatchCase> &other) { return any.type == &__jule_any_type58 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type59_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c6c6e5_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_any_type59_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1c0c6c6e5_FallSt> &other) { return any.type == &__jule_any_type59 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type60_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c74a0a_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_any_type60_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1c0c74a0a_BreakSt> &other) { return any.type == &__jule_any_type60 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type61_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c72b7e_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_any_type61_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1c0c72b7e_RetSt> &other) { return any.type == &__jule_any_type61 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type62_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c64643_UseExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_any_type62_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1c0c64643_UseExpr> &other) { return any.type == &__jule_any_type62 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type63_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c95795_Fn>().dealloc(); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_any_type63_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1c0c95795_Fn> &other) { return any.type == &__jule_any_type63 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type64_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c807c4_Struct>().dealloc(); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_any_type64_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1c0c807c4_Struct> &other) { return any.type == &__jule_any_type64 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type65_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0dd7101_TypeAlias>().dealloc(); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_any_type65_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1c0dd7101_TypeAlias> &other) { return any.type == &__jule_any_type65 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type66_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0cab27d_Enum>().dealloc(); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_any_type66_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1c0cab27d_Enum> &other) { return any.type == &__jule_any_type66 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type67_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0cac988_TypeEnum>().dealloc(); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_any_type67_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1c0cac988_TypeEnum> &other) { return any.type == &__jule_any_type67 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type68_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c61c06_ArrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_any_type68_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1c0c61c06_ArrTypeDecl> &other) { return any.type == &__jule_any_type68 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type69_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c60d6a_SlcTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_any_type69_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1c0c60d6a_SlcTypeDecl> &other) { return any.type == &__jule_any_type69 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type70_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c61464_PtrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_any_type70_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1c0c61464_PtrTypeDecl> &other) { return any.type == &__jule_any_type70 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type71_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c609d5_SptrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_any_type71_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1c0c609d5_SptrTypeDecl> &other) { return any.type == &__jule_any_type71 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type72_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c62454_MapTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_any_type72_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1c0c62454_MapTypeDecl> &other) { return any.type == &__jule_any_type72 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type73_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c61167_TupleTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_any_type73_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1c0c61167_TupleTypeDecl> &other) { return any.type == &__jule_any_type73 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type74_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c60045_IdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_any_type74_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1c0c60045_IdentTypeDecl> &other) { return any.type == &__jule_any_type74 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type75_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c66205_VariadicExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_any_type75_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1c0c66205_VariadicExpr> &other) { return any.type == &__jule_any_type75 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type76_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c89d0b_SliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_any_type76_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1c0c89d0b_SliceExprModel> &other) { return any.type == &__jule_any_type76 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type77_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c6848d_FieldExprPair>().dealloc(); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_any_type77_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1c0c6848d_FieldExprPair> &other) { return any.type == &__jule_any_type77 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type78_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c69a99_KeyValPair>().dealloc(); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_any_type78_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1c0c69a99_KeyValPair> &other) { return any.type == &__jule_any_type78 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type79_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c65589_IdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_any_type79_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1c0c65589_IdentExpr> &other) { return any.type == &__jule_any_type79 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type80_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c64863_TupleExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_any_type80_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1c0c64863_TupleExpr> &other) { return any.type == &__jule_any_type80 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type81_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c8d11c_TupleExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_any_type81_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1c0c8d11c_TupleExprModel> &other) { return any.type == &__jule_any_type81 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type82_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c67998_FnCallExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_any_type82_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1c0c67998_FnCallExpr> &other) { return any.type == &__jule_any_type82 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type83_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c91d68_RuneExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_any_type83_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1c0c91d68_RuneExprModel> &other) { return any.type == &__jule_any_type83 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type84_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0dd7de3_TypeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_any_type84_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1c0dd7de3_TypeKind> &other) { return any.type == &__jule_any_type84 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type85_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c8cd20_ArrayExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_any_type85_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1c0c8cd20_ArrayExprModel> &other) { return any.type == &__jule_any_type85 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type86_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c66d82_SubIdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_any_type86_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1c0c66d82_SubIdentExpr> &other) { return any.type == &__jule_any_type86 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type87_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c6030e_SubIdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_any_type87_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1c0c6030e_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type87 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type88_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c65d2b_UnaryExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_any_type88_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1c0c65d2b_UnaryExpr> &other) { return any.type == &__jule_any_type88 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type89_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c5e93a_TypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_any_type89_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1c0c5e93a_TypeDecl> &other) { return any.type == &__jule_any_type89 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type90_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c669a8_NsSelectionExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_any_type90_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1c0c669a8_NsSelectionExpr> &other) { return any.type == &__jule_any_type90 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type91_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c606d8_NamespaceTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_any_type91_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1c0c606d8_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type91 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type92_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c8b67b_SlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_any_type92_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1c0c8b67b_SlicingExprModel> &other) { return any.type == &__jule_any_type92 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type93_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c89080_CastingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_any_type93_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1c0c89080_CastingExprModel> &other) { return any.type == &__jule_any_type93 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type94_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c6a2c5_SliceExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_any_type94_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1c0c6a2c5_SliceExpr> &other) { return any.type == &__jule_any_type94 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type95_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c88700_StructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_any_type95_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1c0c88700_StructLitExprModel> &other) { return any.type == &__jule_any_type95 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type96_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c8c946_StructStaticIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_any_type96_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1c0c8c946_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type96 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type97_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c8bc0e_TraitSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_any_type97_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1c0c8bc0e_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type97 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type98_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c8c5a0_StructSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_any_type98_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1c0c8c5a0_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type98 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type99_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c8b0e8_MapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_any_type99_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1c0c8b0e8_MapExprModel> &other) { return any.type == &__jule_any_type99 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type100_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c8a768_AnonFnExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_any_type100_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1c0c8a768_AnonFnExprModel> &other) { return any.type == &__jule_any_type100 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type101_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c64038_RangeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_any_type101_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1c0c64038_RangeExpr> &other) { return any.type == &__jule_any_type101 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type102_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c64c09_LitExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_any_type102_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1c0c64c09_LitExpr> &other) { return any.type == &__jule_any_type102 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type103_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c650d3_UnsafeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_any_type103_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1c0c650d3_UnsafeExpr> &other) { return any.type == &__jule_any_type103 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type104_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c6ac32_IndexingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_any_type104_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1c0c6ac32_IndexingExpr> &other) { return any.type == &__jule_any_type104 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type105_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c6b392_SlicingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_any_type105_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1c0c6b392_SlicingExpr> &other) { return any.type == &__jule_any_type105 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type106_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c665ce_CastExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_any_type106_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1c0c665ce_CastExpr> &other) { return any.type == &__jule_any_type106 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type107_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c68cb8_StructLit>().dealloc(); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_any_type107_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1c0c68cb8_StructLit> &other) { return any.type == &__jule_any_type107 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type108_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c6926e_BraceLit>().dealloc(); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_any_type108_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1c0c6926e_BraceLit> &other) { return any.type == &__jule_any_type108 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type109_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c67338_BinaryExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_any_type109_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1c0c67338_BinaryExpr> &other) { return any.type == &__jule_any_type109 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type110_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c87d2b_UnaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_any_type110_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1c0c87d2b_UnaryExprModel> &other) { return any.type == &__jule_any_type110 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type111_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c87952_BinaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_any_type111_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1c0c87952_BinaryExprModel> &other) { return any.type == &__jule_any_type111 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type112_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c889ec_AllocStructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_any_type112_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1c0c889ec_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type112 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type113_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c8dc99_BuiltinNewCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_any_type113_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1c0c8dc99_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type113 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type114_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c8ead0_BuiltinMakeCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_any_type114_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1c0c8ead0_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type114 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type115_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c902a6_BuiltinLenCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_any_type115_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1c0c902a6_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type115 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type116_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c905a3_BuiltinCapCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_any_type116_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_1c0c905a3_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type116 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type117_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c918d4_SizeofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_any_type117_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1c0c918d4_SizeofExprModel> &other) { return any.type == &__jule_any_type117 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type118_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c91ac1_AlignofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_any_type118_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1c0c91ac1_AlignofExprModel> &other) { return any.type == &__jule_any_type118 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type119_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c92165_IntegratedToStrExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_any_type119_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1c0c92165_IntegratedToStrExprModel> &other) { return any.type == &__jule_any_type119 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type120_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0ed9d3b_ExceptionalForwardingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_any_type120_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1c0ed9d3b_ExceptionalForwardingExprModel> &other) { return any.type == &__jule_any_type120 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type121_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0edc723_StrRuneIter>().dealloc(); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_any_type121_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1c0edc723_StrRuneIter> &other) { return any.type == &__jule_any_type121 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type122_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0edb414_MutSlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_any_type122_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1c0edb414_MutSlicingExprModel> &other) { return any.type == &__jule_any_type122 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type123_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0edbe70_PushToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_any_type123_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1c0edbe70_PushToSliceExprModel> &other) { return any.type == &__jule_any_type123 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type124_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0edc349_AppendToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_any_type124_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1c0edc349_AppendToSliceExprModel> &other) { return any.type == &__jule_any_type124 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type125_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0eda1b0_SwapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_any_type125_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1c0eda1b0_SwapExprModel> &other) { return any.type == &__jule_any_type125 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type126_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0eda589_EmptyCompareExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_any_type126_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1c0eda589_EmptyCompareExprModel> &other) { return any.type == &__jule_any_type126 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type127_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0edad81_StrCompExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_any_type127_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1c0edad81_StrCompExprModel> &other) { return any.type == &__jule_any_type127 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type128_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0edb711_UnsafeBinaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_any_type128_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1c0edb711_UnsafeBinaryExprModel> &other) { return any.type == &__jule_any_type128 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type129_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0edca20_UnsafeDerefExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_any_type129_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_1c0edca20_UnsafeDerefExprModel> &other) { return any.type == &__jule_any_type129 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type130_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0eda90d_RefExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_any_type130_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_1c0eda90d_RefExprModel> &other) { return any.type == &__jule_any_type130 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type131_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c88359_StructArgExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_any_type131_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::Ptr<_1c0c88359_StructArgExprModel> &other) { return any.type == &__jule_any_type131 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type132_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0edcd1c_UnsafeCastingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_any_type132_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::Ptr<_1c0edcd1c_UnsafeCastingExprModel> &other) { return any.type == &__jule_any_type132 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type133_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0edba96_UnsafeIndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_any_type133_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::Ptr<_1c0edba96_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type133 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type134_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
jule::Bool __jule_any_type134_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other); }
jule::Str __jule_any_type134_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_any_type134_dealloc, .eq=__jule_any_type134_eq, .to_str=__jule_any_type134_to_str};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type134 && __jule_any_type134_eq(any.data.alloc, (void*)&other); }
void __jule_any_type135_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
jule::Bool __jule_any_type135_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other); }
jule::Str __jule_any_type135_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_any_type135_dealloc, .eq=__jule_any_type135_eq, .to_str=__jule_any_type135_to_str};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type135 && __jule_any_type135_eq(any.data.alloc, (void*)&other); }
void __jule_any_type136_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
jule::Bool __jule_any_type136_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other); }
jule::Str __jule_any_type136_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_any_type136_dealloc, .eq=__jule_any_type136_eq, .to_str=__jule_any_type136_to_str};
jule::Bool __jule_any_type136_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type136 && __jule_any_type136_eq(any.data.alloc, (void*)&other); }
void __jule_any_type137_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
jule::Bool __jule_any_type137_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other); }
jule::Str __jule_any_type137_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type137{.dealloc=__jule_any_type137_dealloc, .eq=__jule_any_type137_eq, .to_str=__jule_any_type137_to_str};
jule::Bool __jule_any_type137_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type137 && __jule_any_type137_eq(any.data.alloc, (void*)&other); }
void __jule_any_type138_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
jule::Bool __jule_any_type138_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other); }
jule::Str __jule_any_type138_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type138{.dealloc=__jule_any_type138_dealloc, .eq=__jule_any_type138_eq, .to_str=__jule_any_type138_to_str};
jule::Bool __jule_any_type138_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type138 && __jule_any_type138_eq(any.data.alloc, (void*)&other); }
void __jule_any_type139_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
jule::Bool __jule_any_type139_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other); }
jule::Str __jule_any_type139_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type139{.dealloc=__jule_any_type139_dealloc, .eq=__jule_any_type139_eq, .to_str=__jule_any_type139_to_str};
jule::Bool __jule_any_type139_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type139 && __jule_any_type139_eq(any.data.alloc, (void*)&other); }
struct __jule_anon_1c41b9765_ctx{
};
static void __jule_anon_1c41b9765_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c41b9765_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1c41b9765(jule::Ptr<_1c0c976ed_ParamIns> _23927_p1, jule::Ptr<_1c0c976ed_ParamIns> _23942_p2);
struct __jule_anon_1c42d6b90_ctx{
	jule::Ptr<_1c0d09782_ImportInfo> *_49841_pkg;
};
static void __jule_anon_1c42d6b90_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c42d6b90_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1c42d6b90(jule::Ptr<_1c0d09782_ImportInfo> _50045_spkg);
struct __jule_anon_1c433b167_ctx{
	jule::Ptr<_1c0cb15b3_comptimeStructField> _self_;
};
static void __jule_anon_1c433b167_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c433b167_ctx>().dealloc(); }
inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c433b167(jule::Ptr<_1c0da8721_Eval>* _8833_e, jule::Ptr<_1c0c67998_FnCallExpr>* _8848_fc, jule::Ptr<_1c0da69e9_Data>* );
struct __jule_anon_1c433d114_ctx{
	jule::Ptr<_1c0cb15b3_comptimeStructField> _self_;
};
static void __jule_anon_1c433d114_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c433d114_ctx>().dealloc(); }
inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c433d114(jule::Ptr<_1c0da8721_Eval>* _9533_e, jule::Ptr<_1c0c67998_FnCallExpr>* _9548_fc, jule::Ptr<_1c0da69e9_Data>* );
struct __jule_anon_1c434006c_ctx{
	jule::Ptr<_1c0cb15b3_comptimeStructField> _self_;
};
static void __jule_anon_1c434006c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c434006c_ctx>().dealloc(); }
inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c434006c(jule::Ptr<_1c0da8721_Eval>* _10233_e, jule::Ptr<_1c0c67998_FnCallExpr>* _10248_fc, jule::Ptr<_1c0da69e9_Data>* );
struct __jule_anon_1c4351ce8_ctx{
	jule::Ptr<_1c0cb486e_comptimeStatic> _self_;
};
static void __jule_anon_1c4351ce8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c4351ce8_ctx>().dealloc(); }
inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c4351ce8(jule::Ptr<_1c0da8721_Eval>* _21133_e, jule::Ptr<_1c0c67998_FnCallExpr>* _21148_fc, jule::Ptr<_1c0da69e9_Data>* );
struct __jule_anon_1c4353c51_ctx{
	jule::Ptr<_1c0cb486e_comptimeStatic> _self_;
};
static void __jule_anon_1c4353c51_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c4353c51_ctx>().dealloc(); }
inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c4353c51(jule::Ptr<_1c0da8721_Eval>* _21833_e, jule::Ptr<_1c0c67998_FnCallExpr>* _21848_fc, jule::Ptr<_1c0da69e9_Data>* );
struct __jule_anon_1c4355ba9_ctx{
	jule::Ptr<_1c0cb486e_comptimeStatic> _self_;
};
static void __jule_anon_1c4355ba9_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c4355ba9_ctx>().dealloc(); }
inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c4355ba9(jule::Ptr<_1c0da8721_Eval>* _22533_e, jule::Ptr<_1c0c67998_FnCallExpr>* _22548_fc, jule::Ptr<_1c0da69e9_Data>* );
struct __jule_anon_1c43629c9_ctx{
	jule::Ptr<_1c0cb7b2a_comptimeEnumField> _self_;
};
static void __jule_anon_1c43629c9_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c43629c9_ctx>().dealloc(); }
inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c43629c9(jule::Ptr<_1c0da8721_Eval>* _31333_e, jule::Ptr<_1c0c67998_FnCallExpr>* _31348_fc, jule::Ptr<_1c0da69e9_Data>* );
struct __jule_anon_1c4377549_ctx{
	jule::Ptr<_1c0cba5bc_comptimeParam> _self_;
};
static void __jule_anon_1c4377549_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c4377549_ctx>().dealloc(); }
inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c4377549(jule::Ptr<_1c0da8721_Eval>* _43533_e, jule::Ptr<_1c0c67998_FnCallExpr>* _43548_fc, jule::Ptr<_1c0da69e9_Data>* );
struct __jule_anon_1c43794a2_ctx{
	jule::Ptr<_1c0cba5bc_comptimeParam> _self_;
};
static void __jule_anon_1c43794a2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c43794a2_ctx>().dealloc(); }
inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c43794a2(jule::Ptr<_1c0da8721_Eval>* _44233_e, jule::Ptr<_1c0c67998_FnCallExpr>* _44248_fc, jule::Ptr<_1c0da69e9_Data>* );
struct __jule_anon_1c437b40a_ctx{
	jule::Ptr<_1c0cba5bc_comptimeParam> _self_;
};
static void __jule_anon_1c437b40a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c437b40a_ctx>().dealloc(); }
inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c437b40a(jule::Ptr<_1c0da8721_Eval>* _44933_e, jule::Ptr<_1c0c67998_FnCallExpr>* _44948_fc, jule::Ptr<_1c0da69e9_Data>* );
struct __jule_anon_1c437d363_ctx{
	jule::Ptr<_1c0cba5bc_comptimeParam> _self_;
};
static void __jule_anon_1c437d363_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c437d363_ctx>().dealloc(); }
inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c437d363(jule::Ptr<_1c0da8721_Eval>* _45633_e, jule::Ptr<_1c0c67998_FnCallExpr>* _45648_fc, jule::Ptr<_1c0da69e9_Data>* );
struct __jule_anon_1c4410aaa_ctx{
	jule::Ptr<_1c0cc0418_comptimeTypeInfo> _self_;
};
static void __jule_anon_1c4410aaa_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c4410aaa_ctx>().dealloc(); }
inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c4410aaa(jule::Ptr<_1c0da8721_Eval>* _99833_e, jule::Ptr<_1c0c67998_FnCallExpr>* _99848_fc, jule::Ptr<_1c0da69e9_Data>* );
struct __jule_anon_1c4412a13_ctx{
	jule::Ptr<_1c0cc0418_comptimeTypeInfo> _self_;
};
static void __jule_anon_1c4412a13_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c4412a13_ctx>().dealloc(); }
inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c4412a13(jule::Ptr<_1c0da8721_Eval>* _100533_e, jule::Ptr<_1c0c67998_FnCallExpr>* _100548_fc, jule::Ptr<_1c0da69e9_Data>* );
struct __jule_anon_1c441496b_ctx{
	jule::Ptr<_1c0cc0418_comptimeTypeInfo> _self_;
};
static void __jule_anon_1c441496b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c441496b_ctx>().dealloc(); }
inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c441496b(jule::Ptr<_1c0da8721_Eval>* _101233_e, jule::Ptr<_1c0c67998_FnCallExpr>* _101248_fc, jule::Ptr<_1c0da69e9_Data>* );
struct __jule_anon_1c44168c4_ctx{
	jule::Ptr<_1c0cc0418_comptimeTypeInfo> _self_;
};
static void __jule_anon_1c44168c4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c44168c4_ctx>().dealloc(); }
inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c44168c4(jule::Ptr<_1c0da8721_Eval>* _101933_e, jule::Ptr<_1c0c67998_FnCallExpr>* _101948_fc, jule::Ptr<_1c0da69e9_Data>* );
struct __jule_anon_1c441882c_ctx{
	jule::Ptr<_1c0cc0418_comptimeTypeInfo> _self_;
};
static void __jule_anon_1c441882c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c441882c_ctx>().dealloc(); }
inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c441882c(jule::Ptr<_1c0da8721_Eval>* _102633_e, jule::Ptr<_1c0c67998_FnCallExpr>* _102648_fc, jule::Ptr<_1c0da69e9_Data>* );
struct __jule_anon_1c441a785_ctx{
	jule::Ptr<_1c0cc0418_comptimeTypeInfo> _self_;
};
static void __jule_anon_1c441a785_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c441a785_ctx>().dealloc(); }
inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c441a785(jule::Ptr<_1c0da8721_Eval>* _103333_e, jule::Ptr<_1c0c67998_FnCallExpr>* _103348_fc, jule::Ptr<_1c0da69e9_Data>* );
struct __jule_anon_1c441c6dd_ctx{
	jule::Ptr<_1c0cc0418_comptimeTypeInfo> _self_;
};
static void __jule_anon_1c441c6dd_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c441c6dd_ctx>().dealloc(); }
inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c441c6dd(jule::Ptr<_1c0da8721_Eval>* _104033_e, jule::Ptr<_1c0c67998_FnCallExpr>* _104048_fc, jule::Ptr<_1c0da69e9_Data>* );
struct __jule_anon_1c441e646_ctx{
	jule::Ptr<_1c0cc0418_comptimeTypeInfo> _self_;
};
static void __jule_anon_1c441e646_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c441e646_ctx>().dealloc(); }
inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c441e646(jule::Ptr<_1c0da8721_Eval>* _104733_e, jule::Ptr<_1c0c67998_FnCallExpr>* _104748_fc, jule::Ptr<_1c0da69e9_Data>* );
struct __jule_anon_1c4421824_ctx{
	jule::Ptr<_1c0cc0418_comptimeTypeInfo> _self_;
};
static void __jule_anon_1c4421824_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c4421824_ctx>().dealloc(); }
inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c4421824(jule::Ptr<_1c0da8721_Eval>* _105433_e, jule::Ptr<_1c0c67998_FnCallExpr>* _105448_fc, jule::Ptr<_1c0da69e9_Data>* );
struct __jule_anon_1c442377c_ctx{
	jule::Ptr<_1c0cc0418_comptimeTypeInfo> _self_;
};
static void __jule_anon_1c442377c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c442377c_ctx>().dealloc(); }
inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c442377c(jule::Ptr<_1c0da8721_Eval>* _106133_e, jule::Ptr<_1c0c67998_FnCallExpr>* _106148_fc, jule::Ptr<_1c0da69e9_Data>* );
struct __jule_anon_1c44256d5_ctx{
	jule::Ptr<_1c0cc0418_comptimeTypeInfo> _self_;
};
static void __jule_anon_1c44256d5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c44256d5_ctx>().dealloc(); }
inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c44256d5(jule::Ptr<_1c0da8721_Eval>* _106833_e, jule::Ptr<_1c0c67998_FnCallExpr>* _106848_fc, jule::Ptr<_1c0da69e9_Data>* );
struct __jule_anon_1c442763d_ctx{
	jule::Ptr<_1c0cc0418_comptimeTypeInfo> _self_;
};
static void __jule_anon_1c442763d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c442763d_ctx>().dealloc(); }
inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c442763d(jule::Ptr<_1c0da8721_Eval>* _107533_e, jule::Ptr<_1c0c67998_FnCallExpr>* _107548_fc, jule::Ptr<_1c0da69e9_Data>* );
struct __jule_anon_1c4429596_ctx{
	jule::Ptr<_1c0cc0418_comptimeTypeInfo> _self_;
};
static void __jule_anon_1c4429596_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c4429596_ctx>().dealloc(); }
inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c4429596(jule::Ptr<_1c0da8721_Eval>* _108233_e, jule::Ptr<_1c0c67998_FnCallExpr>* _108248_fc, jule::Ptr<_1c0da69e9_Data>* );
struct __jule_anon_1c442b4ee_ctx{
	jule::Ptr<_1c0cc0418_comptimeTypeInfo> _self_;
};
static void __jule_anon_1c442b4ee_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c442b4ee_ctx>().dealloc(); }
inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c442b4ee(jule::Ptr<_1c0da8721_Eval>* _108933_e, jule::Ptr<_1c0c67998_FnCallExpr>* _108948_fc, jule::Ptr<_1c0da69e9_Data>* );
struct __jule_anon_1c442d457_ctx{
	jule::Ptr<_1c0cc0418_comptimeTypeInfo> _self_;
};
static void __jule_anon_1c442d457_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c442d457_ctx>().dealloc(); }
inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c442d457(jule::Ptr<_1c0da8721_Eval>* _109633_e, jule::Ptr<_1c0c67998_FnCallExpr>* _109648_fc, jule::Ptr<_1c0da69e9_Data>* );
struct __jule_anon_1c44303b0_ctx{
	jule::Ptr<_1c0cc0418_comptimeTypeInfo> _self_;
};
static void __jule_anon_1c44303b0_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c44303b0_ctx>().dealloc(); }
inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c44303b0(jule::Ptr<_1c0da8721_Eval>* _110333_e, jule::Ptr<_1c0c67998_FnCallExpr>* _110348_fc, jule::Ptr<_1c0da69e9_Data>* );
struct __jule_anon_1c4432318_ctx{
	jule::Ptr<_1c0cc0418_comptimeTypeInfo> _self_;
};
static void __jule_anon_1c4432318_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c4432318_ctx>().dealloc(); }
inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c4432318(jule::Ptr<_1c0da8721_Eval>* _111033_e, jule::Ptr<_1c0c67998_FnCallExpr>* _111048_fc, jule::Ptr<_1c0da69e9_Data>* );
struct __jule_anon_1c4439144_ctx{
	jule::Ptr<_1c0cc0418_comptimeTypeInfo> _self_;
};
static void __jule_anon_1c4439144_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c4439144_ctx>().dealloc(); }
inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c4439144(jule::Ptr<_1c0da8721_Eval>* _111733_e, jule::Ptr<_1c0c67998_FnCallExpr>* _111748_fc, jule::Ptr<_1c0da69e9_Data>* );
struct __jule_anon_1c443b036_ctx{
	jule::Ptr<_1c0cc0418_comptimeTypeInfo> _self_;
};
static void __jule_anon_1c443b036_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c443b036_ctx>().dealloc(); }
inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c443b036(jule::Ptr<_1c0da8721_Eval>* _112433_e, jule::Ptr<_1c0c67998_FnCallExpr>* _112448_fc, jule::Ptr<_1c0da69e9_Data>* );
struct __jule_anon_1c443ce8e_ctx{
	jule::Ptr<_1c0cc0418_comptimeTypeInfo> _self_;
};
static void __jule_anon_1c443ce8e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c443ce8e_ctx>().dealloc(); }
inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c443ce8e(jule::Ptr<_1c0da8721_Eval>* _113133_e, jule::Ptr<_1c0c67998_FnCallExpr>* _113148_fc, jule::Ptr<_1c0da69e9_Data>* );
struct __jule_anon_1c41dd3c1_ctx{
	jule::Ptr<_1c0cc692a_comptimeValue> _self_;
};
static void __jule_anon_1c41dd3c1_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c41dd3c1_ctx>().dealloc(); }
inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c41dd3c1(jule::Ptr<_1c0da8721_Eval>* _124733_e, jule::Ptr<_1c0c67998_FnCallExpr>* _124748_fc, jule::Ptr<_1c0da69e9_Data>* );
struct __jule_anon_1c41e0390_ctx{
	jule::Ptr<_1c0cc692a_comptimeValue> _self_;
};
static void __jule_anon_1c41e0390_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c41e0390_ctx>().dealloc(); }
inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c41e0390(jule::Ptr<_1c0da8721_Eval>* _125433_e, jule::Ptr<_1c0c67998_FnCallExpr>* _125448_fc, jule::Ptr<_1c0da69e9_Data>* );
struct __jule_anon_1c41e22e8_ctx{
	jule::Ptr<_1c0cc692a_comptimeValue> _self_;
};
static void __jule_anon_1c41e22e8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c41e22e8_ctx>().dealloc(); }
inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c41e22e8(jule::Ptr<_1c0da8721_Eval>* _126133_e, jule::Ptr<_1c0c67998_FnCallExpr>* _126148_fc, jule::Ptr<_1c0da69e9_Data>* );
struct __jule_anon_1c41e4251_ctx{
	jule::Ptr<_1c0cc692a_comptimeValue> _self_;
};
static void __jule_anon_1c41e4251_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c41e4251_ctx>().dealloc(); }
inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c41e4251(jule::Ptr<_1c0da8721_Eval>* _126833_e, jule::Ptr<_1c0c67998_FnCallExpr>* _126848_fc, jule::Ptr<_1c0da69e9_Data>* );
struct __jule_anon_1c41e61a9_ctx{
	jule::Ptr<_1c0cc692a_comptimeValue> _self_;
};
static void __jule_anon_1c41e61a9_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c41e61a9_ctx>().dealloc(); }
inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c41e61a9(jule::Ptr<_1c0da8721_Eval>* _127533_e, jule::Ptr<_1c0c67998_FnCallExpr>* _127548_fc, jule::Ptr<_1c0da69e9_Data>* );
struct __jule_anon_1c41e8112_ctx{
	jule::Ptr<_1c0cc692a_comptimeValue> _self_;
};
static void __jule_anon_1c41e8112_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c41e8112_ctx>().dealloc(); }
inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c41e8112(jule::Ptr<_1c0da8721_Eval>* _128233_e, jule::Ptr<_1c0c67998_FnCallExpr>* _128248_fc, jule::Ptr<_1c0da69e9_Data>* );
struct __jule_anon_1c420ab4c_ctx{
	jule::Ptr<_1c0cca874_comptimeFile> _self_;
};
static void __jule_anon_1c420ab4c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c420ab4c_ctx>().dealloc(); }
inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c420ab4c(jule::Ptr<_1c0da8721_Eval>* _139633_e, jule::Ptr<_1c0c67998_FnCallExpr>* _139648_fc, jule::Ptr<_1c0da69e9_Data>* );
struct __jule_anon_1c420caa5_ctx{
	jule::Ptr<_1c0cca874_comptimeFile> _self_;
};
static void __jule_anon_1c420caa5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c420caa5_ctx>().dealloc(); }
inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c420caa5(jule::Ptr<_1c0da8721_Eval>* _140333_e, jule::Ptr<_1c0c67998_FnCallExpr>* _140348_fc, jule::Ptr<_1c0da69e9_Data>* );
struct __jule_anon_1c420ea0d_ctx{
	jule::Ptr<_1c0cca874_comptimeFile> _self_;
};
static void __jule_anon_1c420ea0d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c420ea0d_ctx>().dealloc(); }
inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c420ea0d(jule::Ptr<_1c0da8721_Eval>* _141033_e, jule::Ptr<_1c0c67998_FnCallExpr>* _141048_fc, jule::Ptr<_1c0da69e9_Data>* );
struct __jule_anon_1c421a530_ctx{
	jule::Ptr<_1c0cced84_constraintChecker> _self_;
};
static void __jule_anon_1c421a530_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c421a530_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1c421a530(jule::Ptr<_1c0d2b078_Sema>* _6421_sema, jule::Slice<jule::Ptr<_1c0dd7101_TypeAlias>>* _6439_generics);
struct __jule_anon_1c46cd66e_ctx{
	jule::Ptr<_1c0c98699_FnIns> _110140_f;
	jule::Ptr<_1c0d2b078_Sema> _self_;
};
static void __jule_anon_1c46cd66e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c46cd66e_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1c46cd66e(jule::Ptr<_1c0d2b078_Sema>* _110543_sema, jule::Slice<jule::Ptr<_1c0dd7101_TypeAlias>>* _110561_generics);
struct __jule_anon_1c572da75_ctx{
	jule::Ptr<_1c0c669a8_NsSelectionExpr> _182934_s;
	jule::Str _18309_path;
};
static void __jule_anon_1c572da75_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c572da75_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1c572da75(jule::Ptr<_1c0d09782_ImportInfo> _183149_imp);
struct __jule_anon_1c5ac8859_ctx{
};
static void __jule_anon_1c5ac8859_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c5ac8859_ctx>().dealloc(); }
inline jule::Str __jule_anon_1c5ac8859(jule::Any* _84325_def);
struct __jule_anon_1c5b5949a_ctx{
	jule::Ptr<_1c0c606d8_NamespaceTypeDecl> _151239_decl;
	jule::Str _15139_path;
};
static void __jule_anon_1c5b5949a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c5b5949a_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1c5b5949a(jule::Ptr<_1c0d09782_ImportInfo> _151449_imp);
struct __jule_anon_1c65cd65a_ctx{
	jule::Ptr<_1c246a95d_scopeCoder> _self_;
	jule::Bool _13513_ref;
};
static void __jule_anon_1c65cd65a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c65cd65a_ctx>().dealloc(); }
inline void __jule_anon_1c65cd65a(void);
struct __jule_anon_1c65d2120_ctx{
	jule::Ptr<_1c246a95d_scopeCoder> _self_;
	jule::Ptr<_1c0cd9476_RangeIter> *_12739_it;
};
static void __jule_anon_1c65d2120_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c65d2120_ctx>().dealloc(); }
inline void __jule_anon_1c65d2120(void);
struct __jule_anon_1c65e15e6_ctx{
	jule::Ptr<_1c246a95d_scopeCoder> _self_;
};
static void __jule_anon_1c65e15e6_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c65e15e6_ctx>().dealloc(); }
inline void __jule_anon_1c65e15e6(void);
struct __jule_anon_1c65e3a6b_ctx{
	jule::Ptr<_1c246a95d_scopeCoder> _self_;
};
static void __jule_anon_1c65e3a6b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c65e3a6b_ctx>().dealloc(); }
inline void __jule_anon_1c65e3a6b(void);
struct __jule_anon_1c6612606_ctx{
	jule::Ptr<_1c246a95d_scopeCoder> _self_;
};
static void __jule_anon_1c6612606_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c6612606_ctx>().dealloc(); }
inline void __jule_anon_1c6612606(void);
struct __jule_anon_1c667d496_ctx{
	jule::Ptr<_1c246a95d_scopeCoder> _self_;
};
static void __jule_anon_1c667d496_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c667d496_ctx>().dealloc(); }
inline void __jule_anon_1c667d496(void);
struct __jule_anon_1c667e7a5_ctx{
	jule::Ptr<_1c246a95d_scopeCoder> _self_;
	jule::Ptr<_1c0cdb852_Match> _63233_m;
};
static void __jule_anon_1c667e7a5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c667e7a5_ctx>().dealloc(); }
inline void __jule_anon_1c667e7a5(void);
struct __jule_anon_1c66ed093_ctx{
	jule::Ptr<_1c246a95d_scopeCoder> _self_;
	jule::Ptr<_1c0c8a768_AnonFnExprModel> _100037_m;
};
static void __jule_anon_1c66ed093_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c66ed093_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1c66ed093(jule::Ptr<_1c0d4dde2_Var> _100472_v);
struct __jule_anon_1c6b1b89b_ctx{
};
static void __jule_anon_1c6b1b89b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c6b1b89b_ctx>().dealloc(); }
inline __jule_tuple_i64__jule_tuple_bool __jule_anon_1c6b1b89b(jule::Str _22565_s, jule::I64 _22573_base);
struct __jule_anon_1c6b242cc_ctx{
};
static void __jule_anon_1c6b242cc_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c6b242cc_ctx>().dealloc(); }
inline __jule_tuple_u64__jule_tuple_bool __jule_anon_1c6b242cc(jule::Str _23366_s, jule::I64 _23374_base);
struct __jule_anon_1c69a886a_ctx{
	jule::Ptr<_1c254b467_ObjectCoder> _self_;
};
static void __jule_anon_1c69a886a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c69a886a_ctx>().dealloc(); }
inline void __jule_anon_1c69a886a(jule::Ptr<_1c0d0c6a8_Package>* _52335_pkg);
struct __jule_anon_1c69a8bbc_ctx{
	jule::Ptr<_1c254b467_ObjectCoder> _self_;
};
static void __jule_anon_1c69a8bbc_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c69a8bbc_ctx>().dealloc(); }
inline void __jule_anon_1c69a8bbc(jule::Ptr<_1c0d0c6a8_Package>* _56535_pkg);
struct __jule_anon_1c6a0e88d_ctx{
	jule::Ptr<_1c254b467_ObjectCoder> _self_;
};
static void __jule_anon_1c6a0e88d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c6a0e88d_ctx>().dealloc(); }
inline void __jule_anon_1c6a0e88d(jule::Ptr<_1c0d0c6a8_Package>* _91435_pkg);
struct __jule_anon_1c6a18ba5_ctx{
	jule::Ptr<_1c254b467_ObjectCoder> _self_;
};
static void __jule_anon_1c6a18ba5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c6a18ba5_ctx>().dealloc(); }
inline void __jule_anon_1c6a18ba5(jule::Ptr<_1c0d0c6a8_Package>* _96235_pkg);
struct __jule_anon_1c6a2d3d4_ctx{
	jule::Ptr<_1c254b467_ObjectCoder> _self_;
	jule::Ptr<_1c0d4dde2_Var> _102427_v;
};
static void __jule_anon_1c6a2d3d4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c6a2d3d4_ctx>().dealloc(); }
inline void __jule_anon_1c6a2d3d4(void);
struct __jule_anon_1c6a304d5_ctx{
	jule::Ptr<_1c254b467_ObjectCoder> _self_;
	jule::Ptr<_1c0d4dde2_Var> _102427_v;
};
static void __jule_anon_1c6a304d5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c6a304d5_ctx>().dealloc(); }
inline void __jule_anon_1c6a304d5(void);
struct __jule_anon_1c6a32c02_ctx{
	jule::Ptr<_1c254b467_ObjectCoder> _self_;
};
static void __jule_anon_1c6a32c02_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c6a32c02_ctx>().dealloc(); }
inline void __jule_anon_1c6a32c02(void);
struct __jule_anon_1c6a33d79_ctx{
	jule::Ptr<_1c254b467_ObjectCoder> _self_;
	jule::Ptr<_1c0d4dde2_Var> _102427_v;
};
static void __jule_anon_1c6a33d79_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c6a33d79_ctx>().dealloc(); }
inline void __jule_anon_1c6a33d79(void);
struct __jule_anon_1c6a799e6_ctx{
	jule::Ptr<_1c254b467_ObjectCoder> _self_;
};
static void __jule_anon_1c6a799e6_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c6a799e6_ctx>().dealloc(); }
inline void __jule_anon_1c6a799e6(jule::Ptr<_1c0d0c6a8_Package>* _133335_pkg);
struct __jule_anon_1c6a7d5aa_ctx{
	jule::Ptr<_1c254b467_ObjectCoder> _self_;
};
static void __jule_anon_1c6a7d5aa_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c6a7d5aa_ctx>().dealloc(); }
inline void __jule_anon_1c6a7d5aa(jule::Ptr<_1c0da1681_SymbolTable>* _134932_file);
struct __jule_anon_1c6a83c97_ctx{
	jule::Ptr<_1c254b467_ObjectCoder> _self_;
};
static void __jule_anon_1c6a83c97_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c6a83c97_ctx>().dealloc(); }
inline void __jule_anon_1c6a83c97(jule::Ptr<_1c0d0c6a8_Package>* _137835_pkg);
struct __jule_anon_1c432e534_ctx{
};
static void __jule_anon_1c432e534_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c432e534_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1c432e534(jule::Ptr<_1c0d09782_ImportInfo> _143028_pkg);
struct __jule_anon_1c69a977d_ctx{
	jule::Ptr<_1c254b467_ObjectCoder> _self_;
};
static void __jule_anon_1c69a977d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c69a977d_ctx>().dealloc(); }
inline void __jule_anon_1c69a977d(jule::Ptr<_1c0da1681_SymbolTable>* _52436_file);
struct __jule_anon_1c69b2830_ctx{
	jule::Ptr<_1c254b467_ObjectCoder> _self_;
};
static void __jule_anon_1c69b2830_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c69b2830_ctx>().dealloc(); }
inline void __jule_anon_1c69b2830(jule::Ptr<_1c0da1681_SymbolTable>* _56636_file);
struct __jule_anon_1c6a107a1_ctx{
	jule::Ptr<_1c254b467_ObjectCoder> _self_;
};
static void __jule_anon_1c6a107a1_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c6a107a1_ctx>().dealloc(); }
inline void __jule_anon_1c6a107a1(jule::Ptr<_1c0da1681_SymbolTable>* _91536_file);
struct __jule_anon_1c6a1a965_ctx{
	jule::Ptr<_1c254b467_ObjectCoder> _self_;
};
static void __jule_anon_1c6a1a965_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c6a1a965_ctx>().dealloc(); }
inline void __jule_anon_1c6a1a965(jule::Ptr<_1c0da1681_SymbolTable>* _96336_file);
struct __jule_anon_1c6a7a909_ctx{
	jule::Ptr<_1c254b467_ObjectCoder> _self_;
};
static void __jule_anon_1c6a7a909_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c6a7a909_ctx>().dealloc(); }
inline void __jule_anon_1c6a7a909(jule::Ptr<_1c0da1681_SymbolTable>* _133436_file);
jule::Array<jule::Array<jule::Str,2>,5> _21b98d981_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str::lit("help", 4),jule::Str::lit("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str::lit("version", 7),jule::Str::lit("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str::lit("tool", 4),jule::Str::lit("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str::lit("julenv", 6),jule::Str::lit("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str::lit("mod", 3),jule::Str::lit("Module management", 17)})});
jule::Str _1c1cd92aa_OutDir = jule::Str::lit("dist", 4);
jule::Str _1c1cd9596_OutName = jule::Str::lit("ir.cpp", 6);
jule::Str _1c1cd984e_Out = jule::Str();
jule::Str _2336c29bc_Compiler = jule::Str();
jule::Str _2336c3db9_CompilerPath = jule::Str();
jule::Str _2336c40c8_CppStd = jule::Str::lit("cpp17", 5);
jule::Bool _2336c4309_Shadowing = false;
jule::Bool _2336c45b2_Transpilation = false;
jule::Bool _2336c486a_Test = false;
jule::Bool _2336c4b23_RC = true;
jule::Bool _2336c4edb_Safety = true;
jule::Bool _2336c522d_Production = false;
jule::Uintptr _234ae1516_STDIN = _234ae1d1e_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551606LLU));
jule::Uintptr _234ae17ad_STDOUT = _234ae1d1e_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551605LLU));
jule::Uintptr _234ae1aaa_STDERR = _234ae1d1e_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551604LLU));
jule::Array<jule::U8,256> _234b9b989_first = jule::Array<jule::U8,256>({});
jule::Array<_234b9c03e_acceptRange,16> _234b9c3d5_acceptRanges = jule::Array<_234b9c03e_acceptRange,16>({_234b9c03e_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_234b9c03e_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_234b9c03e_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_234b9c03e_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_234b9c03e_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Ptr<_21b8269c3_RangeTable> _21b7b4851__L = jule::new_ptr<_21b8269c3_RangeTable>(_21b8269c3_RangeTable{._field_R16=jule::Slice<_21b826022_Range16>::make({_21b826022_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_21b826022_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_21b826022_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_21b826022_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_21b826022_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_21b826022_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_21b826022_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_21b826022_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_21b826022_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_21b826022_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_21b826022_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_21b826022_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_21b826022_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_21b826022_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_21b826022_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_21b826022_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_21b826022_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_21b826022_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_21b826022_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_21b826022_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_21b826022_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_21b826022_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_21b826022_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_21b826022_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_21b826022_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_21b826022_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_21b826022_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_21b826022_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_21b826022_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_21b826022_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_21b826022_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_21b826022_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_21b826022_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_21b826022_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_21b826022_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_21b826022_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_21b826022_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_21b826022_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_21b826022_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_21b826022_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_21b826022_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_21b826022_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_21b826022_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_21b826022_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_21b826022_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_21b826022_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_21b826022_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_21b826022_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_21b826022_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_21b826022_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_21b826022_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_21b826022_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_21b826022_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_21b826022_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_21b826022_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_21b826022_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_21b826022_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_21b826022_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_21b826022_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_21b826022_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_21b826550_Range32>::make({_21b826550_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_21b826550_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_21b826550_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_21b826550_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_21b826550_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_21b826550_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_21b826550_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_21b826550_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_21b826550_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_21b826550_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_21b826550_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_21b826550_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_21b826550_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_21b826550_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_21b826550_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_21b826550_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_21b826550_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_21b826550_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_21b826550_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_21b826550_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_21b826550_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_21b826550_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_21b826550_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_21b826550_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_21b826550_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_21b826550_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_21b826550_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_21b826550_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_21b826550_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_21b826550_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_21b826550_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_21b826550_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_21b826550_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_21b826550_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_21b826550_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_21b826550_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_21b826550_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_21b826550_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_21b826550_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_21b826550_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_21b826550_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_21b826550_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_21b826550_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_21b8269c3_RangeTable> _21b7b5764__LU = jule::new_ptr<_21b8269c3_RangeTable>(_21b8269c3_RangeTable{._field_R16=jule::Slice<_21b826022_Range16>::make({_21b826022_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_21b826022_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_21b826022_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_21b826022_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_21b826022_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_21b826022_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_21b826022_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_21b826022_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_21b826022_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_21b826022_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_21b826022_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_21b826022_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_21b826022_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_21b826022_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_21b826022_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_21b826022_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_21b826022_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_21b826550_Range32>::make({_21b826550_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_21b826550_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_21b826550_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_21b826550_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_21b826550_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_21b826550_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_21b826550_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::U8,256> _21b8204e4__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::Str,4> _21b8b73d2_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str::lit(".h", 2),jule::Str::lit(".hpp", 4),jule::Str::lit(".hxx", 4),jule::Str::lit(".hh", 3)});
jule::Array<jule::Str,3> _21a2d134c_CppExts = jule::Array<jule::Str,3>({jule::Str::lit(".cpp", 4),jule::Str::lit(".cc", 3),jule::Str::lit(".cxx", 4)});
jule::Array<jule::Str,1> _21b8b7e93_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str::lit(".mm", 3)});
jule::Str _21b989ce0_PathStdlib = jule::Str();
jule::Str _21b989eee_PathExec = jule::Str();
jule::Str _21b98a296_PathWd = jule::Str();
jule::Str _21b98a593_PathApi = jule::Str();
jule::Str _21b98a84b_Os = jule::Str::lit("windows", 7);
jule::Str _21b98ab04_Arch = jule::Str::lit("amd64", 5);
jule::Array<jule::U8,32> _20217a8e6__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _20217ae8a__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_2021c009a_floatInfo _2021c0496_f32info = _2021c009a_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_2021c009a_floatInfo _2021c0793_f64info = _2021c009a_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _2021c826d_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _2021ca083_powtab = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _2021cab44_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _2021cae74_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _2021ce1ca_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_2021d2e6a_leftCheat> _2021d3399_leftCheats = jule::Slice<_2021d2e6a_leftCheat>::make({_2021d2e6a_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_2021d2e6a_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("5", 1)},_2021d2e6a_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("25", 2)},_2021d2e6a_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("125", 3)},_2021d2e6a_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("625", 3)},_2021d2e6a_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("3125", 4)},_2021d2e6a_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("15625", 5)},_2021d2e6a_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("78125", 5)},_2021d2e6a_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("390625", 6)},_2021d2e6a_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("1953125", 7)},_2021d2e6a_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("9765625", 7)},_2021d2e6a_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("48828125", 8)},_2021d2e6a_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("244140625", 9)},_2021d2e6a_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("1220703125", 10)},_2021d2e6a_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("6103515625", 10)},_2021d2e6a_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("30517578125", 11)},_2021d2e6a_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("152587890625", 12)},_2021d2e6a_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("762939453125", 12)},_2021d2e6a_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("3814697265625", 13)},_2021d2e6a_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("19073486328125", 14)},_2021d2e6a_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("95367431640625", 14)},_2021d2e6a_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("476837158203125", 15)},_2021d2e6a_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("2384185791015625", 16)},_2021d2e6a_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("11920928955078125", 17)},_2021d2e6a_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("59604644775390625", 17)},_2021d2e6a_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("298023223876953125", 18)},_2021d2e6a_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("1490116119384765625", 19)},_2021d2e6a_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("7450580596923828125", 19)},_2021d2e6a_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("37252902984619140625", 20)},_2021d2e6a_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("186264514923095703125", 21)},_2021d2e6a_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("931322574615478515625", 21)},_2021d2e6a_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("4656612873077392578125", 22)},_2021d2e6a_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("23283064365386962890625", 23)},_2021d2e6a_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("116415321826934814453125", 24)},_2021d2e6a_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("582076609134674072265625", 24)},_2021d2e6a_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("2910383045673370361328125", 25)},_2021d2e6a_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("14551915228366851806640625", 26)},_2021d2e6a_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("72759576141834259033203125", 26)},_2021d2e6a_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("363797880709171295166015625", 27)},_2021d2e6a_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("1818989403545856475830078125", 28)},_2021d2e6a_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("9094947017729282379150390625", 28)},_2021d2e6a_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("45474735088646411895751953125", 29)},_2021d2e6a_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("227373675443232059478759765625", 30)},_2021d2e6a_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("1136868377216160297393798828125", 31)},_2021d2e6a_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("5684341886080801486968994140625", 31)},_2021d2e6a_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("28421709430404007434844970703125", 32)},_2021d2e6a_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("142108547152020037174224853515625", 33)},_2021d2e6a_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("710542735760100185871124267578125", 33)},_2021d2e6a_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("3552713678800500929355621337890625", 34)},_2021d2e6a_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("17763568394002504646778106689453125", 35)},_2021d2e6a_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("88817841970012523233890533447265625", 35)},_2021d2e6a_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("444089209850062616169452667236328125", 36)},_2021d2e6a_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("2220446049250313080847263336181640625", 37)},_2021d2e6a_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("11102230246251565404236316680908203125", 38)},_2021d2e6a_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("55511151231257827021181583404541015625", 38)},_2021d2e6a_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("277555756156289135105907917022705078125", 39)},_2021d2e6a_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("1387778780781445675529539585113525390625", 40)},_2021d2e6a_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("6938893903907228377647697925567626953125", 40)},_2021d2e6a_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("34694469519536141888238489627838134765625", 41)},_2021d2e6a_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("173472347597680709441192448139190673828125", 42)},_2021d2e6a_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str::lit("867361737988403547205962240695953369140625", 42)}});
jule::I64 _2021d9449_BitSize = 0LL;
jule::Str _2021d9746_SysInt = jule::Str();
jule::Str _2021d99ee_SysUint = jule::Str();
jule::Array<jule::I32,5> _1c008e7a4_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::U64,6> _1c008e9b3_UnaryOps = jule::Array<jule::U64,6>({static_cast<jule::U64>(61LLU),static_cast<jule::U64>(60LLU),static_cast<jule::U64>(67LLU),static_cast<jule::U64>(68LLU),static_cast<jule::U64>(62LLU),static_cast<jule::U64>(65LLU)});
jule::Array<jule::U64,18> _1c008ec05_BinOps = jule::Array<jule::U64,18>({static_cast<jule::U64>(60LLU),static_cast<jule::U64>(61LLU),static_cast<jule::U64>(62LLU),static_cast<jule::U64>(63LLU),static_cast<jule::U64>(64LLU),static_cast<jule::U64>(65LLU),static_cast<jule::U64>(66LLU),static_cast<jule::U64>(67LLU),static_cast<jule::U64>(56LLU),static_cast<jule::U64>(57LLU),static_cast<jule::U64>(69LLU),static_cast<jule::U64>(70LLU),static_cast<jule::U64>(53LLU),static_cast<jule::U64>(52LLU),static_cast<jule::U64>(54LLU),static_cast<jule::U64>(55LLU),static_cast<jule::U64>(50LLU),static_cast<jule::U64>(51LLU)});
jule::Array<jule::U64,2> _1c0c43963_PostfixOps = jule::Array<jule::U64,2>({static_cast<jule::U64>(58LLU),static_cast<jule::U64>(59LLU)});
jule::Array<jule::U64,11> _1c0c43c4e_AssignOps = jule::Array<jule::U64,11>({static_cast<jule::U64>(71LLU),static_cast<jule::U64>(40LLU),static_cast<jule::U64>(41LLU),static_cast<jule::U64>(43LLU),static_cast<jule::U64>(42LLU),static_cast<jule::U64>(44LLU),static_cast<jule::U64>(46LLU),static_cast<jule::U64>(45LLU),static_cast<jule::U64>(49LLU),static_cast<jule::U64>(48LLU),static_cast<jule::U64>(47LLU)});
jule::Array<_1c0c51d6c_kindPair,28> _1c0c5229b_keywords = jule::Array<_1c0c51d6c_kindPair,28>({_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("const", 5), ._field_id=static_cast<jule::U64>(6LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("ret", 3), ._field_id=static_cast<jule::U64>(2LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("type", 4), ._field_id=static_cast<jule::U64>(7LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("for", 3), ._field_id=static_cast<jule::U64>(9LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("break", 5), ._field_id=static_cast<jule::U64>(10LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("continue", 8), ._field_id=static_cast<jule::U64>(11LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("in", 2), ._field_id=static_cast<jule::U64>(12LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("if", 2), ._field_id=static_cast<jule::U64>(13LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("else", 4), ._field_id=static_cast<jule::U64>(14LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("use", 3), ._field_id=static_cast<jule::U64>(16LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("goto", 4), ._field_id=static_cast<jule::U64>(18LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("enum", 4), ._field_id=static_cast<jule::U64>(20LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("struct", 6), ._field_id=static_cast<jule::U64>(21LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("co", 2), ._field_id=static_cast<jule::U64>(22LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("match", 5), ._field_id=static_cast<jule::U64>(23LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("self", 4), ._field_id=static_cast<jule::U64>(24LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("trait", 5), ._field_id=static_cast<jule::U64>(25LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("impl", 4), ._field_id=static_cast<jule::U64>(26LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("cpp", 3), ._field_id=static_cast<jule::U64>(27LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("fall", 4), ._field_id=static_cast<jule::U64>(28LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("fn", 2), ._field_id=static_cast<jule::U64>(29LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("let", 3), ._field_id=static_cast<jule::U64>(30LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("unsafe", 6), ._field_id=static_cast<jule::U64>(31LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("mut", 3), ._field_id=static_cast<jule::U64>(32LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("defer", 5), ._field_id=static_cast<jule::U64>(33LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("static", 6), ._field_id=static_cast<jule::U64>(34LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("error", 5), ._field_id=static_cast<jule::U64>(36LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("map", 3), ._field_id=static_cast<jule::U64>(37LLU)}});
jule::Array<_1c0c51d6c_kindPair,46> _1c0c525cb_basicOps = jule::Array<_1c0c51d6c_kindPair,46>({_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("::", 2), ._field_id=static_cast<jule::U64>(19LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit(":=", 2), ._field_id=static_cast<jule::U64>(38LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit(":", 1), ._field_id=static_cast<jule::U64>(8LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit(";", 1), ._field_id=static_cast<jule::U64>(3LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit(",", 1), ._field_id=static_cast<jule::U64>(5LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("...", 3), ._field_id=static_cast<jule::U64>(39LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit(".", 1), ._field_id=static_cast<jule::U64>(17LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("+=", 2), ._field_id=static_cast<jule::U64>(40LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("-=", 2), ._field_id=static_cast<jule::U64>(41LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("*=", 2), ._field_id=static_cast<jule::U64>(42LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("/=", 2), ._field_id=static_cast<jule::U64>(43LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("%=", 2), ._field_id=static_cast<jule::U64>(44LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("<<=", 3), ._field_id=static_cast<jule::U64>(45LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit(">>=", 3), ._field_id=static_cast<jule::U64>(46LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("^=", 2), ._field_id=static_cast<jule::U64>(47LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("&=", 2), ._field_id=static_cast<jule::U64>(48LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("|=", 2), ._field_id=static_cast<jule::U64>(49LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("==", 2), ._field_id=static_cast<jule::U64>(50LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("!=", 2), ._field_id=static_cast<jule::U64>(51LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit(">=", 2), ._field_id=static_cast<jule::U64>(52LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("<=", 2), ._field_id=static_cast<jule::U64>(53LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("&&", 2), ._field_id=static_cast<jule::U64>(54LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("||", 2), ._field_id=static_cast<jule::U64>(55LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("<<", 2), ._field_id=static_cast<jule::U64>(56LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit(">>", 2), ._field_id=static_cast<jule::U64>(57LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("++", 2), ._field_id=static_cast<jule::U64>(58LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("--", 2), ._field_id=static_cast<jule::U64>(59LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("+", 1), ._field_id=static_cast<jule::U64>(60LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("-", 1), ._field_id=static_cast<jule::U64>(61LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("*", 1), ._field_id=static_cast<jule::U64>(62LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("/", 1), ._field_id=static_cast<jule::U64>(63LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("%", 1), ._field_id=static_cast<jule::U64>(64LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("&", 1), ._field_id=static_cast<jule::U64>(65LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("|", 1), ._field_id=static_cast<jule::U64>(66LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("^", 1), ._field_id=static_cast<jule::U64>(67LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("!", 1), ._field_id=static_cast<jule::U64>(68LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("<", 1), ._field_id=static_cast<jule::U64>(69LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit(">", 1), ._field_id=static_cast<jule::U64>(70LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("=", 1), ._field_id=static_cast<jule::U64>(71LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("#", 1), ._field_id=static_cast<jule::U64>(35LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("{", 1), ._field_id=static_cast<jule::U64>(72LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("}", 1), ._field_id=static_cast<jule::U64>(73LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("[", 1), ._field_id=static_cast<jule::U64>(76LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("]", 1), ._field_id=static_cast<jule::U64>(77LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit("(", 1), ._field_id=static_cast<jule::U64>(74LLU)},_1c0c51d6c_kindPair{._field_kind=jule::Str::lit(")", 1), ._field_id=static_cast<jule::U64>(75LLU)}});
jule::Slice<jule::Str> _1c0cce548_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str::lit("signed", 6),jule::Str::lit("unsigned", 8),jule::Str::lit("float", 5),jule::Str::lit("numeric", 7),jule::Str::lit("mutable", 7),jule::Str::lit("immutable", 9),jule::Str::lit("ordered", 7),jule::Str::lit("comparable", 10)});
jule::Ptr<_1c0dd7de3_TypeKind> _1c0ec891d_primNil = jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=nullptr});
jule::Ptr<_1c0dd7de3_TypeKind> _1c0ec8c1a_primVoid = jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(_1c0e04d11_buildPrimType(jule::Str::lit("void", 4)), 20)});
jule::Ptr<_1c0dd7de3_TypeKind> _1c0ec8ec3_primAny = jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(_1c0e04d11_buildPrimType(jule::Str::lit("any", 3)), 20)});
jule::Ptr<_1c0dd7de3_TypeKind> _1c0ec92c0_primStr = jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(_1c0e04d11_buildPrimType(jule::Str::lit("str", 3)), 20)});
jule::Ptr<_1c0dd7de3_TypeKind> _1c0ec9578_primBool = jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(_1c0e04d11_buildPrimType(jule::Str::lit("bool", 4)), 20)});
jule::Ptr<_1c0dd7de3_TypeKind> _1c0ec9831_primUintptr = jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(_1c0e04d11_buildPrimType(jule::Str::lit("uintptr", 7)), 20)});
jule::Ptr<_1c0dd7de3_TypeKind> _1c0ec9ad9_primUint = jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(_1c0e04d11_buildPrimType(jule::Str::lit("uint", 4)), 20)});
jule::Ptr<_1c0dd7de3_TypeKind> _1c0ec9ea2_primInt = jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(_1c0e04d11_buildPrimType(jule::Str::lit("int", 3)), 20)});
jule::Ptr<_1c0dd7de3_TypeKind> _1c0eca1e4_primI8 = jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(_1c0e04d11_buildPrimType(jule::Str::lit("i8", 2)), 20)});
jule::Ptr<_1c0dd7de3_TypeKind> _1c0eca48b_primI16 = jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(_1c0e04d11_buildPrimType(jule::Str::lit("i16", 3)), 20)});
jule::Ptr<_1c0dd7de3_TypeKind> _1c0eca744_primI32 = jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(_1c0e04d11_buildPrimType(jule::Str::lit("i32", 3)), 20)});
jule::Ptr<_1c0dd7de3_TypeKind> _1c0eca9ec_primI64 = jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(_1c0e04d11_buildPrimType(jule::Str::lit("i64", 3)), 20)});
jule::Ptr<_1c0dd7de3_TypeKind> _1c0ecaca5_primU8 = jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(_1c0e04d11_buildPrimType(jule::Str::lit("u8", 2)), 20)});
jule::Ptr<_1c0dd7de3_TypeKind> _1c0ecb05d_primU16 = jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(_1c0e04d11_buildPrimType(jule::Str::lit("u16", 3)), 20)});
jule::Ptr<_1c0dd7de3_TypeKind> _1c0ecb316_primU32 = jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(_1c0e04d11_buildPrimType(jule::Str::lit("u32", 3)), 20)});
jule::Ptr<_1c0dd7de3_TypeKind> _1c0ecb800_primU64 = jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(_1c0e04d11_buildPrimType(jule::Str::lit("u64", 3)), 20)});
jule::Ptr<_1c0dd7de3_TypeKind> _1c0ecba42_primF32 = jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(_1c0e04d11_buildPrimType(jule::Str::lit("f32", 3)), 20)});
jule::Ptr<_1c0dd7de3_TypeKind> _1c0ecbc51_primF64 = jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(_1c0e04d11_buildPrimType(jule::Str::lit("f64", 3)), 20)});
jule::Ptr<_1c1006572_data> _1c1005b7b_emptyData = jule::new_ptr<_1c1006572_data>();
jule::Bool _1c100ab09_Copy = false;
jule::Bool _1c100ae06_Deadcode = false;
jule::Bool _1c100b1ae_Append = false;
jule::Bool _1c100b4ab_Math = false;
jule::Bool _1c100b764_Access = false;
jule::Bool _1c100ba1c_Inline = false;
jule::Bool _1c100bcc5_Ptr = false;
jule::Bool _1c100c18d_Cond = false;
jule::Bool _1c100c3d0_Str = false;
jule::Bool _1c100c677_Slice = false;
jule::Bool _1c100c930_Assign = false;
jule::Bool _1c100cbd8_Exceptional = false;
jule::Bool _1c100ce91_Iter = false;
jule::Bool _1c100d249_Dynamic = false;
jule::Bool _1c1351e94_exprEnabled = false;
jule::Bool _1c1352280_scopeEnabled = false;
jule::Array<jule::U64,12> _1c254025d_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _1c246a1ee_assignArgName = jule::Str::lit("__jule_assign_arg", 17);
jule::Ptr<_21b8269c3_RangeTable> _21b7c2a18_Upper = _21b7b5764__LU;
jule::Ptr<_21b8269c3_RangeTable> _21b7bb748_Letter = _21b7b4851__L;



std::ostream &operator<<(std::ostream &_Stream, _234b9c03e_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline _234c76a64_StrBuilder static__234c76ec6_New(jule::I64 _1519_cap) {
	if ((_1519_cap < 0LL)) {
		jule::panic(jule::Str::lit("std::strings: StrBuilder.New: cap < 0", 37) + jule::Str("\nlocation: std/internal/strings/builder.jule:17:13"));;
	};
	return _234c76a64_StrBuilder{._field_buf=jule::Slice<jule::U8>::alloc(0LL, _1519_cap, 0)};;
}



inline void _234c7727e_Write(_234c76a64_StrBuilder* _self_, jule::Slice<jule::U8> _2524_b) {
	((*(_self_))._field_buf).append(_2524_b);;
}



inline void _234c77537_WriteStr(_234c76a64_StrBuilder* _self_, jule::Str _3027_s) {
	((*(_self_))._field_buf).append(_3027_s);;
}



inline void _234c777e0_WriteByte(_234c76a64_StrBuilder* _self_, jule::U8 _3528_b) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(_3528_b); };
}



inline jule::Str _234c77d2e_Str(_234c76a64_StrBuilder* _self_) {
	jule::Str _5013_s = _234c7637c_StrFromBytes((*(_self_))._field_buf);;
	_234c7802c_Clear(_self_);
	return _5013_s;;
}



inline void _234c7802c_Clear(_234c76a64_StrBuilder* _self_) {
	(*(_self_))._field_buf=nullptr;
}



inline jule::I64 _234c782b3_Len(_234c76a64_StrBuilder* _self_) {
	return (*(_self_))._field_buf.len();;
}



inline jule::Slice<jule::U8> _234c787d0_Buf(_234c76a64_StrBuilder* _self_) {
	return (*(_self_))._field_buf;;
}



inline void _234c78a88_SetBuf(_234c76a64_StrBuilder* _self_, jule::Slice<jule::U8> _7736_buf) {
	(*(_self_))._field_buf=_7736_buf;
}





std::ostream &operator<<(std::ostream &_Stream, _234c76a64_StrBuilder _Src) {
	_Stream << "StrBuilder{";
	_Stream << "buf:" << _Src._field_buf;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _21b826022_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _21b826550_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _21b8269c3_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _21b873ea4_index(_21b873a20_lazyBuff* _self_, jule::I64 _5524_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5524_i];;
	};
	return (*(_self_))._field_path[_5524_i];;
}



inline void _21b87425c_append(_21b873a20_lazyBuff* _self_, jule::U8 _6225_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6225_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len(), 0);
		jule::copy((*(_self_))._field_buff, (*(_self_))._field_path.slice(0LL, (*(_self_))._field_w));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6225_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _21b8744e3_string(_21b873a20_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + _234c760b3_BytesStr((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}





std::ostream &operator<<(std::ostream &_Stream, _21b873a20_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _234b095c8_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_234b095c8_DirEntry>>> static__21b8768ad_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_234b095c8_DirEntry>> __jule_func_result;
	jule::Slice<jule::U16> _169_utf16Path = _234ab8059_UTF16FromStr(_21b8752c4_Join(jule::Slice<jule::Str>::make({_1520_path,jule::Str::lit("*", 1)})));;
	WIN32_FIND_DATAW _1713_data = (WIN32_FIND_DATAW){};;
	jule::Uintptr _189_handle = _234ae5a6a_FindFirstFile((&(_169_utf16Path[0LL])), (&(_1713_data)));;
	if ((_189_handle == jule::MAX_U64)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_234b095c8_DirEntry>>>{.result=__jule_func_result};;
	};
	for (;;) {
		{
			jule::Ptr<_234b095c8_DirEntry> _2317_entry = jule::new_ptr<_234b095c8_DirEntry>(_234b095c8_DirEntry{._field_Name=_234ab8631_U16PtrToStr(((jule::U16*)(_1713_data.cFileName))), });;
			(*(_2317_entry))._field_Stat=({
				auto except = static__21b87777c_Of(_21b8752c4_Join(jule::Slice<jule::Str>::make({_1520_path,(*_2317_entry.alloc)._field_Name})));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_234b095c8_DirEntry>>>{.error=except.error};
				} jule::Ptr<_234b0cb92_Status>(nullptr);});
			});
			{ jule::Slice<jule::Ptr<_234b095c8_DirEntry>> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(_2317_entry); };
			if ((_234ae5dde_FindNextFile(_189_handle, (&(_1713_data))) == 0LL)) {
				goto _iter_end_1c3567592;
			};
		}
	_iter_next_1c3567592:;
	}
	_iter_end_1c3567592:;;
	_234ae61a8_FindClose(_189_handle);
	return jule::Exceptional<jule::Slice<jule::Ptr<_234b095c8_DirEntry>>>{.result=__jule_func_result};;
}



inline jule::VoidExceptional static__21b876ade_Create(jule::Str _3922_path) {
	jule::Slice<jule::U16> _449_utf16Path = _234ab8059_UTF16FromStr(_3922_path);;
	if ((!(_234ae376b_CreateDirectory((&(_449_utf16Path[0LL])))))) {
		return jule::VoidExceptional{.error=jule::Any(_234b08e79_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional static__21b876d20_Remove(jule::Str _5322_path) {
	jule::Slice<jule::U16> _549_utf16Path = _234ab8059_UTF16FromStr(_5322_path);;
	if ((!(_234ae3a35_RemoveDirectory((&(_549_utf16Path[0LL])))))) {
		return jule::VoidExceptional{.error=jule::Any(_234b08e79_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}





std::ostream &operator<<(std::ostream &_Stream, _234b0985e_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_234b0aa5d_File> static__234b0ae7b_New(jule::Uintptr _4519_handle) {
	return jule::new_ptr<_234b0aa5d_File>(_234b0aa5d_File{._field_handle=_4519_handle});;
}



inline jule::Exceptional<jule::Ptr<_234b0aa5d_File>> static__234b0b245_Create(jule::Str _5522_path) {
	return static__234ba7b2c_Open(_5522_path, static_cast<jule::I64>(770LL), 438LL);
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__234b0b50e_Read(jule::Str _6720_path) {
	jule::Ptr<_234b0cb92_Status> _689_s = ({
		auto except = static__21b87777c_Of(_6720_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_234b0cb92_Status>(nullptr);});
	});;
	if ((!(_234b0d302_IsReg(_689_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>{.error=jule::Any(static_cast<jule::I64>(14LL), &__jule_any_type0)};
	};
	jule::I64 _729_sz = static_cast<jule::I64>(_234b0d588_Size(_689_s));;
	if ((_729_sz == 0LL)) {
		return jule::Exceptional<jule::Slice<jule::U8>>{.result=jule::Slice<jule::U8>::alloc(0LL, 0LL, 0)};;
	};
	jule::Ptr<_234b0aa5d_File> _7613_f = ({
		auto except = static__234ba7b2c_Open(_6720_path, static_cast<jule::I64>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_234b0aa5d_File>(nullptr);});
	});;
	jule::Slice<jule::U8> _7713_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_234b0d588_Size(_689_s)), static_cast<jule::I64>(_234b0d588_Size(_689_s)), 0);;
	jule::I64 _7813_n = 0LL;;
	for (;;) {
		{
			_7813_n+=({
				auto except = _234ba8633_Read(_7613_f.ptr(), _7713_buff.slice(_7813_n));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
				} 0;});
			});
			if ((_7813_n >= _729_sz)) {
				goto _iter_end_1c3570ed5;
			};
		}
	_iter_next_1c3570ed5:;
	}
	_iter_end_1c3570ed5:;;
	({
		auto except = _234b0c0e2_Close(_7613_f);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::U8>>{.result=_7713_buff.slice(0LL, _7813_n)};;
}



inline jule::VoidExceptional static__234b0b8a5_Write(jule::Str _9421_path, jule::Slice<jule::U8> _9432_data, jule::I64 _9446_perm) {
	jule::Ptr<_234b0aa5d_File> _9513_f = ({
		auto except = static__234ba7b2c_Open(_9421_path, static_cast<jule::I64>(769LL), _9446_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional{.error=std::move(except.error)};
		} jule::Ptr<_234b0aa5d_File>(nullptr);});
	});;
	jule::I64 _9613_n = 0LL;;
	for (;;) {
		{
			_9613_n+=({
				auto except = _234ba82e2_Write(_9513_f.ptr(), _9432_data.slice(_9613_n));
				(except.ok()) ? (except.result) : ({{

					return jule::VoidExceptional{.error=std::move(except.error)};
				} 0;});
			});
			if ((_9613_n >= _9432_data.len())) {
				goto _iter_end_1c3573801;
			};
		}
	_iter_next_1c3573801:;
	}
	_iter_end_1c3573801:;;
	return _234b0c0e2_Close(_9513_f);
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _234b0c0e2_Close(_234b0aa5d_File* _self_) {
	if ((_234ae8661_Close(static_cast<jule::I64>((*(_self_))._field_handle)) == -1LL)) {
		return jule::VoidExceptional{.error=jule::Any(_234b08e79_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::Ptr<_234b0aa5d_File>> static__234ba7b2c_Open(jule::Str _2220_path, jule::I64 _2231_flag, jule::I64 _2244_mode) {
	jule::Slice<jule::U16> _239_utf16Path = _234ab8059_UTF16FromStr(_2220_path);;
	jule::I64 _249_handle = _234ae288b_Wopen((&(_239_utf16Path[0LL])), _2231_flag, _2244_mode);;
	if ((_249_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_234b0aa5d_File>>{.error=jule::Any(_234b08e79_getLastFsError(), &__jule_any_type0)};
	};
	return jule::Exceptional<jule::Ptr<_234b0aa5d_File>>{.result=static__234b0ae7b_New(static_cast<jule::Uintptr>(_249_handle))};;
}



inline jule::VoidExceptional static__234ba7d5d_Remove(jule::Str _3522_path) {
	jule::Slice<jule::U16> _369_utf16Path = _234ab8059_UTF16FromStr(_3522_path);;
	if ((!(_234ae34a2_DeleteFile((&(_369_utf16Path[0LL])))))) {
		return jule::VoidExceptional{.error=jule::Any(_234b08e79_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _234ba82e2_Write(_234b0aa5d_File* _self_, jule::Slice<jule::U8> _5024_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_5024_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	if (_234ba89a7_isConsoleHandle((*(_self_))._field_handle)) {
		jule::Slice<jule::U16> _5613_utf16Buf = _234ab8059_UTF16FromStr(static_cast<jule::Str>(_5024_buf));;
		jule::Bool _5713_ok = _234ae4eed_WriteConsole((*(_self_))._field_handle, (&(_5613_utf16Buf[0LL])), _5613_utf16Buf.len(), &(__jule_func_result), nullptr);;
		if ((!(_5713_ok))) {
			return jule::Exceptional<jule::I64>{.error=jule::Any(_234b08e79_getLastFsError(), &__jule_any_type0)};
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	_234ba69a5_HandleRW(&(_5024_buf));
	__jule_func_result=_234ae8a18_Write(static_cast<jule::I64>((*(_self_))._field_handle), (&(_5024_buf[0LL])), static_cast<jule::U64>(_5024_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_234b08e79_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}



inline jule::Exceptional<jule::I64> _234ba8633_Read(_234b0aa5d_File* _self_, jule::Slice<jule::U8> _8127_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_8127_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	if (_234ba89a7_isConsoleHandle((*(_self_))._field_handle)) {
		jule::Slice<jule::U16> _8717_codepage = jule::Slice<jule::U16>::alloc(_8127_buf.len(), _8127_buf.len(), 0);;
		jule::Bool _8813_ok = _234ae54d7_ReadConsole((*(_self_))._field_handle, (&(_8717_codepage[0LL])), _8127_buf.len(), &(__jule_func_result));;
		if ((!(_8813_ok))) {
			return jule::Exceptional<jule::I64>{.error=jule::Any(_234b08e79_getLastFsError(), &__jule_any_type0)};
		};
		jule::Slice<jule::I32> _9313_runes = _234ab7982_Decode(_8717_codepage.slice(0LL, __jule_func_result));;
		__jule_func_result=0LL;
		{
			auto expr = &(_9313_runes);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c3580599:;
			if (it != expr_end) {
				jule::I32 *_9520_r = it;
				{
					jule::I64 _9617_size = _234b9d87b_RuneLen((*(_9520_r)));;
					if (((__jule_func_result + _9617_size) > _8127_buf.len())) {
						goto _iter_end_1c3580599;
					};
					_234b9dd10_EncodeRune(_8127_buf.slice(__jule_func_result), (*(_9520_r)));
					__jule_func_result+=_9617_size;
				}
				_iter_next_1c3580599:;
				++it;
				goto _iter_begin_1c3580599;
			}
			_iter_end_1c3580599:;
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	_234ba69a5_HandleRW(&(_8127_buf));
	__jule_func_result=_234ae8287_Read(static_cast<jule::I64>((*(_self_))._field_handle), (&(_8127_buf[0LL])), static_cast<jule::U64>(_8127_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_234b08e79_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}





std::ostream &operator<<(std::ostream &_Stream, _234b0aa5d_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _234b0d06b_IsDir(_234b0cb92_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL));;
}



inline jule::Bool _234b0d302_IsReg(_234b0cb92_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(2LL)) == static_cast<jule::I64>(2LL));;
}



inline jule::U64 _234b0d588_Size(_234b0cb92_Status* _self_) {
	return (*(_self_))._field_size;;
}



inline jule::Exceptional<jule::Ptr<_234b0cb92_Status>> static__21b87777c_Of(jule::Str _1218_path) {
	if ((_1218_path).empty()) {
		return jule::Exceptional<jule::Ptr<_234b0cb92_Status>>{.error=jule::Any(static_cast<jule::I64>(4LL), &__jule_any_type0)};
	};
	jule::Slice<jule::U16> _169_utf16Path = _234ab8059_UTF16FromStr(_1218_path);;
	struct _stat _1713_handle = (struct _stat){};;
	jule::I64 _189_code = _234ae245c_Wstat((&(_169_utf16Path[0LL])), (&(_1713_handle)));;
	if ((_189_code == -1LL)) {
		return jule::Exceptional<jule::Ptr<_234b0cb92_Status>>{.error=jule::Any(_234b08e79_getLastFsError(), &__jule_any_type0)};
	};
	jule::Ptr<_234b0cb92_Status> _2213_stat = jule::new_ptr<_234b0cb92_Status>();;
	(*_2213_stat.alloc)._field_size=_1713_handle.st_size;
	if (((_1713_handle.st_mode & 16384LLU) == 16384LLU)) {
		(*_2213_stat.alloc)._field_mode|=static_cast<jule::I64>(1LL);
	} else if (((_1713_handle.st_mode & 32768LLU) == 32768LLU)) {
		(*_2213_stat.alloc)._field_mode|=static_cast<jule::I64>(2LL);
	};
	return jule::Exceptional<jule::Ptr<_234b0cb92_Status>>{.result=_2213_stat};;
}





std::ostream &operator<<(std::ostream &_Stream, _234b0cb92_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _21b986913_cmdAttrs _Src) {
	_Stream << "cmdAttrs{";
	_Stream << "hProcess:" << _Src._field_hProcess << ", ";
	_Stream << "hThread:" << _Src._field_hThread;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _21b8c54de_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2021c009a_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2021c0c27_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2021d2e6a_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2021ca3b3_set(_2021d3982_decimal* _self_, jule::Slice<jule::U8> _23822_s) {
	jule::Bool __jule_func_result = false;
	jule::I64 _23913_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_23913_i >= _23822_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23822_s[_23913_i] == '+')) {
			_case_begin_1c320a994:;
			{
				(_23913_i)++;
			}
		}
		else if ((_23822_s[_23913_i] == '-')) {
			_case_begin_1c320aa82:;
			{
				(*(_self_))._field_neg=true;
				(_23913_i)++;
			}
		}
		_match_end_1c320a90b:;
	};
	jule::Bool _25613_sawdot = false;;
	jule::Bool _25713_sawdigits = false;;
	for (; (_23913_i < _23822_s.len()); (_23913_i)++) {
		{
			{
				
				if ((_23822_s[_23913_i] == '_')) {
					_case_begin_1c320c4ac:;
					{
						goto _iter_next_1c320bd6e;
					}
				}
				else if ((_23822_s[_23913_i] == '.')) {
					_case_begin_1c320c556:;
					{
						if (_25613_sawdot) {
							return __jule_func_result;;
						};
						_25613_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1c320bd6e;
					}
				}
				else if ((('0' <= _23822_s[_23913_i]) && (_23822_s[_23913_i] <= '9'))) {
					_case_begin_1c320c5bc:;
					{
						_25713_sawdigits=true;
						if (((_23822_s[_23913_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1c320bd6e;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23822_s[_23913_i];
							((*(_self_))._field_nd)++;
						} else if ((_23822_s[_23913_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1c320bd6e;
					}
				}
				_match_end_1c320c38b:;
			};
			goto _iter_end_1c320bd6e;
		}
	_iter_next_1c320bd6e:;
	}
	_iter_end_1c320bd6e:;;
	if ((!(_25713_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_25613_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_23913_i < _23822_s.len()) && (_2021c58db_lower(_23822_s[_23913_i]) == 'e'))) {
		(_23913_i)++;
		if ((_23913_i >= _23822_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _30217_esign = 1LL;;
		if ((_23822_s[_23913_i] == '+')) {
			(_23913_i)++;
		} else if ((_23822_s[_23913_i] == '-')) {
			(_23913_i)++;
			_30217_esign=-1LL;
		};
		if ((((_23913_i >= _23822_s.len()) || (_23822_s[_23913_i] < '0')) || (_23822_s[_23913_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _31217_e = 0LL;;
		for (; ((_23913_i < _23822_s.len()) && ((('0' <= _23822_s[_23913_i]) && (_23822_s[_23913_i] <= '9')) || (_23822_s[_23913_i] == '_'))); (_23913_i)++) {
			{
				if ((_23822_s[_23913_i] == '_')) {
					goto _iter_next_1c3212924;
				};
				if ((_31217_e < 10000LL)) {
					_31217_e=(((_31217_e * 10LL) + static_cast<jule::I64>(_23822_s[_23913_i])) - '0');
				};
			}
		_iter_next_1c3212924:;
		}
		_iter_end_1c3212924:;;
		(*(_self_))._field_dp+=(_31217_e * _30217_esign);
	};
	if ((_23913_i != _23822_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _2021ca704_floatBits(_2021d3982_decimal* _self_, _2021c009a_floatInfo* _33229_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _33313_exp = 0LL;;
	jule::U64 _33413_mant = static_cast<jule::U64>(0LLU);;
	if (((*(_self_))._field_nd == 0LL)) {
		_33413_mant=0LLU;
		_33313_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_1c38cb120;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_1c38c9bbd;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_33413_mant=0LLU;
		_33313_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_1c38cb120;
	};
	_33313_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I64 _35917_n = 0LL;;
			if (((*(_self_))._field_dp >= _2021ca083_powtab.len())) {
				_35917_n=27LL;
			} else {
				_35917_n=_2021ca083_powtab[(*(_self_))._field_dp];
			};
			_2021d40e2_shift(_self_, (-(_35917_n)));
			_33313_exp+=_35917_n;
		}
	_iter_next_1c3219112:;
	}
	_iter_end_1c3219112:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I64 _36917_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _2021ca083_powtab.len())) {
				_36917_n=27LL;
			} else {
				_36917_n=_2021ca083_powtab[(-((*(_self_))._field_dp))];
			};
			_2021d40e2_shift(_self_, _36917_n);
			_33313_exp-=_36917_n;
		}
	_iter_next_1c32199e7:;
	}
	_iter_end_1c32199e7:;;
	(_33313_exp)--;
	if ((_33313_exp < ((*(_33229_flt))._field_bias + 1LL))) {
		jule::I64 _38613_n = (((*(_33229_flt))._field_bias + 1LL) - _33313_exp);;
		_2021d40e2_shift(_self_, (-(_38613_n)));
		_33313_exp+=_38613_n;
	};
	if (((_33313_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
		goto _julec_label_1c38c9bbd;
	};
	_2021d40e2_shift(_self_, static_cast<jule::I64>((1LL + (*(_33229_flt))._field_mantbits)));
	_33413_mant=_2021d4b92_roundedInteger(_self_);
	if ((_33413_mant == (2LLU << (*(_33229_flt))._field_mantbits))) {
		_33413_mant>>=1LLU;
		(_33313_exp)++;
		if (((_33313_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
			goto _julec_label_1c38c9bbd;
		};
	};
	if (((_33413_mant & (1LLU << (*(_33229_flt))._field_mantbits)) == 0LLU)) {
		_33313_exp=(*(_33229_flt))._field_bias;
	};
	goto _julec_label_1c38cb120;
	_julec_label_1c38c9bbd:;
	_33413_mant=0LLU;
	_33313_exp=static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << (*(_33229_flt))._field_expbits) - 1LLU) + static_cast<jule::U64>((*(_33229_flt))._field_bias)));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_1c38cb120:;
	jule::U64 _42213_bits = (_33413_mant & ((1LLU << (*(_33229_flt))._field_mantbits) - 1LLU));;
	_42213_bits|=(static_cast<jule::U64>(((_33313_exp - (*(_33229_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) << (*(_33229_flt))._field_mantbits);
	if ((*(_self_))._field_neg) {
		_42213_bits|=((1LLU << (*(_33229_flt))._field_mantbits) << (*(_33229_flt))._field_expbits);
	};
	__jule_func_result.__jule_result_arg0 = _42213_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _2021d3d39_assign(_2021d3982_decimal* _self_, jule::U64 _15129_v) {
	jule::Array<jule::U8,24> _15217_buf = jule::Array<jule::U8,24>(0);;
	jule::I64 _15513_n = 0LL;;
	while ((_15129_v > 0LLU)) {
		{
			jule::U64 _15713_v1 = (_15129_v / 10LLU);;
			_15129_v-=(10LLU * _15713_v1);
			_15217_buf[_15513_n]=static_cast<jule::U8>((_15129_v + '0'));
			(_15513_n)++;
			_15129_v=_15713_v1;
		}
	_iter_next_1c38ce0ce:;
	}
	_iter_end_1c38ce0ce:;;
	(*(_self_))._field_nd=0LL;
	(_15513_n)--;
	for (; (_15513_n >= 0LL); (_15513_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_15217_buf[_15513_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1c38ce8b5:;
	}
	_iter_end_1c38ce8b5:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_2021d52d0_trim(_self_);
}



inline void _2021d40e2_shift(_2021d3982_decimal* _self_, jule::I64 _17628_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1c38d1b92:;
		}
		else if ((_17628_k > 0LL)) {
			_case_begin_1c38d1c3b:;
			{
				while ((_17628_k > 60LL)) {
					{
						_2021d5d2a_leftShift(_self_, 60LLU);
						_17628_k-=60LL;
					}
				_iter_next_1c38d281e:;
				}
				_iter_end_1c38d281e:;;
				_2021d5d2a_leftShift(_self_, static_cast<jule::U64>(_17628_k));
			}
		}
		else if ((_17628_k < 0LL)) {
			_case_begin_1c38d1ca2:;
			{
				while ((_17628_k < -60LL)) {
					{
						_2021d55bb_rightShift(_self_, 60LLU);
						_17628_k+=60LL;
					}
				_iter_next_1c38d3567:;
				}
				_iter_end_1c38d3567:;;
				_2021d55bb_rightShift(_self_, static_cast<jule::U64>((-(_17628_k))));
			}
		}
		_match_end_1c38d1a3d:;
	};
}



inline void _2021d439a_roundDown(_2021d3982_decimal* _self_, jule::I64 _19628_nd) {
	if (((_19628_nd < 0LL) || (_19628_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_19628_nd;
	_2021d52d0_trim(_self_);
}



inline void _2021d4653_roundUp(_2021d3982_decimal* _self_, jule::I64 _20526_nd) {
	if (((_20526_nd < 0LL) || (_20526_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I64 _21113_i = (_20526_nd - 1LL);;
	for (; (_21113_i >= 0LL); (_21113_i)--) {
		{
			jule::U8 _21313_c = (*(_self_))._field_d[_21113_i];;
			if ((_21313_c < '9')) {
				((*(_self_))._field_d[_21113_i])++;
				(*(_self_))._field_nd=(_21113_i + 1LL);
				return;;
			};
		}
	_iter_next_1c38d5c84:;
	}
	_iter_end_1c38d5c84:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _2021d490b_round(_2021d3982_decimal* _self_, jule::I64 _23224_nd) {
	if (((_23224_nd < 0LL) || (_23224_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_2021d619e_shouldRoundUp(_self_, _23224_nd)) {
		_2021d4653_roundUp(_self_, _23224_nd);
	} else {
		_2021d439a_roundDown(_self_, _23224_nd);
	};
}



inline jule::U64 _2021d4b92_roundedInteger(_2021d3982_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I64 _24913_i = 0LL;;
	jule::U64 _25013_n = static_cast<jule::U64>(0LLU);;
	for (; ((_24913_i < (*(_self_))._field_dp) && (_24913_i < (*(_self_))._field_nd)); (_24913_i)++) {
		{
			_25013_n=((_25013_n * 10LLU) + static_cast<jule::U64>(((*(_self_))._field_d[_24913_i] - '0')));
		}
	_iter_next_1c38d86b0:;
	}
	_iter_end_1c38d86b0:;;
	for (; (_24913_i < (*(_self_))._field_dp); (_24913_i)++) {
		{
			_25013_n*=10LLU;
		}
	_iter_next_1c38d9e64:;
	}
	_iter_end_1c38d9e64:;;
	if (_2021d619e_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_25013_n)++;
	};
	return _25013_n;;
}





std::ostream &operator<<(std::ostream &_Stream, _2021d3982_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2021e617b_Const> static__2021e65bb_NewI64(jule::I64 _1622_x) {
	return jule::new_ptr<_2021e617b_Const>(_2021e617b_Const{._field_data=jule::Any(_1622_x, &__jule_any_type1)});;
}



inline jule::Ptr<_2021e617b_Const> static__2021e6885_NewU64(jule::U64 _1922_x) {
	return jule::new_ptr<_2021e617b_Const>(_2021e617b_Const{._field_data=jule::Any(_1922_x, &__jule_any_type2)});;
}



inline jule::Ptr<_2021e617b_Const> static__2021e6b4e_NewBool(jule::Bool _2223_x) {
	return jule::new_ptr<_2021e617b_Const>(_2021e617b_Const{._field_data=jule::Any(_2223_x, &__jule_any_type3)});;
}



inline jule::Ptr<_2021e617b_Const> static__2021e6e18_NewStr(jule::Str _2522_x) {
	return jule::new_ptr<_2021e617b_Const>(_2021e617b_Const{._field_data=jule::Any(_2522_x, &__jule_any_type4)});;
}



inline jule::Ptr<_2021e617b_Const> static__2021e71d2_NewF64(jule::F64 _2822_x) {
	return jule::new_ptr<_2021e617b_Const>(_2021e617b_Const{._field_data=jule::Any(_2822_x, &__jule_any_type5)});;
}



inline jule::Ptr<_2021e617b_Const> static__2021e73e1_NewNil(void) {
	return jule::new_ptr<_2021e617b_Const>(_2021e617b_Const{._field_data=nullptr});;
}



inline jule::I64 _2021e7a51_ReadI64(_2021e617b_Const* _self_) {
	if ((!(_2021ea14c_IsI64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1);;
}



inline jule::U64 _2021e7cd7_ReadU64(_2021e617b_Const* _self_) {
	if ((!(_2021ea3d3_IsU64(_self_)))) {
		return 0LLU;;
	};
	return (*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2);;
}



inline jule::Bool _2021e806d_ReadBool(_2021e617b_Const* _self_) {
	if ((!(_2021ea669_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type3);;
}



inline jule::Str _2021e8304_ReadStr(_2021e617b_Const* _self_) {
	if ((!(_2021ea900_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type4);;
}



inline jule::F64 _2021e858a_ReadF64(_2021e617b_Const* _self_) {
	if ((!(_2021eab86_IsF64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5);;
}



inline jule::I64 _2021e8821_AsI64(_2021e617b_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1c3951daa:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::I64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1c3951b79:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1c3951be0:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1c3951717:;
			{
				return 0LL;;
			}
		}
		_match_end_1c39516b2:;
	};
}



inline jule::U64 _2021e8aa7_AsU64(_2021e617b_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1c395265d:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::U64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1c3953472:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1c39534d8:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1c39518e3:;
			{
				return 0LLU;;
			}
		}
		_match_end_1c395188d:;
	};
}



inline jule::F64 _2021e8d3d_AsF64(_2021e617b_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1c3954e9b:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::F64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1c3953e56:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1c3954c6a:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else {
			_case_begin_1c39532c9:;
			{
				return 0LL;;
			}
		}
		_match_end_1c3953274:;
	};
}



inline void _2021e90e6_SetI64(_2021e617b_Const* _self_, jule::I64 _13825_x) {
	(*(_self_))._field_data=jule::Any(_13825_x, &__jule_any_type1);
}



inline void _2021e939e_SetU64(_2021e617b_Const* _self_, jule::U64 _14125_x) {
	(*(_self_))._field_data=jule::Any(_14125_x, &__jule_any_type2);
}



inline void _2021e9657_SetBool(_2021e617b_Const* _self_, jule::Bool _14426_x) {
	(*(_self_))._field_data=jule::Any(_14426_x, &__jule_any_type3);
}



inline void _2021e9910_SetStr(_2021e617b_Const* _self_, jule::Str _14725_x) {
	(*(_self_))._field_data=jule::Any(_14725_x, &__jule_any_type4);
}



inline void _2021e9bb8_SetF64(_2021e617b_Const* _self_, jule::F64 _15025_x) {
	(*(_self_))._field_data=jule::Any(_15025_x, &__jule_any_type5);
}



inline jule::Bool _2021ea14c_IsI64(_2021e617b_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1c395880c:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c3958a82:;
			{
				return false;;
			}
		}
		_match_end_1c3958a2c:;
	};
}



inline jule::Bool _2021ea3d3_IsU64(_2021e617b_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1c39594bc:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c3958cc4:;
			{
				return false;;
			}
		}
		_match_end_1c3958c6e:;
	};
}



inline jule::Bool _2021ea669_IsBool(_2021e617b_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1c3959e18:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c3959797:;
			{
				return false;;
			}
		}
		_match_end_1c3959742:;
	};
}



inline jule::Bool _2021ea900_IsStr(_2021e617b_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1c395a864:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c395a1e3:;
			{
				return false;;
			}
		}
		_match_end_1c395a18d:;
	};
}



inline jule::Bool _2021eab86_IsF64(_2021e617b_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1c395b2b0:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c395ab3e:;
			{
				return false;;
			}
		}
		_match_end_1c395aad9:;
	};
}



inline jule::Bool _2021eae1c_IsNil(_2021e617b_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _2021eb59e_And(_2021e617b_Const* _self_, _2021e617b_Const _23818_x) {
	{
		
		if ((_2021ea669_IsBool(_self_) && _2021ea669_IsBool(&_23818_x))) {
			_case_begin_1c3960506:;
			{
				return (_2021e806d_ReadBool(_self_) && _2021e806d_ReadBool(&_23818_x));;
			}
		}
		else {
			_case_begin_1c3960490:;
			{
				return false;;
			}
		}
		_match_end_1c39600b6:;
	};
}



inline jule::Bool _2021eb8e0_Or(_2021e617b_Const* _self_, _2021e617b_Const _24917_x) {
	{
		
		if ((_2021ea669_IsBool(_self_) && _2021ea669_IsBool(&_24917_x))) {
			_case_begin_1c3961815:;
			{
				return (_2021e806d_ReadBool(_self_) || _2021e806d_ReadBool(&_24917_x));;
			}
		}
		else {
			_case_begin_1c3960eb8:;
			{
				return false;;
			}
		}
		_match_end_1c3960db9:;
	};
}



inline jule::Bool _2021ebc31_Eq(_2021e617b_Const* _self_, _2021e617b_Const _26017_x) {
	{
		
		if (_2021eae1c_IsNil(_self_)) {
			_case_begin_1c3962b46:;
			{
				return _2021eae1c_IsNil(&_26017_x);;
			}
		}
		else if (_2021ea669_IsBool(_self_)) {
			_case_begin_1c3962bac:;
			{
				return (_2021ea669_IsBool(&_26017_x) && (_2021e806d_ReadBool(_self_) == _2021e806d_ReadBool(&_26017_x)));;
			}
		}
		else if (_2021ea900_IsStr(_self_)) {
			_case_begin_1c3962c23:;
			{
				return (_2021ea900_IsStr(&_26017_x) && (_2021e8304_ReadStr(_self_) == _2021e8304_ReadStr(&_26017_x)));;
			}
		}
		else if (_2021ea14c_IsI64(_self_)) {
			_case_begin_1c3962c9a:;
			{
				return (_2021e7a51_ReadI64(_self_) == _2021e8821_AsI64(&_26017_x));;
			}
		}
		else if (_2021ea3d3_IsU64(_self_)) {
			_case_begin_1c3962d22:;
			{
				return (_2021e7cd7_ReadU64(_self_) == _2021e8aa7_AsU64(&_26017_x));;
			}
		}
		else if (_2021eab86_IsF64(_self_)) {
			_case_begin_1c3962e76:;
			{
				return (_2021e858a_ReadF64(_self_) == _2021e8d3d_AsF64(&_26017_x));;
			}
		}
		else {
			_case_begin_1c3962272:;
			{
				return false;;
			}
		}
		_match_end_1c3962173:;
	};
}



inline jule::Bool _2021ec072_Lt(_2021e617b_Const* _self_, _2021e617b_Const _28717_x) {
	{
		
		if (_2021ea900_IsStr(_self_)) {
			_case_begin_1c39667d7:;
			{
				return (_2021ea900_IsStr(&_28717_x) && (_2021e8304_ReadStr(_self_) < _2021e8304_ReadStr(&_28717_x)));;
			}
		}
		else if (_2021ea14c_IsI64(_self_)) {
			_case_begin_1c396684d:;
			{
				return (_2021e7a51_ReadI64(_self_) < _2021e8821_AsI64(&_28717_x));;
			}
		}
		else if (_2021ea3d3_IsU64(_self_)) {
			_case_begin_1c39668b4:;
			{
				return (_2021e7cd7_ReadU64(_self_) < _2021e8aa7_AsU64(&_28717_x));;
			}
		}
		else if (_2021eab86_IsF64(_self_)) {
			_case_begin_1c396693b:;
			{
				return (_2021e858a_ReadF64(_self_) < _2021e8d3d_AsF64(&_28717_x));;
			}
		}
		else {
			_case_begin_1c3963592:;
			{
				return false;;
			}
		}
		_match_end_1c3963493:;
	};
}



inline jule::Bool _2021ec3b3_LtEq(_2021e617b_Const* _self_, _2021e617b_Const _31019_x) {
	{
		
		if (_2021ea900_IsStr(_self_)) {
			_case_begin_1c3969477:;
			{
				return (_2021ea900_IsStr(&_31019_x) && (_2021e8304_ReadStr(_self_) <= _2021e8304_ReadStr(&_31019_x)));;
			}
		}
		else if (_2021ea14c_IsI64(_self_)) {
			_case_begin_1c39694dd:;
			{
				return (_2021e7a51_ReadI64(_self_) <= _2021e8821_AsI64(&_31019_x));;
			}
		}
		else if (_2021ea3d3_IsU64(_self_)) {
			_case_begin_1c3969554:;
			{
				return (_2021e7cd7_ReadU64(_self_) <= _2021e8aa7_AsU64(&_31019_x));;
			}
		}
		else if (_2021eab86_IsF64(_self_)) {
			_case_begin_1c39695cb:;
			{
				return (_2021e858a_ReadF64(_self_) <= _2021e8d3d_AsF64(&_31019_x));;
			}
		}
		else {
			_case_begin_1c3967134:;
			{
				return false;;
			}
		}
		_match_end_1c3967035:;
	};
}



inline jule::Bool _2021ec704_Gt(_2021e617b_Const* _self_, _2021e617b_Const _33317_x) {
	{
		
		if (_2021ea900_IsStr(_self_)) {
			_case_begin_1c396c117:;
			{
				return (_2021ea900_IsStr(&_33317_x) && (_2021e8304_ReadStr(_self_) > _2021e8304_ReadStr(&_33317_x)));;
			}
		}
		else if (_2021ea14c_IsI64(_self_)) {
			_case_begin_1c396c17d:;
			{
				return (_2021e7a51_ReadI64(_self_) > _2021e8821_AsI64(&_33317_x));;
			}
		}
		else if (_2021ea3d3_IsU64(_self_)) {
			_case_begin_1c396c1e4:;
			{
				return (_2021e7cd7_ReadU64(_self_) > _2021e8aa7_AsU64(&_33317_x));;
			}
		}
		else if (_2021eab86_IsF64(_self_)) {
			_case_begin_1c396c26b:;
			{
				return (_2021e858a_ReadF64(_self_) > _2021e8d3d_AsF64(&_33317_x));;
			}
		}
		else {
			_case_begin_1c3969cc4:;
			{
				return false;;
			}
		}
		_match_end_1c3969bc5:;
	};
}



inline jule::Bool _2021eca45_GtEq(_2021e617b_Const* _self_, _2021e617b_Const _35619_x) {
	{
		
		if (_2021ea900_IsStr(_self_)) {
			_case_begin_1c396eca7:;
			{
				return (_2021ea900_IsStr(&_35619_x) && (_2021e8304_ReadStr(_self_) >= _2021e8304_ReadStr(&_35619_x)));;
			}
		}
		else if (_2021ea14c_IsI64(_self_)) {
			_case_begin_1c396ed1d:;
			{
				return (_2021e7a51_ReadI64(_self_) >= _2021e8821_AsI64(&_35619_x));;
			}
		}
		else if (_2021ea3d3_IsU64(_self_)) {
			_case_begin_1c396ed84:;
			{
				return (_2021e7cd7_ReadU64(_self_) >= _2021e8aa7_AsU64(&_35619_x));;
			}
		}
		else if (_2021eab86_IsF64(_self_)) {
			_case_begin_1c396ee0b:;
			{
				return (_2021e858a_ReadF64(_self_) >= _2021e8d3d_AsF64(&_35619_x));;
			}
		}
		else {
			_case_begin_1c396c964:;
			{
				return false;;
			}
		}
		_match_end_1c396c865:;
	};
}



inline jule::Bool _2021ecd86_Add(_2021e617b_Const* _self_, _2021e617b_Const _37722_x) {
	{
		
		if (_2021ea900_IsStr(_self_)) {
			_case_begin_1c3972947:;
			{
				if ((!(_2021ea900_IsStr(&_37722_x)))) {
					return false;;
				};
				_2021e9910_SetStr(_self_, (_2021e8304_ReadStr(_self_) + _2021e8304_ReadStr(&_37722_x)));
			}
		}
		else if (_2021eab86_IsF64(_self_)) {
			_case_begin_1c39729ad:;
			{
				_2021e9bb8_SetF64(_self_, (_2021e858a_ReadF64(_self_) + _2021e8d3d_AsF64(&_37722_x)));
			}
		}
		else if (_2021ea14c_IsI64(_self_)) {
			_case_begin_1c3972a24:;
			{
				if (_2021eab86_IsF64(&_37722_x)) {
					_2021e9bb8_SetF64(_self_, (_2021e8d3d_AsF64(_self_) + _2021e858a_ReadF64(&_37722_x)));
				} else {
					_2021e90e6_SetI64(_self_, (_2021e7a51_ReadI64(_self_) + _2021e8821_AsI64(&_37722_x)));
				};
			}
		}
		else if (_2021ea3d3_IsU64(_self_)) {
			_case_begin_1c3972a9b:;
			{
				if (_2021eab86_IsF64(&_37722_x)) {
					_2021e9bb8_SetF64(_self_, (_2021e8d3d_AsF64(_self_) + _2021e858a_ReadF64(&_37722_x)));
				} else {
					_2021e939e_SetU64(_self_, (_2021e7cd7_ReadU64(_self_) + _2021e8aa7_AsU64(&_37722_x)));
				};
			}
		}
		else {
			_case_begin_1c3970604:;
			{
				return false;;
			}
		}
		_match_end_1c3970505:;
	};
	return true;;
}



inline jule::Bool _2021ed1c7_Sub(_2021e617b_Const* _self_, _2021e617b_Const _40622_x) {
	{
		
		if (_2021eab86_IsF64(_self_)) {
			_case_begin_1c39776a5:;
			{
				_2021e9bb8_SetF64(_self_, (_2021e858a_ReadF64(_self_) - _2021e8d3d_AsF64(&_40622_x)));
			}
		}
		else if (_2021ea14c_IsI64(_self_)) {
			_case_begin_1c397771b:;
			{
				if (_2021eab86_IsF64(&_40622_x)) {
					_2021e9bb8_SetF64(_self_, (_2021e8d3d_AsF64(_self_) - _2021e858a_ReadF64(&_40622_x)));
				} else {
					_2021e90e6_SetI64(_self_, (_2021e7a51_ReadI64(_self_) - _2021e8821_AsI64(&_40622_x)));
				};
			}
		}
		else if (_2021ea3d3_IsU64(_self_)) {
			_case_begin_1c3977782:;
			{
				if (_2021eab86_IsF64(&_40622_x)) {
					_2021e9bb8_SetF64(_self_, (_2021e8d3d_AsF64(_self_) - _2021e858a_ReadF64(&_40622_x)));
				} else {
					_2021e939e_SetU64(_self_, (_2021e7cd7_ReadU64(_self_) - _2021e8aa7_AsU64(&_40622_x)));
				};
			}
		}
		else {
			_case_begin_1c3976d8b:;
			{
				return false;;
			}
		}
		_match_end_1c3976cc0:;
	};
	return true;;
}



inline jule::Bool _2021ed518_Mul(_2021e617b_Const* _self_, _2021e617b_Const _43022_x) {
	{
		
		if (_2021eab86_IsF64(_self_)) {
			_case_begin_1c397b511:;
			{
				_2021e9bb8_SetF64(_self_, (_2021e858a_ReadF64(_self_) * _2021e8d3d_AsF64(&_43022_x)));
			}
		}
		else if (_2021ea14c_IsI64(_self_)) {
			_case_begin_1c397b577:;
			{
				if (_2021eab86_IsF64(&_43022_x)) {
					_2021e9bb8_SetF64(_self_, (_2021e8d3d_AsF64(_self_) * _2021e858a_ReadF64(&_43022_x)));
				} else {
					_2021e90e6_SetI64(_self_, (_2021e7a51_ReadI64(_self_) * _2021e8821_AsI64(&_43022_x)));
				};
			}
		}
		else if (_2021ea3d3_IsU64(_self_)) {
			_case_begin_1c397b5dd:;
			{
				if (_2021eab86_IsF64(&_43022_x)) {
					_2021e9bb8_SetF64(_self_, (_2021e8d3d_AsF64(_self_) * _2021e858a_ReadF64(&_43022_x)));
				} else {
					_2021e939e_SetU64(_self_, (_2021e7cd7_ReadU64(_self_) * _2021e8aa7_AsU64(&_43022_x)));
				};
			}
		}
		else {
			_case_begin_1c397aaa4:;
			{
				return false;;
			}
		}
		_match_end_1c397a9d8:;
	};
	return true;;
}



inline jule::Bool _2021ed859_Div(_2021e617b_Const* _self_, _2021e617b_Const _45822_x) {
	{
		
		if (_2021eab86_IsF64(_self_)) {
			_case_begin_1c398036c:;
			{
				jule::F64 _46113_l = _2021e8d3d_AsF64(&_45822_x);;
				if ((_46113_l == 0LL)) {
					return false;;
				};
				_2021e9bb8_SetF64(_self_, jule::div(_2021e858a_ReadF64(_self_),_46113_l));
			}
		}
		else if (_2021ea14c_IsI64(_self_)) {
			_case_begin_1c39803d3:;
			{
				jule::F64 _46713_l = _2021e8d3d_AsF64(&_45822_x);;
				if ((_46713_l == 0LL)) {
					return false;;
				};
				_2021e9bb8_SetF64(_self_, jule::div(_2021e8d3d_AsF64(_self_),_46713_l));
			}
		}
		else if (_2021ea3d3_IsU64(_self_)) {
			_case_begin_1c3980449:;
			{
				jule::F64 _47313_l = _2021e8d3d_AsF64(&_45822_x);;
				if ((_47313_l == 0LL)) {
					return false;;
				};
				_2021e9bb8_SetF64(_self_, jule::div(_2021e8d3d_AsF64(_self_),_47313_l));
			}
		}
		else {
			_case_begin_1c397e910:;
			{
				return false;;
			}
		}
		_match_end_1c397e844:;
	};
	return true;;
}



inline jule::Bool _2021edb9a_Mod(_2021e617b_Const* _self_, _2021e617b_Const _48722_x) {
	{
		
		if (_2021ea14c_IsI64(_self_)) {
			_case_begin_1c3dab402:;
			{
				jule::I64 _49013_l = _2021e8821_AsI64(&_48722_x);;
				if ((_49013_l == 0LL)) {
					return false;;
				};
				_2021e90e6_SetI64(_self_, jule::mod(_2021e7a51_ReadI64(_self_),_49013_l));
			}
		}
		else if (_2021ea3d3_IsU64(_self_)) {
			_case_begin_1c39842e9:;
			{
				jule::U64 _49613_l = _2021e8aa7_AsU64(&_48722_x);;
				if ((_49613_l == 0LLU)) {
					return false;;
				};
				_2021e939e_SetU64(_self_, jule::mod(_2021e7cd7_ReadU64(_self_),_49613_l));
			}
		}
		else {
			_case_begin_1c3984261:;
			{
				return false;;
			}
		}
		_match_end_1c3984184:;
	};
	return true;;
}



inline jule::Bool _2021ededb_BitwiseAnd(_2021e617b_Const* _self_, _2021e617b_Const _50929_x) {
	{
		
		if (_2021ea14c_IsI64(_self_)) {
			_case_begin_1c3dae04d:;
			{
				_2021e90e6_SetI64(_self_, (_2021e7a51_ReadI64(_self_) & _2021e8821_AsI64(&_50929_x)));
			}
		}
		else if (_2021ea3d3_IsU64(_self_)) {
			_case_begin_1c3dae0e7:;
			{
				_2021e939e_SetU64(_self_, (_2021e7cd7_ReadU64(_self_) & _2021e8aa7_AsU64(&_50929_x)));
			}
		}
		else {
			_case_begin_1c3dadec6:;
			{
				return false;;
			}
		}
		_match_end_1c3dadde9:;
	};
	return true;;
}



inline jule::Bool _2021ee32c_BitwiseOr(_2021e617b_Const* _self_, _2021e617b_Const _52328_x) {
	{
		
		if (_2021ea14c_IsI64(_self_)) {
			_case_begin_1c3db0cca:;
			{
				_2021e90e6_SetI64(_self_, (_2021e7a51_ReadI64(_self_) | _2021e8821_AsI64(&_52328_x)));
			}
		}
		else if (_2021ea3d3_IsU64(_self_)) {
			_case_begin_1c3db0d74:;
			{
				_2021e939e_SetU64(_self_, (_2021e7cd7_ReadU64(_self_) | _2021e8aa7_AsU64(&_52328_x)));
			}
		}
		else {
			_case_begin_1c3db0c53:;
			{
				return false;;
			}
		}
		_match_end_1c3db0b54:;
	};
	return true;;
}



inline jule::Bool _2021ee66d_Xor(_2021e617b_Const* _self_, _2021e617b_Const _53722_x) {
	{
		
		if (_2021ea14c_IsI64(_self_)) {
			_case_begin_1c3db2a57:;
			{
				_2021e90e6_SetI64(_self_, (_2021e7a51_ReadI64(_self_) ^ _2021e8821_AsI64(&_53722_x)));
			}
		}
		else if (_2021ea3d3_IsU64(_self_)) {
			_case_begin_1c3db2b01:;
			{
				_2021e939e_SetU64(_self_, (_2021e7cd7_ReadU64(_self_) ^ _2021e8aa7_AsU64(&_53722_x)));
			}
		}
		else {
			_case_begin_1c3db29d0:;
			{
				return false;;
			}
		}
		_match_end_1c3db28d1:;
	};
	return true;;
}



inline jule::Bool _2021ee9ae_Lshift(_2021e617b_Const* _self_, _2021e617b_Const _55125_x) {
	{
		
		if (_2021ea14c_IsI64(_self_)) {
			_case_begin_1c3db47d4:;
			{
				jule::I64 _55413_l = _2021e8821_AsI64(_self_);;
				if ((_55413_l < 0LL)) {
					jule::U64 _55617_r = _2021e8aa7_AsU64(&_55125_x);;
					_2021e90e6_SetI64(_self_, (_55413_l << _55617_r));
				} else {
					_202200196_lshiftUnsig(_self_, &(_55125_x));
				};
			}
		}
		else if (_2021ea3d3_IsU64(_self_)) {
			_case_begin_1c3db487d:;
			{
				_202200196_lshiftUnsig(_self_, &(_55125_x));
			}
		}
		else {
			_case_begin_1c3db475c:;
			{
				return false;;
			}
		}
		_match_end_1c3db465d:;
	};
	return true;;
}



inline jule::Bool _2021eed00_Rshift(_2021e617b_Const* _self_, _2021e617b_Const _57125_x) {
	{
		
		if (_2021ea14c_IsI64(_self_)) {
			_case_begin_1c3db6d03:;
			{
				jule::I64 _57413_l = _2021e8821_AsI64(_self_);;
				if ((_57413_l < 0LL)) {
					jule::U64 _57617_r = _2021e8aa7_AsU64(&_57125_x);;
					_2021e90e6_SetI64(_self_, (_57413_l >> _57617_r));
				} else {
					_2022004c6_rshiftUnsig(_self_, &(_57125_x));
				};
			}
		}
		else if (_2021ea3d3_IsU64(_self_)) {
			_case_begin_1c3db6d9c:;
			{
				_2022004c6_rshiftUnsig(_self_, &(_57125_x));
			}
		}
		else {
			_case_begin_1c3db6c7b:;
			{
				return false;;
			}
		}
		_match_end_1c3db6b7c:;
	};
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _2021e617b_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1c0c49804_Prec(_1c0c49480_Token* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(57LLU) || _match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1c3e22eb3:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1c3e229b8:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(71LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1c3e22a2e:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1c3e23029:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1c3e230a1:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1c3e224e0:;
			{
				return 0LLU;;
			}
		}
		_match_end_1c3e228ec:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c49480_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline void _1c0c50134_Fill(_1c0c4ec16_File* _self_, jule::Slice<jule::U8> _1727_data) {
	(*(_self_))._field_Data=_1727_data;
}



inline jule::Str _1c0c503ba_Dir(_1c0c4ec16_File* _self_) {
	return _21b875eb7_Dir((*(_self_))._field_Path);;
}



inline jule::Str _1c0c50651_Name(_1c0c4ec16_File* _self_) {
	return _21b875add_Base((*(_self_))._field_Path);;
}



inline jule::Str _1c0c50c28_GetRow(_1c0c4ec16_File* _self_, jule::I64 _3821_row) {
	jule::I64 _3913_n = 0LL;;
	jule::I64 _4013_lineStart = 0LL;;
	jule::I64 _4113_i = 0LL;;
	for (; (_4113_i < (*(_self_))._field_Data.len()); (_4113_i)++) {
		{
			if (((*(_self_))._field_Data[_4113_i] != '\n')) {
				goto _iter_next_1c3e2887b;
			};
			(_3913_n)++;
			if ((_3913_n == _3821_row)) {
				return static_cast<jule::Str>((*(_self_))._field_Data.slice(_4013_lineStart, _4113_i));;
			};
			_4013_lineStart=(_4113_i + 1LL);
		}
	_iter_next_1c3e2887b:;
	}
	_iter_end_1c3e2887b:;;
	return jule::Str();;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c4ec16_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c51d6c_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1c0c583d4_pushErr(_1c0c57d51_lex* _self_, jule::Str _44726_fmt, jule::Slice<jule::Any> _44739_args) {
	{ jule::Slice<_21b8c54de_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1c0c52b1a_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44726_fmt, _44739_args)); };
}



inline void _1c0c58945_lex(_1c0c57d51_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_1c0c5ab67_newLine(_self_);
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len())) {
		{
			jule::Ptr<_1c0c49480_Token> _46217_token = _1c0c5c152_token(_self_);;
			if (((*(_46217_token))._field_Id != static_cast<jule::U64>(0LLU))) {
				{ jule::Slice<jule::Ptr<_1c0c49480_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_46217_token); };
			};
		}
	_iter_next_1c3e57998:;
	}
	_iter_end_1c3e57998:;;
}



inline jule::Str _1c0c58c86_id(_1c0c57d51_lex* _self_, jule::Slice<jule::U8>* _47122_ln) {
	if (((*(_47122_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _4759_r;
	jule::I64 _47516_i;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _234b9cc21_DecodeRune((*(_47122_ln)));
		_4759_r = __jule_assign_result.__jule_result_arg0;
		_47516_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_4759_r != '_') && (!(_1c0c4cbae_IsLetter(_4759_r))))) {
		return jule::Str();;
	};
	while ((_47516_i < (*(_47122_ln)).len())) {
		{
			jule::I32 _48113_pr;
			jule::I64 _48117_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _234b9cc21_DecodeRune((*(_47122_ln)).slice(_47516_i));
				_48113_pr = __jule_assign_result.__jule_result_arg0;
				_48117_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_48113_pr != '_') && (!(_1c0c4d132_IsDecimal(static_cast<jule::U8>(_48113_pr))))) && (!(_1c0c4cbae_IsLetter(_48113_pr))))) {
				(*(_self_))._field_pos+=_47516_i;
				return static_cast<jule::Str>((*(_47122_ln)).slice(0LL, _47516_i));;
			};
			_47516_i+=_48117_n;
		}
	_iter_next_1c3e5b161:;
	}
	_iter_end_1c3e5b161:;;
	(*(_self_))._field_pos+=(*(_47122_ln)).len();
	return static_cast<jule::Str>((*(_47122_ln)));;
}



inline jule::Slice<jule::U8> _1c0c5901c_resume(_1c0c57d51_lex* _self_) {
	jule::I64 _49613_i = (*(_self_))._field_pos;;
	for (; (_49613_i < (*((*(_self_))._field_file))._field_Data.len()); (_49613_i)++) {
		{
			jule::I32 _49813_r = static_cast<jule::I32>((*(*(_self_))._field_file.alloc)._field_Data[_49613_i]);;
			if (_1c0c4c6b4_IsSpace(_49813_r)) {
				;
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _49813_r };
					
					if (_match_expr == '\n') {
						_case_begin_1c3e60374:;
						{
							_1c0c5ab67_newLine(_self_);
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1c3e600aa:;
						{
							(*(_self_))._field_column+=8LL;
						}
					}
					else {
						_case_begin_1c3e5ec69:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1c3e5ee9a:;
				};
				goto _iter_next_1c3e5d020;
			};
			jule::I64 _51317_j = _49613_i;;
			for (; (_51317_j < (*(*(_self_))._field_file.alloc)._field_Data.len()); (_51317_j)++) {
				{
					if (((*(*(_self_))._field_file.alloc)._field_Data[_51317_j] == '\n')) {
						goto _iter_end_1c3e5dc68;
					};
				}
			_iter_next_1c3e5dc68:;
			}
			_iter_end_1c3e5dc68:;;
			return (*(*(_self_))._field_file.alloc)._field_Data.slice(_49613_i, _51317_j);;
		}
	_iter_next_1c3e5d020:;
	}
	_iter_end_1c3e5d020:;;
	return nullptr;;
}



inline void _1c0c592c5_lexLineComment(_1c0c57d51_lex* _self_, jule::Ptr<_1c0c49480_Token>* _52438_token) {
	jule::I64 _5259_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _52813_r = (*(*(_self_))._field_file.alloc)._field_Data[(*(_self_))._field_pos];;
			if (((_52813_r == '\n') || (_52813_r == '\r'))) {
				goto _iter_end_1c3e62ed1;
			};
		}
	_iter_next_1c3e62ed1:;
	}
	_iter_end_1c3e62ed1:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		(*((*(_52438_token))))._field_Id=static_cast<jule::U64>(15LLU);
		(*((*(_52438_token))))._field_Kind=static_cast<jule::Str>((*(*(_self_))._field_file.alloc)._field_Data.slice(_5259_start, (*(_self_))._field_pos));
	};
}



inline void _1c0c5957d_lexRangeComment(_1c0c57d51_lex* _self_, jule::Ptr<_1c0c49480_Token>* _53939_token) {
	jule::I64 _5409_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _54313_r = (*(*(_self_))._field_file.alloc)._field_Data[(*(_self_))._field_pos];;
			if ((_54313_r == '\r')) {
				goto _iter_next_1c3e66644;
			};
			if ((_54313_r == '\n')) {
				_1c0c5ab67_newLine(_self_);
				goto _iter_next_1c3e66644;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*(*(_self_))._field_file.alloc)._field_Data.len()) && (_54313_r == '*')) && ((*(*(_self_))._field_file.alloc)._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					(*((*(_53939_token))))._field_Id=static_cast<jule::U64>(15LLU);
					(*((*(_53939_token))))._field_Kind=static_cast<jule::Str>((*(*(_self_))._field_file.alloc)._field_Data.slice(_5409_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1c3e66644:;
	}
	_iter_end_1c3e66644:;;
	_1c0c583d4_pushErr(_self_, jule::Str::lit("missing block comment close", 27), jule::Slice<jule::Any>());
}



inline jule::Str _1c0c598be_num(_1c0c57d51_lex* _self_, jule::Slice<jule::U8>* _56723_txt) {
	jule::Str __jule_func_result;
	if (((*(_56723_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_1c0c56668_hexNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1c3e6e064;
	};
	__jule_func_result=_1c0c5648c_octalNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1c3e6e064;
	};
	__jule_func_result=_1c0c54c2c_binaryNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1c3e6e064;
	};
	__jule_func_result=_1c0c54963_commonNum(_56723_txt);
	_julec_label_1c3e6e064:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _1c0c59c10_escapeSeq(_1c0c57d51_lex* _self_, jule::Slice<jule::U8>* _58929_txt) {
	jule::Str _59013_seq = jule::Str();;
	if (((*(_58929_txt)).len() < 2LL)) {
		goto _julec_label_1c3e72d37;
	};
	{
		auto &_match_expr{ (*(_58929_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1c3e71011:;
			{
				(*(_self_))._field_pos+=2LL;
				return static_cast<jule::Str>((*(_58929_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1c3e71077:;
			{
				_59013_seq=_1c0c56c84_bigUnicodePointEscape(_58929_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1c3e70b48:;
			{
				_59013_seq=_1c0c5704d_littleUnicodePointEscape(_58929_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1c3e70bae:;
			{
				_59013_seq=_1c0c57317_hexByteEscape(_58929_txt);
			}
		}
		else {
			_case_begin_1c3e70593:;
			{
				_59013_seq=_1c0c575d1_byteEscape(_58929_txt);
			}
		}
		_match_end_1c3e709d3:;
	};
	_julec_label_1c3e72d37:;
	if ((_59013_seq).empty()) {
		((*(_self_))._field_pos)++;
		_1c0c583d4_pushErr(_self_, jule::Str::lit("invalid escape sequence", 23), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_59013_seq.len();
	return _59013_seq;;
}



inline jule::Str _1c0c5a10b_getRune(_1c0c57d51_lex* _self_, jule::Slice<jule::U8>* _61927_txt, jule::Bool _61940_raw) {
	if (((!(_61940_raw)) && ((*(_61927_txt))[0LL] == '\\'))) {
		return _1c0c59c10_escapeSeq(_self_, _61927_txt);;
	};
	jule::I32 _6239_r;
	jule::I64 _62312_n;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _234b9cc21_DecodeRune((*(_61927_txt)));
		_6239_r = __jule_assign_result.__jule_result_arg0;
		_62312_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_62312_n;
	return jule::Str::from_rune(_6239_r);;
}



inline jule::Str _1c0c5a44c_lexRune(_1c0c57d51_lex* _self_, jule::Slice<jule::U8>* _62827_txt) {
	_234c76a64_StrBuilder _62913_run = static__234c76ec6_New(8LL);;
	_234c777e0_WriteByte(&_62913_run, '\'');
	((*(_self_))._field_column)++;
	jule::I64 _63213_n = 0LL;;
	jule::I64 _63313_i = 1LL;;
	for (; (_63313_i < (*(_62827_txt)).len()); (_63313_i)++) {
		{
			if (((*(_62827_txt))[_63313_i] == '\r')) {
				goto _iter_next_1c3e771b0;
			};
			if (((*(_62827_txt))[_63313_i] == '\n')) {
				_1c0c583d4_pushErr(_self_, jule::Str::lit("rune is not finished", 20), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_1c0c5ab67_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _64513_part = (*(_62827_txt)).slice(_63313_i);;
			jule::Str _64613_r = _1c0c5a10b_getRune(_self_, &(_64513_part), false);;
			_234c77537_WriteStr(&_62913_run, _64613_r);
			(*(_self_))._field_column+=_234b9ea14_RuneCountStr(_64613_r);
			if (_64613_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1c3e771b0;
			};
			if ((_64613_r.len() > 1LL)) {
				_63313_i+=(_64613_r.len() - 1LL);
			};
			(_63213_n)++;
		}
	_iter_next_1c3e771b0:;
	}
	_iter_end_1c3e771b0:;;
	if ((_63213_n == 0LL)) {
		_1c0c583d4_pushErr(_self_, jule::Str::lit("rune is cannot empty", 20), jule::Slice<jule::Any>());
	} else if ((_63213_n > 1LL)) {
		_1c0c583d4_pushErr(_self_, jule::Str::lit("rune is should be single", 24), jule::Slice<jule::Any>());
	};
	return _234c77d2e_Str(&_62913_run);;
}



inline jule::Str _1c0c5a6d3_lexStr(_1c0c57d51_lex* _self_) {
	_234c76a64_StrBuilder _66913_s = static__234c76ec6_New(16LL);;
	jule::U8 _6709_mark = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _6729_raw = (_6709_mark == '`');;
	_234c777e0_WriteByte(&_66913_s, _6709_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*(*(_self_))._field_file.alloc)._field_Data.len())) {
		{
			jule::U8 _67713_ch = (*(*(_self_))._field_file.alloc)._field_Data[(*(_self_))._field_pos];;
			if ((_67713_ch == '\r')) {
				goto _iter_next_1c3e7c913;
			};
			if ((_67713_ch == '\n')) {
				_1c0c5ab67_newLine(_self_);
				if ((!(_6729_raw))) {
					_1c0c583d4_pushErr(_self_, jule::Str::lit("string is not finished", 22), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _68917_part = (*(*(_self_))._field_file.alloc)._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _69013_r = _1c0c5a10b_getRune(_self_, &(_68917_part), _6729_raw);;
			_234c77537_WriteStr(&_66913_s, _69013_r);
			(*(_self_))._field_column+=_234b9ea14_RuneCountStr(_69013_r);
			if ((_67713_ch == _6709_mark)) {
				goto _iter_end_1c3e7c913;
			};
		}
	_iter_next_1c3e7c913:;
	}
	_iter_end_1c3e7c913:;;
	return _234c77d2e_Str(&_66913_s);;
}



inline void _1c0c5ab67_newLine(_1c0c57d51_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _1c0c5b1c8_isOp(_1c0c57d51_lex* _self_, jule::Slice<jule::U8>* _71024_txt, jule::Str _71037_kind, jule::U64 _71048_id, jule::Ptr<_1c0c49480_Token>* _71066_t) {
	if ((!(_1c0c52ed3_bytesHasPrefix(_71024_txt, _71037_kind)))) {
		return false;;
	};
	(*((*(_71066_t))))._field_Kind=_71037_kind;
	(*((*(_71066_t))))._field_Id=_71048_id;
	(*(_self_))._field_pos+=_71037_kind.len();
	return true;;
}



inline jule::Bool _1c0c5b5c4_lexBasicOps(_1c0c57d51_lex* _self_, jule::Slice<jule::U8> _72030_txt, jule::Ptr<_1c0c49480_Token>* _72048_tok) {
	{
		auto expr = &(_1c0c525cb_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3e842cc:;
		if (it != expr_end) {
			_1c0c51d6c_kindPair *_72116_pair = it;
			{
				if (_1c0c5b1c8_isOp(_self_, &(_72030_txt), (*(_72116_pair))._field_kind, (*(_72116_pair))._field_id, _72048_tok)) {
					return true;;
				};
			}
			_iter_next_1c3e842cc:;
			++it;
			goto _iter_begin_1c3e842cc;
		}
		_iter_end_1c3e842cc:;
	};
	return false;;
}



inline jule::Bool _1c0c5b9c0_lexId(_1c0c57d51_lex* _self_, jule::Slice<jule::U8>* _72925_txt, jule::Ptr<_1c0c49480_Token>* _72943_t) {
	jule::Str _7309_lex = _1c0c58c86_id(_self_, _72925_txt);;
	if ((_7309_lex).empty()) {
		return false;;
	};
	(*((*(_72943_t))))._field_Kind=_7309_lex;
	(*((*(_72943_t))))._field_Id=static_cast<jule::U64>(1LLU);
	return true;;
}



inline jule::Bool _1c0c5bdbb_lexNum(_1c0c57d51_lex* _self_, jule::Slice<jule::U8>* _73926_txt, jule::Ptr<_1c0c49480_Token>* _73944_t) {
	jule::Str _7409_lex = _1c0c598be_num(_self_, _73926_txt);;
	if ((_7409_lex).empty()) {
		return false;;
	};
	(*((*(_73944_t))))._field_Kind=_7409_lex;
	(*((*(_73944_t))))._field_Id=static_cast<jule::U64>(4LLU);
	return true;;
}



inline jule::Ptr<_1c0c49480_Token> _1c0c5c152_token(_1c0c57d51_lex* _self_) {
	jule::Ptr<_1c0c49480_Token> _75113_t = jule::new_ptr<_1c0c49480_Token>(_1c0c49480_Token{._field_File=(*(_self_))._field_file, ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _7569_txt = _1c0c5901c_resume(_self_);;
	if ((_7569_txt == nullptr)) {
		return _75113_t;;
	};
	(*(_75113_t))._field_Column=(*(_self_))._field_column;
	(*_75113_t.alloc)._field_Row=(*(_self_))._field_row;
	{
		
		if (_1c0c5bdbb_lexNum(_self_, &(_7569_txt), &(_75113_t))) {
			_case_begin_1c3e8b427:;
			{
				goto _match_end_1c3e892e3;
			}
		}
		else if ((_7569_txt[0LL] == '\'')) {
			_case_begin_1c3e8b48d:;
			{
				(*_75113_t.alloc)._field_Kind=_1c0c5a44c_lexRune(_self_, &(_7569_txt));
				(*_75113_t.alloc)._field_Id=static_cast<jule::U64>(4LLU);
				return _75113_t;;
			}
		}
		else if (((_7569_txt[0LL] == '\"') || (_7569_txt[0LL] == '`'))) {
			_case_begin_1c3e8b504:;
			{
				(*_75113_t.alloc)._field_Kind=_1c0c5a6d3_lexStr(_self_);
				(*_75113_t.alloc)._field_Id=static_cast<jule::U64>(4LLU);
				return _75113_t;;
			}
		}
		else if (_1c0c52ed3_bytesHasPrefix(&(_7569_txt), jule::Str::lit("//", 2))) {
			_case_begin_1c3e89e4d:;
			{
				_1c0c592c5_lexLineComment(_self_, &(_75113_t));
				return _75113_t;;
			}
		}
		else if (_1c0c52ed3_bytesHasPrefix(&(_7569_txt), jule::Str::lit("/*", 2))) {
			_case_begin_1c3e89eb4:;
			{
				_1c0c5957d_lexRangeComment(_self_, &(_75113_t));
				return _75113_t;;
			}
		}
		else if (_1c0c5b5c4_lexBasicOps(_self_, _7569_txt, &(_75113_t))) {
			_case_begin_1c3e8a02a:;
			{
				goto _match_end_1c3e892e3;
			}
		}
		else if (_1c0c5b9c0_lexId(_self_, &(_7569_txt), &(_75113_t))) {
			_case_begin_1c3e8a091:;
			{
				{
					auto expr = &(_1c0c5229b_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c3e9000d:;
					if (it != expr_end) {
						_1c0c51d6c_kindPair *_78820_pair = it;
						{
							if (((*(_78820_pair))._field_kind == (*_75113_t.alloc)._field_Kind)) {
								(*_75113_t.alloc)._field_Id=(*(_78820_pair))._field_id;
								goto _iter_end_1c3e9000d;
							};
						}
						_iter_next_1c3e9000d:;
						++it;
						goto _iter_begin_1c3e9000d;
					}
					_iter_end_1c3e9000d:;
				};
			}
		}
		else {
			_case_begin_1c3e89dd7:;
			{
				jule::I32 _79513_r;
				jule::I64 _79516_sz;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _234b9cc21_DecodeRune(_7569_txt);
					_79513_r = __jule_assign_result.__jule_result_arg0;
					_79516_sz = __jule_assign_result.__jule_result_arg1;
				});
				_1c0c583d4_pushErr(_self_, jule::Str::lit("undefined token: @", 18), jule::Slice<jule::Any>::make({jule::Any(_79513_r, &__jule_any_type6)}));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_79516_sz;
				return _75113_t;;
			}
		}
		_match_end_1c3e892e3:;
	};
	(*(_self_))._field_column+=_234b9ea14_RuneCountStr((*_75113_t.alloc)._field_Kind);
	return _75113_t;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c57d51_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c5ca26_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c5d939_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c5dd57_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c5e93a_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c60045_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c6030e_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c606d8_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c609d5_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c60d6a_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c61167_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c0c617c7_IsUnsafe(_1c0c61464_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c61464_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c0c62069_AutoSized(_1c0c61c06_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c61c06_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c62454_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c6282d_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c63c6e_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c64038_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c64643_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c64863_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c64c09_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c650d3_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c65589_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c65d2b_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c66205_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c665ce_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c669a8_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c66d82_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c67338_BinaryExpr _Src) {
	_Stream << "BinaryExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c0c67d1c_Unhandled(_1c0c67998_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1c0c680a3_Ignored(_1c0c67998_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*(*(_self_))._field_Exception.alloc)._field_Deferred);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c67998_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c6848d_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c68cb8_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c6926e_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c69a99_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c6a2c5_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c6ac32_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c6b392_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c6b68e_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c6bb45_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c6c01e_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c6c3e8_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c6c6e5_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c6cd55_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c6d3d8_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c6e2eb_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c6e95b_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c0c7051c_IsSelf(_1c0c70198_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c70198_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c0c7195d_IsAnon(_1c0c715ea_FnDecl* _self_) {
	return (*(_self_))._field_Ident.equal("<anonymous>", 11);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c715ea_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c727a5_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c72b7e_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c0c73762_IsInf(_1c0c733ee_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c733ee_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c0c7408c_IsWhileNext(_1c0c73c29_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c73c29_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c74631_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c74a0a_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c74dd4_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c7538a_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c75764_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c75c1a_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c76457_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c7690d_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c77227_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c77a41_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c77ee7_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c78aa8_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c793d3_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c79a43_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c79d0c_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c7a703_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c7ae40_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Inherits:" << _Src._field_Inherits << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c7b5a0_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c0c829a2_FieldIns> _1c0c7cc55_instance(jule::Ptr<_1c0c7c89d_Field> _self_) {
	return jule::new_ptr<_1c0c829a2_FieldIns>(_1c0c829a2_FieldIns{._field_Decl=_self_, });;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c7c89d_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c7e8b1_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c0c83552_StructIns> _1c0c80c36_instance(jule::Ptr<_1c0c807c4_Struct> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*_self_.alloc)._field_Instances[0LL];;
	};
	jule::Ptr<_1c0c83552_StructIns> _10013_ins = jule::new_ptr<_1c0c83552_StructIns>(_1c0c83552_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_1c0c829a2_FieldIns>>::alloc(0LL, (*_self_.alloc)._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_1c0d4dde2_Var>>::alloc(0LL, (*_self_.alloc)._field_Statics.len()), ._field_Refers=static__1c0c9bb64_new(), });;
	{
		auto expr = &((*_self_.alloc)._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4184bd6:;
		if (it != expr_end) {
			jule::Ptr<_1c0d4dde2_Var> _10721_s = *it;
			{
				(*(_10013_ins))._field_Statics=jule::append((*_10013_ins.alloc)._field_Statics,jule::Slice<jule::Ptr<_1c0d4dde2_Var>>::make({jule::new_ptr<_1c0d4dde2_Var>((*(_10721_s)))}));
			}
			_iter_next_1c4184bd6:;
			++it;
			goto _iter_begin_1c4184bd6;
		}
		_iter_end_1c4184bd6:;
	};
	{
		auto expr = &((*_self_.alloc)._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c41859d9:;
		if (it != expr_end) {
			jule::Ptr<_1c0c7c89d_Field> _11121_f = *it;
			{
				(*_10013_ins.alloc)._field_Fields=jule::append((*_10013_ins.alloc)._field_Fields,jule::Slice<jule::Ptr<_1c0c829a2_FieldIns>>::make({_1c0c7cc55_instance(_11121_f)}));
				if ((((!((*_11121_f.alloc)._field_Mutable)) && ((*((*_11121_f.alloc)._field_Kind))._field_Kind != nullptr)) && _1c0dd9774_Mutable((*(*_11121_f.alloc)._field_Kind.alloc)._field_Kind))) {
					(*_10013_ins.alloc)._field_Mutable=true;
				};
			}
			_iter_next_1c41859d9:;
			++it;
			goto _iter_begin_1c41859d9;
		}
		_iter_end_1c41859d9:;
	};
	if (((*_self_.alloc)._field_Generics.len() == 0LL)) {
		(*_10013_ins.alloc)._field_Methods=(*_self_.alloc)._field_Methods;
	} else {
		(*_10013_ins.alloc)._field_Methods=jule::Slice<jule::Ptr<_1c0c95795_Fn>>::alloc(0LL, (*_self_.alloc)._field_Methods.len());
		{
			auto expr = &((*_self_.alloc)._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c4189724:;
			if (it != expr_end) {
				jule::Ptr<_1c0c95795_Fn> _12225_f = *it;
				{
					jule::Ptr<_1c0c95795_Fn> _12321_fins = jule::new_ptr<_1c0c95795_Fn>((*(_12225_f)));;
					(*_12321_fins.alloc)._field_Instances=nullptr;
					(*_10013_ins.alloc)._field_Methods=jule::append((*_10013_ins.alloc)._field_Methods,jule::Slice<jule::Ptr<_1c0c95795_Fn>>::make({_12321_fins}));
				}
				_iter_next_1c4189724:;
				++it;
				goto _iter_begin_1c4189724;
			}
			_iter_end_1c4189724:;
		};
	};
	return _10013_ins;;
}



inline jule::Ptr<_1c0c83552_StructIns> _1c0c81044_appendInstance(_1c0c807c4_Struct* _self_, jule::Ptr<_1c0c83552_StructIns>* _13438_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4189b64:;
		if (it != expr_end) {
			jule::Ptr<_1c0c83552_StructIns> _14021_ains = *it;
			{
				if (_1c0c841bd_Same(_14021_ains.ptr(), (*(_13438_ins)))) {
					return _14021_ains;;
				};
			}
			_iter_next_1c4189b64:;
			++it;
			goto _iter_begin_1c4189b64;
		}
		_iter_end_1c4189b64:;
	};
	{ jule::Slice<jule::Ptr<_1c0c83552_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13438_ins))); };
	return nullptr;;
}



inline jule::Ptr<_1c0c95795_Fn> _1c0c81440_FindMethod(_1c0c807c4_Struct* _self_, jule::Str _15229_ident, jule::Bool _15241_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c418c0a6:;
		if (it != expr_end) {
			jule::Ptr<_1c0c95795_Fn> _15321_f = *it;
			{
				if ((((*(_15321_f))._field_Statically == _15241_statically) && ((*_15321_f.alloc)._field_Ident == _15229_ident))) {
					return _15321_f;;
				};
			}
			_iter_next_1c418c0a6:;
			++it;
			goto _iter_begin_1c418c0a6;
		}
		_iter_end_1c418c0a6:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0d4dde2_Var> _1c0c81781_FindStatic(_1c0c807c4_Struct* _self_, jule::Str _16329_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c418d629:;
		if (it != expr_end) {
			jule::Ptr<_1c0d4dde2_Var> _16421_v = *it;
			{
				if (((*(_16421_v))._field_Ident == _16329_ident)) {
					return _16421_v;;
				};
			}
			_iter_next_1c418d629:;
			++it;
			goto _iter_begin_1c418d629;
		}
		_iter_end_1c418d629:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0c7c89d_Field> _1c0c81ac2_FindField(_1c0c807c4_Struct* _self_, jule::Str _17428_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4190384:;
		if (it != expr_end) {
			jule::Ptr<_1c0c7c89d_Field> _17521_f = *it;
			{
				if (((*(_17521_f))._field_Ident == _17428_ident)) {
					return _17521_f;;
				};
			}
			_iter_next_1c4190384:;
			++it;
			goto _iter_begin_1c4190384;
		}
		_iter_end_1c4190384:;
	};
	return nullptr;;
}



inline jule::Bool _1c0c81e13_IsImplements(_1c0c807c4_Struct* _self_, jule::Ptr<_1c0ca8a72_Trait> _18427_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4191352:;
		if (it != expr_end) {
			jule::Ptr<_1c0ca8a72_Trait> *_18516_it = it;
			{
				if ((_18427_t == (*(_18516_it)))) {
					return true;;
				};
			}
			_iter_next_1c4191352:;
			++it;
			goto _iter_begin_1c4191352;
		}
		_iter_end_1c4191352:;
	};
	return false;;
}



inline jule::Bool _1c0c82254_IsUses(_1c0c807c4_Struct* _self_, jule::Ptr<_1c0c807c4_Struct> _19421_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4191cd1:;
		if (it != expr_end) {
			jule::Ptr<_1c0c807c4_Struct> *_19516_u = it;
			{
				while ((_19421_s == (*(_19516_u)))) {
					{
						return true;;
					}
				_iter_next_1c41927d7:;
				}
				_iter_end_1c41927d7:;;
			}
			_iter_next_1c4191cd1:;
			++it;
			goto _iter_begin_1c4191cd1;
		}
		_iter_end_1c4191cd1:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c807c4_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c829a2_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c87457_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c87952_BinaryExprModel _Src) {
	_Stream << "BinaryExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c87d2b_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c88359_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c88700_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c889ec_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c89080_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c89932_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c89d0b_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c8a2b2_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c8a768_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Captured:" << _Src._field_Captured << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c8ab42_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c8b0e8_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c8b67b_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c8bc0e_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c8c5a0_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c8c946_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c8cd20_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c8d11c_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c8d4e6_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c8d8c0_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c8dc99_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c8e173_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c8e629_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c8ead0_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c8eea9_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c902a6_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c905a3_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c9097c_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c90d56_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c91230_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c918d4_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c91ac1_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c91d68_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c92165_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c9253e_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c9283b_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c93540_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c0c976ed_ParamIns> _1c0c94156_instance(jule::Ptr<_1c0c93cc1_Param> _self_) {
	return jule::new_ptr<_1c0c976ed_ParamIns>(_1c0c976ed_ParamIns{._field_Decl=_self_, });;
}



inline jule::Bool _1c0c943dc_IsSelf(_1c0c93cc1_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1c0c94673_IsRef(_1c0c93cc1_Param* _self_) {
	return (!((*(_self_))._field_Ident).empty() && ((*(_self_))._field_Ident[0LL] == '&'));;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c93cc1_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c0c95c18_IsVoid(_1c0c95795_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1c0c95e9e_IsMethod(_1c0c95795_Fn* _self_) {
	return ((*(_self_))._field_Owner != nullptr);;
}



inline jule::Bool _1c0c96235_IsEntryPoint(_1c0c95795_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _1c0c964bb_IsInit(_1c0c95795_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _1c0c96752_IsAnon(_1c0c95795_Fn* _self_) {
	return _1c0c4c131_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1c0c969d8_AnyVar(_1c0c95795_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*(*(_self_))._field_Result.alloc)._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1c0c98699_FnIns> _1c0c96c6e_instanceForce(jule::Ptr<_1c0c95795_Fn> _self_) {
	jule::Ptr<_1c0c98699_FnIns> _10113_ins = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_1c0cd763e_Scope>(), ._field_Refers=static__1c0c9bb64_new(), });;
	(*(_10113_ins))._field_Params=jule::Slice<jule::Ptr<_1c0c976ed_ParamIns>>::alloc(0LL, (*(_self_))._field_Params.len());
	{
		auto expr = &((*_self_.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c41a92c1:;
		if (it != expr_end) {
			jule::Ptr<_1c0c93cc1_Param> _10821_p = *it;
			{
				(*_10113_ins.alloc)._field_Params=jule::append((*_10113_ins.alloc)._field_Params,jule::Slice<jule::Ptr<_1c0c976ed_ParamIns>>::make({_1c0c94156_instance(_10821_p)}));
			}
			_iter_next_1c41a92c1:;
			++it;
			goto _iter_begin_1c41a92c1;
		}
		_iter_end_1c41a92c1:;
	};
	if (((*((*_10113_ins.alloc)._field_Decl))._field_Result != nullptr)) {
		(*_10113_ins.alloc)._field_Result=(*((*(*(*_10113_ins.alloc)._field_Decl.alloc)._field_Result.alloc)._field_Kind))._field_Kind;
	};
	return _10113_ins;;
}



inline jule::Ptr<_1c0c98699_FnIns> _1c0c97005_instance(jule::Ptr<_1c0c95795_Fn> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*_self_.alloc)._field_Instances[0LL];;
	};
	return _1c0c96c6e_instanceForce(_self_);;
}



inline jule::Ptr<_1c0c98699_FnIns> _1c0c97313_appendInstance(_1c0c95795_Fn* _self_, jule::Ptr<_1c0c98699_FnIns>* _12938_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_1c0c98699_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_1c0c98699_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c41ae1e9:;
		if (it != expr_end) {
			jule::Ptr<_1c0c98699_FnIns> _14521_ains = *it;
			{
				if (_1c0c9a206_Same(_14521_ains.ptr(), (*(_12938_ins)))) {
					return _14521_ains;;
				};
			}
			_iter_next_1c41ae1e9:;
			++it;
			goto _iter_begin_1c41ae1e9;
		}
		_iter_end_1c41ae1e9:;
	};
	{ jule::Slice<jule::Ptr<_1c0c98699_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c95795_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c0c97a61_Str(_1c0c976ed_ParamIns* _self_) {
	_234c76a64_StrBuilder _16713_s = static__234c76ec6_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Mutable) {
		_234c77537_WriteStr(&_16713_s, jule::Str::lit("mut ", 4));
	};
	if ((*(*(_self_))._field_Decl.alloc)._field_Reference) {
		_234c77537_WriteStr(&_16713_s, jule::Str::lit("&_:", 3));
	};
	if (_1c0c943dc_IsSelf((*(_self_))._field_Decl)) {
		if (_1c0c94673_IsRef((*(_self_))._field_Decl)) {
			_234c777e0_WriteByte(&_16713_s, '&');
		};
		_234c77537_WriteStr(&_16713_s, jule::Str::lit("self", 4));
		return _234c77d2e_Str(&_16713_s);;
	};
	if ((*(*(_self_))._field_Decl.alloc)._field_Variadic) {
		_234c77537_WriteStr(&_16713_s, jule::Str::lit("...", 3));
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_234c77537_WriteStr(&_16713_s, _1c0dd82ab_Str((*(_self_))._field_Kind));
	};
	return _234c77d2e_Str(&_16713_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c976ed_ParamIns _Src) {
	_Stream << _1c0c97a61_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c0c989da_Str(_1c0c98699_FnIns* _self_) {
	;
	return _1c0c9a547_GetKindStr(_self_, false);;
}



inline jule::Bool _1c0c98d2b_Equal(jule::Ptr<_1c0c98699_FnIns> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _21821_other) {
	jule::Ptr<_1c0c98699_FnIns> _2199_f = _1c0ddb831_Fn(_21821_other.ptr());;
	if ((_2199_f == nullptr)) {
		return false;;
	};
	return _1c0c992c1_EqualFn(_self_, &(_2199_f));;
}



inline jule::Bool _1c0c992c1_EqualFn(jule::Ptr<_1c0c98699_FnIns> _self_, jule::Ptr<_1c0c98699_FnIns>* _22924_f) {
	if (((*((*(_self_))._field_Decl))._field_Exceptional != (*(*((*(_22924_f))))._field_Decl.alloc)._field_Exceptional)) {
		return false;;
	};
	if (((*(*_self_.alloc)._field_Decl.alloc)._field_Unsafety != (*(*((*(_22924_f))))._field_Decl.alloc)._field_Unsafety)) {
		return false;;
	};
	if ((_1c0c95c18_IsVoid((*_self_.alloc)._field_Decl) != _1c0c95c18_IsVoid((*((*(_22924_f))))._field_Decl))) {
		return false;;
	};
	jule::Fn<jule::Bool,jule::Ptr<_1c0c976ed_ParamIns>,jule::Ptr<_1c0c976ed_ParamIns>> _2399_checkParams = jule::__new_closure<jule::Bool,jule::Ptr<_1c0c976ed_ParamIns>,jule::Ptr<_1c0c976ed_ParamIns>>((void*)__jule_anon_1c41b9765, jule::Ptr<__jule_anon_1c41b9765_ctx>::make(__jule_anon_1c41b9765_ctx{}).as<jule::Uintptr>(), __jule_anon_1c41b9765_ctx_handler);;
	if (((*((*(_22924_f))))._field_Params.len() != (*_self_.alloc)._field_Params.len())) {
		return false;;
	};
	jule::I64 _27113_i = 0LL;;
	for (; (_27113_i < (*_self_.alloc)._field_Params.len()); (_27113_i)++) {
		{
			if ((!(_2399_checkParams((*_self_.alloc)._field_Params[_27113_i], (*((*(_22924_f))))._field_Params[_27113_i])))) {
				return false;;
			};
		}
	_iter_next_1c41c03a3:;
	}
	_iter_end_1c41c03a3:;;
	if ((!(_1c0c95c18_IsVoid((*_self_.alloc)._field_Decl)))) {
		if ((!(_1c0dd85ec_Equal((*_self_.alloc)._field_Result, (*((*(_22924_f))))._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1c0c99612_equalTrait(jule::Ptr<_1c0c98699_FnIns> _self_, jule::Ptr<_1c0c98699_FnIns>* _28827_other) {
	if (((*((*(_self_))._field_Decl))._field_Public != (*(*((*(_28827_other))))._field_Decl.alloc)._field_Public)) {
		return false;;
	};
	if (((*(*_self_.alloc)._field_Decl.alloc)._field_Ident != (*(*((*(_28827_other))))._field_Decl.alloc)._field_Ident)) {
		return false;;
	};
	if ((!(_1c0c992c1_EqualFn(_self_, _28827_other)))) {
		return false;;
	};
	if (((*(*_self_.alloc)._field_Decl.alloc)._field_Generics.len() != (*(*((*(_28827_other))))._field_Decl.alloc)._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1c0dd7de3_TypeKind>> _1c0c99898_Types(_1c0c98699_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1c41c6123:;
			{
				return nullptr;;
			}
		}
		else if ((_1c0ddc36a_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1c41c6189:;
			{
				return jule::Slice<jule::Ptr<_1c0dd7de3_TypeKind>>::make({(*(_self_))._field_Result});;
			}
		}
		else {
			_case_begin_1c41c5bb1:;
			{
				return (*(_1c0ddc36a_Tup((*(_self_))._field_Result.ptr())))._field_Types;;
			}
		}
		_match_end_1c41c5ab2:;
	};
}



inline jule::Bool _1c0c99b2e_IsBuiltin(_1c0c98699_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1c0c99db5_IsAnon(_1c0c98699_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1c0c96752_IsAnon((*(_self_))._field_Decl)));;
}



inline jule::Bool _1c0c9a206_Same(_1c0c98699_FnIns* _self_, jule::Ptr<_1c0c98699_FnIns> _33119_f) {
	if ((((*(_self_))._field_Decl != (*(_33119_f))._field_Decl) || ((*_33119_f.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c41c9588:;
		if (it != expr_end) {
			jule::I64 _33613_i = it - expr->begin();
			jule::Ptr<_1c0dd650c_InsGeneric> *_33616_g = it;
			{
				jule::Ptr<_1c0dd650c_InsGeneric> _33713_g2 = (*_33119_f.alloc)._field_Generics[_33613_i];;
				if ((((*((*((*(_33616_g))))._field_Kind))._field_BindIdent != (*(*(_33713_g2))._field_Kind.alloc)._field_BindIdent) || (!(_1c0dd85ec_Equal((*(*(_33616_g)).alloc)._field_Kind, (*_33713_g2.alloc)._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1c41c9588:;
			++it;
			_33613_i++;
			goto _iter_begin_1c41c9588;
		}
		_iter_end_1c41c9588:;
	};
	return true;;
}



inline jule::Str _1c0c9a547_GetKindStr(_1c0c98699_FnIns* _self_, jule::Bool _34825_ident) {
	_234c76a64_StrBuilder _34913_s = static__234c76ec6_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Unsafety) {
		_234c77537_WriteStr(&_34913_s, jule::Str::lit("unsafe ", 7));
	};
	_234c77537_WriteStr(&_34913_s, jule::Str::lit("fn", 2));
	if ((_34825_ident && ((*(_self_))._field_Decl != nullptr))) {
		_234c777e0_WriteByte(&_34913_s, ' ');
		_234c77537_WriteStr(&_34913_s, (*(*(_self_))._field_Decl.alloc)._field_Ident);
	};
	_234c777e0_WriteByte(&_34913_s, '(');
	jule::I64 _3639_n = (*(_self_))._field_Params.len();;
	if ((_3639_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c41ce8ac:;
			if (it != expr_end) {
				jule::I64 _36517_i = it - expr->begin();
				jule::Ptr<_1c0c976ed_ParamIns> *_36520_p = it;
				{
					_234c77537_WriteStr(&_34913_s, _1c0c97a61_Str((*(_36520_p)).ptr()));
					if ((_36517_i < ((*(_self_))._field_Params.len() - 1LL))) {
						_234c777e0_WriteByte(&_34913_s, ',');
					};
				}
				_iter_next_1c41ce8ac:;
				++it;
				_36517_i++;
				goto _iter_begin_1c41ce8ac;
			}
			_iter_end_1c41ce8ac:;
		};
	};
	_234c777e0_WriteByte(&_34913_s, ')');
	if ((*(*(_self_))._field_Decl.alloc)._field_Exceptional) {
		_234c777e0_WriteByte(&_34913_s, '!');
	};
	if ((!(_1c0c95c18_IsVoid((*(_self_))._field_Decl)))) {
		_234c777e0_WriteByte(&_34913_s, ':');
		_234c77537_WriteStr(&_34913_s, _1c0dd82ab_Str((*(_self_))._field_Result.ptr()));
	};
	return _234c77d2e_Str(&_34913_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c98699_FnIns _Src) {
	_Stream << _1c0c989da_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1c0c9b878_ReferenceStack> static__1c0c9bb64_new(void) {
	return jule::new_ptr<_1c0c9b878_ReferenceStack>(_1c0c9b878_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL, 10LL)});;
}



inline jule::I64 _1c0c9c060_Len(_1c0c9b878_ReferenceStack* _self_) {
	return (*(_self_))._field_buffer.len();;
}



inline jule::Any _1c0c9c3a1_At(_1c0c9b878_ReferenceStack* _self_, jule::I64 _6821_i) {
	return (*(_self_))._field_buffer[_6821_i];;
}



inline void _1c0c9c659_Push(_1c0c9b878_ReferenceStack* _self_, jule::Any _7327_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_7327_ref); };
}



inline jule::Bool _1c44535c0_Exist(_1c0c9b878_ReferenceStack* _self_, jule::Ptr<_1c0c98699_FnIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4454956:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type7_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1c4454956:;
			++it;
			goto _iter_begin_1c4454956;
		}
		_iter_end_1c4454956:;
	};
	return false;;
}

inline jule::Bool _1c4469927_Exist(_1c0c9b878_ReferenceStack* _self_, jule::Ptr<_1c0d4dde2_Var> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c446ac69:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type8_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1c446ac69:;
			++it;
			goto _iter_begin_1c446ac69;
		}
		_iter_end_1c446ac69:;
	};
	return false;;
}

inline jule::Bool _1c452e756_Exist(_1c0c9b878_ReferenceStack* _self_, jule::Ptr<_1c0c83552_StructIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4530adc:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type9_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1c4530adc:;
			++it;
			goto _iter_begin_1c4530adc;
		}
		_iter_end_1c4530adc:;
	};
	return false;;
}

inline jule::Bool _1c5ac657c_Exist(_1c0c9b878_ReferenceStack* _self_, jule::Ptr<_1c0ca8a72_Trait> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5ac788b:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type10_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1c5ac788b:;
			++it;
			goto _iter_begin_1c5ac788b;
		}
		_iter_end_1c5ac788b:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c9b878_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c9cd85_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline void _1c0ca32db_pushErr(_1c0ca283a_symbolBuilder* _self_, jule::Ptr<_1c0c49480_Token>* _33227_token, jule::Str _33242_fmt, jule::Slice<jule::Any> _33255_args) {
	{ jule::Slice<_21b8c54de_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1c0d28bbe_compilerErr(_33227_token, true, _33242_fmt, _33255_args)); };
}



inline void _1c0ca3a6c_pushSuggestion(_1c0ca283a_symbolBuilder* _self_, jule::Str _34133_fmt, jule::Slice<jule::Any> _34146_args) {
	{
		_1c0d2a275_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _34133_fmt, _34146_args);
	};
}



inline jule::Bool _1c0ca3e68_checkCppUseDeclPath(_1c0ca283a_symbolBuilder* _self_, jule::Ptr<_1c0c77a41_UseDecl>* _34539_decl, jule::Str* _34556_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _3469_ext = _21b87555a_Ext((*(_34556_path)));;
	if (((!(_21b8b81c4_IsValidHeaderExt(_3469_ext))) && (!(_21b8b846b_IsValidCppExt(_3469_ext))))) {
		_1c0ca32db_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("invalid C++ extension: @", 24), jule::Slice<jule::Any>::make({jule::Any(_3469_ext, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_234b0cb92_Status> _3539_info = ({
		auto except = static__21b87777c_Of((*(_34556_path)));
		(except.ok()) ? (except.result) : ({{
			_1c0ca32db_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_34539_decl))))._field_LinkPath, &__jule_any_type4)}));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_234b0cb92_Status>(nullptr);});
	});;
	if (_234b0d06b_IsDir(_3539_info.ptr())) {
		_1c0ca32db_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_34539_decl))))._field_LinkPath, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1c0d09782_ImportInfo> _1c0ca4276_buildCppHeaderImport(_1c0ca283a_symbolBuilder* _self_, jule::Ptr<_1c0c77a41_UseDecl>* _36544_decl) {
	jule::Str _36613_path = (*((*(_36544_decl))))._field_LinkPath;;
	if ((!(_21b8b8081_IsStdHeaderPath((*((*(_36544_decl))))._field_LinkPath)))) {
		_36613_path=_21b8752c4_Join(jule::Slice<jule::Str>::make({_1c0c503ba_Dir((*((*((*(_36544_decl))))._field_Token))._field_File.ptr()),(*((*(_36544_decl))))._field_LinkPath}));
		jule::Bool _37017_ok = _1c0ca3e68_checkCppUseDeclPath(_self_, _36544_decl, &(_36613_path));;
		if ((!(_37017_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21b875824_Abs(_36613_path);
			_36613_path = __jule_assign_result.__jule_result_arg0;
			_37017_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_37017_ok))) {
			_1c0ca32db_pushErr(_self_, &((*((*(_36544_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_36544_decl))))._field_LinkPath, &__jule_any_type4)}));
		};
	};
	return jule::new_ptr<_1c0d09782_ImportInfo>(_1c0d09782_ImportInfo{._field_Token=(*((*(_36544_decl))))._field_Token, ._field_Path=_36613_path, ._field_LinkPath=(*((*(_36544_decl))))._field_LinkPath, ._field_Ident=jule::Str(), ._field_Binded=true, ._field_Std=false, ._field_Package=nullptr, });;
}



inline jule::Ptr<_1c0d09782_ImportInfo> _1c0ca45b7_buildStdImport(_1c0ca283a_symbolBuilder* _self_, jule::Ptr<_1c0c77a41_UseDecl>* _39338_decl) {
	jule::Str _39513_path = (*((*(_39338_decl))))._field_LinkPath.slice(5LL);;
	_39513_path=_21b870ec3_Replace(_39513_path, jule::Str::lit("::", 2), jule::Str::lit("\\", 1), -1LL);
	_39513_path=_21b8752c4_Join(jule::Slice<jule::Str>::make({_21b989ce0_PathStdlib,_39513_path}));
	jule::Bool _39815_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21b875824_Abs(_39513_path);
		_39513_path = __jule_assign_result.__jule_result_arg0;
		_39815_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_39815_ok))) {
		_1c0ca32db_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_234b0cb92_Status> _4059_info = ({
		auto except = static__21b87777c_Of(_39513_path);
		(except.ok()) ? (except.result) : ({{
			_1c0ca32db_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
			return nullptr;;
		} jule::Ptr<_234b0cb92_Status>(nullptr);});
	});;
	if ((!(_234b0d06b_IsDir(_4059_info.ptr())))) {
		_1c0ca32db_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _4159_i = (_21b86ba4b_FindLast((*((*(_39338_decl))))._field_LinkPath, jule::Str::lit("::", 2)) + 1LL);;
	jule::Str _4169_ident = (*((*(_39338_decl))))._field_LinkPath.slice(_4159_i);;
	return jule::new_ptr<_1c0d09782_ImportInfo>(_1c0d09782_ImportInfo{._field_Token=(*((*(_39338_decl))))._field_Token, ._field_Path=_39513_path, ._field_LinkPath=(*((*(_39338_decl))))._field_LinkPath, ._field_Ident=_4169_ident, ._field_Alias=(*((*(_39338_decl))))._field_Alias, ._field_Binded=false, ._field_Std=true, ._field_ImportAll=(*((*(_39338_decl))))._field_Full, ._field_Package=jule::new_ptr<_1c0d0c6a8_Package>(_1c0d0c6a8_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1c0d09782_ImportInfo> _1c0ca4908_buildIdentImport(jule::Ptr<_1c0ca283a_symbolBuilder> _self_, jule::Ptr<_1c0c77a41_UseDecl>* _43341_decl) {
	if ((((*((*(_43341_decl))))._field_LinkPath.equal("_", 1) || (_21b86b298_Find((*((*(_43341_decl))))._field_LinkPath, jule::Str::lit("::_::", 5)) != -1LL)) || _21b86a9a1_HasSuffix((*((*(_43341_decl))))._field_LinkPath, jule::Str::lit("::_", 3)))) {
		_1c0ca32db_pushErr(_self_.ptr(), &((*((*(_43341_decl))))._field_Token), jule::Str::lit("use declaration paths cannot contain blank identifier", 53), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _4419_modPath = _1c0d0686c_Importer_mptr_data[((*_self_.alloc)._field_importer).type_offset]._1c0d058d2_GetModPath((*_self_.alloc)._field_importer);;
	if ((_4419_modPath.len() == 0LL)) {
		_1c0ca32db_pushErr(_self_, &((*((*(_43341_decl))))._field_Token), jule::Str::lit("no module file found in current directory or any parent directory", 65), jule::Slice<jule::Any>());
		_1c0ca3a6c_pushSuggestion(_self_, jule::Str::lit("use \"julec mod init\" command to initialize module", 49), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _44813_path = (*((*(_43341_decl))))._field_LinkPath;;
	_44813_path=_21b870ec3_Replace(_44813_path, jule::Str::lit("::", 2), jule::Str::lit("\\", 1), -1LL);
	_44813_path=_21b8752c4_Join(jule::Slice<jule::Str>::make({_4419_modPath,_44813_path}));
	jule::Bool _45215_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21b875824_Abs(_44813_path);
		_44813_path = __jule_assign_result.__jule_result_arg0;
		_45215_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_45215_ok))) {
		_1c0ca32db_pushErr(_self_, &((*((*(_43341_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43341_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_234b0cb92_Status> _4599_info = ({
		auto except = static__21b87777c_Of(_44813_path);
		(except.ok()) ? (except.result) : ({{
			_1c0ca32db_pushErr(_self_, &((*((*(_43341_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43341_decl))))._field_LinkPath, &__jule_any_type4)}));
			return nullptr;;
		} jule::Ptr<_234b0cb92_Status>(nullptr);});
	});;
	if ((!(_234b0d06b_IsDir(_4599_info.ptr())))) {
		_1c0ca32db_pushErr(_self_, &((*((*(_43341_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43341_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _4699_i = (_21b86ba4b_FindLast((*((*(_43341_decl))))._field_LinkPath, jule::Str::lit("::", 2)) + 1LL);;
	jule::Str _4709_ident = (*((*(_43341_decl))))._field_LinkPath.slice(_4699_i);;
	return jule::new_ptr<_1c0d09782_ImportInfo>(_1c0d09782_ImportInfo{._field_Token=(*((*(_43341_decl))))._field_Token, ._field_Path=_44813_path, ._field_LinkPath=(*((*(_43341_decl))))._field_LinkPath, ._field_Ident=_4709_ident, ._field_Alias=(*((*(_43341_decl))))._field_Alias, ._field_Binded=false, ._field_Std=false, ._field_ImportAll=(*((*(_43341_decl))))._field_Full, ._field_Package=jule::new_ptr<_1c0d0c6a8_Package>(_1c0d0c6a8_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1c0d09782_ImportInfo> _1c0ca4c49_buildImport(jule::Ptr<_1c0ca283a_symbolBuilder> _self_, jule::Ptr<_1c0c77a41_UseDecl>* _48736_decl) {
	{
		
		if ((*((*(_48736_decl))))._field_Binded) {
			_case_begin_1c42d45b6:;
			{
				return _1c0ca4276_buildCppHeaderImport(_self_.ptr(), _48736_decl);;
			}
		}
		else if ((*((*(_48736_decl))))._field_Std) {
			_case_begin_1c42d49b2:;
			{
				return _1c0ca45b7_buildStdImport(_self_.ptr(), _48736_decl);;
			}
		}
		else {
			_case_begin_1c42d4550:;
			{
				return _1c0ca4908_buildIdentImport(_self_, _48736_decl);;
			}
		}
		_match_end_1c42d4451:;
	};
}



inline jule::Bool _1c0ca508a_checkDuplicateUseDecl(_1c0ca283a_symbolBuilder* _self_, jule::Ptr<_1c0d09782_ImportInfo>* _49841_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c0d09782_ImportInfo> _5009_lpkg = _1c0da1b6a_SelectPackage((*(_self_))._field_table.ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1c0d09782_ImportInfo>>((void*)__jule_anon_1c42d6b90, jule::Ptr<__jule_anon_1c42d6b90_ctx>::make(__jule_anon_1c42d6b90_ctx{._49841_pkg=_49841_pkg}).as<jule::Uintptr>(), __jule_anon_1c42d6b90_ctx_handler));;
	if ((_5009_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1c0ca32db_pushErr(_self_, &((*((*(_49841_pkg))))._field_Token), jule::Str::lit("use declaration duplication: @ is already used above", 52), jule::Slice<jule::Any>::make({jule::Any((*((*(_49841_pkg))))._field_LinkPath, &__jule_any_type4)}));
	_1c0ca3a6c_pushSuggestion(_self_, jule::Str::lit("remove this use declaration, already used, it is safe", 53), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _1c0ca53ed_implImportSelections(_1c0ca283a_symbolBuilder* _self_, jule::Ptr<_1c0d09782_ImportInfo>* _51244_imp, jule::Ptr<_1c0c77a41_UseDecl>* _51267_decl) {
	(*((*(_51244_imp))))._field_Selected=(*((*(_51267_decl))))._field_Selected;
	{
		auto expr = &((*((*(_51244_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c42d9654:;
		if (it != expr_end) {
			jule::Ptr<_1c0c49480_Token> _51416_item = *it;
			{
				{
					auto expr = &((*((*(_51244_imp))))._field_Selected);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c42da04a:;
					if (it != expr_end) {
						jule::Ptr<_1c0c49480_Token> _51520_citem = *it;
						{
							if ((_51416_item == _51520_citem)) {
								goto _iter_end_1c42da04a;
							} else if (((*(_51416_item))._field_Kind == (*(_51520_citem))._field_Kind)) {
								_1c0ca32db_pushErr(_self_, &(_51416_item), jule::Str::lit("duplicated selection: @ is already selected", 43), jule::Slice<jule::Any>::make({jule::Any((*_51416_item.alloc)._field_Kind, &__jule_any_type4)}));
								_1c0ca3a6c_pushSuggestion(_self_, jule::Str::lit("remove this use selection, already selected, it is safe", 55), jule::Slice<jule::Any>());
								goto _iter_end_1c42da04a;
							};
						}
						_iter_next_1c42da04a:;
						++it;
						goto _iter_begin_1c42da04a;
					}
					_iter_end_1c42da04a:;
				};
			}
			_iter_next_1c42d9654:;
			++it;
			goto _iter_begin_1c42d9654;
		}
		_iter_end_1c42d9654:;
	};
}



inline jule::Str _1c0ca573e_getAsLinkPath(jule::Ptr<_1c0ca283a_symbolBuilder> _self_, jule::Str _52737_path) {
	if (_21b86a62c_HasPrefix(_52737_path, _21b989ce0_PathStdlib)) {
		(_52737_path).mut_slice(_21b989ce0_PathStdlib.len());;
		return (jule::Str::lit("std", 3) + _21b870ec3_Replace(_52737_path, jule::Str::lit("\\", 1), jule::Str::lit("::", 2), -1LL));;
	};
	jule::Str _5339_root;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21b875824_Abs(_1c0d0686c_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1c0d058d2_GetModPath((*(_self_))._field_importer));
		_5339_root = __jule_assign_result.__jule_result_arg0;
	});
	(_52737_path).mut_slice(_5339_root.len());;
	if ((_52737_path[0LL] == 92LLU)) {
		(_52737_path).mut_slice(1LL);;
	};
	return _21b870ec3_Replace(_52737_path, jule::Str::lit("\\", 1), jule::Str::lit("::", 2), -1LL);;
}



inline void _1c0ca5b5c_pushCycleError(jule::Ptr<_1c0ca283a_symbolBuilder> _self_, jule::Ptr<_1c0ca283a_symbolBuilder>* _54135_sb, jule::Str _54155_path, _234c76a64_StrBuilder* _54171_message) {
	;
	jule::Str _5439_refersTo = _21b8c5951_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_1c0ca573e_getAsLinkPath(_self_, _1c0c503ba_Dir((*((*((*(_54135_sb))))._field_table))._field_File.ptr())), &__jule_any_type4),jule::Any(_1c0ca573e_getAsLinkPath(_self_, _54155_path), &__jule_any_type4)}));;
	jule::Str _5479_m = _234c77d2e_Str(_54171_message);;
	_234c77537_WriteStr(_54171_message, _21b86a264_Repeat(jule::Str::lit(" ", 1), 7LL));
	_234c77537_WriteStr(_54171_message, _5439_refersTo);
	_234c777e0_WriteByte(_54171_message, '\n');
	_234c77537_WriteStr(_54171_message, _5479_m);
}



inline void _1c0ca607a_pushCrossCycleError(jule::Ptr<_1c0ca283a_symbolBuilder> _self_, jule::Ptr<_1c0ca283a_symbolBuilder>* _55440_target, jule::Ptr<_1c0d09782_ImportInfo>* _55465_imp, jule::Ptr<_1c0c49480_Token>* _55484_errorToken) {
	_234c76a64_StrBuilder _55513_message = static__234c76ec6_New(32LL);;
	_1c0ca5b5c_pushCycleError(_self_, &(_self_), (*((*(_55465_imp))))._field_Path, &(_55513_message));
	jule::Ptr<_1c0ca283a_symbolBuilder> _55913_owner = (*_self_.alloc)._field_owner;;
	jule::Ptr<_1c0ca283a_symbolBuilder> _56013_old = _self_;;
	while (((*(_55913_owner))._field_owner != nullptr)) {
		{
			_1c0ca5b5c_pushCycleError(_self_, &((*_56013_old.alloc)._field_owner), _1c0c503ba_Dir((*((*_56013_old.alloc)._field_table))._field_File.ptr()), &(_55513_message));
			if (((*_55913_owner.alloc)._field_owner == (*(_55440_target)))) {
				_1c0ca5b5c_pushCycleError(_self_, _55440_target, _1c0c503ba_Dir((*(*_55913_owner.alloc)._field_table.alloc)._field_File), &(_55513_message));
				goto _iter_end_1c42e2915;
			};
			_56013_old=_55913_owner;
			_55913_owner=(*_55913_owner.alloc)._field_owner;
		}
	_iter_next_1c42e2915:;
	}
	_iter_end_1c42e2915:;;
	_1c0ca32db_pushErr(_self_, _55484_errorToken, jule::Str::lit("illegal cross cycle in use declarations;\n@", 42), jule::Slice<jule::Any>::make({jule::Any(_234c77d2e_Str(&_55513_message), &__jule_any_type4)}));
}



inline jule::Bool _1c0ca6476_checkImportCycles(jule::Ptr<_1c0ca283a_symbolBuilder> _self_, jule::Ptr<_1c0d09782_ImportInfo> _57737_imp, jule::Ptr<_1c0c77a41_UseDecl>* _57756_decl) {
	if (((*(_57737_imp))._field_Path == _1c0c503ba_Dir((*((*(_self_))._field_table))._field_File.ptr()))) {
		_1c0ca32db_pushErr(_self_, &((*((*(_57756_decl))))._field_Token), jule::Str::lit("illegal cycle in use declaration, package @ refers to itself", 60), jule::Slice<jule::Any>::make({jule::Any(_1c0ca573e_getAsLinkPath(_self_, (*_57737_imp.alloc)._field_Path), &__jule_any_type4)}));
		return false;;
	};
	if (((*_self_.alloc)._field_owner == nullptr)) {
		return true;;
	};
	jule::Ptr<_1c0ca283a_symbolBuilder> _58713_owner = (*_self_.alloc)._field_owner;;
	_julec_label_1c42e8ed2:;
	if ((_1c0c503ba_Dir((*(*(_58713_owner))._field_table.alloc)._field_File) == (*_57737_imp.alloc)._field_Path)) {
		_1c0ca607a_pushCrossCycleError(_self_, &(_58713_owner), &(_57737_imp), &((*((*(_57756_decl))))._field_Token));
		return false;;
	};
	if (((*_58713_owner.alloc)._field_owner != nullptr)) {
		_58713_owner=(*_58713_owner.alloc)._field_owner;
		goto _julec_label_1c42e8ed2;
	};
	return true;;
}



inline void _1c0ca6894_checkPackageAccessibility(_1c0ca283a_symbolBuilder* _self_, jule::Ptr<_1c0c77a41_UseDecl>* _60845_decl, jule::Str* _60862_mod, jule::Str* _60873_path) {
	if (((_1c0d0686c_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1c0d058d2_GetModPath((*(_self_))._field_importer) != (*(_60862_mod))) && _21b86eae8_Contains((*(_60873_path)), jule::Str::lit("internal", 8)))) {
		_1c0ca32db_pushErr(_self_, &((*((*(_60845_decl))))._field_Token), jule::Str::lit("you cannot access to internal packages", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1c0ca6c90_importPackage(jule::Ptr<_1c0ca283a_symbolBuilder> _self_, jule::Ptr<_1c0d09782_ImportInfo>* _61438_imp, jule::Ptr<_1c0c77a41_UseDecl>* _61461_decl) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_61438_imp))))._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1c0d09782_ImportInfo> _61913_port = _1c0d0686c_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1c0d06064_GetImport((*(_self_))._field_importer, (*((*(_61438_imp))))._field_Path);;
	if ((_61913_port != nullptr)) {
		(*((*(_61438_imp))))._field_Package=(*_61913_port.alloc)._field_Package;
		(*((*(_61438_imp))))._field_Duplicate=true;
		jule::Str _62413_oldMod = _1c0d0686c_Importer_mptr_data[((*_self_.alloc)._field_importer).type_offset]._1c0d058d2_GetModPath((*_self_.alloc)._field_importer);;
		_1c0d0686c_Importer_mptr_data[((*_self_.alloc)._field_importer).type_offset]._1c0d0564b_SetModPath((*_self_.alloc)._field_importer, _1c0d0686c_Importer_mptr_data[((*_self_.alloc)._field_importer).type_offset]._1c0d05c23_ModById((*_self_.alloc)._field_importer, (*((*(_61438_imp))))._field_ModId));
		_1c0ca6894_checkPackageAccessibility(_self_, _61461_decl, &(_62413_oldMod), &((*_61913_port.alloc)._field_Path));
		_1c0d0686c_Importer_mptr_data[((*_self_.alloc)._field_importer).type_offset]._1c0d0564b_SetModPath((*_self_.alloc)._field_importer, _62413_oldMod);
	} else {
		if ((!(_1c0ca6476_checkImportCycles(_self_, (*(_61438_imp)), _61461_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _63313_oldMod = _1c0d0686c_Importer_mptr_data[((*_self_.alloc)._field_importer).type_offset]._1c0d058d2_GetModPath((*_self_.alloc)._field_importer);;
		__JULE_DEFER({
			_1c0d0686c_Importer_mptr_data[((*_self_.alloc)._field_importer).type_offset]._1c0d0564b_SetModPath((*_self_.alloc)._field_importer, _63313_oldMod);
		});;
		if ((*((*(_61438_imp))))._field_Std) {
			_1c0d0686c_Importer_mptr_data[((*_self_.alloc)._field_importer).type_offset]._1c0d0564b_SetModPath((*_self_.alloc)._field_importer, _21b989ce0_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1c0c5ca26_Ast>> _63817_asts;
		jule::Slice<_21b8c54de_Log> _63827_errors;
		({
			__jule_tuple_sx_1c0c5ca26_Ast__jule_tuple_s_21b8c54de_Log __jule_assign_result = _1c0d0686c_Importer_mptr_data[((*_self_.alloc)._field_importer).type_offset]._1c0d06460_ImportPackage((*_self_.alloc)._field_importer, (*((*(_61438_imp))))._field_Path, (!((*((*(_61438_imp))))._field_Std)));
			_63817_asts = __jule_assign_result.__jule_result_arg0;
			_63827_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_63827_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_63827_errors);
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1c0ca6894_checkPackageAccessibility(_self_, _61461_decl, &(_63313_oldMod), &((*((*(_61438_imp))))._field_Path));
		{
			auto expr = &(_63817_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c4305bc0:;
			if (it != expr_end) {
				jule::Ptr<_1c0c5ca26_Ast> _64625_ast = *it;
				{
					jule::Ptr<_1c0da1681_SymbolTable> _64725_table = nullptr;;
					({
						__jule_tuple_x_1c0da1681_SymbolTable__jule_tuple_s_21b8c54de_Log __jule_assign_result = _1c0e087c6_buildSymbols(&(_64625_ast), &((*_self_.alloc)._field_importer), _self_);
						_64725_table = __jule_assign_result.__jule_result_arg0;
						_63827_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_63827_errors.len() > 0LL)) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_63827_errors);
						__jule_func_result = false;
						return __jule_func_result;;
					};
					(*((*((*(_61438_imp))))._field_Package))._field_Files=jule::append((*(*((*(_61438_imp))))._field_Package.alloc)._field_Files,jule::Slice<jule::Ptr<_1c0da1681_SymbolTable>>::make({_64725_table}));
				}
				_iter_next_1c4305bc0:;
				++it;
				goto _iter_begin_1c4305bc0;
			}
			_iter_end_1c4305bc0:;
		};
	};
	_1c0ca53ed_implImportSelections(_self_, _61438_imp, _61461_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1c0d09782_ImportInfo> _1c0ca70d1_importUseDecl(jule::Ptr<_1c0ca283a_symbolBuilder> _self_, jule::Ptr<_1c0c77a41_UseDecl>* _66138_decl) {
	jule::Ptr<_1c0d09782_ImportInfo> _66213_imp = _1c0ca4c49_buildImport(_self_, _66138_decl);;
	if ((_66213_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _66813_ok = _1c0ca508a_checkDuplicateUseDecl(_self_, &(_66213_imp));;
	if ((!(_66813_ok))) {
		return nullptr;;
	};
	_66813_ok=_1c0ca6c90_importPackage(_self_, &(_66213_imp), _66138_decl);
	(*((*_self_.alloc)._field_table))._field_Imports=jule::append((*(*_self_.alloc)._field_table.alloc)._field_Imports,jule::Slice<jule::Ptr<_1c0d09782_ImportInfo>>::make({_66213_imp}));
	if (_66813_ok) {
		_1c0d0686c_Importer_mptr_data[((*_self_.alloc)._field_importer).type_offset]._1c0d06718_Imported((*_self_.alloc)._field_importer, _66213_imp);
		return _66213_imp;;
	};
	return nullptr;;
}



inline void _1c0ca72ce_importUseDecls(jule::Ptr<_1c0ca283a_symbolBuilder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ast))._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c430b676:;
		if (it != expr_end) {
			jule::Ptr<_1c0c77a41_UseDecl> _68321_decl = *it;
			{
				_1c0ca70d1_importUseDecl(_self_, &(_68321_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					goto _iter_end_1c430b676;
				};
			}
			_iter_next_1c430b676:;
			++it;
			goto _iter_begin_1c430b676;
		}
		_iter_end_1c430b676:;
	};
}



inline void _1c0ca7587_appendNode(_1c0ca283a_symbolBuilder* _self_, _1c0c5d939_Node* _69234_node) {
	{
		auto &_match_expr{ (*(_69234_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1c430bbb5:;
			{
				(*((*(_self_))._field_table))._field_Impls=jule::append((*(*(_self_))._field_table.alloc)._field_Impls,jule::Slice<jule::Ptr<_1c0cd21d8_Impl>>::make({_1c0ca2274_buildImpl((*(_69234_node))._field_Data.unsafe_cast_ptr<_1c0c7b5a0_Impl>())}));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1c430cbd8:;
			{
				jule::Ptr<_1c0dd7101_TypeAlias> _69717_ta = _1c0c9d7c0_buildTypeAlias((*(_69234_node))._field_Data.unsafe_cast_ptr<_1c0c76457_TypeAliasDecl>());;
				(*((*(_self_))._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,jule::Slice<jule::Ptr<_1c0dd7101_TypeAlias>>::make({_69717_ta}));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1c430cc4e:;
			{
				jule::Ptr<_1c0c807c4_Struct> _70017_srct = _1c0c9e161_buildStruct((*(_69234_node))._field_Data.unsafe_cast_ptr<_1c0c7a703_StructDecl>());;
				(*((*(_self_))._field_table))._field_Structs=jule::append((*(*(_self_))._field_table.alloc)._field_Structs,jule::Slice<jule::Ptr<_1c0c807c4_Struct>>::make({_70017_srct}));
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1c430ccb5:;
			{
				jule::Ptr<_1c0c95795_Fn> _70317_f = _1c0c9ed10_buildFunc((*(_69234_node))._field_Data.unsafe_cast_ptr<_1c0c715ea_FnDecl>());;
				(*((*(_self_))._field_table))._field_Funcs=jule::append((*(*(_self_))._field_table.alloc)._field_Funcs,jule::Slice<jule::Ptr<_1c0c95795_Fn>>::make({_70317_f}));
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1c430cd2b:;
			{
				jule::Ptr<_1c0ca8a72_Trait> _70617_t = _1c0ca065c_buildTrait((*(_69234_node))._field_Data.unsafe_cast_ptr<_1c0c7ae40_TraitDecl>());;
				(*((*(_self_))._field_table))._field_Traits=jule::append((*(*(_self_))._field_table.alloc)._field_Traits,jule::Slice<jule::Ptr<_1c0ca8a72_Trait>>::make({_70617_t}));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1c430cd92:;
			{
				jule::Ptr<_1c0d4dde2_Var> _70917_v = _1c0ca1be1_buildVar((*(_69234_node))._field_Data.unsafe_cast_ptr<_1c0c727a5_VarDecl>());;
				(*((*(_self_))._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1c0d4dde2_Var>>::make({_70917_v}));
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1c430d4d0:;
			{
				jule::Ptr<_1c0cab27d_Enum> _71217_e = _1c0ca11da_buildEnum((*(_69234_node))._field_Data.unsafe_cast_ptr<_1c0c78aa8_EnumDecl>());;
				(*((*(_self_))._field_table))._field_Enums=jule::append((*(*(_self_))._field_table.alloc)._field_Enums,jule::Slice<jule::Ptr<_1c0cab27d_Enum>>::make({_71217_e}));
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1c430d546:;
			{
				jule::Ptr<_1c0cac988_TypeEnum> _71517_e = _1c0ca1927_buildTypeEnum((*(_69234_node))._field_Data.unsafe_cast_ptr<_1c0c79a43_TypeEnumDecl>());;
				(*((*(_self_))._field_table))._field_TypeEnums=jule::append((*(*(_self_))._field_table.alloc)._field_TypeEnums,jule::Slice<jule::Ptr<_1c0cac988_TypeEnum>>::make({_71517_e}));
			}
		}
		else {
			_case_begin_1c430cac8:;
			{
				_1c0ca32db_pushErr(_self_, &((*(_69234_node))._field_Token), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c430ca73:;
	};
}



inline void _1c0ca7785_appendNodes(_1c0ca283a_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4317a28:;
		if (it != expr_end) {
			_1c0c5d939_Node _72321_node = *it;
			{
				_1c0ca7587_appendNode(_self_, &(_72321_node));
			}
			_iter_next_1c4317a28:;
			++it;
			goto _iter_begin_1c4317a28;
		}
		_iter_end_1c4317a28:;
	};
}



inline void _1c0ca7a3d_pushDirectivePass(_1c0ca283a_symbolBuilder* _self_, jule::Ptr<_1c0c5dd57_Directive>* _72841_d) {
	if (((*((*(_72841_d))))._field_Args.len() == 0LL)) {
		_1c0ca32db_pushErr(_self_, &((*((*(_72841_d))))._field_Tag), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_72841_d))))._field_Args.len() > 1LL)) {
		jule::Ptr<_1c0c49480_Token> _73313_arg = (*((*(_72841_d))))._field_Args[1LL];;
		_1c0ca32db_pushErr(_self_, &(_73313_arg), jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_72841_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1c0c49480_Token> _7379_arg = (*((*(_72841_d))))._field_Args[0LL];;
	if (((*(_7379_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1c0ca32db_pushErr(_self_, &(_7379_arg), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_7379_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1c0ca32db_pushErr(_self_, &(_7379_arg), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_self_))._field_table))._field_Passes=jule::append((*(*(_self_))._field_table.alloc)._field_Passes,jule::Slice<_1c0c9cd85_Pass>::make({_1c0c9cd85_Pass{._field_Token=(*((*(_72841_d))))._field_Tag, ._field_Text=(*_7379_arg.alloc)._field_Kind.slice(1LL, ((*_7379_arg.alloc)._field_Kind.len() - 1LL))}}));
}



inline void _1c0ca7c3b_appendTopDirectives(_1c0ca283a_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c431d90d:;
		if (it != expr_end) {
			jule::Ptr<_1c0c5dd57_Directive> _75521_d = *it;
			{
				{
					auto &_match_expr{ (*((*(_75521_d))._field_Tag))._field_Kind };
					
					if (_match_expr == jule::Str::lit("pass", 4)) {
						_case_begin_1c431eb62:;
						{
							_1c0ca7a3d_pushDirectivePass(_self_, &(_75521_d));
						}
					}
					_match_end_1c431ea96:;
				};
			}
			_iter_next_1c431d90d:;
			++it;
			goto _iter_begin_1c431d90d;
		}
		_iter_end_1c431d90d:;
	};
}



inline void _1c0ca7e39_build(jule::Ptr<_1c0ca283a_symbolBuilder> _self_) {
	(*(_self_))._field_table=jule::new_ptr<_1c0da1681_SymbolTable>(_1c0da1681_SymbolTable{._field_File=(*((*_self_.alloc)._field_ast))._field_File, });
	_1c0ca7c3b_appendTopDirectives(_self_);
	_1c0ca72ce_importUseDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	_1c0ca7785_appendNodes(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c0ca283a_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c0ca8e3a_Str(_1c0ca8a72_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1c0ca927b_Equal(jule::Ptr<_1c0ca8a72_Trait> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _2521_other) {
	jule::Ptr<_1c0ca8a72_Trait> _269_trt = _1c0ddbd4d_Trait(_2521_other.ptr());;
	return (_self_ == _269_trt);;
}



inline jule::Ptr<_1c0c95795_Fn> _1c0ca9721_FindMethod(_1c0ca8a72_Trait* _self_, jule::Str _3429_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4323528:;
		if (it != expr_end) {
			jule::Ptr<_1c0c95795_Fn> _3521_f = *it;
			{
				if (((*(_3521_f))._field_Ident == _3429_ident)) {
					return _3521_f;;
				};
			}
			_iter_next_1c4323528:;
			++it;
			goto _iter_begin_1c4323528;
		}
		_iter_end_1c4323528:;
	};
	return _1c0ca9da3_findMethodInherit(_self_, &(_3429_ident));;
}



inline jule::Ptr<_1c0c95795_Fn> _1c0ca9da3_findMethodInherit(_1c0ca8a72_Trait* _self_, jule::Str* _5537_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c432574a:;
		if (it != expr_end) {
			jule::Ptr<_1c0de00b5_TypeSymbol> _5621_i = *it;
			{
				if (((*(_5621_i))._field_Kind == nullptr)) {
					goto _iter_next_1c432574a;
				};
				jule::Ptr<_1c0ca8a72_Trait> _6017_t = _1c0ddbd4d_Trait((*_5621_i.alloc)._field_Kind.ptr());;
				if ((_6017_t != nullptr)) {
					jule::Ptr<_1c0c95795_Fn> _6221_f2 = _1c0ca9721_FindMethod(_6017_t, (*(_5537_ident)));;
					if ((_6221_f2 != nullptr)) {
						return _6221_f2;;
					};
				};
			}
			_iter_next_1c432574a:;
			++it;
			goto _iter_begin_1c432574a;
		}
		_iter_end_1c432574a:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0ca8a72_Trait _Src) {
	_Stream << _1c0ca8e3a_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1c0caaab8_AutoExpr(_1c0caa711_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0caa711_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c0cab602_Str(_1c0cab27d_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1c0cab943_Equal(jule::Ptr<_1c0cab27d_Enum> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _3821_other) {
	jule::Ptr<_1c0cab27d_Enum> _399_enm = _1c0ddace7_Enum(_3821_other.ptr());;
	return (_self_ == _399_enm);;
}



inline jule::Ptr<_1c0caa711_EnumItem> _1c0cabd72_FindItem(_1c0cab27d_Enum* _self_, jule::Str _4727_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4329e58:;
		if (it != expr_end) {
			jule::Ptr<_1c0caa711_EnumItem> _4821_item = *it;
			{
				if (((*(_4821_item))._field_Ident == _4727_ident)) {
					return _4821_item;;
				};
			}
			_iter_next_1c4329e58:;
			++it;
			goto _iter_begin_1c4329e58;
		}
		_iter_end_1c4329e58:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cab27d_Enum _Src) {
	_Stream << _1c0cab602_Str(&_Src);
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cac3b1_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c0caccc9_Str(_1c0cac988_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1c0cad11a_Equal(jule::Ptr<_1c0cac988_TypeEnum> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _8021_other) {
	jule::Ptr<_1c0cac988_TypeEnum> _819_tenm = _1c0ddb07d_TypeEnum(_8021_other.ptr());;
	return (_self_ == _819_tenm);;
}



inline jule::Ptr<_1c0cac3b1_TypeEnumItem> _1c0cad549_FindItem(_1c0cac988_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c432c1d0:;
		if (it != expr_end) {
			jule::Ptr<_1c0cac3b1_TypeEnumItem> _9021_item = *it;
			{
				if (((*(_9021_item))._field_Ident == _8927_ident)) {
					return _9021_item;;
				};
			}
			_iter_next_1c432c1d0:;
			++it;
			goto _iter_begin_1c432c1d0;
		}
		_iter_end_1c432c1d0:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cac988_TypeEnum _Src) {
	_Stream << _1c0caccc9_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c0cb0e64_Str(_1c0cb0ae0_comptimeRange* _self_) {
	return jule::Str::lit("comptimeRange", 13);;
}



inline jule::Bool _1c0cb12a5_Equal(jule::Ptr<_1c0cb0ae0_comptimeRange> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _3621_other) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cb0ae0_comptimeRange _Src) {
	_Stream << _1c0cb0e64_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c0cb197b_Str(_1c0cb15b3_comptimeStructField* _self_) {
	return jule::Str::lit("comptimeStructField", 19);;
}



inline jule::Bool _1c0cb1cbc_Equal(jule::Ptr<_1c0cb15b3_comptimeStructField> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _4621_other) {
	return false;;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cb2361__Name(jule::Ptr<_1c0cb15b3_comptimeStructField> _self_, jule::Ptr<_1c0da8721_Eval>* _5026_e, jule::Ptr<_1c0c67998_FnCallExpr>* _5041_fc) {
	if (((*((*(_5041_fc))))._field_Args.len() > 0LL)) {
		_1c0da8c71_pushErr((*(_5026_e)).ptr(), (*((*((*(_5041_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2021e617b_Const> _5513_constant = static__2021e6e18_NewStr((*((*((*(_self_))._field_field))._field_Decl))._field_Ident);;
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec92c0_primStr, ._field_Model=jule::Any(_5513_constant, &__jule_any_type19), ._field_Constant=_5513_constant});;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cb275c__Type(jule::Ptr<_1c0cb15b3_comptimeStructField> _self_, jule::Ptr<_1c0da8721_Eval>* _6330_e, jule::Ptr<_1c0c67998_FnCallExpr>* _6345_fc) {
	if (((*((*(_6345_fc))))._field_Args.len() > 0LL)) {
		_1c0da8c71_pushErr((*(_6330_e)).ptr(), (*((*((*(_6345_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1c0ccccb6_buildComptimeTypeInfoData(&((*((*(_6330_e))))._field_s), &((*((*(_self_))._field_field))._field_Kind));;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cb2b58__Public(jule::Ptr<_1c0cb15b3_comptimeStructField> _self_, jule::Ptr<_1c0da8721_Eval>* _7132_e, jule::Ptr<_1c0c67998_FnCallExpr>* _7147_fc) {
	if (((*((*(_7147_fc))))._field_Args.len() > 0LL)) {
		_1c0da8c71_pushErr((*(_7132_e)).ptr(), (*((*((*(_7147_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2021e617b_Const> _7613_constant = static__2021e6b4e_NewBool((*((*((*(_self_))._field_field))._field_Decl))._field_Public);;
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec9578_primBool, ._field_Model=jule::Any(_7613_constant, &__jule_any_type19), ._field_Constant=_7613_constant});;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cb2e66_subIdent(jule::Ptr<_1c0cb15b3_comptimeStructField> _self_, jule::Str* _8429_ident) {
	{
		auto &_match_expr{ (*(_8429_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1c4339d36:;
			{
				jule::Ptr<_1c0c98699_FnIns> _8717_method = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>((void*)__jule_anon_1c433b167, jule::Ptr<__jule_anon_1c433b167_ctx>::make(__jule_anon_1c433b167_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c433b167_ctx_handler), });;
				return _1c0ccc634_buildAsComptimeMethodData(&(_8717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1c4339dd0:;
			{
				jule::Ptr<_1c0c98699_FnIns> _9417_method = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>((void*)__jule_anon_1c433d114, jule::Ptr<__jule_anon_1c433d114_ctx>::make(__jule_anon_1c433d114_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c433d114_ctx_handler), });;
				return _1c0ccc634_buildAsComptimeMethodData(&(_9417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1c4339e57:;
			{
				jule::Ptr<_1c0c98699_FnIns> _10117_method = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>((void*)__jule_anon_1c434006c, jule::Ptr<__jule_anon_1c434006c_ctx>::make(__jule_anon_1c434006c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c434006c_ctx_handler), });;
				return _1c0ccc634_buildAsComptimeMethodData(&(_10117_method));;
			}
		}
		else {
			_case_begin_1c4339a4a:;
			{
				return nullptr;;
			}
		}
		_match_end_1c4339bd2:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cb15b3_comptimeStructField _Src) {
	_Stream << _1c0cb197b_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c0cb35e8_Str(_1c0cb3274_comptimeStructFields* _self_) {
	return jule::Str::lit("comptimeStructFields", 20);;
}



inline jule::Bool _1c0cb3939_Equal(jule::Ptr<_1c0cb3274_comptimeStructFields> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _12021_other) {
	return false;;
}



inline void _1c0cb3dac_ready(_1c0cb3274_comptimeStructFields* _self_, jule::Ptr<_1c0d4dde2_Var>* _12429_keyA, jule::Ptr<_1c0d4dde2_Var>* _12446_keyB) {
	if (((*(_12429_keyA)) != nullptr)) {
		(*((*(_12429_keyA))))._field_Constant=true;
		(*((*(_12429_keyA))))._field_Value=jule::new_ptr<_1c0da7b71_Value>(_1c0da7b71_Value{._field_Data=jule::new_ptr<_1c0da69e9_Data>()});
		(*((*(_12429_keyA))))._field_Kind=(*(_1c0ecc306_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_12446_keyB)) != nullptr)) {
		(*((*(_12446_keyB))))._field_Constant=true;
		(*((*(_12446_keyB))))._field_Value=jule::new_ptr<_1c0da7b71_Value>(_1c0da7b71_Value{._field_Data=jule::new_ptr<_1c0da69e9_Data>()});
		(*((*(_12446_keyB))))._field_Kind=jule::new_ptr<_1c0de00b5_TypeSymbol>(_1c0de00b5_TypeSymbol{._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(jule::new_ptr<_1c0cb15b3_comptimeStructField>(), 6)})});
	};
}



inline void _1c0cb42ca_step(_1c0cb3274_comptimeStructFields* _self_, jule::I64 _14523_i, jule::Ptr<_1c0d4dde2_Var>* _14536_keyA, jule::Ptr<_1c0d4dde2_Var>* _14553_keyB) {
	if (((*(_14536_keyA)) != nullptr)) {
		(*((*((*((*(_14536_keyA))))._field_Value))._field_Data))._field_Constant=static__2021e65bb_NewI64(static_cast<jule::I64>(_14523_i));
		(*(*(*((*(_14536_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Model=jule::Any((*(*(*((*(_14536_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_14553_keyB)) != nullptr)) {
		(*(_1c0ddcb1d_comptimeStructField((*((*((*(_14553_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_14523_i];
	};
}



inline jule::I64 _1c0cb4561_len(_1c0cb3274_comptimeStructFields* _self_) {
	return (*(_self_))._field_fields.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cb3274_comptimeStructFields _Src) {
	_Stream << _1c0cb35e8_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c0cb4be3_Str(_1c0cb486e_comptimeStatic* _self_) {
	return jule::Str::lit("comptimeStatic", 14);;
}



inline jule::Bool _1c0cb5034_Equal(jule::Ptr<_1c0cb486e_comptimeStatic> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _16921_other) {
	return false;;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cb5661__Name(jule::Ptr<_1c0cb486e_comptimeStatic> _self_, jule::Ptr<_1c0da8721_Eval>* _17326_e, jule::Ptr<_1c0c67998_FnCallExpr>* _17341_fc) {
	if (((*((*(_17341_fc))))._field_Args.len() > 0LL)) {
		_1c0da8c71_pushErr((*(_17326_e)).ptr(), (*((*((*(_17341_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2021e617b_Const> _17813_constant = static__2021e6e18_NewStr((*((*(_self_))._field_field))._field_Ident);;
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec92c0_primStr, ._field_Model=jule::Any(_17813_constant, &__jule_any_type19), ._field_Constant=_17813_constant});;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cb5a5c__Type(jule::Ptr<_1c0cb486e_comptimeStatic> _self_, jule::Ptr<_1c0da8721_Eval>* _18630_e, jule::Ptr<_1c0c67998_FnCallExpr>* _18645_fc) {
	if (((*((*(_18645_fc))))._field_Args.len() > 0LL)) {
		_1c0da8c71_pushErr((*(_18630_e)).ptr(), (*((*((*(_18645_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1c0ccccb6_buildComptimeTypeInfoData(&((*((*(_18630_e))))._field_s), &((*((*((*(_self_))._field_field))._field_Kind))._field_Kind));;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cb5e58__Public(jule::Ptr<_1c0cb486e_comptimeStatic> _self_, jule::Ptr<_1c0da8721_Eval>* _19432_e, jule::Ptr<_1c0c67998_FnCallExpr>* _19447_fc) {
	if (((*((*(_19447_fc))))._field_Args.len() > 0LL)) {
		_1c0da8c71_pushErr((*(_19432_e)).ptr(), (*((*((*(_19447_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2021e617b_Const> _19913_constant = static__2021e6b4e_NewBool((*((*(_self_))._field_field))._field_Public);;
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec9578_primBool, ._field_Model=jule::Any(_19913_constant, &__jule_any_type19), ._field_Constant=_19913_constant});;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cb6299_subIdent(jule::Ptr<_1c0cb486e_comptimeStatic> _self_, jule::Str* _20729_ident) {
	{
		auto &_match_expr{ (*(_20729_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1c43509d9:;
			{
				jule::Ptr<_1c0c98699_FnIns> _21017_method = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>((void*)__jule_anon_1c4351ce8, jule::Ptr<__jule_anon_1c4351ce8_ctx>::make(__jule_anon_1c4351ce8_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c4351ce8_ctx_handler), });;
				return _1c0ccc634_buildAsComptimeMethodData(&(_21017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1c4350a83:;
			{
				jule::Ptr<_1c0c98699_FnIns> _21717_method = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>((void*)__jule_anon_1c4353c51, jule::Ptr<__jule_anon_1c4353c51_ctx>::make(__jule_anon_1c4353c51_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c4353c51_ctx_handler), });;
				return _1c0ccc634_buildAsComptimeMethodData(&(_21717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1c4350b0a:;
			{
				jule::Ptr<_1c0c98699_FnIns> _22417_method = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>((void*)__jule_anon_1c4355ba9, jule::Ptr<__jule_anon_1c4355ba9_ctx>::make(__jule_anon_1c4355ba9_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c4355ba9_ctx_handler), });;
				return _1c0ccc634_buildAsComptimeMethodData(&(_22417_method));;
			}
		}
		else {
			_case_begin_1c43506ed:;
			{
				return nullptr;;
			}
		}
		_match_end_1c4350885:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cb486e_comptimeStatic _Src) {
	_Stream << _1c0cb4be3_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c0cb68a4_Str(_1c0cb6530_comptimeStatics* _self_) {
	return jule::Str::lit("comptimeStatics", 15);;
}



inline jule::Bool _1c0cb6be5_Equal(jule::Ptr<_1c0cb6530_comptimeStatics> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _24321_other) {
	return false;;
}



inline void _1c0cb7168_ready(_1c0cb6530_comptimeStatics* _self_, jule::Ptr<_1c0d4dde2_Var>* _24729_keyA, jule::Ptr<_1c0d4dde2_Var>* _24746_keyB) {
	if (((*(_24729_keyA)) != nullptr)) {
		(*((*(_24729_keyA))))._field_Constant=true;
		(*((*(_24729_keyA))))._field_Value=jule::new_ptr<_1c0da7b71_Value>(_1c0da7b71_Value{._field_Data=jule::new_ptr<_1c0da69e9_Data>()});
		(*((*(_24729_keyA))))._field_Kind=(*(_1c0ecc306_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_24746_keyB)) != nullptr)) {
		(*((*(_24746_keyB))))._field_Constant=true;
		(*((*(_24746_keyB))))._field_Value=jule::new_ptr<_1c0da7b71_Value>(_1c0da7b71_Value{._field_Data=jule::new_ptr<_1c0da69e9_Data>()});
		(*((*(_24746_keyB))))._field_Kind=jule::new_ptr<_1c0de00b5_TypeSymbol>(_1c0de00b5_TypeSymbol{._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(jule::new_ptr<_1c0cb486e_comptimeStatic>(), 8)})});
	};
}



inline void _1c0cb7586_step(_1c0cb6530_comptimeStatics* _self_, jule::I64 _26823_i, jule::Ptr<_1c0d4dde2_Var>* _26836_keyA, jule::Ptr<_1c0d4dde2_Var>* _26853_keyB) {
	if (((*(_26836_keyA)) != nullptr)) {
		(*((*((*((*(_26836_keyA))))._field_Value))._field_Data))._field_Constant=static__2021e65bb_NewI64(static_cast<jule::I64>(_26823_i));
		(*(*(*((*(_26836_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Model=jule::Any((*(*(*((*(_26836_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_26853_keyB)) != nullptr)) {
		(*(_1c0dde427_comptimeStatic((*((*((*(_26853_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_26823_i];
	};
}



inline jule::I64 _1c0cb781c_len(_1c0cb6530_comptimeStatics* _self_) {
	return (*(_self_))._field_fields.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cb6530_comptimeStatics _Src) {
	_Stream << _1c0cb68a4_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c0cb80ae_Str(_1c0cb7b2a_comptimeEnumField* _self_) {
	return jule::Str::lit("comptimeEnumField", 17);;
}



inline jule::Bool _1c0cb8400_Equal(jule::Ptr<_1c0cb7b2a_comptimeEnumField> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _29221_other) {
	return false;;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cb8873__Name(jule::Ptr<_1c0cb7b2a_comptimeEnumField> _self_, jule::Ptr<_1c0da8721_Eval>* _29626_e, jule::Ptr<_1c0c67998_FnCallExpr>* _29641_fc) {
	if (((*((*(_29641_fc))))._field_Args.len() > 0LL)) {
		_1c0da8c71_pushErr((*(_29626_e)).ptr(), (*((*((*(_29641_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2021e617b_Const> _30113_constant = static__2021e6e18_NewStr((*((*(_self_))._field_field))._field_Ident);;
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec92c0_primStr, ._field_Model=jule::Any(_30113_constant, &__jule_any_type19), ._field_Constant=_30113_constant});;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cb8bb4_subIdent(jule::Ptr<_1c0cb7b2a_comptimeEnumField> _self_, jule::Str* _30929_ident) {
	{
		auto &_match_expr{ (*(_30929_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1c43617db:;
			{
				jule::Ptr<_1c0c98699_FnIns> _31217_method = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>((void*)__jule_anon_1c43629c9, jule::Ptr<__jule_anon_1c43629c9_ctx>::make(__jule_anon_1c43629c9_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c43629c9_ctx_handler), });;
				return _1c0ccc634_buildAsComptimeMethodData(&(_31217_method));;
			}
		}
		else {
			_case_begin_1c4361500:;
			{
				return nullptr;;
			}
		}
		_match_end_1c4361687:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cb7b2a_comptimeEnumField _Src) {
	_Stream << _1c0cb80ae_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c0cb9346_Str(_1c0cb8ec2_comptimeEnumFields* _self_) {
	return jule::Str::lit("comptimeEnumFields", 18);;
}



inline jule::Bool _1c0cb9687_Equal(jule::Ptr<_1c0cb8ec2_comptimeEnumFields> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _33121_other) {
	return false;;
}



inline void _1c0cb9b0a_ready(_1c0cb8ec2_comptimeEnumFields* _self_, jule::Ptr<_1c0d4dde2_Var>* _33529_keyA, jule::Ptr<_1c0d4dde2_Var>* _33546_keyB) {
	if (((*(_33529_keyA)) != nullptr)) {
		(*((*(_33529_keyA))))._field_Constant=true;
		(*((*(_33529_keyA))))._field_Value=jule::new_ptr<_1c0da7b71_Value>(_1c0da7b71_Value{._field_Data=jule::new_ptr<_1c0da69e9_Data>()});
		(*((*(_33529_keyA))))._field_Kind=(*(_1c0ecc306_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_33546_keyB)) != nullptr)) {
		(*((*(_33546_keyB))))._field_Constant=true;
		(*((*(_33546_keyB))))._field_Value=jule::new_ptr<_1c0da7b71_Value>(_1c0da7b71_Value{._field_Data=jule::new_ptr<_1c0da69e9_Data>()});
		(*((*(_33546_keyB))))._field_Kind=jule::new_ptr<_1c0de00b5_TypeSymbol>(_1c0de00b5_TypeSymbol{._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(jule::new_ptr<_1c0cb7b2a_comptimeEnumField>(), 10)})});
	};
}



inline void _1c0cba028_step(_1c0cb8ec2_comptimeEnumFields* _self_, jule::I64 _35623_i, jule::Ptr<_1c0d4dde2_Var>* _35636_keyA, jule::Ptr<_1c0d4dde2_Var>* _35653_keyB) {
	if (((*(_35636_keyA)) != nullptr)) {
		(*((*((*((*(_35636_keyA))))._field_Value))._field_Data))._field_Constant=static__2021e65bb_NewI64(static_cast<jule::I64>(_35623_i));
		(*(*(*((*(_35636_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Model=jule::Any((*(*(*((*(_35636_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_35653_keyB)) != nullptr)) {
		(*(_1c0ddd13a_comptimeEnumField((*((*((*(_35653_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_35623_i];
	};
}



inline jule::I64 _1c0cba2ae_len(_1c0cb8ec2_comptimeEnumFields* _self_) {
	return (*(_self_))._field_fields.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cb8ec2_comptimeEnumFields _Src) {
	_Stream << _1c0cb9346_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c0cba941_Str(_1c0cba5bc_comptimeParam* _self_) {
	return jule::Str::lit("comptimeParam", 13);;
}



inline jule::Bool _1c0cbac82_Equal(jule::Ptr<_1c0cba5bc_comptimeParam> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _38021_other) {
	return false;;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cbb4e1__Name(jule::Ptr<_1c0cba5bc_comptimeParam> _self_, jule::Ptr<_1c0da8721_Eval>* _38426_e, jule::Ptr<_1c0c67998_FnCallExpr>* _38441_fc) {
	if (((*((*(_38441_fc))))._field_Args.len() > 0LL)) {
		_1c0da8c71_pushErr((*(_38426_e)).ptr(), (*((*((*(_38441_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2021e617b_Const> _38913_constant = static__2021e6e18_NewStr((*((*((*(_self_))._field_param))._field_Decl))._field_Ident);;
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec92c0_primStr, ._field_Model=jule::Any(_38913_constant, &__jule_any_type19), ._field_Constant=_38913_constant});;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cbb8dc__Type(jule::Ptr<_1c0cba5bc_comptimeParam> _self_, jule::Ptr<_1c0da8721_Eval>* _39730_e, jule::Ptr<_1c0c67998_FnCallExpr>* _39745_fc) {
	if (((*((*(_39745_fc))))._field_Args.len() > 0LL)) {
		_1c0da8c71_pushErr((*(_39730_e)).ptr(), (*((*((*(_39745_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1c0ccccb6_buildComptimeTypeInfoData(&((*((*(_39730_e))))._field_s), &((*((*(_self_))._field_param))._field_Kind));;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cbbcd8__Variadic(jule::Ptr<_1c0cba5bc_comptimeParam> _self_, jule::Ptr<_1c0da8721_Eval>* _40534_e, jule::Ptr<_1c0c67998_FnCallExpr>* _40549_fc) {
	if (((*((*(_40549_fc))))._field_Args.len() > 0LL)) {
		_1c0da8c71_pushErr((*(_40534_e)).ptr(), (*((*((*(_40549_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2021e617b_Const> _41013_constant = static__2021e6b4e_NewBool((*((*((*(_self_))._field_param))._field_Decl))._field_Variadic);;
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec9578_primBool, ._field_Model=jule::Any(_41013_constant, &__jule_any_type19), ._field_Constant=_41013_constant});;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cbc1d4__Reference(jule::Ptr<_1c0cba5bc_comptimeParam> _self_, jule::Ptr<_1c0da8721_Eval>* _41835_e, jule::Ptr<_1c0c67998_FnCallExpr>* _41850_fc) {
	if (((*((*(_41850_fc))))._field_Args.len() > 0LL)) {
		_1c0da8c71_pushErr((*(_41835_e)).ptr(), (*((*((*(_41850_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2021e617b_Const> _42313_constant = static__2021e6b4e_NewBool((*((*((*(_self_))._field_param))._field_Decl))._field_Reference);;
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec9578_primBool, ._field_Model=jule::Any(_42313_constant, &__jule_any_type19), ._field_Constant=_42313_constant});;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cbc525_subIdent(jule::Ptr<_1c0cba5bc_comptimeParam> _self_, jule::Str* _43129_ident) {
	{
		auto &_match_expr{ (*(_43129_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1c4376207:;
			{
				jule::Ptr<_1c0c98699_FnIns> _43417_method = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>((void*)__jule_anon_1c4377549, jule::Ptr<__jule_anon_1c4377549_ctx>::make(__jule_anon_1c4377549_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c4377549_ctx_handler), });;
				return _1c0ccc634_buildAsComptimeMethodData(&(_43417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Variadic", 8)) {
			_case_begin_1c437626d:;
			{
				jule::Ptr<_1c0c98699_FnIns> _44117_method = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>((void*)__jule_anon_1c43794a2, jule::Ptr<__jule_anon_1c43794a2_ctx>::make(__jule_anon_1c43794a2_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c43794a2_ctx_handler), });;
				return _1c0ccc634_buildAsComptimeMethodData(&(_44117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Reference", 9)) {
			_case_begin_1c43762d4:;
			{
				jule::Ptr<_1c0c98699_FnIns> _44817_method = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>((void*)__jule_anon_1c437b40a, jule::Ptr<__jule_anon_1c437b40a_ctx>::make(__jule_anon_1c437b40a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c437b40a_ctx_handler), });;
				return _1c0ccc634_buildAsComptimeMethodData(&(_44817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1c437635b:;
			{
				jule::Ptr<_1c0c98699_FnIns> _45517_method = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>((void*)__jule_anon_1c437d363, jule::Ptr<__jule_anon_1c437d363_ctx>::make(__jule_anon_1c437d363_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c437d363_ctx_handler), });;
				return _1c0ccc634_buildAsComptimeMethodData(&(_45517_method));;
			}
		}
		else {
			_case_begin_1c4375db6:;
			{
				return nullptr;;
			}
		}
		_match_end_1c437604d:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cba5bc_comptimeParam _Src) {
	_Stream << _1c0cba941_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c0cbca97_Str(_1c0cbc756_comptimeParams* _self_) {
	return jule::Str::lit("comptimeParams", 14);;
}



inline jule::Bool _1c0cbcdd8_Equal(jule::Ptr<_1c0cbc756_comptimeParams> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _47421_other) {
	return false;;
}



inline void _1c0cbd35b_ready(_1c0cbc756_comptimeParams* _self_, jule::Ptr<_1c0d4dde2_Var>* _47829_keyA, jule::Ptr<_1c0d4dde2_Var>* _47846_keyB) {
	if (((*(_47829_keyA)) != nullptr)) {
		(*((*(_47829_keyA))))._field_Constant=true;
		(*((*(_47829_keyA))))._field_Value=jule::new_ptr<_1c0da7b71_Value>(_1c0da7b71_Value{._field_Data=jule::new_ptr<_1c0da69e9_Data>()});
		(*((*(_47829_keyA))))._field_Kind=(*(_1c0ecc306_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_47846_keyB)) != nullptr)) {
		(*((*(_47846_keyB))))._field_Constant=true;
		(*((*(_47846_keyB))))._field_Value=jule::new_ptr<_1c0da7b71_Value>(_1c0da7b71_Value{._field_Data=jule::new_ptr<_1c0da69e9_Data>()});
		(*((*(_47846_keyB))))._field_Kind=jule::new_ptr<_1c0de00b5_TypeSymbol>(_1c0de00b5_TypeSymbol{._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(jule::new_ptr<_1c0cba5bc_comptimeParam>(), 12)})});
	};
}



inline void _1c0cbd779_step(_1c0cbc756_comptimeParams* _self_, jule::I64 _49923_i, jule::Ptr<_1c0d4dde2_Var>* _49936_keyA, jule::Ptr<_1c0d4dde2_Var>* _49953_keyB) {
	if (((*(_49936_keyA)) != nullptr)) {
		(*((*((*((*(_49936_keyA))))._field_Value))._field_Data))._field_Constant=static__2021e65bb_NewI64(static_cast<jule::I64>(_49923_i));
		(*(*(*((*(_49936_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Model=jule::Any((*(*(*((*(_49936_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_49953_keyB)) != nullptr)) {
		(*(_1c0ddd657_comptimeParam((*((*((*(_49953_keyB))))._field_Kind))._field_Kind.ptr())))._field_param=(*(_self_))._field_params[_49923_i];
	};
}



inline jule::I64 _1c0cbda10_len(_1c0cbc756_comptimeParams* _self_) {
	return (*(_self_))._field_params.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cbc756_comptimeParams _Src) {
	_Stream << _1c0cbca97_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c0cbe192_Str(_1c0cbdd1d_comptimeTypeInfos* _self_) {
	return jule::Str::lit("comptimeTypeInfos", 17);;
}



inline jule::Bool _1c0cbe4d3_Equal(jule::Ptr<_1c0cbdd1d_comptimeTypeInfos> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _52321_other) {
	return false;;
}



inline void _1c0cbe956_ready(_1c0cbdd1d_comptimeTypeInfos* _self_, jule::Ptr<_1c0d4dde2_Var>* _52729_keyA, jule::Ptr<_1c0d4dde2_Var>* _52746_keyB) {
	if (((*(_52729_keyA)) != nullptr)) {
		(*((*(_52729_keyA))))._field_Constant=true;
		(*((*(_52729_keyA))))._field_Value=jule::new_ptr<_1c0da7b71_Value>(_1c0da7b71_Value{._field_Data=jule::new_ptr<_1c0da69e9_Data>()});
		(*((*(_52729_keyA))))._field_Kind=(*(_1c0ecc306_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_52746_keyB)) != nullptr)) {
		(*((*(_52746_keyB))))._field_Constant=true;
		(*((*(_52746_keyB))))._field_Value=jule::new_ptr<_1c0da7b71_Value>(_1c0da7b71_Value{._field_Data=jule::new_ptr<_1c0da69e9_Data>()});
		(*((*(_52746_keyB))))._field_Kind=jule::new_ptr<_1c0de00b5_TypeSymbol>(_1c0de00b5_TypeSymbol{._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(jule::new_ptr<_1c0cc0418_comptimeTypeInfo>(), 15)})});
	};
}



inline void _1c0cbed74_step(_1c0cbdd1d_comptimeTypeInfos* _self_, jule::I64 _54823_i, jule::Ptr<_1c0d4dde2_Var>* _54836_keyA, jule::Ptr<_1c0d4dde2_Var>* _54853_keyB) {
	if (((*(_54836_keyA)) != nullptr)) {
		(*((*((*((*(_54836_keyA))))._field_Value))._field_Data))._field_Constant=static__2021e65bb_NewI64(static_cast<jule::I64>(_54823_i));
		(*(*(*((*(_54836_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Model=jule::Any((*(*(*((*(_54836_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_54853_keyB)) != nullptr)) {
		(*((*((*((*(_54853_keyB))))._field_Kind))._field_Kind))._field_Kind=jule::Trait<_1c0dd793c_Kind>((*(_self_))._field_types[_54823_i], 15);
	};
}



inline jule::I64 _1c0cc010a_len(_1c0cbdd1d_comptimeTypeInfos* _self_) {
	return (*(_self_))._field_types.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cbdd1d_comptimeTypeInfos _Src) {
	_Stream << _1c0cbe192_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c0cc078c_Str(_1c0cc0418_comptimeTypeInfo* _self_) {
	return ((jule::Str::lit("comptimeTypeInfo[", 17) + _1c0dd82ab_Str((*(_self_))._field_base.ptr())) + jule::Str::lit("]", 1));;
}



inline jule::Bool _1c0cc0acd_Equal(jule::Ptr<_1c0cc0418_comptimeTypeInfo> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _57221_other) {
	return false;;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cc122c__Str(jule::Ptr<_1c0cc0418_comptimeTypeInfo> _self_, jule::Ptr<_1c0da8721_Eval>* _57625_e, jule::Ptr<_1c0c67998_FnCallExpr>* _57640_fc) {
	if (((*((*(_57640_fc))))._field_Args.len() > 0LL)) {
		_1c0da8c71_pushErr((*(_57625_e)).ptr(), (*((*((*(_57640_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Str", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2021e617b_Const> _58113_constant = static__2021e6e18_NewStr(_1c0dd82ab_Str((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec92c0_primStr, ._field_Model=jule::Any(_58113_constant, &__jule_any_type19), ._field_Constant=_58113_constant});;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cc1628__Kind(jule::Ptr<_1c0cc0418_comptimeTypeInfo> _self_, jule::Ptr<_1c0da8721_Eval>* _58930_e, jule::Ptr<_1c0c67998_FnCallExpr>* _58945_fc) {
	if (((*((*(_58945_fc))))._field_Args.len() > 0LL)) {
		_1c0da8c71_pushErr((*(_58930_e)).ptr(), (*((*((*(_58945_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Kind", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c0cab27d_Enum> _59413_enm = _1c0d0b4dc_FindEnum(_1c0ccc942_findComptimePackage(&((*((*(_58930_e))))._field_s)).ptr(), jule::Str::lit("Kind", 4));;
	jule::Ptr<_1c0caa711_EnumItem> _59517_item = nullptr;;
	{
		
		if (_1c0dd9257_Void((*(_self_))._field_base.ptr())) {
			_case_begin_1c4393b09:;
			{
				_59517_item=_1c0cabd72_FindItem(_59413_enm.ptr(), jule::Str::lit("Void", 4));
			}
		}
		else if ((_1c0ddbab7_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c4393a0a:;
			{
				_59517_item=_1c0cabd72_FindItem(_59413_enm.ptr(), jule::Str::lit("Struct", 6));
			}
		}
		else if ((_1c0ddbd4d_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c43936b9:;
			{
				_59517_item=_1c0cabd72_FindItem(_59413_enm.ptr(), jule::Str::lit("Trait", 5));
			}
		}
		else if ((_1c0ddaa61_Ptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c4393730:;
			{
				if (_1c0de87e9_IsUnsafe(_1c0ddaa61_Ptr((*_self_.alloc)._field_base).ptr())) {
					_59517_item=_1c0cabd72_FindItem(_59413_enm.ptr(), jule::Str::lit("UnsafePtr", 9));
				} else {
					_59517_item=_1c0cabd72_FindItem(_59413_enm.ptr(), jule::Str::lit("Ptr", 3));
				};
			}
		}
		else if ((_1c0dda7ca_Sptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c4393796:;
			{
				_59517_item=_1c0cabd72_FindItem(_59413_enm.ptr(), jule::Str::lit("SmartPtr", 8));
			}
		}
		else if ((_1c0ddace7_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c439380c:;
			{
				_59517_item=_1c0cabd72_FindItem(_59413_enm.ptr(), jule::Str::lit("Enum", 4));
			}
		}
		else if ((_1c0ddc0d4_Map((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c4394368:;
			{
				_59517_item=_1c0cabd72_FindItem(_59413_enm.ptr(), jule::Str::lit("Map", 3));
			}
		}
		else if ((_1c0ddb59a_Slc((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c43943ce:;
			{
				_59517_item=_1c0cabd72_FindItem(_59413_enm.ptr(), jule::Str::lit("Slice", 5));
			}
		}
		else if ((_1c0ddb314_Arr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c4394445:;
			{
				_59517_item=_1c0cabd72_FindItem(_59413_enm.ptr(), jule::Str::lit("Array", 5));
			}
		}
		else if ((_1c0ddb831_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c43944ab:;
			{
				_59517_item=_1c0cabd72_FindItem(_59413_enm.ptr(), jule::Str::lit("Func", 4));
			}
		}
		else if ((_1c0ddc36a_Tup((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c4394522:;
			{
				_59517_item=_1c0cabd72_FindItem(_59413_enm.ptr(), jule::Str::lit("Tuple", 5));
			}
		}
		else if ((_1c0dda544_Prim((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c4394588:;
			{
				jule::Ptr<_1c0de09bc_Prim> _62413_prim = _1c0dda544_Prim((*_self_.alloc)._field_base);;
				{
					
					if (_1c0de41da_IsAny(_62413_prim.ptr())) {
						_case_begin_1c43a061b:;
						{
							_59517_item=_1c0cabd72_FindItem(_59413_enm.ptr(), jule::Str::lit("Any", 3));
						}
					}
					else if (_1c0de3bbd_IsBool(_62413_prim.ptr())) {
						_case_begin_1c43a051c:;
						{
							_59517_item=_1c0cabd72_FindItem(_59413_enm.ptr(), jule::Str::lit("Bool", 4));
						}
					}
					else if (_1c0de3e54_IsStr(_62413_prim.ptr())) {
						_case_begin_1c43a030d:;
						{
							_59517_item=_1c0cabd72_FindItem(_59413_enm.ptr(), jule::Str::lit("Str", 3));
						}
					}
					else if (_1c0de2ded_IsF32(_62413_prim.ptr())) {
						_case_begin_1c43a0374:;
						{
							_59517_item=_1c0cabd72_FindItem(_59413_enm.ptr(), jule::Str::lit("F32", 3));
						}
					}
					else if (_1c0de3184_IsF64(_62413_prim.ptr())) {
						_case_begin_1c43a03da:;
						{
							_59517_item=_1c0cabd72_FindItem(_59413_enm.ptr(), jule::Str::lit("F64", 3));
						}
					}
					else if (_1c0de187a_IsI8(_62413_prim.ptr())) {
						_case_begin_1c43a0451:;
						{
							_59517_item=_1c0cabd72_FindItem(_59413_enm.ptr(), jule::Str::lit("I8", 2));
						}
					}
					else if (_1c0de1b11_IsI16(_62413_prim.ptr())) {
						_case_begin_1c43a0d7a:;
						{
							_59517_item=_1c0cabd72_FindItem(_59413_enm.ptr(), jule::Str::lit("I16", 3));
						}
					}
					else if (_1c0de1d97_IsI32(_62413_prim.ptr())) {
						_case_begin_1c43a0de1:;
						{
							_59517_item=_1c0cabd72_FindItem(_59413_enm.ptr(), jule::Str::lit("I32", 3));
						}
					}
					else if (_1c0de212d_IsI64(_62413_prim.ptr())) {
						_case_begin_1c43a0e68:;
						{
							_59517_item=_1c0cabd72_FindItem(_59413_enm.ptr(), jule::Str::lit("I64", 3));
						}
					}
					else if (_1c0de23b4_IsU8(_62413_prim.ptr())) {
						_case_begin_1c43a0ee0:;
						{
							_59517_item=_1c0cabd72_FindItem(_59413_enm.ptr(), jule::Str::lit("U8", 2));
						}
					}
					else if (_1c0de264a_IsU16(_62413_prim.ptr())) {
						_case_begin_1c43a1067:;
						{
							_59517_item=_1c0cabd72_FindItem(_59413_enm.ptr(), jule::Str::lit("U16", 3));
						}
					}
					else if (_1c0de28d1_IsU32(_62413_prim.ptr())) {
						_case_begin_1c43a10de:;
						{
							_59517_item=_1c0cabd72_FindItem(_59413_enm.ptr(), jule::Str::lit("U32", 3));
						}
					}
					else if (_1c0de2b67_IsU64(_62413_prim.ptr())) {
						_case_begin_1c43a1166:;
						{
							_59517_item=_1c0cabd72_FindItem(_59413_enm.ptr(), jule::Str::lit("U64", 3));
						}
					}
					else if (_1c0de341a_IsInt(_62413_prim.ptr())) {
						_case_begin_1c43a11dd:;
						{
							_59517_item=_1c0cabd72_FindItem(_59413_enm.ptr(), jule::Str::lit("Int", 3));
						}
					}
					else if (_1c0de36a1_IsUint(_62413_prim.ptr())) {
						_case_begin_1c43a1265:;
						{
							_59517_item=_1c0cabd72_FindItem(_59413_enm.ptr(), jule::Str::lit("Uint", 4));
						}
					}
					else if (_1c0de3937_IsUintptr(_62413_prim.ptr())) {
						_case_begin_1c43a12dc:;
						{
							_59517_item=_1c0cabd72_FindItem(_59413_enm.ptr(), jule::Str::lit("Uintptr", 7));
						}
					}
					else {
						_case_begin_1c43a0165:;
						{
							jule::panic((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1c0dd82ab_Str((*_self_.alloc)._field_base)) + jule::Str("\nlocation: std/jule/sema/comptime.jule:659:17"));;
						}
					}
					_match_end_1c43a00ee:;
				};
			}
		}
		else {
			_case_begin_1c4393653:;
			{
				jule::panic((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1c0dd82ab_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:662:13"));;
			}
		}
		_match_end_1c43935ba:;
	};
	return _1c0dd432e_evalEnumStatic(&(_59413_enm), &(_59517_item), &((*((*(_58945_fc))))._field_Token));;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cc1a24__Bits(jule::Ptr<_1c0cc0418_comptimeTypeInfo> _self_, jule::Ptr<_1c0da8721_Eval>* _66730_e, jule::Ptr<_1c0c67998_FnCallExpr>* _66745_fc) {
	if (((*((*(_66745_fc))))._field_Args.len() > 0LL)) {
		_1c0da8c71_pushErr((*(_66730_e)).ptr(), (*((*((*(_66745_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c0de09bc_Prim> _6729_prim = _1c0dda544_Prim((*(_self_))._field_base.ptr());;
	if ((_6729_prim == nullptr)) {
		_1c0da8c71_pushErr((*(_66730_e)).ptr(), (*((*(_66745_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _6779_n = _2021da4e4_BitsizeOf((*(_6729_prim))._field_Kind);;
	if ((_6779_n == -1LL)) {
		_1c0da8c71_pushErr((*(_66730_e)).ptr(), (*((*(_66745_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2021e617b_Const> _68213_constant = static__2021e65bb_NewI64(static_cast<jule::I64>(_6779_n));;
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec92c0_primStr, ._field_Model=jule::Any(_68213_constant, &__jule_any_type19), ._field_Constant=_68213_constant});;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cc1e20__Elem(jule::Ptr<_1c0cc0418_comptimeTypeInfo> _self_, jule::Ptr<_1c0da8721_Eval>* _69030_e, jule::Ptr<_1c0c67998_FnCallExpr>* _69045_fc) {
	if (((*((*(_69045_fc))))._field_Args.len() > 0LL)) {
		_1c0da8c71_pushErr((*(_69030_e)).ptr(), (*((*((*(_69045_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c0de7cb0_Ptr> _69513_ptr = _1c0ddaa61_Ptr((*(_self_))._field_base.ptr());;
	if ((_69513_ptr != nullptr)) {
		if (_1c0de87e9_IsUnsafe(_69513_ptr)) {
			_1c0da8c71_pushErr((*(_69030_e)).ptr(), (*((*(_69045_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
			return nullptr;;
		};
		return _1c0ccccb6_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*_69513_ptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1c0de44e8_Sptr> _70313_sptr = _1c0dda7ca_Sptr((*_self_.alloc)._field_base);;
	if ((_70313_sptr != nullptr)) {
		return _1c0ccccb6_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*_70313_sptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1c0de4ebb_Slc> _70713_slice = _1c0ddb59a_Slc((*_self_.alloc)._field_base);;
	if ((_70713_slice != nullptr)) {
		return _1c0ccccb6_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*_70713_slice.alloc)._field_Elem));;
	};
	jule::Ptr<_1c0de72dc_Arr> _71113_array = _1c0ddb314_Arr((*_self_.alloc)._field_base);;
	if ((_71113_array != nullptr)) {
		return _1c0ccccb6_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*_71113_array.alloc)._field_Elem));;
	};
	jule::Ptr<_1c0cab27d_Enum> _71513_enm = _1c0ddace7_Enum((*_self_.alloc)._field_base);;
	if ((_71513_enm != nullptr)) {
		return _1c0ccccb6_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*((*_71513_enm.alloc)._field_Kind))._field_Kind));;
	};
	_1c0da8c71_pushErr((*(_69030_e)).ptr(), (*((*(_69045_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cc231b__Size(jule::Ptr<_1c0cc0418_comptimeTypeInfo> _self_, jule::Ptr<_1c0da8721_Eval>* _72330_e, jule::Ptr<_1c0c67998_FnCallExpr>* _72345_fc) {
	if (((*((*(_72345_fc))))._field_Args.len() > 0LL)) {
		_1c0da8c71_pushErr((*(_72330_e)).ptr(), (*((*((*(_72345_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c0de72dc_Arr> _72813_arr = _1c0ddb314_Arr((*(_self_))._field_base.ptr());;
	if ((_72813_arr == nullptr)) {
		_1c0da8c71_pushErr((*(_72330_e)).ptr(), (*((*(_72345_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2021e617b_Const> _73313_constant = static__2021e65bb_NewI64(static_cast<jule::I64>((*(_72813_arr))._field_N));;
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec9ea2_primInt, ._field_Model=jule::Any(_73313_constant, &__jule_any_type19), ._field_Constant=_73313_constant});;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cc2717__Key(jule::Ptr<_1c0cc0418_comptimeTypeInfo> _self_, jule::Ptr<_1c0da8721_Eval>* _74129_e, jule::Ptr<_1c0c67998_FnCallExpr>* _74144_fc) {
	if (((*((*(_74144_fc))))._field_Args.len() > 0LL)) {
		_1c0da8c71_pushErr((*(_74129_e)).ptr(), (*((*((*(_74144_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c0de6660_Map> _74613_m = _1c0ddc0d4_Map((*(_self_))._field_base.ptr());;
	if ((_74613_m == nullptr)) {
		_1c0da8c71_pushErr((*(_74129_e)).ptr(), (*((*(_74144_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1c0ccccb6_buildComptimeTypeInfoData(&((*((*(_74129_e))))._field_s), &((*(_74613_m))._field_Key));;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cc2b13__Value(jule::Ptr<_1c0cc0418_comptimeTypeInfo> _self_, jule::Ptr<_1c0da8721_Eval>* _75431_e, jule::Ptr<_1c0c67998_FnCallExpr>* _75446_fc) {
	if (((*((*(_75446_fc))))._field_Args.len() > 0LL)) {
		_1c0da8c71_pushErr((*(_75431_e)).ptr(), (*((*((*(_75446_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c0de6660_Map> _75913_m = _1c0ddc0d4_Map((*(_self_))._field_base.ptr());;
	if ((_75913_m == nullptr)) {
		_1c0da8c71_pushErr((*(_75431_e)).ptr(), (*((*(_75446_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1c0ccccb6_buildComptimeTypeInfoData(&((*((*(_75431_e))))._field_s), &((*(_75913_m))._field_Val));;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cc300e__Fields(jule::Ptr<_1c0cc0418_comptimeTypeInfo> _self_, jule::Ptr<_1c0da8721_Eval>* _76732_e, jule::Ptr<_1c0c67998_FnCallExpr>* _76747_fc) {
	if (((*((*(_76747_fc))))._field_Args.len() > 0LL)) {
		_1c0da8c71_pushErr((*(_76732_e)).ptr(), (*((*((*(_76747_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c0c83552_StructIns> _77213_s = _1c0ddbab7_Struct((*(_self_))._field_base.ptr());;
	if ((_77213_s != nullptr)) {
		return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(jule::new_ptr<_1c0cb3274_comptimeStructFields>(_1c0cb3274_comptimeStructFields{._field_fields=(*_77213_s.alloc)._field_Fields}), 7)}), });;
	};
	jule::Ptr<_1c0cab27d_Enum> _78213_enm = _1c0ddace7_Enum((*_self_.alloc)._field_base);;
	if ((_78213_enm != nullptr)) {
		return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(jule::new_ptr<_1c0cb8ec2_comptimeEnumFields>(_1c0cb8ec2_comptimeEnumFields{._field_fields=(*_78213_enm.alloc)._field_Items}), 11)}), });;
	};
	_1c0da8c71_pushErr((*(_76732_e)).ptr(), (*((*(_76747_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cc340a__Statics(jule::Ptr<_1c0cc0418_comptimeTypeInfo> _self_, jule::Ptr<_1c0da8721_Eval>* _79633_e, jule::Ptr<_1c0c67998_FnCallExpr>* _79648_fc) {
	if (((*((*(_79648_fc))))._field_Args.len() > 0LL)) {
		_1c0da8c71_pushErr((*(_79633_e)).ptr(), (*((*((*(_79648_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c0c83552_StructIns> _80113_s = _1c0ddbab7_Struct((*(_self_))._field_base.ptr());;
	if ((_80113_s == nullptr)) {
		_1c0da8c71_pushErr((*(_79633_e)).ptr(), (*((*(_79648_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(jule::new_ptr<_1c0cb6530_comptimeStatics>(_1c0cb6530_comptimeStatics{._field_fields=(*(_80113_s))._field_Statics}), 9)}), });;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cc3806__Public(jule::Ptr<_1c0cc0418_comptimeTypeInfo> _self_, jule::Ptr<_1c0da8721_Eval>* _81532_e, jule::Ptr<_1c0c67998_FnCallExpr>* _81547_fc) {
	if (((*((*(_81547_fc))))._field_Args.len() > 0LL)) {
		_1c0da8c71_pushErr((*(_81532_e)).ptr(), (*((*((*(_81547_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Bool _82013_public = false;;
	{
		
		if ((_1c0ddbab7_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c43d382a:;
			{
				_82013_public=(*((*(_1c0ddbab7_Struct((*_self_.alloc)._field_base)))._field_Decl))._field_Public;
			}
		}
		else if ((_1c0ddbd4d_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c43d492a:;
			{
				_82013_public=(*(_1c0ddbd4d_Trait((*_self_.alloc)._field_base)))._field_Public;
			}
		}
		else if ((_1c0ddace7_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c43d4991:;
			{
				_82013_public=(*(_1c0ddace7_Enum((*_self_.alloc)._field_base)))._field_Public;
			}
		}
		else if ((_1c0ddb07d_TypeEnum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1c43d3561:;
			{
				_82013_public=(*(_1c0ddb07d_TypeEnum((*_self_.alloc)._field_base)))._field_Public;
			}
		}
		else {
			_case_begin_1c43d34ea:;
			{
				_1c0da8c71_pushErr((*(_81532_e)).ptr(), (*((*(_81547_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c43d33c9:;
	};
	jule::Ptr<_2021e617b_Const> _83413_constant = static__2021e6b4e_NewBool(_82013_public);;
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec9578_primBool, ._field_Model=jule::Any(_83413_constant, &__jule_any_type19), ._field_Constant=_83413_constant});;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cc3c02__Binded(jule::Ptr<_1c0cc0418_comptimeTypeInfo> _self_, jule::Ptr<_1c0da8721_Eval>* _84232_e, jule::Ptr<_1c0c67998_FnCallExpr>* _84247_fc) {
	if (((*((*(_84247_fc))))._field_Args.len() > 0LL)) {
		_1c0da8c71_pushErr((*(_84232_e)).ptr(), (*((*((*(_84247_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2021e617b_Const> _84713_constant = static__2021e6b4e_NewBool(_1c0dd8c3a_Binded((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec9578_primBool, ._field_Model=jule::Any(_84713_constant, &__jule_any_type19), ._field_Constant=_84713_constant});;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cc40ed__Ordered(jule::Ptr<_1c0cc0418_comptimeTypeInfo> _self_, jule::Ptr<_1c0da8721_Eval>* _85529_e, jule::Ptr<_1c0c67998_FnCallExpr>* _85544_fc) {
	if (((*((*(_85544_fc))))._field_Args.len() > 0LL)) {
		_1c0da8c71_pushErr((*(_85529_e)).ptr(), (*((*((*(_85544_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Ordered", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2021e617b_Const> _86013_constant = static__2021e6b4e_NewBool(_1c0dd9a0a_Ordered((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec92c0_primStr, ._field_Model=jule::Any(_86013_constant, &__jule_any_type19), ._field_Constant=_86013_constant});;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cc44e9__Comparable(jule::Ptr<_1c0cc0418_comptimeTypeInfo> _self_, jule::Ptr<_1c0da8721_Eval>* _86832_e, jule::Ptr<_1c0c67998_FnCallExpr>* _86847_fc) {
	if (((*((*(_86847_fc))))._field_Args.len() > 0LL)) {
		_1c0da8c71_pushErr((*(_86832_e)).ptr(), (*((*((*(_86847_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Comparable", 10), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2021e617b_Const> _87313_constant = static__2021e6b4e_NewBool(_1c0dd94dd_Comparable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec92c0_primStr, ._field_Model=jule::Any(_87313_constant, &__jule_any_type19), ._field_Constant=_87313_constant});;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cc48e5__Mutable(jule::Ptr<_1c0cc0418_comptimeTypeInfo> _self_, jule::Ptr<_1c0da8721_Eval>* _88129_e, jule::Ptr<_1c0c67998_FnCallExpr>* _88144_fc) {
	if (((*((*(_88144_fc))))._field_Args.len() > 0LL)) {
		_1c0da8c71_pushErr((*(_88129_e)).ptr(), (*((*((*(_88144_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2021e617b_Const> _88613_constant = static__2021e6b4e_NewBool(_1c0dd9774_Mutable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec9578_primBool, ._field_Model=jule::Any(_88613_constant, &__jule_any_type19), ._field_Constant=_88613_constant});;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cc4ce1__Types(jule::Ptr<_1c0cc0418_comptimeTypeInfo> _self_, jule::Ptr<_1c0da8721_Eval>* _89431_e, jule::Ptr<_1c0c67998_FnCallExpr>* _89446_fc) {
	if (((*((*(_89446_fc))))._field_Args.len() > 0LL)) {
		_1c0da8c71_pushErr((*(_89431_e)).ptr(), (*((*((*(_89446_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c0de5ab0_Tuple> _89913_tup = _1c0ddc36a_Tup((*(_self_))._field_base.ptr());;
	if ((_89913_tup == nullptr)) {
		_1c0da8c71_pushErr((*(_89431_e)).ptr(), (*((*(_89446_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c0cbdd1d_comptimeTypeInfos> _90413_infos = jule::new_ptr<_1c0cbdd1d_comptimeTypeInfos>(_1c0cbdd1d_comptimeTypeInfos{._field_types=jule::Slice<jule::Ptr<_1c0cc0418_comptimeTypeInfo>>::alloc(0LL, (*(_89913_tup))._field_Types.len())});;
	{
		auto expr = &((*(_89913_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c43e905a:;
		if (it != expr_end) {
			jule::Ptr<_1c0dd7de3_TypeKind> _90721_t = *it;
			{
				(*(_90413_infos))._field_types=jule::append((*_90413_infos.alloc)._field_types,jule::Slice<jule::Ptr<_1c0cc0418_comptimeTypeInfo>>::make({_1c0d2a8b3_pushComptimeTypeInfo((*((*((*(_89431_e))))._field_s))._field_meta.ptr(), &(_90721_t))}));
			}
			_iter_next_1c43e905a:;
			++it;
			goto _iter_begin_1c43e905a;
		}
		_iter_end_1c43e905a:;
	};
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(_90413_infos, 14)}), });;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cc51dc__Exceptional(jule::Ptr<_1c0cc0418_comptimeTypeInfo> _self_, jule::Ptr<_1c0da8721_Eval>* _91737_e, jule::Ptr<_1c0c67998_FnCallExpr>* _91752_fc) {
	if (((*((*(_91752_fc))))._field_Args.len() > 0LL)) {
		_1c0da8c71_pushErr((*(_91737_e)).ptr(), (*((*((*(_91752_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c0c98699_FnIns> _92213_f = _1c0ddb831_Fn((*(_self_))._field_base.ptr());;
	if ((_92213_f == nullptr)) {
		_1c0da8c71_pushErr((*(_91737_e)).ptr(), (*((*(_91752_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2021e617b_Const> _92713_constant = static__2021e6b4e_NewBool((((*(_92213_f))._field_Decl != nullptr) && (*(*(_92213_f))._field_Decl.alloc)._field_Exceptional));;
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec9578_primBool, ._field_Model=jule::Any(_92713_constant, &__jule_any_type19), ._field_Constant=_92713_constant});;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cc55d8__CanNil(jule::Ptr<_1c0cc0418_comptimeTypeInfo> _self_, jule::Ptr<_1c0da8721_Eval>* _93532_e, jule::Ptr<_1c0c67998_FnCallExpr>* _93547_fc) {
	if (((*((*(_93547_fc))))._field_Args.len() > 0LL)) {
		_1c0da8c71_pushErr((*(_93532_e)).ptr(), (*((*((*(_93547_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("CanNil", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2021e617b_Const> _94013_constant = static__2021e6b4e_NewBool(_1c0dd9c91_NilCompatible((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec9578_primBool, ._field_Model=jule::Any(_94013_constant, &__jule_any_type19), ._field_Constant=_94013_constant});;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cc59d4__RC(jule::Ptr<_1c0cc0418_comptimeTypeInfo> _self_, jule::Ptr<_1c0da8721_Eval>* _94828_e, jule::Ptr<_1c0c67998_FnCallExpr>* _94843_fc) {
	if (((*((*(_94843_fc))))._field_Args.len() > 0LL)) {
		_1c0da8c71_pushErr((*(_94828_e)).ptr(), (*((*((*(_94843_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("RC", 2), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2021e617b_Const> _95313_constant = static__2021e6b4e_NewBool(_1c0dda027_PerformsRC((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec9578_primBool, ._field_Model=jule::Any(_95313_constant, &__jule_any_type19), ._field_Constant=_95313_constant});;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cc5dd0__Result(jule::Ptr<_1c0cc0418_comptimeTypeInfo> _self_, jule::Ptr<_1c0da8721_Eval>* _96132_e, jule::Ptr<_1c0c67998_FnCallExpr>* _96147_fc) {
	if (((*((*(_96147_fc))))._field_Args.len() > 0LL)) {
		_1c0da8c71_pushErr((*(_96132_e)).ptr(), (*((*((*(_96147_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c0c98699_FnIns> _96613_f = _1c0ddb831_Fn((*(_self_))._field_base.ptr());;
	if ((_96613_f == nullptr)) {
		_1c0da8c71_pushErr((*(_96132_e)).ptr(), (*((*(_96147_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*(_96613_f))._field_Result == nullptr)) {
		return _1c0ccccb6_buildComptimeTypeInfoData(&((*((*(_96132_e))))._field_s), &(_1c0ec8c1a_primVoid));;
	};
	return _1c0ccccb6_buildComptimeTypeInfoData(&((*((*(_96132_e))))._field_s), &((*(_96613_f))._field_Result));;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cc62cb__Params(jule::Ptr<_1c0cc0418_comptimeTypeInfo> _self_, jule::Ptr<_1c0da8721_Eval>* _97732_e, jule::Ptr<_1c0c67998_FnCallExpr>* _97747_fc) {
	if (((*((*(_97747_fc))))._field_Args.len() > 0LL)) {
		_1c0da8c71_pushErr((*(_97732_e)).ptr(), (*((*((*(_97747_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c0c98699_FnIns> _98213_f = _1c0ddb831_Fn((*(_self_))._field_base.ptr());;
	if ((_98213_f == nullptr)) {
		_1c0da8c71_pushErr((*(_97732_e)).ptr(), (*((*(_97747_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(jule::new_ptr<_1c0cbc756_comptimeParams>(_1c0cbc756_comptimeParams{._field_params=(*(_98213_f))._field_Params}), 13)}), });;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cc661c_subIdent(jule::Ptr<_1c0cc0418_comptimeTypeInfo> _self_, jule::Str* _99429_ident) {
	{
		auto &_match_expr{ (*(_99429_ident)) };
		
		if (_match_expr == jule::Str::lit("Str", 3)) {
			_case_begin_1c440e1c4:;
			{
				jule::Ptr<_1c0c98699_FnIns> _99717_method = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>((void*)__jule_anon_1c4410aaa, jule::Ptr<__jule_anon_1c4410aaa_ctx>::make(__jule_anon_1c4410aaa_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c4410aaa_ctx_handler), });;
				return _1c0ccc634_buildAsComptimeMethodData(&(_99717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Bits", 4)) {
			_case_begin_1c440de93:;
			{
				jule::Ptr<_1c0c98699_FnIns> _100417_method = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>((void*)__jule_anon_1c4412a13, jule::Ptr<__jule_anon_1c4412a13_ctx>::make(__jule_anon_1c4412a13_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c4412a13_ctx_handler), });;
				return _1c0ccc634_buildAsComptimeMethodData(&(_100417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Elem", 4)) {
			_case_begin_1c440e009:;
			{
				jule::Ptr<_1c0c98699_FnIns> _101117_method = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>((void*)__jule_anon_1c441496b, jule::Ptr<__jule_anon_1c441496b_ctx>::make(__jule_anon_1c441496b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c441496b_ctx_handler), });;
				return _1c0ccc634_buildAsComptimeMethodData(&(_101117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Size", 4)) {
			_case_begin_1c440e23a:;
			{
				jule::Ptr<_1c0c98699_FnIns> _101817_method = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>((void*)__jule_anon_1c44168c4, jule::Ptr<__jule_anon_1c44168c4_ctx>::make(__jule_anon_1c44168c4_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c44168c4_ctx_handler), });;
				return _1c0ccc634_buildAsComptimeMethodData(&(_101817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Key", 3)) {
			_case_begin_1c440e2a1:;
			{
				jule::Ptr<_1c0c98699_FnIns> _102517_method = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>((void*)__jule_anon_1c441882c, jule::Ptr<__jule_anon_1c441882c_ctx>::make(__jule_anon_1c441882c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c441882c_ctx_handler), });;
				return _1c0ccc634_buildAsComptimeMethodData(&(_102517_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Value", 5)) {
			_case_begin_1c440e317:;
			{
				jule::Ptr<_1c0c98699_FnIns> _103217_method = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>((void*)__jule_anon_1c441a785, jule::Ptr<__jule_anon_1c441a785_ctx>::make(__jule_anon_1c441a785_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c441a785_ctx_handler), });;
				return _1c0ccc634_buildAsComptimeMethodData(&(_103217_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1c440e37d:;
			{
				jule::Ptr<_1c0c98699_FnIns> _103917_method = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>((void*)__jule_anon_1c441c6dd, jule::Ptr<__jule_anon_1c441c6dd_ctx>::make(__jule_anon_1c441c6dd_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c441c6dd_ctx_handler), });;
				return _1c0ccc634_buildAsComptimeMethodData(&(_103917_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1c440e46b:;
			{
				jule::Ptr<_1c0c98699_FnIns> _104617_method = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>((void*)__jule_anon_1c441e646, jule::Ptr<__jule_anon_1c441e646_ctx>::make(__jule_anon_1c441e646_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c441e646_ctx_handler), });;
				return _1c0ccc634_buildAsComptimeMethodData(&(_104617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1c440e4d2:;
			{
				jule::Ptr<_1c0c98699_FnIns> _105317_method = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>((void*)__jule_anon_1c4421824, jule::Ptr<__jule_anon_1c4421824_ctx>::make(__jule_anon_1c4421824_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c4421824_ctx_handler), });;
				return _1c0ccc634_buildAsComptimeMethodData(&(_105317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Types", 5)) {
			_case_begin_1c440e548:;
			{
				jule::Ptr<_1c0c98699_FnIns> _106017_method = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>((void*)__jule_anon_1c442377c, jule::Ptr<__jule_anon_1c442377c_ctx>::make(__jule_anon_1c442377c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c442377c_ctx_handler), });;
				return _1c0ccc634_buildAsComptimeMethodData(&(_106017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1c440e5ae:;
			{
				jule::Ptr<_1c0c98699_FnIns> _106717_method = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>((void*)__jule_anon_1c44256d5, jule::Ptr<__jule_anon_1c44256d5_ctx>::make(__jule_anon_1c44256d5_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c44256d5_ctx_handler), });;
				return _1c0ccc634_buildAsComptimeMethodData(&(_106717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1c440e636:;
			{
				jule::Ptr<_1c0c98699_FnIns> _107417_method = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>((void*)__jule_anon_1c442763d, jule::Ptr<__jule_anon_1c442763d_ctx>::make(__jule_anon_1c442763d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c442763d_ctx_handler), });;
				return _1c0ccc634_buildAsComptimeMethodData(&(_107417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Ordered", 7)) {
			_case_begin_1c440e6ad:;
			{
				jule::Ptr<_1c0c98699_FnIns> _108117_method = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>((void*)__jule_anon_1c4429596, jule::Ptr<__jule_anon_1c4429596_ctx>::make(__jule_anon_1c4429596_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c4429596_ctx_handler), });;
				return _1c0ccc634_buildAsComptimeMethodData(&(_108117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Comparable", 10)) {
			_case_begin_1c440e735:;
			{
				jule::Ptr<_1c0c98699_FnIns> _108817_method = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>((void*)__jule_anon_1c442b4ee, jule::Ptr<__jule_anon_1c442b4ee_ctx>::make(__jule_anon_1c442b4ee_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c442b4ee_ctx_handler), });;
				return _1c0ccc634_buildAsComptimeMethodData(&(_108817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1c440e7ac:;
			{
				jule::Ptr<_1c0c98699_FnIns> _109517_method = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>((void*)__jule_anon_1c442d457, jule::Ptr<__jule_anon_1c442d457_ctx>::make(__jule_anon_1c442d457_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c442d457_ctx_handler), });;
				return _1c0ccc634_buildAsComptimeMethodData(&(_109517_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Exceptional", 11)) {
			_case_begin_1c440e834:;
			{
				jule::Ptr<_1c0c98699_FnIns> _110217_method = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>((void*)__jule_anon_1c44303b0, jule::Ptr<__jule_anon_1c44303b0_ctx>::make(__jule_anon_1c44303b0_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c44303b0_ctx_handler), });;
				return _1c0ccc634_buildAsComptimeMethodData(&(_110217_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("CanNil", 6)) {
			_case_begin_1c440e8ab:;
			{
				jule::Ptr<_1c0c98699_FnIns> _110917_method = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>((void*)__jule_anon_1c4432318, jule::Ptr<__jule_anon_1c4432318_ctx>::make(__jule_anon_1c4432318_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c4432318_ctx_handler), });;
				return _1c0ccc634_buildAsComptimeMethodData(&(_110917_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("RC", 2)) {
			_case_begin_1c440e933:;
			{
				jule::Ptr<_1c0c98699_FnIns> _111617_method = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>((void*)__jule_anon_1c4439144, jule::Ptr<__jule_anon_1c4439144_ctx>::make(__jule_anon_1c4439144_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c4439144_ctx_handler), });;
				return _1c0ccc634_buildAsComptimeMethodData(&(_111617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Result", 6)) {
			_case_begin_1c440e9aa:;
			{
				jule::Ptr<_1c0c98699_FnIns> _112317_method = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>((void*)__jule_anon_1c443b036, jule::Ptr<__jule_anon_1c443b036_ctx>::make(__jule_anon_1c443b036_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c443b036_ctx_handler), });;
				return _1c0ccc634_buildAsComptimeMethodData(&(_112317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Kind", 4)) {
			_case_begin_1c440ea32:;
			{
				jule::Ptr<_1c0c98699_FnIns> _113017_method = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>((void*)__jule_anon_1c443ce8e, jule::Ptr<__jule_anon_1c443ce8e_ctx>::make(__jule_anon_1c443ce8e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c443ce8e_ctx_handler), });;
				return _1c0ccc634_buildAsComptimeMethodData(&(_113017_method));;
			}
		}
		else {
			_case_begin_1c440bc4e:;
			{
				return nullptr;;
			}
		}
		_match_end_1c440dc73:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cc0418_comptimeTypeInfo _Src) {
	_Stream << _1c0cc078c_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c0cc6c9e_Str(_1c0cc692a_comptimeValue* _self_) {
	return jule::Str::lit("comptimeValue", 13);;
}



inline jule::Bool _1c0cc70e0_Equal(jule::Ptr<_1c0cc692a_comptimeValue> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _114921_other) {
	return false;;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cc7640__Unwrap(jule::Ptr<_1c0cc692a_comptimeValue> _self_, jule::Ptr<_1c0da8721_Eval>* _115332_e, jule::Ptr<_1c0c67998_FnCallExpr>* _115347_fc) {
	if (((*((*(_115347_fc))))._field_Args.len() > 0LL)) {
		_1c0da8c71_pushErr((*(_115332_e)).ptr(), (*((*((*(_115347_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Unwrap", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_self_))._field_data;;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cc7a3b__Type(jule::Ptr<_1c0cc692a_comptimeValue> _self_, jule::Ptr<_1c0da8721_Eval>* _116130_e, jule::Ptr<_1c0c67998_FnCallExpr>* _116145_fc) {
	if (((*((*(_116145_fc))))._field_Args.len() > 0LL)) {
		_1c0da8c71_pushErr((*(_116130_e)).ptr(), (*((*((*(_116145_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1c0ccccb6_buildComptimeTypeInfoData(&((*((*(_116130_e))))._field_s), &((*((*(_self_))._field_data))._field_Kind));;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cc7e37__Lvalue(jule::Ptr<_1c0cc692a_comptimeValue> _self_, jule::Ptr<_1c0da8721_Eval>* _116932_e, jule::Ptr<_1c0c67998_FnCallExpr>* _116947_fc) {
	if (((*((*(_116947_fc))))._field_Args.len() > 0LL)) {
		_1c0da8c71_pushErr((*(_116932_e)).ptr(), (*((*((*(_116947_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Lvalue", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2021e617b_Const> _117413_constant = static__2021e6b4e_NewBool((*((*(_self_))._field_data))._field_Lvalue);;
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec9578_primBool, ._field_Model=jule::Any(_117413_constant, &__jule_any_type19), ._field_Constant=_117413_constant});;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cc8333__Mutable(jule::Ptr<_1c0cc692a_comptimeValue> _self_, jule::Ptr<_1c0da8721_Eval>* _118233_e, jule::Ptr<_1c0c67998_FnCallExpr>* _118248_fc) {
	if (((*((*(_118248_fc))))._field_Args.len() > 0LL)) {
		_1c0da8c71_pushErr((*(_118233_e)).ptr(), (*((*((*(_118248_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2021e617b_Const> _118713_constant = static__2021e6b4e_NewBool((*((*(_self_))._field_data))._field_Mutable);;
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec9578_primBool, ._field_Model=jule::Any(_118713_constant, &__jule_any_type19), ._field_Constant=_118713_constant});;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cc872e__Const(jule::Ptr<_1c0cc692a_comptimeValue> _self_, jule::Ptr<_1c0da8721_Eval>* _119531_e, jule::Ptr<_1c0c67998_FnCallExpr>* _119546_fc) {
	if (((*((*(_119546_fc))))._field_Args.len() > 0LL)) {
		_1c0da8c71_pushErr((*(_119531_e)).ptr(), (*((*((*(_119546_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Const", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2021e617b_Const> _120013_constant = static__2021e6b4e_NewBool(_1c0da7401_IsConst((*(_self_))._field_data.ptr()));;
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec9578_primBool, ._field_Model=jule::Any(_120013_constant, &__jule_any_type19), ._field_Constant=_120013_constant});;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cc8b2a__Field(jule::Ptr<_1c0cc692a_comptimeValue> _self_, jule::Ptr<_1c0da8721_Eval>* _120831_e, jule::Ptr<_1c0c67998_FnCallExpr>* _120846_fc) {
	if (((*((*(_120846_fc))))._field_Args.len() > 1LL)) {
		_1c0da8c71_pushErr((*(_120831_e)).ptr(), (*((*((*(_120846_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c0c83552_StructIns> _121313_s = _1c0ddbab7_Struct((*((*(_self_))._field_data))._field_Kind.ptr());;
	if ((_121313_s == nullptr)) {
		_1c0da8c71_pushErr((*(_120831_e)).ptr(), (*((*(_120846_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*(*_self_.alloc)._field_data.alloc)._field_Kind), &__jule_any_type4),jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c0c63c6e_Expr> _121813_arg = (*((*(_120846_fc))))._field_Args[0LL];;
	jule::Ptr<_1c0da69e9_Data> _121913_d = _1c0dc6981_evalExpr((*(_120831_e)), _121813_arg);;
	if ((_121913_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1c0da7401_IsConst(_121913_d.ptr())))) {
		_1c0da8c71_pushErr((*(_120831_e)).ptr(), (*(_121813_arg))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c0de09bc_Prim> _12279_prim = _1c0dda544_Prim((*(_121913_d))._field_Kind);;
	if (((_12279_prim == nullptr) || (!(_1c0de3e54_IsStr(_12279_prim.ptr()))))) {
		_1c0da8c71_pushErr((*(_120831_e)).ptr(), (*_121813_arg.alloc)._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1c0dd82ab_Str((*(_121913_d))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Str _12329_ident = _2021e8304_ReadStr((*(_121913_d))._field_Constant.ptr());;
	jule::Ptr<_1c0c829a2_FieldIns> _123313_f = _1c0c8490a_FindField(_121313_s.ptr(), _12329_ident);;
	if ((_123313_f == nullptr)) {
		_1c0da8c71_pushErr((*(_120831_e)).ptr(), (*_121813_arg.alloc)._field_Token, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*(_121313_s))._field_Decl))._field_Ident, &__jule_any_type4),jule::Any(_12329_ident, &__jule_any_type4)}));
		return nullptr;;
	};
	_121913_d=jule::new_ptr<_1c0da69e9_Data>((*(*_self_.alloc)._field_data.alloc));
	_121913_d=_1c0dbec87_evalStructSubIdentField((*(_120831_e)).ptr(), &(_121913_d), &(_121313_s), &((*_121813_arg.alloc)._field_Token), &(_123313_f));
	return _1c0ccd107_buildComptimeValue(&(_121913_d));;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0cc8e6b_subIdent(jule::Ptr<_1c0cc692a_comptimeValue> _self_, jule::Str* _124329_ident) {
	{
		auto &_match_expr{ (*(_124329_ident)) };
		
		if (_match_expr == jule::Str::lit("Unwrap", 6)) {
			_case_begin_1c41dbe80:;
			{
				jule::Ptr<_1c0c98699_FnIns> _124617_method = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>((void*)__jule_anon_1c41dd3c1, jule::Ptr<__jule_anon_1c41dd3c1_ctx>::make(__jule_anon_1c41dd3c1_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c41dd3c1_ctx_handler), });;
				return _1c0ccc634_buildAsComptimeMethodData(&(_124617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1c41dbee6:;
			{
				jule::Ptr<_1c0c98699_FnIns> _125317_method = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>((void*)__jule_anon_1c41e0390, jule::Ptr<__jule_anon_1c41e0390_ctx>::make(__jule_anon_1c41e0390_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c41e0390_ctx_handler), });;
				return _1c0ccc634_buildAsComptimeMethodData(&(_125317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Lvalue", 6)) {
			_case_begin_1c41dc05c:;
			{
				jule::Ptr<_1c0c98699_FnIns> _126017_method = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>((void*)__jule_anon_1c41e22e8, jule::Ptr<__jule_anon_1c41e22e8_ctx>::make(__jule_anon_1c41e22e8_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c41e22e8_ctx_handler), });;
				return _1c0ccc634_buildAsComptimeMethodData(&(_126017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1c41dc0d4:;
			{
				jule::Ptr<_1c0c98699_FnIns> _126717_method = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>((void*)__jule_anon_1c41e4251, jule::Ptr<__jule_anon_1c41e4251_ctx>::make(__jule_anon_1c41e4251_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c41e4251_ctx_handler), });;
				return _1c0ccc634_buildAsComptimeMethodData(&(_126717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Const", 5)) {
			_case_begin_1c41dc15b:;
			{
				jule::Ptr<_1c0c98699_FnIns> _127417_method = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>((void*)__jule_anon_1c41e61a9, jule::Ptr<__jule_anon_1c41e61a9_ctx>::make(__jule_anon_1c41e61a9_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c41e61a9_ctx_handler), });;
				return _1c0ccc634_buildAsComptimeMethodData(&(_127417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Field", 5)) {
			_case_begin_1c41dc2c1:;
			{
				jule::Ptr<_1c0c98699_FnIns> _128117_method = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>((void*)__jule_anon_1c41e8112, jule::Ptr<__jule_anon_1c41e8112_ctx>::make(__jule_anon_1c41e8112_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c41e8112_ctx_handler), });;
				return _1c0ccc634_buildAsComptimeMethodData(&(_128117_method));;
			}
		}
		else {
			_case_begin_1c41dbbd8:;
			{
				return nullptr;;
			}
		}
		_match_end_1c41dbd5e:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cc692a_comptimeValue _Src) {
	_Stream << _1c0cc6c9e_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c0cc95ed_Str(_1c0cc9279_comptimeFiles* _self_) {
	return jule::Str::lit("comptimeFiles", 13);;
}



inline jule::Bool _1c0cc993e_Equal(jule::Ptr<_1c0cc9279_comptimeFiles> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _130021_other) {
	return false;;
}



inline void _1c0cc9db2_ready(_1c0cc9279_comptimeFiles* _self_, jule::Ptr<_1c0d4dde2_Var>* _130429_keyA, jule::Ptr<_1c0d4dde2_Var>* _130446_keyB) {
	if (((*(_130429_keyA)) != nullptr)) {
		(*((*(_130429_keyA))))._field_Constant=true;
		(*((*(_130429_keyA))))._field_Value=jule::new_ptr<_1c0da7b71_Value>(_1c0da7b71_Value{._field_Data=jule::new_ptr<_1c0da69e9_Data>()});
		(*((*(_130429_keyA))))._field_Kind=(*(_1c0ecc306_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_130446_keyB)) != nullptr)) {
		(*((*(_130446_keyB))))._field_Constant=true;
		(*((*(_130446_keyB))))._field_Value=jule::new_ptr<_1c0da7b71_Value>(_1c0da7b71_Value{._field_Data=jule::new_ptr<_1c0da69e9_Data>()});
		(*((*(_130446_keyB))))._field_Kind=jule::new_ptr<_1c0de00b5_TypeSymbol>(_1c0de00b5_TypeSymbol{._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(jule::new_ptr<_1c0cca874_comptimeFile>(), 18)})});
	};
}



inline void _1c0cca2d0_step(_1c0cc9279_comptimeFiles* _self_, jule::I64 _132523_i, jule::Ptr<_1c0d4dde2_Var>* _132536_keyA, jule::Ptr<_1c0d4dde2_Var>* _132553_keyB) {
	if (((*(_132536_keyA)) != nullptr)) {
		(*((*((*((*(_132536_keyA))))._field_Value))._field_Data))._field_Constant=static__2021e65bb_NewI64(static_cast<jule::I64>(_132523_i));
		(*(*(*((*(_132536_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Model=jule::Any((*(*(*((*(_132536_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_132553_keyB)) != nullptr)) {
		(*((*((*((*((*(_132553_keyB))))._field_Kind))._field_Kind))._field_Kind.cast_ptr<_1c0cca874_comptimeFile>(18)))._field_file=(*(_self_))._field_files[_132523_i];
	};
}



inline jule::I64 _1c0cca566_len(_1c0cc9279_comptimeFiles* _self_) {
	return (*(_self_))._field_files.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cc9279_comptimeFiles _Src) {
	_Stream << _1c0cc95ed_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c0ccae29_Str(_1c0cca874_comptimeFile* _self_) {
	return jule::Str::lit("comptimeFile", 12);;
}



inline jule::Bool _1c0ccb26a_Equal(jule::Ptr<_1c0cca874_comptimeFile> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _134921_other) {
	return false;;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0ccb677__Path(jule::Ptr<_1c0cca874_comptimeFile> _self_, jule::Ptr<_1c0da8721_Eval>* _135330_e, jule::Ptr<_1c0c67998_FnCallExpr>* _135345_fc) {
	if (((*((*(_135345_fc))))._field_Args.len() > 0LL)) {
		_1c0da8c71_pushErr((*(_135330_e)).ptr(), (*((*((*(_135345_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Path", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2021e617b_Const> _135813_constant = static__2021e6e18_NewStr((*((*((*(_self_))._field_file))._field_File))._field_Path);;
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec92c0_primStr, ._field_Model=jule::Any(_135813_constant, &__jule_any_type19), ._field_Constant=_135813_constant});;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0ccba73__Name(jule::Ptr<_1c0cca874_comptimeFile> _self_, jule::Ptr<_1c0da8721_Eval>* _136630_e, jule::Ptr<_1c0c67998_FnCallExpr>* _136645_fc) {
	if (((*((*(_136645_fc))))._field_Args.len() > 0LL)) {
		_1c0da8c71_pushErr((*(_136630_e)).ptr(), (*((*((*(_136645_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2021e617b_Const> _137113_constant = static__2021e6e18_NewStr(_1c0c50651_Name((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec92c0_primStr, ._field_Model=jule::Any(_137113_constant, &__jule_any_type19), ._field_Constant=_137113_constant});;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0ccbe6e__Dir(jule::Ptr<_1c0cca874_comptimeFile> _self_, jule::Ptr<_1c0da8721_Eval>* _137929_e, jule::Ptr<_1c0c67998_FnCallExpr>* _137944_fc) {
	if (((*((*(_137944_fc))))._field_Args.len() > 0LL)) {
		_1c0da8c71_pushErr((*(_137929_e)).ptr(), (*((*((*(_137944_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Dir", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2021e617b_Const> _138413_constant = static__2021e6e18_NewStr(_1c0c503ba_Dir((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec92c0_primStr, ._field_Model=jule::Any(_138413_constant, &__jule_any_type19), ._field_Constant=_138413_constant});;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0ccc2b0_subIdent(jule::Ptr<_1c0cca874_comptimeFile> _self_, jule::Str* _139229_ident) {
	{
		auto &_match_expr{ (*(_139229_ident)) };
		
		if (_match_expr == jule::Str::lit("Path", 4)) {
			_case_begin_1c420983d:;
			{
				jule::Ptr<_1c0c98699_FnIns> _139517_method = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>((void*)__jule_anon_1c420ab4c, jule::Ptr<__jule_anon_1c420ab4c_ctx>::make(__jule_anon_1c420ab4c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c420ab4c_ctx_handler), });;
				return _1c0ccc634_buildAsComptimeMethodData(&(_139517_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1c42098d7:;
			{
				jule::Ptr<_1c0c98699_FnIns> _140217_method = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>((void*)__jule_anon_1c420caa5, jule::Ptr<__jule_anon_1c420caa5_ctx>::make(__jule_anon_1c420caa5_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c420caa5_ctx_handler), });;
				return _1c0ccc634_buildAsComptimeMethodData(&(_140217_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Dir", 3)) {
			_case_begin_1c420995e:;
			{
				jule::Ptr<_1c0c98699_FnIns> _140917_method = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>((void*)__jule_anon_1c420ea0d, jule::Ptr<__jule_anon_1c420ea0d_ctx>::make(__jule_anon_1c420ea0d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c420ea0d_ctx_handler), });;
				return _1c0ccc634_buildAsComptimeMethodData(&(_140917_method));;
			}
		}
		else {
			_case_begin_1c4209552:;
			{
				return nullptr;;
			}
		}
		_match_end_1c42096d9:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cca874_comptimeFile _Src) {
	_Stream << _1c0ccae29_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool,jule::Ptr<_1c0d2b078_Sema>*,jule::Slice<jule::Ptr<_1c0dd7101_TypeAlias>>*> _1c0cd0280_readyFn(jule::Ptr<_1c0cced84_constraintChecker> _self_) {
	return jule::__new_closure<jule::Bool,jule::Ptr<_1c0d2b078_Sema>*,jule::Slice<jule::Ptr<_1c0dd7101_TypeAlias>>*>((void*)__jule_anon_1c421a530, jule::Ptr<__jule_anon_1c421a530_ctx>::make(__jule_anon_1c421a530_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c421a530_ctx_handler);;
}



inline jule::Bool _1c0cd0516_readyFi(jule::Ptr<_1c0cced84_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_fi))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*_self_.alloc)._field_fi.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1c0d3954d_fnEnvironment((*_self_.alloc)._field_s, &((*_self_.alloc)._field_fi), _1c0cd0280_readyFn(_self_)));;
}



inline jule::Bool _1c0cd079c_readySi(jule::Ptr<_1c0cced84_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_si))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*_self_.alloc)._field_si.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1c0cd0280_readyFn(_self_)(&((*_self_.alloc)._field_s), &((*_self_.alloc)._field_genericsA)));;
}



inline jule::Bool _1c0cd0a33_ready(jule::Ptr<_1c0cced84_constraintChecker> _self_) {
	if (((*(_self_))._field_fi != nullptr)) {
		return _1c0cd0516_readyFi(_self_);;
	};
	return _1c0cd079c_readySi(_self_);;
}



inline jule::Bool _1c0cd0cb9_check(jule::Ptr<_1c0cced84_constraintChecker> _self_) {
	if ((!(_1c0cd0a33_ready(_self_)))) {
		return false;;
	};
	_julec_label_1c422a298:;
	{
		auto expr = &((*_self_.alloc)._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c422a562:;
		if (it != expr_end) {
			jule::I64 _12014_i = it - expr->begin();
			jule::Ptr<_1c0dd650c_InsGeneric> _12021_g = *it;
			{
				if (((*(_12021_g))._field_Constraint == nullptr)) {
					goto _iter_next_1c422a562;
				};
				{
					auto expr = &((*_12021_g.alloc)._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c422b73e:;
					if (it != expr_end) {
						jule::Ptr<_1c0dd7de3_TypeKind> _12425_c2 = *it;
						{
							jule::Ptr<_1c0de09bc_Prim> _12521_prim = _1c0dda544_Prim(_12425_c2.ptr());;
							if (((_12521_prim != nullptr) && _1c0de15e4_IsConstraint(_12521_prim))) {
								if (_1c0cd154a_matchConstraint(&((*_12521_prim.alloc)._field_Kind), &((*_12021_g.alloc)._field_Kind))) {
									goto _iter_next_1c422a562;
								};
								goto _iter_next_1c422b73e;
							};
							if (_1c0dd85ec_Equal(_12425_c2, (*_12021_g.alloc)._field_Kind)) {
								goto _iter_next_1c422a562;
							};
						}
						_iter_next_1c422b73e:;
						++it;
						goto _iter_begin_1c422b73e;
					}
					_iter_end_1c422b73e:;
				};
				_1c0d2dbb3_pushErr((*_self_.alloc)._field_s.ptr(), (*_self_.alloc)._field_et, jule::Str::lit("type @ is not matched with @'s constraint\n       constraint: @", 62), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*_12021_g.alloc)._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*_self_.alloc)._field_genericsD[_12014_i]))._field_Ident, &__jule_any_type4),jule::Any(_1c0cd1182_toStrConstraints(_12021_g), &__jule_any_type4)}));
				return false;;
			}
			_iter_next_1c422a562:;
			++it;
			_12014_i++;
			goto _iter_begin_1c422a562;
		}
		_iter_end_1c422a562:;
	};
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cced84_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c0cd25a1_IsTraitImpl(_1c0cd21d8_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1c0cd2837_IsStructImpl(_1c0cd21d8_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cd21d8_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cd763e_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cd7a5c_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cd7d59_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cd8277_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cd8574_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cd8a2a_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cd9476_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cd980b_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cd9bd5_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cd9ed2_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cda3ab_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cda785_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cdac3b_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cdb1e2_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "Decls:" << _Src._field_Decls << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cdb852_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cdc37a_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cdca73_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cdce19_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cdd579_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cddb0c_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "st:" << _Src._field_st << ", ";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c0d09782_ImportInfo> _1c0ce0092_SelectPackage(_1c0cdeaec_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1c0d09782_ImportInfo>> _46032_selector) {
	return _1c0d2b51d_SelectPackage((*(_self_))._field_s.ptr(), _46032_selector);;
}



inline jule::Ptr<_1c0d4dde2_Var> _1c0ce048d_FindVar(_1c0cdeaec_scopeChecker* _self_, jule::Str _47126_ident, jule::Bool _47138_binded) {
	jule::Ptr<_1c0d4dde2_Var> _47213_v = _1c0ce3628_findVar(_self_, _47126_ident, _47138_binded);;
	if ((_47213_v != nullptr)) {
		return _47213_v;;
	};
	return _1c0d2b919_FindVar((*(_self_))._field_s.ptr(), _47126_ident, _47138_binded);;
}



inline jule::Ptr<_1c0dd7101_TypeAlias> _1c0ce0889_FindTypeAlias(_1c0cdeaec_scopeChecker* _self_, jule::Str _48632_ident, jule::Bool _48644_binded) {
	;
	jule::Ptr<_1c0dd7101_TypeAlias> _48913_ta = _1c0da42ee_findTypeAlias((*(_self_))._field_table.ptr(), &(_48632_ident), _48644_binded, true);;
	if ((_48913_ta != nullptr)) {
		return _48913_ta;;
	};
	jule::Ptr<_1c0cdeaec_scopeChecker> _49413_parent = (*(_self_))._field_parent;;
	while ((_49413_parent != nullptr)) {
		{
			_48913_ta=_1c0da42ee_findTypeAlias((*_49413_parent.alloc)._field_table, &(_48632_ident), _48644_binded, true);
			if ((_48913_ta != nullptr)) {
				return _48913_ta;;
			};
			_49413_parent=(*_49413_parent.alloc)._field_parent;
		}
	_iter_next_1c4269e53:;
	}
	_iter_end_1c4269e53:;;
	return _1c0d2bd15_FindTypeAlias((*(_self_))._field_s.ptr(), _48632_ident, _48644_binded);;
}



inline jule::Ptr<_1c0c807c4_Struct> _1c0ce0c85_FindStruct(_1c0cdeaec_scopeChecker* _self_, jule::Str _51129_ident, jule::Bool _51141_binded) {
	return _1c0d2c211_FindStruct((*(_self_))._field_s.ptr(), _51129_ident, _51141_binded);;
}



inline jule::Ptr<_1c0c95795_Fn> _1c0ce1181_FindFn(_1c0cdeaec_scopeChecker* _self_, jule::Str _52025_ident, jule::Bool _52037_binded) {
	return _1c0d2c60c_FindFn((*(_self_))._field_s.ptr(), _52025_ident, _52037_binded);;
}



inline jule::Ptr<_1c0ca8a72_Trait> _1c0ce14c2_FindTrait(_1c0cdeaec_scopeChecker* _self_, jule::Str _52928_ident) {
	return _1c0d2c94d_FindTrait((*(_self_))._field_s.ptr(), _52928_ident);;
}



inline jule::Ptr<_1c0cab27d_Enum> _1c0ce1813_FindEnum(_1c0cdeaec_scopeChecker* _self_, jule::Str _53827_ident) {
	return _1c0d2cc8e_FindEnum((*(_self_))._field_s.ptr(), _53827_ident);;
}



inline jule::Ptr<_1c0cac988_TypeEnum> _1c0ce1b54_FindTypeEnum(_1c0cdeaec_scopeChecker* _self_, jule::Str _54731_ident) {
	return _1c0d2d0d0_FindTypeEnum((*(_self_))._field_s.ptr(), _54731_ident);;
}



inline jule::Bool _1c0ce1ea6_isUnsafe(jule::Ptr<_1c0cdeaec_scopeChecker> _self_) {
	jule::Ptr<_1c0cdeaec_scopeChecker> _55513_scope = _self_;;
	_julec_label_1c4270068:;
	if ((*((*(_55513_scope))._field_scope))._field_Unsafety) {
		return true;;
	};
	if (((*_55513_scope.alloc)._field_parent != nullptr)) {
		_55513_scope=(*_55513_scope.alloc)._field_parent;
		goto _julec_label_1c4270068;
	};
	return false;;
}



inline jule::Bool _1c0ce223c_isRoot(_1c0cdeaec_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1c0ce243a_stop(_1c0cdeaec_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1c0ce26c1_stopped(_1c0cdeaec_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1c0ce2957_isDeferred(jule::Ptr<_1c0cdeaec_scopeChecker> _self_) {
	jule::Ptr<_1c0cdeaec_scopeChecker> _58813_scope = _self_;;
	_julec_label_1c42733ac:;
	if ((*((*(_58813_scope))._field_scope))._field_Deferred) {
		return true;;
	};
	if (((*_58813_scope.alloc)._field_parent != nullptr)) {
		_58813_scope=(*_58813_scope.alloc)._field_parent;
		goto _julec_label_1c42733ac;
	};
	return false;;
}



inline void _1c0ce2c10_pushCaptured(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0d4dde2_Var>* _60837_v) {
	jule::Ptr<_1c0cdeaec_scopeChecker> _60913_sc = _self_;;
	for (;;) {
		{
			if (((*(_60913_sc))._field_captured != nullptr)) {
				{
					auto expr = &((*(*_60913_sc.alloc)._field_captured.alloc));
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c42762d3:;
					if (it != expr_end) {
						jule::Ptr<_1c0d4dde2_Var> _61224_cv = *it;
						{
							if ((_61224_cv == (*(_60837_v)))) {
								goto _julec_label_1c4277092;
							};
						}
						_iter_next_1c42762d3:;
						++it;
						goto _iter_begin_1c42762d3;
					}
					_iter_end_1c42762d3:;
				};
				(*(*_60913_sc.alloc)._field_captured.alloc)=jule::append((*(*_60913_sc.alloc)._field_captured.alloc),jule::Slice<jule::Ptr<_1c0d4dde2_Var>>::make({(*(_60837_v))}));
				_julec_label_1c4277092:;
			};
			if (((*_60913_sc.alloc)._field_parent == nullptr)) {
				goto _iter_end_1c4274116;
			};
			_60913_sc=(*_60913_sc.alloc)._field_parent;
		}
	_iter_next_1c4274116:;
	}
	_iter_end_1c4274116:;;
}



inline jule::Ptr<_1c0cdeaec_scopeChecker> _1c0ce2e96_getRoot(jule::Ptr<_1c0cdeaec_scopeChecker> _self_) {
	jule::Ptr<_1c0cdeaec_scopeChecker> _63013_root = _self_;;
	while ((((*(_63013_root))._field_parent != nullptr) && ((*_63013_root.alloc)._field_owner == nullptr))) {
		{
			_63013_root=(*_63013_root.alloc)._field_parent;
		}
	_iter_next_1c427910a:;
	}
	_iter_end_1c427910a:;;
	return _63013_root;;
}



inline jule::Ptr<_1c0cdeaec_scopeChecker> _1c0ce322c_getHardRoot(jule::Ptr<_1c0cdeaec_scopeChecker> _self_) {
	jule::Ptr<_1c0cdeaec_scopeChecker> _64013_root = _self_;;
	while (((*(_64013_root))._field_parent != nullptr)) {
		{
			_64013_root=(*_64013_root.alloc)._field_parent;
		}
	_iter_next_1c427a43b:;
	}
	_iter_end_1c427a43b:;;
	return _64013_root;;
}



inline jule::Ptr<_1c0d4dde2_Var> _1c0ce3628_findVar(_1c0cdeaec_scopeChecker* _self_, jule::Str _64826_ident, jule::Bool _64838_binded) {
	;
	jule::Ptr<_1c0d4dde2_Var> _65013_v = _1c0da3d48_findVar((*(_self_))._field_table.ptr(), &(_64826_ident), _64838_binded, true);;
	if ((_65013_v != nullptr)) {
		return _65013_v;;
	};
	jule::Ptr<_1c0cdeaec_scopeChecker> _65413_parent = (*(_self_))._field_parent;;
	while ((_65413_parent != nullptr)) {
		{
			_65013_v=_1c0da3d48_findVar((*_65413_parent.alloc)._field_table, &(_64826_ident), _64838_binded, true);
			if ((_65013_v != nullptr)) {
				return _65013_v;;
			};
			_65413_parent=(*_65413_parent.alloc)._field_parent;
		}
	_iter_next_1c427c1da:;
	}
	_iter_end_1c427c1da:;;
	return nullptr;;
}



inline jule::Ptr<_1c0cd9ed2_Label> _1c0ce3969_findLabel(_1c0cdeaec_scopeChecker* _self_, jule::Str* _66829_ident) {
	{
		auto expr = &((*((*(_self_))._field_scope))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c427e0bb:;
		if (it != expr_end) {
			jule::Any _66921_st = *it;
			{
				{
					auto &_match_expr{ _66921_st };
					
					if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1c427e891:;
						{
							jule::Ptr<_1c0cd9ed2_Label> _67221_label = _66921_st.unsafe_cast_ptr<_1c0cd9ed2_Label>();;
							if (((*(_67221_label))._field_Ident == (*(_66829_ident)))) {
								return _67221_label;;
							};
						}
					}
					_match_end_1c427e83b:;
				};
			}
			_iter_next_1c427e0bb:;
			++it;
			goto _iter_begin_1c427e0bb;
		}
		_iter_end_1c427e0bb:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0cdd579_scopeLabel> _1c0ce3caa_findLabelScope(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Str* _68435_ident) {
	jule::Ptr<_1c0cdd579_scopeLabel> _68513_label = _1c0ce40eb_findLabelAll(_self_.ptr(), _68435_ident);;
	if (((_68513_label != nullptr) && ((*_68513_label.alloc)._field_scope == _self_))) {
		return _68513_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0cdd579_scopeLabel> _1c0ce40eb_findLabelAll(_1c0cdeaec_scopeChecker* _self_, jule::Str* _69632_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4281e59:;
		if (it != expr_end) {
			jule::Ptr<_1c0cdd579_scopeLabel> _69721_lbl = *it;
			{
				if (((*((*(_69721_lbl))._field_label))._field_Ident == (*(_69632_ident)))) {
					return _69721_lbl;;
				};
			}
			_iter_next_1c4281e59:;
			++it;
			goto _iter_begin_1c4281e59;
		}
		_iter_end_1c4281e59:;
	};
	return nullptr;;
}



inline jule::Bool _1c0ce44e7_isDuplicatedIdent(_1c0cdeaec_scopeChecker* _self_, jule::Uintptr _70836_itself, jule::Str* _70854_ident) {
	jule::Ptr<_1c0d4dde2_Var> _7099_v = _1c0ce048d_FindVar(_self_, (*(_70854_ident)), false);;
	if (((_7099_v != nullptr) && (static_cast<jule::Uintptr>(_7099_v) != _70836_itself))) {
		if (((*_7099_v.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_7099_v.alloc)._field_Scope == (*(_self_))._field_scope) || (!(_1c0d2d4dc_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	jule::Ptr<_1c0dd7101_TypeAlias> _7179_ta = _1c0ce0889_FindTypeAlias(_self_, (*(_70854_ident)), false);;
	if (((_7179_ta != nullptr) && (static_cast<jule::Uintptr>(_7179_ta) != _70836_itself))) {
		if (((*_7179_ta.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_7179_ta.alloc)._field_Scope == (*(_self_))._field_tree) || (!(_1c0d2d4dc_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))));;
	};
	return false;;
}



inline void _1c0ce47a0_checkVarDecl(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0c727a5_VarDecl> _72836_decl) {
	jule::Ptr<_1c0d4dde2_Var> _72913_v = _1c0ca1be1_buildVar(_72836_decl);;
	(*(_72913_v))._field_Scope=(*(_self_))._field_scope;
	__JULE_DEFER({
		(*((*_self_.alloc)._field_table))._field_Vars=jule::append((*(*_self_.alloc)._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1c0d4dde2_Var>>::make({_72913_v}));
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_72913_v, &__jule_any_type8)}));
	});;
	if (_1c0ce44e7_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>(_72913_v), &((*_72913_v.alloc)._field_Ident))) {
		_1c0d2dbb3_pushErr((*_self_.alloc)._field_s.ptr(), (*_72913_v.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_72913_v.alloc)._field_Ident, &__jule_any_type4)}));
		_1c0d2e026_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1c0ce243a_stop(_self_);
		return;;
	};
	_1c0d42237_checkVarDecl((*_self_.alloc)._field_s, &(_72913_v), jule::Trait<_1c0e079d4_Lookup>(_self_, 0));
	if (((!(_1c0d4e552_IsTypeInferred(_72913_v))) && (((*_72913_v.alloc)._field_Kind == nullptr) || ((*((*_72913_v.alloc)._field_Kind))._field_Kind == nullptr)))) {
		return;;
	};
	_1c0d459cc_evalVarValue((*_self_.alloc)._field_s, &(_72913_v), jule::Trait<_1c0e079d4_Lookup>(_self_, 0));
	if (((!(_1c0d4e2bb_IsInitialized(_72913_v))) || ((*((*_72913_v.alloc)._field_Value))._field_Data == nullptr))) {
		return;;
	};
	_1c0ceaa1a_removeInteriorMutRisk(_self_, &((*(*_72913_v.alloc)._field_Value.alloc)._field_Data));
	_1c0d45669_checkVarValue((*_self_.alloc)._field_s, &(_72913_v));
}



inline void _1c0ce4a58_checkTypeAlias(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0dd7101_TypeAlias>* _75939_ta) {
	if (_1c0ce44e7_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_75939_ta))), &((*((*(_75939_ta))))._field_Ident))) {
		_1c0d2dbb3_pushErr((*_self_.alloc)._field_s.ptr(), (*((*(_75939_ta))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_75939_ta))))._field_Ident, &__jule_any_type4)}));
		_1c0d2e026_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1c0ce243a_stop(_self_);
		return;;
	};
	_1c0d3b2b9_checkTypeAliasDecl((*_self_.alloc)._field_s, _75939_ta, jule::Trait<_1c0e079d4_Lookup>(_self_, 0));
	(*((*_self_.alloc)._field_table))._field_TypeAliases=jule::append((*(*_self_.alloc)._field_table.alloc)._field_TypeAliases,jule::Slice<jule::Ptr<_1c0dd7101_TypeAlias>>::make({(*(_75939_ta))}));
	if (((*((*((*(_75939_ta))))._field_Kind))._field_Kind == nullptr)) {
		_1c0ce243a_stop(_self_);
	};
}



inline void _1c0ce4d11_checkTypeAliasDecl(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0c76457_TypeAliasDecl> _77542_decl) {
	jule::Ptr<_1c0dd7101_TypeAlias> _77613_ta = _1c0c9d7c0_buildTypeAlias(_77542_decl);;
	_1c0ce4a58_checkTypeAlias(_self_, &(_77613_ta));
}



inline jule::Ptr<_1c0cd763e_Scope> _1c0ce5097_getChild(_1c0cdeaec_scopeChecker* _self_) {
	return jule::new_ptr<_1c0cd763e_Scope>(_1c0cd763e_Scope{._field_Parent=(*(_self_))._field_scope, });;
}



inline void _1c0ce54b5_checkChildSsc(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0c6e95b_ScopeTree>* _78638_tree, jule::Ptr<_1c0cd763e_Scope>* _78661_s, jule::Ptr<_1c0cdeaec_scopeChecker>* _78677_ssc) {
	(*((*(_78677_ssc))))._field_parent=_self_;
	_1c0d019aa_check((*(_78677_ssc)), _78638_tree, _78661_s);
}



inline jule::Ptr<_1c0cd763e_Scope> _1c0ce58b1_checkChildSc(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0c6e95b_ScopeTree>* _79137_tree, jule::Ptr<_1c0cdeaec_scopeChecker>* _79160_ssc) {
	jule::Ptr<_1c0cd763e_Scope> _79213_s = _1c0ce5097_getChild(_self_.ptr());;
	_1c0ce54b5_checkChildSsc(_self_, _79137_tree, &(_79213_s), _79160_ssc);
	return _79213_s;;
}



inline jule::Ptr<_1c0cd763e_Scope> _1c0ce5c02_checkChild(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0c6e95b_ScopeTree>* _79735_tree) {
	jule::Ptr<_1c0cdeaec_scopeChecker> _79813_ssc = _1c0d01c41_newChildChecker(_self_);;
	return _1c0ce58b1_checkChildSc(_self_, _79735_tree, &(_79813_ssc));;
}



inline void _1c0ce5eaa_checkAnonScope(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0c6e95b_ScopeTree> _80238_tree) {
	jule::Ptr<_1c0cd763e_Scope> _80313_s = _1c0ce5c02_checkChild(_self_, &(_80238_tree));;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_80313_s, &__jule_any_type21)}));
}



inline void _1c0ce631d_processErrorCall(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0c91230_BuiltinErrorCallExprModel>* _80741_m, jule::Ptr<_1c0c49480_Token> _80772_err) {
	if (_1c0ce2957_isDeferred(_self_)) {
		_1c0d2dbb3_pushErr((*_self_.alloc)._field_s.ptr(), _80772_err, jule::Str::lit("deferred scopes are not supports error calls", 44), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c0cdeaec_scopeChecker> _81213_root = _1c0ce2e96_getRoot(_self_);;
	if ((!((*((*((*(_81213_root))._field_owner))._field_Decl))._field_Exceptional))) {
		_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, _80772_err, jule::Str::lit("error call can only useable for exceptional functions", 53), jule::Slice<jule::Any>());
		_1c0d2e026_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("you can declare an exceptional function with \"!\" operator", 57), jule::Slice<jule::Any>());
	};
	(*((*(_80741_m))))._field_Func=(*_81213_root.alloc)._field_owner;
}



inline void _1c0ce65c6_checkExpr(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0c63c6e_Expr> _82033_expr) {
	jule::Ptr<_1c0da8721_Eval> _82113_eval = _1c0d36160_eval((*(_self_))._field_s, jule::Trait<_1c0e079d4_Lookup>(_self_, 0));;
	(*(_82113_eval))._field_ignored=true;
	jule::Ptr<_1c0da69e9_Data> _82313_d = _1c0dc6981_evalExpr(_82113_eval, _82033_expr);;
	if (((_82313_d == nullptr) || ((*(_82313_d))._field_Model == nullptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_82313_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1c429e66e:;
			{
				jule::Ptr<_1c0c91230_BuiltinErrorCallExprModel> _83217_m = (*(_82313_d))._field_Model.unsafe_cast_ptr<_1c0c91230_BuiltinErrorCallExprModel>();;
				_1c0ce631d_processErrorCall(_self_, &(_83217_m), (*(_82033_expr))._field_Token);
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_82313_d, &__jule_any_type23)}));
			}
		}
		else if (_match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31 || _match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33) {
			_case_begin_1c429ecac:;
			{
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_82313_d, &__jule_any_type23)}));
			}
		}
		else {
			_case_begin_1c429ec46:;
			{
				_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, (*(_82033_expr))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c429ebe1:;
	};
}



inline jule::Ptr<_1c0cd7a5c_If> _1c0ce6917_checkIf(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0c7538a_If> _85131_i) {
	jule::Ptr<_1c0cd763e_Scope> _85213_s = _1c0ce5c02_checkChild(_self_, &((*(_85131_i))._field_Scope));;
	jule::Ptr<_1c0da69e9_Data> _85413_d = _1c0dc6981_evalExpr(_1c0d36160_eval((*_self_.alloc)._field_s, jule::Trait<_1c0e079d4_Lookup>(_self_, 0)), (*_85131_i.alloc)._field_Expr);;
	if ((_85413_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c0de09bc_Prim> _85913_prim = _1c0dda544_Prim((*(_85413_d))._field_Kind.ptr());;
	if (((_85913_prim == nullptr) || (!(_1c0de3bbd_IsBool(_85913_prim.ptr()))))) {
		_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, (*((*_85131_i.alloc)._field_Expr))._field_Token, jule::Str::lit("if conditions must be have boolean expression", 45), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1c0cd7a5c_If>(_1c0cd7a5c_If{._field_Expr=(*(_85413_d))._field_Model, ._field_Scope=_85213_s});;
}



inline jule::Ptr<_1c0cd7d59_Else> _1c0ce6c58_checkElse(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0c75764_Else> _87133_e) {
	return jule::new_ptr<_1c0cd7d59_Else>(_1c0cd7d59_Else{._field_Scope=_1c0ce5c02_checkChild(_self_, &((*(_87133_e))._field_Scope))});;
}



inline void _1c0ce7011_checkConditional(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0c75c1a_Conditional> _87740_conditional) {
	jule::Ptr<_1c0cd8277_Conditional> _87813_c = jule::new_ptr<_1c0cd8277_Conditional>();;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_87813_c, &__jule_any_type34)}));
	(*_87813_c.alloc)._field_Elifs=jule::Slice<jule::Ptr<_1c0cd7a5c_If>>::alloc(0LL, ((*(_87740_conditional))._field_Tail.len() + 1LL));
	(*_87813_c.alloc)._field_Elifs=jule::append((*_87813_c.alloc)._field_Elifs,jule::Slice<jule::Ptr<_1c0cd7a5c_If>>::make({_1c0ce6917_checkIf(_self_, (*_87740_conditional.alloc)._field_Head)}));
	{
		auto expr = &((*_87740_conditional.alloc)._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c36cbb8a:;
		if (it != expr_end) {
			jule::Ptr<_1c0c7538a_If> _88421_elif = *it;
			{
				(*_87813_c.alloc)._field_Elifs=jule::append((*_87813_c.alloc)._field_Elifs,jule::Slice<jule::Ptr<_1c0cd7a5c_If>>::make({_1c0ce6917_checkIf(_self_, _88421_elif)}));
			}
			_iter_next_1c36cbb8a:;
			++it;
			goto _iter_begin_1c36cbb8a;
		}
		_iter_end_1c36cbb8a:;
	};
	if (((*_87740_conditional.alloc)._field_Default != nullptr)) {
		(*_87813_c.alloc)._field_Default=_1c0ce6c58_checkElse(_self_, (*_87740_conditional.alloc)._field_Default);
	};
}



inline void _1c0ce74d9_checkIterScopeSsc(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Uintptr _89337_it, jule::Ptr<_1c0c6e95b_ScopeTree> _89354_tree, jule::Ptr<_1c0cd763e_Scope>* _89377_s, jule::Ptr<_1c0cdeaec_scopeChecker> _89392_ssc) {
	(*(_89392_ssc))._field_it=_89337_it;
	_1c0ce54b5_checkChildSsc(_self_, &(_89354_tree), _89377_s, &(_89392_ssc));
}



inline jule::Ptr<_1c0cd763e_Scope> _1c0ce7990_checkIterScopeSc(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Uintptr _89836_it, jule::Ptr<_1c0c6e95b_ScopeTree> _89853_tree, jule::Ptr<_1c0cdeaec_scopeChecker> _89875_ssc) {
	jule::Ptr<_1c0cd763e_Scope> _89913_scope = _1c0ce5097_getChild(_self_.ptr());;
	_1c0ce74d9_checkIterScopeSsc(_self_, _89836_it, _89853_tree, &(_89913_scope), _89875_ssc);
	return _89913_scope;;
}



inline jule::Ptr<_1c0cd763e_Scope> _1c0ce7d8b_checkIterScope(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Uintptr _90434_it, jule::Ptr<_1c0c6e95b_ScopeTree>* _90452_tree) {
	jule::Ptr<_1c0cdeaec_scopeChecker> _90513_ssc = _1c0d01c41_newChildChecker(_self_);;
	return _1c0ce7990_checkIterScopeSc(_self_, _90434_it, (*(_90452_tree)), _90513_ssc);;
}



inline void _1c0ce8144_checkInfIter(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0c733ee_Iter>* _90937_it) {
	jule::Ptr<_1c0cd8574_InfIter> _91013_kind = jule::new_ptr<_1c0cd8574_InfIter>();;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_91013_kind, &__jule_any_type35)}));
	(*_91013_kind.alloc)._field_Scope=_1c0ce7d8b_checkIterScope(_self_, static_cast<jule::Uintptr>(_91013_kind), &((*((*(_90937_it))))._field_Scope));
}



inline void _1c0ce83ec_checkWhileIter(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0c733ee_Iter>* _91539_it) {
	jule::Ptr<_1c0c73c29_WhileKind> _91613_wh = (*((*(_91539_it))))._field_Kind.cast_ptr<_1c0c73c29_WhileKind>(&__jule_any_type36);;
	if ((((*(_91613_wh))._field_Expr == nullptr) && ((*_91613_wh.alloc)._field_Next == nullptr))) {
		_1c0ce8144_checkInfIter(_self_, _91539_it);
		return;;
	};
	jule::Ptr<_1c0cd8a2a_WhileIter> _92213_kind = jule::new_ptr<_1c0cd8a2a_WhileIter>();;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_92213_kind, &__jule_any_type37)}));
	(*_92213_kind.alloc)._field_Scope=_1c0ce7d8b_checkIterScope(_self_, static_cast<jule::Uintptr>(_92213_kind), &((*((*(_91539_it))))._field_Scope));
	if (((*_91613_wh.alloc)._field_Expr != nullptr)) {
		jule::Ptr<_1c0da69e9_Data> _92717_d = _1c0dc6981_evalExpr(_1c0d36160_eval((*_self_.alloc)._field_s, jule::Trait<_1c0e079d4_Lookup>(_self_, 0)), (*_91613_wh.alloc)._field_Expr);;
		if ((_92717_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1c0de09bc_Prim> _93213_prim = _1c0dda544_Prim((*(_92717_d))._field_Kind.ptr());;
		if ((_93213_prim == nullptr)) {
			_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, (*((*(_91539_it))))._field_Token, jule::Str::lit("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1c0de3bbd_IsBool(_93213_prim.ptr())))) {
			_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, (*((*(_91539_it))))._field_Token, jule::Str::lit("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		(*_92213_kind.alloc)._field_Expr=(*(_92717_d))._field_Model;
	};
	if (_1c0c7408c_IsWhileNext(_91613_wh)) {
		if ((!(_1c0cd6ac2_isValidAstStForNextSt(&((*_91613_wh.alloc)._field_Next))))) {
			_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, (*_91613_wh.alloc)._field_NextToken, jule::Str::lit("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _95213_n = (*(*_self_.alloc)._field_scope.alloc)._field_Stmts.len();;
		_1c0d005e1_checkNode(_self_, &((*_91613_wh.alloc)._field_Next));
		if ((_95213_n < (*(*_self_.alloc)._field_scope.alloc)._field_Stmts.len())) {
			jule::Any _95521_st = (*(*_self_.alloc)._field_scope.alloc)._field_Stmts[_95213_n];;
			((*((*(_self_))._field_scope))._field_Stmts).mut_slice(0LL, _95213_n);;
			if ((!(_1c0cd6d8b_isValidStForNextSt(&(_95521_st))))) {
				_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, (*_91613_wh.alloc)._field_NextToken, jule::Str::lit("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			};
			(*_92213_kind.alloc)._field_Next=_95521_st;
		};
	};
}



inline void _1c0ce881a_checkComptimeRangeIter(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0c733ee_Iter>* _96547_it, jule::Ptr<_1c0cd9476_RangeIter>* _96563_kind, jule::Ptr<_1c0da69e9_Data>* _96586_d) {
	if (((*((*(_96563_kind))))._field_KeyA != nullptr)) {
		if (((!(_1c0d2d4dc_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1c0ce44e7_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_96563_kind))))._field_KeyA.alloc)._field_Ident)))) {
			_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, (*(*((*(_96563_kind))))._field_KeyA.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_96563_kind))))._field_KeyA.alloc)._field_Ident, &__jule_any_type4)}));
			_1c0d2e026_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	if (((*((*(_96563_kind))))._field_KeyB != nullptr)) {
		if (((!(_1c0d2d4dc_isFlag((*_self_.alloc)._field_s, static_cast<jule::I64>(1LL)))) && _1c0ce44e7_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_96563_kind))))._field_KeyB.alloc)._field_Ident)))) {
			_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, (*(*((*(_96563_kind))))._field_KeyB.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_96563_kind))))._field_KeyB.alloc)._field_Ident, &__jule_any_type4)}));
			_1c0d2e026_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_1c0c74631_RangeKind> _97913_rang = (*((*(_96547_it))))._field_Kind.cast_ptr<_1c0c74631_RangeKind>(&__jule_any_type38);;
	_1c0d022e6_makeComptimeRange(_96586_d);
	if ((*((*(_96586_d))))._field_Decl) {
		_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, (*((*(_97913_rang))._field_Expr))._field_Token, jule::Str::lit("type @ is not supports comptime iterations", 42), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*((*(_96586_d))))._field_Kind.ptr()), &__jule_any_type4)}));
		return;;
	};
	_1c0d9b8ac_rangeChecker _98613_rc = _1c0d9b8ac_rangeChecker{._field_sc=_self_, ._field_rang=_97913_rang, ._field_Kind=(*(_96563_kind)), ._field_d=(*(_96586_d))};;
	jule::Bool _9929_ok = _1c0d9d8c0_check(&_98613_rc);;
	if ((!(_9929_ok))) {
		return;;
	};
	jule::Ptr<_1c0cb0ae0_comptimeRange> _99713_comptime = _1c0ddd8dd_comptimeRange((*((*(_96586_d))))._field_Kind);;
	_1c0cb08c0_comptimeRangeKind_mptr_data[((*(_99713_comptime))._field_kind).type_offset]._1c0cb00b7_ready((*(_99713_comptime))._field_kind, &((*((*(_96563_kind))))._field_KeyA), &((*((*(_96563_kind))))._field_KeyB));
	jule::I64 _99913_i = 0LL;;
	jule::I64 _10009_errors = (*(*_self_.alloc)._field_s.alloc)._field_errors.len();;
	for (; (_99913_i < _1c0cb08c0_comptimeRangeKind_mptr_data[((*_99713_comptime.alloc)._field_kind).type_offset]._1c0cb076b_len((*_99713_comptime.alloc)._field_kind)); (_99913_i)++) {
		{
			jule::Ptr<_1c0cdeaec_scopeChecker> _100217_ssc = _1c0d01c41_newChildChecker(_self_);;
			jule::Ptr<_1c0cd763e_Scope> _100317_scope = _1c0ce5097_getChild(_self_);;
			if (((*((*(_96563_kind))))._field_KeyA != nullptr)) {
				(*(*((*(_96563_kind))))._field_KeyA.alloc)._field_Scope=_100317_scope;
				(*((*(_100217_ssc))._field_table))._field_Vars=jule::append((*(*_100217_ssc.alloc)._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1c0d4dde2_Var>>::make({(*((*(_96563_kind))))._field_KeyA}));
			};
			if (((*((*(_96563_kind))))._field_KeyB != nullptr)) {
				(*(*((*(_96563_kind))))._field_KeyB.alloc)._field_Scope=_100317_scope;
				(*(*_100217_ssc.alloc)._field_table.alloc)._field_Vars=jule::append((*(*_100217_ssc.alloc)._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1c0d4dde2_Var>>::make({(*((*(_96563_kind))))._field_KeyB}));
			};
			_1c0cb08c0_comptimeRangeKind_mptr_data[((*_99713_comptime.alloc)._field_kind).type_offset]._1c0cb04d5_step((*_99713_comptime.alloc)._field_kind, _99913_i, &((*((*(_96563_kind))))._field_KeyA), &((*((*(_96563_kind))))._field_KeyB));
			_1c0ce54b5_checkChildSsc(_self_, &((*((*(_96547_it))))._field_Scope), &(_100317_scope), &(_100217_ssc));
			if ((_10009_errors != (*(*_self_.alloc)._field_s.alloc)._field_errors.len())) {
				goto _iter_end_1c36ecb9a;
			};
			(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_100317_scope, &__jule_any_type21)}));
		}
	_iter_next_1c36ecb9a:;
	}
	_iter_end_1c36ecb9a:;;
}



inline void _1c0ce8ac3_checkRangeIter(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0c733ee_Iter>* _102239_it) {
	jule::Ptr<_1c0c74631_RangeKind> _102313_rang = (*((*(_102239_it))))._field_Kind.cast_ptr<_1c0c74631_RangeKind>(&__jule_any_type38);;
	jule::Ptr<_1c0da69e9_Data> _102513_d = _1c0dc6640_evalExpr1(_1c0d36160_eval((*(_self_))._field_s, jule::Trait<_1c0e079d4_Lookup>(_self_, 0)), (*(_102313_rang))._field_Expr);;
	if ((_102513_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1c0cd9476_RangeIter> _103013_kind = jule::new_ptr<_1c0cd9476_RangeIter>(_1c0cd9476_RangeIter{._field_Expr=_102513_d, });;
	if ((*((*(_102239_it))))._field_Comptime) {
		_1c0ce881a_checkComptimeRangeIter(_self_, _102239_it, &(_103013_kind), &(_102513_d));
		return;;
	};
	if (_1c0ddc601_comptime((*(_102513_d))._field_Kind.ptr())) {
		_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, (*((*_102313_rang.alloc)._field_Expr))._field_Token, jule::Str::lit("comptime expressions cannot be iterated at runtime", 50), jule::Slice<jule::Any>());
		_1c0d2e026_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("declarate comptime iteration like: const for ...", 48), jule::Slice<jule::Any>());
		return;;
	};
	_1c0d9b8ac_rangeChecker _104413_rc = _1c0d9b8ac_rangeChecker{._field_sc=_self_, ._field_rang=_102313_rang, ._field_Kind=_103013_kind, ._field_d=_102513_d};;
	jule::Bool _10509_ok = _1c0d9d8c0_check(&_104413_rc);;
	if ((!(_10509_ok))) {
		return;;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_103013_kind, &__jule_any_type39)}));
	jule::Ptr<_1c0cdeaec_scopeChecker> _105713_ssc = _1c0d01c41_newChildChecker(_self_);;
	jule::Ptr<_1c0cd763e_Scope> _105813_scope = _1c0ce5097_getChild(_self_);;
	if (((*(_103013_kind))._field_KeyA != nullptr)) {
		if (((!(_1c0d2d4dc_isFlag((*_self_.alloc)._field_s, static_cast<jule::I64>(1LL)))) && _1c0ce44e7_isDuplicatedIdent(_self_, 0LLU, &((*(*_103013_kind.alloc)._field_KeyA.alloc)._field_Ident)))) {
			_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, (*(*_103013_kind.alloc)._field_KeyA.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*_103013_kind.alloc)._field_KeyA.alloc)._field_Ident, &__jule_any_type4)}));
			_1c0d2e026_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*(*_103013_kind.alloc)._field_KeyA.alloc)._field_Scope=_105813_scope;
		(*((*(_105713_ssc))._field_table))._field_Vars=jule::append((*(*_105713_ssc.alloc)._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1c0d4dde2_Var>>::make({(*_103013_kind.alloc)._field_KeyA}));
	};
	if (((*_103013_kind.alloc)._field_KeyB != nullptr)) {
		if (((!(_1c0d2d4dc_isFlag((*_self_.alloc)._field_s, static_cast<jule::I64>(1LL)))) && _1c0ce44e7_isDuplicatedIdent(_self_, 0LLU, &((*(*_103013_kind.alloc)._field_KeyB.alloc)._field_Ident)))) {
			_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, (*(*_103013_kind.alloc)._field_KeyB.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*_103013_kind.alloc)._field_KeyB.alloc)._field_Ident, &__jule_any_type4)}));
			_1c0d2e026_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*(*_103013_kind.alloc)._field_KeyB.alloc)._field_Scope=_105813_scope;
		(*(*_105713_ssc.alloc)._field_table.alloc)._field_Vars=jule::append((*(*_105713_ssc.alloc)._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1c0d4dde2_Var>>::make({(*_103013_kind.alloc)._field_KeyB}));
	};
	_1c0ce74d9_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(_103013_kind), (*((*(_102239_it))))._field_Scope, &(_105813_scope), _105713_ssc);
	(*_103013_kind.alloc)._field_Scope=_105813_scope;
}



inline void _1c0ce8d7b_checkIter(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0c733ee_Iter> _108233_it) {
	if (_1c0c73762_IsInf(_108233_it.ptr())) {
		if ((*_108233_it.alloc)._field_Comptime) {
			_1c0d2dbb3_pushErr((*(_self_))._field_s.ptr(), (*_108233_it.alloc)._field_Token, jule::Str::lit("comptime iterations can only be range iteration", 47), jule::Slice<jule::Any>());
			return;;
		};
		_1c0ce8144_checkInfIter(_self_, &(_108233_it));
		return;;
	};
	{
		auto &_match_expr{ (*(_108233_it))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1c371717b:;
			{
				if ((*_108233_it.alloc)._field_Comptime) {
					_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, (*_108233_it.alloc)._field_Token, jule::Str::lit("comptime iterations can only be range iteration", 47), jule::Slice<jule::Any>());
					return;;
				};
				_1c0ce83ec_checkWhileIter(_self_, &(_108233_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1c37158d8:;
			{
				_1c0ce8ac3_checkRangeIter(_self_, &(_108233_it));
			}
		}
		else {
			_case_begin_1c3716b81:;
			{
				jule::outln(jule::Str::lit("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1c3716b2b:;
	};
}



inline jule::Bool _1c0ce91bc_checkValidContLabel(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Uintptr _110639_it) {
	jule::Ptr<_1c0cdeaec_scopeChecker> _110713_scope = _self_;;
	_julec_label_1c371915b:;
	if (((*(_110713_scope))._field_it == _110639_it)) {
		return true;;
	};
	if (((*_110713_scope.alloc)._field_parent != nullptr)) {
		_110713_scope=(*_110713_scope.alloc)._field_parent;
		goto _julec_label_1c371915b;
	};
	return false;;
}



inline jule::Bool _1c0ce950d_checkValidBreakLabel(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Uintptr _112240_ptr) {
	jule::Ptr<_1c0cdeaec_scopeChecker> _112313_scope = _self_;;
	_julec_label_1c371b207:;
	if (((*(_112313_scope))._field_it == _112240_ptr)) {
		return true;;
	};
	if (((*_112313_scope.alloc)._field_cse != 0LLU)) {
		jule::Uintptr _113113_mtch = static_cast<jule::Uintptr>((*(((_1c0cdc37a_Case*)((*_112313_scope.alloc)._field_cse))))._field_Owner);;
		if ((_113113_mtch == _112240_ptr)) {
			return true;;
		};
	};
	if (((*_112313_scope.alloc)._field_parent != nullptr)) {
		_112313_scope=(*_112313_scope.alloc)._field_parent;
		goto _julec_label_1c371b207;
	};
	return false;;
}



inline jule::Ptr<_1c0cd980b_ContSt> _1c0ce984e_checkContValidScope(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0c74dd4_ContSt> _114539_c) {
	if (_1c0ce2957_isDeferred(_self_)) {
		_1c0d2dbb3_pushErr((*_self_.alloc)._field_s.ptr(), (*(_114539_c))._field_Token, jule::Str::lit("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*_114539_c.alloc)._field_Label != nullptr)) {
		return jule::new_ptr<_1c0cd980b_ContSt>();;
	};
	jule::Ptr<_1c0cdeaec_scopeChecker> _115513_scope = _self_;;
	_julec_label_1c372064b:;
	{
		
		if (((((*_115513_scope.alloc)._field_it == 0LLU) && ((*_115513_scope.alloc)._field_parent != nullptr)) && ((*_115513_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1c3720e54:;
			{
				_115513_scope=(*_115513_scope.alloc)._field_parent;
				goto _julec_label_1c372064b;
			}
		}
		else if (((*_115513_scope.alloc)._field_it != 0LLU)) {
			_case_begin_1c3720edc:;
			{
				return jule::new_ptr<_1c0cd980b_ContSt>(_1c0cd980b_ContSt{._field_It=(*_115513_scope.alloc)._field_it});;
			}
		}
		_match_end_1c3720daa:;
	};
	_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, (*_114539_c.alloc)._field_Token, jule::Str::lit("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1c0ce9b07_checkCont(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0c74dd4_ContSt> _116929_c) {
	jule::Ptr<_1c0cd980b_ContSt> _117013_cont = _1c0ce984e_checkContValidScope(_self_, _116929_c);;
	if ((_117013_cont == nullptr)) {
		return;;
	};
	if (((*(_116929_c))._field_Label != nullptr)) {
		jule::Ptr<_1c0cdd579_scopeLabel> _117617_label = _1c0cd4b58_findLabelParent(&((*(*_116929_c.alloc)._field_Label.alloc)._field_Kind), (*_self_.alloc)._field_parent);;
		if ((_117617_label == nullptr)) {
			_1c0d2dbb3_pushErr((*_self_.alloc)._field_s.ptr(), (*_116929_c.alloc)._field_Label, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*(*_116929_c.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
			return;;
		};
		(*(_117617_label))._field_used=true;
		if ((((*(_117617_label))._field_pos + 1LL) >= (*((*((*(_117617_label))._field_scope))._field_scope))._field_Stmts.len())) {
			_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, (*_116929_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_116929_c.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
			return;;
		};
		jule::I64 _118913_i = ((*(_117617_label))._field_pos + 1LL);;
		if ((_118913_i >= (*(*(*(_117617_label))._field_scope.alloc)._field_scope.alloc)._field_Stmts.len())) {
			_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, (*_116929_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>());
		} else {
			jule::Any _119321_st = (*(*(*(_117617_label))._field_scope.alloc)._field_scope.alloc)._field_Stmts[_118913_i];;
			{
				auto &_match_expr{ _119321_st };
				
				if (_match_expr.type == &__jule_any_type35) {
					_case_begin_1c372b789:;
					{
						(*(_117013_cont))._field_It=static_cast<jule::Uintptr>(_119321_st.unsafe_cast_ptr<_1c0cd8574_InfIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type39) {
					_case_begin_1c372b976:;
					{
						(*(_117013_cont))._field_It=static_cast<jule::Uintptr>(_119321_st.unsafe_cast_ptr<_1c0cd9476_RangeIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type37) {
					_case_begin_1c372b9dc:;
					{
						(*(_117013_cont))._field_It=static_cast<jule::Uintptr>(_119321_st.unsafe_cast_ptr<_1c0cd8a2a_WhileIter>());
					}
				}
				else {
					_case_begin_1c372b910:;
					{
						_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, (*_116929_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_116929_c.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
					}
				}
				_match_end_1c372b8aa:;
			};
		};
	};
	if (((*(_117013_cont))._field_It != 0LLU)) {
		if ((!(_1c0ce91bc_checkValidContLabel(_self_, (*(_117013_cont))._field_It)))) {
			_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, (*_116929_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_116929_c.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		};
	};
	(*(*_self_.alloc)._field_scope.alloc)._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_117013_cont, &__jule_any_type40)}));
}



inline void _1c0ce9db0_checkLabel(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0c6c01e_LabelSt> _121634_l) {
	if ((_1c0ce3969_findLabel(_self_.ptr(), &((*(_121634_l))._field_Ident)) != nullptr)) {
		_1c0d2dbb3_pushErr((*_self_.alloc)._field_s.ptr(), (*_121634_l.alloc)._field_Token, jule::Str::lit("label is already exist in this identifier: @", 44), jule::Slice<jule::Any>::make({jule::Any((*_121634_l.alloc)._field_Ident, &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1c0cd9ed2_Label> _122213_label = jule::new_ptr<_1c0cd9ed2_Label>(_1c0cd9ed2_Label{._field_Ident=(*_121634_l.alloc)._field_Ident});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_122213_label, &__jule_any_type20)}));
	(*((*_self_.alloc)._field_labels))=jule::append((*(*_self_.alloc)._field_labels.alloc),jule::Slice<jule::Ptr<_1c0cdd579_scopeLabel>>::make({jule::new_ptr<_1c0cdd579_scopeLabel>(_1c0cdd579_scopeLabel{._field_token=(*_121634_l.alloc)._field_Token, ._field_label=_122213_label, ._field_pos=((*(*_self_.alloc)._field_scope.alloc)._field_Stmts.len() - 1LL), ._field_scope=_self_, })}));
}



inline void _1c0cea168_pushGoto(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0c6c3e8_GotoSt> _123532_gt) {
	jule::Ptr<_1c0cda3ab_GotoSt> _123613_st = jule::new_ptr<_1c0cda3ab_GotoSt>(_1c0cda3ab_GotoSt{._field_Ident=(*((*(_123532_gt))._field_Label))._field_Kind, });;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_123613_st, &__jule_any_type41)}));
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*_self_.alloc)._field_gotos.alloc),jule::Slice<jule::Ptr<_1c0cddb0c_scopeGoto>>::make({jule::new_ptr<_1c0cddb0c_scopeGoto>(_1c0cddb0c_scopeGoto{._field_st=_123613_st, ._field_gt=_123532_gt, ._field_scope=_self_, ._field_pos=((*(*_self_.alloc)._field_scope.alloc)._field_Stmts.len() - 1LL)})}));
}



inline void _1c0cea421_checkPostfix(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0c6d3d8_AssignSt> _124936_a) {
	if (((*(_124936_a))._field_Left.len() > 1LL)) {
		_1c0d2dbb3_pushErr((*(_self_))._field_s.ptr(), (*_124936_a.alloc)._field_Setter, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c0c63c6e_Expr> _125513_expr = (*((*_124936_a.alloc)._field_Left[0LL]))._field_Expr;;
	jule::Ptr<_1c0da69e9_Data> _125613_d = _1c0dc6981_evalExpr(_1c0d36160_eval((*_self_.alloc)._field_s, jule::Trait<_1c0e079d4_Lookup>(_self_, 0)), _125513_expr);;
	if ((_125613_d == nullptr)) {
		return;;
	};
	_1c0cd6808_checkAssign(&((*_self_.alloc)._field_s), &(_125613_d), nullptr, (*_124936_a.alloc)._field_Setter);
	if ((_1c0ddaa61_Ptr((*(_125613_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1c0de7cb0_Ptr> _126417_ptr = _1c0ddaa61_Ptr((*(_125613_d))._field_Kind);;
		if (_1c0de87e9_IsUnsafe(_126417_ptr.ptr())) {
			_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, (*_124936_a.alloc)._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*_124936_a.alloc)._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1c0dd82ab_Str((*(_125613_d))._field_Kind), &__jule_any_type4)}));
			return;;
		};
	} else {
		if (((_1c0dda544_Prim((*(_125613_d))._field_Kind.ptr()) == nullptr) || (!(_2021e5ad7_IsNum((*(_1c0dda544_Prim((*(_125613_d))._field_Kind)))._field_Kind))))) {
			_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, (*_124936_a.alloc)._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*_124936_a.alloc)._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1c0dd82ab_Str((*(_125613_d))._field_Kind), &__jule_any_type4)}));
			return;;
		};
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(jule::new_ptr<_1c0cda785_Postfix>(_1c0cda785_Postfix{._field_Expr=(*(_125613_d))._field_Model, ._field_Op=(*((*_124936_a.alloc)._field_Setter))._field_Kind}), &__jule_any_type42)}));
}



inline jule::Bool _1c0cea762_isNewAssignIdent(_1c0cdeaec_scopeChecker* _self_, jule::Str _128235_ident) {
	if ((_1c0c4bd67_IsIgnoreIdent(_128235_ident) || (_128235_ident).empty())) {
		return false;;
	};
	return (_1c0da46ea_defByIdent((*(_self_))._field_table.ptr(), &(_128235_ident), false) == nullptr);;
}



inline void _1c0ceaa1a_removeInteriorMutRisk(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0da69e9_Data>* _129546_d) {
	jule::Ptr<_1c0c83552_StructIns> _12969_s = _1c0ddbab7_Struct((*((*(_129546_d))))._field_Kind.ptr());;
	if ((_12969_s == nullptr)) {
		return;;
	};
	jule::Ptr<_1c0cdeaec_scopeChecker> _13009_root = _1c0ce322c_getHardRoot(_self_);;
	if (((*((*(_13009_root))._field_owner))._field_Owner != _12969_s)) {
		return;;
	};
	(*((*(_129546_d))))._field_Mutable=true;
}



inline jule::Bool _1c0ceaec1_checkStructureAssignOp(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0c83552_StructIns>* _130947_s, jule::Ptr<_1c0c6d3d8_AssignSt>* _130967_a, jule::Ptr<_1c0da69e9_Data>* _130986_r) {
	jule::Ptr<_1c0c98699_FnIns> _131217_overload = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_130967_a))))._field_Setter))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1c3747e9d:;
			{
				_131217_overload=(*((*(_130947_s))))._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1c3747b6d:;
			{
				_131217_overload=(*((*(_130947_s))))._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1c3747bd4:;
			{
				_131217_overload=(*((*(_130947_s))))._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1c3747c4a:;
			{
				_131217_overload=(*((*(_130947_s))))._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1c3747cb1:;
			{
				_131217_overload=(*((*(_130947_s))))._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1c3747d27:;
			{
				_131217_overload=(*((*(_130947_s))))._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1c3747d8d:;
			{
				_131217_overload=(*((*(_130947_s))))._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1c3749510:;
			{
				_131217_overload=(*((*(_130947_s))))._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1c3749576:;
			{
				_131217_overload=(*((*(_130947_s))))._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1c37495dc:;
			{
				_131217_overload=(*((*(_130947_s))))._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1c3747596:;
			{
				_1c0d2dbb3_pushErr((*(_self_))._field_s.ptr(), (*((*(_130967_a))))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_130967_a))))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1c0c838c6_Str((*(_130947_s)).ptr()), &__jule_any_type4)}));
				return false;;
			}
		}
		_match_end_1c3747b07:;
	};
	if ((_131217_overload == nullptr)) {
		_1c0d2dbb3_pushErr((*(_self_))._field_s.ptr(), (*((*(_130967_a))))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_130967_a))))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1c0c838c6_Str((*(_130947_s)).ptr()), &__jule_any_type4)}));
		return false;;
	};
	jule::Ptr<_1c0c976ed_ParamIns> _134413_p = (*(_131217_overload))._field_Params[1LL];;
	return _1c0d366c1_checkAssignType((*_self_.alloc)._field_s, (*((*(_134413_p))._field_Decl))._field_Reference, &((*_134413_p.alloc)._field_Kind), _130986_r, (*((*(_130967_a))))._field_Setter);;
}



inline void _1c0ceb279_checkSingleAssign(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0c6d3d8_AssignSt>* _134842_a) {
	jule::Ptr<_1c0da69e9_Data> _134917_l = nullptr;;
	if ((!(_1c0c4bd67_IsIgnoreIdent((*((*((*(_134842_a))))._field_Left[0LL]))._field_Ident)))) {
		jule::Ptr<_1c0c63c6e_Expr> _135217_expr = (*((*((*(_134842_a))))._field_Left[0LL]))._field_Expr;;
		_134917_l=_1c0dc6981_evalExpr(_1c0d36160_eval((*(_self_))._field_s, jule::Trait<_1c0e079d4_Lookup>(_self_, 0)), _135217_expr);
		if ((_134917_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1c0da8721_Eval> _135917_eval = nullptr;;
	if ((_134917_l != nullptr)) {
		_135917_eval=_1c0d35d1e_evalp((*_self_.alloc)._field_s, jule::Trait<_1c0e079d4_Lookup>(_self_, 0), (*(_134917_l))._field_Kind);
	} else {
		_135917_eval=_1c0d36160_eval((*_self_.alloc)._field_s, jule::Trait<_1c0e079d4_Lookup>(_self_, 0));
	};
	(*(_135917_eval))._field_unsafety=_1c0ce1ea6_isUnsafe(_self_);
	jule::Ptr<_1c0da69e9_Data> _136613_r = _1c0dc6981_evalExpr(_135917_eval, (*((*(_134842_a))))._field_Right);;
	if ((_136613_r == nullptr)) {
		return;;
	};
	_1c0ceaa1a_removeInteriorMutRisk(_self_, &(_136613_r));
	if ((_134917_l == nullptr)) {
		if (_1c0dd9257_Void((*(_136613_r))._field_Kind.ptr())) {
			_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, (*((*((*(_134842_a))))._field_Right))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		};
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_136613_r, &__jule_any_type23)}));
		return;;
	};
	if ((!(_1c0cd6808_checkAssign(&((*_self_.alloc)._field_s), &(_134917_l), _136613_r, (*((*(_134842_a))))._field_Setter)))) {
		return;;
	};
	if ((_1c0ddc36a_Tup((*(_136613_r))._field_Kind) != nullptr)) {
		_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, (*((*(_134842_a))))._field_Setter, jule::Str::lit("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c0c87457_OperandExprModel> _139013_lm = jule::new_ptr<_1c0c87457_OperandExprModel>(_1c0c87457_OperandExprModel{._field_Kind=(*(_134917_l))._field_Kind, ._field_Model=(*(_134917_l))._field_Model});;
	jule::Ptr<_1c0c87457_OperandExprModel> _139413_rm = jule::new_ptr<_1c0c87457_OperandExprModel>(_1c0c87457_OperandExprModel{._field_Kind=(*(_136613_r))._field_Kind, ._field_Model=(*(_136613_r))._field_Model});;
	(*(*_self_.alloc)._field_scope.alloc)._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(jule::new_ptr<_1c0cdac3b_Assign>(_1c0cdac3b_Assign{._field_Left=_139013_lm, ._field_Right=_139413_rm, ._field_Op=(*((*(_134842_a))))._field_Setter}), &__jule_any_type43)}));
	if (((*((*((*(_134842_a))))._field_Setter))._field_Id == static_cast<jule::U64>(71LLU))) {
		_1c0d90461_assignTypeChecker _140117_checker = _1c0d90461_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*(_134917_l))._field_Kind, ._field_d=_136613_r, ._field_errorToken=(*((*(_134842_a))))._field_Setter};;
		if (_1c0d9142e_check(&_140117_checker)) {
			(*(_139413_rm))._field_Model=(*(_136613_r))._field_Model;
			(*(_139013_lm))._field_Model=(*(_134917_l))._field_Model;
		};
		return;;
	};
	jule::Ptr<_1c0c83552_StructIns> _141313_strct = _1c0ddbab7_Struct((*(_134917_l))._field_Kind);;
	if ((_141313_strct != nullptr)) {
		_1c0ceaec1_checkStructureAssignOp(_self_, &(_141313_strct), _134842_a, &(_136613_r));
		return;;
	};
	jule::U64 _14189_id = (*(*((*(_134842_a))))._field_Setter.alloc)._field_Id;;
	(*(*((*(_134842_a))))._field_Setter.alloc)._field_Id=_1c0d020b5_removeEqFromOp((*(*((*(_134842_a))))._field_Setter.alloc)._field_Id);
	_1c0dc8dd4_binaryEval _142013_solver = static__1c0dc980d_new(_135917_eval, (*((*(_134842_a))))._field_Setter);;
	({
		jule::Ptr<_1c0da69e9_Data> ___jule_assign_arg = _134917_l;
		jule::Ptr<_1c0da69e9_Data> _1___jule_assign_arg = _136613_r;
		_142013_solver._field_l = ___jule_assign_arg;
		_142013_solver._field_r = _1___jule_assign_arg;
	});
	_1c0dcd955_evalOp(&_142013_solver);
	(*(*((*(_134842_a))))._field_Setter.alloc)._field_Id=_14189_id;
}



inline void _1c0ceb80c_processEndPartOfMultiAssign(_1c0cdeaec_scopeChecker* _self_, jule::Ptr<_1c0cdb1e2_MultiAssign>* _142651_st, jule::Ptr<_1c0c6d3d8_AssignSt>* _142714_a, jule::Ptr<_1c0c6cd55_AssignLeft>* _142733_lexpr, jule::Ptr<_1c0da69e9_Data>* _142758_l, jule::Ptr<_1c0da69e9_Data>* _142773_r) {
	if (((!((*((*(_142733_lexpr))))._field_Reference)) && _1c0c4bd67_IsIgnoreIdent((*((*(_142733_lexpr))))._field_Ident))) {
		if (_1c0dd9257_Void((*((*(_142773_r))))._field_Kind.ptr())) {
			_1c0d2dbb3_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_142714_a))))._field_Right))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_1c0da69e9_Data>> &__jule_push_dest = (*((*(_142651_st))))._field_Left; __jule_push_dest.push(nullptr); };
		return;;
	};
	if (((*((*(_142714_a))))._field_Declarative && ((*((*(_142733_lexpr))))._field_Reference || _1c0cea762_isNewAssignIdent(_self_, (*((*(_142733_lexpr))))._field_Ident)))) {
		if (_1c0ce44e7_isDuplicatedIdent(_self_, 0LLU, &((*((*(_142733_lexpr))))._field_Ident))) {
			_1c0d2dbb3_pushErr((*(_self_))._field_s, (*((*(_142733_lexpr))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_142733_lexpr))))._field_Ident, &__jule_any_type4)}));
			_1c0d2e026_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
			_1c0ce243a_stop(_self_);
			return;;
		};
		if (_1c0c4bd67_IsIgnoreIdent((*((*(_142733_lexpr))))._field_Ident)) {
			_1c0d2dbb3_pushErr((*(_self_))._field_s, (*((*(_142733_lexpr))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1c0d4dde2_Var> _144817_v = jule::new_ptr<_1c0d4dde2_Var>(_1c0d4dde2_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*((*(_142733_lexpr))))._field_Token, ._field_Ident=(*((*(_142733_lexpr))))._field_Ident, ._field_Mutable=(*((*(_142733_lexpr))))._field_Mutable, ._field_Reference=(*((*(_142733_lexpr))))._field_Reference, ._field_Value=jule::new_ptr<_1c0da7b71_Value>(_1c0da7b71_Value{._field_Expr=(*((*(_142714_a))))._field_Right, ._field_Data=(*(_142773_r))}), });;
		_1c0d45669_checkVarValue((*(_self_))._field_s, &(_144817_v));
		{ jule::Slice<jule::Ptr<_1c0da69e9_Data>> &__jule_push_dest = (*((*(_142651_st))))._field_Left; __jule_push_dest.push(jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=(*((*_144817_v.alloc)._field_Kind))._field_Kind, ._field_Mutable=(*_144817_v.alloc)._field_Mutable, ._field_Reference=(*_144817_v.alloc)._field_Reference, ._field_Lvalue=(!((*(_144817_v))._field_Constant)), ._field_Model=jule::Any(_144817_v, &__jule_any_type8), })); };
		{ jule::Slice<jule::Ptr<_1c0d4dde2_Var>> &__jule_push_dest = (*((*(_142651_st))))._field_Decls; __jule_push_dest.push(_144817_v); };
		(*((*(_self_))._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1c0d4dde2_Var>>::make({_144817_v}));
		return;;
	};
	if (((*((*(_142733_lexpr))))._field_Mutable || (*((*(_142733_lexpr))))._field_Reference)) {
		_1c0d2dbb3_pushErr((*(_self_))._field_s, (*((*(_142733_lexpr))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_142733_lexpr))))._field_Ident, &__jule_any_type4)}));
		_1c0d2e026_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if ((!(_1c0cd6808_checkAssign(&((*(_self_))._field_s), _142758_l, (*(_142773_r)), (*((*(_142733_lexpr))))._field_Token)))) {
		return;;
	};
	;
	_1c0d3aa5a_checkValidityForInitExpr((*(_self_))._field_s, (*((*(_142758_l))))._field_Mutable, false, &((*((*(_142758_l))))._field_Kind), _142773_r, &((*((*(_142714_a))))._field_Setter));
	_1c0d90461_assignTypeChecker _148613_checker = _1c0d90461_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*((*(_142758_l))))._field_Kind, ._field_d=(*(_142773_r)), ._field_errorToken=(*((*(_142714_a))))._field_Setter};;
	_1c0d9142e_check(&_148613_checker);
	{ jule::Slice<jule::Ptr<_1c0da69e9_Data>> &__jule_push_dest = (*((*(_142651_st))))._field_Left; __jule_push_dest.push((*(_142758_l))); };
}



inline void _1c0cebab5_checkMultiAssign(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0c6d3d8_AssignSt>* _149641_a) {
	jule::Ptr<_1c0da69e9_Data> _149713_rd = _1c0dc6981_evalExpr(_1c0d36160_eval((*(_self_))._field_s, jule::Trait<_1c0e079d4_Lookup>(_self_, 0)), (*((*(_149641_a))))._field_Right);;
	if ((_149713_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1c0da69e9_Data>> _150113_right = _1c0cd59d3_getDatasFromTupleData(&(_149713_rd));;
	if ((_150113_right.len() == 1LL)) {
		{
			auto &_match_expr{ (*(_150113_right[0LL]))._field_Model };
			
			if (_match_expr.type == &__jule_any_type44) {
				_case_begin_1c3775edc:;
				{
					jule::Ptr<_1c0c8a2b2_IndexingExprModel> _150521_iem = (*(_150113_right[0LL]))._field_Model.unsafe_cast_ptr<_1c0c8a2b2_IndexingExprModel>();;
					if ((_1c0ddc0d4_Map((*((*(_150521_iem))._field_Expr))._field_Kind.ptr()) != nullptr)) {
						_150113_right=jule::Slice<jule::Ptr<_1c0da69e9_Data>>::make({jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=(*(_1c0ddc0d4_Map((*(*_150521_iem.alloc)._field_Expr.alloc)._field_Kind)))._field_Val, }),jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec9578_primBool, })});
					};
				}
			}
			_match_end_1c3775e43:;
		};
	};
	{
		
		if (((*((*(_149641_a))))._field_Left.len() > _150113_right.len())) {
			_case_begin_1c3776570:;
			{
				_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, (*((*(_149641_a))))._field_Setter, jule::Str::lit("overflow multi assignment identifers", 36), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*((*(_149641_a))))._field_Left.len() < _150113_right.len())) {
			_case_begin_1c3775728:;
			{
				_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, (*((*(_149641_a))))._field_Setter, jule::Str::lit("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1c3776097:;
	};
	jule::Ptr<_1c0cdb1e2_MultiAssign> _152413_st = jule::new_ptr<_1c0cdb1e2_MultiAssign>(_1c0cdb1e2_MultiAssign{._field_Right=(*(_149713_rd))._field_Model});;
	{
		auto expr = &((*((*(_149641_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c377b014:;
		if (it != expr_end) {
			jule::I64 _152713_i = it - expr->begin();
			{
				jule::Ptr<_1c0c6cd55_AssignLeft> _152817_lexpr = (*((*(_149641_a))))._field_Left[_152713_i];;
				jule::Ptr<_1c0da69e9_Data> _152921_l = nullptr;;
				if (((!(_1c0c4bd67_IsIgnoreIdent((*(_152817_lexpr))._field_Ident))) && ((!((*((*(_149641_a))))._field_Declarative)) || (!(_1c0cea762_isNewAssignIdent(_self_, (*_152817_lexpr.alloc)._field_Ident)))))) {
					_152921_l=_1c0dc6981_evalExpr(_1c0d36160_eval((*_self_.alloc)._field_s, jule::Trait<_1c0e079d4_Lookup>(_self_, 0)), (*_152817_lexpr.alloc)._field_Expr);
					if ((_152921_l == nullptr)) {
						goto _iter_next_1c377b014;
					};
				};
				jule::Ptr<_1c0da69e9_Data> _153717_r = _150113_right[_152713_i];;
				_1c0ceaa1a_removeInteriorMutRisk(_self_, &(_153717_r));
				_1c0ceb80c_processEndPartOfMultiAssign(_self_, &(_152413_st), _149641_a, &(_152817_lexpr), &(_152921_l), &(_153717_r));
			}
			_iter_next_1c377b014:;
			++it;
			_152713_i++;
			goto _iter_begin_1c377b014;
		}
		_iter_end_1c377b014:;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_152413_st, &__jule_any_type45)}));
}



inline void _1c0cebd6d_checkAssignSt(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0c6d3d8_AssignSt> _154437_a) {
	{
		
		if (_1c0c4e012_IsPostfixOp((*((*(_154437_a))._field_Setter))._field_Id)) {
			_case_begin_1c378139e:;
			{
				_1c0cea421_checkPostfix(_self_, _154437_a);
			}
		}
		else if (((*(_154437_a))._field_Left.len() == 1LL)) {
			_case_begin_1c378105d:;
			{
				_1c0ceb279_checkSingleAssign(_self_, &(_154437_a));
			}
		}
		else {
			_case_begin_1c3780ee7:;
			{
				_1c0cebab5_checkMultiAssign(_self_, &(_154437_a));
			}
		}
		_match_end_1c3780de8:;
	};
}



inline jule::Ptr<_1c0cd763e_Scope> _1c0cec269_checkCaseScope(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0cdc37a_Case>* _155535_c, jule::Ptr<_1c0c6e95b_ScopeTree>* _155550_tree) {
	jule::Ptr<_1c0cdeaec_scopeChecker> _155613_ssc = _1c0d01c41_newChildChecker(_self_);;
	(*(_155613_ssc))._field_cse=static_cast<jule::Uintptr>((*(_155535_c)));
	return _1c0ce58b1_checkChildSc(_self_, _155550_tree, &(_155613_ssc));;
}



inline jule::Ptr<_1c0cdc37a_Case> _1c0cec7ca_checkCase(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0cdb852_Match> _156133_m, jule::I64 _156144_i, jule::Ptr<_1c0c7690d_Case> _156156_c, jule::Ptr<_1c0da69e9_Data> _156175_expr) {
	jule::Ptr<_1c0cdc37a_Case> _156213_case = (*(_156133_m))._field_Cases[_156144_i];;
	(*(_156213_case))._field_Exprs=jule::Slice<jule::Ptr<_1c0da69e9_Data>>::alloc(0LL, (*(_156156_c))._field_Exprs.len());
	jule::Bool _156413_constMatched = false;;
	jule::Ptr<_1c0da8721_Eval> _156513_eval = _1c0d36160_eval((*(_self_))._field_s, jule::Trait<_1c0e079d4_Lookup>(_self_, 0));;
	{
		auto expr = &((*_156156_c.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3786b35:;
		if (it != expr_end) {
			jule::Ptr<_1c0c63c6e_Expr> _156621_e = *it;
			{
				jule::Ptr<_1c0da69e9_Data> _156717_d = _1c0dc5b6c_evalExprKind(_156513_eval, (*(_156621_e))._field_Kind);;
				if ((_156717_d == nullptr)) {
					goto _iter_next_1c3786b35;
				};
				if ((*_156133_m.alloc)._field_TypeMatch) {
					(*_156213_case.alloc)._field_Exprs=jule::append((*_156213_case.alloc)._field_Exprs,jule::Slice<jule::Ptr<_1c0da69e9_Data>>::make({_156717_d}));
					if ((_1c0cd5719_countMatchType(&(_156133_m), &((*(_156717_d))._field_Kind)) > 1LL)) {
						_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, (*_156621_e.alloc)._field_Token, jule::Str::lit("duplicated pattern: type @ is already matched", 45), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*(_156717_d))._field_Kind.ptr()), &__jule_any_type4)}));
					};
					if ((*_156133_m.alloc)._field_Comptime) {
						_156413_constMatched=(_156413_constMatched || _1c0dd85ec_Equal((*(_156175_expr))._field_Kind, (*(_156717_d))._field_Kind));
					} else {
						if ((_1c0ddb07d_TypeEnum((*(_156175_expr))._field_Kind) != nullptr)) {
							_1c0d3712d_checkTypeCompatibility((*_self_.alloc)._field_s, &((*_156175_expr.alloc)._field_Kind), &((*(_156717_d))._field_Kind), &((*_156621_e.alloc)._field_Token));
						} else {
							jule::Ptr<_1c0ca8a72_Trait> _158625_trt = _1c0ddbd4d_Trait((*(_156175_expr))._field_Kind);;
							if ((_158625_trt != nullptr)) {
								_1c0d3712d_checkTypeCompatibility((*_self_.alloc)._field_s, &((*_156175_expr.alloc)._field_Kind), &((*(_156717_d))._field_Kind), &((*_156621_e.alloc)._field_Token));
							};
						};
					};
					goto _iter_next_1c3786b35;
				};
				if ((*(_156717_d))._field_Decl) {
					_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, (*_156621_e.alloc)._field_Token, jule::Str::lit("expecting expression, found type declaration", 44), jule::Slice<jule::Any>());
					_1c0d2e026_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("you can use type-match if you want to match types", 49), jule::Slice<jule::Any>());
					goto _iter_next_1c3786b35;
				};
				if ((*_156133_m.alloc)._field_Comptime) {
					if (((!(_1c0da7401_IsConst(_156717_d.ptr()))) && (_1c0ddde0a_comptimeTypeInfo((*(_156717_d))._field_Kind) == nullptr))) {
						_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, (*_156621_e.alloc)._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
						_1c0d2e026_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
						goto _iter_next_1c3786b35;
					};
					if ((!(_156413_constMatched))) {
						if (_1c0da7401_IsConst(_156717_d.ptr())) {
							_156413_constMatched=(_1c0da7401_IsConst(_156175_expr.ptr()) && _2021ebc31_Eq((*(_156717_d))._field_Constant.ptr(), (*(*_156175_expr.alloc)._field_Constant.alloc)));
						} else {
							jule::Ptr<_1c0cc0418_comptimeTypeInfo> _161125_exprCti = _1c0ddde0a_comptimeTypeInfo((*(_156175_expr))._field_Kind);;
							_156413_constMatched=((_161125_exprCti != nullptr) && _1c0dd85ec_Equal((*(_1c0ddde0a_comptimeTypeInfo((*(_156717_d))._field_Kind)))._field_base, (*_161125_exprCti.alloc)._field_base));
						};
					};
				};
				(*_156213_case.alloc)._field_Exprs=jule::append((*_156213_case.alloc)._field_Exprs,jule::Slice<jule::Ptr<_1c0da69e9_Data>>::make({_156717_d}));
				if ((((!((*_156133_m.alloc)._field_Comptime)) || (_1c0ddde0a_comptimeTypeInfo((*(_156175_expr))._field_Kind) == nullptr)) || (_1c0ddde0a_comptimeTypeInfo((*(_156717_d))._field_Kind) == nullptr))) {
					_1c0d90461_assignTypeChecker _162121_checker = _1c0d90461_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*_156175_expr.alloc)._field_Kind, ._field_d=_156717_d, ._field_errorToken=(*_156621_e.alloc)._field_Token};;
					_1c0d9142e_check(&_162121_checker);
				};
			}
			_iter_next_1c3786b35:;
			++it;
			goto _iter_begin_1c3786b35;
		}
		_iter_end_1c3786b35:;
	};
	if (((!((*_156133_m.alloc)._field_Comptime)) || _156413_constMatched)) {
		(*_156213_case.alloc)._field_Scope=_1c0cec269_checkCaseScope(_self_, &(_156213_case), &((*_156156_c.alloc)._field_Scope));
	};
	return _156213_case;;
}



inline void _1c0cecbe8_checkCases(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0c77227_MatchCase>* _163635_m, jule::Ptr<_1c0cdb852_Match> _163654_rm, jule::Ptr<_1c0da69e9_Data> _163670_expr) {
	(*(_163654_rm))._field_Cases=jule::Slice<jule::Ptr<_1c0cdc37a_Case>>::alloc(0LL, (*((*(_163635_m))))._field_Cases.len());
	{
		auto expr = &((*((*(_163635_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3799384:;
		if (it != expr_end) {
			jule::I64 _163813_i = it - expr->begin();
			{
				jule::Ptr<_1c0cdc37a_Case> _163917_case = jule::new_ptr<_1c0cdc37a_Case>(_1c0cdc37a_Case{._field_Owner=_163654_rm, });;
				if ((_163813_i > 0LL)) {
					(*((*_163654_rm.alloc)._field_Cases[(_163813_i - 1LL)]))._field_Next=_163917_case;
				};
				(*_163654_rm.alloc)._field_Cases=jule::append((*_163654_rm.alloc)._field_Cases,jule::Slice<jule::Ptr<_1c0cdc37a_Case>>::make({_163917_case}));
			}
			_iter_next_1c3799384:;
			++it;
			_163813_i++;
			goto _iter_begin_1c3799384;
		}
		_iter_end_1c3799384:;
	};
	if ((((*_163654_rm.alloc)._field_Default != nullptr) && ((*((*(_163635_m))))._field_Cases.len() > 0LL))) {
		(*((*_163654_rm.alloc)._field_Cases[((*_163654_rm.alloc)._field_Cases.len() - 1LL)]))._field_Next=(*_163654_rm.alloc)._field_Default;
	};
	{
		auto expr = &((*((*(_163635_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c379c94d:;
		if (it != expr_end) {
			jule::I64 _165214_i = it - expr->begin();
			jule::Ptr<_1c0c7690d_Case> _165221_c = *it;
			{
				_1c0cec7ca_checkCase(_self_, _163654_rm, _165214_i, _165221_c, _163670_expr);
			}
			_iter_next_1c379c94d:;
			++it;
			_165214_i++;
			goto _iter_begin_1c379c94d;
		}
		_iter_end_1c379c94d:;
	};
}



inline jule::Ptr<_1c0cdc37a_Case> _1c0ced0e4_checkDefault(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0cdb852_Match> _165736_m, jule::Ptr<_1c0c75764_Else> _165751_d) {
	jule::Ptr<_1c0cdc37a_Case> _165813_def = jule::new_ptr<_1c0cdc37a_Case>(_1c0cdc37a_Case{._field_Owner=_165736_m, });;
	(*(_165813_def))._field_Scope=_1c0cec269_checkCaseScope(_self_, &(_165813_def), &((*(_165751_d))._field_Scope));
	return _165813_def;;
}



inline void _1c0ced457_checkComptimePanic(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0c49480_Token> _166542_callToken, jule::Ptr<_1c0cd763e_Scope>* _166562_s) {
	if (((*((*(_166562_s))))._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _16699_stmt = (*((*(_166562_s))))._field_Stmts[0LL];;
	{
		auto &_match_expr{ _16699_stmt };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1c37a115a:;
			{
				jule::Ptr<_1c0da69e9_Data> _167213_d = _16699_stmt.unsafe_cast_ptr<_1c0da69e9_Data>();;
				{
					auto &_match_expr{ (*(_167213_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type28) {
						_case_begin_1c37a20e5:;
						{
							jule::Ptr<_1c0c8e173_BuiltinPanicCallExprModel> _167521_m = (*(_167213_d))._field_Model.unsafe_cast_ptr<_1c0c8e173_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ (*(_167521_m))._field_Expr };
								
								if (_match_expr.type == &__jule_any_type19) {
									_case_begin_1c37a32c2:;
									{
										jule::Ptr<_2021e617b_Const> _167821_c = (*(_167521_m))._field_Expr.unsafe_cast_ptr<_2021e617b_Const>();;
										if ((!(_2021ea900_IsStr(_167821_c.ptr())))) {
											goto _match_end_1c37a325b;
										};
										if ((_166542_callToken == nullptr)) {
											jule::Ptr<_1c0cdeaec_scopeChecker> _168329_root = _1c0ce322c_getHardRoot(_self_);;
											if (((*(_168329_root))._field_calledFrom == nullptr)) {
												_166542_callToken=(*(_167521_m))._field_Token;
											} else {
												_166542_callToken=(*(_168329_root))._field_calledFrom;
											};
										};
										_1c0d2dbb3_pushErr((*_self_.alloc)._field_s.ptr(), _166542_callToken, jule::Str::lit("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_2021e8304_ReadStr(_167821_c), &__jule_any_type4)}));
										_1c0ce243a_stop(_self_);
									}
								}
								_match_end_1c37a325b:;
							};
						}
					}
					_match_end_1c37a207e:;
				};
			}
		}
		_match_end_1c37a1105:;
	};
}



inline void _1c0ced7ba_processConstMatch(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0cdb852_Match>* _169742_tm, jule::Ptr<_1c0c77227_MatchCase>* _169759_m) {
	{
		auto expr = &((*((*(_169742_tm))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c37a2711:;
		if (it != expr_end) {
			jule::I64 _169814_i = it - expr->begin();
			jule::Ptr<_1c0cdc37a_Case> _169821_c = *it;
			{
				if (((*(_169821_c))._field_Scope != nullptr)) {
					jule::Ptr<_1c0c49480_Token> _170025_token = nullptr;;
					if (((!((*((*(_169742_tm))))._field_TypeMatch)) && ((*(*_169821_c.alloc)._field_Scope.alloc)._field_Stmts.len() > 0LL))) {
						_170025_token=(*((*((*((*(_169759_m))))._field_Cases[_169814_i]))._field_Scope))._field_Stmts[0LL]._field_Token;
					};
					_1c0ced457_checkComptimePanic(_self_, _170025_token, &((*_169821_c.alloc)._field_Scope));
					(*((*(_169742_tm))))._field_Default=_169821_c;
					(*((*(_169742_tm))))._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_1c37a2711:;
			++it;
			_169814_i++;
			goto _iter_begin_1c37a2711;
		}
		_iter_end_1c37a2711:;
	};
	if (((*((*(_169759_m))))._field_Default != nullptr)) {
		(*((*(_169742_tm))))._field_Cases=nullptr;
		(*((*(_169742_tm))))._field_Default=_1c0ced0e4_checkDefault(_self_, (*(_169742_tm)), (*((*(_169759_m))))._field_Default);
		if (((*((*(_169742_tm))))._field_Default != nullptr)) {
			jule::Ptr<_1c0c49480_Token> _171425_token = nullptr;;
			if ((!((*((*(_169742_tm))))._field_TypeMatch))) {
				_171425_token=(*((*(*((*(_169759_m))))._field_Default.alloc)._field_Scope))._field_Stmts[0LL]._field_Token;
			};
			_1c0ced457_checkComptimePanic(_self_, _171425_token, &((*(*((*(_169742_tm))))._field_Default.alloc)._field_Scope));
		};
	} else {
		(*((*(_169742_tm))))._field_Cases=nullptr;
	};
}



inline void _1c0ceda73_checkTypeMatch(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0c77227_MatchCase>* _172639_m) {
	jule::Ptr<_1c0da69e9_Data> _172713_d = _1c0dc5ead_eval1(_1c0d36160_eval((*(_self_))._field_s, jule::Trait<_1c0e079d4_Lookup>(_self_, 0)), (*((*(_172639_m))))._field_Expr);;
	if ((_172713_d == nullptr)) {
		return;;
	};
	if ((*((*(_172639_m))))._field_Comptime) {
		jule::Ptr<_1c0cc0418_comptimeTypeInfo> _173317_cti = _1c0ddde0a_comptimeTypeInfo((*(_172713_d))._field_Kind.ptr());;
		if ((_173317_cti == nullptr)) {
			if ((!((*(_172713_d))._field_Decl))) {
				_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, (*((*((*(_172639_m))))._field_Expr))._field_Token, jule::Str::lit("comptime type-match expressions can take only type declarations", 63), jule::Slice<jule::Any>());
				return;;
			};
		} else {
			(*(_172713_d))._field_Kind=(*(_173317_cti))._field_base;
		};
	} else if (((*(_172713_d))._field_Decl || (!(((((_1c0dda544_Prim((*(_172713_d))._field_Kind.ptr()) != nullptr) && _1c0de41da_IsAny(_1c0dda544_Prim((*(_172713_d))._field_Kind).ptr())) || (_1c0ddbd4d_Trait((*(_172713_d))._field_Kind) != nullptr)) || (_1c0ddb07d_TypeEnum((*(_172713_d))._field_Kind) != nullptr)))))) {
		_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, (*((*((*(_172639_m))))._field_Expr))._field_Token, jule::Str::lit("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c0cdb852_Match> _174713_tm = jule::new_ptr<_1c0cdb852_Match>(_1c0cdb852_Match{._field_Expr=_172713_d, ._field_TypeMatch=true, ._field_Comptime=(*((*(_172639_m))))._field_Comptime, });;
	if (((!((*(_174713_tm))._field_Comptime)) && ((*((*(_172639_m))))._field_Default != nullptr))) {
		(*_174713_tm.alloc)._field_Default=_1c0ced0e4_checkDefault(_self_, _174713_tm, (*((*(_172639_m))))._field_Default);
	};
	_1c0cecbe8_checkCases(_self_, _172639_m, _174713_tm, _172713_d);
	if ((*_174713_tm.alloc)._field_Comptime) {
		_1c0ced7ba_processConstMatch(_self_, &(_174713_tm), _172639_m);
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_174713_tm, &__jule_any_type46)}));
}



inline void _1c0cedd2b_checkCommonMatch(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0c77227_MatchCase>* _176841_m) {
	jule::Ptr<_1c0da69e9_Data> _176917_d = nullptr;;
	if (((*((*(_176841_m))))._field_Expr == nullptr)) {
		_176917_d=jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec9578_primBool, ._field_Constant=static__2021e6b4e_NewBool(true)});
		(*(_176917_d))._field_Model=jule::Any((*_176917_d.alloc)._field_Constant, &__jule_any_type19);
	} else {
		_176917_d=_1c0dc6640_evalExpr1(_1c0d36160_eval((*(_self_))._field_s, jule::Trait<_1c0e079d4_Lookup>(_self_, 0)), (*((*(_176841_m))))._field_Expr);
		if ((_176917_d == nullptr)) {
			return;;
		};
	};
	if ((*((*(_176841_m))))._field_Comptime) {
		if ((!(_1c0d027e1_canComptimeMatch(&(_176917_d))))) {
			_1c0d2dbb3_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_176841_m))))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			_1c0d2e026_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
			return;;
		};
	} else if (_1c0ddc601_comptime((*(_176917_d))._field_Kind.ptr())) {
		_1c0d2dbb3_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_176841_m))))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		_1c0d2e026_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c0cdb852_Match> _179513_mc = jule::new_ptr<_1c0cdb852_Match>(_1c0cdb852_Match{._field_Expr=_176917_d, ._field_Comptime=(*((*(_176841_m))))._field_Comptime, });;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_179513_mc, &__jule_any_type46)}));
	if (((!((*(_179513_mc))._field_Comptime)) && ((*((*(_176841_m))))._field_Default != nullptr))) {
		(*_179513_mc.alloc)._field_Default=_1c0ced0e4_checkDefault(_self_, _179513_mc, (*((*(_176841_m))))._field_Default);
	};
	_1c0cecbe8_checkCases(_self_, _176841_m, _179513_mc, _176917_d);
	if ((*_179513_mc.alloc)._field_Comptime) {
		_1c0ced7ba_processConstMatch(_self_, &(_179513_mc), _176841_m);
	};
}



inline void _1c0cee0d4_checkMatch(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0c77227_MatchCase> _181834_m) {
	if ((*(_181834_m))._field_TypeMatch) {
		_1c0ceda73_checkTypeMatch(_self_, &(_181834_m));
		return;;
	};
	_1c0cedd2b_checkCommonMatch(_self_, &(_181834_m));
}



inline void _1c0cee38c_checkFall(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0c6c6e5_FallSt> _182629_f) {
	if (((((*(_self_))._field_cse == 0LLU) || (((*((*_self_.alloc)._field_scope))._field_Stmts.len() + 1LL) < (*(*_self_.alloc)._field_scope.alloc)._field_Stmts.len())) || _1c0ce2957_isDeferred(_self_))) {
		_1c0d2dbb3_pushErr((*_self_.alloc)._field_s.ptr(), (*(_182629_f))._field_Token, jule::Str::lit("fall keyword can only useable at end of the case scopes", 55), jule::Slice<jule::Any>());
		return;;
	};
	_1c0cdc37a_Case* _183413_case = ((_1c0cdc37a_Case*)((*_self_.alloc)._field_cse));;
	if ((*((*(_183413_case))._field_Owner))._field_Comptime) {
		_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, (*_182629_f.alloc)._field_Token, jule::Str::lit("the fall statement is not allowed for comptime-matching", 55), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_183413_case))._field_Next == nullptr)) {
		_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, (*_182629_f.alloc)._field_Token, jule::Str::lit("fall cannot useable at final case", 33), jule::Slice<jule::Any>());
		_1c0d2e026_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("remove \"fall\" keyword", 21), jule::Slice<jule::Any>());
		return;;
	};
	(*(*_self_.alloc)._field_scope.alloc)._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(jule::new_ptr<_1c0cdca73_FallSt>(_1c0cdca73_FallSt{._field_DestCase=static_cast<jule::Uintptr>((*(_183413_case))._field_Next)}), &__jule_any_type47)}));
}



inline jule::Ptr<_1c0cd9bd5_BreakSt> _1c0cee6cd_checkBreakWithLabel(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0c74a0a_BreakSt> _184939_b) {
	jule::Ptr<_1c0cd9bd5_BreakSt> _185013_brk = _1c0ceea1e_checkPlainBreak(_self_, _184939_b);;
	if ((_185013_brk == nullptr)) {
		return nullptr;;
	};
	(*(_185013_brk))._field_It=0LLU;
	(*(_185013_brk))._field_Mtch=0LLU;
	jule::Ptr<_1c0cdd579_scopeLabel> _186013_label = _1c0cd4b58_findLabelParent(&((*((*(_184939_b))._field_Label))._field_Kind), (*_self_.alloc)._field_parent);;
	if ((_186013_label == nullptr)) {
		_1c0d2dbb3_pushErr((*_self_.alloc)._field_s.ptr(), (*_184939_b.alloc)._field_Label, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*(*_184939_b.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	(*(_186013_label))._field_used=true;
	if ((((*(_186013_label))._field_pos + 1LL) >= (*((*((*(_186013_label))._field_scope))._field_scope))._field_Stmts.len())) {
		_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, (*_184939_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_184939_b.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _18739_i = ((*(_186013_label))._field_pos + 1LL);;
	if ((_18739_i >= (*(*(*(_186013_label))._field_scope.alloc)._field_scope.alloc)._field_Stmts.len())) {
		_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, (*_184939_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_184939_b.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
	} else {
		jule::Any _187717_st = (*(*(*(_186013_label))._field_scope.alloc)._field_scope.alloc)._field_Stmts[_18739_i];;
		{
			auto &_match_expr{ _187717_st };
			
			if (_match_expr.type == &__jule_any_type35) {
				_case_begin_1c37d2763:;
				{
					(*(_185013_brk))._field_It=static_cast<jule::Uintptr>(_187717_st.unsafe_cast_ptr<_1c0cd8574_InfIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type39) {
				_case_begin_1c37d2950:;
				{
					(*(_185013_brk))._field_It=static_cast<jule::Uintptr>(_187717_st.unsafe_cast_ptr<_1c0cd9476_RangeIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type37) {
				_case_begin_1c37d29b6:;
				{
					(*(_185013_brk))._field_It=static_cast<jule::Uintptr>(_187717_st.unsafe_cast_ptr<_1c0cd8a2a_WhileIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type46) {
				_case_begin_1c37d2a2c:;
				{
					(*(_185013_brk))._field_Mtch=static_cast<jule::Uintptr>(_187717_st.unsafe_cast_ptr<_1c0cdb852_Match>());
				}
			}
			else {
				_case_begin_1c37d28d9:;
				{
					_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, (*_184939_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_184939_b.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
				}
			}
			_match_end_1c37d2884:;
		};
	};
	if (((*(_185013_brk))._field_It != 0LLU)) {
		if ((!(_1c0ce950d_checkValidBreakLabel(_self_, (*(_185013_brk))._field_It)))) {
			_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, (*_184939_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_184939_b.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		};
	};
	if (((*(_185013_brk))._field_Mtch != 0LLU)) {
		if ((!(_1c0ce950d_checkValidBreakLabel(_self_, (*(_185013_brk))._field_Mtch)))) {
			_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, (*_184939_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_184939_b.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		};
	};
	return _185013_brk;;
}



inline jule::Ptr<_1c0cd9bd5_BreakSt> _1c0ceea1e_checkPlainBreak(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0c74a0a_BreakSt> _190735_b) {
	if (_1c0ce2957_isDeferred(_self_)) {
		_1c0d2dbb3_pushErr((*_self_.alloc)._field_s.ptr(), (*(_190735_b))._field_Token, jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c0cdeaec_scopeChecker> _191313_scope = _self_;;
	_julec_label_1c37da826:;
	{
		
		if ((((((*_191313_scope.alloc)._field_it == 0LLU) && ((*_191313_scope.alloc)._field_cse == 0LLU)) && ((*_191313_scope.alloc)._field_parent != nullptr)) && ((*_191313_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1c37dab89:;
			{
				_191313_scope=(*_191313_scope.alloc)._field_parent;
				goto _julec_label_1c37da826;
			}
		}
		else if (((*_191313_scope.alloc)._field_it != 0LLU)) {
			_case_begin_1c37dac22:;
			{
				return jule::new_ptr<_1c0cd9bd5_BreakSt>(_1c0cd9bd5_BreakSt{._field_It=(*_191313_scope.alloc)._field_it, });;
			}
		}
		else if (((*_191313_scope.alloc)._field_cse != 0LLU)) {
			_case_begin_1c37dac88:;
			{
				return jule::new_ptr<_1c0cd9bd5_BreakSt>(_1c0cd9bd5_BreakSt{._field_Mtch=static_cast<jule::Uintptr>((*(((_1c0cdc37a_Case*)((*_191313_scope.alloc)._field_cse))))._field_Owner)});;
			}
		}
		_match_end_1c37daa9b:;
	};
	_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, (*_190735_b.alloc)._field_Token, jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1c0ceecc7_checkBreak(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0c74a0a_BreakSt> _192930_b) {
	if (((*(_192930_b))._field_Label != nullptr)) {
		jule::Ptr<_1c0cd9bd5_BreakSt> _193117_brk = _1c0cee6cd_checkBreakWithLabel(_self_, _192930_b);;
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_193117_brk, &__jule_any_type48)}));
		return;;
	};
	jule::Ptr<_1c0cd9bd5_BreakSt> _193613_brk = _1c0ceea1e_checkPlainBreak(_self_, _192930_b);;
	(*(*_self_.alloc)._field_scope.alloc)._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_193613_brk, &__jule_any_type48)}));
}



inline void _1c0d00080_checkRet(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0c72b7e_RetSt> _194032_r) {
	if (_1c0ce2957_isDeferred(_self_)) {
		_1c0d2dbb3_pushErr((*_self_.alloc)._field_s.ptr(), (*(_194032_r))._field_Token, jule::Str::lit("deferred scopes are not supports return statements", 50), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c0cdce19_RetSt> _194513_rt = jule::new_ptr<_1c0cdce19_RetSt>(_1c0cdce19_RetSt{._field_Func=(*(_1c0ce2e96_getRoot(_self_)))._field_owner, });;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_194513_rt, &__jule_any_type49)}));
	jule::Ptr<_1c0d9e11d_retTypeChecker> _195013_rtc = jule::new_ptr<_1c0d9e11d_retTypeChecker>(_1c0d9e11d_retTypeChecker{._field_sc=_self_, ._field_f=(*(_194513_rt))._field_Func, ._field_errorToken=(*_194032_r.alloc)._field_Token, });;
	jule::Bool _19559_ok = _1c0da00ca_check(_195013_rtc.ptr(), &((*_194032_r.alloc)._field_Expr));;
	if ((!(_19559_ok))) {
		return;;
	};
	if (((*_194032_r.alloc)._field_Expr != nullptr)) {
		(*_194513_rt.alloc)._field_Expr=(*_195013_rtc.alloc)._field_model;
	};
}



inline void _1c0d00338_checkUseExpr(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0c64643_UseExpr> _196532_ue) {
	if (((*(_self_))._field_result == nullptr)) {
		_1c0d2dbb3_pushErr((*_self_.alloc)._field_s.ptr(), (*(_196532_ue))._field_Token, jule::Str::lit("use expressions cannot useable out of exceptional handler scopes", 64), jule::Slice<jule::Any>());
		return;;
	};
	if (_1c0ce2957_isDeferred(_self_)) {
		_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, (*_196532_ue.alloc)._field_Token, jule::Str::lit("use expressions cannot useable in deferred scopes", 49), jule::Slice<jule::Any>());
	};
	if ((((*_self_.alloc)._field_i + 1LL) < (*((*_self_.alloc)._field_tree))._field_Stmts.len())) {
		_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, (*_196532_ue.alloc)._field_Token, jule::Str::lit("use expressions must be last statement of scope", 47), jule::Slice<jule::Any>());
	};
}



inline void _1c0d005e1_checkNode(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Any* _198134_node) {
	{
		auto &_match_expr{ (*(_198134_node)) };
		
		if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1c37eb87b:;
			{
				_1c0ce5eaa_checkAnonScope(_self_, (*(_198134_node)).cast_ptr<_1c0c6e95b_ScopeTree>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1c37eb1d8:;
			{
				_1c0ce47a0_checkVarDecl(_self_, (*(_198134_node)).cast_ptr<_1c0c727a5_VarDecl>(&__jule_any_type16));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1c37eb54b:;
			{
				_1c0ce4d11_checkTypeAliasDecl(_self_, (*(_198134_node)).cast_ptr<_1c0c76457_TypeAliasDecl>(&__jule_any_type12));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1c37eb5b2:;
			{
				_1c0ce65c6_checkExpr(_self_, (*(_198134_node)).cast_ptr<_1c0c63c6e_Expr>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1c37eb628:;
			{
				_1c0ce7011_checkConditional(_self_, (*(_198134_node)).cast_ptr<_1c0c75c1a_Conditional>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1c37eb98b:;
			{
				_1c0ce8d7b_checkIter(_self_, (*(_198134_node)).cast_ptr<_1c0c733ee_Iter>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1c37eba02:;
			{
				_1c0ce9b07_checkCont(_self_, (*(_198134_node)).cast_ptr<_1c0c74dd4_ContSt>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1c37eba68:;
			{
				_1c0ce9db0_checkLabel(_self_, (*(_198134_node)).cast_ptr<_1c0c6c01e_LabelSt>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1c37ebace:;
			{
				_1c0cea168_pushGoto(_self_, (*(_198134_node)).cast_ptr<_1c0c6c3e8_GotoSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1c37ebb45:;
			{
				_1c0cebd6d_checkAssignSt(_self_, (*(_198134_node)).cast_ptr<_1c0c6d3d8_AssignSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1c37ebbab:;
			{
				_1c0cee0d4_checkMatch(_self_, (*(_198134_node)).cast_ptr<_1c0c77227_MatchCase>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1c37ebc22:;
			{
				_1c0cee38c_checkFall(_self_, (*(_198134_node)).cast_ptr<_1c0c6c6e5_FallSt>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1c37ebc88:;
			{
				_1c0ceecc7_checkBreak(_self_, (*(_198134_node)).cast_ptr<_1c0c74a0a_BreakSt>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1c37ebcee:;
			{
				_1c0d00080_checkRet(_self_, (*(_198134_node)).cast_ptr<_1c0c72b7e_RetSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1c37ebd76:;
			{
				_1c0d00338_checkUseExpr(_self_, (*(_198134_node)).cast_ptr<_1c0c64643_UseExpr>(&__jule_any_type62));
			}
		}
		else {
			_case_begin_1c37eb3b4:;
			{
				jule::outln(jule::Str::lit("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1c37eb35e:;
	};
}



inline void _1c0d007de_checkResult(jule::Ptr<_1c0cdeaec_scopeChecker> _self_) {
	_1c0c6e2eb_Stmt _201913_stmt = (*((*(_self_))._field_tree))._field_Stmts[((*(*_self_.alloc)._field_tree.alloc)._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _201913_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1c3805b93:;
			{
				jule::Ptr<_1c0c64643_UseExpr> _202217_ue = _201913_stmt._field_Data.unsafe_cast_ptr<_1c0c64643_UseExpr>();;
				jule::Ptr<_1c0da69e9_Data> _202317_d = _1c0dc6981_evalExpr(_1c0d36160_eval((*_self_.alloc)._field_s, jule::Trait<_1c0e079d4_Lookup>(_self_, 0)), (*(_202217_ue))._field_Expr);;
				if ((_202317_d == nullptr)) {
					return;;
				};
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_202317_d, &__jule_any_type23)}));
				jule::Ptr<_1c0d9e11d_retTypeChecker> _202817_rtc = jule::new_ptr<_1c0d9e11d_retTypeChecker>(_1c0d9e11d_retTypeChecker{._field_sc=_self_, ._field_types=_1c0c99898_Types((*_self_.alloc)._field_result.ptr()), ._field_errorToken=(*((*_202217_ue.alloc)._field_Expr))._field_Token, });;
				_1c0da00ca_check(_202817_rtc.ptr(), &((*_202217_ue.alloc)._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1c3806765:;
			{
				jule::Ptr<_1c0c63c6e_Expr> _203517_expr = _201913_stmt._field_Data.unsafe_cast_ptr<_1c0c63c6e_Expr>();;
				jule::Ptr<_1c0da69e9_Data> _203617_d = _1c0dc6981_evalExpr(_1c0d36160_eval((*_self_.alloc)._field_s, jule::Trait<_1c0e079d4_Lookup>(_self_, 0)), _203517_expr);;
				if ((_203617_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ (*(_203617_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1c380c172:;
						{
							jule::Ptr<_1c0c91230_BuiltinErrorCallExprModel> _204221_m = (*(_203617_d))._field_Model.unsafe_cast_ptr<_1c0c91230_BuiltinErrorCallExprModel>();;
							_1c0ce631d_processErrorCall(_self_, &(_204221_m), (*(_203517_expr))._field_Token);
							(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_203617_d, &__jule_any_type23)}));
						}
					}
					else {
						_case_begin_1c380c34d:;
						{
							return;;
						}
					}
					_match_end_1c380c2e8:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type56 || _match_expr.type == &__jule_any_type60 || _match_expr.type == &__jule_any_type54 || _match_expr.type == &__jule_any_type61) {
			_case_begin_1c3805e3a:;
			{
				_1c0d005e1_checkNode(_self_, &(_201913_stmt._field_Data));
			}
		}
		else {
			_case_begin_1c3805dc4:;
			{
				_1c0d005e1_checkNode(_self_, &(_201913_stmt._field_Data));
				return;;
			}
		}
		_match_end_1c3805d6e:;
	};
	(*_self_.alloc)._field_result=nullptr;
}



inline void _1c0d009dc_checkTree(jule::Ptr<_1c0cdeaec_scopeChecker> _self_) {
	(*(_self_))._field_i=0LL;
	jule::I64 _206413_n = (*((*_self_.alloc)._field_tree))._field_Stmts.len();;
	if (((*_self_.alloc)._field_result != nullptr)) {
		(_206413_n)--;
	};
	for (; ((*_self_.alloc)._field_i < _206413_n); ((*_self_.alloc)._field_i)++) {
		{
			_1c0c6e2eb_Stmt _207217_stmt = (*(*_self_.alloc)._field_tree.alloc)._field_Stmts[(*_self_.alloc)._field_i];;
			_1c0d005e1_checkNode(_self_, &(_207217_stmt._field_Data));
			if (_1c0ce26c1_stopped(_self_)) {
				return;;
			};
		}
	_iter_next_1c3811451:;
	}
	_iter_end_1c3811451:;;
	if ((((*_self_.alloc)._field_result != nullptr) && ((*(*_self_.alloc)._field_tree.alloc)._field_Stmts.len() != 0LL))) {
		_1c0d007de_checkResult(_self_);
	};
}



inline void _1c0d00d50_checkGoto(_1c0cdeaec_scopeChecker* _self_, jule::Ptr<_1c0cddb0c_scopeGoto>* _208333_gt, jule::Ptr<_1c0cdd579_scopeLabel>* _208354_label) {
	jule::Ptr<_1c0cdeaec_scopeChecker> _208413_gtsc = (*((*(_208333_gt))))._field_scope;;
	while ((((*(_208413_gtsc))._field_childIndex - 1LL) > (*((*((*(_208354_label))))._field_scope))._field_childIndex)) {
		{
			_208413_gtsc=(*_208413_gtsc.alloc)._field_parent;
		}
	_iter_next_1c38147ea:;
	}
	_iter_end_1c38147ea:;;
	jule::I64 _208913_n = 0LL;;
	if (((*_208413_gtsc.alloc)._field_scope == (*(*((*(_208354_label))))._field_scope.alloc)._field_scope)) {
		if (((*((*(_208333_gt))))._field_pos > (*((*(_208354_label))))._field_pos)) {
			return;;
		};
		_208913_n=(*((*(_208333_gt))))._field_pos;
	};
	jule::I64 _210213_i = ((*((*(_208354_label))))._field_pos - 1LL);;
	if ((_208913_n == 0LL)) {
		{
			auto expr = &((*((*(*((*(_208354_label))))._field_scope.alloc)._field_scope))._field_Stmts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c381826b:;
			if (it != expr_end) {
				jule::I64 _210517_j = it - expr->begin();
				jule::Any _210520_stmt = *it;
				{
					if (_1c0cd5395_stmtIsGotoScope(&(_210520_stmt), &((*_208413_gtsc.alloc)._field_scope))) {
						_208913_n=_210517_j;
						goto _iter_end_1c381826b;
					};
				}
				_iter_next_1c381826b:;
				++it;
				_210517_j++;
				goto _iter_begin_1c381826b;
			}
			_iter_end_1c381826b:;
		};
	};
	for (; (_210213_i >= _208913_n); (_210213_i)--) {
		{
			jule::Any _211517_stmt = (*(*(*((*(_208354_label))))._field_scope.alloc)._field_scope.alloc)._field_Stmts[_210213_i];;
			if (_1c0cd7155_stmtIsDef(&(_211517_stmt))) {
				_1c0d2dbb3_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_208333_gt))))._field_gt))._field_Token, jule::Str::lit("goto @ jumps over declaration(s)", 32), jule::Slice<jule::Any>::make({jule::Any((*((*(*((*(_208333_gt))))._field_gt.alloc)._field_Label))._field_Kind, &__jule_any_type4)}));
				return;;
			};
		}
	_iter_next_1c38177a9:;
	}
	_iter_end_1c38177a9:;;
}



inline void _1c0d0104d_checkGotos(_1c0cdeaec_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c38189db:;
		if (it != expr_end) {
			jule::Ptr<_1c0cddb0c_scopeGoto> _212421_gt = *it;
			{
				jule::Ptr<_1c0cdd579_scopeLabel> _212517_label = _1c0ce40eb_findLabelAll(_self_, &((*((*((*(_212421_gt))._field_gt))._field_Label))._field_Kind));;
				if ((_212517_label == nullptr)) {
					_1c0d2dbb3_pushErr((*(_self_))._field_s.ptr(), (*(*_212421_gt.alloc)._field_gt.alloc)._field_Token, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*(*(*_212421_gt.alloc)._field_gt.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
					goto _iter_next_1c38189db;
				};
				(*((*_212421_gt.alloc)._field_st))._field_Label=(*(_212517_label))._field_label;
				(*(_212517_label))._field_used=true;
				_1c0d00d50_checkGoto(_self_, &(_212421_gt), &(_212517_label));
			}
			_iter_next_1c38189db:;
			++it;
			goto _iter_begin_1c38189db;
		}
		_iter_end_1c38189db:;
	};
}



inline void _1c0d0124b_checkLabels(_1c0cdeaec_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c381eb79:;
		if (it != expr_end) {
			jule::Ptr<_1c0cdd579_scopeLabel> _213716_l = *it;
			{
				if ((!((*(_213716_l))._field_used))) {
					_1c0d2dbb3_pushErr((*(_self_))._field_s.ptr(), (*_213716_l.alloc)._field_token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*((*_213716_l.alloc)._field_label))._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1c381eb79:;
			++it;
			goto _iter_begin_1c381eb79;
		}
		_iter_end_1c381eb79:;
	};
}



inline void _1c0d01449_checkVars(_1c0cdeaec_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c38217c4:;
		if (it != expr_end) {
			jule::Ptr<_1c0d4dde2_Var> _214516_v = *it;
			{
				if (((((!((*(_214516_v))._field_Used)) && (!((*_214516_v.alloc)._field_Constant))) && (!(_1c0c4bd67_IsIgnoreIdent((*_214516_v.alloc)._field_Ident)))) && (!(_1c0c4c131_IsAnonIdent((*_214516_v.alloc)._field_Ident))))) {
					_1c0d2dbb3_pushErr((*(_self_))._field_s.ptr(), (*_214516_v.alloc)._field_Token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*_214516_v.alloc)._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1c38217c4:;
			++it;
			goto _iter_begin_1c38217c4;
		}
		_iter_end_1c38217c4:;
	};
}



inline void _1c0d01647_checkAliases(_1c0cdeaec_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3823e7a:;
		if (it != expr_end) {
			jule::Ptr<_1c0dd7101_TypeAlias> _215316_a = *it;
			{
				if ((((!((*(_215316_a))._field_Used)) && (!(_1c0c4bd67_IsIgnoreIdent((*_215316_a.alloc)._field_Ident)))) && (!(_1c0c4c131_IsAnonIdent((*_215316_a.alloc)._field_Ident))))) {
					_1c0d2dbb3_pushErr((*(_self_))._field_s.ptr(), (*_215316_a.alloc)._field_Token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*_215316_a.alloc)._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1c3823e7a:;
			++it;
			goto _iter_begin_1c3823e7a;
		}
		_iter_end_1c3823e7a:;
	};
}



inline void _1c0d019aa_check(jule::Ptr<_1c0cdeaec_scopeChecker> _self_, jule::Ptr<_1c0c6e95b_ScopeTree>* _216130_tree, jule::Ptr<_1c0cd763e_Scope>* _216153_s) {
	(*((*(_216153_s))))._field_Deferred=(*((*(_216130_tree))))._field_Deferred;
	(*((*(_216153_s))))._field_Unsafety=(*((*(_216130_tree))))._field_Unsafety;
	jule::I64 _21659_errors = (*((*(_self_))._field_s))._field_errors.len();;
	(*_self_.alloc)._field_tree=(*(_216130_tree));
	(*_self_.alloc)._field_scope=(*(_216153_s));
	_1c0d009dc_checkTree(_self_);
	if ((_21659_errors == (*(*_self_.alloc)._field_s.alloc)._field_errors.len())) {
		_1c0d01449_checkVars(_self_);
		_1c0d01647_checkAliases(_self_);
		if (_1c0ce223c_isRoot(_self_)) {
			_1c0d0104d_checkGotos(_self_);
			_1c0d0124b_checkLabels(_self_);
		};
	};
}



inline jule::Ptr<_1c0cdeaec_scopeChecker> _1c0d01c41_newChildChecker(jule::Ptr<_1c0cdeaec_scopeChecker> _self_) {
	jule::Ptr<_1c0cdeaec_scopeChecker> _218513_base = _1c0cd441b_newScopeCheckerBase(&((*(_self_))._field_s), nullptr);;
	(*(_218513_base))._field_parent=_self_;
	(*_218513_base.alloc)._field_labels=(*_self_.alloc)._field_labels;
	(*_218513_base.alloc)._field_gotos=(*_self_.alloc)._field_gotos;
	(*_218513_base.alloc)._field_childIndex=((*_self_.alloc)._field_childIndex + 1LL);
	return _218513_base;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cdeaec_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "captured:" << _Src._field_captured << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1c0d036e3_checkCdef(_1c0d032d6_directiveChecker* _self_, jule::Ptr<_1c0c5dd57_Directive>* _1629_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1c4597d63:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1c0c95795_Fn>()))._field_Binded) {
					goto _match_end_1c45980a5;
				};
				goto _case_begin_1c459810a;
			}
		}
		else {
			_case_begin_1c459810a:;
			{
				_1c0d2dbb3_pushErr((*(_self_))._field_s.ptr(), (*((*(_1629_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_1629_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1c45980a5:;
	};
	if (((*((*(_1629_d))))._field_Args.len() > 0LL)) {
		_1c0d2dbb3_pushErr((*(_self_))._field_s.ptr(), (*((*(_1629_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1c0d0399b_checkTypedef(_1c0d032d6_directiveChecker* _self_, jule::Ptr<_1c0c5dd57_Directive>* _3232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1c459acbc:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1c0c807c4_Struct>()))._field_Binded) {
					goto _match_end_1c459b00e;
				};
				goto _case_begin_1c459b064;
			}
		}
		else {
			_case_begin_1c459b064:;
			{
				_1c0d2dbb3_pushErr((*(_self_))._field_s.ptr(), (*((*(_3232_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_3232_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1c459b00e:;
	};
	if (((*((*(_3232_d))))._field_Args.len() > 0LL)) {
		_1c0d2dbb3_pushErr((*(_self_))._field_s.ptr(), (*((*(_3232_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1c0d03c54_checkNamespace(_1c0d032d6_directiveChecker* _self_, jule::Ptr<_1c0c5dd57_Directive>* _4838_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1c459dc26:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1c0c807c4_Struct>()))._field_Binded))) {
					_1c0d2dbb3_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1c459e034:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1c0c95795_Fn>()))._field_Binded))) {
					_1c0d2dbb3_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c459e09a:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1c0d4dde2_Var>()))._field_Binded))) {
					_1c0d2dbb3_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else {
			_case_begin_1c459debd:;
			{
				_1c0d2dbb3_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1c459de68:;
	};
	if (((*((*(_4838_d))))._field_Args.len() == 0LL)) {
		_1c0d2dbb3_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_4838_d))))._field_Args.len() > 1LL)) {
		_1c0d2dbb3_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Args[1LL], jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1c0c49480_Token> _739_arg = (*((*(_4838_d))))._field_Args[0LL];;
	if (((*(_739_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1c0d2dbb3_pushErr((*(_self_))._field_s.ptr(), _739_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_739_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1c0d2dbb3_pushErr((*(_self_))._field_s, _739_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_4838_d))))._field_Args[0LL]))._field_Kind=(*_739_arg.alloc)._field_Kind.slice(1LL, ((*_739_arg.alloc)._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1c45a9a12:;
			{
				if ((_1c0dd0391_findDirective(&((*((*(_self_))._field_d))), jule::Str::lit("typedef", 7)) == nullptr)) {
					jule::Ptr<_1c0c5dd57_Directive> _9021_typedef = jule::new_ptr<_1c0c5dd57_Directive>(_1c0c5dd57_Directive{._field_Tag=(*((*(_4838_d))))._field_Tag, });;
					(*((*(_9021_typedef))._field_Tag))._field_Kind=jule::Str::lit("typedef", 7);
					(*(*(_self_))._field_d.alloc)=jule::append((*(*(_self_))._field_d.alloc),jule::Slice<jule::Ptr<_1c0c5dd57_Directive>>::make({_9021_typedef}));
				};
			}
		}
		_match_end_1c45a999b:;
	};
}



inline void _1c0d0400c_checkDeprecated(_1c0d032d6_directiveChecker* _self_, jule::Ptr<_1c0c5dd57_Directive>* _9939_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1c45abb9b:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1c0c807c4_Struct>()))._field_Binded) {
					_1c0d2dbb3_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1c45abe43:;
			{
				jule::Ptr<_1c0c95795_Fn> _10617_f = (*(_self_))._field_o.unsafe_cast_ptr<_1c0c95795_Fn>();;
				if ((((*(_10617_f))._field_Binded || _1c0c96235_IsEntryPoint(_10617_f)) || _1c0c964bb_IsInit(_10617_f))) {
					_1c0d2dbb3_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c45abea9:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1c0d4dde2_Var>()))._field_Binded) {
					_1c0d2dbb3_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else {
			_case_begin_1c45abdcc:;
			{
				_1c0d2dbb3_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1c45abd77:;
	};
	if (((*((*(_9939_d))))._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*((*(_9939_d))))._field_Args.len() > 1LL)) {
		_1c0d2dbb3_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Args[1LL], jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1c0c49480_Token> _1259_arg = (*((*(_9939_d))))._field_Args[0LL];;
	if (((*(_1259_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1c0d2dbb3_pushErr((*(_self_))._field_s, _1259_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_1259_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1c0d2dbb3_pushErr((*(_self_))._field_s, _1259_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_9939_d))))._field_Args[0LL]))._field_Kind=(*_1259_arg.alloc)._field_Kind.slice(1LL, ((*_1259_arg.alloc)._field_Kind.len() - 1LL));
}



inline void _1c0d042b5_checkTest(_1c0d032d6_directiveChecker* _self_, jule::Ptr<_1c0c5dd57_Directive>* _13929_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1c45b3532:;
			{
				jule::Ptr<_1c0c95795_Fn> _14213_f = (*(_self_))._field_o.unsafe_cast_ptr<_1c0c95795_Fn>();;
				if ((((!((*(_14213_f))._field_Binded)) && (!(_1c0c964bb_IsInit(_14213_f)))) && (!(_1c0c96235_IsEntryPoint(_14213_f))))) {
					goto _match_end_1c45b7da5;
				};
				if (_1c0c95e9e_IsMethod(_14213_f)) {
					_1c0d2dbb3_pushErr((*(_self_))._field_s.ptr(), (*_14213_f.alloc)._field_Token, jule::Str::lit("you cannot declare test methods", 31), jule::Slice<jule::Any>());
					goto _match_end_1c45b7da5;
				};
				goto _case_begin_1c45b802b;
			}
		}
		else {
			_case_begin_1c45b802b:;
			{
				_1c0d2dbb3_pushErr((*(_self_))._field_s.ptr(), (*((*(_13929_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_13929_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1c45b7da5:;
	};
	if (((*((*(_13929_d))))._field_Args.len() > 0LL)) {
		_1c0d2dbb3_pushErr((*(_self_))._field_s.ptr(), (*((*(_13929_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1c0d0456d_checkDirective(_1c0d032d6_directiveChecker* _self_, jule::Ptr<_1c0c5dd57_Directive>* _16038_d) {
	{
		auto &_match_expr{ (*((*((*(_16038_d))))._field_Tag))._field_Kind };
		
		if (_match_expr == jule::Str::lit("cdef", 4)) {
			_case_begin_1c45bcbe0:;
			{
				_1c0d036e3_checkCdef(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("typedef", 7)) {
			_case_begin_1c45bcc56:;
			{
				_1c0d0399b_checkTypedef(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("namespace", 9)) {
			_case_begin_1c45bccbc:;
			{
				_1c0d03c54_checkNamespace(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("deprecated", 10)) {
			_case_begin_1c45bcd33:;
			{
				_1c0d0400c_checkDeprecated(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("test", 4)) {
			_case_begin_1c45bcd99:;
			{
				_1c0d042b5_checkTest(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("build", 5) || _match_expr == jule::Str::lit("pass", 4)) {
			_case_begin_1c45bce10:;
			{
				_1c0d2dbb3_pushErr((*(_self_))._field_s.ptr(), (*((*(_16038_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_16038_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		else {
			_case_begin_1c45bc618:;
			{
				_1c0d2dbb3_pushErr((*(_self_))._field_s.ptr(), (*((*(_16038_d))))._field_Tag, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_16038_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1c45bcb24:;
	};
}



inline void _1c0d0476b_check(_1c0d032d6_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c45bde88:;
		if (it != expr_end) {
			jule::Ptr<_1c0c5dd57_Directive> _18121_d = *it;
			{
				_1c0d0456d_checkDirective(_self_, &(_18121_d));
			}
			_iter_next_1c45bde88:;
			++it;
			goto _iter_begin_1c45bde88;
		}
		_iter_end_1c45bde88:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c0d032d6_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c0d09782_ImportInfo> _1c0d09c6b_SelectPackage(_1c0d09782_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1c0d09782_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1c0d4dde2_Var> _1c0d0a167_FindVar(_1c0d09782_ImportInfo* _self_, jule::Str _18926_ident, jule::Bool ) {
	if ((!(_1c0d0bcc3_isLookupable(_self_, &(_18926_ident))))) {
		return nullptr;;
	};
	return _1c0d06c68_findVarInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_18926_ident), false);;
}



inline jule::Ptr<_1c0dd7101_TypeAlias> _1c0d0a563_FindTypeAlias(_1c0d09782_ImportInfo* _self_, jule::Str _20132_ident, jule::Bool ) {
	if ((!(_1c0d0bcc3_isLookupable(_self_, &(_20132_ident))))) {
		return nullptr;;
	};
	return _1c0d071db_findTypeAliasInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_20132_ident), false);;
}



inline jule::Ptr<_1c0c807c4_Struct> _1c0d0a95e_FindStruct(_1c0d09782_ImportInfo* _self_, jule::Str _21329_ident, jule::Bool ) {
	if ((!(_1c0d0bcc3_isLookupable(_self_, &(_21329_ident))))) {
		return nullptr;;
	};
	return _1c0d0761a_findStructInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_21329_ident), false);;
}



inline jule::Ptr<_1c0c95795_Fn> _1c0d0ad5a_FindFn(_1c0d09782_ImportInfo* _self_, jule::Str _22525_ident, jule::Bool ) {
	if ((!(_1c0d0bcc3_isLookupable(_self_, &(_22525_ident))))) {
		return nullptr;;
	};
	return _1c0d07ac1_findFnInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_22525_ident), false);;
}



inline jule::Ptr<_1c0ca8a72_Trait> _1c0d0b19b_FindTrait(_1c0d09782_ImportInfo* _self_, jule::Str _23628_ident) {
	if ((!(_1c0d0bcc3_isLookupable(_self_, &(_23628_ident))))) {
		return nullptr;;
	};
	return _1c0d07e12_findTraitInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_23628_ident));;
}



inline jule::Ptr<_1c0cab27d_Enum> _1c0d0b4dc_FindEnum(_1c0d09782_ImportInfo* _self_, jule::Str _24727_ident) {
	if ((!(_1c0d0bcc3_isLookupable(_self_, &(_24727_ident))))) {
		return nullptr;;
	};
	return _1c0d08286_findEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_24727_ident));;
}



inline jule::Ptr<_1c0cac988_TypeEnum> _1c0d0b82d_FindTypeEnum(_1c0d09782_ImportInfo* _self_, jule::Str _25831_ident) {
	if ((!(_1c0d0bcc3_isLookupable(_self_, &(_25831_ident))))) {
		return nullptr;;
	};
	return _1c0d0860a_findTypeEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_25831_ident));;
}



inline jule::Bool _1c0d0bcc3_isLookupable(_1c0d09782_ImportInfo* _self_, jule::Str* _26728_ident) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	if ((!((*(_self_))._field_ImportAll))) {
		if ((((*(_self_))._field_Alias.len() != 0LL) || _1c0d0c114_existIdent(_self_, jule::Str::lit("self", 4)))) {
			return true;;
		};
		if (((*(_self_))._field_Selected.len() > 0LL)) {
			if ((!(_1c0d0c114_existIdent(_self_, (*(_26728_ident)))))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _1c0d0c114_existIdent(_1c0d09782_ImportInfo* _self_, jule::Str _28725_ident) {
	{
		auto expr = &((*(_self_))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c45d6bc6:;
		if (it != expr_end) {
			jule::Ptr<_1c0c49480_Token> *_28816_sident = it;
			{
				if (((*((*(_28816_sident))))._field_Kind == _28725_ident)) {
					return true;;
				};
			}
			_iter_next_1c45d6bc6:;
			++it;
			goto _iter_begin_1c45d6bc6;
		}
		_iter_end_1c45d6bc6:;
	};
	return false;;
}



inline jule::Bool _1c0d0c39a_isAccessibleViaSelection(_1c0d09782_ImportInfo* _self_) {
	return (((*(_self_))._field_ImportAll || ((*(_self_))._field_Selected.len() == 0LL)) || _1c0d0c114_existIdent(_self_, jule::Str::lit("self", 4)));;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0d09782_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c0d09782_ImportInfo> _1c0d0cb4d_SelectPackage(_1c0d0c6a8_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1c0d09782_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1c0d4dde2_Var> _1c0d0d049_FindVar(_1c0d0c6a8_Package* _self_, jule::Str _31426_ident, jule::Bool _31438_binded) {
	return _1c0d06c68_findVarInPackage(&((*(_self_))._field_Files), &(_31426_ident), _31438_binded);;
}



inline jule::Ptr<_1c0dd7101_TypeAlias> _1c0d0d445_FindTypeAlias(_1c0d0c6a8_Package* _self_, jule::Str _32032_ident, jule::Bool _32044_binded) {
	return _1c0d071db_findTypeAliasInPackage(&((*(_self_))._field_Files), &(_32032_ident), _32044_binded);;
}



inline jule::Ptr<_1c0c807c4_Struct> _1c0d0d841_FindStruct(_1c0d0c6a8_Package* _self_, jule::Str _32629_ident, jule::Bool _32641_binded) {
	return _1c0d0761a_findStructInPackage(&((*(_self_))._field_Files), &(_32629_ident), _32641_binded);;
}



inline jule::Ptr<_1c0c95795_Fn> _1c0d0dc3c_FindFn(_1c0d0c6a8_Package* _self_, jule::Str _33225_ident, jule::Bool _33237_binded) {
	return _1c0d07ac1_findFnInPackage(&((*(_self_))._field_Files), &(_33225_ident), _33237_binded);;
}



inline jule::Ptr<_1c0ca8a72_Trait> _1c0d0e07d_FindTrait(_1c0d0c6a8_Package* _self_, jule::Str _33828_ident) {
	return _1c0d07e12_findTraitInPackage(&((*(_self_))._field_Files), &(_33828_ident));;
}



inline jule::Ptr<_1c0cab27d_Enum> _1c0d0e3be_FindEnum(_1c0d0c6a8_Package* _self_, jule::Str _34427_ident) {
	return _1c0d08286_findEnumInPackage(&((*(_self_))._field_Files), &(_34427_ident));;
}



inline jule::Ptr<_1c0cac988_TypeEnum> _1c0d0e710_FindTypeEnum(_1c0d0c6a8_Package* _self_, jule::Str _35031_ident) {
	return _1c0d0860a_findTypeEnumInPackage(&((*(_self_))._field_Files), &(_35031_ident));;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0d0c6a8_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c0cc0418_comptimeTypeInfo> _1c0d2a8b3_pushComptimeTypeInfo(_1c0d2a473_commonSemaMeta* _self_, jule::Ptr<_1c0dd7de3_TypeKind>* _21444_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4618675:;
		if (it != expr_end) {
			jule::Ptr<_1c0cc0418_comptimeTypeInfo> _21521_t2 = *it;
			{
				if ((((*((*(_21521_t2))._field_base))._field_BindIdent == (*((*(_21444_t))))._field_BindIdent) && _1c0dd85ec_Equal((*_21521_t2.alloc)._field_base, (*(_21444_t))))) {
					return _21521_t2;;
				};
			}
			_iter_next_1c4618675:;
			++it;
			goto _iter_begin_1c4618675;
		}
		_iter_end_1c4618675:;
	};
	jule::Ptr<_1c0cc0418_comptimeTypeInfo> _22013_t1 = jule::new_ptr<_1c0cc0418_comptimeTypeInfo>(_1c0cc0418_comptimeTypeInfo{._field_base=(*(_21444_t))});;
	{ jule::Slice<jule::Ptr<_1c0cc0418_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_22013_t1); };
	return _22013_t1;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0d2a473_commonSemaMeta _Src) {
	_Stream << "commonSemaMeta{";
	_Stream << "comptimeTypeInfos:" << _Src._field_comptimeTypeInfos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c0d09782_ImportInfo> _1c0d2b51d_SelectPackage(_1c0d2b078_Sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1c0d09782_ImportInfo>> _24332_selector) {
	return _1c0da1b6a_SelectPackage((*(_self_))._field_file.ptr(), _24332_selector);;
}



inline jule::Ptr<_1c0d4dde2_Var> _1c0d2b919_FindVar(_1c0d2b078_Sema* _self_, jule::Str _25326_ident, jule::Bool _25338_binded) {
	jule::Ptr<_1c0d4dde2_Var> _25513_v = _1c0d06c68_findVarInPackage(&((*(_self_))._field_files), &(_25326_ident), _25338_binded);;
	if ((_25513_v != nullptr)) {
		return _25513_v;;
	};
	if ((!(_1c0d28141_IsPub(_25326_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c461c635:;
		if (it != expr_end) {
			jule::Ptr<_1c0d09782_ImportInfo> _26621_imp = *it;
			{
				if ((!(_1c0d29043_impIsLookupable(&(_26621_imp), &(_25326_ident))))) {
					goto _iter_next_1c461c635;
				};
				_25513_v=_1c0d0a167_FindVar(_26621_imp.ptr(), _25326_ident, _25338_binded);
				if (((_25513_v != nullptr) && _1c0d2e422_isAccessibleDefine(_self_, (*_25513_v.alloc)._field_Public, (*_25513_v.alloc)._field_Token))) {
					return _25513_v;;
				};
			}
			_iter_next_1c461c635:;
			++it;
			goto _iter_begin_1c461c635;
		}
		_iter_end_1c461c635:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0dd7101_TypeAlias> _1c0d2bd15_FindTypeAlias(_1c0d2b078_Sema* _self_, jule::Str _28532_ident, jule::Bool _28544_binded) {
	jule::Ptr<_1c0dd7101_TypeAlias> _28713_ta = _1c0d071db_findTypeAliasInPackage(&((*(_self_))._field_files), &(_28532_ident), _28544_binded);;
	if ((_28713_ta != nullptr)) {
		return _28713_ta;;
	};
	if ((!(_1c0d28141_IsPub(_28532_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4620539:;
		if (it != expr_end) {
			jule::Ptr<_1c0d09782_ImportInfo> _29821_imp = *it;
			{
				if ((!(_1c0d29043_impIsLookupable(&(_29821_imp), &(_28532_ident))))) {
					goto _iter_next_1c4620539;
				};
				_28713_ta=_1c0d0a563_FindTypeAlias(_29821_imp.ptr(), _28532_ident, _28544_binded);
				if (((_28713_ta != nullptr) && _1c0d2e422_isAccessibleDefine(_self_, (*_28713_ta.alloc)._field_Public, (*_28713_ta.alloc)._field_Token))) {
					return _28713_ta;;
				};
			}
			_iter_next_1c4620539:;
			++it;
			goto _iter_begin_1c4620539;
		}
		_iter_end_1c4620539:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0c807c4_Struct> _1c0d2c211_FindStruct(_1c0d2b078_Sema* _self_, jule::Str _31729_ident, jule::Bool _31741_binded) {
	jule::Ptr<_1c0c807c4_Struct> _31913_s = _1c0d0761a_findStructInPackage(&((*(_self_))._field_files), &(_31729_ident), _31741_binded);;
	if ((_31913_s != nullptr)) {
		return _31913_s;;
	};
	if ((!(_1c0d28141_IsPub(_31729_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c462343d:;
		if (it != expr_end) {
			jule::Ptr<_1c0d09782_ImportInfo> _33021_imp = *it;
			{
				if ((!(_1c0d29043_impIsLookupable(&(_33021_imp), &(_31729_ident))))) {
					goto _iter_next_1c462343d;
				};
				_31913_s=_1c0d0a95e_FindStruct(_33021_imp.ptr(), _31729_ident, _31741_binded);
				if (((_31913_s != nullptr) && _1c0d2e422_isAccessibleDefine(_self_, (*_31913_s.alloc)._field_Public, (*_31913_s.alloc)._field_Token))) {
					return _31913_s;;
				};
			}
			_iter_next_1c462343d:;
			++it;
			goto _iter_begin_1c462343d;
		}
		_iter_end_1c462343d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0c95795_Fn> _1c0d2c60c_FindFn(_1c0d2b078_Sema* _self_, jule::Str _34825_ident, jule::Bool _34837_binded) {
	jule::Ptr<_1c0c95795_Fn> _35013_f = _1c0d07ac1_findFnInPackage(&((*(_self_))._field_files), &(_34825_ident), _34837_binded);;
	if ((_35013_f != nullptr)) {
		return _35013_f;;
	};
	if ((!(_1c0d28141_IsPub(_34825_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4626342:;
		if (it != expr_end) {
			jule::Ptr<_1c0d09782_ImportInfo> _36121_imp = *it;
			{
				if ((!(_1c0d29043_impIsLookupable(&(_36121_imp), &(_34825_ident))))) {
					goto _iter_next_1c4626342;
				};
				_35013_f=_1c0d0ad5a_FindFn(_36121_imp.ptr(), _34825_ident, _34837_binded);
				if (((_35013_f != nullptr) && _1c0d2e422_isAccessibleDefine(_self_, (*_35013_f.alloc)._field_Public, (*_35013_f.alloc)._field_Token))) {
					return _35013_f;;
				};
			}
			_iter_next_1c4626342:;
			++it;
			goto _iter_begin_1c4626342;
		}
		_iter_end_1c4626342:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0ca8a72_Trait> _1c0d2c94d_FindTrait(_1c0d2b078_Sema* _self_, jule::Str _38028_ident) {
	jule::Ptr<_1c0ca8a72_Trait> _38213_t = _1c0d07e12_findTraitInPackage(&((*(_self_))._field_files), &(_38028_ident));;
	if ((_38213_t != nullptr)) {
		return _38213_t;;
	};
	if ((!(_1c0d28141_IsPub(_38028_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4629004:;
		if (it != expr_end) {
			jule::Ptr<_1c0d09782_ImportInfo> _39321_imp = *it;
			{
				if ((!(_1c0d29043_impIsLookupable(&(_39321_imp), &(_38028_ident))))) {
					goto _iter_next_1c4629004;
				};
				_38213_t=_1c0d0b19b_FindTrait(_39321_imp.ptr(), _38028_ident);
				if (((_38213_t != nullptr) && _1c0d2e422_isAccessibleDefine(_self_, (*_38213_t.alloc)._field_Public, (*_38213_t.alloc)._field_Token))) {
					return _38213_t;;
				};
			}
			_iter_next_1c4629004:;
			++it;
			goto _iter_begin_1c4629004;
		}
		_iter_end_1c4629004:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0cab27d_Enum> _1c0d2cc8e_FindEnum(_1c0d2b078_Sema* _self_, jule::Str _41227_ident) {
	jule::Ptr<_1c0cab27d_Enum> _41413_e = _1c0d08286_findEnumInPackage(&((*(_self_))._field_files), &(_41227_ident));;
	if ((_41413_e != nullptr)) {
		return _41413_e;;
	};
	if ((!(_1c0d28141_IsPub(_41227_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c462bbb6:;
		if (it != expr_end) {
			jule::Ptr<_1c0d09782_ImportInfo> _42521_imp = *it;
			{
				if ((!(_1c0d29043_impIsLookupable(&(_42521_imp), &(_41227_ident))))) {
					goto _iter_next_1c462bbb6;
				};
				_41413_e=_1c0d0b4dc_FindEnum(_42521_imp.ptr(), _41227_ident);
				if (((_41413_e != nullptr) && _1c0d2e422_isAccessibleDefine(_self_, (*_41413_e.alloc)._field_Public, (*_41413_e.alloc)._field_Token))) {
					return _41413_e;;
				};
			}
			_iter_next_1c462bbb6:;
			++it;
			goto _iter_begin_1c462bbb6;
		}
		_iter_end_1c462bbb6:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0cac988_TypeEnum> _1c0d2d0d0_FindTypeEnum(_1c0d2b078_Sema* _self_, jule::Str _44431_ident) {
	jule::Ptr<_1c0cac988_TypeEnum> _44613_e = _1c0d0860a_findTypeEnumInPackage(&((*(_self_))._field_files), &(_44431_ident));;
	if ((_44613_e != nullptr)) {
		return _44613_e;;
	};
	if ((!(_1c0d28141_IsPub(_44431_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c462e878:;
		if (it != expr_end) {
			jule::Ptr<_1c0d09782_ImportInfo> _45721_imp = *it;
			{
				if ((!(_1c0d29043_impIsLookupable(&(_45721_imp), &(_44431_ident))))) {
					goto _iter_next_1c462e878;
				};
				_44613_e=_1c0d0b82d_FindTypeEnum(_45721_imp.ptr(), _44431_ident);
				if (((_44613_e != nullptr) && _1c0d2e422_isAccessibleDefine(_self_, (*_44613_e.alloc)._field_Public, (*_44613_e.alloc)._field_Token))) {
					return _44613_e;;
				};
			}
			_iter_next_1c462e878:;
			++it;
			goto _iter_begin_1c462e878;
		}
		_iter_end_1c462e878:;
	};
	return nullptr;;
}



inline jule::Bool _1c0d2d4dc_isFlag(_1c0d2b078_Sema* _self_, jule::I64 _47321_flags) {
	return (((*(_self_))._field_flags & _47321_flags) == _47321_flags);;
}



inline void _1c0d2d795_setCurrentFile(_1c0d2b078_Sema* _self_, jule::Ptr<_1c0da1681_SymbolTable> _47537_f) {
	(*(_self_))._field_file=_47537_f;
}



inline void _1c0d2dbb3_pushErr(_1c0d2b078_Sema* _self_, jule::Ptr<_1c0c49480_Token> _47726_token, jule::Str _47741_fmt, jule::Slice<jule::Any> _47754_args) {
	{ jule::Slice<_21b8c54de_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1c0d28bbe_compilerErr(&(_47726_token), true, _47741_fmt, _47754_args)); };
}



inline void _1c0d2e026_pushSuggestion(_1c0d2b078_Sema* _self_, jule::Str _48233_fmt, jule::Slice<jule::Any> _48246_args) {
	{
		_1c0d2a275_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _48233_fmt, _48246_args);
	};
}



inline jule::Bool _1c0d2e422_isAccessibleDefine(_1c0d2b078_Sema* _self_, jule::Bool _48733_public, jule::Ptr<_1c0c49480_Token> _48747_token) {
	return ((_48733_public || ((*(_48747_token))._field_File == nullptr)) || (_1c0c503ba_Dir((*((*(_self_))._field_file))._field_File.ptr()) == _1c0c503ba_Dir((*_48747_token.alloc)._field_File.ptr())));;
}



inline jule::Bool _1c0d2e8c8_isDuplicatedIdent(_1c0d2b078_Sema* _self_, jule::Uintptr _49432_itself, jule::Str* _49450_ident, jule::Bool _49462_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4636077:;
		if (it != expr_end) {
			jule::Ptr<_1c0da1681_SymbolTable> *_49516_f = it;
			{
				if (_1c0da4ba1_isDuplicatedIdent((*(_49516_f)).ptr(), _49432_itself, _49450_ident, _49462_binded)) {
					return true;;
				};
				{
					auto expr = &((*(*(_49516_f)).alloc)._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c4637078:;
					if (it != expr_end) {
						jule::Ptr<_1c0d09782_ImportInfo> *_50020_imp = it;
						{
							{
								auto expr = &((*((*(_50020_imp))))._field_Selected);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c463796e:;
								if (it != expr_end) {
									jule::Ptr<_1c0c49480_Token> *_50124_selected = it;
									{
										if (((*((*(_50124_selected))))._field_Kind == (*(_49450_ident)))) {
											return true;;
										};
									}
									_iter_next_1c463796e:;
									++it;
									goto _iter_begin_1c463796e;
								}
								_iter_end_1c463796e:;
							};
						}
						_iter_next_1c4637078:;
						++it;
						goto _iter_begin_1c4637078;
					}
					_iter_end_1c4637078:;
				};
			}
			_iter_next_1c4636077:;
			++it;
			goto _iter_begin_1c4636077;
		}
		_iter_end_1c4636077:;
	};
	return false;;
}



inline void _1c0d2ec3b_checkDirectives(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Slice<jule::Ptr<_1c0c5dd57_Directive>>* _51140_d, jule::Any _51166_o) {
	_1c0d032d6_directiveChecker _51213_dc = _1c0d032d6_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1c0c5dd57_Directive>>>)(_51140_d)), ._field_o=_51166_o};;
	_1c0d0476b_check(&_51213_dc);
}



inline jule::Bool _1c0d301e2_checkGenericQuantity(_1c0d2b078_Sema* _self_, jule::I64 _52039_required, jule::I64 _52054_given, jule::Ptr<_1c0c49480_Token> _52066_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_52039_required == 0LL) && (_52054_given > 0LL))) {
			_case_begin_1c4639e49:;
			{
				_1c0d2dbb3_pushErr(_self_, _52066_token, jule::Str::lit("type have not generics but instantiate like generics", 52), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_52039_required > 0LL) && (_52054_given == 0LL))) {
			_case_begin_1c4639ec1:;
			{
				_1c0d2dbb3_pushErr(_self_, _52066_token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52039_required < _52054_given)) {
			_case_begin_1c463a048:;
			{
				_1c0d2dbb3_pushErr(_self_, _52066_token, jule::Str::lit("overflow generics", 17), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52039_required > _52054_given)) {
			_case_begin_1c463a0c0:;
			{
				_1c0d2dbb3_pushErr(_self_, _52066_token, jule::Str::lit("missing generics", 16), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c4639d7d:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1c4639cb2:;
	};
}



inline jule::Bool _1c0d305dd_isDuplicatedImportSelection(_1c0d2b078_Sema* _self_, jule::Uintptr _53942_itself, jule::Str* _53960_ident) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c463ccc6:;
		if (it != expr_end) {
			jule::Ptr<_1c0d09782_ImportInfo> *_54016_imp = it;
			{
				if ((static_cast<jule::Uintptr>((*(_54016_imp))) == _53942_itself)) {
					goto _iter_end_1c463ccc6;
				};
				if (_1c0d0c114_existIdent((*(_54016_imp)).ptr(), (*(_53960_ident)))) {
					return true;;
				};
			}
			_iter_next_1c463ccc6:;
			++it;
			goto _iter_begin_1c463ccc6;
		}
		_iter_end_1c463ccc6:;
	};
	return false;;
}



inline jule::Any _1c0d309d9_getImportDef(_1c0d2b078_Sema* _self_, jule::Str* _55228_ident, jule::Ptr<_1c0d09782_ImportInfo>* _55245_imp) {
	if ((_1c0ecd5b0_findPackageBuiltinDef(&((*((*(_55245_imp))))._field_LinkPath), _55228_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type3);;
	};
	{
		auto expr = &((*((*((*(_55245_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c463ee2c:;
		if (it != expr_end) {
			jule::Ptr<_1c0da1681_SymbolTable> _55621_f = *it;
			{
				;
				jule::Any _55917_def = _1c0da46ea_defByIdent(_55621_f.ptr(), _55228_ident, false);;
				if ((_55917_def != nullptr)) {
					return _55917_def;;
				};
			}
			_iter_next_1c463ee2c:;
			++it;
			goto _iter_begin_1c463ee2c;
		}
		_iter_end_1c463ee2c:;
	};
	return nullptr;;
}



inline jule::Bool _1c4646494_checkImportSelection(_1c0d2b078_Sema* _self_, jule::Ptr<_1c0c49480_Token>* _56743_ident, jule::Ptr<_1c0d4dde2_Var>* _56759_s) {
	if ((!(_1c0d2e422_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_1c0d2dbb3_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_1c0d2e026_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1c0d08b49_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_1c0d2dbb3_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1c464a762_checkImportSelection(_1c0d2b078_Sema* _self_, jule::Ptr<_1c0c49480_Token>* _56743_ident, jule::Ptr<_1c0dd7101_TypeAlias>* _56759_s) {
	if ((!(_1c0d2e422_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_1c0d2dbb3_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_1c0d2e026_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1c0d08b49_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_1c0d2dbb3_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1c464e9db_checkImportSelection(_1c0d2b078_Sema* _self_, jule::Ptr<_1c0c49480_Token>* _56743_ident, jule::Ptr<_1c0c807c4_Struct>* _56759_s) {
	if ((!(_1c0d2e422_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_1c0d2dbb3_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_1c0d2e026_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1c0d08b49_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_1c0d2dbb3_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1c4654051_checkImportSelection(_1c0d2b078_Sema* _self_, jule::Ptr<_1c0c49480_Token>* _56743_ident, jule::Ptr<_1c0ca8a72_Trait>* _56759_s) {
	if ((!(_1c0d2e422_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_1c0d2dbb3_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_1c0d2e026_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1c0d08b49_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_1c0d2dbb3_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1c465830d_checkImportSelection(_1c0d2b078_Sema* _self_, jule::Ptr<_1c0c49480_Token>* _56743_ident, jule::Ptr<_1c0cab27d_Enum>* _56759_s) {
	if ((!(_1c0d2e422_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_1c0d2dbb3_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_1c0d2e026_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1c0d08b49_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_1c0d2dbb3_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1c465c5a9_checkImportSelection(_1c0d2b078_Sema* _self_, jule::Ptr<_1c0c49480_Token>* _56743_ident, jule::Ptr<_1c0cac988_TypeEnum>* _56759_s) {
	if ((!(_1c0d2e422_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_1c0d2dbb3_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_1c0d2e026_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1c0d08b49_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_1c0d2dbb3_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1c4661822_checkImportSelection(_1c0d2b078_Sema* _self_, jule::Ptr<_1c0c49480_Token>* _56743_ident, jule::Ptr<_1c0c95795_Fn>* _56759_s) {
	if ((!(_1c0d2e422_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_1c0d2dbb3_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_1c0d2e026_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1c0d08b49_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_1c0d2dbb3_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}



inline jule::Bool _1c0d31226_checkImportSelectedSelections(_1c0d2b078_Sema* _self_, jule::Ptr<_1c0d09782_ImportInfo>* _58153_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_58153_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4641a66:;
		if (it != expr_end) {
			jule::Ptr<_1c0c49480_Token> _58316_ident = *it;
			{
				if ((*(_58316_ident))._field_Kind.equal("self", 4)) {
					goto _iter_next_1c4641a66;
				};
				if (_1c0d305dd_isDuplicatedImportSelection(_self_, static_cast<jule::Uintptr>((*(_58153_imp))), &((*_58316_ident.alloc)._field_Kind))) {
					_1c0d2dbb3_pushErr(_self_, _58316_ident, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_58316_ident.alloc)._field_Kind, &__jule_any_type4)}));
					_1c0d2e026_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1c4641a66;
				};
				jule::Any _59517_def = _1c0d309d9_getImportDef(_self_, &((*_58316_ident.alloc)._field_Kind), _58153_imp);;
				{
					auto &_match_expr{ _59517_def };
					
					if (_match_expr.type == &__jule_any_type3) {
						_case_begin_1c4643d43:;
						{
							goto _iter_next_1c4641a66;
						}
					}
					else if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1c464454c:;
						{
							jule::Ptr<_1c0d4dde2_Var> _60121_v = _59517_def.unsafe_cast_ptr<_1c0d4dde2_Var>();;
							__jule_func_result=(_1c4646494_checkImportSelection(_self_, &(_58316_ident), &(_60121_v)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1c46445b3:;
						{
							jule::Ptr<_1c0dd7101_TypeAlias> _60421_ta = _59517_def.unsafe_cast_ptr<_1c0dd7101_TypeAlias>();;
							__jule_func_result=(_1c464a762_checkImportSelection(_self_, &(_58316_ident), &(_60421_ta)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type64) {
						_case_begin_1c4644629:;
						{
							jule::Ptr<_1c0c807c4_Struct> _60721_s = _59517_def.unsafe_cast_ptr<_1c0c807c4_Struct>();;
							__jule_func_result=(_1c464e9db_checkImportSelection(_self_, &(_58316_ident), &(_60721_s)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1c4644690:;
						{
							jule::Ptr<_1c0ca8a72_Trait> _61021_t = _59517_def.unsafe_cast_ptr<_1c0ca8a72_Trait>();;
							__jule_func_result=(_1c4654051_checkImportSelection(_self_, &(_58316_ident), &(_61021_t)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1c4644706:;
						{
							jule::Ptr<_1c0cab27d_Enum> _61321_e = _59517_def.unsafe_cast_ptr<_1c0cab27d_Enum>();;
							__jule_func_result=(_1c465830d_checkImportSelection(_self_, &(_58316_ident), &(_61321_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type67) {
						_case_begin_1c464531c:;
						{
							jule::Ptr<_1c0cac988_TypeEnum> _61621_e = _59517_def.unsafe_cast_ptr<_1c0cac988_TypeEnum>();;
							__jule_func_result=(_1c465c5a9_checkImportSelection(_self_, &(_58316_ident), &(_61621_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type63) {
						_case_begin_1c4645383:;
						{
							jule::Ptr<_1c0c95795_Fn> _61921_f = _59517_def.unsafe_cast_ptr<_1c0c95795_Fn>();;
							__jule_func_result=(_1c4661822_checkImportSelection(_self_, &(_58316_ident), &(_61921_f)) && __jule_func_result);
						}
					}
					else {
						_case_begin_1c464443c:;
						{
							_1c0d2dbb3_pushErr(_self_, _58316_ident, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*_58316_ident.alloc)._field_Kind, &__jule_any_type4)}));
							__jule_func_result=false;
							goto _iter_next_1c4641a66;
						}
					}
					_match_end_1c46421e8:;
				};
			}
			_iter_next_1c4641a66:;
			++it;
			goto _iter_begin_1c4641a66;
		}
		_iter_end_1c4641a66:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c46660c9_checkImportsAllSelectionsFromCollection(_1c0d2b078_Sema* _self_, jule::Slice<jule::Ptr<_1c0d4dde2_Var>>* _63062_s, jule::Ptr<_1c0c49480_Token>* _63071_et) {
	jule::Bool _63113_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4667d45:;
		if (it != expr_end) {
			jule::Ptr<_1c0d4dde2_Var> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63113_ok=(_1c4646494_checkImportSelection(_self_, _63071_et, _63216_d) && _63113_ok);
				};
			}
			_iter_next_1c4667d45:;
			++it;
			goto _iter_begin_1c4667d45;
		}
		_iter_end_1c4667d45:;
	};
	return _63113_ok;;
}

inline jule::Bool _1c4666c67_checkImportsAllSelectionsFromCollection(_1c0d2b078_Sema* _self_, jule::Slice<jule::Ptr<_1c0dd7101_TypeAlias>>* _63062_s, jule::Ptr<_1c0c49480_Token>* _63071_et) {
	jule::Bool _63113_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c466a540:;
		if (it != expr_end) {
			jule::Ptr<_1c0dd7101_TypeAlias> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63113_ok=(_1c464a762_checkImportSelection(_self_, _63071_et, _63216_d) && _63113_ok);
				};
			}
			_iter_next_1c466a540:;
			++it;
			goto _iter_begin_1c466a540;
		}
		_iter_end_1c466a540:;
	};
	return _63113_ok;;
}

inline jule::Bool _1c466997e_checkImportsAllSelectionsFromCollection(_1c0d2b078_Sema* _self_, jule::Slice<jule::Ptr<_1c0c807c4_Struct>>* _63062_s, jule::Ptr<_1c0c49480_Token>* _63071_et) {
	jule::Bool _63113_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c466cc29:;
		if (it != expr_end) {
			jule::Ptr<_1c0c807c4_Struct> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63113_ok=(_1c464e9db_checkImportSelection(_self_, _63071_et, _63216_d) && _63113_ok);
				};
			}
			_iter_next_1c466cc29:;
			++it;
			goto _iter_begin_1c466cc29;
		}
		_iter_end_1c466cc29:;
	};
	return _63113_ok;;
}

inline jule::Bool _1c466b277_checkImportsAllSelectionsFromCollection(_1c0d2b078_Sema* _self_, jule::Slice<jule::Ptr<_1c0c95795_Fn>>* _63062_s, jule::Ptr<_1c0c49480_Token>* _63071_et) {
	jule::Bool _63113_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4670435:;
		if (it != expr_end) {
			jule::Ptr<_1c0c95795_Fn> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63113_ok=(_1c4661822_checkImportSelection(_self_, _63071_et, _63216_d) && _63113_ok);
				};
			}
			_iter_next_1c4670435:;
			++it;
			goto _iter_begin_1c4670435;
		}
		_iter_end_1c4670435:;
	};
	return _63113_ok;;
}

inline jule::Bool _1c466ed4c_checkImportsAllSelectionsFromCollection(_1c0d2b078_Sema* _self_, jule::Slice<jule::Ptr<_1c0ca8a72_Trait>>* _63062_s, jule::Ptr<_1c0c49480_Token>* _63071_et) {
	jule::Bool _63113_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4672aca:;
		if (it != expr_end) {
			jule::Ptr<_1c0ca8a72_Trait> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63113_ok=(_1c4654051_checkImportSelection(_self_, _63071_et, _63216_d) && _63113_ok);
				};
			}
			_iter_next_1c4672aca:;
			++it;
			goto _iter_begin_1c4672aca;
		}
		_iter_end_1c4672aca:;
	};
	return _63113_ok;;
}

inline jule::Bool _1c4672019_checkImportsAllSelectionsFromCollection(_1c0d2b078_Sema* _self_, jule::Slice<jule::Ptr<_1c0cab27d_Enum>>* _63062_s, jule::Ptr<_1c0c49480_Token>* _63071_et) {
	jule::Bool _63113_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4675270:;
		if (it != expr_end) {
			jule::Ptr<_1c0cab27d_Enum> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63113_ok=(_1c465830d_checkImportSelection(_self_, _63071_et, _63216_d) && _63113_ok);
				};
			}
			_iter_next_1c4675270:;
			++it;
			goto _iter_begin_1c4675270;
		}
		_iter_end_1c4675270:;
	};
	return _63113_ok;;
}

inline jule::Bool _1c46746ae_checkImportsAllSelectionsFromCollection(_1c0d2b078_Sema* _self_, jule::Slice<jule::Ptr<_1c0cac988_TypeEnum>>* _63062_s, jule::Ptr<_1c0c49480_Token>* _63071_et) {
	jule::Bool _63113_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c467799d:;
		if (it != expr_end) {
			jule::Ptr<_1c0cac988_TypeEnum> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63113_ok=(_1c465c5a9_checkImportSelection(_self_, _63071_et, _63216_d) && _63113_ok);
				};
			}
			_iter_next_1c467799d:;
			++it;
			goto _iter_begin_1c467799d;
		}
		_iter_end_1c467799d:;
	};
	return _63113_ok;;
}



inline jule::Bool _1c0d31963_checkImportAllSelections(_1c0d2b078_Sema* _self_, jule::Ptr<_1c0d09782_ImportInfo>* _64044_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*((*(_64044_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4641e62:;
		if (it != expr_end) {
			jule::Ptr<_1c0da1681_SymbolTable> *_64216_file = it;
			{
				__jule_func_result=(_1c46660c9_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64216_file))))._field_Vars), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1c4666c67_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64216_file)).alloc)._field_TypeAliases), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1c466997e_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64216_file)).alloc)._field_Structs), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1c466b277_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64216_file)).alloc)._field_Funcs), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1c466ed4c_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64216_file)).alloc)._field_Traits), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1c4672019_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64216_file)).alloc)._field_Enums), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1c46746ae_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64216_file)).alloc)._field_TypeEnums), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
			}
			_iter_next_1c4641e62:;
			++it;
			goto _iter_begin_1c4641e62;
		}
		_iter_end_1c4641e62:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c0d31ca4_checkImportSelections(_1c0d2b078_Sema* _self_, jule::Ptr<_1c0d09782_ImportInfo>* _65445_imp) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_65445_imp))))._field_Selected.len() > 0LL)) {
		__jule_func_result = _1c0d31226_checkImportSelectedSelections(_self_, _65445_imp);
		return __jule_func_result;;
	} else if ((*((*(_65445_imp))))._field_ImportAll) {
		__jule_func_result = _1c0d31963_checkImportAllSelections(_self_, _65445_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c0d320e5_isUseAliasDuplication(_1c0d2b078_Sema* _self_, jule::Ptr<_1c0d09782_ImportInfo>* _66341_imp) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4679a27:;
		if (it != expr_end) {
			jule::Ptr<_1c0d09782_ImportInfo> _66421_imp2 = *it;
			{
				if ((_66421_imp2 == (*(_66341_imp)))) {
					goto _iter_end_1c4679a27;
				};
				if (((*(_66421_imp2))._field_Alias == (*((*(_66341_imp))))._field_Alias)) {
					return true;;
				};
				if ((((*_66421_imp2.alloc)._field_Ident == (*_66421_imp2.alloc)._field_LinkPath) && ((*_66421_imp2.alloc)._field_Ident == (*((*(_66341_imp))))._field_Alias))) {
					return true;;
				};
			}
			_iter_next_1c4679a27:;
			++it;
			goto _iter_begin_1c4679a27;
		}
		_iter_end_1c4679a27:;
	};
	return false;;
}



inline jule::Bool _1c0d32436_checkImport(_1c0d2b078_Sema* _self_, jule::Ptr<_1c0d09782_ImportInfo>* _67935_imp) {
	if (((*((*(_67935_imp))))._field_Binded || ((*((*((*(_67935_imp))))._field_Package))._field_Files.len() == 0LL))) {
		return true;;
	};
	if ((*((*(_67935_imp))))._field_LinkPath.equal("std::unsafe", 11)) {
		if ((((*((*(_67935_imp))))._field_ImportAll || !((*((*(_67935_imp))))._field_Alias).empty()) || ((*((*(_67935_imp))))._field_Selected.len() > 0LL))) {
			_1c0d2dbb3_pushErr(_self_, (*((*(_67935_imp))))._field_Token, jule::Str::lit("expected plain use declaration for this package like: @", 55), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("use std::unsafe", 15), &__jule_any_type4)}));
			return false;;
		};
	};
	if (((*((*(_67935_imp))))._field_Alias.len() != 0LL)) {
		if (_1c0c4bd67_IsIgnoreIdent((*((*(_67935_imp))))._field_Alias)) {
			_1c0d2dbb3_pushErr(_self_, (*((*(_67935_imp))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		} else if (_1c0d320e5_isUseAliasDuplication(_self_, _67935_imp)) {
			_1c0d2dbb3_pushErr(_self_, (*((*(_67935_imp))))._field_Token, jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75), jule::Slice<jule::Any>::make({jule::Any((*((*(_67935_imp))))._field_Alias, &__jule_any_type4)}));
			_1c0d2e026_pushSuggestion(_self_, jule::Str::lit("rename alias for this use declaration to avoid duplication", 58), jule::Slice<jule::Any>());
		};
	};
	if ((!((*((*(_67935_imp))))._field_Duplicate))) {
		jule::Ptr<_1c0d2b078_Sema> _70217_sema = jule::new_ptr<_1c0d2b078_Sema>(_1c0d2b078_Sema{._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_1c0d4a817_check(_70217_sema, &((*(*((*(_67935_imp))))._field_Package.alloc)._field_Files));
		if (((*_70217_sema.alloc)._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append((*_70217_sema.alloc)._field_errors);;
			(*_70217_sema.alloc)._field_errors=nullptr;
			return false;;
		};
	};
	return _1c0d31ca4_checkImportSelections(_self_, _67935_imp);;
}



inline void _1c0d32634_checkImports(_1c0d2b078_Sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4682216:;
		if (it != expr_end) {
			jule::Ptr<_1c0da1681_SymbolTable> _71721_file = *it;
			{
				_1c0d2d795_setCurrentFile(_self_, _71721_file);
				{
					auto expr = &((*(_71721_file))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c4684c0d:;
					if (it != expr_end) {
						jule::Ptr<_1c0d09782_ImportInfo> _71925_imp = *it;
						{
							jule::Bool _72017_ok = _1c0d32436_checkImport(_self_, &(_71925_imp));;
							if ((!(_72017_ok))) {
								return;;
							};
						}
						_iter_next_1c4684c0d:;
						++it;
						goto _iter_begin_1c4684c0d;
					}
					_iter_end_1c4684c0d:;
				};
			}
			_iter_next_1c4682216:;
			++it;
			goto _iter_begin_1c4682216;
		}
		_iter_end_1c4682216:;
	};
}



inline void _1c0d32832_implFileImpls(jule::Ptr<_1c0d2b078_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4685192:;
		if (it != expr_end) {
			jule::Ptr<_1c0cd21d8_Impl> _73021_imp = *it;
			{
				_1c0d41dc4_implImpl(_self_, &(_73021_imp));
			}
			_iter_next_1c4685192:;
			++it;
			goto _iter_begin_1c4685192;
		}
		_iter_end_1c4685192:;
	};
}



inline void _1c0d32a30_implImpls(jule::Ptr<_1c0d2b078_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4686a45:;
		if (it != expr_end) {
			jule::Ptr<_1c0da1681_SymbolTable> _73621_file = *it;
			{
				_1c0d2d795_setCurrentFile(_self_.ptr(), _73621_file);
				_1c0d32832_implFileImpls(_self_);
			}
			_iter_next_1c4686a45:;
			++it;
			goto _iter_begin_1c4686a45;
		}
		_iter_end_1c4686a45:;
	};
}



inline void _1c0d32c2d_checkEnums(jule::Ptr<_1c0d2b078_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4687ae0:;
		if (it != expr_end) {
			jule::Ptr<_1c0da1681_SymbolTable> _74321_file = *it;
			{
				_1c0d2d795_setCurrentFile(_self_.ptr(), _74321_file);
				{
					
					if ((!(_1c0d3d310_checkEnumDecls(_self_)))) {
						_case_begin_1c468821c:;
					}
					else if ((!(_1c0d3d596_checkTypeEnumDecls(_self_)))) {
						_case_begin_1c46887d3:;
					}
					_match_end_1c4688728:;
				};
			}
			_iter_next_1c4687ae0:;
			++it;
			goto _iter_begin_1c4687ae0;
		}
		_iter_end_1c4687ae0:;
	};
}



inline void _1c0d32e2b_checkFileInherits(jule::Ptr<_1c0d2b078_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c468964c:;
		if (it != expr_end) {
			jule::Ptr<_1c0ca8a72_Trait> _75321_t = *it;
			{
				jule::Bool _75413_ok = _1c0d3ee5a__checkTraitDeclInherits(_self_, &(_75321_t));;
				if ((!(_75413_ok))) {
					return;;
				};
			}
			_iter_next_1c468964c:;
			++it;
			goto _iter_begin_1c468964c;
		}
		_iter_end_1c468964c:;
	};
}



inline void _1c0d33129_checkInherits(jule::Ptr<_1c0d2b078_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c468a73b:;
		if (it != expr_end) {
			jule::Ptr<_1c0da1681_SymbolTable> _76221_file = *it;
			{
				_1c0d2d795_setCurrentFile(_self_.ptr(), _76221_file);
				_1c0d32e2b_checkFileInherits(_self_);
			}
			_iter_next_1c468a73b:;
			++it;
			goto _iter_begin_1c468a73b;
		}
		_iter_end_1c468a73b:;
	};
}



inline _1c0de9ca1_typeChecker _1c0d335d0_typeChecker(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Trait<_1c0e079d4_Lookup> _76835_l, jule::Slice<jule::Ptr<_1c0dd7101_TypeAlias>> _76850_generics, jule::Ptr<_1c0de8cb1_referencer> _76913_referencer) {
	_1c0de9ca1_typeChecker _77013_tc = _1c0de9ca1_typeChecker{._field_s=_self_, ._field_rootLookup=_76835_l, ._field_lookup=_76835_l, ._field_referencer=_76913_referencer, ._field_useGenerics=_76850_generics, };;
	{
		auto &_match_expr{ _76835_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1c468c83c:;
			{
				jule::Ptr<_1c0cdeaec_scopeChecker> _77917_hard = _1c0ce322c_getHardRoot(_76835_l.cast_ptr<_1c0cdeaec_scopeChecker>(0));;
				_77013_tc._field_refers=(*((*(_77917_hard))._field_owner))._field_Refers;
			}
		}
		_match_end_1c468c298:;
	};
	if (((_76913_referencer != nullptr) && ((*_76913_referencer.alloc)._field_refs != nullptr))) {
		{
			auto &_match_expr{ (*(_76913_referencer))._field_owner };
			
			if (_match_expr.type == &__jule_any_type65) {
				_case_begin_1c468e1ac:;
				{
					_77013_tc._field_ownerAlias=(*(_76913_referencer))._field_owner.unsafe_cast_ptr<_1c0dd7101_TypeAlias>();
				}
			}
			_match_end_1c468e157:;
		};
	};
	return _77013_tc;;
}



inline jule::Ptr<_1c0dd7de3_TypeKind> _1c0d33b41_buildTypeWithRefers(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0c5e93a_TypeDecl>* _79544_t, jule::Trait<_1c0e079d4_Lookup> _79567_l, jule::Slice<jule::Ptr<_1c0dd7101_TypeAlias>> _79613_generics, jule::Ptr<_1c0de8cb1_referencer> _79641_referencer) {
	return ({ auto _wrap_copy = _1c0d335d0_typeChecker(_self_, _79567_l, _79613_generics, _79641_referencer); _1c0e0244b_checkDecl(&_wrap_copy, _79544_t); });;
}



inline jule::Bool _1c0d341a2_checkTypeWithRefers(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0de00b5_TypeSymbol>* _80244_t, jule::Trait<_1c0e079d4_Lookup> _80264_l, jule::Slice<jule::Ptr<_1c0dd7101_TypeAlias>> _80313_generics, jule::Ptr<_1c0de8cb1_referencer> _80341_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1c0de0439_checked((*(_80244_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_80244_t))))._field_Kind=_1c0d33b41_buildTypeWithRefers(_self_, &((*((*(_80244_t))))._field_Decl), _80264_l, _80313_generics, _80341_referencer);
	__jule_func_result = _1c0de0439_checked((*(_80244_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1c0cced84_constraintChecker> _1c0d34438_constraintChecker(jule::Ptr<_1c0d2b078_Sema> _self_) {
	return jule::new_ptr<_1c0cced84_constraintChecker>(_1c0cced84_constraintChecker{._field_s=_self_, });;
}



inline jule::Bool _1c0d34834_checkType(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0de00b5_TypeSymbol>* _81734_t, jule::Trait<_1c0e079d4_Lookup> _81754_l) {
	return _1c0d341a2_checkTypeWithRefers(_self_, _81734_t, _81754_l, nullptr, nullptr);;
}



inline jule::Ptr<_1c0dd7de3_TypeKind> _1c0d34cda_buildTypeWithGenerics(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0c5e93a_TypeDecl>* _82346_t, jule::Slice<jule::Ptr<_1c0dd7101_TypeAlias>> _82413_generics, jule::Ptr<_1c0c9b878_ReferenceStack> _82441_refers) {
	jule::Ptr<_1c0de9ca1_typeChecker> _82513_tc = jule::new_ptr<_1c0de9ca1_typeChecker>(_1c0de9ca1_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1c0e079d4_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1c0e079d4_Lookup>(_self_, 3), ._field_refers=_82441_refers, ._field_useGenerics=_82413_generics, });;
	return _1c0e0244b_checkDecl(_82513_tc.ptr(), _82346_t);;
}



inline jule::Ptr<_1c0dd7de3_TypeKind> _1c0d3546c_selectType(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0c5e93a_TypeDecl>* _84135_t) {
	jule::Ptr<_1c0de9ca1_typeChecker> _84213_tc = jule::new_ptr<_1c0de9ca1_typeChecker>(_1c0de9ca1_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1c0e079d4_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1c0e079d4_Lookup>(_self_, 3), ._field_selection=true, });;
	return _1c0e0244b_checkDecl(_84213_tc.ptr(), _84135_t);;
}



inline jule::Ptr<_1c0da8721_Eval> _1c0d35923_evalpd(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Trait<_1c0e079d4_Lookup> _85330_l, jule::Ptr<_1c0dd7de3_TypeKind> _85345_p, jule::Ptr<_1c0d4dde2_Var> _85363_owner) {
	jule::Ptr<_1c0da8721_Eval> _85413_e = jule::new_ptr<_1c0da8721_Eval>(_1c0da8721_Eval{._field_s=_self_, ._field_lookup=_85330_l, ._field_owner=_85363_owner, });;
	{
		auto &_match_expr{ _85330_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1c46984c4:;
			{
				(*(_85413_e))._field_unsafety=_1c0ce1ea6_isUnsafe(_85330_l.cast_ptr<_1c0cdeaec_scopeChecker>(0));
			}
		}
		_match_end_1c4698271:;
	};
	(*_85413_e.alloc)._field_prefix=_85345_p;
	return _85413_e;;
}



inline jule::Ptr<_1c0da8721_Eval> _1c0d35d1e_evalp(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Trait<_1c0e079d4_Lookup> _86829_l, jule::Ptr<_1c0dd7de3_TypeKind> _86844_p) {
	return _1c0d35923_evalpd(_self_, _86829_l, _86844_p, nullptr);;
}



inline jule::Ptr<_1c0da8721_Eval> _1c0d36160_eval(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Trait<_1c0e079d4_Lookup> _87328_l) {
	return _1c0d35d1e_evalp(_self_, _87328_l, nullptr);;
}



inline jule::Bool _1c0d366c1_checkAssignType(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Bool _87735_destIsRef, jule::Ptr<_1c0dd7de3_TypeKind>* _87757_dest, jule::Ptr<_1c0da69e9_Data>* _87814_d, jule::Ptr<_1c0c49480_Token> _87828_errorToken) {
	if ((*((*(_87814_d))))._field_Decl) {
		_1c0d2dbb3_pushErr(_self_.ptr(), _87828_errorToken, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return false;;
	};
	if (_87735_destIsRef) {
		if ((!(_1c0dd85ec_Equal((*(_87757_dest)), (*((*(_87814_d))))._field_Kind)))) {
			_1c0d2dbb3_pushErr(_self_, _87828_errorToken, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*(_87757_dest)).ptr()), &__jule_any_type4),jule::Any(_1c0dd82ab_Str((*((*(_87814_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			return false;;
		};
	} else {
		jule::Ptr<_1c0d90461_assignTypeChecker> _88917_atc = jule::new_ptr<_1c0d90461_assignTypeChecker>(_1c0d90461_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_87757_dest)), ._field_d=(*(_87814_d)), ._field_errorToken=_87828_errorToken});;
		jule::Bool _89513_ok = _1c0d9142e_check(_88917_atc.ptr());;
		if ((!(_89513_ok))) {
			return false;;
		};
	};
	if (((!(_1c0da7401_IsConst((*(_87814_d)).ptr()))) || (_1c0dda544_Prim((*(_87757_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _90513_kind = (*(_1c0dda544_Prim((*(_87757_dest)).ptr())))._field_Kind;;
	{
		
		if (_2021e4e38_IsSigInt(_90513_kind)) {
			_case_begin_1c46a0cd4:;
			{
				_2021e90e6_SetI64((*((*(_87814_d))))._field_Constant.ptr(), _2021e8821_AsI64((*((*(_87814_d))))._field_Constant));
			}
		}
		else if (_2021e5246_IsUnsigInt(_90513_kind)) {
			_case_begin_1c46a0d7d:;
			{
				_2021e939e_SetU64((*((*(_87814_d))))._field_Constant.ptr(), _2021e8aa7_AsU64((*((*(_87814_d))))._field_Constant));
			}
		}
		else if (_2021e5851_IsFloat(_90513_kind)) {
			_case_begin_1c46a0de4:;
			{
				_2021e9bb8_SetF64((*((*(_87814_d))))._field_Constant.ptr(), _2021e8d3d_AsF64((*((*(_87814_d))))._field_Constant));
			}
		}
		_match_end_1c46a0c29:;
	};
	return true;;
}



inline jule::Bool _1c0d36b77__checkTypeCompatibility(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0dd7de3_TypeKind>* _91948_dest, jule::Ptr<_1c0dd7de3_TypeKind>* _91970_src, jule::Ptr<_1c0c49480_Token> _92013_errorToken) {
	if (((*(_91970_src)) == nullptr)) {
		return false;;
	};
	if ((_1c0ddc36a_Tup((*(_91970_src)).ptr()) != nullptr)) {
		return false;;
	};
	_1c0d8d6b2_typeCompatibilityChecker _92813_tcc = _1c0d8d6b2_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_91948_dest)), ._field_src=(*(_91970_src)), ._field_errorToken=_92013_errorToken};;
	return _1c0d8ed78_check(&_92813_tcc);;
}



inline jule::Bool _1c0d3712d_checkTypeCompatibility(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0dd7de3_TypeKind>* _93747_dest, jule::Ptr<_1c0dd7de3_TypeKind>* _93814_src, jule::Ptr<_1c0c49480_Token>* _93835_errorToken) {
	if (_1c0d36b77__checkTypeCompatibility(_self_, _93747_dest, _93814_src, (*(_93835_errorToken)))) {
		return true;;
	};
	_1c0d2dbb3_pushErr(_self_, (*(_93835_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*(_93747_dest)).ptr()), &__jule_any_type4),jule::Any(_1c0dd82ab_Str((*(_93814_src)).ptr()), &__jule_any_type4)}));
	return false;;
}



inline void _1c0d3754b_pushCompatiblityError(_1c0d2b078_Sema* _self_, jule::Ptr<_1c0dd7de3_TypeKind>* _94645_dest, jule::Ptr<_1c0da69e9_Data>* _94667_src, jule::Ptr<_1c0c49480_Token>* _94714_errorToken) {
	if ((*((*(_94667_src))))._field_untyped) {
		{
			
			if (_2021ea14c_IsI64((*((*(_94667_src))))._field_Constant.ptr())) {
				_case_begin_1c46a832a:;
				{
					_1c0d2dbb3_pushErr(_self_, (*(_94714_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*(_94645_dest)).ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("untyped integer", 15), &__jule_any_type4)}));
					return;;
				}
			}
			else if (_2021ea3d3_IsU64((*((*(_94667_src))))._field_Constant.ptr())) {
				_case_begin_1c46a83c4:;
				{
					_1c0d2dbb3_pushErr(_self_, (*(_94714_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*(_94645_dest)).ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("untyped unsigned integer", 24), &__jule_any_type4)}));
					return;;
				}
			}
			else if (_2021eab86_IsF64((*((*(_94667_src))))._field_Constant.ptr())) {
				_case_begin_1c46a843a:;
				{
					_1c0d2dbb3_pushErr(_self_, (*(_94714_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*(_94645_dest)).ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("untyped float", 13), &__jule_any_type4)}));
					return;;
				}
			}
			_match_end_1c46a8209:;
		};
	};
	_1c0d2dbb3_pushErr(_self_, (*(_94714_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*(_94645_dest)).ptr()), &__jule_any_type4),jule::Any(_1c0dd82ab_Str((*((*(_94667_src))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Bool _1c0d37a02_checkTypeCompatibility1(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0dd7de3_TypeKind>* _96448_dest, jule::Ptr<_1c0da69e9_Data>* _96470_src, jule::Ptr<_1c0c49480_Token>* _96514_errorToken) {
	if (_1c0d36b77__checkTypeCompatibility(_self_, _96448_dest, &((*((*(_96470_src))))._field_Kind), (*(_96514_errorToken)))) {
		return true;;
	};
	_1c0d3754b_pushCompatiblityError(_self_, _96448_dest, _96470_src, _96514_errorToken);
	return false;;
}



inline jule::Ptr<_1c0dd7de3_TypeKind> _1c0d37ea8_buildNonGenericTypeKind(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0c5e93a_TypeDecl>* _97948_ast, jule::Slice<jule::Ptr<_1c0c6bb45_GenericDecl>>* _98014_generics, jule::Slice<jule::Ptr<_1c0dd7de3_TypeKind>>* _98050_ignored) {
	jule::Ptr<_1c0de9ca1_typeChecker> _98113_tc = jule::new_ptr<_1c0de9ca1_typeChecker>(_1c0de9ca1_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1c0e079d4_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1c0e079d4_Lookup>(_self_, 3), ._field_ignoreGenerics=(*(_98014_generics)), ._field_ignoredGenerics=_98050_ignored, });;
	return _1c0e0244b_checkDecl(_98113_tc.ptr(), _97948_ast);;
}



inline jule::Bool _1c0d383a4_buildFnNonGenericTypeKinds(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0c98699_FnIns>* _99151_f, jule::Slice<jule::Ptr<_1c0dd7de3_TypeKind>>* _99167_ignored) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Slice<jule::Ptr<_1c0c6bb45_GenericDecl>> _99317_generics = nullptr;;
	if (_1c0c95e9e_IsMethod((*((*(_99151_f))))._field_Decl.ptr())) {
		_99317_generics=jule::append((*(*((*(_99151_f))))._field_Decl.alloc)._field_Generics,(*((*(*((*(_99151_f))))._field_Decl.alloc)._field_Owner))._field_Generics);
	} else {
		_99317_generics=(*((*((*(_99151_f))))._field_Decl))._field_Generics;
	};
	{
		auto expr = &((*((*(_99151_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c46b26b9:;
		if (it != expr_end) {
			jule::Ptr<_1c0c976ed_ParamIns> _100021_p = *it;
			{
				if ((!(_1c0c943dc_IsSelf((*(_100021_p))._field_Decl.ptr())))) {
					(*_100021_p.alloc)._field_Kind=_1c0d37ea8_buildNonGenericTypeKind(_self_, &((*((*(*_100021_p.alloc)._field_Decl.alloc)._field_Kind))._field_Decl), &(_99317_generics), _99167_ignored);
					__jule_func_result=(__jule_func_result && ((*_100021_p.alloc)._field_Kind != nullptr));
				};
			}
			_iter_next_1c46b26b9:;
			++it;
			goto _iter_begin_1c46b26b9;
		}
		_iter_end_1c46b26b9:;
	};
	if ((!(_1c0c95c18_IsVoid((*((*(_99151_f))))._field_Decl.ptr())))) {
		(*((*(_99151_f))))._field_Result=_1c0d37ea8_buildNonGenericTypeKind(_self_, &((*((*((*(*((*(_99151_f))))._field_Decl.alloc)._field_Result))._field_Kind))._field_Decl), &(_99317_generics), _99167_ignored);
		__jule_func_result=(__jule_func_result && ((*((*(_99151_f))))._field_Result != nullptr));
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1c0c98699_FnIns> _1c0d386e5_getTraitCheckFnKind(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0c95795_Fn>* _101344_f) {
	if (((*((*(_101344_f))))._field_Instances.len() == 1LL)) {
		return (*((*(_101344_f))))._field_Instances[0LL];;
	};
	jule::Ptr<_1c0c98699_FnIns> _101713_ins = _1c0c96c6e_instanceForce((*(_101344_f)));;
	jule::Ptr<_1c0de9ca1_typeChecker> _101913_tc = jule::new_ptr<_1c0de9ca1_typeChecker>(_1c0de9ca1_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1c0e079d4_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1c0e079d4_Lookup>(_self_, 3), });;
	{
		auto expr = &((*(_101713_ins))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c46b87e1:;
		if (it != expr_end) {
			jule::Ptr<_1c0c976ed_ParamIns> _102421_p = *it;
			{
				if ((!(_1c0c943dc_IsSelf((*(_102421_p))._field_Decl.ptr())))) {
					(*_102421_p.alloc)._field_Kind=_1c0e0244b_checkDecl(_101913_tc.ptr(), &((*((*(*_102421_p.alloc)._field_Decl.alloc)._field_Kind))._field_Decl));
				};
			}
			_iter_next_1c46b87e1:;
			++it;
			goto _iter_begin_1c46b87e1;
		}
		_iter_end_1c46b87e1:;
	};
	if ((!(_1c0c95c18_IsVoid((*(_101344_f)).ptr())))) {
		(*_101713_ins.alloc)._field_Result=_1c0e0244b_checkDecl(_101913_tc, &((*((*((*((*(_101344_f))))._field_Result))._field_Kind))._field_Decl));
	};
	return _101713_ins;;
}



inline jule::Bool _1c0d38b9b_checkConstraintsFn(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0c98699_FnIns>* _103643_f, jule::Ptr<_1c0c49480_Token>* _103659_et, jule::Ptr<_1c0c98699_FnIns> _103675_exist) {
	jule::Ptr<_1c0cced84_constraintChecker> _103713_cc = _1c0d34438_constraintChecker(_self_);;
	(*(_103713_cc))._field_et=(*(_103659_et));
	(*_103713_cc.alloc)._field_fi=(*(_103643_f));
	if ((_103675_exist != nullptr)) {
		{
			auto expr = &((*_103675_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c46bcd01:;
			if (it != expr_end) {
				jule::I64 _104118_i = it - expr->begin();
				jule::Ptr<_1c0dd650c_InsGeneric> _104125_g = *it;
				{
					(*((*((*(_103643_f))))._field_Generics[_104118_i]))._field_Constraint=(*(_104125_g))._field_Constraint;
				}
				_iter_next_1c46bcd01:;
				++it;
				_104118_i++;
				goto _iter_begin_1c46bcd01;
			}
			_iter_end_1c46bcd01:;
		};
	} else {
		(*_103713_cc.alloc)._field_uniq=true;
	};
	return _1c0cd0cb9_check(_103713_cc);;
}



inline jule::Bool _1c0d39152_checkConstraintsStruct(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0c83552_StructIns>* _105047_s, jule::Ptr<_1c0c49480_Token>* _105067_et, jule::Ptr<_1c0c83552_StructIns> _105083_exist) {
	jule::Ptr<_1c0cced84_constraintChecker> _105113_cc = _1c0d34438_constraintChecker(_self_);;
	(*(_105113_cc))._field_et=(*(_105067_et));
	(*_105113_cc.alloc)._field_si=(*(_105047_s));
	if ((_105083_exist != nullptr)) {
		{
			auto expr = &((*_105083_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c46c0e8b:;
			if (it != expr_end) {
				jule::I64 _105518_i = it - expr->begin();
				jule::Ptr<_1c0dd650c_InsGeneric> _105525_g = *it;
				{
					(*((*((*(_105047_s))))._field_Generics[_105518_i]))._field_Constraint=(*(_105525_g))._field_Constraint;
				}
				_iter_next_1c46c0e8b:;
				++it;
				_105518_i++;
				goto _iter_begin_1c46c0e8b;
			}
			_iter_end_1c46c0e8b:;
		};
	} else {
		(*_105113_cc.alloc)._field_uniq=true;
	};
	return _1c0cd0cb9_check(_105113_cc);;
}



inline jule::Bool _1c0d3954d_fnEnvironment(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0c98699_FnIns>* _106738_f, jule::Fn<jule::Bool,jule::Ptr<_1c0d2b078_Sema>*,jule::Slice<jule::Ptr<_1c0dd7101_TypeAlias>>*> _106749_algo) {
	jule::Ptr<_1c0d2b078_Sema> _106813_sema = (*((*((*(_106738_f))))._field_Decl))._field_sema;;
	jule::Ptr<_1c0da1681_SymbolTable> _106913_old = (*((*(*((*(_106738_f))))._field_Decl.alloc)._field_sema))._field_file;;
	__JULE_DEFER({
		_1c0d2d795_setCurrentFile((*(*((*(_106738_f))))._field_Decl.alloc)._field_sema, _106913_old);
	});;
	jule::Ptr<_1c0da1681_SymbolTable> _107113_file = _1c0d29cbe_findFile(&((*(*(*((*(_106738_f))))._field_Decl.alloc)._field_sema.alloc)._field_files), &((*((*(*((*(_106738_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_107113_file != nullptr)) {
		_1c0d2d795_setCurrentFile((*(*((*(_106738_f))))._field_Decl.alloc)._field_sema, _107113_file);
	};
	jule::I64 _107613_size = (*((*(_106738_f))))._field_Generics.len();;
	if ((((*((*(_106738_f))))._field_Decl != nullptr) && ((*(*((*(_106738_f))))._field_Decl.alloc)._field_Owner != nullptr))) {
		_107613_size+=(*(*(*((*(_106738_f))))._field_Decl.alloc)._field_Owner.alloc)._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1c0dd7101_TypeAlias>> _108113_generics = jule::Slice<jule::Ptr<_1c0dd7101_TypeAlias>>::alloc(0LL, _107613_size);;
	_1c0d2994a_appendGenericTypeAliases(&(_108113_generics), _106738_f);
	jule::Bool _10849_ok = _106749_algo(&(_106813_sema), &(_108113_generics));;
	if ((_106813_sema != _self_)) {
		(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,(*(_106813_sema))._field_errors);
		(*_106813_sema.alloc)._field_errors=nullptr;
	};
	return _10849_ok;;
}



inline void _1c0d39806_checkFnParamKind(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0c976ed_ParamIns>* _109441_p) {
	(*((*((*(_109441_p))))._field_Kind))._field_Variadic=(*((*((*(_109441_p))))._field_Decl))._field_Variadic;
	if (((*(*((*(_109441_p))))._field_Decl.alloc)._field_Reference && (!(_1c0e043a4_isValidForRef(&((*((*(_109441_p))))._field_Kind)))))) {
		_1c0d2dbb3_pushErr(_self_.ptr(), (*(*((*(_109441_p))))._field_Decl.alloc)._field_Token, jule::Str::lit("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*((*(_109441_p))))._field_Kind), &__jule_any_type4)}));
	};
}



inline jule::Bool _1c0d39b47_reloadFnInsTypes(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0c98699_FnIns> _110140_f) {
	if ((_1c0c99b2e_IsBuiltin(_110140_f.ptr()) || _1c0c99db5_IsAnon(_110140_f))) {
		return true;;
	};
	return _1c0d3954d_fnEnvironment(_self_, &(_110140_f), jule::__new_closure<jule::Bool,jule::Ptr<_1c0d2b078_Sema>*,jule::Slice<jule::Ptr<_1c0dd7101_TypeAlias>>*>((void*)__jule_anon_1c46cd66e, jule::Ptr<__jule_anon_1c46cd66e_ctx>::make(__jule_anon_1c46cd66e_ctx{._110140_f=_110140_f,._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c46cd66e_ctx_handler));;
}



inline jule::Bool _1c0d3a0ed_checkRefValidityForInitExpr(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Bool _113747_leftMut, jule::Ptr<_1c0da69e9_Data>* _113767_d, jule::Ptr<_1c0c49480_Token>* _113782_errorToken) {
	if ((!(_1c0d28718_isValidModelForRef(&((*((*(_113767_d))))._field_Model))))) {
		_1c0d2dbb3_pushErr(_self_.ptr(), (*(_113782_errorToken)), jule::Str::lit("references requires variable based expression for assignment", 60), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_113747_leftMut && (!((*((*(_113767_d))))._field_Mutable)))) {
		_1c0d2dbb3_pushErr(_self_, (*(_113782_errorToken)), jule::Str::lit("mutable reference cannot point to immutable data", 48), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1c0d3a43e_isMutRiskyStruct(_1c0d2b078_Sema* _self_, jule::Ptr<_1c0c83552_StructIns>* _115432_s) {
	{
		auto expr = &((*((*(_115432_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c46d8080:;
		if (it != expr_end) {
			jule::Ptr<_1c0c829a2_FieldIns> *_115516_f = it;
			{
				if ((((*((*((*(_115516_f))))._field_Decl))._field_Mutable && _1c0dd9774_Mutable((*(*(_115516_f)).alloc)._field_Kind.ptr())) && _1c0d2e422_isAccessibleDefine(_self_, (*(*(*(_115516_f)).alloc)._field_Decl.alloc)._field_Public, (*(*(*(_115516_f)).alloc)._field_Decl.alloc)._field_Token))) {
					return true;;
				};
			}
			_iter_next_1c46d8080:;
			++it;
			goto _iter_begin_1c46d8080;
		}
		_iter_end_1c46d8080:;
	};
	return false;;
}



inline jule::Bool _1c0d3aa5a_checkValidityForInitExpr(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Bool _118144_leftMut, jule::Bool _118159_leftRef, jule::Ptr<_1c0dd7de3_TypeKind>* _118210_leftKind, jule::Ptr<_1c0da69e9_Data>* _118236_d, jule::Ptr<_1c0c49480_Token>* _118251_errorToken) {
	if ((_118144_leftMut && (!((*((*(_118236_d))))._field_Mutable)))) {
		if (_1c0dd9774_Mutable((*((*(_118236_d))))._field_Kind.ptr())) {
			_1c0d2dbb3_pushErr(_self_.ptr(), (*(_118251_errorToken)), jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*((*(_118236_d))))._field_Kind), &__jule_any_type4)}));
			return false;;
		};
		jule::Ptr<_1c0c83552_StructIns> _119013_s = _1c0ddbab7_Struct((*((*(_118236_d))))._field_Kind);;
		if (((_119013_s != nullptr) && _1c0d3a43e_isMutRiskyStruct(_self_, &(_119013_s)))) {
			_1c0d2dbb3_pushErr(_self_, (*(_118251_errorToken)), jule::Str::lit("struct @ cannot copied due to field which is stores mutable data", 64), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*((*(_118236_d))))._field_Kind), &__jule_any_type4)}));
			return false;;
		};
	};
	if (_118159_leftRef) {
		if ((!(_1c0d3a0ed_checkRefValidityForInitExpr(_self_, _118144_leftMut, _118236_d, _118251_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1c0d90461_assignTypeChecker> _120113_atc = jule::new_ptr<_1c0d90461_assignTypeChecker>(_1c0d90461_assignTypeChecker{._field_s=_self_, ._field_d=(*(_118236_d)), ._field_errorToken=(*(_118251_errorToken))});;
	return _1c0d90b7b_checkValidity(_120113_atc.ptr());;
}



inline jule::Bool _1c0d3ae56_checkTypeAliasDeclKind(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0dd7101_TypeAlias>* _120947_ta, jule::Trait<_1c0e079d4_Lookup> _120967_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c0da1681_SymbolTable> _121013_old = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1c0d2d795_setCurrentFile(_self_, _121013_old);
	});;
	if (((*((*(_120947_ta))))._field_Token != nullptr)) {
		jule::Ptr<_1c0da1681_SymbolTable> _121517_file = _1c0d29cbe_findFile(&((*_self_.alloc)._field_files), &((*(*((*(_120947_ta))))._field_Token.alloc)._field_File));;
		if ((_121517_file != nullptr)) {
			_1c0d2d795_setCurrentFile(_self_, _121517_file);
		};
	};
	__jule_func_result=_1c0d341a2_checkTypeWithRefers(_self_, &((*((*(_120947_ta))))._field_Kind), _120967_l, nullptr, jule::new_ptr<_1c0de8cb1_referencer>(_1c0de8cb1_referencer{._field_ident=(*((*(_120947_ta))))._field_Ident, ._field_owner=jule::Any((*(_120947_ta)), &__jule_any_type65), ._field_refs=(&((*((*(_120947_ta))))._field_Refers))}));
	if (((__jule_func_result && (_1c0ddb314_Arr((*((*((*(_120947_ta))))._field_Kind))._field_Kind.ptr()) != nullptr)) && (*(_1c0ddb314_Arr((*(*((*(_120947_ta))))._field_Kind.alloc)._field_Kind)))._field_Auto)) {
		_1c0d2dbb3_pushErr(_self_, (*((*(*((*(_120947_ta))))._field_Kind.alloc)._field_Decl))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1c0d3b2b9_checkTypeAliasDecl(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0dd7101_TypeAlias>* _123243_ta, jule::Trait<_1c0e079d4_Lookup> _123263_l) {
	if (_1c0c4bd67_IsIgnoreIdent((*((*(_123243_ta))))._field_Ident)) {
		_1c0d2dbb3_pushErr(_self_.ptr(), (*((*(_123243_ta))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_1c0d3ae56_checkTypeAliasDeclKind(_self_, _123243_ta, _123263_l);
}



inline void _1c0d3b572_checkTypeAliasDeclDup(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0dd7101_TypeAlias>* _124046_ta) {
	if (_1c0c4bd67_IsIgnoreIdent((*((*(_124046_ta))))._field_Ident)) {
		_1c0d2dbb3_pushErr(_self_.ptr(), (*((*(_124046_ta))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1c0d2e8c8_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_124046_ta))), &((*((*(_124046_ta))))._field_Ident), (*((*(_124046_ta))))._field_Binded)) {
		_1c0d2dbb3_pushErr(_self_, (*((*(_124046_ta))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_124046_ta))))._field_Ident, &__jule_any_type4)}));
		_1c0d2e026_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1c0d3ae56_checkTypeAliasDeclKind(_self_, _124046_ta, jule::Trait<_1c0e079d4_Lookup>(_self_, 3));
}



inline jule::Bool _1c0d3b808_checkTypeAliasDecls(jule::Ptr<_1c0d2b078_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c530b356:;
		if (it != expr_end) {
			jule::Ptr<_1c0dd7101_TypeAlias> _125321_ta = *it;
			{
				_1c0d3b572_checkTypeAliasDeclDup(_self_, &(_125321_ta));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c530b356:;
			++it;
			goto _iter_begin_1c530b356;
		}
		_iter_end_1c530b356:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1c5337dbb_checkEnumItemsDup(_1c0d2b078_Sema* _self_, jule::Slice<jule::Ptr<_1c0caa711_EnumItem>> _126439_items) {
	{
		auto expr = &(_126439_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c53392da:;
		if (it != expr_end) {
			jule::Ptr<_1c0caa711_EnumItem> *_126516_item = it;
			{
				if (((*((*(_126516_item))))._field_Ident).empty()) {
					goto _iter_next_1c53392da;
				} else if (_1c0c4bd67_IsIgnoreIdent((*((*(_126516_item))))._field_Ident)) {
					_1c0d2dbb3_pushErr(_self_, (*(*(_126516_item)).alloc)._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_126439_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c533a396:;
						if (it != expr_end) {
							jule::Ptr<_1c0caa711_EnumItem> *_127124_citem = it;
							{
								if (((*(_126516_item)) == (*(_127124_citem)))) {
									goto _iter_end_1c533a396;
								} else if (((*((*(_126516_item))))._field_Ident == (*((*(_127124_citem))))._field_Ident)) {
									_1c0d2dbb3_pushErr(_self_, (*(*(_126516_item)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_126516_item)).alloc)._field_Ident, &__jule_any_type4)}));
									_1c0d2e026_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1c533a396;
								};
							}
							_iter_next_1c533a396:;
							++it;
							goto _iter_begin_1c533a396;
						}
						_iter_end_1c533a396:;
					};
				};
			}
			_iter_next_1c53392da:;
			++it;
			goto _iter_begin_1c53392da;
		}
		_iter_end_1c53392da:;
	};
}

inline void _1c53451c5_checkEnumItemsDup(_1c0d2b078_Sema* _self_, jule::Slice<jule::Ptr<_1c0cac3b1_TypeEnumItem>> _126439_items) {
	{
		auto expr = &(_126439_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c53465c2:;
		if (it != expr_end) {
			jule::Ptr<_1c0cac3b1_TypeEnumItem> *_126516_item = it;
			{
				if (((*((*(_126516_item))))._field_Ident).empty()) {
					goto _iter_next_1c53465c2;
				} else if (_1c0c4bd67_IsIgnoreIdent((*((*(_126516_item))))._field_Ident)) {
					_1c0d2dbb3_pushErr(_self_, (*(*(_126516_item)).alloc)._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_126439_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c534767d:;
						if (it != expr_end) {
							jule::Ptr<_1c0cac3b1_TypeEnumItem> *_127124_citem = it;
							{
								if (((*(_126516_item)) == (*(_127124_citem)))) {
									goto _iter_end_1c534767d;
								} else if (((*((*(_126516_item))))._field_Ident == (*((*(_127124_citem))))._field_Ident)) {
									_1c0d2dbb3_pushErr(_self_, (*(*(_126516_item)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_126516_item)).alloc)._field_Ident, &__jule_any_type4)}));
									_1c0d2e026_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1c534767d;
								};
							}
							_iter_next_1c534767d:;
							++it;
							goto _iter_begin_1c534767d;
						}
						_iter_end_1c534767d:;
					};
				};
			}
			_iter_next_1c53465c2:;
			++it;
			goto _iter_begin_1c53465c2;
		}
		_iter_end_1c53465c2:;
	};
}



inline void _1c0d3bd69_checkEnumItemsStr(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0cab27d_Enum>* _128442_e) {
	jule::Ptr<_1c0da8721_Eval> _128513_eval = _1c0d36160_eval(_self_, jule::Trait<_1c0e079d4_Lookup>(_self_, 3));;
	{
		auto expr = &((*((*(_128442_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c530d0c2:;
		if (it != expr_end) {
			jule::Ptr<_1c0caa711_EnumItem> _128621_item = *it;
			{
				if (_1c0caaab8_AutoExpr(_128621_item.ptr())) {
					(*_128621_item.alloc)._field_Value=jule::new_ptr<_1c0da7b71_Value>(_1c0da7b71_Value{._field_Data=jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Constant=static__2021e6e18_NewStr((*_128621_item.alloc)._field_Ident)})});
					(*((*((*_128621_item.alloc)._field_Value))._field_Data))._field_Model=jule::Any((*(*(*_128621_item.alloc)._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
				} else {
					jule::Ptr<_1c0da69e9_Data> _129521_d = _1c0dc6981_evalExpr(_128513_eval, (*((*(_128621_item))._field_Value))._field_Expr);;
					if ((_129521_d == nullptr)) {
						goto _iter_next_1c530d0c2;
					};
					if ((!(_1c0da7401_IsConst(_129521_d.ptr())))) {
						_1c0d2dbb3_pushErr(_self_, (*((*(*_128621_item.alloc)._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
					};
					_1c0d366c1_checkAssignType(_self_, false, &((*((*((*(_128442_e))))._field_Kind))._field_Kind), &(_129521_d), (*_128621_item.alloc)._field_Token);
					(*(*_128621_item.alloc)._field_Value.alloc)._field_Data=_129521_d;
				};
			}
			_iter_next_1c530d0c2:;
			++it;
			goto _iter_begin_1c530d0c2;
		}
		_iter_end_1c530d0c2:;
	};
}



inline void _1c531884c_checkEnumItemInt(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0da8721_Eval>* _131046_eval, jule::Ptr<_1c0cab27d_Enum>* _131064_e, jule::Ptr<_1c0de09bc_Prim>* _131075_prim, jule::Ptr<_1c0caa711_EnumItem>* _131093_item, jule::U64* _1310115_n) {
	if (_1c0caaab8_AutoExpr((*(_131093_item)).ptr())) {
		(*((*(_131093_item))))._field_Value=jule::new_ptr<_1c0da7b71_Value>(_1c0da7b71_Value{._field_Data=jule::new_ptr<_1c0da69e9_Data>()});
		{
			
{
				_case_begin_1c531ac28:;
				{
					(*((*((*((*(_131093_item))))._field_Value))._field_Data))._field_Constant=static__2021e6885_NewU64((*(_1310115_n)));
				}
			}
			_match_end_1c531b09c:;
		};
		(*((*((*((*(_131093_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*(*((*(_131093_item))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1c0da69e9_Data> _132517_d = _1c0dc6981_evalExpr((*(_131046_eval)), (*((*((*(_131093_item))))._field_Value))._field_Expr);;
		if ((_132517_d == nullptr)) {
			return;;
		};
		if ((!(_1c0da7401_IsConst(_132517_d.ptr())))) {
			_1c0d2dbb3_pushErr(_self_.ptr(), (*((*(*((*(_131093_item))))._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1c0d366c1_checkAssignType(_self_, false, &((*((*((*(_131064_e))))._field_Kind))._field_Kind), &(_132517_d), (*((*(_131093_item))))._field_Token);
		(*(*((*(_131093_item))))._field_Value.alloc)._field_Data=_132517_d;
		{
			
{
				_case_begin_1c531e0c2:;
				{
					(*(_1310115_n))=_2021e7cd7_ReadU64((*((*(*((*(_131093_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1c5321404:;
		};
	};
}

inline void _1c53288d4_checkEnumItemInt(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0da8721_Eval>* _131046_eval, jule::Ptr<_1c0cab27d_Enum>* _131064_e, jule::Ptr<_1c0de09bc_Prim>* _131075_prim, jule::Ptr<_1c0caa711_EnumItem>* _131093_item, jule::I64* _1310115_n) {
	if (_1c0caaab8_AutoExpr((*(_131093_item)).ptr())) {
		(*((*(_131093_item))))._field_Value=jule::new_ptr<_1c0da7b71_Value>(_1c0da7b71_Value{._field_Data=jule::new_ptr<_1c0da69e9_Data>()});
		{
			
{
				_case_begin_1c532b62e:;
				{
					(*((*((*((*(_131093_item))))._field_Value))._field_Data))._field_Constant=static__2021e65bb_NewI64((*(_1310115_n)));
				}
			}
			_match_end_1c532b0bd:;
		};
		(*((*((*((*(_131093_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*(*((*(_131093_item))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1c0da69e9_Data> _132517_d = _1c0dc6981_evalExpr((*(_131046_eval)), (*((*((*(_131093_item))))._field_Value))._field_Expr);;
		if ((_132517_d == nullptr)) {
			return;;
		};
		if ((!(_1c0da7401_IsConst(_132517_d.ptr())))) {
			_1c0d2dbb3_pushErr(_self_.ptr(), (*((*(*((*(_131093_item))))._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1c0d366c1_checkAssignType(_self_, false, &((*((*((*(_131064_e))))._field_Kind))._field_Kind), &(_132517_d), (*((*(_131093_item))))._field_Token);
		(*(*((*(_131093_item))))._field_Value.alloc)._field_Data=_132517_d;
		{
			
{
				_case_begin_1c5331623:;
				{
					(*(_1310115_n))=_2021e7a51_ReadI64((*((*(*((*(_131093_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1c53315ac:;
		};
	};
}



inline void _1c53149d0_checkEnumItemsInt1(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0de09bc_Prim>* _134544_prim, jule::Ptr<_1c0cab27d_Enum>* _134562_e) {
	jule::U64 _134613_max = static_cast<jule::U64>(0LLU);;
	{
		
{
			_case_begin_1c5316707:;
			{
				_134613_max=_2021e183b_MaxU(_1c0de0d0d_Str((*(_134544_prim)).ptr()));
			}
		}
		_match_end_1c531652b:;
	};
	jule::Ptr<_1c0da8721_Eval> _135613_eval = _1c0d36160_eval(_self_, jule::Trait<_1c0e079d4_Lookup>(_self_, 3));;
	jule::U64 _135713_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1c0caa711_EnumItem> _135813_first = (*((*(_134562_e))))._field_Items[0LL];;
	_1c531884c_checkEnumItemInt(_self_, &(_135613_eval), _134562_e, _134544_prim, &(_135813_first), &(_135713_n));
	if (((*((*(_135813_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1c5316020:;
				{
					_135713_n=_2021e8aa7_AsU64((*(*(*_135813_first.alloc)._field_Value.alloc)._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1c5322548:;
		};
	};
	{
		auto expr = (*((*(_134562_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1c5321910:;
		if (it != expr_end) {
			jule::Ptr<_1c0caa711_EnumItem> _137021_item = *it;
			{
				if (((_1c0caaab8_AutoExpr(_137021_item.ptr()) && (_135713_n > 0LLU)) && ((_134613_max - _135713_n) <= 0LLU))) {
					_1c0d2dbb3_pushErr(_self_, (*_137021_item.alloc)._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1c5321910;
				};
				(_135713_n)++;
				_1c531884c_checkEnumItemInt(_self_, &(_135613_eval), _134562_e, _134544_prim, &(_137021_item), &(_135713_n));
			}
			_iter_next_1c5321910:;
			++it;
			goto _iter_begin_1c5321910;
		}
		_iter_end_1c5321910:;
	};
}

inline void _1c5314dba_checkEnumItemsInt1(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0de09bc_Prim>* _134544_prim, jule::Ptr<_1c0cab27d_Enum>* _134562_e) {
	jule::I64 _134613_max = static_cast<jule::I64>(0LL);;
	{
		
{
			_case_begin_1c532677d:;
			{
				_134613_max=_2021e1572_MaxI(_1c0de0d0d_Str((*(_134544_prim)).ptr()));
			}
		}
		_match_end_1c532642b:;
	};
	jule::Ptr<_1c0da8721_Eval> _135613_eval = _1c0d36160_eval(_self_, jule::Trait<_1c0e079d4_Lookup>(_self_, 3));;
	jule::I64 _135713_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_1c0caa711_EnumItem> _135813_first = (*((*(_134562_e))))._field_Items[0LL];;
	_1c53288d4_checkEnumItemInt(_self_, &(_135613_eval), _134562_e, _134544_prim, &(_135813_first), &(_135713_n));
	if (((*((*(_135813_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1c5329363:;
				{
					_135713_n=_2021e8821_AsI64((*(*(*_135813_first.alloc)._field_Value.alloc)._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1c53277c3:;
		};
	};
	{
		auto expr = (*((*(_134562_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1c53331b3:;
		if (it != expr_end) {
			jule::Ptr<_1c0caa711_EnumItem> _137021_item = *it;
			{
				if (((_1c0caaab8_AutoExpr(_137021_item.ptr()) && (_135713_n > 0LL)) && ((_134613_max - _135713_n) <= 0LL))) {
					_1c0d2dbb3_pushErr(_self_, (*_137021_item.alloc)._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1c53331b3;
				};
				(_135713_n)++;
				_1c53288d4_checkEnumItemInt(_self_, &(_135613_eval), _134562_e, _134544_prim, &(_137021_item), &(_135713_n));
			}
			_iter_next_1c53331b3:;
			++it;
			goto _iter_begin_1c53331b3;
		}
		_iter_end_1c53331b3:;
	};
}



inline void _1c0d3ca18_checkEnumItemsInt(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0cab27d_Enum>* _138042_e) {
	jule::Ptr<_1c0de09bc_Prim> _13819_prim = _1c0dda544_Prim((*((*((*(_138042_e))))._field_Kind))._field_Kind.ptr());;
	{
		
		if (_2021e4e38_IsSigInt((*(_13819_prim))._field_Kind)) {
			_case_begin_1c5314606:;
			{
				_1c5314dba_checkEnumItemsInt1(_self_, &(_13819_prim), _138042_e);
			}
		}
		else {
			_case_begin_1c531424e:;
			{
				_1c53149d0_checkEnumItemsInt1(_self_, &(_13819_prim), _138042_e);
			}
		}
		_match_end_1c53141d8:;
	};
}



inline void _1c0d3ccc1_checkEnumDecl(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0cab27d_Enum>* _139038_e) {
	if (_1c0c4bd67_IsIgnoreIdent((*((*(_139038_e))))._field_Ident)) {
		_1c0d2dbb3_pushErr(_self_.ptr(), (*((*(_139038_e))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1c0d2e8c8_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_139038_e))), &((*((*(_139038_e))))._field_Ident), false)) {
		_1c0d2dbb3_pushErr(_self_, (*((*(_139038_e))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_139038_e))))._field_Ident, &__jule_any_type4)}));
		_1c0d2e026_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_139038_e))))._field_Items.len() == 0LL)) {
		_1c0d2dbb3_pushErr(_self_.ptr(), (*((*(_139038_e))))._field_Token, jule::Str::lit("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*((*(_139038_e))))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	_1c5337dbb_checkEnumItemsDup(_self_, (*((*(_139038_e))))._field_Items);
	if (((*((*(_139038_e))))._field_Kind != nullptr)) {
		if ((!(_1c0d34834_checkType(_self_, &((*((*(_139038_e))))._field_Kind), jule::Trait<_1c0e079d4_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		(*((*(_139038_e))))._field_Kind=(*(_1c0ecc306_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	jule::Ptr<_1c0de09bc_Prim> _141413_t = _1c0dda544_Prim((*((*((*(_139038_e))))._field_Kind))._field_Kind.ptr());;
	if ((_141413_t == nullptr)) {
		_1c0d2dbb3_pushErr(_self_, (*((*(_139038_e))))._field_Token, jule::Str::lit("invalid type source", 19), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1c0de3e54_IsStr(_141413_t.ptr())) {
			_case_begin_1c533ec19:;
			{
				_1c0d3bd69_checkEnumItemsStr(_self_, _139038_e);
			}
		}
		else if (_2021e5510_IsInt(_1c0de0d0d_Str(_141413_t.ptr()))) {
			_case_begin_1c533e90b:;
			{
				_1c0d3ca18_checkEnumItemsInt(_self_, _139038_e);
			}
		}
		else {
			_case_begin_1c533e895:;
			{
				_1c0d2dbb3_pushErr(_self_, (*((*(_139038_e))))._field_Token, jule::Str::lit("invalid type source", 19), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c533e004:;
	};
}



inline void _1c0d3d079_checkTypeEnumDecl(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0cac988_TypeEnum>* _143142_e) {
	if (_1c0c4bd67_IsIgnoreIdent((*((*(_143142_e))))._field_Ident)) {
		_1c0d2dbb3_pushErr(_self_.ptr(), (*((*(_143142_e))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1c0d2e8c8_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_143142_e))), &((*((*(_143142_e))))._field_Ident), false)) {
		_1c0d2dbb3_pushErr(_self_, (*((*(_143142_e))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_143142_e))))._field_Ident, &__jule_any_type4)}));
		_1c0d2e026_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_143142_e))))._field_Items.len() == 0LL)) {
		_1c0d2dbb3_pushErr(_self_.ptr(), (*((*(_143142_e))))._field_Token, jule::Str::lit("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*((*(_143142_e))))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	_1c53451c5_checkEnumItemsDup(_self_, (*((*(_143142_e))))._field_Items);
	{
		auto expr = &((*((*(_143142_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5346160:;
		if (it != expr_end) {
			jule::Ptr<_1c0cac3b1_TypeEnumItem> _144521_item = *it;
			{
				if (((*(_144521_item))._field_Kind == nullptr)) {
					_1c0d2dbb3_pushErr(_self_, (*_144521_item.alloc)._field_Token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					goto _iter_next_1c5346160;
				};
				jule::Bool _145013_ok = _1c0d34834_checkType(_self_, &((*_144521_item.alloc)._field_Kind), jule::Trait<_1c0e079d4_Lookup>(_self_, 3));;
				if ((!(_145013_ok))) {
					goto _iter_next_1c5346160;
				};
				jule::Ptr<_1c0de09bc_Prim> _145413_p = _1c0dda544_Prim((*((*_144521_item.alloc)._field_Kind))._field_Kind.ptr());;
				if (((_145413_p != nullptr) && _1c0de41da_IsAny(_145413_p))) {
					_1c0d2dbb3_pushErr(_self_, (*_144521_item.alloc)._field_Token, jule::Str::lit("the <any> type is not allowed for type-enum declarations", 56), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1c5346160:;
			++it;
			goto _iter_begin_1c5346160;
		}
		_iter_end_1c5346160:;
	};
	if (((*((*(_143142_e))))._field_Items.len() == 1LL)) {
		jule::Ptr<_1c0cac3b1_TypeEnumItem> _146017_item = (*((*(_143142_e))))._field_Items[0LL];;
		_1c0dd7de3_TypeKind _146113_tk = _1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>((*(_143142_e)), 4)};;
		if ((((*((*(_146017_item))._field_Kind))._field_Kind != nullptr) && _1c0dd85ec_Equal((*((*_146017_item.alloc)._field_Kind))._field_Kind, ((jule::Ptr<_1c0dd7de3_TypeKind>)((&(_146113_tk))))))) {
			_1c0d2dbb3_pushErr(_self_, (*_146017_item.alloc)._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_1c0caccc9_Str((*(_143142_e)).ptr()), &__jule_any_type4)}));
		};
	};
}



inline jule::Bool _1c0d3d310_checkEnumDecls(jule::Ptr<_1c0d2b078_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5351467:;
		if (it != expr_end) {
			jule::Ptr<_1c0cab27d_Enum> _147221_e = *it;
			{
				_1c0d3ccc1_checkEnumDecl(_self_, &(_147221_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c5351467:;
			++it;
			goto _iter_begin_1c5351467;
		}
		_iter_end_1c5351467:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c0d3d596_checkTypeEnumDecls(jule::Ptr<_1c0d2b078_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5352b1c:;
		if (it != expr_end) {
			jule::Ptr<_1c0cac988_TypeEnum> _148421_e = *it;
			{
				_1c0d3d079_checkTypeEnumDecl(_self_, &(_148421_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c5352b1c:;
			++it;
			goto _iter_begin_1c5352b1c;
		}
		_iter_end_1c5352b1c:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c0d3d8d7_checkDeclGenerics(_1c0d2b078_Sema* _self_, jule::Slice<jule::Ptr<_1c0c6bb45_GenericDecl>>* _149437_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _149437_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c53540c4:;
		if (it != expr_end) {
			jule::I64 _149613_i = it - expr->begin();
			jule::Ptr<_1c0c6bb45_GenericDecl> *_149616_g = it;
			{
				if (_1c0c4bd67_IsIgnoreIdent((*((*(_149616_g))))._field_Ident)) {
					_1c0d2dbb3_pushErr(_self_, (*(*(_149616_g)).alloc)._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1c53540c4;
				};
				_julec_label_1c5355812:;
				{
					auto expr = _149437_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c5355911:;
					if (it != expr_end) {
						jule::I64 _150517_j = it - expr->begin();
						jule::Ptr<_1c0c6bb45_GenericDecl> *_150520_ct = it;
						{
							{
								
								if ((_150517_j >= _149613_i)) {
									_case_begin_1c5356538:;
									{
										goto _iter_end_1c5355911;
									}
								}
								else if (((*(*(_149616_g)).alloc)._field_Ident == (*((*(_150520_ct))))._field_Ident)) {
									_case_begin_1c53565c1:;
									{
										_1c0d2dbb3_pushErr(_self_, (*(*(_149616_g)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_149616_g)).alloc)._field_Ident, &__jule_any_type4)}));
										_1c0d2e026_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1c5355911;
									}
								}
								_match_end_1c5356439:;
							};
						}
						_iter_next_1c5355911:;
						++it;
						_150517_j++;
						goto _iter_begin_1c5355911;
					}
					_iter_end_1c5355911:;
				};
			}
			_iter_next_1c53540c4:;
			++it;
			_149613_i++;
			goto _iter_begin_1c53540c4;
		}
		_iter_end_1c53540c4:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c0d3dc28_checkFnDeclParamsDup(_1c0d2b078_Sema* _self_, jule::Ptr<_1c0c95795_Fn>* _152140_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_1c5358848:;
	{
		auto expr = &((*((*(_152140_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5358b34:;
		if (it != expr_end) {
			jule::I64 _152413_i = it - expr->begin();
			jule::Ptr<_1c0c93cc1_Param> *_152416_p = it;
			{
				{
					auto expr = &((*((*(_152140_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c5359816:;
					if (it != expr_end) {
						jule::Ptr<_1c0c6bb45_GenericDecl> *_152620_g = it;
						{
							if (((*((*(_152416_p))))._field_Ident == (*((*(_152620_g))))._field_Ident)) {
								__jule_func_result=false;
								_1c0d2dbb3_pushErr(_self_, (*(*(_152416_p)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_152416_p)).alloc)._field_Ident, &__jule_any_type4)}));
								_1c0d2e026_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								goto _iter_next_1c5358b34;
							};
						}
						_iter_next_1c5359816:;
						++it;
						goto _iter_begin_1c5359816;
					}
					_iter_end_1c5359816:;
				};
				_julec_label_1c535b153:;
				{
					auto expr = &((*((*(_152140_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c5359cde:;
					if (it != expr_end) {
						jule::I64 _153617_j = it - expr->begin();
						jule::Ptr<_1c0c93cc1_Param> *_153620_jp = it;
						{
							{
								
								if ((_153617_j >= _152413_i)) {
									_case_begin_1c535c110:;
									{
										goto _iter_end_1c5359cde;
									}
								}
								else if (_1c0c4bd67_IsIgnoreIdent((*(*(_152416_p)).alloc)._field_Ident) || _1c0c4bd67_IsIgnoreIdent((*((*(_153620_jp))))._field_Ident) || _1c0c4c131_IsAnonIdent((*(*(_152416_p)).alloc)._field_Ident) || _1c0c4c131_IsAnonIdent((*(*(_153620_jp)).alloc)._field_Ident)) {
									_case_begin_1c535c198:;
									{
										goto _iter_end_1c5359cde;
									}
								}
								else if (((*(*(_152416_p)).alloc)._field_Ident == (*((*(_153620_jp))))._field_Ident)) {
									_case_begin_1c535c20e:;
									{
										__jule_func_result=false;
										_1c0d2dbb3_pushErr(_self_, (*(*(_152416_p)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_152416_p)).alloc)._field_Ident, &__jule_any_type4)}));
										_1c0d2e026_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_next_1c5358b34;
									}
								}
								_match_end_1c535bebc:;
							};
						}
						_iter_next_1c5359cde:;
						++it;
						_153617_j++;
						goto _iter_begin_1c5359cde;
					}
					_iter_end_1c5359cde:;
				};
			}
			_iter_next_1c5358b34:;
			++it;
			_152413_i++;
			goto _iter_begin_1c5358b34;
		}
		_iter_end_1c5358b34:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c0d3e069_checkFnDeclResultDup(_1c0d2b078_Sema* _self_, jule::Ptr<_1c0c95795_Fn>* _155840_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1c0c95c18_IsVoid((*(_155840_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*(*((*(_155840_f))))._field_Result.alloc)._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5360c07:;
		if (it != expr_end) {
			jule::I64 _156513_i = it - expr->begin();
			jule::Ptr<_1c0c49480_Token> *_156516_v = it;
			{
				if ((_1c0c4bd67_IsIgnoreIdent((*((*(_156516_v))))._field_Kind) || _1c0c4c131_IsAnonIdent((*(*(_156516_v)).alloc)._field_Kind))) {
					goto _iter_next_1c5360c07;
				};
				{
					auto expr = &((*((*(_155840_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c536229c:;
					if (it != expr_end) {
						jule::Ptr<_1c0c6bb45_GenericDecl> *_157020_g = it;
						{
							if (((*(*(_156516_v)).alloc)._field_Kind == (*((*(_157020_g))))._field_Ident)) {
								goto _julec_label_1c5366108;
							};
						}
						_iter_next_1c536229c:;
						++it;
						goto _iter_begin_1c536229c;
					}
					_iter_end_1c536229c:;
				};
				{
					auto expr = &((*((*(_155840_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c5363710:;
					if (it != expr_end) {
						jule::Ptr<_1c0c93cc1_Param> *_157620_p = it;
						{
							if (((*(*(_156516_v)).alloc)._field_Kind == (*((*(_157620_p))))._field_Ident)) {
								goto _julec_label_1c5366108;
							};
						}
						_iter_next_1c5363710:;
						++it;
						goto _iter_begin_1c5363710;
					}
					_iter_end_1c5363710:;
				};
				_julec_label_1c536449c:;
				{
					auto expr = &((*((*((*(_155840_f))))._field_Result))._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c5364e5e:;
					if (it != expr_end) {
						jule::I64 _158417_j = it - expr->begin();
						jule::Ptr<_1c0c49480_Token> *_158420_jv = it;
						{
							{
								
								if ((_158417_j >= _156513_i)) {
									_case_begin_1c53659ba:;
									{
										goto _iter_end_1c5364e5e;
									}
								}
								else if (((*((*(_158420_jv))))._field_Kind == (*(*(_156516_v)).alloc)._field_Kind)) {
									_case_begin_1c5365a53:;
									{
										goto _julec_label_1c5366108;
									}
								}
								_match_end_1c53658bb:;
							};
						}
						_iter_next_1c5364e5e:;
						++it;
						_158417_j++;
						goto _iter_begin_1c5364e5e;
					}
					_iter_end_1c5364e5e:;
				};
				goto _iter_next_1c5360c07;
				_julec_label_1c5366108:;
				_1c0d2dbb3_pushErr(_self_, (*(_156516_v)), jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_156516_v)).alloc)._field_Kind, &__jule_any_type4)}));
				_1c0d2e026_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1c5360c07:;
			++it;
			_156513_i++;
			goto _iter_begin_1c5360c07;
		}
		_iter_end_1c5360c07:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c0d3e3aa_checkFnVariadicParam(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0c95795_Fn>* _160345_f) {
	if (((*((*(_160345_f))))._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_1c0c93cc1_Param> _160713_param = (*((*(_160345_f))))._field_Params[((*((*(_160345_f))))._field_Params.len() - 1LL)];;
	if (((*(_160713_param))._field_Variadic && (*_160713_param.alloc)._field_Reference)) {
		_1c0d2dbb3_pushErr(_self_.ptr(), (*_160713_param.alloc)._field_Token, jule::Str::lit("variadic storage cannot be reference", 36), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _1c0d3e663_checkFnDeclPrototype(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0c95795_Fn>* _161645_f) {
	if (((*((*(_161645_f))))._field_Exceptional && (*((*(_161645_f))))._field_Binded)) {
		_1c0d2dbb3_pushErr(_self_.ptr(), (*((*(_161645_f))))._field_Token, jule::Str::lit("binded defines cannot be exceptional", 36), jule::Slice<jule::Any>());
		return;;
	};
	if ((*((*(_161645_f))))._field_Exceptional) {
		if (_1c0c96235_IsEntryPoint((*(_161645_f)).ptr())) {
			_1c0d2dbb3_pushErr(_self_, (*((*(_161645_f))))._field_Token, jule::Str::lit("entry point cannot be exceptional", 33), jule::Slice<jule::Any>());
		} else if (_1c0c964bb_IsInit((*(_161645_f)).ptr())) {
			_1c0d2dbb3_pushErr(_self_, (*((*(_161645_f))))._field_Token, jule::Str::lit("initializer function cannot be exceptional", 42), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1c0d3d8d7_checkDeclGenerics(_self_, &((*((*(_161645_f))))._field_Generics))))) {
			_case_begin_1c536d088:;
		}
		else if ((!(_1c0d3dc28_checkFnDeclParamsDup(_self_, _161645_f)))) {
			_case_begin_1c536d0ee:;
		}
		else if ((!(_1c0d3e069_checkFnDeclResultDup(_self_, _161645_f)))) {
			_case_begin_1c536d165:;
		}
		else if ((!(_1c0d3e3aa_checkFnVariadicParam(_self_, _161645_f)))) {
			_case_begin_1c536d1cb:;
		}
		_match_end_1c536b66e:;
	};
}



inline jule::Bool _1c0d3eb19_catchTraitInheritCycle(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0ca8a72_Trait> _163842_t1, jule::Ptr<_1c0ca8a72_Trait> _163858_t2, _234c76a64_StrBuilder* _163875_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*_163858_t2.alloc)._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c537071c:;
		if (it != expr_end) {
			jule::Ptr<_1c0de00b5_TypeSymbol> _164021_i = *it;
			{
				if (((*(_164021_i))._field_Kind == nullptr)) {
					goto _iter_next_1c537071c;
				};
				jule::Ptr<_1c0ca8a72_Trait> _164417_t3 = _1c0ddbd4d_Trait((*_164021_i.alloc)._field_Kind.ptr());;
				if ((_163842_t1 == _164417_t3)) {
					_1c0d44899_pushCycleError(_self_.ptr(), &((*(_163858_t2))._field_Ident), &((*(_164417_t3))._field_Ident), _163875_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1c0d3eb19_catchTraitInheritCycle(_self_, _163842_t1, _164417_t3, _163875_message)))) {
					_1c0d44899_pushCycleError(_self_, &((*_163858_t2.alloc)._field_Ident), &((*_164417_t3.alloc)._field_Ident), _163875_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c537071c:;
			++it;
			goto _iter_begin_1c537071c;
		}
		_iter_end_1c537071c:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c0d3ee5a__checkTraitDeclInherits(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0ca8a72_Trait>* _165748_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_165748_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5373e90:;
		if (it != expr_end) {
			jule::I64 _165914_i = it - expr->begin();
			jule::Ptr<_1c0de00b5_TypeSymbol> _165921_it = *it;
			{
				if ((!(_1c0d34834_checkType(_self_, &(_165921_it), jule::Trait<_1c0e079d4_Lookup>(_self_, 3))))) {
					__jule_func_result=false;
					goto _iter_next_1c5373e90;
				};
				jule::Ptr<_1c0ca8a72_Trait> _166417_t2 = _1c0ddbd4d_Trait((*(_165921_it))._field_Kind.ptr());;
				if ((_166417_t2 == nullptr)) {
					_1c0d2dbb3_pushErr(_self_, (*((*_165921_it.alloc)._field_Decl))._field_Token, jule::Str::lit("trait @ cannot implement @, type should be trait", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_165748_t))))._field_Ident, &__jule_any_type4),jule::Any(_1c0dd82ab_Str((*_165921_it.alloc)._field_Kind), &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1c5373e90;
				};
				{
					auto expr = &((*((*(_165748_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c53773e4:;
					if (it != expr_end) {
						jule::I64 _167017_j = it - expr->begin();
						jule::Ptr<_1c0de00b5_TypeSymbol> _167020_it2 = *it;
						{
							if ((_167017_j >= _165914_i)) {
								goto _iter_end_1c53773e4;
							};
							if ((((*(_167020_it2))._field_Kind != nullptr) && _1c0dd85ec_Equal((*_165921_it.alloc)._field_Kind, (*_167020_it2.alloc)._field_Kind))) {
								_1c0d2dbb3_pushErr(_self_, (*(*_165921_it.alloc)._field_Decl.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_166417_t2))._field_Ident, &__jule_any_type4)}));
								__jule_func_result=false;
								goto _iter_end_1c53773e4;
							};
						}
						_iter_next_1c53773e4:;
						++it;
						_167017_j++;
						goto _iter_begin_1c53773e4;
					}
					_iter_end_1c53773e4:;
				};
				if (((*(_165748_t)) == _166417_t2)) {
					_1c0d2dbb3_pushErr(_self_, (*(*_165921_it.alloc)._field_Decl.alloc)._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_165748_t))))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
				} else {
					_234c76a64_StrBuilder _168421_message = static__234c76ec6_New(64LL);;
					__jule_func_result=(__jule_func_result && _1c0d3eb19_catchTraitInheritCycle(_self_, (*(_165748_t)), _166417_t2, &(_168421_message)));
					if ((_234c782b3_Len(&_168421_message) > 0LL)) {
						jule::Str _168725_errMsg = _234c77d2e_Str(&_168421_message);;
						_234c7802c_Clear(&_168421_message);
						_1c0d44899_pushCycleError(_self_, &((*((*(_165748_t))))._field_Ident), &((*(_166417_t2))._field_Ident), &(_168421_message));
						_168725_errMsg+=_234c77d2e_Str(&_168421_message);
						_1c0d2dbb3_pushErr(_self_, (*(*_165921_it.alloc)._field_Decl.alloc)._field_Token, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_168725_errMsg, &__jule_any_type4)}));
					};
				};
			}
			_iter_next_1c5373e90:;
			++it;
			_165914_i++;
			goto _iter_begin_1c5373e90;
		}
		_iter_end_1c5373e90:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1c0d40213_checkTraitDeclInherits(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0ca8a72_Trait>* _169847_t) {
	{
		auto expr = &((*((*(_169847_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c537de01:;
		if (it != expr_end) {
			jule::I64 _169914_i = it - expr->begin();
			jule::Ptr<_1c0de00b5_TypeSymbol> _169921_it = *it;
			{
				jule::Ptr<_1c0ca8a72_Trait> _170017_t1 = _1c0ddbd4d_Trait((*(_169921_it))._field_Kind.ptr());;
				{
					auto expr = &((*((*(_169847_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c538040d:;
					if (it != expr_end) {
						jule::I64 _170118_j = it - expr->begin();
						jule::Ptr<_1c0de00b5_TypeSymbol> _170125_it2 = *it;
						{
							if ((_170118_j == _169914_i)) {
								goto _iter_next_1c538040d;
							};
							jule::Ptr<_1c0ca8a72_Trait> _170521_t2 = _1c0ddbd4d_Trait((*(_170125_it2))._field_Kind);;
							{
								auto expr = &((*(_170017_t1))._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c5381b7e:;
								if (it != expr_end) {
									jule::Ptr<_1c0c95795_Fn> _170629_t1m = *it;
									{
										jule::Ptr<_1c0c95795_Fn> _170725_t2m = _1c0ca9721_FindMethod(_170521_t2.ptr(), (*(_170629_t1m))._field_Ident);;
										if ((_170725_t2m == nullptr)) {
											goto _iter_next_1c5381b7e;
										};
										jule::Ptr<_1c0c98699_FnIns> _171121_t1f = _1c0d386e5_getTraitCheckFnKind(_self_, &(_170629_t1m));;
										jule::Ptr<_1c0c98699_FnIns> _171221_t2f = _1c0d386e5_getTraitCheckFnKind(_self_, &(_170725_t2m));;
										if ((!(_1c0c99612_equalTrait(_171121_t1f, &(_171221_t2f))))) {
											_1c0d2dbb3_pushErr(_self_, (*((*_169921_it.alloc)._field_Decl))._field_Token, jule::Str::lit("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87), jule::Slice<jule::Any>::make({jule::Any((*((*(_169847_t))))._field_Ident, &__jule_any_type4),jule::Any((*_170521_t2.alloc)._field_Ident, &__jule_any_type4),jule::Any(_1c0c9a547_GetKindStr(_171121_t1f, true), &__jule_any_type4),jule::Any(_1c0c9a547_GetKindStr(_171221_t2f.ptr(), true), &__jule_any_type4)}));
											return;;
										};
									}
									_iter_next_1c5381b7e:;
									++it;
									goto _iter_begin_1c5381b7e;
								}
								_iter_end_1c5381b7e:;
							};
						}
						_iter_next_1c538040d:;
						++it;
						_170118_j++;
						goto _iter_begin_1c538040d;
					}
					_iter_end_1c538040d:;
				};
			}
			_iter_next_1c537de01:;
			++it;
			_169914_i++;
			goto _iter_begin_1c537de01;
		}
		_iter_end_1c537de01:;
	};
}



inline void _1c0d404bb_checkTraitDeclMethod(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0c95795_Fn>* _172345_f) {
	if (_1c0c4bd67_IsIgnoreIdent((*((*(_172345_f))))._field_Ident)) {
		_1c0d2dbb3_pushErr(_self_.ptr(), (*((*(_172345_f))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1c0c4c131_IsAnonIdent((*((*(_172345_f))))._field_Ident)) {
		_1c0d2dbb3_pushErr(_self_.ptr(), (*((*(_172345_f))))._field_Token, jule::Str::lit("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	(*((*(_172345_f))))._field_sema=_self_;
	_1c0d3e663_checkFnDeclPrototype(_self_, _172345_f);
	jule::Ptr<_1c0c98699_FnIns> _173113_ins = _1c0c97005_instance((*(_172345_f)));;
	_1c0d39b47_reloadFnInsTypes(_self_, _173113_ins);
	(*(_173113_ins))._field_reloaded=true;
	_1c0c97313_appendInstance((*(_172345_f)).ptr(), &(_173113_ins));
}



inline void _1c0d40774_checkTraitDeclMethods(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0ca8a72_Trait>* _173746_t) {
	{
		auto expr = &((*((*(_173746_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5388ca7:;
		if (it != expr_end) {
			jule::I64 _173814_i = it - expr->begin();
			jule::Ptr<_1c0c95795_Fn> _173821_f = *it;
			{
				_1c0d404bb_checkTraitDeclMethod(_self_, &(_173821_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_1c0ca9da3_findMethodInherit((*(_173746_t)).ptr(), &((*(_173821_f))._field_Ident)) != nullptr)) {
					_1c0d2dbb3_pushErr(_self_, (*_173821_f.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_173821_f.alloc)._field_Ident, &__jule_any_type4)}));
					_1c0d2e026_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					goto _iter_next_1c5388ca7;
				};
				_julec_label_1c538a6d2:;
				{
					auto expr = &((*((*(_173746_t))))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c538bcaa:;
					if (it != expr_end) {
						jule::I64 _175417_j = it - expr->begin();
						jule::Ptr<_1c0c95795_Fn> _175420_jf = *it;
						{
							{
								
								if ((_175417_j >= _173814_i)) {
									_case_begin_1c538c816:;
									{
										goto _iter_end_1c538bcaa;
									}
								}
								else if (((*_173821_f.alloc)._field_Ident == (*(_175420_jf))._field_Ident)) {
									_case_begin_1c538c89e:;
									{
										_1c0d2dbb3_pushErr(_self_, (*_173821_f.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_173821_f.alloc)._field_Ident, &__jule_any_type4)}));
										_1c0d2e026_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_end_1c538bcaa;
									}
								}
								_match_end_1c538c717:;
							};
						}
						_iter_next_1c538bcaa:;
						++it;
						_175417_j++;
						goto _iter_begin_1c538bcaa;
					}
					_iter_end_1c538bcaa:;
				};
			}
			_iter_next_1c5388ca7:;
			++it;
			_173814_i++;
			goto _iter_begin_1c5388ca7;
		}
		_iter_end_1c5388ca7:;
	};
}



inline void _1c0d40a2c_checkTraitDecl(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0ca8a72_Trait>* _177339_t) {
	if (_1c0c4bd67_IsIgnoreIdent((*((*(_177339_t))))._field_Ident)) {
		_1c0d2dbb3_pushErr(_self_.ptr(), (*((*(_177339_t))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1c0d2e8c8_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_177339_t))), &((*((*(_177339_t))))._field_Ident), false)) {
		_1c0d2dbb3_pushErr(_self_, (*((*(_177339_t))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_177339_t))))._field_Ident, &__jule_any_type4)}));
		_1c0d2e026_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1c0d40213_checkTraitDeclInherits(_self_, _177339_t);
	_1c0d40774_checkTraitDeclMethods(_self_, _177339_t);
}



inline jule::Bool _1c0d40cb3_checkTraitDecls(jule::Ptr<_1c0d2b078_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5392c17:;
		if (it != expr_end) {
			jule::Ptr<_1c0ca8a72_Trait> _178721_t = *it;
			{
				_1c0d40a2c_checkTraitDecl(_self_, &(_178721_t));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c5392c17:;
			++it;
			goto _iter_begin_1c5392c17;
		}
		_iter_end_1c5392c17:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c0d411ae_checkTraitImplMethods(_1c0d2b078_Sema* _self_, jule::Ptr<_1c0ca8a72_Trait>* _179745_base, jule::Ptr<_1c0cd21d8_Impl>* _179760_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_179760_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c53946ca:;
		if (it != expr_end) {
			jule::Ptr<_1c0c95795_Fn> *_179916_f = it;
			{
				if ((_1c0ca9721_FindMethod((*(_179745_base)).ptr(), (*((*(_179916_f))))._field_Ident) == nullptr)) {
					_1c0d2dbb3_pushErr(_self_, (*(*(_179916_f)).alloc)._field_Token, jule::Str::lit("undefined identifier: trait @ has no define @", 45), jule::Slice<jule::Any>::make({jule::Any((*((*(_179745_base))))._field_Ident, &__jule_any_type4),jule::Any((*(*(_179916_f)).alloc)._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1c53946ca:;
			++it;
			goto _iter_begin_1c53946ca;
		}
		_iter_end_1c53946ca:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c0d415aa_implToStruct(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0c807c4_Struct>* _180837_dest, jule::Ptr<_1c0cd21d8_Impl>* _180857_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_180857_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5396de7:;
		if (it != expr_end) {
			jule::Ptr<_1c0c95795_Fn> _181221_f = *it;
			{
				if (((_1c0c81440_FindMethod((*(_180837_dest)).ptr(), (*(_181221_f))._field_Ident, (*_181221_f.alloc)._field_Statically) != nullptr) || (_1c0c81ac2_FindField((*(_180837_dest)).ptr(), (*_181221_f.alloc)._field_Ident) != nullptr))) {
					_1c0d2dbb3_pushErr(_self_.ptr(), (*_181221_f.alloc)._field_Token, jule::Str::lit("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*((*(_180837_dest))))._field_Ident, &__jule_any_type4),jule::Any((*_181221_f.alloc)._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1c5396de7;
				};
				if ((((*((*(_180837_dest))))._field_Generics.len() > 0LL) && ((*_181221_f.alloc)._field_Generics.len() > 0LL))) {
					{
						auto expr = &((*_181221_f.alloc)._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c5399cda:;
						if (it != expr_end) {
							jule::Ptr<_1c0c6bb45_GenericDecl> _182024_fg = *it;
							{
								{
									auto expr = &((*((*(_180837_dest))))._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1c539a736:;
									if (it != expr_end) {
										jule::Ptr<_1c0c6bb45_GenericDecl> _182128_dg = *it;
										{
											if (((*(_182024_fg))._field_Ident == (*(_182128_dg))._field_Ident)) {
												_1c0d2dbb3_pushErr(_self_, (*_182024_fg.alloc)._field_Token, jule::Str::lit("methods cannot have same generic identifier with owner same time", 64), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1c539a736:;
										++it;
										goto _iter_begin_1c539a736;
									}
									_iter_end_1c539a736:;
								};
							}
							_iter_next_1c5399cda:;
							++it;
							goto _iter_begin_1c5399cda;
						}
						_iter_end_1c5399cda:;
					};
				};
				_1c0d2ec3b_checkDirectives(_self_, &((*_181221_f.alloc)._field_Directives), jule::Any(_181221_f, &__jule_any_type63));
				(*_181221_f.alloc)._field_sema=_self_;
				(*_181221_f.alloc)._field_Owner=(*(_180837_dest));
				{ jule::Slice<jule::Ptr<_1c0c95795_Fn>> &__jule_push_dest = (*((*(_180837_dest))))._field_Methods; __jule_push_dest.push(_181221_f); };
			}
			_iter_next_1c5396de7:;
			++it;
			goto _iter_begin_1c5396de7;
		}
		_iter_end_1c5396de7:;
	};
	{
		auto expr = &((*((*(_180857_ipl))))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c53972c1:;
		if (it != expr_end) {
			jule::Ptr<_1c0d4dde2_Var> _183721_v = *it;
			{
				;
				if (((_1c0c81440_FindMethod((*(_180837_dest)).ptr(), (*(_183721_v))._field_Ident, true) != nullptr) || (_1c0c81781_FindStatic((*(_180837_dest)).ptr(), (*_183721_v.alloc)._field_Ident) != nullptr))) {
					_1c0d2dbb3_pushErr(_self_, (*_183721_v.alloc)._field_Token, jule::Str::lit("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*((*(_180837_dest))))._field_Ident, &__jule_any_type4),jule::Any((*_183721_v.alloc)._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1c53972c1;
				};
				{ jule::Slice<jule::Ptr<_1c0d4dde2_Var>> &__jule_push_dest = (*((*(_180837_dest))))._field_Statics; __jule_push_dest.push(_183721_v); };
			}
			_iter_next_1c53972c1:;
			++it;
			goto _iter_begin_1c53972c1;
		}
		_iter_end_1c53972c1:;
	};
	return __jule_func_result;;
}



inline void _1c0d41863_implTrait(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0cd21d8_Impl>* _185034_decl) {
	jule::Ptr<_1c0dd7de3_TypeKind> _185113_base_t = _1c0d3546c_selectType(_self_, &((*((*(_185034_decl))))._field_Base));;
	if ((_185113_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1c0ca8a72_Trait> _185513_base = _1c0ddbd4d_Trait(_185113_base_t.ptr());;
	if ((_185513_base == nullptr)) {
		_1c0d2dbb3_pushErr(_self_, (*((*((*(_185034_decl))))._field_Base))._field_Token, jule::Str::lit("invalid base type for impl: @", 29), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str(_185113_base_t.ptr()), &__jule_any_type4)}));
		_1c0d2e026_pushSuggestion(_self_, jule::Str::lit("expected trait, use a trait", 27), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c0dd7de3_TypeKind> _186213_destT = _1c0d3546c_selectType(_self_, &((*((*(_185034_decl))))._field_Dest));;
	if ((_186213_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1c0c83552_StructIns> _186613_destS = _1c0ddbab7_Struct(_186213_destT.ptr());;
	if ((_186613_destS == nullptr)) {
		_1c0d2dbb3_pushErr(_self_, (*((*((*(_185034_decl))))._field_Dest))._field_Token, jule::Str::lit("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str(_186213_destT.ptr()), &__jule_any_type4)}));
		_1c0d2e026_pushSuggestion(_self_, jule::Str::lit("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c0c807c4_Struct> _187313_dest = (*(_186613_destS))._field_Decl;;
	if ((_1c0c503ba_Dir((*((*(_187313_dest))._field_Token))._field_File.ptr()) != _1c0c503ba_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1c0d2dbb3_pushErr(_self_, (*(*((*(_185034_decl))))._field_Dest.alloc)._field_Token, jule::Str::lit("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	_1c0d4c5c7_pushImplemented(_185513_base, &(_187313_dest));
	_1c0d4c8b3_pushImplements(&(_187313_dest), _185513_base);
	if (((*((*(_185034_decl))))._field_Statics.len() > 0LL)) {
		_1c0d2dbb3_pushErr(_self_, (*((*((*(_185034_decl))))._field_Statics[0LL]))._field_Token, jule::Str::lit("trait implementations cannot implement static field", 51), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1c0d411ae_checkTraitImplMethods(_self_, &(_185513_base), _185034_decl)))) {
			_case_begin_1c53a98cc:;
		}
		else if ((!(_1c0d415aa_implToStruct(_self_, &(_187313_dest), _185034_decl)))) {
			_case_begin_1c53a9954:;
		}
		_match_end_1c53a8645:;
	};
}



inline void _1c0d41b1b_implStruct(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0cd21d8_Impl>* _189335_decl) {
	jule::Ptr<_1c0dd7de3_TypeKind> _189413_destT = _1c0d3546c_selectType(_self_, &((*((*(_189335_decl))))._field_Dest));;
	if ((_189413_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1c0c83552_StructIns> _189813_destS = _1c0ddbab7_Struct(_189413_destT.ptr());;
	if ((_189813_destS == nullptr)) {
		_1c0d2dbb3_pushErr(_self_, (*((*((*(_189335_decl))))._field_Dest))._field_Token, jule::Str::lit("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str(_189413_destT.ptr()), &__jule_any_type4)}));
		_1c0d2e026_pushSuggestion(_self_, jule::Str::lit("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c0c807c4_Struct> _190513_dest = (*(_189813_destS))._field_Decl;;
	if ((_1c0c503ba_Dir((*((*(_190513_dest))._field_Token))._field_File.ptr()) != _1c0c503ba_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1c0d2dbb3_pushErr(_self_, (*(*((*(_189335_decl))))._field_Dest.alloc)._field_Token, jule::Str::lit("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1c0d415aa_implToStruct(_self_, &(_190513_dest), _189335_decl)))) {
			_case_begin_1c53b05d6:;
		}
		_match_end_1c53b03e9:;
	};
}



inline void _1c0d41dc4_implImpl(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0cd21d8_Impl>* _191733_decl) {
	{
		
		if (_1c0cd25a1_IsTraitImpl((*(_191733_decl)).ptr())) {
			_case_begin_1c53b1142:;
			{
				_1c0d41863_implTrait(_self_, _191733_decl);
			}
		}
		else if (_1c0cd2837_IsStructImpl((*(_191733_decl)).ptr())) {
			_case_begin_1c53b11db:;
			{
				_1c0d41b1b_implStruct(_self_, _191733_decl);
			}
		}
		_match_end_1c53b1032:;
	};
}



inline void _1c0d42237_checkVarDecl(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0d4dde2_Var>* _192837_decl, jule::Trait<_1c0e079d4_Lookup> _192853_l) {
	if (_1c0c4bd67_IsIgnoreIdent((*((*(_192837_decl))))._field_Ident)) {
		_1c0d2dbb3_pushErr(_self_.ptr(), (*((*(_192837_decl))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1c0d4e552_IsTypeInferred((*(_192837_decl)).ptr())) {
		if ((!(_1c0d4e2bb_IsInitialized((*(_192837_decl)).ptr())))) {
			_1c0d2dbb3_pushErr(_self_, (*((*(_192837_decl))))._field_Token, jule::Str::lit("type inferred declarations should have a initializer expression", 63), jule::Slice<jule::Any>());
		};
	} else {
		_1c0d34834_checkType(_self_, &((*((*(_192837_decl))))._field_Kind), _192853_l);
	};
	if ((*((*(_192837_decl))))._field_Reference) {
		if ((*((*(_192837_decl))))._field_Constant) {
			_1c0d2dbb3_pushErr(_self_, (*((*(_192837_decl))))._field_Token, jule::Str::lit("references cannot be constant", 29), jule::Slice<jule::Any>());
		};
		if ((*((*(_192837_decl))))._field_Statically) {
			_1c0d2dbb3_pushErr(_self_, (*((*(_192837_decl))))._field_Token, jule::Str::lit("static variables cannot be reference", 36), jule::Slice<jule::Any>());
		};
	};
	if ((!(_1c0d4e2bb_IsInitialized((*(_192837_decl)).ptr())))) {
		if ((*((*(_192837_decl))))._field_Constant) {
			_1c0d2dbb3_pushErr(_self_, (*((*(_192837_decl))))._field_Token, jule::Str::lit("missing expression for constant variable initialization", 55), jule::Slice<jule::Any>());
		};
		if ((*((*(_192837_decl))))._field_Statically) {
			_1c0d2dbb3_pushErr(_self_, (*((*(_192837_decl))))._field_Token, jule::Str::lit("static variables must be have initialize expression", 51), jule::Slice<jule::Any>());
		};
		if ((*((*(_192837_decl))))._field_Reference) {
			_1c0d2dbb3_pushErr(_self_, (*((*(_192837_decl))))._field_Token, jule::Str::lit("reference variables must be have lvalue initialize expression", 61), jule::Slice<jule::Any>());
		};
	};
}



inline void _1c0d424e0_checkGlobalVarDecl(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0d4dde2_Var>* _196543_decl) {
	if (_1c0d2e8c8_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_196543_decl))), &((*((*(_196543_decl))))._field_Ident), (*((*(_196543_decl))))._field_Binded)) {
		_1c0d2dbb3_pushErr(_self_, (*((*(_196543_decl))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_196543_decl))))._field_Ident, &__jule_any_type4)}));
		_1c0d2e026_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_196543_decl))))._field_Binded && (*((*(_196543_decl))))._field_Constant)) {
		_1c0d2dbb3_pushErr(_self_, (*((*(_196543_decl))))._field_Token, jule::Str::lit("binded variables cannot be constant", 35), jule::Slice<jule::Any>());
	};
	if ((((!((*((*(_196543_decl))))._field_Binded)) && (!((*((*(_196543_decl))))._field_Constant))) && (!((*((*(_196543_decl))))._field_Statically)))) {
		_1c0d2dbb3_pushErr(_self_, (*((*(_196543_decl))))._field_Token, jule::Str::lit("global variables must be static", 31), jule::Slice<jule::Any>());
		_1c0d2e026_pushSuggestion(_self_, jule::Str::lit("use \"static\" keyword to define", 30), jule::Slice<jule::Any>());
	};
	_1c0d2ec3b_checkDirectives(_self_, &((*((*(_196543_decl))))._field_Directives), jule::Any((*(_196543_decl)), &__jule_any_type8));
	_1c0d42237_checkVarDecl(_self_, _196543_decl, jule::Trait<_1c0e079d4_Lookup>(_self_, 3));
}



inline jule::Bool _1c0d42776_checkGlobalDecls(jule::Ptr<_1c0d2b078_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c53be2c6:;
		if (it != expr_end) {
			jule::Ptr<_1c0d4dde2_Var> _198321_decl = *it;
			{
				_1c0d424e0_checkGlobalVarDecl(_self_, &(_198321_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c53be2c6:;
			++it;
			goto _iter_begin_1c53be2c6;
		}
		_iter_end_1c53be2c6:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c0d42b72_checkStructTraitImpl(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0c807c4_Struct>* _199345_strct, jule::Ptr<_1c0ca8a72_Trait>* _199366_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_199366_trt))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c53c0b8a:;
		if (it != expr_end) {
			jule::Ptr<_1c0c95795_Fn> _199421_tf = *it;
			{
				jule::Bool _199517_exist = false;;
				jule::Ptr<_1c0c95795_Fn> _199617_sf = _1c0c81440_FindMethod((*(_199345_strct)).ptr(), (*(_199421_tf))._field_Ident, (*_199421_tf.alloc)._field_Statically);;
				jule::Ptr<_1c0c98699_FnIns> _199713_tfK = _1c0d386e5_getTraitCheckFnKind(_self_, &(_199421_tf));;
				if ((_199617_sf != nullptr)) {
					jule::Ptr<_1c0c98699_FnIns> _199921_sfK = _1c0d386e5_getTraitCheckFnKind(_self_, &(_199617_sf));;
					_199517_exist=_1c0c99612_equalTrait(_199713_tfK, &(_199921_sfK));
				};
				if (_199517_exist) {
					jule::Ptr<_1c0c5dd57_Directive> _200317_d = _1c0dd0391_findDirective(&((*_199617_sf.alloc)._field_Directives), jule::Str::lit("deprecated", 10));;
					if ((_200317_d != nullptr)) {
						_1c0d2dbb3_pushErr(_self_, (*_200317_d.alloc)._field_Tag, jule::Str::lit("trait implementations cannot have deprecated code", 49), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_1c0d2dbb3_pushErr(_self_, (*((*(_199345_strct))))._field_Token, jule::Str::lit("trait @ derived but not implemented define @", 44), jule::Slice<jule::Any>::make({jule::Any((*((*(_199366_trt))))._field_Ident, &__jule_any_type4),jule::Any(_1c0c9a547_GetKindStr(_199713_tfK, true), &__jule_any_type4)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1c53c0b8a:;
			++it;
			goto _iter_begin_1c53c0b8a;
		}
		_iter_end_1c53c0b8a:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c0d42eb3_checkStructImpls(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0c807c4_Struct>* _201741_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_201741_s))))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c53c68c7:;
		if (it != expr_end) {
			jule::Ptr<_1c0ca8a72_Trait> _201921_trt = *it;
			{
				__jule_func_result=(_1c0d42b72_checkStructTraitImpl(_self_, _201741_s, &(_201921_trt)) && __jule_func_result);
			}
			_iter_next_1c53c68c7:;
			++it;
			goto _iter_begin_1c53c68c7;
		}
		_iter_end_1c53c68c7:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1c0d43304_checkStructFields(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0c807c4_Struct>* _202542_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_202542_st))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c53c7d5c:;
		if (it != expr_end) {
			jule::Ptr<_1c0c7c89d_Field> _202721_f = *it;
			{
				(*(_202721_f))._field_Owner=(*(_202542_st));
				{
					auto expr = &((*((*(_202542_st))))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c53c8a72:;
					if (it != expr_end) {
						jule::Ptr<_1c0c7c89d_Field> _202920_cf = *it;
						{
							if ((_202721_f == _202920_cf)) {
								goto _iter_end_1c53c8a72;
							} else if (((*_202721_f.alloc)._field_Ident == (*(_202920_cf))._field_Ident)) {
								_1c0d2dbb3_pushErr(_self_.ptr(), (*_202721_f.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_202721_f.alloc)._field_Ident, &__jule_any_type4)}));
								_1c0d2e026_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1c53c8a72:;
						++it;
						goto _iter_begin_1c53c8a72;
					}
					_iter_end_1c53c8a72:;
				};
			}
			_iter_next_1c53c7d5c:;
			++it;
			goto _iter_begin_1c53c7d5c;
		}
		_iter_end_1c53c7d5c:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1c0d435ac_checkStructDecl(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0c807c4_Struct>* _204240_s) {
	if (_1c0c4bd67_IsIgnoreIdent((*((*(_204240_s))))._field_Ident)) {
		_1c0d2dbb3_pushErr(_self_.ptr(), (*((*(_204240_s))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1c0d2e8c8_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_204240_s))), &((*((*(_204240_s))))._field_Ident), (*((*(_204240_s))))._field_Binded)) {
		_1c0d2dbb3_pushErr(_self_, (*((*(_204240_s))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_204240_s))))._field_Ident, &__jule_any_type4)}));
		_1c0d2e026_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1c0d2ec3b_checkDirectives(_self_, &((*((*(_204240_s))))._field_Directives), jule::Any((*(_204240_s)), &__jule_any_type64));
	{
		
		if ((!(_1c0d3d8d7_checkDeclGenerics(_self_, &((*((*(_204240_s))))._field_Generics))))) {
			_case_begin_1c53cd7d0:;
		}
		else if ((!(_1c0d43304_checkStructFields(_self_, _204240_s)))) {
			_case_begin_1c53cd846:;
		}
		else if ((!(_1c0d42eb3_checkStructImpls(_self_, _204240_s)))) {
			_case_begin_1c53cd8ac:;
		}
		else if ((!(_1c0d441e5_checkFuncDeclsBy(_self_, &((*((*(_204240_s))))._field_Methods))))) {
			_case_begin_1c53cd923:;
		}
		_match_end_1c53cd69d:;
	};
}



inline jule::Bool _1c0d43843_checkStructDecls(jule::Ptr<_1c0d2b078_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c53d0ae0:;
		if (it != expr_end) {
			jule::Ptr<_1c0c807c4_Struct> _206221_s = *it;
			{
				_1c0d435ac_checkStructDecl(_self_, &(_206221_s));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c53d0ae0:;
			++it;
			goto _iter_begin_1c53d0ae0;
		}
		_iter_end_1c53d0ae0:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1c0d43aeb_checkAnonFuncDecl(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0c95795_Fn>* _207242_f) {
	(*((*(_207242_f))))._field_sema=_self_;
	_1c0d3e663_checkFnDeclPrototype(_self_, _207242_f);
}



inline void _1c0d43da4_checkFuncDecl(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0c95795_Fn>* _207738_f) {
	if (_1c0c4bd67_IsIgnoreIdent((*((*(_207738_f))))._field_Ident)) {
		_1c0d2dbb3_pushErr(_self_.ptr(), (*((*(_207738_f))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1c0c96752_IsAnon((*(_207738_f)).ptr())) {
		_1c0d2dbb3_pushErr(_self_.ptr(), (*((*(_207738_f))))._field_Token, jule::Str::lit("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	_1c0d2ec3b_checkDirectives(_self_, &((*((*(_207738_f))))._field_Directives), jule::Any((*(_207738_f)), &__jule_any_type63));
	_1c0d43aeb_checkAnonFuncDecl(_self_, _207738_f);
	if ((((*((*(_207738_f))))._field_Owner == nullptr) && _1c0d2e8c8_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_207738_f))), &((*((*(_207738_f))))._field_Ident), (*((*(_207738_f))))._field_Binded))) {
		if ((*((*(_207738_f))))._field_Ident.equal("init", 4)) {
			jule::Ptr<_1c0c95795_Fn> _208917_init = _1c0d2c60c_FindFn(_self_, jule::Str::lit("init", 4), false);;
			if ((_208917_init != nullptr)) {
				return;;
			};
		};
		_1c0d2dbb3_pushErr(_self_, (*((*(_207738_f))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_207738_f))))._field_Ident, &__jule_any_type4)}));
		_1c0d2e026_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1c0d441e5_checkFuncDeclsBy(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Slice<jule::Ptr<_1c0c95795_Fn>>* _209941_funcs) {
	{
		auto expr = _209941_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c53d7d5b:;
		if (it != expr_end) {
			jule::Ptr<_1c0c95795_Fn> _210021_f = *it;
			{
				_1c0d43da4_checkFuncDecl(_self_, &(_210021_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_1c53d7d5b:;
			++it;
			goto _iter_begin_1c53d7d5b;
		}
		_iter_end_1c53d7d5b:;
	};
	return true;;
}



inline jule::Bool _1c0d4447b_checkFuncDecls(jule::Ptr<_1c0d2b078_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1c0d441e5_checkFuncDeclsBy(_self_, &((*((*_self_.alloc)._field_file))._field_Funcs));
	return __jule_func_result;;
}



inline void _1c0d44899_pushCycleError(_1c0d2b078_Sema* _self_, jule::Str* _211530_st1, jule::Str* _211541_st2, _234c76a64_StrBuilder* _211556_message) {
	;
	jule::Str _21179_refersTo = _21b8c5951_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_211530_st1)), &__jule_any_type4),jule::Any((*(_211541_st2)), &__jule_any_type4)}));;
	jule::Str _21189_m = _234c77d2e_Str(_211556_message);;
	_234c77537_WriteStr(_211556_message, _21b86a264_Repeat(jule::Str::lit(" ", 1), 7LL));
	_234c77537_WriteStr(_211556_message, _21179_refersTo);
	_234c777e0_WriteByte(_211556_message, '\n');
	_234c77537_WriteStr(_211556_message, _21189_m);
}



inline void _1c0d4504d_checkPackageDecls(jule::Ptr<_1c0d2b078_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4060c49:;
		if (it != expr_end) {
			jule::Ptr<_1c0da1681_SymbolTable> _214221_f = *it;
			{
				_1c0d2d795_setCurrentFile(_self_.ptr(), _214221_f);
				if ((!(_1c0d3b808_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1c4060c49:;
			++it;
			goto _iter_begin_1c4060c49;
		}
		_iter_end_1c4060c49:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c42ac160:;
		if (it != expr_end) {
			jule::Ptr<_1c0da1681_SymbolTable> _214921_f = *it;
			{
				_1c0d2d795_setCurrentFile(_self_, _214921_f);
				if ((!(_1c0d40cb3_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1c42ac160:;
			++it;
			goto _iter_begin_1c42ac160;
		}
		_iter_end_1c42ac160:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c42ad10b:;
		if (it != expr_end) {
			jule::Ptr<_1c0da1681_SymbolTable> _215621_f = *it;
			{
				_1c0d2d795_setCurrentFile(_self_, _215621_f);
				if ((!(_1c0d42776_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1c42ad10b:;
			++it;
			goto _iter_begin_1c42ad10b;
		}
		_iter_end_1c42ad10b:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c42ae140:;
		if (it != expr_end) {
			jule::Ptr<_1c0da1681_SymbolTable> _216321_f = *it;
			{
				_1c0d2d795_setCurrentFile(_self_, _216321_f);
				{
					
					if ((!(_1c0d4447b_checkFuncDecls(_self_)))) {
						_case_begin_1c42b074b:;
					}
					else if ((!(_1c0d43843_checkStructDecls(_self_)))) {
						_case_begin_1c42b07d4:;
					}
					else {
						_case_begin_1c42b01a7:;
						{
							goto _iter_next_1c42ae140;
						}
					}
					_match_end_1c42b06b3:;
				};
				return;;
			}
			_iter_next_1c42ae140:;
			++it;
			goto _iter_begin_1c42ae140;
		}
		_iter_end_1c42ae140:;
	};
}



inline void _1c0d453b1_checkDataForTypeInference(_1c0d2b078_Sema* _self_, jule::Ptr<_1c0da69e9_Data>* _217545_d, jule::Ptr<_1c0c49480_Token>* _217556_err_token) {
	{
		
		if (_1c0da6dd4_IsNil((*(_217545_d)).ptr())) {
			_case_begin_1c42b1890:;
			{
				_1c0d2dbb3_pushErr(_self_, (*(_217556_err_token)), jule::Str::lit("nil is cannot use with type inferred definitions", 48), jule::Slice<jule::Any>());
			}
		}
		else if (_1c0da716a_IsVoid((*(_217545_d)).ptr())) {
			_case_begin_1c42b1939:;
			{
				_1c0d2dbb3_pushErr(_self_, (*(_217556_err_token)), jule::Str::lit("void data is cannot use for type inferred definitions", 53), jule::Slice<jule::Any>());
			}
		}
		else if ((*((*((*(_217545_d))))._field_Kind))._field_Variadic) {
			_case_begin_1c42b19a0:;
			{
				_1c0d2dbb3_pushErr(_self_, (*(_217556_err_token)), jule::Str::lit("invalid expression for type inference", 37), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c42b176e:;
	};
}



inline void _1c0d45669_checkVarValue(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0d4dde2_Var>* _218738_v) {
	if (_1c0d4e552_IsTypeInferred((*(_218738_v)).ptr())) {
		(*((*(_218738_v))))._field_Kind=jule::new_ptr<_1c0de00b5_TypeSymbol>(_1c0de00b5_TypeSymbol{._field_Kind=(*((*((*((*(_218738_v))))._field_Value))._field_Data))._field_Kind});
		_1c0d453b1_checkDataForTypeInference(_self_.ptr(), &((*(*((*(_218738_v))))._field_Value.alloc)._field_Data), &((*((*(*((*(_218738_v))))._field_Value.alloc)._field_Expr))._field_Token));
		_1c0d3aa5a_checkValidityForInitExpr(_self_, (*((*(_218738_v))))._field_Mutable, (*((*(_218738_v))))._field_Reference, &((*((*((*(_218738_v))))._field_Kind))._field_Kind), &((*(*((*(_218738_v))))._field_Value.alloc)._field_Data), &((*(*(*((*(_218738_v))))._field_Value.alloc)._field_Expr.alloc)._field_Token));
	} else {
		jule::Ptr<_1c0de72dc_Arr> _220017_arr = _1c0ddb314_Arr((*((*((*(_218738_v))))._field_Kind))._field_Kind.ptr());;
		if ((_220017_arr != nullptr)) {
			if ((*_220017_arr.alloc)._field_Auto) {
				jule::Ptr<_1c0de72dc_Arr> _220321_dataArr = _1c0ddb314_Arr((*((*((*((*(_218738_v))))._field_Value))._field_Data))._field_Kind.ptr());;
				if ((_220321_dataArr != nullptr)) {
					(*_220017_arr.alloc)._field_N=(*_220321_dataArr.alloc)._field_N;
				};
			};
		};
		if (_1c0d366c1_checkAssignType(_self_, (*((*(_218738_v))))._field_Reference, &((*(*((*(_218738_v))))._field_Kind.alloc)._field_Kind), &((*(*((*(_218738_v))))._field_Value.alloc)._field_Data), (*((*(*((*(_218738_v))))._field_Value.alloc)._field_Expr))._field_Token)) {
			_1c0d3aa5a_checkValidityForInitExpr(_self_, (*((*(_218738_v))))._field_Mutable, (*((*(_218738_v))))._field_Reference, &((*(*((*(_218738_v))))._field_Kind.alloc)._field_Kind), &((*(*((*(_218738_v))))._field_Value.alloc)._field_Data), &((*(*(*((*(_218738_v))))._field_Value.alloc)._field_Expr.alloc)._field_Token));
		};
	};
	if (((*((*(_218738_v))))._field_Reference && (!(_1c0e043a4_isValidForRef(&((*((*((*(_218738_v))))._field_Kind))._field_Kind)))))) {
		_1c0d2dbb3_pushErr(_self_.ptr(), (*((*(_218738_v))))._field_Token, jule::Str::lit("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*(*((*(_218738_v))))._field_Kind.alloc)._field_Kind.ptr()), &__jule_any_type4)}));
	};
	if ((*((*(_218738_v))))._field_Constant) {
		if (((!(_1c0da7401_IsConst((*((*((*(_218738_v))))._field_Value))._field_Data.ptr()))) && (!(_1c0ddc601_comptime((*(*(*((*(_218738_v))))._field_Value.alloc)._field_Data.alloc)._field_Kind.ptr()))))) {
			_1c0d2dbb3_pushErr(_self_, (*((*(*((*(_218738_v))))._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
	} else {
		(*((*((*((*(_218738_v))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*(*(*((*(_218738_v))))._field_Value.alloc)._field_Data.alloc)._field_untyped=false;
	};
	if ((_1c0ddc36a_Tup((*(*((*(_218738_v))))._field_Kind.alloc)._field_Kind) != nullptr)) {
		(*(*((*(_218738_v))))._field_Kind.alloc)._field_Kind=nullptr;
	};
}



inline void _1c0d459cc_evalVarValue(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0d4dde2_Var>* _224037_decl, jule::Trait<_1c0e079d4_Lookup> _224053_l) {
	if ((!(_1c0d4e2bb_IsInitialized((*(_224037_decl)).ptr())))) {
		return;;
	};
	jule::Ptr<_1c0da8721_Eval> _224517_eval = nullptr;;
	if (((*((*(_224037_decl))))._field_Kind != nullptr)) {
		_224517_eval=_1c0d35923_evalpd(_self_, _224053_l, (*(*((*(_224037_decl))))._field_Kind.alloc)._field_Kind, (*(_224037_decl)));
	} else {
		_224517_eval=_1c0d35923_evalpd(_self_, _224053_l, nullptr, (*(_224037_decl)));
	};
	(*(_224517_eval))._field_immutable=(!((*((*(_224037_decl))))._field_Mutable));
	(*((*((*(_224037_decl))))._field_Value))._field_Data=_1c0dc6981_evalExpr(_224517_eval, (*(*((*(_224037_decl))))._field_Value.alloc)._field_Expr);
}



inline void _1c0d45d40_checkVar(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0d4dde2_Var>* _225733_decl, jule::Trait<_1c0e079d4_Lookup> _225749_l) {
	_1c0d459cc_evalVarValue(_self_, _225733_decl, _225749_l);
	if (((*((*((*(_225733_decl))))._field_Value))._field_Data == nullptr)) {
		return;;
	};
	_1c0d45669_checkVarValue(_self_, _225733_decl);
}



inline void _1c0d4603d_checkGlobals(jule::Ptr<_1c0d2b078_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c42c8346:;
		if (it != expr_end) {
			jule::Ptr<_1c0d4dde2_Var> _226721_decl = *it;
			{
				if ((*(_226721_decl))._field_Binded) {
					goto _iter_next_1c42c8346;
				};
				if (((_1c0d4e2bb_IsInitialized(_226721_decl) && ((*((*_226721_decl.alloc)._field_Value))._field_Data == nullptr)) || (_1c0d4e552_IsTypeInferred(_226721_decl) && ((*((*_226721_decl.alloc)._field_Kind))._field_Kind == nullptr)))) {
					_1c0d45d40_checkVar(_self_, &(_226721_decl), jule::Trait<_1c0e079d4_Lookup>(_self_, 3));
				};
			}
			_iter_next_1c42c8346:;
			++it;
			goto _iter_begin_1c42c8346;
		}
		_iter_end_1c42c8346:;
	};
}



inline jule::Ptr<_1c0c98699_FnIns> _1c0d46439_readyToCheckFn(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0c83552_StructIns>* _228139_s, jule::Ptr<_1c0c95795_Fn>* _228159_f) {
	jule::Ptr<_1c0c98699_FnIns> _228213_ins = _1c0c97005_instance((*(_228159_f)));;
	if (((*((*(_228159_f))))._field_Instances.len() != 0LL)) {
		return _228213_ins;;
	};
	(*(_228213_ins))._field_Owner=(*(_228139_s));
	_1c0c97313_appendInstance((*(_228159_f)).ptr(), &(_228213_ins));
	(*_228213_ins.alloc)._field_reloaded=true;
	if (_1c0d39b47_reloadFnInsTypes(_self_, _228213_ins)) {
		return _228213_ins;;
	};
	return nullptr;;
}



inline void _1c0d4679c_checkTypeMethod(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0c83552_StructIns>* _229540_s, jule::Ptr<_1c0c95795_Fn>* _229560_f) {
	if (((*((*(_229560_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1c0c98699_FnIns> _230013_ins = (*((*(_229560_f))))._field_Instances[0LL];;
	if (((*((*(_230013_ins))._field_Scope))._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1c0d49250_checkFnIns(_self_, &(_230013_ins));
}



inline jule::Ptr<_1c0c98699_FnIns> _1c0d46c53_checkStructInsOp(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0c83552_StructIns>* _230841_s, jule::Ptr<_1c0c95795_Fn>* _230861_f, jule::Fn<jule::Bool,jule::Ptr<_1c0c95795_Fn>> _230869_p) {
	if (((((*(_230861_f)) == nullptr) || ((*((*(_230861_f))))._field_Generics.len() > 0LL)) || (!(_230869_p((*(_230861_f))))))) {
		return nullptr;;
	};
	return (*((*(_230861_f))))._field_Instances[0LL];;
}



inline jule::Bool _1c0d4714e_checkStructEnv(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0c83552_StructIns>* _231839_s, jule::Ptr<_1c0c49480_Token> _231858_errorToken) {
	jule::Bool __jule_func_result = false;
	_1c0de9ca1_typeChecker _231913_tc = _1c0de9ca1_typeChecker{._field_s=(*((*((*(_231839_s))))._field_Decl))._field_sema, ._field_rootLookup=jule::Trait<_1c0e079d4_Lookup>((*(*((*(_231839_s))))._field_Decl.alloc)._field_sema, 3), ._field_lookup=jule::Trait<_1c0e079d4_Lookup>((*(*((*(_231839_s))))._field_Decl.alloc)._field_sema, 3), ._field_referencer=jule::new_ptr<_1c0de8cb1_referencer>(_1c0de8cb1_referencer{._field_ident=(*(*((*(_231839_s))))._field_Decl.alloc)._field_Ident, ._field_owner=jule::Any((*((*(_231839_s))))._field_Decl, &__jule_any_type64), }), ._field_refers=(*((*(_231839_s))))._field_Refers, };;
	if (((*((*(_231839_s))))._field_Generics.len() > 0LL)) {
		_231913_tc._field_useGenerics=jule::Slice<jule::Ptr<_1c0dd7101_TypeAlias>>::alloc(0LL, (*((*(_231839_s))))._field_Generics.len());
		{
			auto expr = &((*((*(_231839_s))))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c5472ba4:;
			if (it != expr_end) {
				jule::I64 _233218_i = it - expr->begin();
				jule::Ptr<_1c0dd650c_InsGeneric> _233225_g = *it;
				{
					jule::Ptr<_1c0c6bb45_GenericDecl> _233321_decl = (*(*((*(_231839_s))))._field_Decl.alloc)._field_Generics[_233218_i];;
					{ jule::Slice<jule::Ptr<_1c0dd7101_TypeAlias>> &__jule_push_dest = _231913_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_1c0dd7101_TypeAlias>(_1c0dd7101_TypeAlias{._field_Token=(*_233321_decl.alloc)._field_Token, ._field_Ident=(*(_233321_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1c0de00b5_TypeSymbol>(_1c0de00b5_TypeSymbol{._field_Kind=(*(_233225_g))._field_Kind}), })); };
				}
				_iter_next_1c5472ba4:;
				++it;
				_233218_i++;
				goto _iter_begin_1c5472ba4;
			}
			_iter_end_1c5472ba4:;
		};
	};
	jule::Ptr<_1c0da1681_SymbolTable> _234213_oldFile = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1c0d2d795_setCurrentFile(_self_, _234213_oldFile);
	});;
	if (((*((*_self_.alloc)._field_file))._field_File != (*((*(*((*(_231839_s))))._field_Decl.alloc)._field_Token))._field_File)) {
		jule::Ptr<_1c0da1681_SymbolTable> _234617_file = _1c0d29cbe_findFile(&((*_self_.alloc)._field_files), &((*(*(*((*(_231839_s))))._field_Decl.alloc)._field_Token.alloc)._field_File));;
		if ((_234617_file != nullptr)) {
			_1c0d2d795_setCurrentFile(_self_, _234617_file);
		};
	};
	if (((*((*(_231839_s))))._field_Generics.len() > 0LL)) {
		jule::Ptr<_1c0cced84_constraintChecker> _235317_cc = _1c0d34438_constraintChecker(_self_);;
		(*(_235317_cc))._field_et=_231858_errorToken;
		(*_235317_cc.alloc)._field_si=(*(_231839_s));
		(*_235317_cc.alloc)._field_genericsA=_231913_tc._field_useGenerics;
		(*_235317_cc.alloc)._field_uniq=true;
		if ((!(_1c0cd0cb9_check(_235317_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*((*(_231839_s))))._field_Statics.len() > 0LL)) {
		jule::I64 _236617_n = (*_self_.alloc)._field_errors.len();;
		(*((*_self_.alloc)._field_files[0LL]))._field_TypeAliases=jule::append(_231913_tc._field_useGenerics,(*((*_self_.alloc)._field_files[0LL]))._field_TypeAliases);
		{
			auto expr = &((*((*(_231839_s))))._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c547b4a4:;
			if (it != expr_end) {
				jule::Ptr<_1c0d4dde2_Var> _236825_v = *it;
				{
					_1c0d42237_checkVarDecl(_self_, &(_236825_v), jule::Trait<_1c0e079d4_Lookup>(_self_, 3));
					_1c0d45d40_checkVar(_self_, &(_236825_v), jule::Trait<_1c0e079d4_Lookup>(_self_, 3));
					__jule_func_result=((((*_self_.alloc)._field_errors.len() - _236617_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1c547b4a4:;
				++it;
				goto _iter_begin_1c547b4a4;
			}
			_iter_end_1c547b4a4:;
		};
		((*((*(_self_))._field_files[0LL]))._field_TypeAliases).mut_slice(_231913_tc._field_useGenerics.len());;
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1c0da8721_Eval> _237913_eval = _1c0d36160_eval(_self_, jule::Trait<_1c0e079d4_Lookup>(_self_, 3));;
	(*((*(_231839_s))))._field_Comparable=(!((*(*((*(_231839_s))))._field_Decl.alloc)._field_Binded));
	{
		auto expr = &((*((*(_231839_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c54800bd:;
		if (it != expr_end) {
			jule::Ptr<_1c0c829a2_FieldIns> _238121_f = *it;
			{
				jule::Ptr<_1c0dd7de3_TypeKind> _238217_kind = _1c0e0244b_checkDecl(&_231913_tc, &((*((*((*(_238121_f))._field_Decl))._field_Kind))._field_Decl));;
				__jule_func_result=((_238217_kind != nullptr) && __jule_func_result);
				if ((_238217_kind == nullptr)) {
					if (((_self_ != (*(*((*(_231839_s))))._field_Decl.alloc)._field_sema) && ((*((*(*((*(_231839_s))))._field_Decl.alloc)._field_sema))._field_errors.len() > 0LL))) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*(*((*(_231839_s))))._field_Decl.alloc)._field_sema.alloc)._field_errors);
						(*(*(*((*(_231839_s))))._field_Decl.alloc)._field_sema.alloc)._field_errors=nullptr;
					};
					goto _iter_next_1c54800bd;
				};
				(*_238121_f.alloc)._field_Kind=_238217_kind;
				(*((*(_231839_s))))._field_Mutable=((*((*(_231839_s))))._field_Mutable || ((!((*(*_238121_f.alloc)._field_Decl.alloc)._field_Mutable)) && _1c0dd9774_Mutable((*_238121_f.alloc)._field_Kind)));
				(*((*(_231839_s))))._field_Comparable=((*((*(_231839_s))))._field_Comparable && _1c0dd94dd_Comparable((*_238121_f.alloc)._field_Kind));
				if (((*(*_238121_f.alloc)._field_Decl.alloc)._field_Default == nullptr)) {
					goto _iter_next_1c54800bd;
				};
				(*(_237913_eval))._field_prefix=(*_238121_f.alloc)._field_Kind;
				(*_237913_eval.alloc)._field_field=_238121_f;
				(*_238121_f.alloc)._field_Default=_1c0dc6981_evalExpr(_237913_eval, (*(*_238121_f.alloc)._field_Decl.alloc)._field_Default);
				if (((*_238121_f.alloc)._field_Default == nullptr)) {
					goto _iter_next_1c54800bd;
				};
				;
				_1c0d366c1_checkAssignType(_self_, false, &((*_238121_f.alloc)._field_Kind), &((*_238121_f.alloc)._field_Default), (*((*(*_238121_f.alloc)._field_Decl.alloc)._field_Default))._field_Token);
			}
			_iter_next_1c54800bd:;
			++it;
			goto _iter_begin_1c54800bd;
		}
		_iter_end_1c54800bd:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c0d4754a_precheckStructIns(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0c83552_StructIns>* _241542_s, jule::Ptr<_1c0c49480_Token> _241561_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1c0d4714e_checkStructEnv(_self_, _241542_s, _241561_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*((*(_241542_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5489bbb:;
		if (it != expr_end) {
			jule::Ptr<_1c0c95795_Fn> _242021_f = *it;
			{
				if (((*(_242021_f))._field_Generics.len() == 0LL)) {
					if ((_1c0d46439_readyToCheckFn(_self_, _241542_s, &(_242021_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1c5489bbb:;
			++it;
			goto _iter_begin_1c5489bbb;
		}
		_iter_end_1c5489bbb:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1c0d47803_checkStructIns(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0c83552_StructIns>* _243039_s) {
	{
		auto expr = &((*((*(_243039_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c548b5d5:;
		if (it != expr_end) {
			jule::Ptr<_1c0c95795_Fn> _243121_f = *it;
			{
				_1c0d4679c_checkTypeMethod(_self_, _243039_s, &(_243121_f));
			}
			_iter_next_1c548b5d5:;
			++it;
			goto _iter_begin_1c548b5d5;
		}
		_iter_end_1c548b5d5:;
	};
}



inline void _1c0d47aab_checkTypeStruct(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0c807c4_Struct>* _243640_s) {
	if ((*((*(_243640_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_243640_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_243640_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c548d098:;
		if (it != expr_end) {
			jule::Ptr<_1c0c83552_StructIns> _244921_ins = *it;
			{
				_1c0d47803_checkStructIns(_self_, &(_244921_ins));
			}
			_iter_next_1c548d098:;
			++it;
			goto _iter_begin_1c548d098;
		}
		_iter_end_1c548d098:;
	};
}



inline void _1c0d47ca9_checkStructTypes(jule::Ptr<_1c0d2b078_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c548e044:;
		if (it != expr_end) {
			jule::Ptr<_1c0c807c4_Struct> _245521_s = *it;
			{
				_1c0d47aab_checkTypeStruct(_self_, &(_245521_s));
			}
			_iter_next_1c548e044:;
			++it;
			goto _iter_begin_1c548e044;
		}
		_iter_end_1c548e044:;
	};
}



inline void _1c0d48062_checkStructInsOperators(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0c83552_StructIns> _246047_s) {
	{
		auto expr = &((*(_246047_s))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c548eebd:;
		if (it != expr_end) {
			jule::Ptr<_1c0c95795_Fn> _246121_m = *it;
			{
				{
					auto &_match_expr{ (*(_246121_m))._field_Ident };
					
					if (_match_expr == jule::Str::lit("Eq", 2)) {
						_case_begin_1c549062d:;
						{
							(*(_246047_s))._field_Operators._field_Eq=_1c0d46c53_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1c0d50c90_Eq);
							(*_246047_s.alloc)._field_Comparable=((*_246047_s.alloc)._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str::lit("Gt", 2)) {
						_case_begin_1c5490c16:;
						{
							(*(_246047_s))._field_Operators._field_Gt=_1c0d46c53_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1c0d51059_Gt);
						}
					}
					else if (_match_expr == jule::Str::lit("GtEq", 4)) {
						_case_begin_1c5490c7c:;
						{
							(*(_246047_s))._field_Operators._field_GtEq=_1c0d46c53_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1c0d51323_GtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Lt", 2)) {
						_case_begin_1c5490ce3:;
						{
							(*(_246047_s))._field_Operators._field_Lt=_1c0d46c53_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1c0d515dc_Lt);
						}
					}
					else if (_match_expr == jule::Str::lit("LtEq", 4)) {
						_case_begin_1c5490d59:;
						{
							(*(_246047_s))._field_Operators._field_LtEq=_1c0d46c53_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1c0d518a6_LtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Shl", 3)) {
						_case_begin_1c5490dd1:;
						{
							(*(_246047_s))._field_Operators._field_Shl=_1c0d46c53_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1c0d51ee4_Shl);
						}
					}
					else if (_match_expr == jule::Str::lit("Shr", 3)) {
						_case_begin_1c5490e58:;
						{
							(*(_246047_s))._field_Operators._field_Shr=_1c0d46c53_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1c0d522ad_Shr);
						}
					}
					else if (_match_expr == jule::Str::lit("Add", 3)) {
						_case_begin_1c5490ed0:;
						{
							(*(_246047_s))._field_Operators._field_Add=_1c0d46c53_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1c0d52577_Add);
						}
					}
					else if (_match_expr == jule::Str::lit("Sub", 3)) {
						_case_begin_1c5491057:;
						{
							(*(_246047_s))._field_Operators._field_Sub=_1c0d46c53_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1c0d52841_Sub);
						}
					}
					else if (_match_expr == jule::Str::lit("Div", 3)) {
						_case_begin_1c54910ce:;
						{
							(*(_246047_s))._field_Operators._field_Div=_1c0d46c53_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1c0d52b0a_Div);
						}
					}
					else if (_match_expr == jule::Str::lit("Mul", 3)) {
						_case_begin_1c5491156:;
						{
							(*(_246047_s))._field_Operators._field_Mul=_1c0d46c53_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1c0d52dc4_Mul);
						}
					}
					else if (_match_expr == jule::Str::lit("Mod", 3)) {
						_case_begin_1c54911cd:;
						{
							(*(_246047_s))._field_Operators._field_Mod=_1c0d46c53_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1c0d5318d_Mod);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAnd", 6)) {
						_case_begin_1c5491255:;
						{
							(*(_246047_s))._field_Operators._field_BitAnd=_1c0d46c53_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1c0d53457_BitAnd);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOr", 5)) {
						_case_begin_1c54912cc:;
						{
							(*(_246047_s))._field_Operators._field_BitOr=_1c0d46c53_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1c0d53721_BitOr);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXor", 6)) {
						_case_begin_1c5491354:;
						{
							(*(_246047_s))._field_Operators._field_BitXor=_1c0d46c53_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1c0d539da_BitXor);
						}
					}
					else if (_match_expr == jule::Str::lit("Neg", 3)) {
						_case_begin_1c54913cb:;
						{
							(*(_246047_s))._field_Operators._field_Neg=_1c0d46c53_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1c0d54128_Neg);
						}
					}
					else if (_match_expr == jule::Str::lit("Pos", 3)) {
						_case_begin_1c5491453:;
						{
							(*(_246047_s))._field_Operators._field_Pos=_1c0d46c53_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1c0d543e2_Pos);
						}
					}
					else if (_match_expr == jule::Str::lit("BitNot", 6)) {
						_case_begin_1c54914ca:;
						{
							(*(_246047_s))._field_Operators._field_BitNot=_1c0d46c53_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1c0d546ab_BitNot);
						}
					}
					else if (_match_expr == jule::Str::lit("AddAssign", 9)) {
						_case_begin_1c5491552:;
						{
							(*(_246047_s))._field_Operators._field_AddAssign=_1c0d46c53_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1c0d54ce9_AddAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("SubAssign", 9)) {
						_case_begin_1c54915c9:;
						{
							(*(_246047_s))._field_Operators._field_SubAssign=_1c0d46c53_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1c0d550b3_SubAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("DivAssign", 9)) {
						_case_begin_1c5491651:;
						{
							(*(_246047_s))._field_Operators._field_DivAssign=_1c0d46c53_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1c0d5537c_DivAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("MulAssign", 9)) {
						_case_begin_1c54916c8:;
						{
							(*(_246047_s))._field_Operators._field_MulAssign=_1c0d46c53_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1c0d55646_MulAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ModAssign", 9)) {
						_case_begin_1c5491750:;
						{
							(*(_246047_s))._field_Operators._field_ModAssign=_1c0d46c53_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1c0d55910_ModAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShlAssign", 9)) {
						_case_begin_1c54917c7:;
						{
							(*(_246047_s))._field_Operators._field_ShlAssign=_1c0d46c53_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1c0d55bc9_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShrAssign", 9)) {
						_case_begin_1c549184e:;
						{
							(*(_246047_s))._field_Operators._field_ShrAssign=_1c0d46c53_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1c0d55e93_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOrAssign", 11)) {
						_case_begin_1c54918c6:;
						{
							(*(_246047_s))._field_Operators._field_BitOrAssign=_1c0d46c53_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1c0d5625c_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAndAssign", 12)) {
						_case_begin_1c549194d:;
						{
							(*(_246047_s))._field_Operators._field_BitAndAssign=_1c0d46c53_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1c0d56526_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXorAssign", 12)) {
						_case_begin_1c54919c5:;
						{
							(*(_246047_s))._field_Operators._field_BitXorAssign=_1c0d46c53_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1c0d567e0_BitXorAssign);
						}
					}
					_match_end_1c5490919:;
				};
			}
			_iter_next_1c548eebd:;
			++it;
			goto _iter_begin_1c548eebd;
		}
		_iter_end_1c548eebd:;
	};
}



inline void _1c0d4831a_precheckStructType(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0c807c4_Struct>* _252443_s) {
	if ((*((*(_252443_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_252443_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_252443_s))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1c0c83552_StructIns> _253517_ins = _1c0c80c36_instance((*(_252443_s)));;
		(*(_253517_ins))._field_Checked=true;
		_1c0c81044_appendInstance((*(_252443_s)).ptr(), &(_253517_ins));
		_1c0d4754a_precheckStructIns(_self_, &(_253517_ins), nullptr);
	};
	_1c0d48062_checkStructInsOperators(_self_, (*((*(_252443_s))))._field_Instances[0LL]);
}



inline void _1c0d48518_precheckStructTypes(jule::Ptr<_1c0d2b078_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c54a78dc:;
		if (it != expr_end) {
			jule::Ptr<_1c0c807c4_Struct> _254521_s = *it;
			{
				_1c0d4831a_precheckStructType(_self_, &(_254521_s));
			}
			_iter_next_1c54a78dc:;
			++it;
			goto _iter_begin_1c54a78dc;
		}
		_iter_end_1c54a78dc:;
	};
}



inline void _1c0d487c1_checkRets(_1c0d2b078_Sema* _self_, jule::Ptr<_1c0c98699_FnIns>* _255033_f) {
	if (_1c0c95c18_IsVoid((*((*(_255033_f))))._field_Decl.ptr())) {
		return;;
	};
	_1c0d4ac46_missingRetChecker _25549_mrc = static__1c0d4b10e_new();;
	jule::Bool _25559_ok = _1c0d4c231_check(&_25549_mrc, (*((*(_255033_f))))._field_Scope);;
	if ((!(_25559_ok))) {
		_1c0d2dbb3_pushErr(_self_, (*(*((*(_255033_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("missing return at end of function", 33), jule::Slice<jule::Any>());
	};
}



inline void _1c0d48b34_checkFnInsSc(_1c0d2b078_Sema* _self_, jule::Ptr<_1c0c98699_FnIns>* _256136_f, jule::Ptr<_1c0cdeaec_scopeChecker>* _256152_sc) {
	_1c0d29373_appendRetVars(&((*((*((*(_256152_sc))))._field_table))._field_Vars), _256136_f);
	_1c0d2965e_appendParamVars(&((*(*((*(_256152_sc))))._field_table.alloc)._field_Vars), _256136_f);
	_1c0d2994a_appendGenericTypeAliases(&((*(*((*(_256152_sc))))._field_table.alloc)._field_TypeAliases), _256136_f);
	_1c0d019aa_check((*(_256152_sc)), &((*((*((*(_256136_f))))._field_Decl))._field_Scope), &((*((*(_256136_f))))._field_Scope));
	if ((!(_1c0ce26c1_stopped((*(_256152_sc)).ptr())))) {
		_1c0d487c1_checkRets(_self_, _256136_f);
	};
}



inline void _1c0d48e97_checkFnInsCaller(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0c98699_FnIns>* _257441_f, jule::Ptr<_1c0c49480_Token> _257456_caller) {
	if ((*((*((*(_257441_f))))._field_Decl))._field_Binded) {
		return;;
	};
	jule::Ptr<_1c0da1681_SymbolTable> _257913_old = (*((*(*((*(_257441_f))))._field_Decl.alloc)._field_sema))._field_file;;
	__JULE_DEFER({
		_1c0d2d795_setCurrentFile((*(*((*(_257441_f))))._field_Decl.alloc)._field_sema, _257913_old);
	});;
	jule::Ptr<_1c0da1681_SymbolTable> _258113_file = _1c0d29cbe_findFile(&((*(*(*((*(_257441_f))))._field_Decl.alloc)._field_sema.alloc)._field_files), &((*((*(*((*(_257441_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_258113_file != nullptr)) {
		_1c0d2d795_setCurrentFile((*(*((*(_257441_f))))._field_Decl.alloc)._field_sema, _258113_file);
	};
	jule::Ptr<_1c0cdeaec_scopeChecker> _258613_sc = _1c0cd47d4_newScopeChecker(&((*(*((*(_257441_f))))._field_Decl.alloc)._field_sema), (*(_257441_f)));;
	(*(_258613_sc))._field_calledFrom=_257456_caller;
	_1c0d48b34_checkFnInsSc(_self_.ptr(), _257441_f, &(_258613_sc));
	if (((*(*((*(_257441_f))))._field_Decl.alloc)._field_sema != _self_)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*(*((*(_257441_f))))._field_Decl.alloc)._field_sema.alloc)._field_errors);
		(*(*(*((*(_257441_f))))._field_Decl.alloc)._field_sema.alloc)._field_errors=nullptr;
	};
}



inline void _1c0d49250_checkFnIns(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0c98699_FnIns>* _259635_f) {
	_1c0d48e97_checkFnInsCaller(_self_, _259635_f, nullptr);
}



inline void _1c0d49508_checkFunc(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0c95795_Fn>* _260034_f) {
	if ((*((*(_260034_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_260034_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_260034_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c54b5d29:;
		if (it != expr_end) {
			jule::Ptr<_1c0c98699_FnIns> _261021_ins = *it;
			{
				_1c0d49250_checkFnIns(_self_, &(_261021_ins));
			}
			_iter_next_1c54b5d29:;
			++it;
			goto _iter_begin_1c54b5d29;
		}
		_iter_end_1c54b5d29:;
	};
}



inline void _1c0d497b1_checkTestFn(_1c0d2b078_Sema* _self_, jule::Ptr<_1c0c98699_FnIns>* _261535_f) {
	if ((*((*((*(_261535_f))))._field_Decl))._field_Public) {
		_1c0d2dbb3_pushErr(_self_, (*(*((*(_261535_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("test function cannot be public", 30), jule::Slice<jule::Any>());
		_1c0d2e026_pushSuggestion(_self_, jule::Str::lit("dont use identifier which is starts with capital letter to avoid define as public", 81), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*(*((*(_261535_f))))._field_Decl.alloc)._field_Unsafety || (!(_1c0c95c18_IsVoid((*((*(_261535_f))))._field_Decl)))) || ((*(*((*(_261535_f))))._field_Decl.alloc)._field_Generics.len() != 0LL)) || ((*((*(_261535_f))))._field_Params.len() != 1LL)) || (*((*(*((*(_261535_f))))._field_Decl.alloc)._field_Params[0LL]))._field_Mutable) || (*((*(*((*(_261535_f))))._field_Decl.alloc)._field_Params[0LL]))._field_Reference)) {
		_1c0d2dbb3_pushErr(_self_, (*(*((*(_261535_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1c0d2e026_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c0de44e8_Sptr> _263313_sptr = _1c0dda7ca_Sptr((*((*((*(_261535_f))))._field_Params[0LL]))._field_Kind.ptr());;
	if ((_263313_sptr == nullptr)) {
		_1c0d2dbb3_pushErr(_self_, (*(*((*(_261535_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1c0d2e026_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c0c83552_StructIns> _26409_s = _1c0ddbab7_Struct((*(_263313_sptr))._field_Elem.ptr());;
	if (((_26409_s == nullptr) || (!(_1c0d0eb83_isStdPackage(&((*((*((*((*(_26409_s))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("testing", 7)))))) {
		_1c0d2dbb3_pushErr(_self_, (*(*((*(_261535_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1c0d2e026_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1c0d49a69_precheckFunc(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Ptr<_1c0c95795_Fn>* _264837_f) {
	if ((*((*(_264837_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_264837_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_264837_f))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1c0c98699_FnIns> _265917_ins = _1c0c96c6e_instanceForce((*(_264837_f)));;
		{ jule::Slice<jule::Ptr<_1c0c98699_FnIns>> &__jule_push_dest = (*((*(_264837_f))))._field_Instances; __jule_push_dest.push(_265917_ins); };
		jule::Bool _266113_ok = _1c0d39b47_reloadFnInsTypes(_self_, _265917_ins);;
		(*(_265917_ins))._field_reloaded=true;
		if ((_266113_ok && _1c0e03a13_hasDirective(&((*((*(_264837_f))))._field_Directives), jule::Str::lit("test", 4)))) {
			_1c0d497b1_checkTestFn(_self_, &(_265917_ins));
		};
	};
}



inline void _1c0d49c67_precheckFuncs(jule::Ptr<_1c0d2b078_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c54c3e03:;
		if (it != expr_end) {
			jule::Ptr<_1c0ca8a72_Trait> _267221_decl = *it;
			{
				{
					auto expr = &((*(_267221_decl))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c54c484e:;
					if (it != expr_end) {
						jule::Ptr<_1c0c95795_Fn> _267325_m = *it;
						{
							_1c0d49a69_precheckFunc(_self_, &(_267325_m));
						}
						_iter_next_1c54c484e:;
						++it;
						goto _iter_begin_1c54c484e;
					}
					_iter_end_1c54c484e:;
				};
			}
			_iter_next_1c54c3e03:;
			++it;
			goto _iter_begin_1c54c3e03;
		}
		_iter_end_1c54c3e03:;
	};
	{
		auto expr = &((*(*_self_.alloc)._field_file.alloc)._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c54c4bc3:;
		if (it != expr_end) {
			jule::Ptr<_1c0c95795_Fn> _267721_decl = *it;
			{
				_1c0d49a69_precheckFunc(_self_, &(_267721_decl));
			}
			_iter_next_1c54c4bc3:;
			++it;
			goto _iter_begin_1c54c4bc3;
		}
		_iter_end_1c54c4bc3:;
	};
}



inline void _1c0d49e65_checkFuncs(jule::Ptr<_1c0d2b078_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c54c6114:;
		if (it != expr_end) {
			jule::Ptr<_1c0c95795_Fn> _268421_decl = *it;
			{
				_1c0d49508_checkFunc(_self_, &(_268421_decl));
			}
			_iter_next_1c54c6114:;
			++it;
			goto _iter_begin_1c54c6114;
		}
		_iter_end_1c54c6114:;
	};
}



inline void _1c0d4a163_checkPackageTypes(jule::Ptr<_1c0d2b078_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c54c6de5:;
		if (it != expr_end) {
			jule::Ptr<_1c0da1681_SymbolTable> _269221_f = *it;
			{
				_1c0d2d795_setCurrentFile(_self_.ptr(), _269221_f);
				_1c0d4603d_checkGlobals(_self_);
				_1c0d49c67_precheckFuncs(_self_);
				_1c0d48518_precheckStructTypes(_self_);
			}
			_iter_next_1c54c6de5:;
			++it;
			goto _iter_begin_1c54c6de5;
		}
		_iter_end_1c54c6de5:;
	};
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c54c8941:;
		if (it != expr_end) {
			jule::Ptr<_1c0da1681_SymbolTable> _270321_f = *it;
			{
				_1c0d2d795_setCurrentFile(_self_, _270321_f);
				_1c0d49e65_checkFuncs(_self_);
				_1c0d47ca9_checkStructTypes(_self_);
			}
			_iter_next_1c54c8941:;
			++it;
			goto _iter_begin_1c54c8941;
		}
		_iter_end_1c54c8941:;
	};
}



inline void _1c0d4a361_setFileSemaFields(jule::Ptr<_1c0d2b078_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c54ca019:;
		if (it != expr_end) {
			jule::Ptr<_1c0c95795_Fn> _271121_f = *it;
			{
				(*(_271121_f))._field_sema=_self_;
			}
			_iter_next_1c54ca019:;
			++it;
			goto _iter_begin_1c54ca019;
		}
		_iter_end_1c54ca019:;
	};
	{
		auto expr = &((*(*_self_.alloc)._field_file.alloc)._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c54cab74:;
		if (it != expr_end) {
			jule::Ptr<_1c0c807c4_Struct> _271421_st = *it;
			{
				(*(_271421_st))._field_sema=_self_;
			}
			_iter_next_1c54cab74:;
			++it;
			goto _iter_begin_1c54cab74;
		}
		_iter_end_1c54cab74:;
	};
}



inline void _1c0d4a55e_setSemaFields(jule::Ptr<_1c0d2b078_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c54cb834:;
		if (it != expr_end) {
			jule::Ptr<_1c0da1681_SymbolTable> _272021_file = *it;
			{
				_1c0d2d795_setCurrentFile(_self_.ptr(), _272021_file);
				_1c0d4a361_setFileSemaFields(_self_);
			}
			_iter_next_1c54cb834:;
			++it;
			goto _iter_begin_1c54cb834;
		}
		_iter_end_1c54cb834:;
	};
}



inline void _1c0d4a817_check(jule::Ptr<_1c0d2b078_Sema> _self_, jule::Slice<jule::Ptr<_1c0da1681_SymbolTable>>* _272630_files) {
	(*(_self_))._field_files=(*(_272630_files));
	_1c0d32634_checkImports(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1c0d4a55e_setSemaFields(_self_);
	_1c0d33129_checkInherits(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1c0d32a30_implImpls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1c0d32c2d_checkEnums(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1c0d4504d_checkPackageDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1c0d4a163_checkPackageTypes(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1c0d2b078_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags << ", ";
	_Stream << "meta:" << _Src._field_meta;
	_Stream << "}";
	return _Stream;
}



inline _1c0d4ac46_missingRetChecker static__1c0d4b10e_new(void) {
	return _1c0d4ac46_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU, 0), };;
}



inline jule::Bool _1c0d4b41c_checkConditional(_1c0d4ac46_missingRetChecker* _self_, jule::Ptr<_1c0cd8277_Conditional> _277435_c) {
	{
		auto expr = &((*(_277435_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c54d1e55:;
		if (it != expr_end) {
			jule::Ptr<_1c0cd7a5c_If> _277521_elif = *it;
			{
				if ((_277521_elif == nullptr)) {
					return false;;
				};
				if ((!(_1c0d4bde0_checkScope(_self_, (*(_277521_elif))._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1c54d1e55:;
			++it;
			goto _iter_begin_1c54d1e55;
		}
		_iter_end_1c54d1e55:;
	};
	return (((*_277435_c.alloc)._field_Default != nullptr) && _1c0d4bde0_checkScope(_self_, (*(*_277435_c.alloc)._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1c0d4b75d_checkMatch(_1c0d4ac46_missingRetChecker* _self_, jule::Ptr<_1c0cdb852_Match> _278629_m) {
	{
		auto expr = &((*(_278629_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c54d3ee0:;
		if (it != expr_end) {
			jule::Ptr<_1c0cdc37a_Case> _278721_c = *it;
			{
				if ((_278721_c == nullptr)) {
					return false;;
				};
				jule::I64 _279113_n = (*(_self_))._field_breaked.len();;
				jule::Bool _279213_ok = _1c0d4bde0_checkScope(_self_, (*(_278721_c))._field_Scope);;
				{
					
					if ((_279113_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1c54d595e:;
						{
							return false;;
						}
					}
					else if ((!(_279213_ok))) {
						_case_begin_1c54d5a08:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1c54d5a6e;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1c54d5a6e:;
						{
							(*(_self_))._field_falled=false;
							if (((*(_278721_c))._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1c54d3ee0;
						}
					}
					_match_end_1c54d5530:;
				};
			}
			_iter_next_1c54d3ee0:;
			++it;
			goto _iter_begin_1c54d3ee0;
		}
		_iter_end_1c54d3ee0:;
	};
	return (((*_278629_m.alloc)._field_Default != nullptr) && _1c0d4bde0_checkScope(_self_, (*(*_278629_m.alloc)._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1c0d4ba9e_checkInfIter(_1c0d4ac46_missingRetChecker* _self_, jule::Ptr<_1c0cd8574_InfIter> _281231_it) {
	jule::I64 _28139_n = (*(_self_))._field_breaked.len();;
	if (_1c0d4bde0_checkScope(_self_, (*(_281231_it))._field_Scope)) {
		((*(_self_))._field_breaked).mut_slice(0LL, _28139_n);;
		return true;;
	};
	if ((_28139_n != (*(_self_))._field_breaked.len())) {
		jule::Uintptr _281913_itaddr = static_cast<jule::Uintptr>(_281231_it);;
		{
			auto expr = (*(_self_))._field_breaked.slice(_28139_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1c54d9831:;
			if (it != expr_end) {
				jule::Uintptr _282020_addr = *it;
				{
					if ((_281913_itaddr == _282020_addr)) {
						((*(_self_))._field_breaked).mut_slice(0LL, _28139_n);;
						return false;;
					};
				}
				_iter_next_1c54d9831:;
				++it;
				goto _iter_begin_1c54d9831;
			}
			_iter_end_1c54d9831:;
		};
		((*(_self_))._field_breaked).mut_slice(0LL, _28139_n);;
	};
	return true;;
}



inline jule::Bool _1c0d4bde0_checkScope(_1c0d4ac46_missingRetChecker* _self_, jule::Ptr<_1c0cd763e_Scope> _283129_s) {
	if ((_283129_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &((*(_283129_s))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c54db26c:;
		if (it != expr_end) {
			jule::Any _283521_st = *it;
			{
				{
					auto &_match_expr{ _283521_st };
					
					if (_match_expr.type == &__jule_any_type47) {
						_case_begin_1c54dbaec:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type48) {
						_case_begin_1c54db8bb:;
						{
							jule::Uintptr _284117_addr = (*(_283521_st.unsafe_cast_ptr<_1c0cd9bd5_BreakSt>()))._field_It;;
							if ((_284117_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_284117_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type40) {
						_case_begin_1c54dbb74:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type35) {
						_case_begin_1c54dbbda:;
						{
							if (_1c0d4ba9e_checkInfIter(_self_, _283521_st.unsafe_cast_ptr<_1c0cd8574_InfIter>())) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type49) {
						_case_begin_1c54dbc62:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1c54dbcd9:;
						{
							if (_1c0d4bde0_checkScope(_self_, _283521_st.unsafe_cast_ptr<_1c0cd763e_Scope>())) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1c54dbd61:;
						{
							{
								auto &_match_expr{ (*(_283521_st.cast_ptr<_1c0da69e9_Data>(&__jule_any_type23)))._field_Model };
								
								if (_match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type22) {
									_case_begin_1c54e0b23:;
									{
										return true;;
									}
								}
								_match_end_1c54e0aac:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type34) {
						_case_begin_1c54dbdd8:;
						{
							if (_1c0d4b41c_checkConditional(_self_, _283521_st.unsafe_cast_ptr<_1c0cd8277_Conditional>())) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type46) {
						_case_begin_1c54dbe60:;
						{
							if (_1c0d4b75d_checkMatch(_self_, _283521_st.unsafe_cast_ptr<_1c0cdb852_Match>())) {
								return true;;
							};
						}
					}
					_match_end_1c54db9dc:;
				};
			}
			_iter_next_1c54db26c:;
			++it;
			goto _iter_begin_1c54db26c;
		}
		_iter_end_1c54db26c:;
	};
	return false;;
}



inline jule::Bool _1c0d4c231_check(_1c0d4ac46_missingRetChecker* _self_, jule::Ptr<_1c0cd763e_Scope> _287724_s) {
	return _1c0d4bde0_checkScope(_self_, _287724_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0d4ac46_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c0d4e2bb_IsInitialized(_1c0d4dde2_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1c0d4e552_IsTypeInferred(_1c0d4dde2_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*((*(_self_))._field_Kind))._field_Decl == nullptr));;
}



inline jule::Bool _1c0d4e7d8_untypedConstant(_1c0d4dde2_Var* _self_) {
	return (_1c0d4e552_IsTypeInferred(_self_) && (*((*((*(_self_))._field_Value))._field_Data))._field_untyped);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0d4dde2_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "RetOrder:" << _Src._field_RetOrder << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1c0d50388_Dispose(jule::Ptr<_1c0c95795_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && ((*_1023_f.alloc)._field_Owner != nullptr)) && (*_1023_f.alloc)._field_Ident.equal("Dispose", 7)) && (!((*_1023_f.alloc)._field_Statically))) && (!((*_1023_f.alloc)._field_Unsafety))) && _1c0c95c18_IsVoid(_1023_f)) && ((*_1023_f.alloc)._field_Generics.len() == 0LL)) && ((*_1023_f.alloc)._field_Params.len() == 1LL)) && (*((*_1023_f.alloc)._field_Params[0LL]))._field_Mutable) && (!(_1c0c94673_IsRef((*_1023_f.alloc)._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__1c0d50652_Str(jule::Ptr<_1c0c95795_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || ((*(_2419_f))._field_Owner == nullptr)) || (!(*(_2419_f))._field_Ident.equal("Str", 3))) || (*(_2419_f))._field_Statically) || (*(_2419_f))._field_Unsafety) || _1c0c95c18_IsVoid(_2419_f.ptr())) || ((*(_2419_f))._field_Generics.len() != 0LL)) || ((*(_2419_f))._field_Params.len() != 1LL)) || (*((*(_2419_f))._field_Params[0LL]))._field_Mutable) || _1c0c94673_IsRef((*(_2419_f))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1c0c98699_FnIns> _3813_ins = (*(_2419_f))._field_Instances[0LL];;
	jule::Ptr<_1c0de09bc_Prim> _399_prim = _1c0dda544_Prim((*(_3813_ins))._field_Result.ptr());;
	if ((_399_prim == nullptr)) {
		return false;;
	};
	return _1c0de3e54_IsStr(_399_prim.ptr());;
}



inline jule::Bool static__1c0d509c6_logical(jule::Ptr<_1c0c95795_Fn>* _4624_f, jule::Str _4632_ident) {
	if (((((((((((((((*(_4624_f)) == nullptr) || ((*((*(_4624_f))))._field_Ident != _4632_ident)) || ((*((*(_4624_f))))._field_Owner == nullptr)) || ((*((*(_4624_f))))._field_Instances.len() == 0LL)) || (*((*(_4624_f))))._field_Statically) || (*((*(_4624_f))))._field_Unsafety) || _1c0c95c18_IsVoid((*(_4624_f)).ptr())) || ((*((*(_4624_f))))._field_Generics.len() != 0LL)) || ((*((*(_4624_f))))._field_Params.len() != 2LL)) || (*((*((*(_4624_f))))._field_Params[0LL]))._field_Mutable) || _1c0c94673_IsRef((*((*(_4624_f))))._field_Params[0LL].ptr())) || (*((*((*(_4624_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_4624_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1c0c98699_FnIns> _6313_ins = (*((*(_4624_f))))._field_Instances[0LL];;
	jule::Ptr<_1c0de09bc_Prim> _649_prim = _1c0dda544_Prim((*(_6313_ins))._field_Result.ptr());;
	if (((_649_prim == nullptr) || (!(_1c0de3bbd_IsBool(_649_prim.ptr()))))) {
		return false;;
	};
	return ((*_6313_ins.alloc)._field_Owner == _1c0ddbab7_Struct((*((*_6313_ins.alloc)._field_Params[1LL]))._field_Kind.ptr()));;
}



inline jule::Bool static__1c0d50c90_Eq(jule::Ptr<_1c0c95795_Fn> _7218_f) {
	return static__1c0d509c6_logical(&(_7218_f), jule::Str::lit("Eq", 2));;
}



inline jule::Bool static__1c0d51059_Gt(jule::Ptr<_1c0c95795_Fn> _7718_f) {
	return static__1c0d509c6_logical(&(_7718_f), jule::Str::lit("Gt", 2));;
}



inline jule::Bool static__1c0d51323_GtEq(jule::Ptr<_1c0c95795_Fn> _8220_f) {
	return static__1c0d509c6_logical(&(_8220_f), jule::Str::lit("GtEq", 4));;
}



inline jule::Bool static__1c0d515dc_Lt(jule::Ptr<_1c0c95795_Fn> _8718_f) {
	return static__1c0d509c6_logical(&(_8718_f), jule::Str::lit("Lt", 2));;
}



inline jule::Bool static__1c0d518a6_LtEq(jule::Ptr<_1c0c95795_Fn> _9220_f) {
	return static__1c0d509c6_logical(&(_9220_f), jule::Str::lit("LtEq", 4));;
}



inline jule::Bool static__1c0d51c2a_result(jule::Ptr<_1c0c95795_Fn>* _9623_f, jule::Str _9631_ident) {
	if (((((((((((((((*(_9623_f)) == nullptr) || ((*((*(_9623_f))))._field_Ident != _9631_ident)) || ((*((*(_9623_f))))._field_Owner == nullptr)) || ((*((*(_9623_f))))._field_Instances.len() == 0LL)) || (*((*(_9623_f))))._field_Statically) || (*((*(_9623_f))))._field_Unsafety) || _1c0c95c18_IsVoid((*(_9623_f)).ptr())) || ((*((*(_9623_f))))._field_Generics.len() != 0LL)) || ((*((*(_9623_f))))._field_Params.len() != 2LL)) || (*((*((*(_9623_f))))._field_Params[0LL]))._field_Mutable) || _1c0c94673_IsRef((*((*(_9623_f))))._field_Params[0LL].ptr())) || (*((*((*(_9623_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_9623_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1c0c98699_FnIns> _11313_ins = (*((*(_9623_f))))._field_Instances[0LL];;
	return (_1c0ddbab7_Struct((*(_11313_ins))._field_Result.ptr()) == (*_11313_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1c0d51ee4_Shl(jule::Ptr<_1c0c95795_Fn> _11819_f) {
	return static__1c0d51c2a_result(&(_11819_f), jule::Str::lit("Shl", 3));;
}



inline jule::Bool static__1c0d522ad_Shr(jule::Ptr<_1c0c95795_Fn> _12319_f) {
	return static__1c0d51c2a_result(&(_12319_f), jule::Str::lit("Shr", 3));;
}



inline jule::Bool static__1c0d52577_Add(jule::Ptr<_1c0c95795_Fn> _12819_f) {
	return static__1c0d51c2a_result(&(_12819_f), jule::Str::lit("Add", 3));;
}



inline jule::Bool static__1c0d52841_Sub(jule::Ptr<_1c0c95795_Fn> _13319_f) {
	return static__1c0d51c2a_result(&(_13319_f), jule::Str::lit("Sub", 3));;
}



inline jule::Bool static__1c0d52b0a_Div(jule::Ptr<_1c0c95795_Fn> _13819_f) {
	return static__1c0d51c2a_result(&(_13819_f), jule::Str::lit("Div", 3));;
}



inline jule::Bool static__1c0d52dc4_Mul(jule::Ptr<_1c0c95795_Fn> _14319_f) {
	return static__1c0d51c2a_result(&(_14319_f), jule::Str::lit("Mul", 3));;
}



inline jule::Bool static__1c0d5318d_Mod(jule::Ptr<_1c0c95795_Fn> _14819_f) {
	return static__1c0d51c2a_result(&(_14819_f), jule::Str::lit("Mod", 3));;
}



inline jule::Bool static__1c0d53457_BitAnd(jule::Ptr<_1c0c95795_Fn> _15322_f) {
	return static__1c0d51c2a_result(&(_15322_f), jule::Str::lit("BitAnd", 6));;
}



inline jule::Bool static__1c0d53721_BitOr(jule::Ptr<_1c0c95795_Fn> _15821_f) {
	return static__1c0d51c2a_result(&(_15821_f), jule::Str::lit("BitOr", 5));;
}



inline jule::Bool static__1c0d539da_BitXor(jule::Ptr<_1c0c95795_Fn> _16322_f) {
	return static__1c0d51c2a_result(&(_16322_f), jule::Str::lit("BitXor", 6));;
}



inline jule::Bool static__1c0d53d5e_unary(jule::Ptr<_1c0c95795_Fn>* _16722_f, jule::Str _16730_ident) {
	if (((((((((((((*(_16722_f)) == nullptr) || ((*((*(_16722_f))))._field_Ident != _16730_ident)) || ((*((*(_16722_f))))._field_Owner == nullptr)) || ((*((*(_16722_f))))._field_Instances.len() == 0LL)) || (*((*(_16722_f))))._field_Statically) || (*((*(_16722_f))))._field_Unsafety) || _1c0c95c18_IsVoid((*(_16722_f)).ptr())) || ((*((*(_16722_f))))._field_Generics.len() != 0LL)) || ((*((*(_16722_f))))._field_Params.len() != 1LL)) || (*((*((*(_16722_f))))._field_Params[0LL]))._field_Mutable) || _1c0c94673_IsRef((*((*(_16722_f))))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1c0c98699_FnIns> _18213_ins = (*((*(_16722_f))))._field_Instances[0LL];;
	return (_1c0ddbab7_Struct((*(_18213_ins))._field_Result.ptr()) == (*_18213_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1c0d54128_Neg(jule::Ptr<_1c0c95795_Fn> _18719_f) {
	return static__1c0d53d5e_unary(&(_18719_f), jule::Str::lit("Neg", 3));;
}



inline jule::Bool static__1c0d543e2_Pos(jule::Ptr<_1c0c95795_Fn> _19219_f) {
	return static__1c0d53d5e_unary(&(_19219_f), jule::Str::lit("Pos", 3));;
}



inline jule::Bool static__1c0d546ab_BitNot(jule::Ptr<_1c0c95795_Fn> _19722_f) {
	return static__1c0d53d5e_unary(&(_19722_f), jule::Str::lit("BitNot", 6));;
}



inline jule::Bool static__1c0d54a30_assign(jule::Ptr<_1c0c95795_Fn>* _20123_f, jule::Str _20131_ident) {
	if (((((((((((((((*(_20123_f)) == nullptr) || ((*((*(_20123_f))))._field_Ident != _20131_ident)) || ((*((*(_20123_f))))._field_Owner == nullptr)) || ((*((*(_20123_f))))._field_Instances.len() == 0LL)) || (*((*(_20123_f))))._field_Statically) || (*((*(_20123_f))))._field_Unsafety) || (!(_1c0c95c18_IsVoid((*(_20123_f)).ptr())))) || ((*((*(_20123_f))))._field_Generics.len() != 0LL)) || ((*((*(_20123_f))))._field_Params.len() != 2LL)) || (!((*((*((*(_20123_f))))._field_Params[0LL]))._field_Mutable))) || _1c0c94673_IsRef((*((*(_20123_f))))._field_Params[0LL].ptr())) || (*((*((*(_20123_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_20123_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1c0d54ce9_AddAssign(jule::Ptr<_1c0c95795_Fn> _22125_f) {
	return static__1c0d54a30_assign(&(_22125_f), jule::Str::lit("AddAssign", 9));;
}



inline jule::Bool static__1c0d550b3_SubAssign(jule::Ptr<_1c0c95795_Fn> _22625_f) {
	return static__1c0d54a30_assign(&(_22625_f), jule::Str::lit("SubAssign", 9));;
}



inline jule::Bool static__1c0d5537c_DivAssign(jule::Ptr<_1c0c95795_Fn> _23125_f) {
	return static__1c0d54a30_assign(&(_23125_f), jule::Str::lit("DivAssign", 9));;
}



inline jule::Bool static__1c0d55646_MulAssign(jule::Ptr<_1c0c95795_Fn> _23625_f) {
	return static__1c0d54a30_assign(&(_23625_f), jule::Str::lit("MulAssign", 9));;
}



inline jule::Bool static__1c0d55910_ModAssign(jule::Ptr<_1c0c95795_Fn> _24125_f) {
	return static__1c0d54a30_assign(&(_24125_f), jule::Str::lit("ModAssign", 9));;
}



inline jule::Bool static__1c0d55bc9_ShlAssign(jule::Ptr<_1c0c95795_Fn> _24625_f) {
	return static__1c0d54a30_assign(&(_24625_f), jule::Str::lit("ShlAssign", 9));;
}



inline jule::Bool static__1c0d55e93_ShrAssign(jule::Ptr<_1c0c95795_Fn> _25125_f) {
	return static__1c0d54a30_assign(&(_25125_f), jule::Str::lit("ShrAssign", 9));;
}



inline jule::Bool static__1c0d5625c_BitOrAssign(jule::Ptr<_1c0c95795_Fn> _25627_f) {
	return static__1c0d54a30_assign(&(_25627_f), jule::Str::lit("BitOrAssign", 11));;
}



inline jule::Bool static__1c0d56526_BitAndAssign(jule::Ptr<_1c0c95795_Fn> _26128_f) {
	return static__1c0d54a30_assign(&(_26128_f), jule::Str::lit("BitAndAssign", 12));;
}



inline jule::Bool static__1c0d567e0_BitXorAssign(jule::Ptr<_1c0c95795_Fn> _26628_f) {
	return static__1c0d54a30_assign(&(_26628_f), jule::Str::lit("BitXorAssign", 12));;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0d4ec6c_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1c0d8dbac_pushErr(_1c0d8d6b2_typeCompatibilityChecker* _self_, jule::Str _11926_fmt, jule::Slice<jule::Any> _11939_args) {
	_1c0d2dbb3_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _11926_fmt, _11939_args);
}



inline jule::Bool _1c0d8de43_checkTrait(_1c0d8d6b2_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1c0dd8ec1_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1c0ca8a72_Trait> _12713_trt = _1c0ddbd4d_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _12813_ref = false;;
	{
		
		if ((_1c0dda7ca_Sptr((*(_self_))._field_src) != nullptr)) {
			_case_begin_1c553244a:;
			{
				_12813_ref=true;
				(*(_self_))._field_src=(*(_1c0dda7ca_Sptr((*(_self_))._field_src)))._field_Elem;
				if ((_1c0ddbab7_Struct((*(_self_))._field_src) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1c55324e4;
			}
		}
		else if ((_1c0ddbab7_Struct((*(_self_))._field_src) != nullptr)) {
			_case_begin_1c55324e4:;
			{
				jule::Ptr<_1c0c83552_StructIns> _13813_s = _1c0ddbab7_Struct((*(_self_))._field_src);;
				if ((!(_1c0c81e13_IsImplements((*(_13813_s))._field_Decl.ptr(), _12713_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_12813_ref)) && _1c0d8c260_traitHasReferenceReceiver(&(_12713_trt)))) {
					_1c0d8dbac_pushErr(_self_, jule::Str::lit("trait has reference receiver parameter used method, cannot assign non-reference instance", 88), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c0ddbd4d_Trait((*(_self_))._field_src) != nullptr)) {
			_case_begin_1c553256b:;
			{
				jule::Ptr<_1c0ca8a72_Trait> _14817_base = _1c0ddbd4d_Trait((*(_self_))._field_src);;
				if ((_12713_trt == _14817_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_1c553765e:;
				{
					auto expr = &((*(_14817_base))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c553773b:;
					if (it != expr_end) {
						jule::Ptr<_1c0c807c4_Struct> _15320_s1 = *it;
						{
							{
								auto expr = &((*(_12713_trt))._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c55380ee:;
								if (it != expr_end) {
									jule::Ptr<_1c0c807c4_Struct> _15424_s2 = *it;
									{
										if ((_15320_s1 == _15424_s2)) {
											goto _iter_next_1c553773b;
										};
									}
									_iter_next_1c55380ee:;
									++it;
									goto _iter_begin_1c55380ee;
								}
								_iter_end_1c55380ee:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_1c553773b:;
						++it;
						goto _iter_begin_1c553773b;
					}
					_iter_end_1c553773b:;
				};
				{
					auto expr = &((*_12713_trt.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c55389b2:;
					if (it != expr_end) {
						jule::Ptr<_1c0c95795_Fn> _16125_m1 = *it;
						{
							jule::Ptr<_1c0c95795_Fn> _16221_m2 = _1c0ca9721_FindMethod(_14817_base, (*(_16125_m1))._field_Ident);;
							if ((_16221_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_1c0c98699_FnIns> _16617_m1k = _1c0d386e5_getTraitCheckFnKind((*(_self_))._field_s, &(_16125_m1));;
							jule::Ptr<_1c0c98699_FnIns> _16717_m2k = _1c0d386e5_getTraitCheckFnKind((*(_self_))._field_s, &(_16221_m2));;
							if ((!(_1c0c99612_equalTrait(_16617_m1k, &(_16717_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_1c55389b2:;
						++it;
						goto _iter_begin_1c55389b2;
					}
					_iter_end_1c55389b2:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c55323b2:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1c553234b:;
	};
}



inline jule::Bool _1c0d8e1c9_checkPtr(_1c0d8d6b2_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1c0dd8ec1_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1c0de7cb0_Ptr> _18213_dest = _1c0ddaa61_Ptr((*(_self_))._field_dest.ptr());;
	if (_1c0de87e9_IsUnsafe(_18213_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1c0dd85ec_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1c0d8e460_checkPrim(_1c0d8d6b2_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*((*(_self_))._field_dest))._field_Variadic))) {
		jule::Ptr<_1c0de09bc_Prim> _19113_prim = _1c0dda544_Prim((*(_self_))._field_dest);;
		if (((_19113_prim != nullptr) && _1c0de41da_IsAny(_19113_prim))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1c0dd85ec_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1c0d8e85b_typeEnum(_1c0d8d6b2_typeCompatibilityChecker* _self_, jule::Ptr<_1c0cac988_TypeEnum>* _19928_e, jule::Ptr<_1c0dd7de3_TypeKind>* _19947_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_19928_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c554039d:;
		if (it != expr_end) {
			jule::Ptr<_1c0cac3b1_TypeEnumItem> _20021_item = *it;
			{
				if (_1c0dd85ec_Equal((*((*(_20021_item))._field_Kind))._field_Kind, (*(_19947_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1c0cac988_TypeEnum> _20417_ke = _1c0ddb07d_TypeEnum((*(*_20021_item.alloc)._field_Kind.alloc)._field_Kind);;
				if ((_20417_ke == nullptr)) {
					goto _iter_next_1c554039d;
				};
				if (_1c0d8e85b_typeEnum(_self_, &(_20417_ke), _19947_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1c554039d:;
			++it;
			goto _iter_begin_1c554039d;
		}
		_iter_end_1c554039d:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1c0d8eae2_checkTypeEnum(_1c0d8d6b2_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1c0dd85ec_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1c0cac988_TypeEnum> _21913_e = _1c0ddb07d_TypeEnum((*(_self_))._field_dest);;
	__jule_func_result = _1c0d8e85b_typeEnum(_self_, &(_21913_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1c0d8ed78_check(_1c0d8d6b2_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1c0ddaa61_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1c0d8e1c9_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_1c0dd9c91_NilCompatible((*(_self_))._field_dest)) {
		if (_1c0dd8ec1_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1c0dda544_Prim((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1c5545b01:;
			{
				__jule_func_result = _1c0d8e460_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1c0ddb07d_TypeEnum((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1c5545b89:;
			{
				__jule_func_result = _1c0d8eae2_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1c0ddbd4d_Trait((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1c55455a1:;
			{
				__jule_func_result = _1c0d8de43_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c55451c7:;
			{
				__jule_func_result = _1c0dd85ec_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1c55450b7:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c0d8d6b2_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _1c0d908e5_pushErr(_1c0d90461_assignTypeChecker* _self_, jule::Str _25526_fmt, jule::Slice<jule::Any> _25539_args) {
	_1c0d2dbb3_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _25526_fmt, _25539_args);
}



inline jule::Bool _1c0d90b7b_checkValidity(_1c0d90461_assignTypeChecker* _self_) {
	jule::Bool _26013_valid = true;;
	{
		
		if ((_1c0ddb831_Fn((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c554876e:;
			{
				jule::Ptr<_1c0c98699_FnIns> _26313_f = _1c0ddb831_Fn((*(*(_self_))._field_d.alloc)._field_Kind);;
				{
					
					if (_1c0c99b2e_IsBuiltin(_26313_f.ptr())) {
						_case_begin_1c554a0cd:;
						{
							_1c0d908e5_pushErr(_self_, jule::Str::lit("builtin define cannot use as anonymous function", 47), jule::Slice<jule::Any>());
							_26013_valid=false;
						}
					}
					else if ((*((*(_26313_f))._field_Decl))._field_Binded) {
						_case_begin_1c554a177:;
						{
							_1c0d908e5_pushErr(_self_, jule::Str::lit("binded functions cannot use as anonymous function", 49), jule::Slice<jule::Any>());
							_26013_valid=false;
						}
					}
					else if (((!((*((*(_26313_f))._field_Decl))._field_Statically)) && _1c0c95e9e_IsMethod((*_26313_f.alloc)._field_Decl))) {
						_case_begin_1c554a1dd:;
						{
							_1c0d908e5_pushErr(_self_, jule::Str::lit("non-static methods cannot use as anonymous function", 51), jule::Slice<jule::Any>());
							_26013_valid=false;
						}
					}
					else if ((((*((*(_26313_f))._field_Decl))._field_Generics.len() > 0LL) && ((*_26313_f.alloc)._field_Generics.len() == 0LL))) {
						_case_begin_1c554a254:;
						{
							_1c0d908e5_pushErr(_self_, jule::Str::lit("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
							_1c0d2e026_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("instantiate generic function to use as anonymous function", 57), jule::Slice<jule::Any>());
							_26013_valid=false;
						}
					}
					_match_end_1c554a001:;
				};
			}
		}
		else if ((_1c0ddc36a_Tup((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c5548818:;
			{
				_1c0d908e5_pushErr(_self_, jule::Str::lit("tuples cannot assign to single define in same time", 50), jule::Slice<jule::Any>());
				_26013_valid=false;
			}
		}
		_match_end_1c55486e7:;
	};
	return _26013_valid;;
}



inline jule::Bool _1c0d90e12_checkConst(_1c0d90461_assignTypeChecker* _self_) {
	if (((!((*((*(_self_))._field_d))._field_untyped)) || (_1c0dda544_Prim((*(_self_))._field_dest.ptr()) == nullptr))) {
		return false;;
	};
	jule::Str _2929_kind = (*(_1c0dda544_Prim((*(_self_))._field_dest)))._field_Kind;;
	{
		
		if (_2021e5851_IsFloat(_2929_kind)) {
			_case_begin_1c55511c2:;
			{
				if ((!(_1c0d8c617_floatAssignable(&(_2929_kind), &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*(*(_self_))._field_d.alloc)._field_Constant))._field_Kind=_2929_kind;
			}
		}
		else if (_2021e5510_IsInt(_2929_kind)) {
			_case_begin_1c555125a:;
			{
				if ((!(_1c0d8d1c8_intAssignable(_2929_kind, &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*(*(_self_))._field_d.alloc)._field_Constant))._field_Kind=_2929_kind;
			}
		}
		else {
			_case_begin_1c555115b:;
			{
				return false;;
			}
		}
		_match_end_1c555103a:;
	};
	return true;;
}



inline jule::Bool _1c0d91198_checkCompatibility(_1c0d90461_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1c555345a:;
			{
				return false;;
			}
		}
		else if ((!(_1c0d90b7b_checkValidity(_self_)))) {
			_case_begin_1c5553504:;
			{
				return false;;
			}
		}
		else if (_1c0d90e12_checkConst(_self_)) {
			_case_begin_1c555356a:;
			{
				return true;;
			}
		}
		else if ((_1c0ddace7_Enum((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c55535d1:;
			{
				jule::Ptr<_1c0dd7de3_TypeKind> _32117_dkind = (*(_self_))._field_dest;;
				if ((_1c0ddace7_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_32117_dkind=(*((*(_1c0ddace7_Enum((*(_self_))._field_dest)))._field_Kind))._field_Kind;
				};
				jule::Ptr<_1c0de09bc_Prim> _32513_prim = _1c0dda544_Prim((*(_self_))._field_dest);;
				if (((_32513_prim == nullptr) || _1c0de41da_IsAny(_32513_prim.ptr()))) {
					goto _match_end_1c55527bc;
				};
				jule::Ptr<_1c0dd7de3_TypeKind> _33017_dest = (*(*(_1c0ddace7_Enum((*(*(_self_))._field_d.alloc)._field_Kind)))._field_Kind.alloc)._field_Kind;;
				return _1c0d3712d_checkTypeCompatibility((*(_self_))._field_s, &(_33017_dest), &(_32117_dkind), &((*(_self_))._field_errorToken));;
			}
		}
		_match_end_1c55527bc:;
	};
	return _1c0d37a02_checkTypeCompatibility1((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1c0d9142e_check(_1c0d90461_assignTypeChecker* _self_) {
	jule::Bool _3379_ok = _1c0d91198_checkCompatibility(_self_);;
	if ((_3379_ok && (!((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic)))) {
		_1c0e053e9_applyImplicitCast(&((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken));
	};
	return _3379_ok;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0d90461_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c556c8a3_annotateConstraintElem(_1c0d91d36_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0dd7de3_TypeKind>* _35749_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1c556e0ad:;
			{
				jule::Ptr<_1c0dd7de3_TypeKind> _36021_elem = nullptr;;
				{
					
{
						_case_begin_1c556ede4:;
						{
							_36021_elem=(*(_1c0ddb314_Arr((*(_35749_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1c556ed39:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1c0c61c06_ArrTypeDecl>()))._field_Elem;
				return _1c0d93541_annotateConstraint(_self_, &(_36021_elem));;
			}
		}
		_match_end_1c556e047:;
	};
	return false;;
}

inline jule::Bool _1c556c144_annotateConstraintElem(_1c0d91d36_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0dd7de3_TypeKind>* _35749_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1c5572a2e:;
			{
				jule::Ptr<_1c0dd7de3_TypeKind> _36021_elem = nullptr;;
				{
					
{
						_case_begin_1c55736bc:;
						{
							_36021_elem=(*(_1c0ddb59a_Slc((*(_35749_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1c55737aa:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1c0c60d6a_SlcTypeDecl>()))._field_Elem;
				return _1c0d93541_annotateConstraint(_self_, &(_36021_elem));;
			}
		}
		_match_end_1c55729b8:;
	};
	return false;;
}

inline jule::Bool _1c556e399_annotateConstraintElem(_1c0d91d36_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0dd7de3_TypeKind>* _35749_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1c55764a0:;
			{
				jule::Ptr<_1c0dd7de3_TypeKind> _36021_elem = nullptr;;
				{
					
{
						_case_begin_1c557735d:;
						{
							_36021_elem=(*(_1c0ddaa61_Ptr((*(_35749_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1c557722b:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1c0c61464_PtrTypeDecl>()))._field_Elem;
				return _1c0d93541_annotateConstraint(_self_, &(_36021_elem));;
			}
		}
		_match_end_1c5576439:;
	};
	return false;;
}

inline jule::Bool _1c557689b_annotateConstraintElem(_1c0d91d36_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0dd7de3_TypeKind>* _35749_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1c5579b02:;
			{
				jule::Ptr<_1c0dd7de3_TypeKind> _36021_elem = nullptr;;
				{
					
{
						_case_begin_1c557aa26:;
						{
							_36021_elem=(*(_1c0dda7ca_Sptr((*(_35749_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1c557a87d:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1c0c609d5_SptrTypeDecl>()))._field_Elem;
				return _1c0d93541_annotateConstraint(_self_, &(_36021_elem));;
			}
		}
		_match_end_1c5579a8b:;
	};
	return false;;
}



inline jule::Bool _1c0d9272c_annotateConstraintMap(_1c0d91d36_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0dd7de3_TypeKind>* _37745_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1c555a891:;
			{
				jule::Ptr<_1c0de6660_Map> _38017_m = _1c0ddc0d4_Map((*(_37745_k)).ptr());;
				jule::Ptr<_1c0c62454_MapTypeDecl> _38117_m2 = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1c0c62454_MapTypeDecl>();;
				(*(_self_))._field_c=(*(_38117_m2))._field_Key;
				if ((!(_1c0d93541_annotateConstraint(_self_, &((*(_38017_m))._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=(*_38117_m2.alloc)._field_Val;
				__jule_func_result = _1c0d93541_annotateConstraint(_self_, &((*_38017_m.alloc)._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1c555a82a:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1c0d92a6d_annotateConstraintTup(_1c0d91d36_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0dd7de3_TypeKind>* _39245_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1c555d784:;
			{
				jule::Ptr<_1c0c61167_TupleTypeDecl> _39517_tup = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1c0c61167_TupleTypeDecl>();;
				jule::Ptr<_1c0de5ab0_Tuple> _39617_tup2 = _1c0ddc36a_Tup((*(_39245_k)).ptr());;
				{
					auto expr = &((*(_39617_tup2))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c556008d:;
					if (it != expr_end) {
						jule::Ptr<_1c0dd7de3_TypeKind> _39725_t2 = *it;
						{
							{
								auto expr = &((*(_39517_tup))._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c55609ea:;
								if (it != expr_end) {
									jule::Ptr<_1c0c5e93a_TypeDecl> _39829_t = *it;
									{
										(*(_self_))._field_c=_39829_t;
										if (_1c0d93541_annotateConstraint(_self_, &(_39725_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1c55609ea:;
									++it;
									goto _iter_begin_1c55609ea;
								}
								_iter_end_1c55609ea:;
							};
						}
						_iter_next_1c556008d:;
						++it;
						goto _iter_begin_1c556008d;
					}
					_iter_end_1c556008d:;
				};
			}
		}
		_match_end_1c555d71d:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1c0d92dae_annotateConstraintFn(_1c0d91d36_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0dd7de3_TypeKind>* _40944_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1c5560ed4:;
			{
				jule::Ptr<_1c0c715ea_FnDecl> _41217_pf = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1c0c715ea_FnDecl>();;
				jule::Ptr<_1c0c98699_FnIns> _41317_f = _1c0ddb831_Fn((*(_40944_k)).ptr());;
				{
					auto expr = &((*(_41317_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c5562eb4:;
					if (it != expr_end) {
						jule::I64 _41418_i = it - expr->begin();
						jule::Ptr<_1c0c976ed_ParamIns> _41425_fp = *it;
						{
							(*(_self_))._field_c=(*((*(_41217_pf))._field_Params[_41418_i]))._field_Kind;
							if (_1c0d93541_annotateConstraint(_self_, &((*(_41425_fp))._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1c5562eb4:;
						++it;
						_41418_i++;
						goto _iter_begin_1c5562eb4;
					}
					_iter_end_1c5562eb4:;
				};
				if (((*_41217_pf.alloc)._field_Result != nullptr)) {
					(*(_self_))._field_c=(*(*_41217_pf.alloc)._field_Result.alloc)._field_Kind;
					if (_1c0d93541_annotateConstraint(_self_, &((*_41317_f.alloc)._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1c5560e6d:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1c0d93200_annotateConstraintIdent(_1c0d91d36_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0dd7de3_TypeKind>* _43047_k) {
	jule::Ptr<_1c0c60045_IdentTypeDecl> _43113_ident = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1c0c60045_IdentTypeDecl>(&__jule_any_type74);;
	jule::Ptr<_1c0c83552_StructIns> _43213_s = _1c0ddbab7_Struct((*(_43047_k)).ptr());;
	{
		auto expr = &((*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5566902:;
		if (it != expr_end) {
			jule::I64 _43313_i = it - expr->begin();
			jule::Ptr<_1c0c6bb45_GenericDecl> _43316_g = *it;
			{
				if (((*(_43316_g))._field_Ident == (*(_43113_ident))._field_Ident)) {
					jule::Ptr<_1c0dd650c_InsGeneric> _43521_fg = (*((*(_self_))._field_f))._field_Generics[_43313_i];;
					if ((_43521_fg != nullptr)) {
						return false;;
					};
					_1c0d938a4_pushGeneric(_self_, _43047_k, _43313_i);
					return true;;
				};
				if ((_43213_s == nullptr)) {
					goto _iter_next_1c5566902;
				};
				jule::Ptr<_1c0c5e93a_TypeDecl> _44517_c = (*(_self_))._field_c;;
				{
					auto expr = &((*_43113_ident.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c5567392:;
					if (it != expr_end) {
						jule::Ptr<_1c0c5e93a_TypeDecl> _44625_ig = *it;
						{
							(*(_self_))._field_c=_44625_ig;
							{
								auto expr = &((*(_43213_s))._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c556a054:;
								if (it != expr_end) {
									jule::Ptr<_1c0dd650c_InsGeneric> _44829_sg = *it;
									{
										if (_1c0d93541_annotateConstraint(_self_, &((*(_44829_sg))._field_Kind))) {
											return true;;
										};
									}
									_iter_next_1c556a054:;
									++it;
									goto _iter_begin_1c556a054;
								}
								_iter_end_1c556a054:;
							};
						}
						_iter_next_1c5567392:;
						++it;
						goto _iter_begin_1c5567392;
					}
					_iter_end_1c5567392:;
				};
				(*(_self_))._field_c=_44517_c;
			}
			_iter_next_1c5566902:;
			++it;
			_43313_i++;
			goto _iter_begin_1c5566902;
		}
		_iter_end_1c5566902:;
	};
	return false;;
}



inline jule::Bool _1c0d93541_annotateConstraint(_1c0d91d36_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0dd7de3_TypeKind>* _45942_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1c5569949:;
			{
				return _1c0d93200_annotateConstraintIdent(_self_, _45942_k);;
			}
		}
		_match_end_1c55698d3:;
	};
	{
		
		if ((_1c0ddb314_Arr((*(_45942_k)).ptr()) != nullptr)) {
			_case_begin_1c556b198:;
			{
				return _1c556c8a3_annotateConstraintElem(_self_, _45942_k);;
			}
		}
		else if ((_1c0ddb59a_Slc((*(_45942_k)).ptr()) != nullptr)) {
			_case_begin_1c556b20e:;
			{
				return _1c556c144_annotateConstraintElem(_self_, _45942_k);;
			}
		}
		else if ((_1c0ddaa61_Ptr((*(_45942_k)).ptr()) != nullptr)) {
			_case_begin_1c556b275:;
			{
				return _1c556e399_annotateConstraintElem(_self_, _45942_k);;
			}
		}
		else if ((_1c0dda7ca_Sptr((*(_45942_k)).ptr()) != nullptr)) {
			_case_begin_1c556b2db:;
			{
				return _1c557689b_annotateConstraintElem(_self_, _45942_k);;
			}
		}
		else if ((_1c0ddc0d4_Map((*(_45942_k)).ptr()) != nullptr)) {
			_case_begin_1c556b352:;
			{
				return _1c0d9272c_annotateConstraintMap(_self_, _45942_k);;
			}
		}
		else if ((_1c0ddb831_Fn((*(_45942_k)).ptr()) != nullptr)) {
			_case_begin_1c556b94b:;
			{
				return _1c0d92dae_annotateConstraintFn(_self_, _45942_k);;
			}
		}
		else if ((_1c0ddc36a_Tup((*(_45942_k)).ptr()) != nullptr)) {
			_case_begin_1c556b9b2:;
			{
				return _1c0d92a6d_annotateConstraintTup(_self_, _45942_k);;
			}
		}
		else {
			_case_begin_1c556b4d9:;
			{
				return false;;
			}
		}
		_match_end_1c556b484:;
	};
}



inline void _1c0d938a4_pushGeneric(_1c0d91d36_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0dd7de3_TypeKind>* _48435_k, jule::I64 _48449_i) {
	(*((*(_self_))._field_f))._field_Generics[_48449_i]=jule::new_ptr<_1c0dd650c_InsGeneric>(_1c0dd650c_InsGeneric{._field_Kind=(*(_48435_k)), });
	jule::Ptr<_1c0c6bb45_GenericDecl> _48613_gd = (*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics[_48449_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c557db17:;
		if (it != expr_end) {
			jule::Ptr<_1c0dd7de3_TypeKind> _48721_ignored = *it;
			{
				if (((*(_48613_gd))._field_Ident == _1c0dd82ab_Str(_48721_ignored.ptr()))) {
					(*_48721_ignored.alloc)._field_Kind=(*((*(_48435_k))))._field_Kind;
				};
			}
			_iter_next_1c557db17:;
			++it;
			goto _iter_begin_1c557db17;
		}
		_iter_end_1c557db17:;
	};
	if ((((*_48613_gd.alloc)._field_Constraint == nullptr) || ((*((*_48613_gd.alloc)._field_Constraint))._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=(*((*_48613_gd.alloc)._field_Constraint))._field_Mask[0LL];
	_1c0d93541_annotateConstraint(_self_, _48435_k);
}



inline jule::Bool _1c0d93be5_annotatePrim(_1c0d91d36_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0dd7de3_TypeKind>* _49943_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1c0d95c19_annotateAny(_self_, _49943_k);
	return __jule_func_result;;
}



inline jule::Bool _1c0d94036_annotateArr(_1c0d91d36_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0dd7de3_TypeKind>* _50342_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c0de72dc_Arr> _50413_parr = _1c0ddb314_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_50413_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c0de72dc_Arr> _50813_arr = _1c0ddb314_Arr((*(_50342_k)).ptr());;
	(*(_self_))._field_k=(&((*(_50413_parr))._field_Elem));
	__jule_func_result = _1c0d9605a_annotateKind(_self_, &((*(_50813_arr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1c0d94377_annotateSlc(_1c0d91d36_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0dd7de3_TypeKind>* _51342_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c0de4ebb_Slc> _51413_pslc = _1c0ddb59a_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_51413_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c0de4ebb_Slc> _51813_slc = _1c0ddb59a_Slc((*(_51342_k)).ptr());;
	(*(_self_))._field_k=(&((*(_51413_pslc))._field_Elem));
	__jule_func_result = _1c0d9605a_annotateKind(_self_, &((*(_51813_slc))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1c0d94773_checkMapKey(_1c0d91d36_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0dd7de3_TypeKind>* _52341_k, jule::Ptr<_1c0dd7de3_TypeKind>* _52361_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c0dd7de3_TypeKind>* _52413_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_52341_k;
	__jule_func_result=_1c0d9605a_annotateKind(_self_, _52361_ck);
	(*(_self_))._field_k=_52413_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1c0d94ab4_annotateMap(_1c0d91d36_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0dd7de3_TypeKind>* _53142_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c0de6660_Map> _53213_pmap = _1c0ddc0d4_Map((*((*(_self_))._field_k)).ptr());;
	if ((_53213_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c0de6660_Map> _53613_m = _1c0ddc0d4_Map((*(_53142_k)).ptr());;
	__jule_func_result = (_1c0d94773_checkMapKey(_self_, (&((*(_53213_pmap))._field_Key)), &((*(_53613_m))._field_Key)) && _1c0d94773_checkMapKey(_self_, (&((*(_53213_pmap))._field_Val)), &((*_53613_m.alloc)._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1c0d94e05_annotateFn(_1c0d91d36_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0dd7de3_TypeKind>* _54141_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c0c98699_FnIns> _54213_pf = _1c0ddb831_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_54213_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c0c98699_FnIns> _54613_f = _1c0ddb831_Fn((*(_54141_k)).ptr());;
	{
		
		if (((*(_54213_pf))._field_Params.len() != (*(_54613_f))._field_Params.len())) {
			_case_begin_1c558b295:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1c0c95c18_IsVoid((*(_54213_pf))._field_Decl.ptr()) != _1c0c95c18_IsVoid((*(_54613_f))._field_Decl))) {
			_case_begin_1c558b33e:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1c558b22e:;
	};
	__jule_func_result=true;
	jule::Ptr<_1c0dd7de3_TypeKind>* _55513_old = (*(_self_))._field_k;;
	{
		auto expr = &((*(_54613_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c558d1ba:;
		if (it != expr_end) {
			jule::I64 _55614_i = it - expr->begin();
			jule::Ptr<_1c0c976ed_ParamIns> _55621_fp = *it;
			{
				(*(_self_))._field_k=(&((*((*(_54213_pf))._field_Params[_55614_i]))._field_Kind));
				__jule_func_result=(_1c0d9605a_annotateKind(_self_, &((*(_55621_fp))._field_Kind)) && __jule_func_result);
			}
			_iter_next_1c558d1ba:;
			++it;
			_55614_i++;
			goto _iter_begin_1c558d1ba;
		}
		_iter_end_1c558d1ba:;
	};
	if ((!(_1c0c95c18_IsVoid((*(_54213_pf))._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&((*(_54213_pf))._field_Result));
		__jule_func_result=(_1c0d9605a_annotateKind(_self_, &((*_54613_f.alloc)._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_55513_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1c0d95246_annotatePtr(_1c0d91d36_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0dd7de3_TypeKind>* _57042_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c0de7cb0_Ptr> _57113_pptr = _1c0ddaa61_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_57113_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c0de7cb0_Ptr> _57513_ptr = _1c0ddaa61_Ptr((*(_57042_k)).ptr());;
	(*(_self_))._field_k=(&((*(_57113_pptr))._field_Elem));
	__jule_func_result = _1c0d9605a_annotateKind(_self_, &((*(_57513_ptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1c0d95587_annotateSptr(_1c0d91d36_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0dd7de3_TypeKind>* _58043_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c0de44e8_Sptr> _58113_ssptr = _1c0dda7ca_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_58113_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c0de44e8_Sptr> _58513_sptr = _1c0dda7ca_Sptr((*(_58043_k)).ptr());;
	(*(_self_))._field_k=(&((*(_58113_ssptr))._field_Elem));
	__jule_func_result = _1c0d9605a_annotateKind(_self_, &((*(_58513_sptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1c0d958c8_annotateStruct(_1c0d91d36_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0dd7de3_TypeKind>* _59045_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c0c83552_StructIns> _59113_s = _1c0ddbab7_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_59113_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c0c83552_StructIns> _59513_s2 = _1c0ddbab7_Struct((*(_59045_k)).ptr());;
	if (((*(_59113_s))._field_Generics.len() != (*(_59513_s2))._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_59113_s))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5597119:;
		if (it != expr_end) {
			jule::I64 _59914_i = it - expr->begin();
			jule::Ptr<_1c0dd650c_InsGeneric> _59921_g = *it;
			{
				jule::Ptr<_1c0dd650c_InsGeneric> _60017_g2 = (*_59513_s2.alloc)._field_Generics[_59914_i];;
				if (_1c0dd85ec_Equal((*(_59921_g))._field_Kind, (*(_60017_g2))._field_Kind)) {
					goto _iter_next_1c5597119;
				};
				(*(_self_))._field_k=(&((*_59921_g.alloc)._field_Kind));
				if ((!(_1c0d9605a_annotateKind(_self_, &((*_60017_g2.alloc)._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c5597119:;
			++it;
			_59914_i++;
			goto _iter_begin_1c5597119;
		}
		_iter_end_1c5597119:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c0d95c19_annotateAny(_1c0d91d36_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0dd7de3_TypeKind>* _61242_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _6139_kind = _1c0dd82ab_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c559a6b1:;
		if (it != expr_end) {
			jule::I64 _61413_i = it - expr->begin();
			jule::Ptr<_1c0c6bb45_GenericDecl> _61416_g = *it;
			{
				if ((_6139_kind != (*(_61416_g))._field_Ident)) {
					goto _iter_next_1c559a6b1;
				};
				jule::Ptr<_1c0dd650c_InsGeneric> _61813_t = (*((*(_self_))._field_f))._field_Generics[_61413_i];;
				{
					
					if ((_61813_t == nullptr) || ((*(_61813_t))._field_Kind == nullptr)) {
						_case_begin_1c559beba:;
						{
							_1c0d938a4_pushGeneric(_self_, _61242_k, _61413_i);
						}
					}
					else if ((!(_1c0dd85ec_Equal((*(_61813_t))._field_Kind, (*(_61242_k)))))) {
						_case_begin_1c559c064:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1c559bd88:;
				};
				(*((*((*(_self_))._field_k))))._field_Kind=(*((*(_61242_k))))._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1c559a6b1:;
			++it;
			_61413_i++;
			goto _iter_begin_1c559a6b1;
		}
		_iter_end_1c559a6b1:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1c0d9605a_annotateKind(_1c0d91d36_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0dd7de3_TypeKind>* _63343_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1c0d95c19_annotateAny(_self_, _63343_k)) {
			_case_begin_1c559e5a5:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c0dda544_Prim((*(_63343_k)).ptr()) != nullptr)) {
			_case_begin_1c559e61b:;
			{
				__jule_func_result = _1c0d93be5_annotatePrim(_self_, _63343_k);
				return __jule_func_result;;
			}
		}
		else if ((_1c0ddb314_Arr((*(_63343_k)).ptr()) != nullptr)) {
			_case_begin_1c559e682:;
			{
				__jule_func_result = _1c0d94036_annotateArr(_self_, _63343_k);
				return __jule_func_result;;
			}
		}
		else if ((_1c0ddb59a_Slc((*(_63343_k)).ptr()) != nullptr)) {
			_case_begin_1c559e709:;
			{
				__jule_func_result = _1c0d94377_annotateSlc(_self_, _63343_k);
				return __jule_func_result;;
			}
		}
		else if ((_1c0ddc0d4_Map((*(_63343_k)).ptr()) != nullptr)) {
			_case_begin_1c559e8b3:;
			{
				__jule_func_result = _1c0d94ab4_annotateMap(_self_, _63343_k);
				return __jule_func_result;;
			}
		}
		else if ((_1c0ddb831_Fn((*(_63343_k)).ptr()) != nullptr)) {
			_case_begin_1c559e929:;
			{
				__jule_func_result = _1c0d94e05_annotateFn(_self_, _63343_k);
				return __jule_func_result;;
			}
		}
		else if ((_1c0ddaa61_Ptr((*(_63343_k)).ptr()) != nullptr)) {
			_case_begin_1c559e990:;
			{
				__jule_func_result = _1c0d95246_annotatePtr(_self_, _63343_k);
				return __jule_func_result;;
			}
		}
		else if ((_1c0dda7ca_Sptr((*(_63343_k)).ptr()) != nullptr)) {
			_case_begin_1c559ea06:;
			{
				__jule_func_result = _1c0d95587_annotateSptr(_self_, _63343_k);
				return __jule_func_result;;
			}
		}
		else if ((_1c0ddbab7_Struct((*(_63343_k)).ptr()) != nullptr)) {
			_case_begin_1c559ea7d:;
			{
				__jule_func_result = _1c0d958c8_annotateStruct(_self_, _63343_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c559e484:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1c559e011:;
	};
}



inline jule::Bool _1c0d962e1_annotate(_1c0d91d36_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*((*(_self_))._field_p))._field_Kind));
	__jule_func_result = _1c0d9605a_annotateKind(_self_, &((*((*(_self_))._field_a))._field_Kind));
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0d91d36_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1c0d97204_pushErrToken(_1c0d96b93_fnCallArgChecker* _self_, jule::Ptr<_1c0c49480_Token> _67831_token, jule::Str _67846_fmt, jule::Slice<jule::Any> _67859_args) {
	_1c0d2dbb3_pushErr((*((*(_self_))._field_e))._field_s.ptr(), _67831_token, _67846_fmt, _67859_args);
}



inline void _1c0d97567_pushErr(_1c0d96b93_fnCallArgChecker* _self_, jule::Str _68226_fmt, jule::Slice<jule::Any> _68239_args) {
	_1c0d97204_pushErrToken(_self_, (*(_self_))._field_errorToken, _68226_fmt, _68239_args);
}



inline jule::Slice<jule::Ptr<_1c0c976ed_ParamIns>> _1c0d977ed_getParams(_1c0d96b93_fnCallArgChecker* _self_) {
	if (((((*((*(_self_))._field_f))._field_Params.len() > 0LL) && ((*((*(*(_self_))._field_f.alloc)._field_Params[0LL]))._field_Decl != nullptr)) && _1c0c943dc_IsSelf((*((*(*(_self_))._field_f.alloc)._field_Params[0LL]))._field_Decl))) {
		return (*(*(_self_))._field_f.alloc)._field_Params.slice(1LL);;
	};
	return (*(*(_self_))._field_f.alloc)._field_Params;;
}



inline jule::Bool _1c0d97b3e_checkCounts(_1c0d96b93_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1c0c976ed_ParamIns>>* _69531_params) {
	jule::Bool __jule_func_result = false;
	jule::I64 _69613_n = (*(_69531_params)).len();;
	if (((_69613_n > 0LL) && _1c0c943dc_IsSelf((*((*(_69531_params))[0LL]))._field_Decl.ptr()))) {
		(_69613_n)--;
	};
	jule::I64 _70113_diff = (_69613_n - (*(_self_))._field_args.len());;
	jule::Str _70213_log = jule::Str();;
	{
		
		if ((_70113_diff == 0LL)) {
			_case_begin_1c55ab42a:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_69613_n > 0LL) && (*(*((*(_69531_params))[(_69613_n - 1LL)]))._field_Decl.alloc)._field_Variadic)) {
			_case_begin_1c55ab33c:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_70113_diff < 0LL) || (_70113_diff > (*(_69531_params)).len()))) {
			_case_begin_1c55aaeeb:;
			{
				_70213_log=jule::Str::lit("argument overflow: passed more argument than expected to call @", 63);
			}
		}
		else {
			_case_begin_1c55aae85:;
			{
				_70213_log=jule::Str::lit("missing arguments to call @", 27);
			}
		}
		_match_end_1c55aae30:;
	};
	_234c76a64_StrBuilder _71313_err = static__234c76ec6_New(32LL);;
	_234c77537_WriteStr(&_71313_err, (*((*((*(_self_))._field_f))._field_Decl))._field_Ident);
	_234c77537_WriteStr(&_71313_err, jule::Str::lit("\n       want (", 14));
	{
		auto expr = _69531_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c55adc13:;
		if (it != expr_end) {
			jule::I64 _71613_i = it - expr->begin();
			jule::Ptr<_1c0c976ed_ParamIns> *_71616_p = it;
			{
				_234c77537_WriteStr(&_71313_err, _1c0dd82ab_Str((*((*(_71616_p))))._field_Kind.ptr()));
				if ((((*(_69531_params)).len() - _71613_i) > 1LL)) {
					_234c77537_WriteStr(&_71313_err, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1c55adc13:;
			++it;
			_71613_i++;
			goto _iter_begin_1c55adc13;
		}
		_iter_end_1c55adc13:;
	};
	_234c777e0_WriteByte(&_71313_err, ')');
	_1c0d97567_pushErr(_self_, _70213_log, jule::Slice<jule::Any>::make({jule::Any(_234c77d2e_Str(&_71313_err), &__jule_any_type4)}));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1c0d980e5_checkArg(_1c0d96b93_fnCallArgChecker* _self_, jule::Ptr<_1c0c976ed_ParamIns>* _72732_p, jule::Ptr<_1c0da69e9_Data>* _72751_arg, jule::Ptr<_1c0c49480_Token>* _72768_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1c0c9a976_parameterUsesGenerics(_72732_p, &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics)))) {
		__jule_func_result=((!((*((*((*(_72732_p))))._field_Decl))._field_Variadic)) && _1c0da077e_isGoodValueToInfer(_72751_arg));
		if (__jule_func_result) {
			_1c0d91d36_dynamicTypeAnnotation _73221_dta = _1c0d91d36_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_72732_p)), ._field_a=(*(_72751_arg)), ._field_errorToken=(*(_72768_errorToken)), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1c0d962e1_annotate(&_73221_dta);
		};
		if ((!(__jule_func_result))) {
			_1c0d97204_pushErrToken(_self_, (*(_72768_errorToken)), jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1c0d3aa5a_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, (*(*((*(_72732_p))))._field_Decl.alloc)._field_Mutable, (*(*((*(_72732_p))))._field_Decl.alloc)._field_Reference, &((*((*(_72732_p))))._field_Kind), _72751_arg, _72768_errorToken)) {
		__jule_func_result = _1c0d366c1_checkAssignType((*(*(_self_))._field_e.alloc)._field_s, (*(*((*(_72732_p))))._field_Decl.alloc)._field_Reference, &((*((*(_72732_p))))._field_Kind), _72751_arg, (*(_72768_errorToken)));
		return __jule_func_result;;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1c0d984e1_push(_1c0d96b93_fnCallArgChecker* _self_, jule::Ptr<_1c0c976ed_ParamIns>* _75628_p, jule::Ptr<_1c0c63c6e_Expr> _75646_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c0dd7de3_TypeKind> _75713_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _7589_oldImmut = (*(*(_self_))._field_e.alloc)._field_immutable;;
	(*(*(_self_))._field_e.alloc)._field_immutable=(!((*((*((*(_75628_p))))._field_Decl))._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*(*((*(_75628_p))))._field_Decl.alloc)._field_Variadic)))) {
		(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_75628_p))))._field_Kind;
	} else {
		(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
	};
	jule::Ptr<_1c0da69e9_Data> _76613_d = _1c0dc6981_evalExpr((*(_self_))._field_e, _75646_arg);;
	(*(*(_self_))._field_e.alloc)._field_prefix=_75713_old;
	(*(*(_self_))._field_e.alloc)._field_immutable=_7589_oldImmut;
	if ((_76613_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1c0d980e5_checkArg(_self_, _75628_p, &(_76613_d), &((*(_75646_arg))._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_76613_d))._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _1c0d988dc_pushVariadic(_1c0d96b93_fnCallArgChecker* _self_, jule::Ptr<_1c0c976ed_ParamIns>* _78036_p, jule::I64 _78054_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _78213_variadiced = false;;
	jule::Bool _7839_more = ((_78054_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1c0c89d0b_SliceExprModel> _78413_model = jule::new_ptr<_1c0c89d0b_SliceExprModel>(_1c0c89d0b_SliceExprModel{._field_ElemKind=(*((*(_78036_p))))._field_Kind, });;
	jule::Ptr<_1c0dd7de3_TypeKind> _78813_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Ptr<_1c0dd7de3_TypeKind> _79513_oldKind = (*((*(_78036_p))))._field_Kind;;
	(*((*(_78036_p))))._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>((*(*((*(_78036_p))))._field_Kind.alloc));
	(*(*((*(_78036_p))))._field_Kind.alloc)._field_Variadic=false;
	__JULE_DEFER({
		(*(*((*(_78036_p))))._field_Kind.alloc)._field_Variadic=false;
		(*((*(_78036_p))))._field_Kind=_79513_oldKind;
	});;
	for (; (_78054_i < (*(_self_))._field_args.len()); (_78054_i)++) {
		{
			jule::Ptr<_1c0c63c6e_Expr> _80417_arg = (*(_self_))._field_args[_78054_i];;
			{
				auto &_match_expr{ (*(_80417_arg))._field_Kind };
				
				if (_match_expr.type == &__jule_any_type75) {
					_case_begin_1c55c5b4d:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(jule::new_ptr<_1c0de4ebb_Slc>(_1c0de4ebb_Slc{._field_Elem=(*((*(_78036_p))))._field_Kind}), 22)});
					}
				}
				else {
					_case_begin_1c55c5e4a:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_78036_p))))._field_Kind;
					}
				}
				_match_end_1c55c5de5:;
			};
			jule::Ptr<_1c0da69e9_Data> _81717_d = _1c0dc62ee_eval((*(_self_))._field_e, _80417_arg);;
			if ((_81717_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1c55c5103;
			};
			if ((*((*(_81717_d))._field_Kind))._field_Variadic) {
				_78213_variadiced=true;
				(*(*((*(_78036_p))))._field_Kind.alloc)._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1c0d980e5_checkArg(_self_, _78036_p, &(_81717_d), &((*(_80417_arg))._field_Token)));
				(*(*((*(_78036_p))))._field_Kind.alloc)._field_Variadic=false;
				{
					auto &_match_expr{ (*(_81717_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type76) {
						_case_begin_1c55c85ac:;
						{
							_78413_model=(*(_81717_d))._field_Model.unsafe_cast_ptr<_1c0c89d0b_SliceExprModel>();
							(*(_78413_model))._field_ElemKind=(*((*(_78036_p))))._field_Kind;
						}
					}
					else {
						_case_begin_1c55c9bc9:;
						{
							_78413_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_81717_d))._field_Model); };
						}
					}
					_match_end_1c55c9b74:;
				};
				(_78054_i)++;
				goto _iter_end_1c55c5103;
			};
			__jule_func_result=(__jule_func_result && _1c0d980e5_checkArg(_self_, _78036_p, &(_81717_d), &((*_80417_arg.alloc)._field_Token)));
			(*(_78413_model))._field_Elems=jule::append((*_78413_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({(*(_81717_d))._field_Model}));
		}
	_iter_next_1c55c5103:;
	}
	_iter_end_1c55c5103:;;
	(*(*(_self_))._field_e.alloc)._field_prefix=_78813_old;
	if ((_78213_variadiced && _7839_more)) {
		_1c0d97204_pushErrToken(_self_, (*((*(_self_))._field_args[_78054_i]))._field_Token, jule::Str::lit("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
	};
	if ((_78413_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_78413_model, &__jule_any_type76)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1c0d98c2d_checkArgs(_1c0d96b93_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1c0c976ed_ParamIns>>* _86133_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _8629_arg = (*((*(_self_))._field_e))._field_arg;;
	(*(*(_self_))._field_e.alloc)._field_arg=true;
	__jule_func_result=true;
	jule::I64 _86613_i = 0LL;;
	if ((((*(_86133_params)).len() > 0LL) && _1c0c943dc_IsSelf((*((*(_86133_params))[0LL]))._field_Decl.ptr()))) {
		(_86613_i)++;
	};
	_julec_label_1c55d0020:;
	while ((_86613_i < (*(_86133_params)).len())) {
		{
			jule::Ptr<_1c0c976ed_ParamIns> _87317_p = (*(_86133_params))[_86613_i];;
			{
				
				if ((*(*(_87317_p))._field_Decl.alloc)._field_Variadic) {
					_case_begin_1c55d1b7b:;
					{
						__jule_func_result=(_1c0d988dc_pushVariadic(_self_, &(_87317_p), _86613_i) && __jule_func_result);
						goto _iter_end_1c55d03a5;
					}
				}
				else if (((*(_self_))._field_args.len() <= _86613_i)) {
					_case_begin_1c55d1c7a:;
					{
						__jule_func_result=false;
						goto _iter_end_1c55d03a5;
					}
				}
				else {
					_case_begin_1c55d17c4:;
					{
						__jule_func_result=(_1c0d984e1_push(_self_, &(_87317_p), (*(_self_))._field_args[_86613_i]) && __jule_func_result);
					}
				}
				_match_end_1c55d175d:;
			};
			(_86613_i)++;
		}
	_iter_next_1c55d03a5:;
	}
	_iter_end_1c55d03a5:;;
	(*(*(_self_))._field_e.alloc)._field_arg=_8629_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1c0d98eb4_checkDynamicTypeAnnotation(_1c0d96b93_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_f))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c55d3e47:;
		if (it != expr_end) {
			jule::Ptr<_1c0dd650c_InsGeneric> _89316_g = *it;
			{
				if ((_89316_g == nullptr)) {
					_1c0d97567_pushErr(_self_, jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c55d3e47:;
			++it;
			goto _iter_begin_1c55d3e47;
		}
		_iter_end_1c55d3e47:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c0d9924a_check(_1c0d96b93_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1c0c976ed_ParamIns>> _90313_params = _1c0d977ed_getParams(_self_);;
	__jule_func_result=_1c0d97b3e_checkCounts(_self_, &(_90313_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1c0d98c2d_checkArgs(_self_, &(_90313_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1c0d98eb4_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0d96b93_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1c0d9a12a_pushErr(_1c0d99aca_structLitChecker* _self_, jule::Ptr<_1c0c49480_Token> _94126_token, jule::Str _94141_fmt, jule::Slice<jule::Any> _94154_args) {
	_1c0da8c71_pushErr((*(_self_))._field_e.ptr(), _94126_token, _94141_fmt, _94154_args);
}



inline void _1c0d9a48d_pushSuggestion(_1c0d99aca_structLitChecker* _self_, jule::Str _94633_fmt, jule::Slice<jule::Any> _94646_args) {
	_1c0da90d4_pushSuggestion((*(_self_))._field_e.ptr(), _94633_fmt, _94646_args);
}



inline void _1c0d9a8ab_pushMatch(_1c0d99aca_structLitChecker* _self_, jule::Ptr<_1c0c829a2_FieldIns>* _95033_f, jule::Ptr<_1c0da69e9_Data>* _95052_d, jule::Ptr<_1c0c49480_Token>* _95067_errorToken) {
	;
	jule::Bool _9569_mutable = ((!((*((*(_self_))._field_e))._field_immutable)) || ((*((*((*(_95033_f))))._field_Decl))._field_Mutable && ((*((*(_self_))._field_s))._field_Methods.len() > 0LL)));;
	if (_1c0d3aa5a_checkValidityForInitExpr((*(*(_self_))._field_e.alloc)._field_s, _9569_mutable, false, &((*((*(_95033_f))))._field_Kind), _95052_d, _95067_errorToken)) {
		_1c0d366c1_checkAssignType((*(*(_self_))._field_e.alloc)._field_s, false, &((*((*(_95033_f))))._field_Kind), _95052_d, (*(_95067_errorToken)));
	};
	{ jule::Slice<jule::Ptr<_1c0c88359_StructArgExprModel>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_1c0c88359_StructArgExprModel>(_1c0c88359_StructArgExprModel{._field_Token=(*(_95067_errorToken)), ._field_Field=(*(_95033_f)), ._field_Expr=(*(_95052_d))})); };
}



inline void _1c0d9ac1e_checkPair(_1c0d99aca_structLitChecker* _self_, jule::Ptr<_1c0c6848d_FieldExprPair>* _96933_pair, jule::Slice<jule::Ptr<_1c0c63c6e_Expr>>* _96960_exprs) {
	jule::Ptr<_1c0c829a2_FieldIns> _97113_f = _1c0c8490a_FindField((*(_self_))._field_s.ptr(), (*((*((*(_96933_pair))))._field_Field))._field_Kind);;
	if ((_97113_f == nullptr)) {
		_1c0d9a12a_pushErr(_self_, (*((*(_96933_pair))))._field_Field, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_96933_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4)}));
		return;;
	};
	if ((!(_1c0d2e422_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_97113_f))._field_Decl))._field_Public, (*(*(_97113_f))._field_Decl.alloc)._field_Token)))) {
		_1c0d9a12a_pushErr(_self_, (*((*(_96933_pair))))._field_Field, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_96933_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4)}));
		_1c0d9a48d_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	_julec_label_1c55e00da:;
	{
		auto expr = _96960_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c55dcdda:;
		if (it != expr_end) {
			jule::Ptr<_1c0c63c6e_Expr> _98321_expr = *it;
			{
				{
					auto &_match_expr{ (*(_98321_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type77) {
						_case_begin_1c55e14b5:;
						{
							jule::Ptr<_1c0c6848d_FieldExprPair> _98621_dpair = (*(_98321_expr))._field_Kind.unsafe_cast_ptr<_1c0c6848d_FieldExprPair>();;
							{
								
								if (((*(_96933_pair)) == _98621_dpair)) {
									_case_begin_1c55e2483:;
									{
										goto _iter_end_1c55dcdda;
									}
								}
								else if (((*(*((*(_96933_pair))))._field_Field.alloc)._field_Kind == (*(*(_98621_dpair))._field_Field.alloc)._field_Kind)) {
									_case_begin_1c55e252c:;
									{
										_1c0d9a12a_pushErr(_self_, (*((*(_96933_pair))))._field_Field, jule::Str::lit("@ already has expression", 24), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_96933_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4)}));
										goto _iter_end_1c55dcdda;
									}
								}
								_match_end_1c55e240b:;
							};
						}
					}
					_match_end_1c55e144e:;
				};
			}
			_iter_next_1c55dcdda:;
			++it;
			goto _iter_begin_1c55dcdda;
		}
		_iter_end_1c55dcdda:;
	};
	jule::Ptr<_1c0dd7de3_TypeKind> _99713_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_99713_prefix;
	});;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_97113_f))._field_Kind;
	jule::Ptr<_1c0da69e9_Data> _100113_d = _1c0dc6981_evalExpr((*(_self_))._field_e, (*((*(_96933_pair))))._field_Expr);;
	if ((_100113_d == nullptr)) {
		return;;
	};
	_1c0d9a8ab_pushMatch(_self_, &(_97113_f), &(_100113_d), &((*((*(_96933_pair))))._field_Field));
}



inline jule::Bool _1c0d9b060_readyExprs(_1c0d99aca_structLitChecker* _self_, jule::Slice<jule::Ptr<_1c0c63c6e_Expr>>* _100834_exprs) {
	jule::Bool _100913_ok = true;;
	{
		auto expr = _100834_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c55e690a:;
		if (it != expr_end) {
			jule::I64 _101014_i = it - expr->begin();
			jule::Ptr<_1c0c63c6e_Expr> _101021_expr = *it;
			{
				{
					auto &_match_expr{ (*(_101021_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type78) {
						_case_begin_1c55e75cb:;
						{
							jule::Ptr<_1c0c69a99_KeyValPair> _101321_pair = (*(_101021_expr))._field_Kind.unsafe_cast_ptr<_1c0c69a99_KeyValPair>();;
							{
								auto &_match_expr{ (*((*(_101321_pair))._field_Key))._field_Kind };
								
								if (_match_expr.type == &__jule_any_type79) {
									_case_begin_1c55e8467:;
									{
										goto _match_end_1c55e892e;
									}
								}
								else {
									_case_begin_1c55e8984:;
									{
										_1c0d9a12a_pushErr(_self_, (*(_101321_pair))._field_Colon, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
										_100913_ok=false;
										goto _iter_next_1c55e690a;
									}
								}
								_match_end_1c55e892e:;
							};
							(*((*(_100834_exprs))[_101014_i]))._field_Kind=jule::Any(jule::new_ptr<_1c0c6848d_FieldExprPair>(_1c0c6848d_FieldExprPair{._field_Field=(*((*(_101321_pair))._field_Key))._field_Token, ._field_Expr=(*_101321_pair.alloc)._field_Val}), &__jule_any_type77);
						}
					}
					_match_end_1c55e7565:;
				};
			}
			_iter_next_1c55e690a:;
			++it;
			_101014_i++;
			goto _iter_begin_1c55e690a;
		}
		_iter_end_1c55e690a:;
	};
	return _100913_ok;;
}



inline void _1c0d9b318_check(_1c0d99aca_structLitChecker* _self_, jule::Slice<jule::Ptr<_1c0c63c6e_Expr>>* _103229_exprs) {
	if (((*(_103229_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1c0d9b060_readyExprs(_self_, _103229_exprs)))) {
		return;;
	};
	jule::Bool _103913_paired = false;;
	{
		auto expr = _103229_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c55e681c:;
		if (it != expr_end) {
			jule::I64 _104014_i = it - expr->begin();
			jule::Ptr<_1c0c63c6e_Expr> _104021_expr = *it;
			{
				{
					auto &_match_expr{ (*(_104021_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type77) {
						_case_begin_1c5602196:;
						{
							jule::Ptr<_1c0c6848d_FieldExprPair> _104321_pair = (*(_104021_expr))._field_Kind.unsafe_cast_ptr<_1c0c6848d_FieldExprPair>();;
							if (((_104014_i > 0LL) && (!(_103913_paired)))) {
								_1c0d9a12a_pushErr(_self_, (*(_104321_pair))._field_Field, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							_103913_paired=true;
							_1c0d9ac1e_checkPair(_self_, &(_104321_pair), _103229_exprs);
						}
					}
					else {
						_case_begin_1c55ebd94:;
						{
							if (_103913_paired) {
								_1c0d9a12a_pushErr(_self_, (*(_104021_expr))._field_Token, jule::Str::lit("argument must target to field", 29), jule::Slice<jule::Any>());
							};
							if ((_104014_i >= (*((*(_self_))._field_s))._field_Fields.len())) {
								_1c0d9a12a_pushErr(_self_, (*_104021_expr.alloc)._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>());
								goto _iter_next_1c55e681c;
							};
							jule::Ptr<_1c0c829a2_FieldIns> _105821_field = (*(*(_self_))._field_s.alloc)._field_Fields[_104014_i];;
							if ((!(_1c0d2e422_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_105821_field))._field_Decl))._field_Public, (*(*_105821_field.alloc)._field_Decl.alloc)._field_Token)))) {
								_1c0d9a12a_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("structure cannot instantiating because it has non-public fields", 63), jule::Slice<jule::Any>());
								_1c0d9a48d_pushSuggestion(_self_, jule::Str::lit("use field:expression pairs to instantiate", 41), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1c0dd7de3_TypeKind> _106621_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
							__JULE_DEFER({
								(*(*(_self_))._field_e.alloc)._field_prefix=_106621_prefix;
							});;
							(*(*(_self_))._field_e.alloc)._field_prefix=(*_105821_field.alloc)._field_Kind;
							jule::Ptr<_1c0da69e9_Data> _107021_d = _1c0dc6981_evalExpr((*(_self_))._field_e, _104021_expr);;
							if ((_107021_d == nullptr)) {
								goto _iter_next_1c55e681c;
							};
							_1c0d9a8ab_pushMatch(_self_, &(_105821_field), &(_107021_d), &((*_104021_expr.alloc)._field_Token));
						}
					}
					_match_end_1c55ebd3e:;
				};
			}
			_iter_next_1c55e681c:;
			++it;
			_104014_i++;
			goto _iter_begin_1c55e681c;
		}
		_iter_end_1c55e681c:;
	};
	if ((!(_103913_paired))) {
		jule::I64 _108113_n = (*((*(_self_))._field_s))._field_Fields.len();;
		jule::I64 _108217_diff = (_108113_n - (*(_103229_exprs)).len());;
		{
			
			if ((_108217_diff <= 0LL)) {
				_case_begin_1c5604ebd:;
				{
					return;;
				}
			}
			_match_end_1c5604dad:;
		};
		_234c76a64_StrBuilder _108817_idents = static__234c76ec6_New(32LL);;
		for (; (_108217_diff > 0LL); (_108217_diff)--) {
			{
				_234c77537_WriteStr(&_108817_idents, jule::Str::lit(", ", 2));
				_234c77537_WriteStr(&_108817_idents, (*((*((*(*(_self_))._field_s.alloc)._field_Fields[(_108113_n - _108217_diff)]))._field_Decl))._field_Ident);
			}
		_iter_next_1c560581a:;
		}
		_iter_end_1c560581a:;;
		_1c0d9a12a_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(static_cast<jule::Str>(_234c787d0_Buf(&_108817_idents).slice(2LL)), &__jule_any_type4)}));
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c0d99aca_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c0d4dde2_Var> _1c0d9bd96_buildVar(_1c0d9b8ac_rangeChecker* _self_, jule::Ptr<_1c0c727a5_VarDecl>* _110828_decl) {
	jule::Ptr<_1c0d4dde2_Var> _110913_v = _1c0ca1be1_buildVar((*(_110828_decl)));;
	return _110913_v;;
}



inline void _1c0d9c094_setSizeKey(_1c0d9b8ac_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1c0c4bd67_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyA=_1c0d9bd96_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_Kind=(*(_1c0ecc306_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
}



inline void _1c0d9c4b2_checkRangeExprValidity(_1c0d9b8ac_rangeChecker* _self_, jule::Ptr<_1c0da69e9_Data>* _112746_d, jule::Ptr<_1c0d4dde2_Var>* _112757_key, jule::Ptr<_1c0dd7de3_TypeKind>* _112773_k) {
	jule::Bool _112813__mut = (*((*(_112757_key))))._field_Mutable;;
	if ((_112813__mut && (!(_1c0dd9774_Mutable((*(_112773_k)).ptr()))))) {
		_112813__mut=false;
	};
	_1c0d3aa5a_checkValidityForInitExpr((*((*(_self_))._field_sc))._field_s, _112813__mut, (*((*(_112757_key))))._field_Reference, &((*((*((*(_112757_key))))._field_Kind))._field_Kind), _112746_d, &((*((*(_self_))._field_rang))._field_InToken));
}



inline void _1c0d9c6b0_checkSlice(_1c0d9b8ac_rangeChecker* _self_) {
	_1c0d9c094_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1c0c4bd67_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1c0de4ebb_Slc> _114613_slc = _1c0ddb59a_Slc((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1c0d9bd96_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1c0de00b5_TypeSymbol>(_1c0de00b5_TypeSymbol{._field_Kind=(*(_114613_slc))._field_Elem});
	_1c0d9c4b2_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_114613_slc.alloc)._field_Elem));
}



inline void _1c0d9c8ad_checkArray(_1c0d9b8ac_rangeChecker* _self_) {
	_1c0d9c094_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1c0c4bd67_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1c0de72dc_Arr> _115913_arr = _1c0ddb314_Arr((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1c0d9bd96_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1c0de00b5_TypeSymbol>(_1c0de00b5_TypeSymbol{._field_Kind=(*(_115913_arr))._field_Elem});
	_1c0d9c4b2_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_115913_arr.alloc)._field_Elem));
}



inline void _1c0d9caab_checkMapKeyA(_1c0d9b8ac_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1c0c4bd67_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1c0de6660_Map> _117113_m = _1c0ddc0d4_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyA=_1c0d9bd96_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_Kind=jule::new_ptr<_1c0de00b5_TypeSymbol>(_1c0de00b5_TypeSymbol{._field_Kind=(*(_117113_m))._field_Key});
	jule::Ptr<_1c0da69e9_Data> _117513_d = jule::new_ptr<_1c0da69e9_Data>((*(*(_self_))._field_d.alloc));;
	(*_117513_d.alloc)._field_Kind=(*_117113_m.alloc)._field_Key;
	_1c0d9c4b2_checkRangeExprValidity(_self_, &(_117513_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyA), &((*_117113_m.alloc)._field_Key));
}



inline void _1c0d9cca9_checkMapKeyB(_1c0d9b8ac_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1c0c4bd67_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1c0de6660_Map> _118613_m = _1c0ddc0d4_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1c0d9bd96_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1c0de00b5_TypeSymbol>(_1c0de00b5_TypeSymbol{._field_Kind=(*(_118613_m))._field_Val});
	jule::Ptr<_1c0da69e9_Data> _119013_d = jule::new_ptr<_1c0da69e9_Data>((*(*(_self_))._field_d.alloc));;
	(*_119013_d.alloc)._field_Kind=(*_118613_m.alloc)._field_Val;
	_1c0d9c4b2_checkRangeExprValidity(_self_, &(_119013_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_118613_m.alloc)._field_Val));
}



inline void _1c0d9cea7_checkMap(_1c0d9b8ac_rangeChecker* _self_) {
	_1c0d9caab_checkMapKeyA(_self_);
	_1c0d9cca9_checkMapKeyB(_self_);
}



inline void _1c0d9d1a5_checkStr(_1c0d9b8ac_rangeChecker* _self_) {
	_1c0d9c094_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1c0c4bd67_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1c0d9bd96_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=(*(_1c0ecc306_findBuiltinTypeAlias(jule::Str::lit("u8", 2))))._field_Kind;
}



inline void _1c0d9d3a3_checkComptime(_1c0d9b8ac_rangeChecker* _self_) {
	_1c0d9c094_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyA != nullptr) && (*(*(*(_self_))._field_rang.alloc)._field_KeyA.alloc)._field_Mutable)) {
		_1c0d2dbb3_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(*(*(_self_))._field_rang.alloc)._field_KeyA.alloc)._field_Token, jule::Str::lit("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*(*(*(_self_))._field_rang.alloc)._field_KeyA.alloc)._field_Ident, &__jule_any_type4)}));
	};
	if ((((*(*(_self_))._field_rang.alloc)._field_KeyB != nullptr) && (*(*(*(_self_))._field_rang.alloc)._field_KeyB.alloc)._field_Mutable)) {
		_1c0d2dbb3_pushErr((*(*(_self_))._field_sc.alloc)._field_s, (*(*(*(_self_))._field_rang.alloc)._field_KeyB.alloc)._field_Token, jule::Str::lit("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*(*(*(_self_))._field_rang.alloc)._field_KeyB.alloc)._field_Ident, &__jule_any_type4)}));
	};
	if ((((*(*(_self_))._field_rang.alloc)._field_KeyB == nullptr) || _1c0c4bd67_IsIgnoreIdent((*(*(*(_self_))._field_rang.alloc)._field_KeyB.alloc)._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1c0d9bd96_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
}



inline jule::Bool _1c0d9d639_checkComptimeRange(_1c0d9b8ac_rangeChecker* _self_) {
	jule::Ptr<_1c0cb0ae0_comptimeRange> _122513_range = _1c0ddd8dd_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_122513_range))._field_kind };
		
		if (_match_expr.type_is(true, 0) || _match_expr.type_is(true, 2) || _match_expr.type_is(true, 3) || _match_expr.type_is(true, 4) || _match_expr.type_is(true, 1) || _match_expr.type_is(true, 5)) {
			_case_begin_1c562685d:;
			{
				_1c0d9d3a3_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1c5626b5a:;
			{
				_1c0d2dbb3_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str::lit("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1c5626b05:;
	};
}



inline jule::Bool _1c0d9d8c0_check(_1c0d9b8ac_rangeChecker* _self_) {
	{
		
		if ((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic) {
			_case_begin_1c5628c39:;
		}
		else if ((_1c0ddb59a_Slc((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c56285eb:;
			{
				_1c0d9c6b0_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1c0ddb314_Arr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c5628662:;
			{
				_1c0d9c8ad_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1c0ddc0d4_Map((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c5628ca0:;
			{
				_1c0d9cea7_checkMap(_self_);
				return true;;
			}
		}
		else if ((_1c0ddd8dd_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c5628d16:;
			{
				return _1c0d9d639_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_1c5628585:;
			{
				jule::Ptr<_1c0de09bc_Prim> _125713_prim = _1c0dda544_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (((_125713_prim != nullptr) && _1c0de3e54_IsStr(_125713_prim))) {
					_1c0d9d1a5_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1c56284a8:;
	};
	_1c0d2dbb3_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str::lit("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0d9b8ac_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1c0d9e54c_prepareTypes(_1c0d9e11d_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1c0c99898_Types((*(_self_))._field_f);
	};
}



inline void _1c0d9e805_prepareExprs(_1c0d9e11d_retTypeChecker* _self_, jule::Ptr<_1c0c63c6e_Expr>* _128536_e) {
	if (((*(_128536_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_128536_e))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1c5630658:;
			{
				(*(_self_))._field_exprs=(*((*((*(_128536_e))))._field_Kind.unsafe_cast_ptr<_1c0c64863_TupleExpr>()))._field_Expr;
			}
		}
		else {
			_case_begin_1c5630834:;
			{
				{ jule::Slice<jule::Ptr<_1c0c63c6e_Expr>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push((*(_128536_e))); };
			}
		}
		_match_end_1c56307ce:;
	};
}



inline void _1c0d9ea03_checkExprs(_1c0d9e11d_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1c0da69e9_Data>> _130113_datas = jule::Slice<jule::Ptr<_1c0da69e9_Data>>::alloc(0LL, (*(_self_))._field_exprs.len());;
	jule::Ptr<_1c0da8721_Eval> _130213_eval = _1c0d36160_eval((*((*(_self_))._field_sc))._field_s, jule::Trait<_1c0e079d4_Lookup>((*(_self_))._field_sc, 0));;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5630988:;
		if (it != expr_end) {
			jule::I64 _130314_i = it - expr->begin();
			jule::Ptr<_1c0c63c6e_Expr> _130321_expr = *it;
			{
				if ((_130314_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1c5630988;
				};
				jule::Ptr<_1c0dd7de3_TypeKind> _130817_t = (*(_self_))._field_types[_130314_i];;
				(*(_130213_eval))._field_prefix=_130817_t;
				jule::Ptr<_1c0da69e9_Data> _131117_d = _1c0dc6981_evalExpr(_130213_eval, _130321_expr);;
				if ((_131117_d == nullptr)) {
					goto _iter_next_1c5630988;
				};
				{ jule::Slice<jule::Ptr<_1c0da69e9_Data>> &__jule_push_dest = _130113_datas; __jule_push_dest.push(_131117_d); };
				if (((!((*(_131117_d))._field_Mutable)) && _1c0dd9774_Mutable((*(_131117_d))._field_Kind.ptr()))) {
					_1c0d2dbb3_pushErr((*(*(_self_))._field_sc.alloc)._field_s, (*(_self_))._field_errorToken, jule::Str::lit("mutable typed return expressions should be mutable", 50), jule::Slice<jule::Any>());
					return;;
				};
				_1c0d90461_assignTypeChecker _132317_ac = _1c0d90461_assignTypeChecker{._field_s=(*(*(_self_))._field_sc.alloc)._field_s, ._field_dest=_130817_t, ._field_d=_131117_d, ._field_errorToken=(*(_self_))._field_errorToken};;
				_1c0d9142e_check(&_132317_ac);
			}
			_iter_next_1c5630988:;
			++it;
			_130314_i++;
			goto _iter_begin_1c5630988;
		}
		_iter_end_1c5630988:;
	};
	if ((_130113_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1c0c8d11c_TupleExprModel>(_1c0c8d11c_TupleExprModel{._field_Datas=_130113_datas}), &__jule_any_type81);
	} else if ((_130113_datas.len() == 1LL)) {
		(*(_self_))._field_model=(*(_130113_datas[0LL]))._field_Model;
	};
}



inline jule::Bool _1c0d9ec89_tryFuncMultiRetForward(_1c0d9e11d_retTypeChecker* _self_) {
	jule::Ptr<_1c0da8721_Eval> _134413_eval = _1c0d36160_eval((*((*(_self_))._field_sc))._field_s, jule::Trait<_1c0e079d4_Lookup>((*(_self_))._field_sc, 0));;
	jule::Ptr<_1c0da69e9_Data> _134513_d = _1c0dc6981_evalExpr(_134413_eval, (*(_self_))._field_exprs[0LL]);;
	if ((_134513_d == nullptr)) {
		return true;;
	};
	jule::Ptr<_1c0de5ab0_Tuple> _135113_tup = _1c0ddc36a_Tup((*(_134513_d))._field_Kind.ptr());;
	if ((_135113_tup == nullptr)) {
		return false;;
	};
	if (((*(_135113_tup))._field_Types.len() != (*(_self_))._field_types.len())) {
		goto _julec_label_1c563d7cb;
	};
	(*(_self_))._field_model=(*(_134513_d))._field_Model;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c563a289:;
		if (it != expr_end) {
			jule::I64 _135913_i = it - expr->begin();
			{
				if ((!(_1c0d36b77__checkTypeCompatibility((*(*(_self_))._field_sc.alloc)._field_s, &((*(_self_))._field_types[_135913_i]), &((*(_135113_tup))._field_Types[_135913_i]), (*(_self_))._field_errorToken)))) {
					goto _julec_label_1c563d7cb;
				};
			}
			_iter_next_1c563a289:;
			++it;
			_135913_i++;
			goto _iter_begin_1c563a289;
		}
		_iter_end_1c563a289:;
	};
	return true;;
	_julec_label_1c563d7cb:;
	_234c76a64_StrBuilder _136613_wanted = static__234c76ec6_New(32LL);;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c563e5ac:;
		if (it != expr_end) {
			jule::I64 _136713_i = it - expr->begin();
			jule::Ptr<_1c0dd7de3_TypeKind> _136716_t = *it;
			{
				_234c77537_WriteStr(&_136613_wanted, _1c0dd82ab_Str(_136716_t.ptr()));
				if ((((*(_self_))._field_types.len() - _136713_i) > 1LL)) {
					_234c77537_WriteStr(&_136613_wanted, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1c563e5ac:;
			++it;
			_136713_i++;
			goto _iter_begin_1c563e5ac;
		}
		_iter_end_1c563e5ac:;
	};
	_234c76a64_StrBuilder _137313_given = static__234c76ec6_New(32LL);;
	{
		auto expr = &((*(_135113_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c56412b2:;
		if (it != expr_end) {
			jule::I64 _137413_i = it - expr->begin();
			jule::Ptr<_1c0dd7de3_TypeKind> _137416_t = *it;
			{
				_234c77537_WriteStr(&_137313_given, _1c0dd82ab_Str(_137416_t.ptr()));
				if ((((*(_self_))._field_types.len() - _137413_i) > 1LL)) {
					_234c77537_WriteStr(&_137313_given, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1c56412b2:;
			++it;
			_137413_i++;
			goto _iter_begin_1c56412b2;
		}
		_iter_end_1c56412b2:;
	};
	_1c0d2dbb3_pushErr((*(*(_self_))._field_sc.alloc)._field_s, (*(_self_))._field_errorToken, jule::Str::lit("function return forwaring is wrong\n       want (@)\n       have (@)", 66), jule::Slice<jule::Any>::make({jule::Any(_234c77d2e_Str(&_136613_wanted), &__jule_any_type4),jule::Any(_234c77d2e_Str(&_137313_given), &__jule_any_type4)}));
	return false;;
}



inline jule::Bool _1c0da00ca_check(_1c0d9e11d_retTypeChecker* _self_, jule::Ptr<_1c0c63c6e_Expr>* _138429_e) {
	_1c0d9e54c_prepareTypes(_self_);
	_1c0d9e805_prepareExprs(_self_, _138429_e);
	{
		
		if ((((*(_self_))._field_exprs.len() == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
			_case_begin_1c564479e:;
			{
				if ((!(_1c0c969d8_AnyVar((*((*(_self_))._field_f))._field_Decl.ptr())))) {
					_1c0d2dbb3_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("return statements of non-void functions should have return expression", 69), jule::Slice<jule::Any>());
					return false;;
				};
				return true;;
			}
		}
		else if (((((*(_self_))._field_exprs.len() > 0LL) && ((*(_self_))._field_f != nullptr)) && _1c0c95c18_IsVoid((*(*(_self_))._field_f.alloc)._field_Decl.ptr()))) {
			_case_begin_1c5644815:;
			{
				_1c0d2dbb3_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("void functions is cannot returns any value", 42), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if ((((*(_self_))._field_exprs.len() == 1LL) && ((*(_self_))._field_types.len() > 1LL))) {
			_case_begin_1c564487b:;
			{
				{
					auto &_match_expr{ (*((*(_self_))._field_exprs[0LL]))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type82) {
						_case_begin_1c5649045:;
						{
							if (_1c0d9ec89_tryFuncMultiRetForward(_self_)) {
								return true;;
							};
						}
					}
					_match_end_1c5648e9b:;
				};
				_1c0d2dbb3_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if (((*(_self_))._field_exprs.len() < (*(_self_))._field_types.len())) {
			_case_begin_1c56448e2:;
			{
				_1c0d2dbb3_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
			}
		}
		else if (((*(_self_))._field_exprs.len() > (*(_self_))._field_types.len())) {
			_case_begin_1c5644958:;
			{
				_1c0d2dbb3_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("overflow return expressions", 27), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c564464a:;
	};
	_1c0d9ea03_checkExprs(_self_);
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0d9e11d_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c0d09782_ImportInfo> _1c0da1b6a_SelectPackage(_1c0da1681_SymbolTable* _self_, jule::Fn<jule::Bool,jule::Ptr<_1c0d09782_ImportInfo>> _2732_selector) {
	if ((_2732_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c564c675:;
		if (it != expr_end) {
			jule::Ptr<_1c0d09782_ImportInfo> _3121_pkg = *it;
			{
				if (_2732_selector(_3121_pkg)) {
					return _3121_pkg;;
				};
			}
			_iter_next_1c564c675:;
			++it;
			goto _iter_begin_1c564c675;
		}
		_iter_end_1c564c675:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0d4dde2_Var> _1c0da2066_FindVar(_1c0da1681_SymbolTable* _self_, jule::Str _4126_ident, jule::Bool _4138_binded) {
	return _1c0da3d48_findVar(_self_, &(_4126_ident), _4138_binded, false);;
}



inline jule::Ptr<_1c0dd7101_TypeAlias> _1c0da2462_FindTypeAlias(_1c0da1681_SymbolTable* _self_, jule::Str _4732_ident, jule::Bool _4744_binded) {
	return _1c0da42ee_findTypeAlias(_self_, &(_4732_ident), _4744_binded, false);;
}



inline jule::Ptr<_1c0c807c4_Struct> _1c0da285d_FindStruct(_1c0da1681_SymbolTable* _self_, jule::Str _5329_ident, jule::Bool _5341_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c564ea2e:;
		if (it != expr_end) {
			jule::Ptr<_1c0c807c4_Struct> _5421_s = *it;
			{
				if ((((*(_5421_s))._field_Ident == _5329_ident) && ((*_5421_s.alloc)._field_Binded == _5341_binded))) {
					return _5421_s;;
				};
			}
			_iter_next_1c564ea2e:;
			++it;
			goto _iter_begin_1c564ea2e;
		}
		_iter_end_1c564ea2e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0c95795_Fn> _1c0da2c59_FindFn(_1c0da1681_SymbolTable* _self_, jule::Str _6425_ident, jule::Bool _6437_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c565106e:;
		if (it != expr_end) {
			jule::Ptr<_1c0c95795_Fn> _6521_f = *it;
			{
				if ((((*(_6521_f))._field_Ident == _6425_ident) && ((*_6521_f.alloc)._field_Binded == _6437_binded))) {
					return _6521_f;;
				};
			}
			_iter_next_1c565106e:;
			++it;
			goto _iter_begin_1c565106e;
		}
		_iter_end_1c565106e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0ca8a72_Trait> _1c0da309a_FindTrait(_1c0da1681_SymbolTable* _self_, jule::Str _7528_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c56515e1:;
		if (it != expr_end) {
			jule::Ptr<_1c0ca8a72_Trait> _7621_t = *it;
			{
				if (((*(_7621_t))._field_Ident == _7528_ident)) {
					return _7621_t;;
				};
			}
			_iter_next_1c56515e1:;
			++it;
			goto _iter_begin_1c56515e1;
		}
		_iter_end_1c56515e1:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0cab27d_Enum> _1c0da33db_FindEnum(_1c0da1681_SymbolTable* _self_, jule::Str _8627_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c565333a:;
		if (it != expr_end) {
			jule::Ptr<_1c0cab27d_Enum> _8721_e = *it;
			{
				if (((*(_8721_e))._field_Ident == _8627_ident)) {
					return _8721_e;;
				};
			}
			_iter_next_1c565333a:;
			++it;
			goto _iter_begin_1c565333a;
		}
		_iter_end_1c565333a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0cac988_TypeEnum> _1c0da372c_FindTypeEnum(_1c0da1681_SymbolTable* _self_, jule::Str _9731_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5654308:;
		if (it != expr_end) {
			jule::Ptr<_1c0cac988_TypeEnum> _9821_e = *it;
			{
				if (((*(_9821_e))._field_Ident == _9731_ident)) {
					return _9821_e;;
				};
			}
			_iter_next_1c5654308:;
			++it;
			goto _iter_begin_1c5654308;
		}
		_iter_end_1c5654308:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0d4dde2_Var> _1c0da3d48_findVar(_1c0da1681_SymbolTable* _self_, jule::Str* _10827_ident, jule::Bool _10839_binded, jule::Bool _10853_reverse) {
	if (_10853_reverse) {
		jule::I64 _11017_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_11017_i >= 0LL); (_11017_i)--) {
			{
				jule::Ptr<_1c0d4dde2_Var> _11221_v = (*(_self_))._field_Vars[_11017_i];;
				if ((((*(_11221_v))._field_Ident == (*(_10827_ident))) && ((*_11221_v.alloc)._field_Binded == _10839_binded))) {
					return _11221_v;;
				};
			}
		_iter_next_1c5656184:;
		}
		_iter_end_1c5656184:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c56570ec:;
			if (it != expr_end) {
				jule::Ptr<_1c0d4dde2_Var> _11825_v = *it;
				{
					if ((((*(_11825_v))._field_Ident == (*(_10827_ident))) && ((*_11825_v.alloc)._field_Binded == _10839_binded))) {
						return _11825_v;;
					};
				}
				_iter_next_1c56570ec:;
				++it;
				goto _iter_begin_1c56570ec;
			}
			_iter_end_1c56570ec:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1c0dd7101_TypeAlias> _1c0da42ee_findTypeAlias(_1c0da1681_SymbolTable* _self_, jule::Str* _12733_ident, jule::Bool _12745_binded, jule::Bool _12759_reverse) {
	if (_12759_reverse) {
		jule::I64 _12917_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_12917_i >= 0LL); (_12917_i)--) {
			{
				jule::Ptr<_1c0dd7101_TypeAlias> _13121_ta = (*(_self_))._field_TypeAliases[_12917_i];;
				if ((((*(_13121_ta))._field_Ident == (*(_12733_ident))) && ((*_13121_ta.alloc)._field_Binded == _12745_binded))) {
					return _13121_ta;;
				};
			}
		_iter_next_1c56594c8:;
		}
		_iter_end_1c56594c8:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c565a441:;
			if (it != expr_end) {
				jule::Ptr<_1c0dd7101_TypeAlias> _13725_ta = *it;
				{
					if ((((*(_13725_ta))._field_Ident == (*(_12733_ident))) && ((*_13725_ta.alloc)._field_Binded == _12745_binded))) {
						return _13725_ta;;
					};
				}
				_iter_next_1c565a441:;
				++it;
				goto _iter_begin_1c565a441;
			}
			_iter_end_1c565a441:;
		};
	};
	return nullptr;;
}



inline jule::Any _1c0da46ea_defByIdent(_1c0da1681_SymbolTable* _self_, jule::Str* _14830_ident, jule::Bool _14842_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c565bba1:;
		if (it != expr_end) {
			jule::Ptr<_1c0d4dde2_Var> _14921_v = *it;
			{
				if ((((*(_14921_v))._field_Ident == (*(_14830_ident))) && ((*_14921_v.alloc)._field_Binded == _14842_binded))) {
					return jule::Any(_14921_v, &__jule_any_type8);;
				};
			}
			_iter_next_1c565bba1:;
			++it;
			goto _iter_begin_1c565bba1;
		}
		_iter_end_1c565bba1:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c565c003:;
		if (it != expr_end) {
			jule::Ptr<_1c0dd7101_TypeAlias> _15521_ta = *it;
			{
				if ((((*(_15521_ta))._field_Ident == (*(_14830_ident))) && ((*_15521_ta.alloc)._field_Binded == _14842_binded))) {
					return jule::Any(_15521_ta, &__jule_any_type65);;
				};
			}
			_iter_next_1c565c003:;
			++it;
			goto _iter_begin_1c565c003;
		}
		_iter_end_1c565c003:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c565ce6b:;
		if (it != expr_end) {
			jule::Ptr<_1c0c807c4_Struct> _16121_s = *it;
			{
				if ((((*(_16121_s))._field_Ident == (*(_14830_ident))) && ((*_16121_s.alloc)._field_Binded == _14842_binded))) {
					return jule::Any(_16121_s, &__jule_any_type64);;
				};
			}
			_iter_next_1c565ce6b:;
			++it;
			goto _iter_begin_1c565ce6b;
		}
		_iter_end_1c565ce6b:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c565de39:;
		if (it != expr_end) {
			jule::Ptr<_1c0c95795_Fn> _16721_f = *it;
			{
				if ((((*(_16721_f))._field_Ident == (*(_14830_ident))) && ((*_16721_f.alloc)._field_Binded == _14842_binded))) {
					return jule::Any(_16721_f, &__jule_any_type63);;
				};
			}
			_iter_next_1c565de39:;
			++it;
			goto _iter_begin_1c565de39;
		}
		_iter_end_1c565de39:;
	};
	if (_14842_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5660d3c:;
		if (it != expr_end) {
			jule::Ptr<_1c0ca8a72_Trait> _17721_t = *it;
			{
				if (((*(_17721_t))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_17721_t, &__jule_any_type10);;
				};
			}
			_iter_next_1c5660d3c:;
			++it;
			goto _iter_begin_1c5660d3c;
		}
		_iter_end_1c5660d3c:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c56614d0:;
		if (it != expr_end) {
			jule::Ptr<_1c0cab27d_Enum> _18321_e = *it;
			{
				if (((*(_18321_e))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_18321_e, &__jule_any_type66);;
				};
			}
			_iter_next_1c56614d0:;
			++it;
			goto _iter_begin_1c56614d0;
		}
		_iter_end_1c56614d0:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c566216d:;
		if (it != expr_end) {
			jule::Ptr<_1c0cac988_TypeEnum> _18921_te = *it;
			{
				if (((*(_18921_te))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_18921_te, &__jule_any_type67);;
				};
			}
			_iter_next_1c566216d:;
			++it;
			goto _iter_begin_1c566216d;
		}
		_iter_end_1c566216d:;
	};
	return nullptr;;
}



inline jule::Bool _1c0da4ba1_isDuplicatedIdent(_1c0da1681_SymbolTable* _self_, jule::Uintptr _20132_itself, jule::Str* _20150_ident, jule::Bool _20162_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c566369c:;
		if (it != expr_end) {
			jule::Ptr<_1c0d4dde2_Var> *_20216_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20216_v))) != _20132_itself) && ((*((*(_20216_v))))._field_Ident == (*(_20150_ident)))) && ((*(*(_20216_v)).alloc)._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1c566369c:;
			++it;
			goto _iter_begin_1c566369c;
		}
		_iter_end_1c566369c:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c56639ee:;
		if (it != expr_end) {
			jule::Ptr<_1c0dd7101_TypeAlias> *_20816_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20816_ta))) != _20132_itself) && ((*((*(_20816_ta))))._field_Ident == (*(_20150_ident)))) && ((*(*(_20816_ta)).alloc)._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1c56639ee:;
			++it;
			goto _iter_begin_1c56639ee;
		}
		_iter_end_1c56639ee:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5664bdc:;
		if (it != expr_end) {
			jule::Ptr<_1c0c807c4_Struct> *_21416_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21416_s))) != _20132_itself) && ((*((*(_21416_s))))._field_Ident == (*(_20150_ident)))) && ((*(*(_21416_s)).alloc)._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1c5664bdc:;
			++it;
			goto _iter_begin_1c5664bdc;
		}
		_iter_end_1c5664bdc:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5665e30:;
		if (it != expr_end) {
			jule::Ptr<_1c0c95795_Fn> *_22016_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22016_f))) != _20132_itself) && ((*((*(_22016_f))))._field_Ident == (*(_20150_ident)))) && ((*(*(_22016_f)).alloc)._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1c5665e30:;
			++it;
			goto _iter_begin_1c5665e30;
		}
		_iter_end_1c5665e30:;
	};
	if (_20162_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c566832d:;
		if (it != expr_end) {
			jule::Ptr<_1c0ca8a72_Trait> *_23016_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23016_t))) != _20132_itself) && ((*((*(_23016_t))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1c566832d:;
			++it;
			goto _iter_begin_1c566832d;
		}
		_iter_end_1c566832d:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5668471:;
		if (it != expr_end) {
			jule::Ptr<_1c0cab27d_Enum> *_23616_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23616_e))) != _20132_itself) && ((*((*(_23616_e))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1c5668471:;
			++it;
			goto _iter_begin_1c5668471;
		}
		_iter_end_1c5668471:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c56693b7:;
		if (it != expr_end) {
			jule::Ptr<_1c0cac988_TypeEnum> *_24216_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24216_te))) != _20132_itself) && ((*((*(_24216_te))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1c56693b7:;
			++it;
			goto _iter_begin_1c56693b7;
		}
		_iter_end_1c56693b7:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0da1681_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c0da6dd4_IsNil(_1c0da69e9_Data* _self_) {
	return _1c0dd8ec1_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1c0da716a_IsVoid(_1c0da69e9_Data* _self_) {
	return _1c0dd9257_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1c0da7401_IsConst(_1c0da69e9_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1c0da7742_GoodOperand(_1c0da69e9_Data* _self_, jule::Ptr<_1c0da69e9_Data>* _10531_other) {
	if ((_1c0ddb07d_TypeEnum((*((*(_10531_other))))._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1c0dda544_Prim((*((*(_10531_other))))._field_Kind) == nullptr) || (!(_1c0de41da_IsAny(_1c0dda544_Prim((*((*(_10531_other))))._field_Kind).ptr())))) && (_1c0ddbd4d_Trait((*((*(_10531_other))))._field_Kind) == nullptr)) && (!(_1c0dd8ec1_IsNil((*(_self_))._field_Kind))));;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0da69e9_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0da7b71_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _1c0da8c71_pushErr(_1c0da8721_Eval* _self_, jule::Ptr<_1c0c49480_Token> _13626_token, jule::Str _13641_fmt, jule::Slice<jule::Any> _13654_args) {
	_1c0d2dbb3_pushErr((*(_self_))._field_s.ptr(), _13626_token, _13641_fmt, _13654_args);
}



inline void _1c0da90d4_pushSuggestion(_1c0da8721_Eval* _self_, jule::Str _14133_fmt, jule::Slice<jule::Any> _14146_args) {
	_1c0d2e026_pushSuggestion((*(_self_))._field_s.ptr(), _14133_fmt, _14146_args);
}



inline void _1c0da92d2_allowBuiltin(_1c0da8721_Eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1c0da94d0_disallowBuiltin(_1c0da8721_Eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1c0da9766_isUnsafe(_1c0da8721_Eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1c0da99ec_isGlobal(_1c0da8721_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1c56b2e5a:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c56b3367:;
			{
				return false;;
			}
		}
		_match_end_1c56b3312:;
	};
}



inline jule::Bool _1c0da9d0a_applyNumericPrefix(_1c0da8721_Eval* _self_, jule::Ptr<_1c0da69e9_Data>* _16842_d) {
	if ((((((*(_16842_d)) == nullptr) || (!(_1c0da7401_IsConst((*(_16842_d)).ptr())))) || (_1c0dda544_Prim((*((*(_16842_d))))._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1c0de09bc_Prim> _1759_prim = _1c0dda544_Prim((*(_self_))._field_prefix.ptr());;
	if ((_1759_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_2021e5851_IsFloat(_1c0de0d0d_Str(_1759_prim.ptr()))) {
			_case_begin_1c56b5c60:;
			{
				(*((*(_16842_d))))._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>((*((*(_self_))._field_prefix)));
				_2021e9bb8_SetF64((*((*(_16842_d))))._field_Constant.ptr(), _2021e8d3d_AsF64((*((*(_16842_d))))._field_Constant));
				(*(*((*(_16842_d))))._field_Constant.alloc)._field_Kind=(*(_1759_prim))._field_Kind;
			}
		}
		else if (_2021e4e38_IsSigInt(_1c0de0d0d_Str(_1759_prim.ptr()))) {
			_case_begin_1c56b5ce8:;
			{
				if ((!(_1c0d8c98b_sigAssignable(_1c0de0d0d_Str(_1759_prim.ptr()), _16842_d)))) {
					return false;;
				};
				(*((*(_16842_d))))._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>((*((*(_self_))._field_prefix)));
				_2021e90e6_SetI64((*((*(_16842_d))))._field_Constant.ptr(), _2021e8821_AsI64((*((*(_16842_d))))._field_Constant));
				(*(*((*(_16842_d))))._field_Constant.alloc)._field_Kind=(*(_1759_prim))._field_Kind;
			}
		}
		else if (_2021e5246_IsUnsigInt(_1c0de0d0d_Str(_1759_prim.ptr()))) {
			_case_begin_1c56b5d5e:;
			{
				if ((!(_1c0d8cd54_unsigAssignable(_1c0de0d0d_Str(_1759_prim.ptr()), _16842_d)))) {
					return false;;
				};
				(*((*(_16842_d))))._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>((*((*(_self_))._field_prefix)));
				_2021e939e_SetU64((*((*(_16842_d))))._field_Constant.ptr(), _2021e8aa7_AsU64((*((*(_16842_d))))._field_Constant));
				(*(*((*(_16842_d))))._field_Constant.alloc)._field_Kind=(*(_1759_prim))._field_Kind;
			}
		}
		_match_end_1c56b58ca:;
	};
	return true;;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0daa14b_litStr(_1c0da8721_Eval* _self_, jule::Ptr<_1c0c64c09_LitExpr>* _20322_l) {
	jule::Str _20413_s = jule::Str();;
	if (_1c0c4a86b_IsRawStr((*((*(_20322_l))))._field_Value)) {
		_20413_s=_1c0d8abdc_ToRawStr((*((*(_20322_l))))._field_Value);
	} else {
		_20413_s=_1c0d8b02d_ToStr((*((*(_20322_l))))._field_Value);
	};
	jule::Ptr<_2021e617b_Const> _21013_constant = static__2021e6e18_NewStr(_20413_s);;
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec92c0_primStr, ._field_Mutable=true, ._field_Model=jule::Any(_21013_constant, &__jule_any_type19), ._field_Constant=_21013_constant});;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0daa48c_litRune(_1c0da8721_Eval* _self_, jule::Ptr<_1c0c64c09_LitExpr>* _22023_l) {
	jule::I32 _2219_r = _1c0d8a9cd_ToRune((*((*(_22023_l))))._field_Value);;
	jule::Ptr<_1c0da69e9_Data> _22213_data = jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Constant=static__2021e65bb_NewI64(static_cast<jule::I64>(_2219_r))});;
	if ((_2219_r <= 255LL)) {
		(*(_22213_data))._field_Kind=_1c0ecaca5_primU8;
	} else {
		(*(_22213_data))._field_Kind=_1c0eca744_primI32;
	};
	(*(_22213_data))._field_Model=jule::Any(jule::new_ptr<_1c0c91d68_RuneExprModel>(_1c0c91d68_RuneExprModel{._field_Code=_2219_r}), &__jule_any_type83);
	(*_22213_data.alloc)._field_Mutable=true;
	(*_22213_data.alloc)._field_IsRune=true;
	(*_22213_data.alloc)._field_untyped=true;
	return _22213_data;;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0daa7cd_litFloat(_1c0da8721_Eval* _self_, jule::Ptr<_1c0c64c09_LitExpr>* _23924_l) {
	jule::F64 _2409_f = ({
		auto except = _2021cd064_ParseFloat((*((*(_23924_l))))._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_2021e617b_Const> _24113_constant = static__2021e71d2_NewF64(_2409_f);;
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_untyped=true, ._field_Kind=_1c0ecbc51_primF64, ._field_Mutable=true, ._field_Model=jule::Any(_24113_constant, &__jule_any_type19), ._field_Constant=_24113_constant});;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0daab1e_litInt(_1c0da8721_Eval* _self_, jule::Ptr<_1c0c64c09_LitExpr>* _25126_l) {
	;
	jule::Str _25413_lit = (*((*(_25126_l))))._field_Value;;
	jule::I64 _25513_base = 0LL;;
	{
		
		if (_21b86a62c_HasPrefix(_25413_lit, jule::Str::lit("0x", 2))) {
			_case_begin_1c56c54ab:;
			{
				(_25413_lit).mut_slice(2LL);;
				_25513_base=16LLU;
			}
		}
		else if (_21b86a62c_HasPrefix(_25413_lit, jule::Str::lit("0b", 2))) {
			_case_begin_1c56c53ac:;
			{
				(_25413_lit).mut_slice(2LL);;
				_25513_base=2LLU;
			}
		}
		else if (_21b86a62c_HasPrefix(_25413_lit, jule::Str::lit("0o", 2))) {
			_case_begin_1c56c506b:;
			{
				(_25413_lit).mut_slice(2LL);;
				_25513_base=8LLU;
			}
		}
		else if (((_25413_lit[0LL] == '0') && (_25413_lit.len() > 1LL))) {
			_case_begin_1c56c50d2:;
			{
				(_25413_lit).mut_slice(1LL);;
				_25513_base=8LLU;
			}
		}
		else {
			_case_begin_1c56c5005:;
			{
				_25513_base=10LLU;
			}
		}
		_match_end_1c56c4e8e:;
	};
	jule::Ptr<_1c0da69e9_Data> _27513_d = jule::new_ptr<_1c0da69e9_Data>();;
	jule::Bool _27713_ok = true;;
	jule::I64 _2789_sig = ({
		auto except = _2021c6744_ParseInt(_25413_lit, _25513_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_27713_ok=false;

			0LL;
		});
	});;
	if (_27713_ok) {
		(*_27513_d.alloc)._field_Constant=static__2021e65bb_NewI64(_2789_sig);
		(*_27513_d.alloc)._field_Kind=_1c0ec9ea2_primInt;
	} else {
		jule::U64 _28613_unsig = ({
			auto except = _2021c628d_ParseUint(_25413_lit, _25513_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1c0da8c71_pushErr(_self_, (*((*(_25126_l))))._field_Token, jule::Str::lit("arithmetic value overflow: this value too big", 45), jule::Slice<jule::Any>());
				_1c0da90d4_pushSuggestion(_self_, jule::Str::lit("floating-point literals may solve your problem", 46), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		(*_27513_d.alloc)._field_Constant=static__2021e6885_NewU64(_28613_unsig);
		(*_27513_d.alloc)._field_Kind=_1c0ec9ad9_primUint;
	};
	(*_27513_d.alloc)._field_Model=jule::Any((*_27513_d.alloc)._field_Constant, &__jule_any_type19);
	(*_27513_d.alloc)._field_untyped=true;
	if ((!(_1c0da9d0a_applyNumericPrefix(_self_, &(_27513_d))))) {
		_1c0dd098a_fitBitsize(&(_27513_d));
	};
	return _27513_d;;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0daae60_litNum(_1c0da8721_Eval* _self_, jule::Ptr<_1c0c64c09_LitExpr>* _30626_l) {
	{
		
		if (_1c0c4b51a_IsFloat((*((*(_30626_l))))._field_Value)) {
			_case_begin_1c56cc20a:;
			{
				return _1c0daa7cd_litFloat(_self_, _30626_l);;
			}
		}
		else {
			_case_begin_1c56cc194:;
			{
				return _1c0daab1e_litInt(_self_, _30626_l);;
			}
		}
		_match_end_1c56cc0a6:;
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dab2a1_evalLit(_1c0da8721_Eval* _self_, jule::Ptr<_1c0c64c09_LitExpr> _31526_lit) {
	{
		
		if (_1c0c4a5d5_IsStr((*(_31526_lit))._field_Value)) {
			_case_begin_1c56cd382:;
			{
				return _1c0daa14b_litStr(_self_, &(_31526_lit));;
			}
		}
		else if (_1c0c4ab35_IsRune((*(_31526_lit))._field_Value)) {
			_case_begin_1c56cd42b:;
			{
				return _1c0daa48c_litRune(_self_, &(_31526_lit));;
			}
		}
		else if (_1c0c4b7d4_IsNum((*(_31526_lit))._field_Value)) {
			_case_begin_1c56cd4a3:;
			{
				return _1c0daae60_litNum(_self_, &(_31526_lit));;
			}
		}
		else {
			_case_begin_1c56ccd21:;
			{
				return nullptr;;
			}
		}
		_match_end_1c56ccc22:;
	};
}



inline jule::Any _1c0dab5e2_findBuiltins(_1c0da8721_Eval* _self_, jule::Str* _32832_ident) {
	if (_1c0d28141_IsPub((*(_32832_ident)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 1)) {
				_case_begin_1c56d06c5:;
				{
					jule::Any _33221_def = _1c0dd0759_findBuiltinsImport(_32832_ident, (*(_self_))._field_lookup.cast_ptr<_1c0d09782_ImportInfo>(1));;
					if ((_33221_def != nullptr)) {
						return _33221_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, 3)) {
				_case_begin_1c56d041c:;
				{
					jule::Any _33721_def = _1c0dd14b3_findBuiltinsSema(_32832_ident, (*(_self_))._field_lookup.cast_ptr<_1c0d2b078_Sema>(3));;
					if ((_33721_def != nullptr)) {
						return _33721_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, 0)) {
				_case_begin_1c56d073b:;
				{
					jule::Any _34221_def = _1c0dd14b3_findBuiltinsSema(_32832_ident, (*((*(_self_))._field_lookup.cast_ptr<_1c0cdeaec_scopeChecker>(0)))._field_s);;
					if ((_34221_def != nullptr)) {
						return _34221_def;;
					};
				}
			}
			_match_end_1c56d062b:;
		};
		return nullptr;;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1c0ecc58c_findBuiltinDef(_32832_ident);;
}



inline jule::Any _1c0dab9dd_getDef(_1c0da8721_Eval* _self_, jule::Str* _35526_ident, jule::Bool _35538_binded) {
	jule::Ptr<_1c0d4dde2_Var> _36013_v = _1c0e079d4_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c0e061b9_FindVar((*(_self_))._field_lookup, (*(_35526_ident)), _35538_binded);;
	if ((_36013_v != nullptr)) {
		return jule::Any(_36013_v, &__jule_any_type8);;
	};
	jule::Ptr<_1c0dd7101_TypeAlias> _36513_ta = _1c0e079d4_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c0e065b5_FindTypeAlias((*(_self_))._field_lookup, (*(_35526_ident)), _35538_binded);;
	if ((_36513_ta != nullptr)) {
		return jule::Any(_36513_ta, &__jule_any_type65);;
	};
	if ((!(_35538_binded))) {
		jule::Ptr<_1c0cab27d_Enum> _37117_enm = _1c0e079d4_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c0e0753e_FindEnum((*(_self_))._field_lookup, (*(_35526_ident)));;
		if ((_37117_enm != nullptr)) {
			return jule::Any(_37117_enm, &__jule_any_type66);;
		};
		jule::Ptr<_1c0cac988_TypeEnum> _37617_tenm = _1c0e079d4_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c0e07880_FindTypeEnum((*(_self_))._field_lookup, (*(_35526_ident)));;
		if ((_37617_tenm != nullptr)) {
			return jule::Any(_37617_tenm, &__jule_any_type67);;
		};
	};
	jule::Ptr<_1c0c95795_Fn> _38213_f = _1c0e079d4_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c0e06dac_FindFn((*(_self_))._field_lookup, (*(_35526_ident)), _35538_binded);;
	if ((_38213_f != nullptr)) {
		return jule::Any(_38213_f, &__jule_any_type63);;
	};
	jule::Ptr<_1c0c807c4_Struct> _38713_s = _1c0e079d4_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c0e069b1_FindStruct((*(_self_))._field_lookup, (*(_35526_ident)), _35538_binded);;
	if ((_38713_s != nullptr)) {
		return jule::Any(_38713_s, &__jule_any_type64);;
	};
	return _1c0dab5e2_findBuiltins(_self_, _35526_ident);;
}



inline jule::Ptr<_1c0c9b878_ReferenceStack> _1c0dabc74_getOwnerRefers(_1c0da8721_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1c56d8e5e:;
			{
				jule::Ptr<_1c0cdeaec_scopeChecker> _39817_sc = _1c0ce322c_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1c0cdeaec_scopeChecker>(0));;
				return (*((*(_39817_sc))._field_owner))._field_Refers;;
			}
		}
		else {
			_case_begin_1c56d84ad:;
			{
				if ((((*(_self_))._field_owner != nullptr) && ((*(*(_self_))._field_owner.alloc)._field_Scope == nullptr))) {
					return (*(*(_self_))._field_owner.alloc)._field_Refers;;
				};
			}
		}
		_match_end_1c56d8458:;
	};
	return nullptr;;
}



inline void _1c4451469_pushReference(_1c0da8721_Eval* _self_, jule::Ptr<_1c0c98699_FnIns>* _41040_ref) {
	jule::Ptr<_1c0c9b878_ReferenceStack> _41113_refers = _1c0dabc74_getOwnerRefers(_self_);;
	if (((_41113_refers != nullptr) && (!(_1c44535c0_Exist(_41113_refers, (*(_41040_ref))))))) {
		_1c0c9c659_Push(_41113_refers, jule::Any((*(_41040_ref)), &__jule_any_type7));
	};
}

inline void _1c4467606_pushReference(_1c0da8721_Eval* _self_, jule::Ptr<_1c0d4dde2_Var>* _41040_ref) {
	jule::Ptr<_1c0c9b878_ReferenceStack> _41113_refers = _1c0dabc74_getOwnerRefers(_self_);;
	if (((_41113_refers != nullptr) && (!(_1c4469927_Exist(_41113_refers, (*(_41040_ref))))))) {
		_1c0c9c659_Push(_41113_refers, jule::Any((*(_41040_ref)), &__jule_any_type8));
	};
}

inline void _1c452c413_pushReference(_1c0da8721_Eval* _self_, jule::Ptr<_1c0c83552_StructIns>* _41040_ref) {
	jule::Ptr<_1c0c9b878_ReferenceStack> _41113_refers = _1c0dabc74_getOwnerRefers(_self_);;
	if (((_41113_refers != nullptr) && (!(_1c452e756_Exist(_41113_refers, (*(_41040_ref))))))) {
		_1c0c9c659_Push(_41113_refers, jule::Any((*(_41040_ref)), &__jule_any_type9));
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dac36d__evalEnum(_1c0da8721_Eval* _self_, jule::Ptr<_1c0cab27d_Enum> _41728_enm) {
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(_41728_enm, 3)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dac769_evalEnum(_1c0da8721_Eval* _self_, jule::Ptr<_1c0cab27d_Enum> _42631_enm, jule::Ptr<_1c0c49480_Token> _42643_errorToken) {
	if ((!(_1c0d2e422_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_42631_enm))._field_Public, (*_42631_enm.alloc)._field_Token)))) {
		_1c0da8c71_pushErr(_self_, _42643_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_42631_enm.alloc)._field_Ident, &__jule_any_type4)}));
		_1c0da90d4_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1c0dac36d__evalEnum(_self_, _42631_enm);;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dacaaa__evalTypeEnum(_1c0da8721_Eval* _self_, jule::Ptr<_1c0cac988_TypeEnum> _43532_enm) {
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(_43532_enm, 4)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dacea6_evalTypeEnum(_1c0da8721_Eval* _self_, jule::Ptr<_1c0cac988_TypeEnum> _44435_enm, jule::Ptr<_1c0c49480_Token> _44451_errorToken) {
	if ((!(_1c0d2e422_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_44435_enm))._field_Public, (*_44435_enm.alloc)._field_Token)))) {
		_1c0da8c71_pushErr(_self_, _44451_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_44435_enm.alloc)._field_Ident, &__jule_any_type4)}));
		_1c0da90d4_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1c0dacaaa__evalTypeEnum(_self_, _44435_enm);;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dad2e7__evalStruct(_1c0da8721_Eval* _self_, jule::Ptr<_1c0c83552_StructIns> _45330_s) {
	jule::Ptr<_1c0da69e9_Data> _45413_d = jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(_45330_s, 0)}), ._field_Model=jule::Any(_45330_s, &__jule_any_type9), ._field_Decl=true, });;
	if ((((*(_45330_s))._field_Decl != nullptr) && (*(*_45330_s.alloc)._field_Decl.alloc)._field_Binded)) {
		(*((*(_45413_d))._field_Kind))._field_BindIdent=(*(*_45330_s.alloc)._field_Decl.alloc)._field_Ident;
	};
	return _45413_d;;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dad6e3_evalStruct(_1c0da8721_Eval* _self_, jule::Ptr<_1c0c83552_StructIns> _46733_s, jule::Ptr<_1c0c49480_Token> _46748_errorToken) {
	if ((!(_1c0d2e422_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_46733_s))._field_Decl))._field_Public, (*(*_46733_s.alloc)._field_Decl.alloc)._field_Token)))) {
		_1c0da8c71_pushErr(_self_, _46748_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(*_46733_s.alloc)._field_Decl.alloc)._field_Ident, &__jule_any_type4)}));
		_1c0da90d4_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1c0dadd97_checkDeprecated(_self_, &((*(*_46733_s.alloc)._field_Decl.alloc)._field_Directives), _46748_errorToken);
	return _1c0dad2e7__evalStruct(_self_, _46733_s);;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dada34_evalFnIns(_1c0da8721_Eval* _self_, jule::Ptr<_1c0c98699_FnIns> _47728_f) {
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(_47728_f, 1)}), ._field_Model=jule::Any(_47728_f, &__jule_any_type7), });;
}



inline void _1c0dadd97_checkDeprecated(_1c0da8721_Eval* _self_, jule::Slice<jule::Ptr<_1c0c5dd57_Directive>>* _48639_directives, jule::Ptr<_1c0c49480_Token> _48670_tok) {
	if (_1c0da9766_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1c0c5dd57_Directive> _4919_d = _1c0dd0391_findDirective(_48639_directives, jule::Str::lit("deprecated", 10));;
	if ((_4919_d != nullptr)) {
		if (((*_4919_d.alloc)._field_Args.len() == 0LL)) {
			_1c0da8c71_pushErr(_self_, _48670_tok, jule::Str::lit("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("this code is deprecated", 23), &__jule_any_type4)}));
		} else {
			_1c0da8c71_pushErr(_self_, _48670_tok, jule::Str::lit("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any((*((*_4919_d.alloc)._field_Args[0LL]))._field_Kind, &__jule_any_type4)}));
		};
		_1c0da90d4_pushSuggestion(_self_, jule::Str::lit("use Unsafe Jule for deprecated codes or replace to successor", 60), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dae293_evalFn(_1c0da8721_Eval* _self_, jule::Ptr<_1c0c95795_Fn> _50229_f, jule::Ptr<_1c0c49480_Token> _50237_errorToken) {
	if ((!(_1c0d2e422_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_50229_f))._field_Public, (*_50229_f.alloc)._field_Token)))) {
		_1c0da8c71_pushErr(_self_, _50237_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_50229_f.alloc)._field_Ident, &__jule_any_type4)}));
		_1c0da90d4_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1c0dadd97_checkDeprecated(_self_, &((*_50229_f.alloc)._field_Directives), _50237_errorToken);
	jule::Ptr<_1c0c98699_FnIns> _51113_ins = _1c0c97005_instance(_50229_f);;
	_1c4451469_pushReference(_self_, &(_51113_ins));
	return _1c0dada34_evalFnIns(_self_, _51113_ins);;
}



inline void _1c0dae6b1_pushIllegalCycleError(_1c0da8721_Eval* _self_, jule::Ptr<_1c0d4dde2_Var>* _51641_v1, jule::Ptr<_1c0d4dde2_Var>* _51652_v2, _234c76a64_StrBuilder* _51667_message) {
	;
	jule::Str _5189_refers_to = _21b8c5951_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*((*(_51641_v1))))._field_Ident, &__jule_any_type4),jule::Any((*((*(_51652_v2))))._field_Ident, &__jule_any_type4)}));;
	jule::Slice<jule::U8> _5199_buf = _234c787d0_Buf(_51667_message);;
	_234c77537_WriteStr(_51667_message, _21b86a264_Repeat(jule::Str::lit(" ", 1), 7LL));
	_234c77537_WriteStr(_51667_message, _5189_refers_to);
	_234c777e0_WriteByte(_51667_message, '\n');
	_234c7727e_Write(_51667_message, _5199_buf);
}



inline jule::Bool _1c0daeaac_checkCrossCycle(_1c0da8721_Eval* _self_, jule::Ptr<_1c0d4dde2_Var>* _52635_v, _234c76a64_StrBuilder* _52649_message) {
	{
		auto expr = &((*((*(_52635_v))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4457e32:;
		if (it != expr_end) {
			jule::Ptr<_1c0d4dde2_Var> *_52716_d = it;
			{
				if (((*(_52716_d)) == (*(_self_))._field_owner)) {
					_1c0dae6b1_pushIllegalCycleError(_self_, _52635_v, _52716_d, _52649_message);
					return false;;
				};
				if ((!(_1c0daeaac_checkCrossCycle(_self_, _52716_d, _52649_message)))) {
					_1c0dae6b1_pushIllegalCycleError(_self_, _52635_v, _52716_d, _52649_message);
					return false;;
				};
			}
			_iter_next_1c4457e32:;
			++it;
			goto _iter_begin_1c4457e32;
		}
		_iter_end_1c4457e32:;
	};
	return true;;
}



inline jule::Bool _1c0daeea8_checkIllegalCycles(_1c0da8721_Eval* _self_, jule::Ptr<_1c0d4dde2_Var>* _54342_v, jule::Ptr<_1c0c49480_Token> _54351_declToken) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*((*(_self_))._field_owner))._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_54342_v)))) {
		_1c0da8c71_pushErr(_self_, (*((*(_self_))._field_owner))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_owner))._field_Ident, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_234c76a64_StrBuilder _55613_message = static__234c76ec6_New(32LL);;
	if ((!(_1c0daeaac_checkCrossCycle(_self_, _54342_v, &(_55613_message))))) {
		jule::Str _55917_errMsg = _234c77d2e_Str(&_55613_message);;
		_234c7802c_Clear(&_55613_message);
		_1c0dae6b1_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _54342_v, &(_55613_message));
		_55917_errMsg+=_234c77d2e_Str(&_55613_message);
		_1c0da8c71_pushErr(_self_, _54351_declToken, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_55917_errMsg, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{ jule::Slice<jule::Ptr<_1c0d4dde2_Var>> &__jule_push_dest = (*((*(_self_))._field_owner))._field_Depends; __jule_push_dest.push((*(_54342_v))); };
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0db03a4_evalVar(_1c0da8721_Eval* _self_, jule::Ptr<_1c0d4dde2_Var> _57130_v, jule::Ptr<_1c0c49480_Token> _57139_errorToken) {
	if ((!(_1c0d2e422_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_57130_v))._field_Public, (*_57130_v.alloc)._field_Token)))) {
		_1c0da8c71_pushErr(_self_, _57139_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_57130_v.alloc)._field_Ident, &__jule_any_type4)}));
		_1c0da90d4_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1c0dadd97_checkDeprecated(_self_, &((*_57130_v.alloc)._field_Directives), _57139_errorToken);
	if (((*_57130_v.alloc)._field_Token == nullptr)) {
		goto _julec_label_1c446e8d8;
	};
	(*_57130_v.alloc)._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1c4461952:;
			{
				jule::Bool _59013_ok = _1c0daeea8_checkIllegalCycles(_self_, &(_57130_v), _57139_errorToken);;
				if ((!(_59013_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1c446105b:;
			{
				jule::Ptr<_1c0cdeaec_scopeChecker> _59517_s = (*(_self_))._field_lookup.cast_ptr<_1c0cdeaec_scopeChecker>(0);;
				jule::Ptr<_1c0cdeaec_scopeChecker> _59617_root = _1c0ce2e96_getRoot(_59517_s);;
				if ((((*(_59617_root))._field_captured != nullptr) && _1c0dd5495_isVarCaptured(_59617_root, _59517_s, _57130_v))) {
					_1c0ce2c10_pushCaptured(_59617_root, &(_57130_v));
				};
				if (((!((*_57130_v.alloc)._field_Reference)) || _1c0da9766_isUnsafe(_self_))) {
					goto _match_end_1c44618ca;
				};
				while ((((*_59517_s.alloc)._field_owner == nullptr) && ((*_59517_s.alloc)._field_parent != nullptr))) {
					{
						_59517_s=(*_59517_s.alloc)._field_parent;
					}
				_iter_next_1c4464d62:;
				}
				_iter_end_1c4464d62:;;
				if (((((*_59517_s.alloc)._field_owner != nullptr) && (*((*_59517_s.alloc)._field_owner))._field_Anon) && ((*_57130_v.alloc)._field_Scope != (*((*_59517_s.alloc)._field_owner))._field_Scope))) {
					_1c0da8c71_pushErr(_self_, _57139_errorToken, jule::Str::lit("anonymous functions cannot access to reference definition @ of parent scope", 75), jule::Slice<jule::Any>::make({jule::Any((*_57130_v.alloc)._field_Ident, &__jule_any_type4)}));
				};
			}
		}
		_match_end_1c44618ca:;
	};
	if (((*_57130_v.alloc)._field_Scope == nullptr)) {
		_1c4467606_pushReference(_self_, &(_57130_v));
	};
	if (((!((*_57130_v.alloc)._field_Binded)) && (((*_57130_v.alloc)._field_Value == nullptr) || ((*((*_57130_v.alloc)._field_Value))._field_Data == nullptr)))) {
		if ((*_57130_v.alloc)._field_Constant) {
			_1c0d45d40_checkVar((*(_self_))._field_s, &(_57130_v), jule::Trait<_1c0e079d4_Lookup>((*(_self_))._field_s, 3));
			if ((((*_57130_v.alloc)._field_Value == nullptr) || ((*((*_57130_v.alloc)._field_Value))._field_Data == nullptr))) {
				return nullptr;;
			};
		};
	};
	if ((((*_57130_v.alloc)._field_Kind == nullptr) || ((*((*_57130_v.alloc)._field_Kind))._field_Kind == nullptr))) {
		if (((*_57130_v.alloc)._field_Scope != nullptr)) {
			return nullptr;;
		};
		_1c0d45d40_checkVar((*(_self_))._field_s, &(_57130_v), (*(_self_))._field_lookup);
		if ((((*_57130_v.alloc)._field_Kind == nullptr) || ((*((*_57130_v.alloc)._field_Kind))._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	_julec_label_1c446e8d8:;
	jule::Ptr<_1c0da69e9_Data> _64613_d = jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=(*((*_57130_v.alloc)._field_Kind))._field_Kind, ._field_Mutable=(*_57130_v.alloc)._field_Mutable, ._field_Reference=(*_57130_v.alloc)._field_Reference, ._field_Lvalue=(!((*_57130_v.alloc)._field_Constant)), ._field_Model=jule::Any(_57130_v, &__jule_any_type8), });;
	if ((((!((*_57130_v.alloc)._field_Binded)) && _1c0d4e2bb_IsInitialized(_57130_v)) && ((*((*_57130_v.alloc)._field_Value))._field_Data != nullptr))) {
		(*(_64613_d))._field_IsRune=(*((*((*_57130_v.alloc)._field_Value))._field_Data))._field_IsRune;
	};
	if (((*_57130_v.alloc)._field_Constant && ((*((*((*_57130_v.alloc)._field_Value))._field_Data))._field_Constant != nullptr))) {
		(*_64613_d.alloc)._field_Constant=jule::new_ptr<_2021e617b_Const>((*(*((*((*_57130_v.alloc)._field_Value))._field_Data))._field_Constant.alloc));
		(*_64613_d.alloc)._field_Model=jule::Any((*_64613_d.alloc)._field_Constant, &__jule_any_type19);
		if (_1c0d4e7d8_untypedConstant(_57130_v)) {
			_1c0da9d0a_applyNumericPrefix(_self_, &(_64613_d));
			(*_64613_d.alloc)._field_untyped=true;
		};
	};
	return _64613_d;;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0db07a0_evalTypeAlias(_1c0da8721_Eval* _self_, jule::Ptr<_1c0dd7101_TypeAlias> _67036_ta, jule::Ptr<_1c0c49480_Token> _67052_errorToken) {
	if ((!(_1c0d2e422_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_67036_ta))._field_Public, (*_67036_ta.alloc)._field_Token)))) {
		_1c0da8c71_pushErr(_self_, _67052_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_67036_ta.alloc)._field_Ident, &__jule_any_type4)}));
		_1c0da90d4_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_67036_ta.alloc)._field_Used=true;
	jule::Trait<_1c0dd793c_Kind> _67913_kind = (*((*((*_67036_ta.alloc)._field_Kind))._field_Kind))._field_Kind;;
	jule::Ptr<_1c0da69e9_Data> _68017_d = nullptr;;
	{
		auto &_match_expr{ _67913_kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1c447a0ec:;
			{
				_68017_d=_1c0dad2e7__evalStruct(_self_, _67913_kind.cast_ptr<_1c0c83552_StructIns>(0));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1c4478b23:;
			{
				_68017_d=_1c0dac36d__evalEnum(_self_, _67913_kind.cast_ptr<_1c0cab27d_Enum>(3));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1c4478b89:;
			{
				_68017_d=_1c0dacaaa__evalTypeEnum(_self_, _67913_kind.cast_ptr<_1c0cac988_TypeEnum>(4));
			}
		}
		else {
			_case_begin_1c4478aac:;
			{
				_68017_d=jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=(*(*(*_67036_ta.alloc)._field_Kind.alloc)._field_Kind.alloc)._field_Kind}), ._field_Decl=true, });
				if ((*_67036_ta.alloc)._field_Binded) {
					(*((*(_68017_d))._field_Kind))._field_BindIdent=(*_67036_ta.alloc)._field_Ident;
				} else {
					(*((*(_68017_d))._field_Kind))._field_BindIdent=(*(*(*_67036_ta.alloc)._field_Kind.alloc)._field_Kind.alloc)._field_BindIdent;
				};
				(*(_68017_d))._field_Model=jule::Any((*_68017_d.alloc)._field_Kind, &__jule_any_type84);
			}
		}
		_match_end_1c4478925:;
	};
	(*((*(_68017_d))._field_Kind))._field_Generic=(*_67036_ta.alloc)._field_Generic;
	return _68017_d;;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0db0b9b_evalDef(_1c0da8721_Eval* _self_, jule::Any* _70631_def, jule::Ptr<_1c0c49480_Token> _70641_ident) {
	{
		auto &_match_expr{ (*(_70631_def)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c447e1de:;
			{
				return _1c0db03a4_evalVar(_self_, (*(_70631_def)).cast_ptr<_1c0d4dde2_Var>(&__jule_any_type8), _70641_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1c447e255:;
			{
				return _1c0dac769_evalEnum(_self_, (*(_70631_def)).cast_ptr<_1c0cab27d_Enum>(&__jule_any_type66), _70641_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1c447e2bb:;
			{
				return _1c0dacea6_evalTypeEnum(_self_, (*(_70631_def)).cast_ptr<_1c0cac988_TypeEnum>(&__jule_any_type67), _70641_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1c447e332:;
			{
				return _1c0dad6e3_evalStruct(_self_, _1c0c80c36_instance((*(_70631_def)).cast_ptr<_1c0c807c4_Struct>(&__jule_any_type64)), _70641_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1c447e3a9:;
			{
				jule::Ptr<_1c0c95795_Fn> _71717_f = (*(_70631_def)).cast_ptr<_1c0c95795_Fn>(&__jule_any_type63);;
				if ((!(*(_71717_f))._field_Ident.equal("init", 4))) {
					return _1c0dae293_evalFn(_self_, _71717_f, _70641_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c447e431:;
			{
				return _1c0dada34_evalFnIns(_self_, (*(_70631_def)).cast_ptr<_1c0c98699_FnIns>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1c447e4a8:;
			{
				return _1c0db07a0_evalTypeAlias(_self_, (*(_70631_def)).cast_ptr<_1c0dd7101_TypeAlias>(&__jule_any_type65), _70641_ident);;
			}
		}
		_match_end_1c447e189:;
	};
	_1c0da8c71_pushErr(_self_, _70641_ident, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_70641_ident))._field_Kind, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0db0edc_evalIdent(_1c0da8721_Eval* _self_, jule::Ptr<_1c0c65589_IdentExpr> _73028_ident) {
	jule::Any _73113_def = _1c0dab9dd_getDef(_self_, &((*(_73028_ident))._field_Ident), (*_73028_ident.alloc)._field_Binded);;
	return _1c0db0b9b_evalDef(_self_, &(_73113_def), (*_73028_ident.alloc)._field_Token);;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0db132d_evalUnary(jule::Ptr<_1c0da8721_Eval> _self_, jule::Ptr<_1c0c65d2b_UnaryExpr> _73533_u) {
	_1c0dc6e48_unaryEval _73613_unary = static__1c0dc7388_new(_self_);;
	return _1c0dc87b8_eval(&_73613_unary, _73533_u);;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0db166e_evalVariadic(jule::Ptr<_1c0da8721_Eval> _self_, jule::Ptr<_1c0c66205_VariadicExpr> _74036_v) {
	if (((*(_74036_v))._field_Expr == nullptr)) {
		_1c0da8c71_pushErr(_self_.ptr(), (*_74036_v.alloc)._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c0dd7de3_TypeKind> _74613_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_74613_prefix;
	});;
	jule::Ptr<_1c0da69e9_Data> _75013_d = _1c0dc6981_evalExpr(_self_, (*_74036_v.alloc)._field_Expr);;
	if ((_75013_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1c0dda2ad_Variadicable((*(_75013_d))._field_Kind.ptr())))) {
		_1c0da8c71_pushErr(_self_, (*_74036_v.alloc)._field_Token, jule::Str::lit("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*(_75013_d))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	_1c0dd5066_makeVariadic(&(_75013_d), (*(_1c0ddb59a_Slc((*(_75013_d))._field_Kind)))._field_Elem);
	return _75013_d;;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0db19b0_evalUnsafe(jule::Ptr<_1c0da8721_Eval> _self_, jule::Ptr<_1c0c650d3_UnsafeExpr> _76234_u) {
	jule::Bool _7639_unsafety = (*(_self_))._field_unsafety;;
	(*_self_.alloc)._field_unsafety=true;
	jule::Ptr<_1c0da69e9_Data> _76513_d = _1c0dc6981_evalExpr(_self_, (*(_76234_u))._field_Expr);;
	(*_self_.alloc)._field_unsafety=_7639_unsafety;
	return _76513_d;;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0db1d01_evalArr(jule::Ptr<_1c0da8721_Eval> _self_, jule::Ptr<_1c0c6a2c5_SliceExpr> _77031_s) {
	jule::Ptr<_1c0de72dc_Arr> _77213_pt = _1c0ddb314_Arr((*(_self_))._field_prefix.ptr());;
	jule::Ptr<_1c0de72dc_Arr> _77413_arr = jule::new_ptr<_1c0de72dc_Arr>(_1c0de72dc_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=(*(_77213_pt))._field_Elem});;
	jule::Bool _78013_filled = false;;
	if (((*(_77031_s))._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ (*((*(_77031_s))._field_Exprs[1LL]))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type75) {
				_case_begin_1c448e870:;
				{
					if (((*((*((*(_77031_s))._field_Exprs[1LL]))._field_Kind.unsafe_cast_ptr<_1c0c66205_VariadicExpr>()))._field_Expr != nullptr)) {
						goto _match_end_1c448e7c6;
					};
					if ((*_77213_pt.alloc)._field_Auto) {
						_1c0da8c71_pushErr(_self_, (*_77031_s.alloc)._field_Token, jule::Str::lit("auto-sized arrays cannot filled", 31), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_78013_filled=true;
					((*(_77031_s))._field_Exprs).mut_slice(0LL, 1LL);;
				}
			}
			_match_end_1c448e7c6:;
		};
	};
	(*(_77413_arr))._field_N=(*_77031_s.alloc)._field_Exprs.len();
	if ((!((*_77213_pt.alloc)._field_Auto))) {
		if (((*_77413_arr.alloc)._field_N > (*_77213_pt.alloc)._field_N)) {
			_1c0da8c71_pushErr(_self_, (*_77031_s.alloc)._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else if (((*_77413_arr.alloc)._field_N < (*_77213_pt.alloc)._field_N)) {
			(*_77413_arr.alloc)._field_N=(*_77213_pt.alloc)._field_N;
		};
	};
	jule::Ptr<_1c0c8cd20_ArrayExprModel> _80913_model = jule::new_ptr<_1c0c8cd20_ArrayExprModel>(_1c0c8cd20_ArrayExprModel{._field_Kind=_77413_arr, });;
	if (_78013_filled) {
		(*(_80913_model))._field_Elems=jule::Slice<jule::Any>::alloc(0LL, 2LL, jule::Any(nullptr));
	} else {
		(*(_80913_model))._field_Elems=jule::Slice<jule::Any>::alloc(0LL, (*_77031_s.alloc)._field_Exprs.len(), jule::Any(nullptr));
	};
	jule::Ptr<_1c0dd7de3_TypeKind> _81813_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=(*_77413_arr.alloc)._field_Elem;
	{
		auto expr = &((*_77031_s.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c44965e1:;
		if (it != expr_end) {
			jule::Ptr<_1c0c63c6e_Expr> _82021_elem = *it;
			{
				jule::Ptr<_1c0da69e9_Data> _82117_d = _1c0dc6981_evalExpr(_self_, _82021_elem);;
				if ((_82117_d == nullptr)) {
					goto _iter_next_1c44965e1;
				};
				;
				if (_1c0d3aa5a_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_77413_arr.alloc)._field_Elem), &(_82117_d), &((*(_82021_elem))._field_Token))) {
					_1c0d366c1_checkAssignType((*_self_.alloc)._field_s, false, &((*_77413_arr.alloc)._field_Elem), &(_82117_d), (*_82021_elem.alloc)._field_Token);
				};
				(*(_80913_model))._field_Elems=jule::append((*_80913_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({(*(_82117_d))._field_Model}));
			}
			_iter_next_1c44965e1:;
			++it;
			goto _iter_begin_1c44965e1;
		}
		_iter_end_1c44965e1:;
	};
	(*_self_.alloc)._field_prefix=_81813_prefix;
	if (_78013_filled) {
		(*_80913_model.alloc)._field_Elems=jule::append((*_80913_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({nullptr}));
	};
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(_77413_arr, 25)}), ._field_Mutable=true, ._field_Model=jule::Any(_80913_model, &__jule_any_type85), });;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0db22a7_evalExpSlc(jule::Ptr<_1c0da8721_Eval> _self_, jule::Ptr<_1c0c6a2c5_SliceExpr> _84734_s, jule::Ptr<_1c0dd7de3_TypeKind> _84753_t, jule::Any _84771_first) {
	jule::Ptr<_1c0de4ebb_Slc> _84813_slc = jule::new_ptr<_1c0de4ebb_Slc>(_1c0de4ebb_Slc{._field_Elem=_84753_t});;
	jule::I64 _85213_i = 0LL;;
	jule::Ptr<_1c0c89d0b_SliceExprModel> _85313_model = jule::new_ptr<_1c0c89d0b_SliceExprModel>(_1c0c89d0b_SliceExprModel{._field_ElemKind=_84753_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, (*(_84734_s))._field_Exprs.len(), jule::Any(nullptr))});;
	if ((_84771_first != nullptr)) {
		(*(_85313_model))._field_Elems=jule::append((*_85313_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({_84771_first}));
		_85213_i=1LL;
	};
	jule::Ptr<_1c0dd7de3_TypeKind> _86213_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=(*(_84813_slc))._field_Elem;
	{
		auto expr = (*_84734_s.alloc)._field_Exprs.slice(_85213_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1c449e74d:;
		if (it != expr_end) {
			jule::Ptr<_1c0c63c6e_Expr> _86421_elem = *it;
			{
				jule::Ptr<_1c0da69e9_Data> _86517_d = _1c0dc6981_evalExpr(_self_, _86421_elem);;
				if ((_86517_d != nullptr)) {
					;
					if (_1c0d3aa5a_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_84813_slc.alloc)._field_Elem), &(_86517_d), &((*(_86421_elem))._field_Token))) {
						_1c0d366c1_checkAssignType((*_self_.alloc)._field_s, false, &((*_84813_slc.alloc)._field_Elem), &(_86517_d), (*_86421_elem.alloc)._field_Token);
					};
					(*_85313_model.alloc)._field_Elems=jule::append((*_85313_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({(*_86517_d.alloc)._field_Model}));
				};
			}
			_iter_next_1c449e74d:;
			++it;
			goto _iter_begin_1c449e74d;
		}
		_iter_end_1c449e74d:;
	};
	(*_self_.alloc)._field_prefix=_86213_prefix;
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(_84813_slc, 22)}), ._field_Mutable=true, ._field_Model=jule::Any(_85313_model, &__jule_any_type76), });;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0db25e8_evalSliceExpr(jule::Ptr<_1c0da8721_Eval> _self_, jule::Ptr<_1c0c6a2c5_SliceExpr> _88537_s) {
	if (((*(_self_))._field_prefix != nullptr)) {
		{
			
			if ((_1c0ddb314_Arr((*_self_.alloc)._field_prefix) != nullptr)) {
				_case_begin_1c44a4159:;
				{
					return _1c0db1d01_evalArr(_self_, _88537_s);;
				}
			}
			else if ((_1c0ddb59a_Slc((*_self_.alloc)._field_prefix) != nullptr)) {
				_case_begin_1c44a4203:;
				{
					jule::Ptr<_1c0de4ebb_Slc> _89121_pt = _1c0ddb59a_Slc((*_self_.alloc)._field_prefix);;
					return _1c0db22a7_evalExpSlc(_self_, _88537_s, (*(_89121_pt))._field_Elem, nullptr);;
				}
			}
			_match_end_1c44a407c:;
		};
	};
	jule::Ptr<_1c0dd7de3_TypeKind> _89613_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	if (((*(_88537_s))._field_Exprs.len() == 0LL)) {
		_1c0da8c71_pushErr(_self_, (*_88537_s.alloc)._field_Token, jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c0da69e9_Data> _90413_firstElem = _1c0dc6981_evalExpr(_self_, (*_88537_s.alloc)._field_Exprs[0LL]);;
	if ((_90413_firstElem == nullptr)) {
		return nullptr;;
	};
	;
	_1c0d3aa5a_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*(_90413_firstElem))._field_Kind), &(_90413_firstElem), &((*((*_88537_s.alloc)._field_Exprs[0LL]))._field_Token));
	jule::Ptr<_1c0da69e9_Data> _91413_d = _1c0db22a7_evalExpSlc(_self_, _88537_s, (*(_90413_firstElem))._field_Kind, (*(_90413_firstElem))._field_Model);;
	(*_self_.alloc)._field_prefix=_89613_prefix;
	return _91413_d;;
}



inline void _1c0db295b_checkIntegerIndexingByData(_1c0da8721_Eval* _self_, jule::Ptr<_1c0da69e9_Data>* _92050_d, jule::Ptr<_1c0c49480_Token> _92064_token) {
	jule::Str _9219_errKey = _1c0dd2c23_checkDataForIntegerIndexing(_92050_d, &(_92064_token));;
	{
		auto &_match_expr{ _9219_errKey };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1c44abda9:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str::lit("type @ is invalid for indexing", 30)) {
			_case_begin_1c44aba79:;
			{
				_1c0da8c71_pushErr(_self_, _92064_token, _9219_errKey, jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*((*(_92050_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			}
		}
		else {
			_case_begin_1c44ab6d3:;
			{
				_1c0da8c71_pushErr(_self_, _92064_token, _9219_errKey, jule::Slice<jule::Any>());
			}
		}
		_match_end_1c44ab98b:;
	};
}



inline void _1c0db2d79_indexingPtr(_1c0da8721_Eval* _self_, jule::Ptr<_1c0da69e9_Data>* _93235_d, jule::Ptr<_1c0da69e9_Data>* _93250_index, jule::Ptr<_1c0c6ac32_IndexingExpr>* _93269_i) {
	_1c0db295b_checkIntegerIndexingByData(_self_, _93250_index, (*((*(_93269_i))))._field_Token);
	(*((*(_93235_d))))._field_Lvalue=true;
	jule::Ptr<_1c0de7cb0_Ptr> _93613_ptr = _1c0ddaa61_Ptr((*((*(_93235_d))))._field_Kind.ptr());;
	{
		
		if (_1c0de87e9_IsUnsafe(_93613_ptr.ptr())) {
			_case_begin_1c44ae94a:;
			{
				_1c0da8c71_pushErr(_self_, (*((*(_93269_i))))._field_Token, jule::Str::lit("unsafe pointers are not supports indexing", 41), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1c0da9766_isUnsafe(_self_)))) {
			_case_begin_1c44ae9e4:;
			{
				_1c0da8c71_pushErr(_self_, (*((*(_93269_i))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c44ae8d4:;
	};
	(*((*(_93235_d))))._field_Kind=(*(_93613_ptr))._field_Elem;
}



inline void _1c0db3297_indexingArr(_1c0da8721_Eval* _self_, jule::Ptr<_1c0da69e9_Data>* _94835_d, jule::Ptr<_1c0da69e9_Data>* _94850_index, jule::Ptr<_1c0c6ac32_IndexingExpr>* _94869_i) {
	jule::Ptr<_1c0de72dc_Arr> _94913_arr = _1c0ddb314_Arr((*((*(_94835_d))))._field_Kind.ptr());;
	(*((*(_94835_d))))._field_Kind=(*(_94913_arr))._field_Elem;
	_1c0db295b_checkIntegerIndexingByData(_self_, _94850_index, (*((*(_94869_i))))._field_Token);
	(*((*(_94835_d))))._field_Lvalue=true;
	if ((_1c0da7401_IsConst((*(_94850_index)).ptr()) && (_2021e8d3d_AsF64((*((*(_94850_index))))._field_Constant.ptr()) >= static_cast<jule::F64>((*_94913_arr.alloc)._field_N)))) {
		_1c0da8c71_pushErr(_self_, (*((*(_94869_i))))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
	};
}



inline void _1c0db36b5_indexingSlc(_1c0da8721_Eval* _self_, jule::Ptr<_1c0da69e9_Data>* _95835_d, jule::Ptr<_1c0da69e9_Data>* _95850_index, jule::Ptr<_1c0c6ac32_IndexingExpr>* _95869_i) {
	jule::Ptr<_1c0de4ebb_Slc> _95913_slc = _1c0ddb59a_Slc((*((*(_95835_d))))._field_Kind.ptr());;
	(*((*(_95835_d))))._field_Kind=(*(_95913_slc))._field_Elem;
	_1c0db295b_checkIntegerIndexingByData(_self_, _95850_index, (*((*(_95869_i))))._field_Token);
	(*((*(_95835_d))))._field_Lvalue=true;
	if ((!(_1c0da7401_IsConst((*(_95850_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_95835_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1c44b6c93:;
			{
				jule::Ptr<_1c0c89d0b_SliceExprModel> _97017_m = (*((*(_95835_d))))._field_Model.unsafe_cast_ptr<_1c0c89d0b_SliceExprModel>();;
				jule::F64 _97113_indx = _2021e8d3d_AsF64((*((*(_95850_index))))._field_Constant.ptr());;
				if ((_97113_indx >= static_cast<jule::F64>((*(_97017_m))._field_Elems.len()))) {
					_1c0da8c71_pushErr(_self_, (*((*(_95869_i))))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
				} else {
					(*((*(_95835_d))))._field_Model=(*(_97017_m))._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_97113_indx))];
					(*((*(_95835_d))))._field_Decl=true;
				};
			}
		}
		_match_end_1c44b6c2c:;
	};
}



inline void _1c0db3ad3_indexingMap(_1c0da8721_Eval* _self_, jule::Ptr<_1c0da69e9_Data>* _98135_d, jule::Ptr<_1c0da69e9_Data>* _98150_index, jule::Ptr<_1c0c6ac32_IndexingExpr>* _98169_i) {
	(*((*(_98135_d))))._field_Lvalue=true;
	if (((*(_98150_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1c0de6660_Map> _98613_m = _1c0ddc0d4_Map((*((*(_98135_d))))._field_Kind.ptr());;
	_1c0d90461_assignTypeChecker _98713_atc = _1c0d90461_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_98613_m))._field_Key, ._field_d=(*(_98150_index)), ._field_errorToken=(*((*(_98169_i))))._field_Token};;
	_1c0d9142e_check(&_98713_atc);
	(*((*(_98135_d))))._field_Kind=(*_98613_m.alloc)._field_Val;
}



inline void _1c0db4001_indexingStr(_1c0da8721_Eval* _self_, jule::Ptr<_1c0da69e9_Data>* _99735_d, jule::Ptr<_1c0da69e9_Data>* _99750_index, jule::Ptr<_1c0c6ac32_IndexingExpr>* _99769_i) {
	(*((*(_99735_d))))._field_Kind=_1c0ecaca5_primU8;
	(*((*(_99735_d))))._field_Mutable=false;
	(*((*(_99735_d))))._field_Lvalue=true;
	if (((*(_99750_index)) == nullptr)) {
		return;;
	};
	_1c0db295b_checkIntegerIndexingByData(_self_, _99750_index, (*((*(_99769_i))))._field_Token);
	if ((!(_1c0da7401_IsConst((*(_99750_index)).ptr())))) {
		(*((*(_99735_d))))._field_Constant=nullptr;
		(*((*(_99735_d))))._field_untyped=false;
		return;;
	};
	if (_1c0da7401_IsConst((*(_99735_d)).ptr())) {
		jule::Ptr<_1c0c49480_Token> _101513_errorToken = (*((*(_99769_i))))._field_Token;;
		jule::I64 _101613_j = _2021e8821_AsI64((*((*(_99750_index))))._field_Constant.ptr());;
		jule::Str _101713_s = _2021e8304_ReadStr((*((*(_99735_d))))._field_Constant);;
		if ((static_cast<jule::I64>(_101613_j) >= _101713_s.len())) {
			_1c0da8c71_pushErr(_self_, _101513_errorToken, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else {
			_2021e939e_SetU64((*((*(_99735_d))))._field_Constant, static_cast<jule::U64>(_101713_s[_101613_j]));
		};
	};
}



inline void _1c0db441e_toIndexing(_1c0da8721_Eval* _self_, jule::Ptr<_1c0da69e9_Data>* _102634_d, jule::Ptr<_1c0da69e9_Data>* _102649_index, jule::Ptr<_1c0c6ac32_IndexingExpr>* _102668_i) {
	{
		
		if ((_1c0ddaa61_Ptr((*((*(_102634_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c44c3442:;
			{
				_1c0db2d79_indexingPtr(_self_, _102634_d, _102649_index, _102668_i);
				return;;
			}
		}
		else if ((_1c0ddb314_Arr((*((*(_102634_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c44c34db:;
			{
				_1c0db3297_indexingArr(_self_, _102634_d, _102649_index, _102668_i);
				return;;
			}
		}
		else if ((_1c0ddb59a_Slc((*((*(_102634_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c44c3552:;
			{
				_1c0db36b5_indexingSlc(_self_, _102634_d, _102649_index, _102668_i);
				return;;
			}
		}
		else if ((_1c0ddc0d4_Map((*((*(_102634_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c44c35b8:;
			{
				_1c0db3ad3_indexingMap(_self_, _102634_d, _102649_index, _102668_i);
				return;;
			}
		}
		else if ((_1c0dda544_Prim((*((*(_102634_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c44c362e:;
			{
				jule::Ptr<_1c0de09bc_Prim> _104113_prim = _1c0dda544_Prim((*((*(_102634_d))))._field_Kind);;
				{
					
					if (_1c0de3e54_IsStr(_104113_prim.ptr())) {
						_case_begin_1c44c7996:;
						{
							_1c0db4001_indexingStr(_self_, _102634_d, _102649_index, _102668_i);
							return;;
						}
					}
					_match_end_1c44c78ec:;
				};
			}
		}
		_match_end_1c44c32ee:;
	};
	_1c0da8c71_pushErr(_self_, (*((*(_102668_i))))._field_Token, jule::Str::lit("type @ is not support indexing", 30), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*((*(_102634_d))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Bool _1c0db48c5_pushGenericsFromExprSubIdent(jule::Ptr<_1c0da8721_Eval> _self_, jule::Ptr<_1c0c66d82_SubIdentExpr>* _105153_sexpr, jule::Slice<jule::Ptr<_1c0c5e93a_TypeDecl>>* _105214_generics, jule::Ptr<_1c0c63c6e_Expr>* _105242_expr) {
	jule::Ptr<_1c0c6030e_SubIdentTypeDecl> _105313_t = jule::new_ptr<_1c0c6030e_SubIdentTypeDecl>();;
	if ((!(_1c0dd3b36_pushSubIdentFromExpr(jule::Any((*(_105153_sexpr)), &__jule_any_type86), &(_105313_t))))) {
		_1c0da8c71_pushErr(_self_.ptr(), (*((*(_105242_expr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_1c0c5e93a_TypeDecl>> &__jule_push_dest = (*(_105214_generics)); __jule_push_dest.push(jule::new_ptr<_1c0c5e93a_TypeDecl>(_1c0c5e93a_TypeDecl{._field_Kind=jule::Any(_105313_t, &__jule_any_type87)})); };
	return true;;
}



inline jule::Bool _1c0db4cc1_pushGenericsFromData(jule::Ptr<_1c0da8721_Eval> _self_, jule::Slice<jule::Ptr<_1c0c5e93a_TypeDecl>>* _106245_generics, jule::Ptr<_1c0c63c6e_Expr>* _106273_expr) {
	{
		auto &_match_expr{ (*((*(_106273_expr))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1c44cc050:;
			{
				jule::Ptr<_1c0c65d2b_UnaryExpr> _106517_u = (*((*(_106273_expr))))._field_Kind.unsafe_cast_ptr<_1c0c65d2b_UnaryExpr>();;
				{
					auto &_match_expr{ (*((*(_106517_u))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(62LLU)) {
						_case_begin_1c44cd727:;
						{
							jule::Ptr<_1c0c61464_PtrTypeDecl> _106821_kind = jule::new_ptr<_1c0c61464_PtrTypeDecl>();;
							jule::Slice<jule::Ptr<_1c0c5e93a_TypeDecl>> _106921__generics = jule::Slice<jule::Ptr<_1c0c5e93a_TypeDecl>>::alloc(0LL, 1LL);;
							_1c0db4cc1_pushGenericsFromData(_self_, &(_106921__generics), &((*(_106517_u))._field_Expr));
							(*_106821_kind.alloc)._field_Elem=_106921__generics[0LL];
							{ jule::Slice<jule::Ptr<_1c0c5e93a_TypeDecl>> &__jule_push_dest = (*(_106245_generics)); __jule_push_dest.push(jule::new_ptr<_1c0c5e93a_TypeDecl>(_1c0c5e93a_TypeDecl{._field_Token=(*((*(_106273_expr))))._field_Token, ._field_Kind=jule::Any(_106821_kind, &__jule_any_type70)})); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(65LLU)) {
						_case_begin_1c44ce030:;
						{
							jule::Ptr<_1c0c609d5_SptrTypeDecl> _107721_kind = jule::new_ptr<_1c0c609d5_SptrTypeDecl>();;
							jule::Slice<jule::Ptr<_1c0c5e93a_TypeDecl>> _107821__generics = jule::Slice<jule::Ptr<_1c0c5e93a_TypeDecl>>::alloc(0LL, 1LL);;
							_1c0db4cc1_pushGenericsFromData(_self_, &(_107821__generics), &((*(_106517_u))._field_Expr));
							(*_107721_kind.alloc)._field_Elem=_107821__generics[0LL];
							{ jule::Slice<jule::Ptr<_1c0c5e93a_TypeDecl>> &__jule_push_dest = (*(_106245_generics)); __jule_push_dest.push(jule::new_ptr<_1c0c5e93a_TypeDecl>(_1c0c5e93a_TypeDecl{._field_Token=(*((*(_106273_expr))))._field_Token, ._field_Kind=jule::Any(_107721_kind, &__jule_any_type71)})); };
						}
					}
					else {
						_case_begin_1c44ccddb:;
						{
							_1c0da8c71_pushErr(_self_.ptr(), (*(_106517_u))._field_Op, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1c44cd381:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1c44cc0b6:;
			{
				{ jule::Slice<jule::Ptr<_1c0c5e93a_TypeDecl>> &__jule_push_dest = (*(_106245_generics)); __jule_push_dest.push((*((*(_106273_expr))))._field_Kind.unsafe_cast_ptr<_1c0c5e93a_TypeDecl>()); };
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1c44cc12c:;
			{
				jule::Ptr<_1c0c66d82_SubIdentExpr> _109217_sexpr = (*((*(_106273_expr))))._field_Kind.unsafe_cast_ptr<_1c0c66d82_SubIdentExpr>();;
				return _1c0db48c5_pushGenericsFromExprSubIdent(_self_, &(_109217_sexpr), _106245_generics, _106273_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1c44cb46c:;
			{
				jule::Ptr<_1c0c65589_IdentExpr> _109517_ident = (*((*(_106273_expr))))._field_Kind.unsafe_cast_ptr<_1c0c65589_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1c0c5e93a_TypeDecl>> &__jule_push_dest = (*(_106245_generics)); __jule_push_dest.push(jule::new_ptr<_1c0c5e93a_TypeDecl>(_1c0c5e93a_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1c0c60045_IdentTypeDecl>(_1c0c60045_IdentTypeDecl{._field_Token=(*_109517_ident.alloc)._field_Token, ._field_Ident=(*_109517_ident.alloc)._field_Ident, ._field_Binded=(*(_109517_ident))._field_Binded, }), &__jule_any_type74)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1c44cb4d3:;
			{
				{
					auto expr = &((*((*((*(_106273_expr))))._field_Kind.unsafe_cast_ptr<_1c0c64863_TupleExpr>()))._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c44d561e:;
					if (it != expr_end) {
						jule::Ptr<_1c0c63c6e_Expr> _110425_texpr = *it;
						{
							if ((!(_1c0db4cc1_pushGenericsFromData(_self_, _106245_generics, &(_110425_texpr))))) {
								return false;;
							};
						}
						_iter_next_1c44d561e:;
						++it;
						goto _iter_begin_1c44d561e;
					}
					_iter_end_1c44d561e:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1c44cb549:;
			{
				jule::Ptr<_1c0c669a8_NsSelectionExpr> _111017_ns = (*((*(_106273_expr))))._field_Kind.unsafe_cast_ptr<_1c0c669a8_NsSelectionExpr>();;
				jule::Ptr<_1c0c60045_IdentTypeDecl> _111117_decl = jule::new_ptr<_1c0c60045_IdentTypeDecl>(_1c0c60045_IdentTypeDecl{._field_Token=(*(_111017_ns))._field_Ident, ._field_Ident=(*((*_111017_ns.alloc)._field_Ident))._field_Kind, });;
				{ jule::Slice<jule::Ptr<_1c0c5e93a_TypeDecl>> &__jule_push_dest = (*(_106245_generics)); __jule_push_dest.push(jule::new_ptr<_1c0c5e93a_TypeDecl>(_1c0c5e93a_TypeDecl{._field_Token=(*(_111117_decl))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1c0c606d8_NamespaceTypeDecl>(_1c0c606d8_NamespaceTypeDecl{._field_Idents=(*_111017_ns.alloc)._field_Ns, ._field_Kind=jule::new_ptr<_1c0c5e93a_TypeDecl>(_1c0c5e93a_TypeDecl{._field_Token=(*_111117_decl.alloc)._field_Token, ._field_Kind=jule::Any(_111117_decl, &__jule_any_type74)})}), &__jule_any_type91)})); };
			}
		}
		else {
			_case_begin_1c44cb406:;
			{
				_1c0da8c71_pushErr(_self_.ptr(), (*((*(_106273_expr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1c44cb3a1:;
	};
	return true;;
}



inline void _1c0db5134_evalIdentDeclFromIndexing(jule::Ptr<_1c0da8721_Eval> _self_, jule::Ptr<_1c0da69e9_Data>* _113250_d, jule::Ptr<_1c0c6ac32_IndexingExpr>* _113265_i) {
	jule::Ptr<_1c0c83552_StructIns> _113313_s = _1c0ddbab7_Struct((*((*(_113250_d))))._field_Kind.ptr());;
	if ((_113313_s == nullptr)) {
		_1c0da8c71_pushErr(_self_.ptr(), (*((*((*(_113265_i))))._field_Expr))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*((*(_113250_d))))._field_Kind), &__jule_any_type4)}));
		(*(_113250_d))=nullptr;
		return;;
	};
	jule::Ptr<_1c0c60045_IdentTypeDecl> _114017_decl = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_113265_i))))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1c44dc527:;
			{
				jule::Ptr<_1c0c65589_IdentExpr> _114317_expr = (*((*((*(_113265_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1c0c65589_IdentExpr>();;
				_114017_decl=jule::new_ptr<_1c0c60045_IdentTypeDecl>(_1c0c60045_IdentTypeDecl{._field_Token=(*_114317_expr.alloc)._field_Token, ._field_Ident=(*_114317_expr.alloc)._field_Ident, ._field_Binded=(*(_114317_expr))._field_Binded, });
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1c44dd913:;
			{
				jule::Ptr<_1c0c669a8_NsSelectionExpr> _115017_expr = (*((*((*(_113265_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1c0c669a8_NsSelectionExpr>();;
				_114017_decl=jule::new_ptr<_1c0c60045_IdentTypeDecl>(_1c0c60045_IdentTypeDecl{._field_Token=(*(_115017_expr))._field_Ident, ._field_Ident=(*((*_115017_expr.alloc)._field_Ident))._field_Kind, });
			}
		}
		else {
			_case_begin_1c44dca99:;
			{
				_1c0da8c71_pushErr(_self_, (*((*(_113265_i))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				(*(_113250_d))=nullptr;
				return;;
			}
		}
		_match_end_1c44dca44:;
	};
	if ((!(_1c0db4cc1_pushGenericsFromData(_self_, &((*(_114017_decl))._field_Generics), &((*((*(_113265_i))))._field_Index))))) {
		(*(_113250_d))=nullptr;
		return;;
	};
	_113313_s=({ auto _wrap_copy = _1c0dbbb30_typeChecker(_self_); _1c0dedbea_fromStruct(&_wrap_copy, &(_114017_decl), &((*(_113313_s))._field_Decl)); });
	if ((_113313_s == nullptr)) {
		(*(_113250_d))=nullptr;
		return;;
	};
	(*(*((*(_113250_d))))._field_Kind.alloc)._field_Kind=jule::Trait<_1c0dd793c_Kind>(_113313_s, 0);
}



inline jule::Bool _1c0db55da_checkGenericFn(jule::Ptr<_1c0da8721_Eval> _self_, jule::Ptr<_1c0c98699_FnIns>* _117539_f, jule::Ptr<_1c0c49480_Token>* _117555_et, jule::Any* _117572_model) {
	jule::Bool _11769_ok = _1c0d39b47_reloadFnInsTypes((*(_self_))._field_s, (*(_117539_f)));;
	(*((*(_117539_f))))._field_reloaded=true;
	if ((!(_11769_ok))) {
		return false;;
	};
	jule::Ptr<_1c0c98699_FnIns> _118113_existInstance = _1c0c97313_appendInstance((*((*(_117539_f))))._field_Decl.ptr(), _117539_f);;
	if ((!(_1c0d38b9b_checkConstraintsFn((*_self_.alloc)._field_s, _117539_f, _117555_et, _118113_existInstance)))) {
		return false;;
	};
	if ((_118113_existInstance != nullptr)) {
		_1c0dd38c2_updateModelToGenericIns(_117572_model, &(_118113_existInstance));
		_1c44e6762_updateRefer(_1c0dabc74_getOwnerRefers(_self_), _117539_f, &(_118113_existInstance));
		(*(_117539_f))=_118113_existInstance;
	} else {
		_1c0d48e97_checkFnInsCaller((*_self_.alloc)._field_s, _117539_f, (*(_117555_et)));
	};
	return true;;
}



inline void _1c0db594d_evalFnGenericFromIndexing(jule::Ptr<_1c0da8721_Eval> _self_, jule::Ptr<_1c0da69e9_Data>* _120450_d, jule::Ptr<_1c0c6ac32_IndexingExpr>* _120465_i) {
	jule::Slice<jule::Ptr<_1c0c5e93a_TypeDecl>> _120513_generics = jule::Slice<jule::Ptr<_1c0c5e93a_TypeDecl>>::alloc(0LL, 8LLU);;
	if ((!(_1c0db4cc1_pushGenericsFromData(_self_, &(_120513_generics), &((*((*(_120465_i))))._field_Index))))) {
		(*(_120450_d))=nullptr;
		return;;
	};
	jule::Ptr<_1c0c98699_FnIns> _121113_f = _1c0ddb831_Fn((*((*(_120450_d))))._field_Kind.ptr());;
	jule::I64 _121213_genericsLen = 0LL;;
	if (((*(_121113_f))._field_Decl != nullptr)) {
		_121213_genericsLen=(*(*_121113_f.alloc)._field_Decl.alloc)._field_Generics.len();
	};
	if ((!(_1c0d301e2_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), _121213_genericsLen, _120513_generics.len(), (*((*((*(_120465_i))))._field_Expr))._field_Token)))) {
		(*(_120450_d))=nullptr;
		return;;
	};
	(*_121113_f.alloc)._field_Generics=jule::Slice<jule::Ptr<_1c0dd650c_InsGeneric>>::alloc(0LL, (*(*_121113_f.alloc)._field_Decl.alloc)._field_Generics.len());
	{
		auto expr = &(_120513_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c44ed3a1:;
		if (it != expr_end) {
			jule::Ptr<_1c0c5e93a_TypeDecl> _122321_g = *it;
			{
				jule::Ptr<_1c0da69e9_Data> _122417_k = _1c0dbbe71_evalType(_self_, _122321_g);;
				if ((_122417_k == nullptr)) {
					(*(_120450_d))=nullptr;
					return;;
				};
				(*_121113_f.alloc)._field_Generics=jule::append((*_121113_f.alloc)._field_Generics,jule::Slice<jule::Ptr<_1c0dd650c_InsGeneric>>::make({jule::new_ptr<_1c0dd650c_InsGeneric>(_1c0dd650c_InsGeneric{._field_Kind=(*(_122417_k))._field_Kind, })}));
			}
			_iter_next_1c44ed3a1:;
			++it;
			goto _iter_begin_1c44ed3a1;
		}
		_iter_end_1c44ed3a1:;
	};
	if (_1c0c99b2e_IsBuiltin(_121113_f)) {
		return;;
	};
	if (_1c0db55da_checkGenericFn(_self_, &(_121113_f), &((*(*((*(_120465_i))))._field_Expr.alloc)._field_Token), &((*((*(_120450_d))))._field_Model))) {
		(*(*((*(_120450_d))))._field_Kind.alloc)._field_Kind=jule::Trait<_1c0dd793c_Kind>(_121113_f, 1);
	} else {
		(*(_120450_d))=nullptr;
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0db5c8e_evalIndexing(jule::Ptr<_1c0da8721_Eval> _self_, jule::Ptr<_1c0c6ac32_IndexingExpr> _124336_i) {
	jule::Ptr<_1c0dd7de3_TypeKind> _124413_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_124413_prefix;
	});;
	jule::Ptr<_1c0da69e9_Data> _124813_d = _1c0dc5b6c_evalExprKind(_self_, (*((*(_124336_i))._field_Expr))._field_Kind);;
	if ((_124813_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_124813_d))._field_Decl) {
		_1c0db5134_evalIdentDeclFromIndexing(_self_, &(_124813_d), &(_124336_i));
		return _124813_d;;
	};
	if ((_1c0ddb831_Fn((*(_124813_d))._field_Kind.ptr()) != nullptr)) {
		_1c0db594d_evalFnGenericFromIndexing(_self_, &(_124813_d), &(_124336_i));
		return _124813_d;;
	};
	_1c0da69e9_Data _126413_oldData = (*(_124813_d));;
	jule::Ptr<_1c0da69e9_Data> _126613_index = _1c0dc6981_evalExpr(_self_, (*_124336_i.alloc)._field_Index);;
	if ((_126613_index == nullptr)) {
		return nullptr;;
	};
	(*(_124813_d))._field_Decl=false;
	_1c0db441e_toIndexing(_self_, &(_124813_d), &(_126613_index), &(_124336_i));
	if (_1c0da7401_IsConst(_124813_d.ptr())) {
		(*(_124813_d))._field_Decl=false;
		(*(_124813_d))._field_Model=jule::Any((*(_124813_d))._field_Constant, &__jule_any_type19);
	} else if ((*(_124813_d))._field_Decl) {
		(*(_124813_d))._field_Decl=false;
	} else {
		(*(_124813_d))._field_Model=jule::Any(jule::new_ptr<_1c0c8a2b2_IndexingExprModel>(_1c0c8a2b2_IndexingExprModel{._field_Token=(*_124336_i.alloc)._field_Token, ._field_Expr=jule::new_ptr<_1c0da69e9_Data>(_126413_oldData), ._field_Index=_126613_index}), &__jule_any_type44);
	};
	return _124813_d;;
}



inline __jule_tuple_x_1c0da69e9_Data__jule_tuple_x_1c0da69e9_Data _1c0db60d0_evalSlicingExprs(jule::Ptr<_1c0da8721_Eval> _self_, jule::Ptr<_1c0c6b392_SlicingExpr>* _129741_s) {
	__jule_tuple_x_1c0da69e9_Data__jule_tuple_x_1c0da69e9_Data __jule_func_result;
	jule::Ptr<_1c0dd7de3_TypeKind> _129813_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_129813_prefix;
	});;
	jule::Ptr<_1c0da69e9_Data> _130217_l = nullptr;;
	jule::Ptr<_1c0da69e9_Data> _130317_r = nullptr;;
	if (((*((*(_129741_s))))._field_Start != nullptr)) {
		_130217_l=_1c0dc6981_evalExpr(_self_, (*((*(_129741_s))))._field_Start);
		if ((_130217_l != nullptr)) {
			_1c0db295b_checkIntegerIndexingByData(_self_, &(_130217_l), (*((*(_129741_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_130217_l=jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec9ea2_primInt, ._field_Constant=static__2021e65bb_NewI64(0LL)});
		(*((*(_130217_l))._field_Constant))._field_Kind=jule::Str::lit("int", 3);
		(*_130217_l.alloc)._field_Model=jule::Any((*_130217_l.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*((*(_129741_s))))._field_To != nullptr)) {
		_130317_r=_1c0dc6981_evalExpr(_self_, (*((*(_129741_s))))._field_To);
		if ((_130317_r != nullptr)) {
			_1c0db295b_checkIntegerIndexingByData(_self_, &(_130317_r), (*((*(_129741_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _130217_l;
	__jule_func_result.__jule_result_arg1 = _130317_r;
	return __jule_func_result;;
}



inline void _1c0db6388_slicingArr(_1c0da8721_Eval* _self_, jule::Ptr<_1c0da69e9_Data>* _133330_d) {
	jule::Ptr<_1c0dd7de3_TypeKind> _133413_elemType = (*(_1c0ddb314_Arr((*((*(_133330_d))))._field_Kind.ptr())))._field_Elem;;
	(*((*(_133330_d))))._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(jule::new_ptr<_1c0de4ebb_Slc>(_1c0de4ebb_Slc{._field_Elem=_133413_elemType}), 22)});
	(*((*(_133330_d))))._field_Lvalue=false;
	(*((*(_133330_d))))._field_Mutable=((*((*(_133330_d))))._field_Mutable || (!(_1c0dd9774_Mutable(_133413_elemType.ptr()))));
}



inline void _1c0db67a6_slicingStr(_1c0da8721_Eval* _self_, jule::Ptr<_1c0da69e9_Data>* _134830_d, jule::Ptr<_1c0da69e9_Data>* _134841_l, jule::Ptr<_1c0da69e9_Data>* _134852_r) {
	(*((*(_134830_d))))._field_Lvalue=false;
	(*((*(_134830_d))))._field_Mutable=true;
	if ((!(_1c0da7401_IsConst((*(_134830_d)).ptr())))) {
		return;;
	};
	if ((((*(_134841_l)) == nullptr) || ((*(_134852_r)) == nullptr))) {
		(*((*(_134830_d))))._field_Constant=nullptr;
		(*((*(_134830_d))))._field_untyped=false;
		return;;
	};
	if ((_1c0da7401_IsConst((*(_134841_l)).ptr()) && _1c0da7401_IsConst((*(_134852_r)).ptr()))) {
		jule::I64 _136213_left = _2021e8821_AsI64((*((*(_134841_l))))._field_Constant.ptr());;
		if ((_136213_left < 0LL)) {
			return;;
		};
		jule::Str _136713_s = _2021e8304_ReadStr((*((*(_134830_d))))._field_Constant);;
		jule::I64 _136817_right = static_cast<jule::I64>(0LL);;
		if (((*(_134852_r)) == nullptr)) {
			_136817_right=static_cast<jule::I64>(_136713_s.len());
		} else {
			_136817_right=_2021e8821_AsI64((*((*(_134852_r))))._field_Constant);
		};
		if ((_136213_left > _136817_right)) {
			return;;
		};
		_2021e9910_SetStr((*((*(_134830_d))))._field_Constant, _136713_s.slice(_136213_left, _136817_right));
		(*((*(_134830_d))))._field_Decl=true;
	} else {
		(*((*(_134830_d))))._field_Constant=nullptr;
		(*((*(_134830_d))))._field_untyped=false;
	};
}



inline void _1c0db6c7e_checkSlicing(_1c0da8721_Eval* _self_, jule::Ptr<_1c0da69e9_Data>* _138636_d, jule::Ptr<_1c0da69e9_Data>* _138647_l, jule::Ptr<_1c0da69e9_Data>* _138658_r, jule::Ptr<_1c0c6b392_SlicingExpr>* _138669_s) {
	{
		
		if ((_1c0ddb314_Arr((*((*(_138636_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c4518b19:;
			{
				_1c0db6388_slicingArr(_self_, _138636_d);
				return;;
			}
		}
		else if ((_1c0ddb59a_Slc((*((*(_138636_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c4518bb3:;
			{
				return;;
			}
		}
		else if ((_1c0dda544_Prim((*((*(_138636_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c4518c29:;
			{
				jule::Ptr<_1c0de09bc_Prim> _139413_prim = _1c0dda544_Prim((*((*(_138636_d))))._field_Kind);;
				{
					
					if (_1c0de3e54_IsStr(_139413_prim.ptr())) {
						_case_begin_1c451b4bd:;
						{
							_1c0db67a6_slicingStr(_self_, _138636_d, _138647_l, _138658_r);
							return;;
						}
					}
					_match_end_1c451b424:;
				};
			}
		}
		_match_end_1c45189e8:;
	};
	_1c0da8c71_pushErr(_self_, (*((*(_138669_s))))._field_Token, jule::Str::lit("type @ is not support slicing", 29), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*((*(_138636_d))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Ptr<_1c0da69e9_Data> _1c0db70c0_evalSlicing(jule::Ptr<_1c0da8721_Eval> _self_, jule::Ptr<_1c0c6b392_SlicingExpr> _140535_s) {
	jule::Ptr<_1c0da69e9_Data> _140613_d = _1c0dc6981_evalExpr(_self_, (*(_140535_s))._field_Expr);;
	if ((_140613_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c0da69e9_Data> _141113_l;
	jule::Ptr<_1c0da69e9_Data> _141120_r;
	({
		__jule_tuple_x_1c0da69e9_Data__jule_tuple_x_1c0da69e9_Data __jule_assign_result = _1c0db60d0_evalSlicingExprs(_self_, &(_140535_s));
		_141113_l = __jule_assign_result.__jule_result_arg0;
		_141120_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_141113_l == nullptr)) {
		return _140613_d;;
	};
	(*(_140613_d))._field_Decl=false;
	_1c0db6c7e_checkSlicing(_self_, &(_140613_d), &(_141113_l), &(_141120_r), &(_140535_s));
	if (_1c0da7401_IsConst(_140613_d.ptr())) {
		(*(_140613_d))._field_Decl=false;
		(*(_140613_d))._field_Model=jule::Any((*(_140613_d))._field_Constant, &__jule_any_type19);
	} else if ((*(_140613_d))._field_Decl) {
		(*(_140613_d))._field_Decl=false;
	} else {
		jule::Ptr<_1c0c8b67b_SlicingExprModel> _142917_model = jule::new_ptr<_1c0c8b67b_SlicingExprModel>(_1c0c8b67b_SlicingExprModel{._field_Token=(*_140535_s.alloc)._field_Token, ._field_Expr=(*(_140613_d))._field_Model, ._field_Left=(*(_141113_l))._field_Model, });;
		if ((_141120_r != nullptr)) {
			(*(_142917_model))._field_Right=(*_141120_r.alloc)._field_Model;
		};
		(*(_140613_d))._field_Model=jule::Any(_142917_model, &__jule_any_type92);
	};
	return _140613_d;;
}



inline void _1c0db74dd_castPtr(_1c0da8721_Eval* _self_, jule::Ptr<_1c0dd7de3_TypeKind> _144230_t, jule::Ptr<_1c0da69e9_Data> _144248_d, jule::Ptr<_1c0c49480_Token> _144258_errorToken) {
	(*(_144248_d))._field_Constant=nullptr;
	(*_144248_d.alloc)._field_untyped=false;
	jule::Ptr<_1c0de44e8_Sptr> _14459_sptr = _1c0dda7ca_Sptr((*_144248_d.alloc)._field_Kind.ptr());;
	if ((_14459_sptr != nullptr)) {
		if ((!(_1c0dd85ec_Equal((*(_1c0ddaa61_Ptr(_144230_t.ptr())))._field_Elem, (*_14459_sptr.alloc)._field_Elem)))) {
			_1c0da8c71_pushErr(_self_, _144258_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*_144248_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1c0dd82ab_Str(_144230_t), &__jule_any_type4)}));
		};
		return;;
	};
	if ((!(_1c0da9766_isUnsafe(_self_)))) {
		_1c0da8c71_pushErr(_self_, _144258_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c0de09bc_Prim> _14589_prim = _1c0dda544_Prim((*_144248_d.alloc)._field_Kind);;
	if (((_1c0ddaa61_Ptr((*_144248_d.alloc)._field_Kind) == nullptr) && ((_14589_prim == nullptr) || (!(_2021e5510_IsInt(_1c0de0d0d_Str(_14589_prim.ptr()))))))) {
		_1c0da8c71_pushErr(_self_, _144258_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*_144248_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1c0dd82ab_Str(_144230_t), &__jule_any_type4)}));
	};
}



inline void _1c0db790b_castStruct(_1c0da8721_Eval* _self_, jule::Ptr<_1c0dd7de3_TypeKind> _146433_t, jule::Ptr<_1c0da69e9_Data> _146451_d, jule::Ptr<_1c0c49480_Token> _146461_errorToken) {
	(*(_146451_d))._field_Constant=nullptr;
	(*_146451_d.alloc)._field_untyped=false;
	jule::Ptr<_1c0ca8a72_Trait> _146713_tr = _1c0ddbd4d_Trait((*_146451_d.alloc)._field_Kind.ptr());;
	if ((_146713_tr == nullptr)) {
		_1c0da8c71_pushErr(_self_, _146461_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*_146451_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1c0dd82ab_Str(_146433_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1c0c83552_StructIns> _147313_s = _1c0ddbab7_Struct(_146433_t);;
	_1c452c413_pushReference(_self_, &(_147313_s));
	if ((!(_1c0c81e13_IsImplements((*(_147313_s))._field_Decl.ptr(), _146713_tr)))) {
		_1c0da8c71_pushErr(_self_, _146461_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*_146451_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1c0dd82ab_Str(_146433_t), &__jule_any_type4)}));
	};
}



inline void _1c0db7d29_castRef(_1c0da8721_Eval* _self_, jule::Ptr<_1c0dd7de3_TypeKind> _148130_t, jule::Ptr<_1c0da69e9_Data> _148148_d, jule::Ptr<_1c0c49480_Token> _148158_errorToken) {
	(*(_148148_d))._field_Constant=nullptr;
	(*_148148_d.alloc)._field_untyped=false;
	jule::Ptr<_1c0de44e8_Sptr> _148413_sptr = _1c0dda7ca_Sptr(_148130_t.ptr());;
	jule::Ptr<_1c0de7cb0_Ptr> _148613_ptr = _1c0ddaa61_Ptr((*_148148_d.alloc)._field_Kind.ptr());;
	if (((_148613_ptr != nullptr) && _1c0dd85ec_Equal((*(_148413_sptr))._field_Elem, (*_148613_ptr.alloc)._field_Elem))) {
		if ((!(_1c0da9766_isUnsafe(_self_)))) {
			_1c0da8c71_pushErr(_self_, _148158_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1c0ddbab7_Struct((*_148413_sptr.alloc)._field_Elem) != nullptr)) {
		_1c0db790b_castStruct(_self_, (*_148413_sptr.alloc)._field_Elem, _148148_d, _148158_errorToken);
		return;;
	};
	_1c0da8c71_pushErr(_self_, _148158_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*_148148_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1c0dd82ab_Str(_148130_t), &__jule_any_type4)}));
}



inline void _1c0db8247_castSlc(_1c0da8721_Eval* _self_, jule::Ptr<_1c0dd7de3_TypeKind> _150430_t, jule::Ptr<_1c0da69e9_Data> _150448_d, jule::Ptr<_1c0c49480_Token> _150458_errorToken) {
	jule::Ptr<_2021e617b_Const> _15059_c = (*(_150448_d))._field_Constant;;
	(*_150448_d.alloc)._field_Constant=nullptr;
	(*_150448_d.alloc)._field_untyped=false;
	if ((_1c0ddace7_Enum((*_150448_d.alloc)._field_Kind.ptr()) != nullptr)) {
		if (((_1c0dda544_Prim((*((*(_1c0ddace7_Enum((*_150448_d.alloc)._field_Kind)))._field_Kind))._field_Kind.ptr()) == nullptr) || (!(_1c0de3e54_IsStr(_1c0dda544_Prim((*(*(_1c0ddace7_Enum((*_150448_d.alloc)._field_Kind)))._field_Kind.alloc)._field_Kind).ptr()))))) {
			_1c0da8c71_pushErr(_self_, _150458_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*_150448_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1c0dd82ab_Str(_150430_t.ptr()), &__jule_any_type4)}));
			return;;
		};
	} else if (((_1c0dda544_Prim((*_150448_d.alloc)._field_Kind.ptr()) == nullptr) || (!(_1c0de3e54_IsStr(_1c0dda544_Prim((*_150448_d.alloc)._field_Kind).ptr()))))) {
		_1c0da8c71_pushErr(_self_, _150458_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*_150448_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1c0dd82ab_Str(_150430_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	_150430_t=(*(_1c0ddb59a_Slc(_150430_t.ptr())))._field_Elem;
	jule::Ptr<_1c0de09bc_Prim> _15209_prim = _1c0dda544_Prim(_150430_t);;
	if (((_15209_prim == nullptr) || ((!(_1c0de23b4_IsU8(_15209_prim.ptr()))) && (!(_1c0de1d97_IsI32(_15209_prim.ptr())))))) {
		_1c0da8c71_pushErr(_self_, _150458_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*_150448_d.alloc)._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1c0dd82ab_Str(_150430_t), &__jule_any_type4)}));
		return;;
	};
	if ((_15059_c != nullptr)) {
		{
			
			if (_1c0de23b4_IsU8(_15209_prim.ptr())) {
				_case_begin_1c45411b3:;
				{
					jule::Str _153017_s = _2021e8304_ReadStr(_15059_c);;
					jule::Ptr<_1c0c89d0b_SliceExprModel> _153121_model = jule::new_ptr<_1c0c89d0b_SliceExprModel>(_1c0c89d0b_SliceExprModel{._field_ElemKind=_150430_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _153017_s.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_153017_s);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c4542bcb:;
						if (it != expr_end) {
							jule::U8 *_153524_b = it;
							{
								jule::Ptr<_2021e617b_Const> _153625_bc = static__2021e6885_NewU64(static_cast<jule::U64>((*(_153524_b))));;
								(*(_153625_bc))._field_Kind=(*(_15209_prim))._field_Kind;
								(*(_153121_model))._field_Elems=jule::append((*_153121_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({jule::Any(_153625_bc, &__jule_any_type19)}));
							}
							_iter_next_1c4542bcb:;
							++it;
							goto _iter_begin_1c4542bcb;
						}
						_iter_end_1c4542bcb:;
					};
					(*_150448_d.alloc)._field_Model=jule::Any(_153121_model, &__jule_any_type76);
					(*_150448_d.alloc)._field_Decl=true;
				}
			}
			else if (_1c0de1d97_IsI32(_15209_prim.ptr())) {
				_case_begin_1c454125c:;
				{
					jule::Slice<jule::I32> _154317_runes = static_cast<jule::Slice<jule::I32>>(_2021e8304_ReadStr(_15059_c));;
					jule::Ptr<_1c0c89d0b_SliceExprModel> _154421_model = jule::new_ptr<_1c0c89d0b_SliceExprModel>(_1c0c89d0b_SliceExprModel{._field_ElemKind=_150430_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _154317_runes.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_154317_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c45460db:;
						if (it != expr_end) {
							jule::I32 *_154824_r = it;
							{
								jule::Ptr<_2021e617b_Const> _154925_rc = static__2021e65bb_NewI64(static_cast<jule::I64>((*(_154824_r))));;
								(*(_154925_rc))._field_Kind=(*(_15209_prim))._field_Kind;
								(*(_154421_model))._field_Elems=jule::append((*_154421_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({jule::Any(_154925_rc, &__jule_any_type19)}));
							}
							_iter_next_1c45460db:;
							++it;
							goto _iter_begin_1c45460db;
						}
						_iter_end_1c45460db:;
					};
					(*_150448_d.alloc)._field_Model=jule::Any(_154421_model, &__jule_any_type76);
					(*_150448_d.alloc)._field_Decl=true;
				}
			}
			_match_end_1c45410d6:;
		};
	};
}



inline void _1c0db85aa_castStr(_1c0da8721_Eval* _self_, jule::Ptr<_1c0da69e9_Data> _155930_d, jule::Ptr<_1c0c49480_Token> _155940_errorToken) {
	if ((_1c0ddace7_Enum((*(_155930_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1c0cab27d_Enum> _156117_e = _1c0ddace7_Enum((*_155930_d.alloc)._field_Kind);;
		if (((_1c0dda544_Prim((*((*(_156117_e))._field_Kind))._field_Kind.ptr()) != nullptr) && _1c0de3e54_IsStr(_1c0dda544_Prim((*(*_156117_e.alloc)._field_Kind.alloc)._field_Kind).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_2021e617b_Const> _15679_c = (*_155930_d.alloc)._field_Constant;;
	(*_155930_d.alloc)._field_Constant=nullptr;
	(*_155930_d.alloc)._field_untyped=false;
	if ((_1c0dda544_Prim((*_155930_d.alloc)._field_Kind) != nullptr)) {
		jule::Ptr<_1c0de09bc_Prim> _157113_prim = _1c0dda544_Prim((*_155930_d.alloc)._field_Kind);;
		if (((!(_1c0de23b4_IsU8(_157113_prim.ptr()))) && (!(_1c0de1d97_IsI32(_157113_prim))))) {
			_1c0da8c71_pushErr(_self_, _155940_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1c0dd82ab_Str((*_155930_d.alloc)._field_Kind), &__jule_any_type4)}));
			return;;
		};
		if ((_15679_c != nullptr)) {
			{
				
				if (_1c0de23b4_IsU8(_157113_prim)) {
					_case_begin_1c454d92e:;
					{
						(*_155930_d.alloc)._field_Constant=static__2021e6e18_NewStr(jule::Str::from_byte(static_cast<jule::U8>(_2021e8aa7_AsU64(_15679_c))));
						(*_155930_d.alloc)._field_Model=jule::Any((*_155930_d.alloc)._field_Constant, &__jule_any_type19);
						(*_155930_d.alloc)._field_Decl=true;
					}
				}
				else if (_1c0de1d97_IsI32(_157113_prim)) {
					_case_begin_1c454d9c8:;
					{
						(*_155930_d.alloc)._field_Constant=static__2021e6e18_NewStr(jule::Str::from_rune(static_cast<jule::I32>(_2021e8821_AsI64(_15679_c))));
						(*_155930_d.alloc)._field_Model=jule::Any((*_155930_d.alloc)._field_Constant, &__jule_any_type19);
						(*_155930_d.alloc)._field_Decl=true;
					}
				}
				_match_end_1c454d830:;
			};
		};
		return;;
	};
	jule::Ptr<_1c0de4ebb_Slc> _159213_s = _1c0ddb59a_Slc((*_155930_d.alloc)._field_Kind);;
	if ((_159213_s == nullptr)) {
		_1c0da8c71_pushErr(_self_, _155940_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1c0dd82ab_Str((*_155930_d.alloc)._field_Kind), &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1c0dd7de3_TypeKind> _159813_t = (*(_159213_s))._field_Elem;;
	jule::Ptr<_1c0de09bc_Prim> _15999_prim = _1c0dda544_Prim(_159813_t.ptr());;
	if (((_15999_prim == nullptr) || ((!(_1c0de23b4_IsU8(_15999_prim.ptr()))) && (!(_1c0de1d97_IsI32(_15999_prim.ptr())))))) {
		_1c0da8c71_pushErr(_self_, _155940_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1c0dd82ab_Str((*_155930_d.alloc)._field_Kind), &__jule_any_type4)}));
		return;;
	};
}



inline void _1c0db89c8_castInt(_1c0da8721_Eval* _self_, jule::Ptr<_1c0dd7de3_TypeKind> _160630_t, jule::Ptr<_1c0da69e9_Data> _160648_d, jule::Ptr<_1c0c49480_Token> _160658_errorToken) {
	if (_1c0da7401_IsConst(_160648_d.ptr())) {
		jule::Ptr<_1c0de09bc_Prim> _160813_prim = _1c0dda544_Prim(_160630_t.ptr());;
		{
			
			if (_2021e4e38_IsSigInt((*(_160813_prim))._field_Kind)) {
				_case_begin_1c4556ea9:;
				{
					_2021e90e6_SetI64((*_160648_d.alloc)._field_Constant.ptr(), _2021e8821_AsI64((*_160648_d.alloc)._field_Constant));
				}
			}
			else if (_2021e5246_IsUnsigInt((*(_160813_prim))._field_Kind)) {
				_case_begin_1c4557053:;
				{
					_2021e939e_SetU64((*_160648_d.alloc)._field_Constant.ptr(), _2021e8aa7_AsU64((*_160648_d.alloc)._field_Constant));
				}
			}
			_match_end_1c4556e32:;
		};
	} else {
		(*(_160648_d))._field_Constant=nullptr;
		(*_160648_d.alloc)._field_untyped=false;
	};
	if ((_1c0ddace7_Enum((*(_160648_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1c0cab27d_Enum> _162113_e = _1c0ddace7_Enum((*_160648_d.alloc)._field_Kind);;
		if (_2021e5ad7_IsNum(_1c0dd82ab_Str((*((*(_162113_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1c0dda7ca_Sptr((*_160648_d.alloc)._field_Kind) != nullptr)) {
		jule::Ptr<_1c0de09bc_Prim> _162813_prim = _1c0dda544_Prim(_160630_t.ptr());;
		if ((!(_1c0de3937_IsUintptr(_162813_prim.ptr())))) {
			_1c0da8c71_pushErr(_self_, _160658_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*_160648_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1c0dd82ab_Str(_160630_t), &__jule_any_type4)}));
		};
		return;;
	};
	if ((_1c0ddaa61_Ptr((*_160648_d.alloc)._field_Kind) != nullptr)) {
		jule::Ptr<_1c0de09bc_Prim> _163513_prim = _1c0dda544_Prim(_160630_t);;
		if (_1c0de3937_IsUintptr(_163513_prim.ptr())) {
		} else if ((!(_1c0da9766_isUnsafe(_self_)))) {
			_1c0da8c71_pushErr(_self_, _160658_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1c0de09bc_Prim> _16449_prim = _1c0dda544_Prim((*_160648_d.alloc)._field_Kind);;
	if (((_16449_prim != nullptr) && _2021e5ad7_IsNum(_1c0de0d0d_Str(_16449_prim)))) {
		return;;
	};
	_1c0da8c71_pushErr(_self_, _160658_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*_160648_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1c0dd82ab_Str(_160630_t), &__jule_any_type4)}));
}



inline void _1c0db8de6_castNum(_1c0da8721_Eval* _self_, jule::Ptr<_1c0dd7de3_TypeKind> _165230_t, jule::Ptr<_1c0da69e9_Data> _165248_d, jule::Ptr<_1c0c49480_Token> _165258_errorToken) {
	if (_1c0da7401_IsConst(_165248_d.ptr())) {
		jule::Ptr<_1c0de09bc_Prim> _165413_prim = _1c0dda544_Prim(_165230_t.ptr());;
		{
			
			if (_2021e5851_IsFloat((*(_165413_prim))._field_Kind)) {
				_case_begin_1c45632c3:;
				{
					_2021e9bb8_SetF64((*_165248_d.alloc)._field_Constant.ptr(), _2021e8d3d_AsF64((*_165248_d.alloc)._field_Constant));
				}
			}
			else if (_2021e4e38_IsSigInt((*(_165413_prim))._field_Kind)) {
				_case_begin_1c456336c:;
				{
					_2021e90e6_SetI64((*_165248_d.alloc)._field_Constant.ptr(), _2021e8821_AsI64((*_165248_d.alloc)._field_Constant));
				}
			}
			else if (_2021e5246_IsUnsigInt((*(_165413_prim))._field_Kind)) {
				_case_begin_1c45633d3:;
				{
					_2021e939e_SetU64((*_165248_d.alloc)._field_Constant.ptr(), _2021e8aa7_AsU64((*_165248_d.alloc)._field_Constant));
				}
			}
			_match_end_1c4563207:;
		};
	} else {
		(*(_165248_d))._field_Constant=nullptr;
		(*_165248_d.alloc)._field_untyped=false;
	};
	if ((_1c0ddace7_Enum((*(_165248_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1c0cab27d_Enum> _166913_e = _1c0ddace7_Enum((*_165248_d.alloc)._field_Kind);;
		if (_2021e5ad7_IsNum(_1c0dd82ab_Str((*((*(_166913_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1c0de09bc_Prim> _16759_prim = _1c0dda544_Prim((*_165248_d.alloc)._field_Kind);;
	if (((_16759_prim != nullptr) && _2021e5ad7_IsNum(_1c0de0d0d_Str(_16759_prim)))) {
		return;;
	};
	_1c0da8c71_pushErr(_self_, _165258_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*_165248_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1c0dd82ab_Str(_165230_t.ptr()), &__jule_any_type4)}));
}



inline void _1c0db9314_castPrim(_1c0da8721_Eval* _self_, jule::Ptr<_1c0dd7de3_TypeKind> _168331_t, jule::Ptr<_1c0da69e9_Data> _168349_d, jule::Ptr<_1c0c49480_Token> _168359_errorToken) {
	jule::Ptr<_1c0de09bc_Prim> _16849_prim = _1c0dda544_Prim(_168331_t.ptr());;
	{
		
		if (_1c0de41da_IsAny(_16849_prim.ptr())) {
			_case_begin_1c456b782:;
			{
				(*(_168349_d))._field_Constant=nullptr;
				(*_168349_d.alloc)._field_untyped=false;
			}
		}
		else if (_1c0de3e54_IsStr(_16849_prim.ptr())) {
			_case_begin_1c456b441:;
			{
				_1c0db85aa_castStr(_self_, _168349_d, _168359_errorToken);
			}
		}
		else if (_2021e5510_IsInt(_1c0de0d0d_Str(_16849_prim.ptr()))) {
			_case_begin_1c456b4a7:;
			{
				_1c0db89c8_castInt(_self_, _168331_t, _168349_d, _168359_errorToken);
			}
		}
		else if (_2021e5ad7_IsNum(_1c0de0d0d_Str(_16849_prim.ptr()))) {
			_case_begin_1c456b51d:;
			{
				_1c0db8de6_castNum(_self_, _168331_t, _168349_d, _168359_errorToken);
			}
		}
		else {
			_case_begin_1c456b3ca:;
			{
				_1c0da8c71_pushErr(_self_, _168359_errorToken, jule::Str::lit("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str(_168331_t), &__jule_any_type4)}));
			}
		}
		_match_end_1c456b375:;
	};
}



inline void _1c0db9677_castConstant(_1c0da8721_Eval* _self_, jule::Ptr<_1c0dd7de3_TypeKind>* _170136_t, jule::Ptr<_1c0da69e9_Data>* _170155_d) {
	if ((((*(_170155_d)) == nullptr) || (!(_1c0da7401_IsConst((*(_170155_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1c0de09bc_Prim> _17059_prim = _1c0dda544_Prim((*(_170136_t)).ptr());;
	_1c0dd33a5_castConstByType(&((*(_17059_prim))._field_Kind), _170155_d);
	(*((*(_170155_d))))._field_Model=jule::Any((*((*(_170155_d))))._field_Constant, &__jule_any_type19);
}



inline void _1c0db9a95_castTypeEnum(_1c0da8721_Eval* _self_, jule::Ptr<_1c0dd7de3_TypeKind>* _171036_t, jule::Ptr<_1c0da69e9_Data>* _171055_d, jule::Ptr<_1c0c49480_Token>* _171070_errorToken) {
	jule::I64 _17119_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1c0d3712d_checkTypeCompatibility((*(_self_))._field_s, &((*((*(_171055_d))))._field_Kind), _171036_t, _171070_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _17119_n);;
		_1c0da8c71_pushErr(_self_, (*(_171070_errorToken)), jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*((*(_171055_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1c0dd82ab_Str((*(_171036_t)).ptr()), &__jule_any_type4)}));
	};
	(*((*(_171055_d))))._field_Constant=nullptr;
	(*((*(_171055_d))))._field_untyped=false;
}



inline void _1c0db9eb3_castTypeEnumT(_1c0da8721_Eval* _self_, jule::Ptr<_1c0dd7de3_TypeKind>* _172037_t, jule::Ptr<_1c0da69e9_Data>* _172056_d, jule::Ptr<_1c0c49480_Token>* _172071_errorToken) {
	jule::I64 _17219_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1c0d3712d_checkTypeCompatibility((*(_self_))._field_s, _172037_t, &((*((*(_172056_d))))._field_Kind), _172071_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _17219_n);;
		_1c0da8c71_pushErr(_self_, (*(_172071_errorToken)), jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*((*(_172056_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1c0dd82ab_Str((*(_172037_t)).ptr()), &__jule_any_type4)}));
	};
	(*((*(_172056_d))))._field_Constant=nullptr;
	(*((*(_172056_d))))._field_untyped=false;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dba469_evalCastByTypeNData(_1c0da8721_Eval* _self_, jule::Ptr<_1c0dd7de3_TypeKind> _173042_t, jule::Ptr<_1c0da69e9_Data> _173060_d, jule::Ptr<_1c0c49480_Token> _173074_errorToken) {
	if (((_173060_d != nullptr) && (*_173060_d.alloc)._field_Decl)) {
		_1c0da8c71_pushErr(_self_, _173074_errorToken, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1c0da6dd4_IsNil(_173060_d)) {
			_case_begin_1c4579031:;
			{
				if ((!(_1c0dd9c91_NilCompatible(_173042_t.ptr())))) {
					_1c0da8c71_pushErr(_self_, _173074_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("<nil>", 5), &__jule_any_type4),jule::Any(_1c0dd82ab_Str(_173042_t), &__jule_any_type4)}));
				};
				(*_173060_d.alloc)._field_Constant=nullptr;
				(*_173060_d.alloc)._field_untyped=false;
			}
		}
		else if (((_1c0dda544_Prim((*_173060_d.alloc)._field_Kind.ptr()) != nullptr) && _1c0de41da_IsAny(_1c0dda544_Prim((*_173060_d.alloc)._field_Kind).ptr()))) {
			_case_begin_1c4579097:;
			{
				if ((_1c0ddace7_Enum(_173042_t.ptr()) != nullptr)) {
					_1c0da8c71_pushErr(_self_, _173074_errorToken, jule::Str::lit("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
					_1c0da90d4_pushSuggestion(_self_, jule::Str::lit("try cast to type of enum fields instead of enum", 47), jule::Slice<jule::Any>());
				} else if ((_1c0ddb07d_TypeEnum(_173042_t.ptr()) != nullptr)) {
					_1c0da8c71_pushErr(_self_, _173074_errorToken, jule::Str::lit("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
				};
				(*_173060_d.alloc)._field_Constant=nullptr;
				(*_173060_d.alloc)._field_untyped=false;
			}
		}
		else if ((_1c0ddb07d_TypeEnum((*_173060_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c457910d:;
			{
				_1c0db9a95_castTypeEnum(_self_, &(_173042_t), &(_173060_d), &(_173074_errorToken));
			}
		}
		else if ((_1c0ddb07d_TypeEnum(_173042_t.ptr()) != nullptr)) {
			_case_begin_1c4579174:;
			{
				_1c0db9eb3_castTypeEnumT(_self_, &(_173042_t), &(_173060_d), &(_173074_errorToken));
			}
		}
		else if ((_1c0ddaa61_Ptr(_173042_t.ptr()) != nullptr)) {
			_case_begin_1c45791da:;
			{
				_1c0db74dd_castPtr(_self_, _173042_t, _173060_d, _173074_errorToken);
			}
		}
		else if ((_1c0dda7ca_Sptr(_173042_t.ptr()) != nullptr)) {
			_case_begin_1c4579251:;
			{
				_1c0db7d29_castRef(_self_, _173042_t, _173060_d, _173074_errorToken);
			}
		}
		else if ((_1c0ddb59a_Slc(_173042_t.ptr()) != nullptr)) {
			_case_begin_1c4579e00:;
			{
				_1c0db8247_castSlc(_self_, _173042_t, _173060_d, _173074_errorToken);
			}
		}
		else if ((_1c0ddbab7_Struct(_173042_t.ptr()) != nullptr)) {
			_case_begin_1c4579e66:;
			{
				_1c0db790b_castStruct(_self_, _173042_t, _173060_d, _173074_errorToken);
			}
		}
		else if ((_1c0dda544_Prim(_173042_t.ptr()) != nullptr)) {
			_case_begin_1c4579ecc:;
			{
				_1c0db9314_castPrim(_self_, _173042_t, _173060_d, _173074_errorToken);
				_1c0db9677_castConstant(_self_, &(_173042_t), &(_173060_d));
			}
		}
		else {
			_case_begin_1c4578eba:;
			{
				_1c0da8c71_pushErr(_self_, _173074_errorToken, jule::Str::lit("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str(_173042_t.ptr()), &__jule_any_type4)}));
				_173060_d=nullptr;
			}
		}
		_match_end_1c4578e32:;
	};
	if ((_173060_d == nullptr)) {
		return nullptr;;
	};
	(*_173060_d.alloc)._field_Mutable=((*_173060_d.alloc)._field_Mutable || (!(_1c0dd9774_Mutable((*_173060_d.alloc)._field_Kind.ptr()))));
	if (((!((*_173060_d.alloc)._field_Decl)) && ((_1c0ddace7_Enum((*_173060_d.alloc)._field_Kind) == nullptr) || (!(_1c0dd85ec_Equal((*((*(_1c0ddace7_Enum((*_173060_d.alloc)._field_Kind)))._field_Kind))._field_Kind, _173042_t)))))) {
		_1c0dd2690_applyCastKind(&(_173060_d), &(_173042_t), &(_173074_errorToken));
		(*((*_173060_d.alloc)._field_Model.cast_ptr<_1c0c89080_CastingExprModel>(&__jule_any_type93)))._field_Token=_173074_errorToken;
	} else {
		(*_173060_d.alloc)._field_Kind=_173042_t;
	};
	(*_173060_d.alloc)._field_Decl=false;
	(*_173060_d.alloc)._field_Lvalue=false;
	(*_173060_d.alloc)._field_untyped=false;
	if (_1c0da7401_IsConst(_173060_d)) {
		(*((*_173060_d.alloc)._field_Constant))._field_Kind=(*(_1c0dda544_Prim(_173042_t.ptr())))._field_Kind;
	};
	return _173060_d;;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dba920_evalCastT(jule::Ptr<_1c0da8721_Eval> _self_, jule::Ptr<_1c0dd7de3_TypeKind>* _180334_t, jule::Ptr<_1c0c63c6e_Expr>* _180353_e, jule::Ptr<_1c0c49480_Token>* _180368_et) {
	jule::Ptr<_1c0dd7de3_TypeKind> _180413_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_180413_prefix;
	});;
	if ((_1c0ddb59a_Slc((*(_180334_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_180353_e))))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type94) {
				_case_begin_1c458a1b8:;
				{
					(*_self_.alloc)._field_prefix=(*(_180334_t));
				}
			}
			_match_end_1c458a152:;
		};
	};
	jule::Ptr<_1c0da69e9_Data> _181313_d = _1c0dc6981_evalExpr(_self_, (*(_180353_e)));;
	if (((_181313_d == nullptr) || ((*_self_.alloc)._field_prefix != nullptr))) {
		return _181313_d;;
	};
	return _1c0dba469_evalCastByTypeNData(_self_, (*(_180334_t)), _181313_d, (*(_180368_et)));;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dbac61_evalCast(jule::Ptr<_1c0da8721_Eval> _self_, jule::Ptr<_1c0c665ce_CastExpr> _182032_c) {
	jule::Ptr<_1c0de00b5_TypeSymbol> _182113_t = _1c0c9d1e8_buildType((*(_182032_c))._field_Kind);;
	jule::Bool _18229_ok = _1c0d34834_checkType((*(_self_))._field_s, &(_182113_t), (*_self_.alloc)._field_lookup);;
	if ((!(_18229_ok))) {
		return nullptr;;
	};
	return _1c0dba920_evalCastT(_self_, &((*(_182113_t))._field_Kind), &((*_182032_c.alloc)._field_Expr), &((*((*_182032_c.alloc)._field_Kind))._field_Token));;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dbb0a2_evalNsSelection(_1c0da8721_Eval* _self_, jule::Ptr<_1c0c669a8_NsSelectionExpr> _182934_s) {
	jule::Str _18309_path = _1c0e04937_buildLinkPathByTokens(&((*(_182934_s))._field_Ns));;
	jule::Ptr<_1c0d09782_ImportInfo> _183113_imp = _1c0e079d4_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c0e05cbd_SelectPackage((*(_self_))._field_lookup, jule::__new_closure<jule::Bool,jule::Ptr<_1c0d09782_ImportInfo>>((void*)__jule_anon_1c572da75, jule::Ptr<__jule_anon_1c572da75_ctx>::make(__jule_anon_1c572da75_ctx{._182934_s=_182934_s,._18309_path=_18309_path}).as<jule::Uintptr>(), __jule_anon_1c572da75_ctx_handler));;
	if ((_183113_imp == nullptr)) {
		_1c0da8c71_pushErr(_self_, (*_182934_s.alloc)._field_Ns[0LL], jule::Str::lit("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_18309_path, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Trait<_1c0e079d4_Lookup> _184313_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1c0e079d4_Lookup>(_183113_imp, 1);
	;
	_1c0da94d0_disallowBuiltin(_self_);
	jule::Any _184813_def = _1c0dab9dd_getDef(_self_, &((*((*_182934_s.alloc)._field_Ident))._field_Kind), false);;
	_1c0da92d2_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_184313_lookup;
	jule::Ptr<_1c0da69e9_Data> _185113_d = _1c0db0b9b_evalDef(_self_, &(_184813_def), (*_182934_s.alloc)._field_Ident);;
	return _185113_d;;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dbb558_evalStructLitExplicit(jule::Ptr<_1c0da8721_Eval> _self_, jule::Ptr<_1c0c83552_StructIns> _185545_s, jule::Slice<jule::Ptr<_1c0c63c6e_Expr>> _185613_exprs, jule::Ptr<_1c0c49480_Token> _185633_errorToken) {
	jule::Bool _18579_ok = _1c0d301e2_checkGenericQuantity((*(_self_))._field_s.ptr(), (*((*(_185545_s))._field_Decl))._field_Generics.len(), (*_185545_s.alloc)._field_Generics.len(), _185633_errorToken);;
	if ((!(_18579_ok))) {
		return nullptr;;
	};
	if ((((*_self_.alloc)._field_field != nullptr) && ((*((*(*_self_.alloc)._field_field.alloc)._field_Decl))._field_Owner == (*_185545_s.alloc)._field_Decl))) {
		_1c0da8c71_pushErr(_self_, _185633_errorToken, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(*_185545_s.alloc)._field_Decl.alloc)._field_Ident, &__jule_any_type4)}));
	};
	_1c452c413_pushReference(_self_, &(_185545_s));
	_1c0dadd97_checkDeprecated(_self_, &((*(*_185545_s.alloc)._field_Decl.alloc)._field_Directives), _185633_errorToken);
	_1c0d99aca_structLitChecker _187013_slc = _1c0d99aca_structLitChecker{._field_e=_self_, ._field_errorToken=_185633_errorToken, ._field_s=_185545_s, };;
	_1c0d9b318_check(&_187013_slc, &(_185613_exprs));
	jule::Ptr<_1c0da69e9_Data> _187713_d = jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(_185545_s, 0)}), ._field_Mutable=(!((*_self_.alloc)._field_immutable)), ._field_Model=jule::Any(jule::new_ptr<_1c0c88700_StructLitExprModel>(_1c0c88700_StructLitExprModel{._field_Strct=_185545_s, ._field_Args=_187013_slc._field_args}), &__jule_any_type95), });;
	if ((*(*_185545_s.alloc)._field_Decl.alloc)._field_Binded) {
		(*((*(_187713_d))._field_Kind))._field_BindIdent=(*(*_185545_s.alloc)._field_Decl.alloc)._field_Ident;
	};
	return _187713_d;;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dbb899_evalStructLit(jule::Ptr<_1c0da8721_Eval> _self_, jule::Ptr<_1c0c68cb8_StructLit> _189337_lit) {
	jule::Ptr<_1c0de00b5_TypeSymbol> _189413_t = _1c0c9d1e8_buildType((*(_189337_lit))._field_Kind);;
	jule::Bool _18959_ok = _1c0d34834_checkType((*(_self_))._field_s, &(_189413_t), (*_self_.alloc)._field_lookup);;
	if ((!(_18959_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1c0c83552_StructIns> _190013_s = _1c0ddbab7_Struct((*(_189413_t))._field_Kind.ptr());;
	if ((_190013_s == nullptr)) {
		if ((_1c0dda7ca_Sptr((*_189413_t.alloc)._field_Kind) != nullptr)) {
			_190013_s=_1c0ddbab7_Struct((*(_1c0dda7ca_Sptr((*_189413_t.alloc)._field_Kind)))._field_Elem.ptr());
			if ((_190013_s != nullptr)) {
				goto _julec_label_1c573e8bb;
			};
		};
		_1c0da8c71_pushErr(_self_, (*((*_189337_lit.alloc)._field_Kind))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1c573e8bb:;
	jule::Ptr<_1c0da69e9_Data> _191313_d = _1c0dbb558_evalStructLitExplicit(_self_, _190013_s, (*_189337_lit.alloc)._field_Exprs, (*(*_189337_lit.alloc)._field_Kind.alloc)._field_Token);;
	if ((_1c0dda7ca_Sptr((*_189413_t.alloc)._field_Kind) != nullptr)) {
		jule::Ptr<_1c0c88700_StructLitExprModel> _191517_model = (*(_191313_d))._field_Model.cast_ptr<_1c0c88700_StructLitExprModel>(&__jule_any_type95);;
		_1c0dd0cba_makeStructLitAlloc(&(_191313_d), &(_191517_model));
	};
	return _191313_d;;
}



inline _1c0de9ca1_typeChecker _1c0dbbb30_typeChecker(_1c0da8721_Eval* _self_) {
	return _1c0d335d0_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dbbe71_evalType(_1c0da8721_Eval* _self_, jule::Ptr<_1c0c5e93a_TypeDecl> _192531_t) {
	jule::Ptr<_1c0de00b5_TypeSymbol> _192613_tk = _1c0c9d1e8_buildType(_192531_t);;
	jule::Bool _19279_ok = _1c0d34834_checkType((*(_self_))._field_s, &(_192613_tk), (*(_self_))._field_lookup);;
	if ((!(_19279_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=(*(_192613_tk))._field_Kind, ._field_Model=jule::Any((*_192613_tk.alloc)._field_Kind, &__jule_any_type84), ._field_Decl=true, });;
}



inline void _1c0dbc2d4_callTypeFn(jule::Ptr<_1c0da8721_Eval> _self_, jule::Ptr<_1c0c67998_FnCallExpr>* _193835_fc, jule::Ptr<_1c0da69e9_Data>* _193857_d) {
	if (((*((*(_193835_fc))))._field_Args.len() < 1LL)) {
		_1c0da8c71_pushErr(_self_.ptr(), (*((*(_193835_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("v", 1), &__jule_any_type4)}));
	} else if (((*((*(_193835_fc))))._field_Args.len() > 1LL)) {
		_1c0da8c71_pushErr(_self_.ptr(), (*((*((*(_193835_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*((*(_193857_d))))._field_Kind.ptr()), &__jule_any_type4)}));
	} else if ((*((*(_193835_fc))))._field_IsCo) {
		_1c0da8c71_pushErr(_self_.ptr(), (*((*(_193835_fc))))._field_Token, jule::Str::lit("concurrent calls are not allowed for type-cast calls", 52), jule::Slice<jule::Any>());
		(*(_193857_d))=nullptr;
		return;;
	} else if (((*((*(_193835_fc))))._field_Exception != nullptr)) {
		_1c0da8c71_pushErr(_self_.ptr(), (*((*(_193835_fc))))._field_Token, jule::Str::lit("exceptionals are not supported for type-cast call", 49), jule::Slice<jule::Any>());
		(*(_193857_d))=nullptr;
		return;;
	};
	if (((*((*(_193835_fc))))._field_Args.len() > 0LL)) {
		jule::Ptr<_1c0c63c6e_Expr> _195417_arg = (*((*(_193835_fc))))._field_Args[0LL];;
		(*(_193857_d))=_1c0dba920_evalCastT(_self_, &((*((*(_193857_d))))._field_Kind), &(_195417_arg), &((*(_195417_arg))._field_Token));
		return;;
	};
	if (((*(_193857_d)) != nullptr)) {
		(*((*(_193857_d))))._field_Decl=false;
	};
}



inline void _1c0dbc647_callBuiltinFn(jule::Ptr<_1c0da8721_Eval> _self_, jule::Ptr<_1c0c67998_FnCallExpr>* _196438_fc, jule::Ptr<_1c0da69e9_Data>* _196460_d) {
	if ((!(_1c0c67d1c_Unhandled((*(_196438_fc)).ptr())))) {
		_1c0da8c71_pushErr(_self_.ptr(), (*((*(_196438_fc))))._field_Token, jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	(*(_196460_d))=(*(_1c0ddb831_Fn((*((*(_196460_d))))._field_Kind.ptr())))._field_caller(&(_self_), _196438_fc, _196460_d);
	if (((*(_196460_d)) == nullptr)) {
		return;;
	};
	(*((*(_196460_d))))._field_Mutable=true;
}



inline void _1c0dbc9aa_checkFnOfConcurrentCall(_1c0da8721_Eval* _self_, jule::Ptr<_1c0c98699_FnIns>* _197643_f, jule::Ptr<_1c0c49480_Token> _197654_errorToken) {
	if (_1c0da9766_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*((*(_197643_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c574e755:;
		if (it != expr_end) {
			jule::Ptr<_1c0c976ed_ParamIns> *_198016_p = it;
			{
				if (_1c0c943dc_IsSelf((*((*(_198016_p))))._field_Decl.ptr())) {
					if ((!(_1c0c94673_IsRef((*(*(_198016_p)).alloc)._field_Decl)))) {
						_1c0da8c71_pushErr(_self_, _197654_errorToken, jule::Str::lit("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97), jule::Slice<jule::Any>());
						_1c0da90d4_pushSuggestion(_self_, jule::Str::lit("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99), jule::Slice<jule::Any>());
					};
				};
				if ((*(*(*(_198016_p)).alloc)._field_Decl.alloc)._field_Reference) {
					_1c0da8c71_pushErr(_self_, _197654_errorToken, jule::Str::lit("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96), jule::Slice<jule::Any>());
					_1c0da90d4_pushSuggestion(_self_, jule::Str::lit("use Unsafe Jule with unsafe {} scope to make concurrent call", 60), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1c574e755:;
			++it;
			goto _iter_begin_1c574e755;
		}
		_iter_end_1c574e755:;
	};
}



inline void _1c0dbcdc8_processExceptionalHandler(_1c0da8721_Eval* _self_, jule::Ptr<_1c0c98699_FnIns>* _199549_f, jule::Ptr<_1c0c67998_FnCallExpr>* _199565_fc, jule::Ptr<_1c0da69e9_Data>* _199587_d) {
	jule::Bool _19969_resultNeeded = ((!(_1c0c95c18_IsVoid((*((*(_199549_f))))._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_1c0cdeaec_scopeChecker> _199717_csc = nullptr;;
	jule::Ptr<_1c0cd763e_Scope> _199817_ch = nullptr;;
	jule::Ptr<_1c0c89932_FnCallExprModel> _200013_model = (*((*(_199587_d))))._field_Model.cast_ptr<_1c0c89932_FnCallExprModel>(&__jule_any_type33);;
	jule::Ptr<_1c0cdeaec_scopeChecker> _200413_sc = (*(_self_))._field_lookup.cast_ptr<_1c0cdeaec_scopeChecker>(0);;
	_199717_csc=_1c0d01c41_newChildChecker(_200413_sc);
	if (_19969_resultNeeded) {
		(*(_199717_csc))._field_result=(*(_199549_f));
	};
	_199817_ch=_1c0ce5097_getChild(_200413_sc);
	(*((*((*(_199565_fc))))._field_Exception))._field_Parent=(*_200413_sc.alloc)._field_tree;
	(*((*_199717_csc.alloc)._field_table))._field_Vars=jule::append((*(*_199717_csc.alloc)._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1c0d4dde2_Var>>::make({_1c0dd113e_buildErrorVar(&(_199817_ch), _199565_fc)}));
	_1c0ce54b5_checkChildSsc(_200413_sc, &((*((*(_199565_fc))))._field_Exception), &(_199817_ch), &(_199717_csc));
	(*(_200013_model))._field_Assigned=_19969_resultNeeded;
	(*_200013_model.alloc)._field_Except=_199817_ch;
	if ((_19969_resultNeeded && ((*_199717_csc.alloc)._field_result != nullptr))) {
		_1c0da8c71_pushErr(_self_, (*((*(_199565_fc))))._field_Token, jule::Str::lit("exceptional returns an expression, therefore else block should return expression", 80), jule::Slice<jule::Any>());
	};
}



inline void _1c0dbd23b_callFn(jule::Ptr<_1c0da8721_Eval> _self_, jule::Ptr<_1c0c67998_FnCallExpr>* _202231_fc, jule::Ptr<_1c0da69e9_Data>* _202253_d) {
	jule::Ptr<_1c0c98699_FnIns> _202313_f = _1c0ddb831_Fn((*((*(_202253_d))))._field_Kind.ptr());;
	if (_1c0c99b2e_IsBuiltin(_202313_f.ptr())) {
		_1c0dbc647_callBuiltinFn(_self_, _202231_fc, _202253_d);
		return;;
	};
	if ((_1c0da99ec_isGlobal(_self_) && (*((*_202313_f.alloc)._field_Decl))._field_Exceptional)) {
		_1c0da8c71_pushErr(_self_, (*((*(_202231_fc))))._field_Token, jule::Str::lit("exceptionals are not allowed in global scope", 44), jule::Slice<jule::Any>());
		_1c0da90d4_pushSuggestion(_self_, jule::Str::lit("wrap exceptional with a non-exceptional function", 48), jule::Slice<jule::Any>());
		(*(_202253_d))=nullptr;
		return;;
	};
	if (((!(_1c0c95e9e_IsMethod((*_202313_f.alloc)._field_Decl))) && _1c0e03a13_hasDirective(&((*(*_202313_f.alloc)._field_Decl.alloc)._field_Directives), jule::Str::lit("test", 4)))) {
		_1c0da8c71_pushErr(_self_, (*((*(_202231_fc))))._field_Token, jule::Str::lit("you cannot call test functions", 30), jule::Slice<jule::Any>());
		(*(_202253_d))=nullptr;
		return;;
	};
	if (((((!((*((*(_202253_d))))._field_Mutable)) && _1c0c95e9e_IsMethod((*_202313_f.alloc)._field_Decl)) && (!((*(*_202313_f.alloc)._field_Decl.alloc)._field_Statically))) && (*((*(*_202313_f.alloc)._field_Decl.alloc)._field_Params[0LL]))._field_Mutable)) {
		if ((!((*_self_.alloc)._field_immutable))) {
			_1c0da8c71_pushErr(_self_, (*((*(_202231_fc))))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		} else {
			jule::Ptr<_1c0c88700_StructLitExprModel> _204917_lit = _1c0dd45e8_isLitBased(&((*((*(_202253_d))))._field_Model));;
			if ((_204917_lit == nullptr)) {
				_1c0da8c71_pushErr(_self_, (*((*(_202231_fc))))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
			} else {
				_1c0d995e1_checkMutRiskOfStructLit(&((*_self_.alloc)._field_s), &(_204917_lit));
			};
		};
	} else if (((!(_1c0da9766_isUnsafe(_self_))) && (*(*_202313_f.alloc)._field_Decl.alloc)._field_Unsafety)) {
		_1c0da8c71_pushErr(_self_, (*((*(_202231_fc))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	jule::Bool _206113_dynamicAnnotation = ((((*(*_202313_f.alloc)._field_Decl.alloc)._field_Generics.len() > 0LL) && ((*_202313_f.alloc)._field_Generics.len() == 0LL)) && ((*_202313_f.alloc)._field_Params.len() > 0LL));;
	if (_206113_dynamicAnnotation) {
		(*_202313_f.alloc)._field_Generics=jule::Slice<jule::Ptr<_1c0dd650c_InsGeneric>>::alloc((*(*_202313_f.alloc)._field_Decl.alloc)._field_Generics.len(), (*(*_202313_f.alloc)._field_Decl.alloc)._field_Generics.len());
	} else if (((*_202313_f.alloc)._field_Generics.len() != (*(*_202313_f.alloc)._field_Decl.alloc)._field_Generics.len())) {
		_1c0d301e2_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), (*(*_202313_f.alloc)._field_Decl.alloc)._field_Generics.len(), (*_202313_f.alloc)._field_Generics.len(), (*((*(_202231_fc))))._field_Token);
		(*(_202253_d))=nullptr;
		return;;
	};
	jule::Ptr<_1c0d2b078_Sema> _207013_old = (*_self_.alloc)._field_s;;
	if (((*(*_202313_f.alloc)._field_Decl.alloc)._field_Owner != nullptr)) {
		(*_self_.alloc)._field_s=(*(*(*_202313_f.alloc)._field_Decl.alloc)._field_Owner.alloc)._field_sema;
	};
	__JULE_DEFER({
		if ((_207013_old != (*_self_.alloc)._field_s)) {
			(*(_207013_old))._field_errors=jule::append((*_207013_old.alloc)._field_errors,(*((*_self_.alloc)._field_s))._field_errors);
			(*(*_self_.alloc)._field_s.alloc)._field_errors=nullptr;
		};
		(*_self_.alloc)._field_s=_207013_old;
	});;
	_1c0d96b93_fnCallArgChecker _208313_fcac = _1c0d96b93_fnCallArgChecker{._field_e=_self_, ._field_args=(*((*(_202231_fc))))._field_Args, ._field_errorToken=(*((*(_202231_fc))))._field_Token, ._field_dynamicAnnotation=_206113_dynamicAnnotation, };;
	if ((!(_206113_dynamicAnnotation))) {
		if ((!((*_202313_f.alloc)._field_reloaded))) {
			jule::Bool _209217_ok = _1c0d39b47_reloadFnInsTypes((*_self_.alloc)._field_s, _202313_f);;
			(*_202313_f.alloc)._field_reloaded=true;
			if ((!(_209217_ok))) {
				(*(_202253_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1c0c98699_FnIns> _209917_existInstance = _1c0c97313_appendInstance((*_202313_f.alloc)._field_Decl, &(_202313_f));;
		if ((_209917_existInstance != nullptr)) {
			_202313_f=_209917_existInstance;
		};
	} else if ((!(_1c0d383a4_buildFnNonGenericTypeKinds((*_self_.alloc)._field_s, &(_202313_f), &(_208313_fcac._field_ignored))))) {
		(*(_202253_d))=nullptr;
		return;;
	};
	_208313_fcac._field_f=_202313_f;
	jule::Bool _211013_ok = false;;
	if (((*(*_202313_f.alloc)._field_Decl.alloc)._field_Owner != nullptr)) {
		std::swap(_207013_old, (*_self_.alloc)._field_s);
		_211013_ok=_1c0d9924a_check(&_208313_fcac);
		std::swap(_207013_old, (*_self_.alloc)._field_s);
	} else {
		_211013_ok=_1c0d9924a_check(&_208313_fcac);
	};
	if (_206113_dynamicAnnotation) {
		if ((!(_211013_ok))) {
			(*(_202253_d))=nullptr;
			return;;
		};
		if ((!(_1c0db55da_checkGenericFn(_self_, &(_202313_f), &((*((*(_202231_fc))))._field_Token), &((*((*(_202253_d))))._field_Model))))) {
			(*(_202253_d))=nullptr;
			return;;
		};
	};
	jule::Any _213013_callModel = (*((*(_202253_d))))._field_Model;;
	if (_1c0c95c18_IsVoid((*_202313_f.alloc)._field_Decl)) {
		(*(_202253_d))=_1c0dd289e_buildVoidData();
	} else {
		(*((*(_202253_d))))._field_Kind=(*_202313_f.alloc)._field_Result;
		(*((*(_202253_d))))._field_Lvalue=false;
	};
	jule::Ptr<_1c0c89932_FnCallExprModel> _213913_model = jule::new_ptr<_1c0c89932_FnCallExprModel>(_1c0c89932_FnCallExprModel{._field_Token=(*((*(_202231_fc))))._field_Token, ._field_Func=_202313_f, ._field_IsCo=(*((*(_202231_fc))))._field_IsCo, ._field_Expr=_213013_callModel, ._field_Args=_208313_fcac._field_argModels, });;
	(*((*(_202253_d))))._field_Model=jule::Any(_213913_model, &__jule_any_type33);
	(*((*(_202253_d))))._field_Mutable=true;
	if ((*(*_202313_f.alloc)._field_Decl.alloc)._field_Exceptional) {
		if ((*((*(_202231_fc))))._field_IsCo) {
			_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, (*((*(_202231_fc))))._field_Token, jule::Str::lit("concurrent calls not supports exceptionals", 42), jule::Slice<jule::Any>());
			_1c0d2e026_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("handle exceptional in a separate function or anonymous function", 63), jule::Slice<jule::Any>());
		};
		{
			
			if (_1c0c67d1c_Unhandled((*(_202231_fc)).ptr())) {
				_case_begin_1c577569e:;
				{
					_1c0da8c71_pushErr(_self_, (*((*(_202231_fc))))._field_Token, jule::Str::lit("exceptionals must be handled", 28), jule::Slice<jule::Any>());
					_1c0da90d4_pushSuggestion(_self_, jule::Str::lit("use \"!\" operator after exceptional to handle it", 47), jule::Slice<jule::Any>());
				}
			}
			else if (_1c0c680a3_Ignored((*(_202231_fc)).ptr())) {
				_case_begin_1c5775391:;
				{
					goto _match_end_1c577412b;
				}
			}
			else {
				_case_begin_1c5774181:;
				{
					_1c0dbcdc8_processExceptionalHandler(_self_, &(_202313_f), _202231_fc, _202253_d);
				}
			}
			_match_end_1c577412b:;
		};
	} else if ((!(_1c0c67d1c_Unhandled((*(_202231_fc)).ptr())))) {
		_1c0da8c71_pushErr(_self_, (*((*(_202231_fc))))._field_Token, jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	if ((*((*(_202231_fc))))._field_IsCo) {
		_1c0dbc9aa_checkFnOfConcurrentCall(_self_, &((*(_213913_model))._field_Func), (*((*(_202231_fc))))._field_Token);
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dbd57c_evalFnCall(jule::Ptr<_1c0da8721_Eval> _self_, jule::Ptr<_1c0c67998_FnCallExpr> _217434_fc) {
	jule::Ptr<_1c0dd7de3_TypeKind> _217513_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_217513_prefix;
	});;
	{
		auto &_match_expr{ (*((*(_217434_fc))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1c5779c14:;
			{
				if ((*((*((*(_217434_fc))._field_Expr))._field_Token))._field_Kind.equal("error", 5)) {
					return _1c0ecd934_builtinCallerError(&(_self_), &(_217434_fc));;
				};
			}
		}
		_match_end_1c5779b9d:;
	};
	jule::Ptr<_1c0da69e9_Data> _218813_d = _1c0dc5b6c_evalExprKind(_self_, (*(*_217434_fc.alloc)._field_Expr.alloc)._field_Kind);;
	if ((_218813_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_218813_d))._field_Decl) {
		_1c0dbc2d4_callTypeFn(_self_, &(_217434_fc), &(_218813_d));
		return _218813_d;;
	};
	if ((_1c0ddb831_Fn((*(_218813_d))._field_Kind.ptr()) == nullptr)) {
		_1c0da8c71_pushErr(_self_, (*_217434_fc.alloc)._field_Token, jule::Str::lit("attempting to call a non-function", 33), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1c0dbd23b_callFn(_self_, &(_217434_fc), &(_218813_d));
	return _218813_d;;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dbd978_evalEnumStatic(_1c0da8721_Eval* _self_, jule::Ptr<_1c0cab27d_Enum> _220737_enm, jule::Ptr<_1c0c49480_Token> _220753_ident) {
	jule::Ptr<_1c0caa711_EnumItem> _220813_item = _1c0cabd72_FindItem(_220737_enm.ptr(), (*(_220753_ident))._field_Kind);;
	if ((_220813_item == nullptr)) {
		_1c0da8c71_pushErr(_self_, _220753_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*_220737_enm.alloc)._field_Ident, &__jule_any_type4),jule::Any((*_220753_ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _1c0dd432e_evalEnumStatic(&(_220737_enm), &(_220813_item), &(_220753_ident));;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dbdd74_evalTypeEnumStatic(_1c0da8721_Eval* _self_, jule::Ptr<_1c0cac988_TypeEnum> _221541_enm, jule::Ptr<_1c0c49480_Token> _221557_ident) {
	jule::Ptr<_1c0cac3b1_TypeEnumItem> _221613_item = _1c0cad549_FindItem(_221541_enm.ptr(), (*(_221557_ident))._field_Kind);;
	if ((_221613_item == nullptr)) {
		_1c0da8c71_pushErr(_self_, _221557_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*_221541_enm.alloc)._field_Ident, &__jule_any_type4),jule::Any((*_221557_ident.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		
		if ((_1c0ddace7_Enum((*((*(_221613_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c5783129:;
			{
				return _1c0dac36d__evalEnum(_self_, _1c0ddace7_Enum((*(*(_221613_item))._field_Kind.alloc)._field_Kind));;
			}
		}
		else if ((_1c0ddb07d_TypeEnum((*((*(_221613_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c57832b1:;
			{
				return _1c0dacaaa__evalTypeEnum(_self_, _1c0ddb07d_TypeEnum((*(*(_221613_item))._field_Kind.alloc)._field_Kind));;
			}
		}
		else if ((_1c0ddbab7_Struct((*((*(_221613_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c5781523:;
			{
				return _1c0dad2e7__evalStruct(_self_, _1c0ddbab7_Struct((*(*(_221613_item))._field_Kind.alloc)._field_Kind));;
			}
		}
		else {
			_case_begin_1c57814ac:;
			{
				jule::Ptr<_1c0da69e9_Data> _222917_d = jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=(*((*(_221613_item))._field_Kind))._field_Kind, ._field_Decl=true, });;
				(*(_222917_d))._field_Model=jule::Any((*_222917_d.alloc)._field_Kind, &__jule_any_type84);
				return _222917_d;;
			}
		}
		_match_end_1c5781688:;
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dbe270_evalStructStatic(_1c0da8721_Eval* _self_, jule::Ptr<_1c0c83552_StructIns> _223839_s, jule::Ptr<_1c0c49480_Token> _223854_ident) {
	jule::Ptr<_1c0da69e9_Data> _223913_d = jule::new_ptr<_1c0da69e9_Data>();;
	;
	jule::Ptr<_1c0c95795_Fn> _224313_method = _1c0c845b9_FindMethod(_223839_s.ptr(), (*(_223854_ident))._field_Kind, true);;
	if ((_224313_method != nullptr)) {
		if ((!(_1c0d2e422_isAccessibleDefine((*(_self_))._field_s.ptr(), (*_224313_method.alloc)._field_Public, (*_224313_method.alloc)._field_Token)))) {
			_1c0da8c71_pushErr(_self_, _223854_ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_223854_ident.alloc)._field_Kind, &__jule_any_type4)}));
			_1c0da90d4_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1c0c98699_FnIns> _225017_ins = _1c0c97005_instance(_224313_method);;
		(*(_225017_ins))._field_Owner=_223839_s;
		_1c4451469_pushReference(_self_, &(_225017_ins));
		(*_223913_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1c0c8c946_StructStaticIdentExprModel>(_1c0c8c946_StructStaticIdentExprModel{._field_Structure=_223839_s, ._field_Expr=(*_223913_d.alloc)._field_Model, ._field_Method=_225017_ins}), &__jule_any_type96);
		(*_223913_d.alloc)._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(_225017_ins, 1)});
		return _223913_d;;
	};
	jule::Ptr<_1c0d4dde2_Var> _226413_sttc = _1c0c84c4b_FindStatic(_223839_s, (*_223854_ident.alloc)._field_Kind);;
	if ((_226413_sttc != nullptr)) {
		return _1c0db03a4_evalVar(_self_, _226413_sttc, _223854_ident);;
	};
	_1c0da8c71_pushErr(_self_, _223854_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*_223839_s.alloc)._field_Decl))._field_Ident, &__jule_any_type4),jule::Any((*_223854_ident.alloc)._field_Kind, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dbe726_evalTraitSubIdent(_1c0da8721_Eval* _self_, jule::Ptr<_1c0da69e9_Data> _227340_d, jule::Ptr<_1c0ca8a72_Trait> _227354_trt, jule::Ptr<_1c0c49480_Token> _227371_ident) {
	jule::Ptr<_1c0c95795_Fn> _227413_f = _1c0ca9721_FindMethod(_227354_trt.ptr(), (*(_227371_ident))._field_Kind);;
	if ((_227413_f == nullptr)) {
		_1c0da8c71_pushErr(_self_, _227371_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*_227354_trt.alloc)._field_Ident, &__jule_any_type4),jule::Any((*_227371_ident.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(_1c0c97005_instance(_227413_f), 1)}), ._field_Model=jule::Any(jule::new_ptr<_1c0c8bc0e_TraitSubIdentExprModel>(_1c0c8bc0e_TraitSubIdentExprModel{._field_Token=_227371_ident, ._field_Expr=(*(_227340_d))._field_Model, ._field_Method=_227413_f, ._field_Trt=_227354_trt}), &__jule_any_type97), });;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dbec87_evalStructSubIdentField(_1c0da8721_Eval* _self_, jule::Ptr<_1c0da69e9_Data>* _229347_d, jule::Ptr<_1c0c83552_StructIns>* _229362_s, jule::Ptr<_1c0c49480_Token>* _229382_tok, jule::Ptr<_1c0c829a2_FieldIns>* _2293100_f) {
	jule::Ptr<_1c0c8c5a0_StructSubIdentExprModel> _229413_model = jule::new_ptr<_1c0c8c5a0_StructSubIdentExprModel>(_1c0c8c5a0_StructSubIdentExprModel{._field_Token=(*(_229382_tok)), ._field_Expr=jule::new_ptr<_1c0da69e9_Data>((*((*(_229347_d))))), ._field_Field=(*(_2293100_f)), ._field_Owner=(*(_229362_s))});;
	(*((*(_229347_d))))._field_Model=jule::Any(_229413_model, &__jule_any_type98);
	(*((*(_229347_d))))._field_Kind=(*((*(_2293100_f))))._field_Kind;
	(*((*(_229347_d))))._field_Lvalue=true;
	if (((*((*((*(_2293100_f))))._field_Decl))._field_Mutable && (!((*((*(_229347_d))))._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1c57949ba:;
				{
					jule::Ptr<_1c0cdeaec_scopeChecker> _230817_scope = _1c0ce2e96_getRoot((*(_self_))._field_lookup.cast_ptr<_1c0cdeaec_scopeChecker>(0));;
					(*((*(_229347_d))))._field_Mutable=(((*(_230817_scope))._field_owner != nullptr) && ((*(*_230817_scope.alloc)._field_owner.alloc)._field_Owner == (*(_229362_s))));
				}
			}
			_match_end_1c5794965:;
		};
	};
	return (*(_229347_d));;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dc02e8_evalStructSubIdent(_1c0da8721_Eval* _self_, jule::Ptr<_1c0da69e9_Data> _231641_d, jule::Ptr<_1c0c83552_StructIns> _231655_s, jule::Ptr<_1c0c66d82_SubIdentExpr> _231674_si, jule::Bool _231693_ref) {
	jule::Ptr<_1c0c829a2_FieldIns> _231713_f = _1c0c8490a_FindField(_231655_s.ptr(), (*((*(_231674_si))._field_Ident))._field_Kind);;
	if ((_231713_f != nullptr)) {
		if ((!(_1c0d2e422_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*_231713_f.alloc)._field_Decl))._field_Public, (*(*_231713_f.alloc)._field_Decl.alloc)._field_Token)))) {
			_1c0da8c71_pushErr(_self_, (*_231674_si.alloc)._field_Ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(*_231713_f.alloc)._field_Decl.alloc)._field_Ident, &__jule_any_type4)}));
			_1c0da90d4_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		return _1c0dbec87_evalStructSubIdentField(_self_, &(_231641_d), &(_231655_s), &((*_231674_si.alloc)._field_Ident), &(_231713_f));;
	};
	;
	jule::Ptr<_1c0c95795_Fn> _232713_m = _1c0c845b9_FindMethod(_231655_s, (*(*_231674_si.alloc)._field_Ident.alloc)._field_Kind, false);;
	if ((_232713_m == nullptr)) {
		_1c0da8c71_pushErr(_self_, (*_231674_si.alloc)._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*_231655_s.alloc)._field_Decl))._field_Ident, &__jule_any_type4),jule::Any((*(*_231674_si.alloc)._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	if ((!(_1c0d2e422_isAccessibleDefine((*(_self_))._field_s, (*(_232713_m))._field_Public, (*(_232713_m))._field_Token)))) {
		_1c0da8c71_pushErr(_self_, (*_231674_si.alloc)._field_Ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_232713_m))._field_Ident, &__jule_any_type4)}));
		_1c0da90d4_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	if ((_1c0c94673_IsRef((*(_232713_m))._field_Params[0LL].ptr()) && (!(_231693_ref)))) {
		_1c0da8c71_pushErr(_self_, (*_231674_si.alloc)._field_Ident, jule::Str::lit("reference method cannot use with non-reference instance", 55), jule::Slice<jule::Any>());
	};
	_1c0dadd97_checkDeprecated(_self_, &((*(_232713_m))._field_Directives), (*_231674_si.alloc)._field_Ident);
	jule::Ptr<_1c0c98699_FnIns> _234313_ins = _1c0c97005_instance(_232713_m);;
	(*(_234313_ins))._field_Owner=_231655_s;
	_1c4451469_pushReference(_self_, &(_234313_ins));
	jule::Ptr<_1c0da69e9_Data> _234613_model = jule::new_ptr<_1c0da69e9_Data>((*(_231641_d)));;
	(*_231641_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1c0c8c5a0_StructSubIdentExprModel>(_1c0c8c5a0_StructSubIdentExprModel{._field_Token=(*_231674_si.alloc)._field_Ident, ._field_Expr=_234613_model, ._field_Method=_234313_ins, ._field_Owner=_231655_s}), &__jule_any_type98);
	(*_231641_d.alloc)._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(_234313_ins, 1)});
	return _231641_d;;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dc0639_evalIntTypeStatic(_1c0da8721_Eval* _self_, jule::Ptr<_1c0c49480_Token> _235736_ident) {
	;
	{
		auto &_match_expr{ (*(_235736_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c57a3b3e:;
			{
				jule::Ptr<_2021e617b_Const> _236117_c = static__2021e65bb_NewI64(_2021e1572_MaxI(jule::Str::lit("int", 3)));;
				(*(_236117_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_untyped=true, ._field_Kind=_1c0ec9ea2_primInt, ._field_Model=jule::Any(_236117_c, &__jule_any_type19), ._field_Constant=_236117_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1c57a4656:;
			{
				jule::Ptr<_2021e617b_Const> _237017_c = static__2021e65bb_NewI64(static_cast<jule::I64>(_2021e1b7c_Min(jule::Str::lit("int", 3))));;
				(*(_237017_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_untyped=true, ._field_Kind=_1c0ec9ea2_primInt, ._field_Model=jule::Any(_237017_c, &__jule_any_type19), ._field_Constant=_237017_c});;
			}
		}
		else {
			_case_begin_1c57a337a:;
			{
				_1c0da8c71_pushErr(_self_, _235736_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("int", 3), &__jule_any_type4),jule::Any((*(_235736_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c57a3798:;
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dc097a_evalUintTypeStatic(_1c0da8721_Eval* _self_, jule::Ptr<_1c0c49480_Token> _238437_ident) {
	;
	{
		auto &_match_expr{ (*(_238437_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c57a7923:;
			{
				jule::Ptr<_2021e617b_Const> _238817_c = static__2021e6885_NewU64(_2021e183b_MaxU(jule::Str::lit("uint", 4)));;
				(*(_238817_c))._field_Kind=jule::Str::lit("uint", 4);
				return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_untyped=true, ._field_Kind=_1c0ec9ad9_primUint, ._field_Model=jule::Any(_238817_c, &__jule_any_type19), ._field_Constant=_238817_c});;
			}
		}
		else {
			_case_begin_1c57a7329:;
			{
				_1c0da8c71_pushErr(_self_, _238437_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("uint", 4), &__jule_any_type4),jule::Any((*(_238437_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c57a757c:;
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dc0cbb_evalI8TypeStatic(_1c0da8721_Eval* _self_, jule::Ptr<_1c0c49480_Token> _240235_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_240235_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c57aab35:;
			{
				jule::Ptr<_2021e617b_Const> _240817_c = static__2021e65bb_NewI64(127LL);;
				(*(_240817_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_untyped=true, ._field_Kind=_1c0eca1e4_primI8, ._field_Model=jule::Any(_240817_c, &__jule_any_type19), ._field_Constant=_240817_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1c57ab64c:;
			{
				jule::Ptr<_2021e617b_Const> _241717_c = static__2021e65bb_NewI64(-128LL);;
				(*(_241717_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_untyped=true, ._field_Kind=_1c0eca1e4_primI8, ._field_Model=jule::Any(_241717_c, &__jule_any_type19), ._field_Constant=_241717_c});;
			}
		}
		else {
			_case_begin_1c57aa360:;
			{
				_1c0da8c71_pushErr(_self_, _240235_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i8", 2), &__jule_any_type4),jule::Any((*(_240235_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c57aa7a0:;
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dc110c_evalI16TypeStatic(_1c0da8721_Eval* _self_, jule::Ptr<_1c0c49480_Token> _243136_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_243136_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c57aee03:;
			{
				jule::Ptr<_2021e617b_Const> _243717_c = static__2021e65bb_NewI64(32767LL);;
				(*(_243717_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_untyped=true, ._field_Kind=_1c0eca48b_primI16, ._field_Model=jule::Any(_243717_c, &__jule_any_type19), ._field_Constant=_243717_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1c57b091a:;
			{
				jule::Ptr<_2021e617b_Const> _244617_c = static__2021e65bb_NewI64(-32768LL);;
				(*(_244617_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_untyped=true, ._field_Kind=_1c0eca48b_primI16, ._field_Model=jule::Any(_244617_c, &__jule_any_type19), ._field_Constant=_244617_c});;
			}
		}
		else {
			_case_begin_1c57ae62d:;
			{
				_1c0da8c71_pushErr(_self_, _243136_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i16", 3), &__jule_any_type4),jule::Any((*(_243136_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c57aea6d:;
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dc144d_evalI32TypeStatic(_1c0da8721_Eval* _self_, jule::Ptr<_1c0c49480_Token> _246036_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_246036_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c57b41c1:;
			{
				jule::Ptr<_2021e617b_Const> _246617_c = static__2021e65bb_NewI64(2147483647LL);;
				(*(_246617_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_untyped=true, ._field_Kind=_1c0eca744_primI32, ._field_Model=jule::Any(_246617_c, &__jule_any_type19), ._field_Constant=_246617_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1c57b4bd8:;
			{
				jule::Ptr<_2021e617b_Const> _247517_c = static__2021e65bb_NewI64(-2147483648LL);;
				(*(_247517_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_untyped=true, ._field_Kind=_1c0eca744_primI32, ._field_Model=jule::Any(_247517_c, &__jule_any_type19), ._field_Constant=_247517_c});;
			}
		}
		else {
			_case_begin_1c57b38eb:;
			{
				_1c0da8c71_pushErr(_self_, _246036_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i32", 3), &__jule_any_type4),jule::Any((*(_246036_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c57b3d3b:;
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dc178e_evalI64TypeStatic(_1c0da8721_Eval* _self_, jule::Ptr<_1c0c49480_Token> _248936_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_248936_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c57b848e:;
			{
				jule::Ptr<_2021e617b_Const> _249517_c = static__2021e65bb_NewI64(jule::MAX_I64);;
				(*(_249517_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_untyped=true, ._field_Kind=_1c0eca9ec_primI64, ._field_Model=jule::Any(_249517_c, &__jule_any_type19), ._field_Constant=_249517_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1c57b8ea6:;
			{
				jule::Ptr<_2021e617b_Const> _250417_c = static__2021e65bb_NewI64(jule::MIN_I64);;
				(*(_250417_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_untyped=true, ._field_Kind=_1c0eca9ec_primI64, ._field_Model=jule::Any(_250417_c, &__jule_any_type19), ._field_Constant=_250417_c});;
			}
		}
		else {
			_case_begin_1c57b7bb9:;
			{
				_1c0da8c71_pushErr(_self_, _248936_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i64", 3), &__jule_any_type4),jule::Any((*(_248936_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c57b8109:;
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dc1ad0_evalU8TypeStatic(_1c0da8721_Eval* _self_, jule::Ptr<_1c0c49480_Token> _251835_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_251835_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c57bc394:;
			{
				jule::Ptr<_2021e617b_Const> _252317_c = static__2021e6885_NewU64(255LLU);;
				(*(_252317_c))._field_Kind=jule::Str::lit("u8", 2);
				return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_untyped=true, ._field_Kind=_1c0ecaca5_primU8, ._field_Model=jule::Any(_252317_c, &__jule_any_type19), ._field_Constant=_252317_c});;
			}
		}
		else {
			_case_begin_1c57bba9c:;
			{
				_1c0da8c71_pushErr(_self_, _251835_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u8", 2), &__jule_any_type4),jule::Any((*(_251835_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c57bbe98:;
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dc1e21_evalU16TypeStatic(_1c0da8721_Eval* _self_, jule::Ptr<_1c0c49480_Token> _253736_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_253736_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c57c0122:;
			{
				jule::Ptr<_2021e617b_Const> _254217_c = static__2021e6885_NewU64(65535LLU);;
				(*(_254217_c))._field_Kind=jule::Str::lit("u16", 3);
				return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_untyped=true, ._field_Kind=_1c0ecb05d_primU16, ._field_Model=jule::Any(_254217_c, &__jule_any_type19), ._field_Constant=_254217_c});;
			}
		}
		else {
			_case_begin_1c57be82a:;
			{
				_1c0da8c71_pushErr(_self_, _253736_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u16", 3), &__jule_any_type4),jule::Any((*(_253736_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c57bec26:;
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dc2262_evalU32TypeStatic(_1c0da8721_Eval* _self_, jule::Ptr<_1c0c49480_Token> _255636_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_255636_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c57c2da0:;
			{
				jule::Ptr<_2021e617b_Const> _256117_c = static__2021e6885_NewU64(4294967295LLU);;
				(*(_256117_c))._field_Kind=jule::Str::lit("u32", 3);
				return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_untyped=true, ._field_Kind=_1c0ecb316_primU32, ._field_Model=jule::Any(_256117_c, &__jule_any_type19), ._field_Constant=_256117_c});;
			}
		}
		else {
			_case_begin_1c57c25a8:;
			{
				_1c0da8c71_pushErr(_self_, _255636_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u32", 3), &__jule_any_type4),jule::Any((*(_255636_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c57c29a4:;
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dc25a3_evalU64TypeStatic(_1c0da8721_Eval* _self_, jule::Ptr<_1c0c49480_Token> _257536_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_257536_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c57c5b2d:;
			{
				jule::Ptr<_2021e617b_Const> _258017_c = static__2021e6885_NewU64(jule::MAX_U64);;
				(*(_258017_c))._field_Kind=jule::Str::lit("u64", 3);
				return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_untyped=true, ._field_Kind=_1c0ecb800_primU64, ._field_Model=jule::Any(_258017_c, &__jule_any_type19), ._field_Constant=_258017_c});;
			}
		}
		else {
			_case_begin_1c57c5336:;
			{
				_1c0da8c71_pushErr(_self_, _257536_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u64", 3), &__jule_any_type4),jule::Any((*(_257536_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c57c5732:;
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dc28e4_evalF32TypeStatic(_1c0da8721_Eval* _self_, jule::Ptr<_1c0c49480_Token> _259436_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_259436_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c57c90b5:;
			{
				jule::Ptr<_2021e617b_Const> _260117_c = static__2021e71d2_NewF64(340282346638528860000000000000000000000.0);;
				(*(_260117_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_untyped=true, ._field_Kind=_1c0ecba42_primF32, ._field_Model=jule::Any(_260117_c, &__jule_any_type19), ._field_Constant=_260117_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1c57c9acc:;
			{
				jule::Ptr<_2021e617b_Const> _261017_c = static__2021e71d2_NewF64(-340282346638528860000000000000000000000.0);;
				(*(_261017_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_untyped=true, ._field_Kind=_1c0ecba42_primF32, ._field_Model=jule::Any(_261017_c, &__jule_any_type19), ._field_Constant=_261017_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1c57c9b43:;
			{
				jule::Ptr<_2021e617b_Const> _261917_c = static__2021e71d2_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				(*(_261917_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_untyped=true, ._field_Kind=_1c0ecba42_primF32, ._field_Model=jule::Any(_261917_c, &__jule_any_type19), ._field_Constant=_261917_c});;
			}
		}
		else {
			_case_begin_1c57c88ab:;
			{
				_1c0da8c71_pushErr(_self_, _259436_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("f32", 3), &__jule_any_type4),jule::Any((*(_259436_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c57c8c1e:;
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dc2c35_evalF64TypeStatic(_1c0da8721_Eval* _self_, jule::Ptr<_1c0c49480_Token> _263336_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_263336_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c57ce85c:;
			{
				jule::Ptr<_2021e617b_Const> _264017_c = static__2021e71d2_NewF64(jule::MAX_F64);;
				(*(_264017_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_untyped=true, ._field_Kind=_1c0ecbc51_primF64, ._field_Model=jule::Any(_264017_c, &__jule_any_type19), ._field_Constant=_264017_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1c57d0374:;
			{
				jule::Ptr<_2021e617b_Const> _264917_c = static__2021e71d2_NewF64(jule::MIN_F64);;
				(*(_264917_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_untyped=true, ._field_Kind=_1c0ecbc51_primF64, ._field_Model=jule::Any(_264917_c, &__jule_any_type19), ._field_Constant=_264917_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1c57d03da:;
			{
				jule::Ptr<_2021e617b_Const> _265817_c = static__2021e71d2_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				(*(_265817_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_untyped=true, ._field_Kind=_1c0ecbc51_primF64, ._field_Model=jule::Any(_265817_c, &__jule_any_type19), ._field_Constant=_265817_c});;
			}
		}
		else {
			_case_begin_1c57ce153:;
			{
				_1c0da8c71_pushErr(_self_, _263336_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("f64", 3), &__jule_any_type4),jule::Any((*(_263336_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c57ce4b6:;
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dc3131_evalPrimStatic(_1c0da8721_Eval* _self_, jule::Str _267233_kind, jule::Ptr<_1c0c49480_Token> _267244_ident) {
	{
		auto &_match_expr{ _267233_kind };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1c57d4059:;
			{
				return _1c0dc0639_evalIntTypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1c57d4a0a:;
			{
				return _1c0dc097a_evalUintTypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1c57d4a71:;
			{
				return _1c0dc0cbb_evalI8TypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1c57d3c4b:;
			{
				return _1c0dc110c_evalI16TypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1c57d3cb2:;
			{
				return _1c0dc144d_evalI32TypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1c57d3d28:;
			{
				return _1c0dc178e_evalI64TypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1c57d3d8e:;
			{
				return _1c0dc1ad0_evalU8TypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1c57d4b5e:;
			{
				return _1c0dc1e21_evalU16TypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1c57d4bc5:;
			{
				return _1c0dc2262_evalU32TypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1c57d4c3b:;
			{
				return _1c0dc25a3_evalU64TypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1c57d4ca2:;
			{
				return _1c0dc28e4_evalF32TypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1c57d4d18:;
			{
				return _1c0dc2c35_evalF64TypeStatic(_self_, _267244_ident);;
			}
		}
		else {
			_case_begin_1c57d34a9:;
			{
				_1c0da8c71_pushErr(_self_, _267244_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_267233_kind, &__jule_any_type4),jule::Any((*(_267244_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c57d061b:;
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dc352c_evalTypeStatic(_1c0da8721_Eval* _self_, jule::Ptr<_1c0da69e9_Data> _270437_d, jule::Ptr<_1c0c66d82_SubIdentExpr> _270451_si) {
	{
		
		if ((_1c0dda544_Prim((*(_270437_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c57d9328:;
			{
				return _1c0dc3131_evalPrimStatic(_self_, _1c0de0d0d_Str(_1c0dda544_Prim((*_270437_d.alloc)._field_Kind).ptr()), (*(_270451_si))._field_Ident);;
			}
		}
		else if ((_1c0ddace7_Enum((*(_270437_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c57da13c:;
			{
				return _1c0dbd978_evalEnumStatic(_self_, _1c0ddace7_Enum((*_270437_d.alloc)._field_Kind), (*(_270451_si))._field_Ident);;
			}
		}
		else if ((_1c0ddb07d_TypeEnum((*(_270437_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c57da1a3:;
			{
				return _1c0dbdd74_evalTypeEnumStatic(_self_, _1c0ddb07d_TypeEnum((*_270437_d.alloc)._field_Kind), (*(_270451_si))._field_Ident);;
			}
		}
		else if ((_1c0ddbab7_Struct((*(_270437_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c57da219:;
			{
				return _1c0dbe270_evalStructStatic(_self_, _1c0ddbab7_Struct((*_270437_d.alloc)._field_Kind), (*(_270451_si))._field_Ident);;
			}
		}
		else {
			_case_begin_1c57d8e60:;
			{
				_1c0da8c71_pushErr(_self_, (*(_270451_si))._field_Ident, jule::Str::lit("type @ is not supports sub-defines", 34), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*(_270437_d))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c57d8d94:;
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c57e2089_comptimeObjSubIdent(_1c0da8721_Eval* _self_, jule::Ptr<_1c0cc0418_comptimeTypeInfo>* _272057_ct, jule::Ptr<_1c0da69e9_Data>* _272077_d, jule::Ptr<_1c0c66d82_SubIdentExpr>* _272088_si) {
	jule::Ptr<_1c0da69e9_Data> _272113_cd = _1c0cc661c_subIdent((*(_272057_ct)), &((*((*((*(_272088_si))))._field_Ident))._field_Kind));;
	if ((_272113_cd == nullptr)) {
		_1c0da8c71_pushErr(_self_, (*((*(_272088_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*((*(_272077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_272088_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _272113_cd;;
}

inline jule::Ptr<_1c0da69e9_Data> _1c57e66dc_comptimeObjSubIdent(_1c0da8721_Eval* _self_, jule::Ptr<_1c0cb15b3_comptimeStructField>* _272057_ct, jule::Ptr<_1c0da69e9_Data>* _272077_d, jule::Ptr<_1c0c66d82_SubIdentExpr>* _272088_si) {
	jule::Ptr<_1c0da69e9_Data> _272113_cd = _1c0cb2e66_subIdent((*(_272057_ct)), &((*((*((*(_272088_si))))._field_Ident))._field_Kind));;
	if ((_272113_cd == nullptr)) {
		_1c0da8c71_pushErr(_self_, (*((*(_272088_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*((*(_272077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_272088_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _272113_cd;;
}

inline jule::Ptr<_1c0da69e9_Data> _1c57eaceb_comptimeObjSubIdent(_1c0da8721_Eval* _self_, jule::Ptr<_1c0cb7b2a_comptimeEnumField>* _272057_ct, jule::Ptr<_1c0da69e9_Data>* _272077_d, jule::Ptr<_1c0c66d82_SubIdentExpr>* _272088_si) {
	jule::Ptr<_1c0da69e9_Data> _272113_cd = _1c0cb8bb4_subIdent((*(_272057_ct)), &((*((*((*(_272088_si))))._field_Ident))._field_Kind));;
	if ((_272113_cd == nullptr)) {
		_1c0da8c71_pushErr(_self_, (*((*(_272088_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*((*(_272077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_272088_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _272113_cd;;
}

inline jule::Ptr<_1c0da69e9_Data> _1c580044e_comptimeObjSubIdent(_1c0da8721_Eval* _self_, jule::Ptr<_1c0cba5bc_comptimeParam>* _272057_ct, jule::Ptr<_1c0da69e9_Data>* _272077_d, jule::Ptr<_1c0c66d82_SubIdentExpr>* _272088_si) {
	jule::Ptr<_1c0da69e9_Data> _272113_cd = _1c0cbc525_subIdent((*(_272057_ct)), &((*((*((*(_272088_si))))._field_Ident))._field_Kind));;
	if ((_272113_cd == nullptr)) {
		_1c0da8c71_pushErr(_self_, (*((*(_272088_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*((*(_272077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_272088_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _272113_cd;;
}

inline jule::Ptr<_1c0da69e9_Data> _1c5804cd3_comptimeObjSubIdent(_1c0da8721_Eval* _self_, jule::Ptr<_1c0cb486e_comptimeStatic>* _272057_ct, jule::Ptr<_1c0da69e9_Data>* _272077_d, jule::Ptr<_1c0c66d82_SubIdentExpr>* _272088_si) {
	jule::Ptr<_1c0da69e9_Data> _272113_cd = _1c0cb6299_subIdent((*(_272057_ct)), &((*((*((*(_272088_si))))._field_Ident))._field_Kind));;
	if ((_272113_cd == nullptr)) {
		_1c0da8c71_pushErr(_self_, (*((*(_272088_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*((*(_272077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_272088_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _272113_cd;;
}

inline jule::Ptr<_1c0da69e9_Data> _1c58093e2_comptimeObjSubIdent(_1c0da8721_Eval* _self_, jule::Ptr<_1c0cc692a_comptimeValue>* _272057_ct, jule::Ptr<_1c0da69e9_Data>* _272077_d, jule::Ptr<_1c0c66d82_SubIdentExpr>* _272088_si) {
	jule::Ptr<_1c0da69e9_Data> _272113_cd = _1c0cc8e6b_subIdent((*(_272057_ct)), &((*((*((*(_272088_si))))._field_Ident))._field_Kind));;
	if ((_272113_cd == nullptr)) {
		_1c0da8c71_pushErr(_self_, (*((*(_272088_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*((*(_272077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_272088_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _272113_cd;;
}

inline jule::Ptr<_1c0da69e9_Data> _1c580da01_comptimeObjSubIdent(_1c0da8721_Eval* _self_, jule::Ptr<_1c0cca874_comptimeFile>* _272057_ct, jule::Ptr<_1c0da69e9_Data>* _272077_d, jule::Ptr<_1c0c66d82_SubIdentExpr>* _272088_si) {
	jule::Ptr<_1c0da69e9_Data> _272113_cd = _1c0ccc2b0_subIdent((*(_272057_ct)), &((*((*((*(_272088_si))))._field_Ident))._field_Kind));;
	if ((_272113_cd == nullptr)) {
		_1c0da8c71_pushErr(_self_, (*((*(_272088_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*((*(_272077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_272088_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _272113_cd;;
}



inline __jule_tuple_x_1c0da69e9_Data__jule_tuple_bool _1c0dc3dce_tryComptimeObjSubIdent(_1c0da8721_Eval* _self_, jule::Ptr<_1c0da69e9_Data>* _272846_d, jule::Ptr<_1c0c66d82_SubIdentExpr> _272860_si) {
	__jule_tuple_x_1c0da69e9_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((_1c0ddde0a_comptimeTypeInfo((*((*(_272846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c57e0472:;
			{
				jule::Ptr<_1c0cc0418_comptimeTypeInfo> _273117_ct = _1c0ddde0a_comptimeTypeInfo((*((*(_272846_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1c57e2089_comptimeObjSubIdent(_self_, &(_273117_ct), _272846_d, &(_272860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c0ddcb1d_comptimeStructField((*((*(_272846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c57e0098:;
			{
				jule::Ptr<_1c0cb15b3_comptimeStructField> _273417_ct = _1c0ddcb1d_comptimeStructField((*((*(_272846_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1c57e66dc_comptimeObjSubIdent(_self_, &(_273417_ct), _272846_d, &(_272860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c0ddd13a_comptimeEnumField((*((*(_272846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c57e010e:;
			{
				jule::Ptr<_1c0cb7b2a_comptimeEnumField> _273717_ct = _1c0ddd13a_comptimeEnumField((*((*(_272846_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1c57eaceb_comptimeObjSubIdent(_self_, &(_273717_ct), _272846_d, &(_272860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c0ddd657_comptimeParam((*((*(_272846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c57e0175:;
			{
				jule::Ptr<_1c0cba5bc_comptimeParam> _274017_ct = _1c0ddd657_comptimeParam((*((*(_272846_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1c580044e_comptimeObjSubIdent(_self_, &(_274017_ct), _272846_d, &(_272860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c0dde427_comptimeStatic((*((*(_272846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c57e01db:;
			{
				jule::Ptr<_1c0cb486e_comptimeStatic> _274317_ct = _1c0dde427_comptimeStatic((*((*(_272846_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1c5804cd3_comptimeObjSubIdent(_self_, &(_274317_ct), _272846_d, &(_272860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c0dde6ad_comptimeValue((*((*(_272846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c57e0263:;
			{
				jule::Ptr<_1c0cc692a_comptimeValue> _274617_ct = _1c0dde6ad_comptimeValue((*((*(_272846_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1c58093e2_comptimeObjSubIdent(_self_, &(_274617_ct), _272846_d, &(_272860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c0dde944_comptimeFile((*((*(_272846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c57e02da:;
			{
				jule::Ptr<_1c0cca874_comptimeFile> _274917_ct = _1c0dde944_comptimeFile((*((*(_272846_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1c580da01_comptimeObjSubIdent(_self_, &(_274917_ct), _272846_d, &(_272860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c57e0032:;
			{
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		_match_end_1c57dee88:;
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dc42ca_evalObjSubIdent(_1c0da8721_Eval* _self_, jule::Ptr<_1c0da69e9_Data> _275638_d, jule::Ptr<_1c0c66d82_SubIdentExpr> _275652_si) {
	if (_1c0c4bd67_IsIgnoreIdent((*((*(_275652_si))._field_Ident))._field_Kind)) {
		_1c0da8c71_pushErr(_self_, (*_275652_si.alloc)._field_Ident, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		jule::Ptr<_1c0da69e9_Data> _276317_compData;
		jule::Bool _276327_ok;
		({
			__jule_tuple_x_1c0da69e9_Data__jule_tuple_bool __jule_assign_result = _1c0dc3dce_tryComptimeObjSubIdent(_self_, &(_275638_d), _275652_si);
			_276317_compData = __jule_assign_result.__jule_result_arg0;
			_276327_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_276327_ok) {
			return _276317_compData;;
		};
	};
	jule::Ptr<_1c0dd7de3_TypeKind> _276913_kind = (*(_275638_d))._field_Kind;;
	{
		
		if ((_1c0ddaa61_Ptr((*_275638_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c5813ebd:;
			{
				jule::Ptr<_1c0de7cb0_Ptr> _277213_ptr = _1c0ddaa61_Ptr((*_275638_d.alloc)._field_Kind);;
				if (_1c0de87e9_IsUnsafe(_277213_ptr.ptr())) {
					goto _match_end_1c5813e35;
				};
				if ((!(_1c0da9766_isUnsafe(_self_)))) {
					_1c0da8c71_pushErr(_self_, (*_275652_si.alloc)._field_Ident, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				_276913_kind=(*(_1c0ddaa61_Ptr((*_275638_d.alloc)._field_Kind)))._field_Elem;
				_1c0dd48d4_makeImplicitDeref(&(_275638_d), (*_275652_si.alloc)._field_Ident);
			}
		}
		else if ((_1c0dda7ca_Sptr((*_275638_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c5814067:;
			{
				_276913_kind=(*(_1c0dda7ca_Sptr((*_275638_d.alloc)._field_Kind)))._field_Elem;
				_1c0dd48d4_makeImplicitDeref(&(_275638_d), (*_275652_si.alloc)._field_Ident);
			}
		}
		_match_end_1c5813e35:;
	};
	{
		
		if ((_1c0ddbd4d_Trait((*_275638_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c5814155:;
			{
				return _1c0dbe726_evalTraitSubIdent(_self_, _275638_d, _1c0ddbd4d_Trait((*_275638_d.alloc)._field_Kind), (*_275652_si.alloc)._field_Ident);;
			}
		}
		else if ((_1c0ddbab7_Struct(_276913_kind.ptr()) != nullptr)) {
			_case_begin_1c58172ce:;
			{
				jule::Ptr<_1c0c83552_StructIns> _279013_s = _1c0ddbab7_Struct(_276913_kind);;
				if (_1c0dd1b56_isInstancedStruct(_279013_s)) {
					jule::Bool _279221_usedReferenceElem = (_1c0dda7ca_Sptr((*_275638_d.alloc)._field_Kind.ptr()) != nullptr);;
					return _1c0dc02e8_evalStructSubIdent(_self_, _275638_d, _1c0ddbab7_Struct(_276913_kind), _275652_si, _279221_usedReferenceElem);;
				};
			}
		}
		_match_end_1c58176ca:;
	};
	_1c0da8c71_pushErr(_self_, (*_275652_si.alloc)._field_Ident, jule::Str::lit("object @ is not supports sub-defines", 36), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*_275638_d.alloc)._field_Kind.ptr()), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dc461b_evalSubIdent(jule::Ptr<_1c0da8721_Eval> _self_, jule::Ptr<_1c0c66d82_SubIdentExpr> _280036_si) {
	jule::Ptr<_1c0dd7de3_TypeKind> _280113_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_280113_prefix;
	});;
	jule::Ptr<_1c0da69e9_Data> _280413_d = _1c0dc5b6c_evalExprKind(_self_, (*((*(_280036_si))._field_Expr))._field_Kind);;
	if ((_280413_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_280413_d))._field_Decl) {
		return _1c0dc352c_evalTypeStatic(_self_, _280413_d, _280036_si);;
	};
	return _1c0dc42ca_evalObjSubIdent(_self_, _280413_d, _280036_si);;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dc495c_evalTuple(jule::Ptr<_1c0da8721_Eval> _self_, jule::Ptr<_1c0c64863_TupleExpr> _281433_tup) {
	jule::Ptr<_1c0de5ab0_Tuple> _281513_tupT = jule::new_ptr<_1c0de5ab0_Tuple>();;
	(*_281513_tupT.alloc)._field_Types=jule::Slice<jule::Ptr<_1c0dd7de3_TypeKind>>::alloc(0LL, (*(_281433_tup))._field_Expr.len());
	jule::Ptr<_1c0c8d11c_TupleExprModel> _281813_model = jule::new_ptr<_1c0c8d11c_TupleExprModel>(_1c0c8d11c_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_1c0da69e9_Data>>::alloc(0LL, (*_281433_tup.alloc)._field_Expr.len())});;
	jule::Bool _282213_ok = true;;
	{
		auto expr = &((*_281433_tup.alloc)._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5822163:;
		if (it != expr_end) {
			jule::Ptr<_1c0c63c6e_Expr> _282321_expr = *it;
			{
				jule::Ptr<_1c0da69e9_Data> _282417_d = _1c0dc6981_evalExpr(_self_, _282321_expr);;
				if ((_282417_d == nullptr)) {
					_282213_ok=false;
					goto _iter_next_1c5822163;
				};
				(*_281513_tupT.alloc)._field_Types=jule::append((*_281513_tupT.alloc)._field_Types,jule::Slice<jule::Ptr<_1c0dd7de3_TypeKind>>::make({(*(_282417_d))._field_Kind}));
				(*(_281813_model))._field_Datas=jule::append((*_281813_model.alloc)._field_Datas,jule::Slice<jule::Ptr<_1c0da69e9_Data>>::make({_282417_d}));
			}
			_iter_next_1c5822163:;
			++it;
			goto _iter_begin_1c5822163;
		}
		_iter_end_1c5822163:;
	};
	if ((!(_282213_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(_281513_tupT, 23)}), ._field_Model=jule::Any(_281813_model, &__jule_any_type81), });;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dc4d58_evalMap(jule::Ptr<_1c0da8721_Eval> _self_, jule::Ptr<_1c0de6660_Map> _284331_m, jule::Ptr<_1c0c6926e_BraceLit> _284344_lit) {
	jule::Ptr<_1c0c8b0e8_MapExprModel> _284413_model = jule::new_ptr<_1c0c8b0e8_MapExprModel>(_1c0c8b0e8_MapExprModel{._field_KeyKind=(*(_284331_m))._field_Key, ._field_ValKind=(*_284331_m.alloc)._field_Val, });;
	{
		auto expr = &((*(_284344_lit))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5825e25:;
		if (it != expr_end) {
			jule::Ptr<_1c0c63c6e_Expr> _284921_expr = *it;
			{
				{
					auto &_match_expr{ (*(_284921_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type78) {
						_case_begin_1c582651e:;
						{
							goto _match_end_1c582681b;
						}
					}
					else {
						_case_begin_1c5826871:;
						{
							_1c0da8c71_pushErr(_self_.ptr(), (*(_284344_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1c582681b:;
				};
				jule::Ptr<_1c0c69a99_KeyValPair> _285917_pair = (*(_284921_expr))._field_Kind.cast_ptr<_1c0c69a99_KeyValPair>(&__jule_any_type78);;
				jule::Ptr<_1c0da69e9_Data> _286117_key = _1c0dc6981_evalExpr(_self_, (*(_285917_pair))._field_Key);;
				if ((_286117_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1c0da69e9_Data> _286617_val = _1c0dc6981_evalExpr(_self_, (*_285917_pair.alloc)._field_Val);;
				if ((_286617_val == nullptr)) {
					return nullptr;;
				};
				;
				if (_1c0d3aa5a_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_284331_m.alloc)._field_Key), &(_286117_key), &((*((*_285917_pair.alloc)._field_Key))._field_Token))) {
					_1c0d366c1_checkAssignType((*_self_.alloc)._field_s, false, &((*_284331_m.alloc)._field_Key), &(_286117_key), (*(*_285917_pair.alloc)._field_Key.alloc)._field_Token);
				};
				if (_1c0d3aa5a_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_284331_m.alloc)._field_Val), &(_286617_val), &((*((*_285917_pair.alloc)._field_Val))._field_Token))) {
					_1c0d366c1_checkAssignType((*_self_.alloc)._field_s, false, &((*_284331_m.alloc)._field_Val), &(_286617_val), (*(*_285917_pair.alloc)._field_Val.alloc)._field_Token);
				};
				(*(_284413_model))._field_Entries=jule::append((*_284413_model.alloc)._field_Entries,jule::Slice<jule::Ptr<_1c0c8ab42_KeyValPairExprModel>>::make({jule::new_ptr<_1c0c8ab42_KeyValPairExprModel>(_1c0c8ab42_KeyValPairExprModel{._field_Key=(*(_286117_key))._field_Model, ._field_Val=(*(_286617_val))._field_Model})}));
			}
			_iter_next_1c5825e25:;
			++it;
			goto _iter_begin_1c5825e25;
		}
		_iter_end_1c5825e25:;
	};
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(_284331_m, 24)}), ._field_Mutable=true, ._field_Model=jule::Any(_284413_model, &__jule_any_type99), });;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dc5199_evalBraceLit(jule::Ptr<_1c0da8721_Eval> _self_, jule::Ptr<_1c0c6926e_BraceLit> _289236_lit) {
	{
		
		if (((*(_self_))._field_prefix == nullptr)) {
			_case_begin_1c5830407:;
			{
				_1c0da8c71_pushErr(_self_, (*(_289236_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1c0ddc0d4_Map((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1c5830c10:;
			{
				return _1c0dc4d58_evalMap(_self_, _1c0ddc0d4_Map((*_self_.alloc)._field_prefix), _289236_lit);;
			}
		}
		else if ((_1c0ddbab7_Struct((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1c5830c76:;
			{
				return _1c0dbb558_evalStructLitExplicit(_self_, _1c0ddbab7_Struct((*_self_.alloc)._field_prefix), (*(_289236_lit))._field_Exprs, (*_289236_lit.alloc)._field_Token);;
			}
		}
		else {
			_case_begin_1c583003e:;
			{
				_1c0da8c71_pushErr(_self_.ptr(), (*(_289236_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c582ee40:;
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dc54da_evalAnonFunc(jule::Ptr<_1c0da8721_Eval> _self_, jule::Ptr<_1c0c715ea_FnDecl> _290736_decl) {
	_1c0de9ca1_typeChecker _290813_tc = _1c0de9ca1_typeChecker{._field_s=(*(_self_))._field_s, ._field_rootLookup=(*_self_.alloc)._field_lookup, ._field_lookup=(*_self_.alloc)._field_lookup, };;
	jule::Ptr<_1c0c98699_FnIns> _291313_ins = _1c0e01978_buildFunc(&_290813_tc, _290736_decl);;
	if ((_291313_ins == nullptr)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c0d4dde2_Var>> _291713_captured = jule::Slice<jule::Ptr<_1c0d4dde2_Var>>::alloc(0LL, 0LL);;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1c5835550:;
			{
				jule::Ptr<_1c0cdeaec_scopeChecker> _292017_sc = (*_self_.alloc)._field_lookup.cast_ptr<_1c0cdeaec_scopeChecker>(0);;
				jule::Ptr<_1c0cdeaec_scopeChecker> _292117_scc = _1c0d01c41_newChildChecker(_292017_sc);;
				(*(_292117_scc))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1c0cdd579_scopeLabel>>>(nullptr);
				(*_292117_scc.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1c0cddb0c_scopeGoto>>>(nullptr);
				(*_292117_scc.alloc)._field_owner=_291313_ins;
				(*_292117_scc.alloc)._field_childIndex=0LL;
				(*_292117_scc.alloc)._field_it=0LLU;
				(*_292117_scc.alloc)._field_cse=0LLU;
				(*_292117_scc.alloc)._field_captured=((jule::Ptr<jule::Slice<jule::Ptr<_1c0d4dde2_Var>>>)((&(_291713_captured))));
				_1c0d48b34_checkFnInsSc((*_self_.alloc)._field_s.ptr(), &(_291313_ins), &(_292117_scc));
			}
		}
		else {
			_case_begin_1c58361dd:;
			{
				_1c0d49250_checkFnIns((*_self_.alloc)._field_s, &(_291313_ins));
			}
		}
		_match_end_1c5836188:;
	};
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(_291313_ins, 1)}), ._field_Model=jule::Any(jule::new_ptr<_1c0c8a768_AnonFnExprModel>(_1c0c8a768_AnonFnExprModel{._field_Captured=_291713_captured, ._field_Func=_291313_ins, ._field_Global=_1c0da99ec_isGlobal(_self_)}), &__jule_any_type100), });;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dc582b_evalBinary(jule::Ptr<_1c0da8721_Eval> _self_, jule::Ptr<_1c0c67338_BinaryExpr> _294434_op) {
	_1c0dc8dd4_binaryEval _294513_bs = static__1c0dc9489_newPlain(_self_);;
	if (((*(_self_))._field_prefix != nullptr)) {
		jule::Ptr<_1c0de09bc_Prim> _294813_prim = _1c0dda544_Prim((*_self_.alloc)._field_prefix);;
		if (((_294813_prim == nullptr) || (!(_2021e5ad7_IsNum(_1c0de0d0d_Str(_294813_prim.ptr())))))) {
			jule::Ptr<_1c0dd7de3_TypeKind> _295021_prefix = (*_self_.alloc)._field_prefix;;
			(*_self_.alloc)._field_prefix=nullptr;
			__JULE_DEFER({
				(*_self_.alloc)._field_prefix=_295021_prefix;
			});;
			return _1c0dcee62_eval(&_294513_bs, &(_294434_op));;
		};
	};
	return _1c0dcee62_eval(&_294513_bs, &(_294434_op));;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dc5b6c_evalExprKind(jule::Ptr<_1c0da8721_Eval> _self_, jule::Any _295936_kind) {
	{
		auto &_match_expr{ _295936_kind };
		
		if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1c583e9bb:;
			{
				jule::Ptr<_1c0c64038_RangeExpr> _296217_e = _295936_kind.unsafe_cast_ptr<_1c0c64038_RangeExpr>();;
				return _1c0dc5b6c_evalExprKind(_self_, (*((*(_296217_e))._field_Expr))._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1c583ebca:;
			{
				return _1c0dab2a1_evalLit(_self_.ptr(), _295936_kind.unsafe_cast_ptr<_1c0c64c09_LitExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1c583ec41:;
			{
				return _1c0db0edc_evalIdent(_self_.ptr(), _295936_kind.unsafe_cast_ptr<_1c0c65589_IdentExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1c583eca7:;
			{
				return _1c0db132d_evalUnary(_self_, _295936_kind.unsafe_cast_ptr<_1c0c65d2b_UnaryExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1c583ed1d:;
			{
				return _1c0db166e_evalVariadic(_self_, _295936_kind.unsafe_cast_ptr<_1c0c66205_VariadicExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1c583ed84:;
			{
				return _1c0db19b0_evalUnsafe(_self_, _295936_kind.unsafe_cast_ptr<_1c0c650d3_UnsafeExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1c583edea:;
			{
				return _1c0db25e8_evalSliceExpr(_self_, _295936_kind.unsafe_cast_ptr<_1c0c6a2c5_SliceExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1c58402a2:;
			{
				return _1c0db5c8e_evalIndexing(_self_, _295936_kind.unsafe_cast_ptr<_1c0c6ac32_IndexingExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1c5840318:;
			{
				return _1c0db70c0_evalSlicing(_self_, _295936_kind.unsafe_cast_ptr<_1c0c6b392_SlicingExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1c584037e:;
			{
				return _1c0dbac61_evalCast(_self_, _295936_kind.unsafe_cast_ptr<_1c0c665ce_CastExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1c58403e5:;
			{
				return _1c0dbb0a2_evalNsSelection(_self_.ptr(), _295936_kind.unsafe_cast_ptr<_1c0c669a8_NsSelectionExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1c584045b:;
			{
				return _1c0dbb899_evalStructLit(_self_, _295936_kind.unsafe_cast_ptr<_1c0c68cb8_StructLit>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1c58404d3:;
			{
				return _1c0dbbe71_evalType(_self_.ptr(), _295936_kind.unsafe_cast_ptr<_1c0c5e93a_TypeDecl>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1c584055a:;
			{
				return _1c0dbd57c_evalFnCall(_self_, _295936_kind.unsafe_cast_ptr<_1c0c67998_FnCallExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1c58405d2:;
			{
				return _1c0dc461b_evalSubIdent(_self_, _295936_kind.unsafe_cast_ptr<_1c0c66d82_SubIdentExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1c5840659:;
			{
				return _1c0dc495c_evalTuple(_self_, _295936_kind.unsafe_cast_ptr<_1c0c64863_TupleExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1c58406d1:;
			{
				return _1c0dc5199_evalBraceLit(_self_, _295936_kind.unsafe_cast_ptr<_1c0c6926e_BraceLit>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1c5840758:;
			{
				return _1c0dc54da_evalAnonFunc(_self_, _295936_kind.unsafe_cast_ptr<_1c0c715ea_FnDecl>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1c58407d0:;
			{
				return _1c0dc582b_evalBinary(_self_, _295936_kind.unsafe_cast_ptr<_1c0c67338_BinaryExpr>());;
			}
		}
		else {
			_case_begin_1c583eb64:;
			{
				return nullptr;;
			}
		}
		_match_end_1c583eb0e:;
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dc5ead_eval1(jule::Ptr<_1c0da8721_Eval> _self_, jule::Ptr<_1c0c63c6e_Expr> _300729_expr) {
	jule::Ptr<_1c0da69e9_Data> _300813_d = _1c0dc5b6c_evalExprKind(_self_, (*(_300729_expr))._field_Kind);;
	if (((_300813_d == nullptr) || ((*(_300813_d))._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1c0ddb831_Fn((*(_300813_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c584bec3:;
			{
				jule::Ptr<_1c0c98699_FnIns> _301517_f = _1c0ddb831_Fn((*(_300813_d))._field_Kind.ptr());;
				if (_1c0c99b2e_IsBuiltin(_301517_f.ptr())) {
					_1c0d2dbb3_pushErr((*_self_.alloc)._field_s.ptr(), (*_300729_expr.alloc)._field_Token, jule::Str::lit("built-in functions should be invoked", 36), jule::Slice<jule::Any>());
					goto _match_end_1c584b632;
				};
				if (((*_301517_f.alloc)._field_Generics.len() != (*((*_301517_f.alloc)._field_Decl))._field_Generics.len())) {
					_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, (*_300729_expr.alloc)._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				};
				if (((!((*(*_301517_f.alloc)._field_Decl.alloc)._field_Statically)) && _1c0c95e9e_IsMethod((*_301517_f.alloc)._field_Decl))) {
					_1c0d2dbb3_pushErr((*_self_.alloc)._field_s, (*_300729_expr.alloc)._field_Token, jule::Str::lit("methods should be invoked", 25), jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1c584b632:;
	};
	return _300813_d;;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dc62ee_eval(jule::Ptr<_1c0da8721_Eval> _self_, jule::Ptr<_1c0c63c6e_Expr> _303428_expr) {
	jule::Ptr<_1c0da69e9_Data> _303513_d = _1c0dc5ead_eval1(_self_, _303428_expr);;
	if ((_303513_d == nullptr)) {
		return nullptr;;
	};
	if (((((*_self_.alloc)._field_owner == nullptr) || (!((*((*_self_.alloc)._field_owner))._field_Constant))) && _1c0ddc601_comptime((*(_303513_d))._field_Kind.ptr()))) {
		_1c0d2dbb3_pushErr((*_self_.alloc)._field_s.ptr(), (*(_303428_expr))._field_Token, jule::Str::lit("compile-time evaluations cannot used as expression", 50), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _303513_d;;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dc6640_evalExpr1(jule::Ptr<_1c0da8721_Eval> _self_, jule::Ptr<_1c0c63c6e_Expr> _304933_expr) {
	jule::Ptr<_1c0da69e9_Data> _305013_d = _1c0dc5ead_eval1(_self_, _304933_expr);;
	{
		
		if ((_305013_d == nullptr)) {
			_case_begin_1c5854d66:;
			{
				return nullptr;;
			}
		}
		else if ((*(_305013_d))._field_Decl) {
			_case_begin_1c5854e10:;
			{
				_1c0da8c71_pushErr(_self_, (*(_304933_expr))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1c5854cde:;
			{
				return _305013_d;;
			}
		}
		_match_end_1c5854c89:;
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dc6981_evalExpr(jule::Ptr<_1c0da8721_Eval> _self_, jule::Ptr<_1c0c63c6e_Expr> _306532_expr) {
	jule::Ptr<_1c0da69e9_Data> _306613_d = _1c0dc62ee_eval(_self_, _306532_expr);;
	{
		
		if ((_306613_d == nullptr)) {
			_case_begin_1c5856c58:;
			{
				return nullptr;;
			}
		}
		else if ((*(_306613_d))._field_Decl) {
			_case_begin_1c5856d02:;
			{
				_1c0da8c71_pushErr(_self_, (*(_306532_expr))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1c5856bd1:;
			{
				return _306613_d;;
			}
		}
		_match_end_1c5856b7b:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c0da8721_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1c0dc6e48_unaryEval static__1c0dc7388_new(jule::Ptr<_1c0da8721_Eval> _308623_e) {
	return _1c0dc6e48_unaryEval{._field_e=_308623_e, };;
}



inline void _1c0dc7586_minus(_1c0dc6e48_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1c5858980:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1c0dda544_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c585863e:;
			{
				if ((!(_2021e5ad7_IsNum(_1c0dd82ab_Str((*(*(_self_))._field_d.alloc)._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1c0ddbab7_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c58586a5:;
			{
				if (((*(_1c0ddbab7_Struct((*(*(_self_))._field_d.alloc)._field_Kind)))._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1c58585c8:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1c58584c9:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1c0da7401_IsConst((*(_self_))._field_d)) {
		{
			
			if (_2021eab86_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1c585d259:;
				{
					_2021e9bb8_SetF64((*(*(_self_))._field_d.alloc)._field_Constant, (-(_2021e858a_ReadF64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else if (_2021ea14c_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1c585d17c:;
				{
					_2021e90e6_SetI64((*(*(_self_))._field_d.alloc)._field_Constant, (-(_2021e7a51_ReadI64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else if (_2021ea3d3_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1c585cd3b:;
				{
					_2021e90e6_SetI64((*(*(_self_))._field_d.alloc)._field_Constant, (-(_2021e8821_AsI64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else {
				_case_begin_1c585ccc5:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.minus, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3124:17"));;
				}
			}
			_match_end_1c585cc2b:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1c0c87d2b_UnaryExprModel>(_1c0c87d2b_UnaryExprModel{._field_Expr=jule::new_ptr<_1c0da69e9_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1c0dc7784_plus(_1c0dc6e48_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1c58637e2:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1c0dda544_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c58634a1:;
			{
				if ((!(_2021e5ad7_IsNum(_1c0dd82ab_Str((*(*(_self_))._field_d.alloc)._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1c0ddbab7_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c5863517:;
			{
				if (((*(_1c0ddbab7_Struct((*(*(_self_))._field_d.alloc)._field_Kind)))._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1c586343a:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1c586333b:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1c0da7401_IsConst((*(_self_))._field_d)) {
		{
			
			if (_2021eab86_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1c58680bb:;
				{
					_2021e9bb8_SetF64((*(*(_self_))._field_d.alloc)._field_Constant, (+(_2021e858a_ReadF64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else if (_2021ea14c_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1c5867ede:;
				{
					_2021e90e6_SetI64((*(*(_self_))._field_d.alloc)._field_Constant, (+(_2021e7a51_ReadI64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else if (_2021ea3d3_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1c5867b9d:;
				{
					_2021e90e6_SetI64((*(*(_self_))._field_d.alloc)._field_Constant, (+(_2021e8821_AsI64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else {
				_case_begin_1c5867b37:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.plus, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3169:17"));;
				}
			}
			_match_end_1c5867a8d:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1c0c87d2b_UnaryExprModel>(_1c0c87d2b_UnaryExprModel{._field_Expr=jule::new_ptr<_1c0da69e9_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1c0dc7982_caret(_1c0dc6e48_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1c586d632:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1c0dda544_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c586d2e1:;
			{
				if ((!(_2021e5510_IsInt(_1c0dd82ab_Str((*(*(_self_))._field_d.alloc)._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1c0ddbab7_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c586d357:;
			{
				if (((*(_1c0ddbab7_Struct((*(*(_self_))._field_d.alloc)._field_Kind)))._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1c586d27a:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1c586d17b:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1c0da7401_IsConst((*(_self_))._field_d)) {
		{
			
			if (_2021ea14c_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1c5872e0b:;
				{
					_2021e90e6_SetI64((*(*(_self_))._field_d.alloc)._field_Constant, (~(_2021e7a51_ReadI64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else if (_2021ea3d3_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1c5872d1d:;
				{
					_2021e939e_SetU64((*(*(_self_))._field_d.alloc)._field_Constant, (~(_2021e7cd7_ReadU64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else {
				_case_begin_1c5872977:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.caret, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3212:17"));;
				}
			}
			_match_end_1c58728cd:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1c0c87d2b_UnaryExprModel>(_1c0c87d2b_UnaryExprModel{._field_Expr=jule::new_ptr<_1c0da69e9_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1c0dc7b80_excl(_1c0dc6e48_unaryEval* _self_) {
	jule::Ptr<_1c0de09bc_Prim> _32269_t = _1c0dda544_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
	if (((_32269_t == nullptr) || (!(_1c0de3bbd_IsBool(_32269_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1c0da7401_IsConst((*(_self_))._field_d)) {
		{
			
			if (_2021ea669_IsBool((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1c5879176:;
				{
					_2021e9657_SetBool((*(*(_self_))._field_d.alloc)._field_Constant, (!(_2021e806d_ReadBool((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else {
				_case_begin_1c5878bd1:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.excl, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3240:17"));;
				}
			}
			_match_end_1c5878b15:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1c0c87d2b_UnaryExprModel>(_1c0c87d2b_UnaryExprModel{._field_Expr=jule::new_ptr<_1c0da69e9_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1c0dc7d7d_star(_1c0dc6e48_unaryEval* _self_) {
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1c0c87d2b_UnaryExprModel>(_1c0c87d2b_UnaryExprModel{._field_Expr=jule::new_ptr<_1c0da69e9_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
	{
		
		if ((_1c0ddaa61_Ptr((*(*(_self_))._field_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c587c8d8:;
			{
				if ((!(_1c0da9766_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1c0da8c71_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1c0de7cb0_Ptr> _326517_t = _1c0ddaa61_Ptr((*(*(_self_))._field_d.alloc)._field_Kind);;
				if (_1c0de87e9_IsUnsafe(_326517_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*(*(_self_))._field_d.alloc)._field_Kind=(*_326517_t.alloc)._field_Elem;
				(*(*(_self_))._field_d.alloc)._field_Mutable=true;
			}
		}
		else if ((_1c0dda7ca_Sptr((*(*(_self_))._field_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c587c5a8:;
			{
				(*(*(_self_))._field_d.alloc)._field_Kind=(*(_1c0dda7ca_Sptr((*(*(_self_))._field_d.alloc)._field_Kind)))._field_Elem;
			}
		}
		else {
			_case_begin_1c587c542:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1c587b563:;
	};
	(*(*(_self_))._field_d.alloc)._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=true;
}



inline void _1c0dc807b_amper(_1c0dc6e48_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1c588ad36:;
			{
				jule::Ptr<_1c0c88700_StructLitExprModel> _328717_lit = (*((*(_self_))._field_d))._field_Model.unsafe_cast_ptr<_1c0c88700_StructLitExprModel>();;
				_1c0dd0cba_makeStructLitAlloc(&((*(_self_))._field_d), &(_328717_lit));
			}
		}
		else {
			_case_begin_1c5883449:;
			{
				{
					
					if (_1c0e03ccc_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1c58889d2:;
						{
							(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(jule::new_ptr<_1c0de7cb0_Ptr>(_1c0de7cb0_Ptr{._field_Elem=(*(*(_self_))._field_d.alloc)._field_Kind}), 26)});
							(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1c0c87d2b_UnaryExprModel>(_1c0c87d2b_UnaryExprModel{._field_Expr=jule::new_ptr<_1c0da69e9_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
						}
					}
					else {
						_case_begin_1c588304d:;
						{
							(*(_self_))._field_d=nullptr;
							return;;
						}
					}
					_match_end_1c58838cd:;
				};
			}
		}
		_match_end_1c58833e4:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
}



inline void _1c0dc8279_typeDecl(_1c0dc6e48_unaryEval* _self_) {
	_1c0de9ca1_typeChecker _331213_tc = _1c0de9ca1_typeChecker{._field_s=(*((*(_self_))._field_e))._field_s, ._field_rootLookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_lookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_errorToken=(*((*(_self_))._field_u))._field_Op, };;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1c53dbcb6:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(_1c0e00191_buildPtrFromType(&_331213_tc, &((*(*(_self_))._field_d.alloc)._field_Kind)), 26)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Kind, &__jule_any_type84);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1c53da7ba:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(_1c0deea0e_buildSptrFromType(&_331213_tc, &((*(*(_self_))._field_d.alloc)._field_Kind)), 21)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Kind, &__jule_any_type84);
			}
		}
		else {
			_case_begin_1c588de49:;
			{
				_1c0da8c71_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, jule::Str::lit("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type4),jule::Any(_1c0dd82ab_Str((*((*(_self_))._field_d))._field_Kind.ptr()), &__jule_any_type4)}));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1c588e488:;
	};
	(*((*(_self_))._field_d))._field_Decl=true;
}



inline void _1c0dc8477_evalData(_1c0dc6e48_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1c53e06e3:;
			{
				jule::Ptr<_1c0dd7de3_TypeKind> _333717_prefix = (*((*(_self_))._field_e))._field_prefix;;
				(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
				(*(_self_))._field_d=_1c0dc62ee_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
				(*(*(_self_))._field_e.alloc)._field_prefix=_333717_prefix;
			}
		}
		else {
			_case_begin_1c53dec20:;
			{
				(*(_self_))._field_d=_1c0dc62ee_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
			}
		}
		_match_end_1c53e0308:;
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dc87b8_eval(_1c0dc6e48_unaryEval* _self_, jule::Ptr<_1c0c65d2b_UnaryExpr> _334627_u) {
	(*(_self_))._field_u=_334627_u;
	_1c0dc8477_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*((*(_self_))._field_d))._field_Decl) {
		_1c0dc8279_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1c0dd7de3_TypeKind> _33579_kind = (*((*(_self_))._field_d))._field_Kind;;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1c322248e:;
			{
				_1c0dc7586_minus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1c3222505:;
			{
				_1c0dc7784_plus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1c322256b:;
			{
				_1c0dc7982_caret(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1c32225d2:;
			{
				_1c0dc7b80_excl(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1c3222648:;
			{
				_1c0dc7d7d_star(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1c32226ae:;
			{
				_1c0dc807b_amper(_self_);
			}
		}
		else {
			_case_begin_1c3221e50:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1c3222428:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1c3222ba9:;
			{
				_1c0da8c71_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str::lit("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type4),jule::Any(_1c0dd82ab_Str(_33579_kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		else if (_1c0da7401_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1c3220b63:;
			{
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Constant, &__jule_any_type19);
			}
		}
		_match_end_1c322464a:;
	};
	return (*(_self_))._field_d;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0dc6e48_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1c0dc8dd4_binaryEval static__1c0dc9489_newPlain(jule::Ptr<_1c0da8721_Eval> _339428_e) {
	return _1c0dc8dd4_binaryEval{._field_e=_339428_e, };;
}



inline _1c0dc8dd4_binaryEval static__1c0dc980d_new(jule::Ptr<_1c0da8721_Eval> _340023_e, jule::Ptr<_1c0c49480_Token> _340037_op) {
	return _1c0dc8dd4_binaryEval{._field_e=_340023_e, ._field_op=_340037_op};;
}



inline jule::Bool _1c0dc9a94_checkTypeCompatibility(_1c0dc8dd4_binaryEval* _self_) {
	return _1c0d37a02_checkTypeCompatibility1((*((*(_self_))._field_e))._field_s, &((*((*(_self_))._field_l))._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));;
}



inline jule::Bool _1c0dc9d2a_checkStructCommonOperatorCompatibility(_1c0dc8dd4_binaryEval* _self_) {
	jule::Ptr<_1c0c98699_FnIns> _341417_overload = nullptr;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1c322a299:;
			{
				_341417_overload=(*(_1c0ddbab7_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1c3229e69:;
			{
				_341417_overload=(*(_1c0ddbab7_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1c3229ed0:;
			{
				_341417_overload=(*(_1c0ddbab7_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Add;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1c322a046:;
			{
				_341417_overload=(*(_1c0ddbab7_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1c322a0ac:;
			{
				_341417_overload=(*(_1c0ddbab7_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Div;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1c322a123:;
			{
				_341417_overload=(*(_1c0ddbab7_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1c322a189:;
			{
				_341417_overload=(*(_1c0ddbab7_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1c322b795:;
			{
				_341417_overload=(*(_1c0ddbab7_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1c322b80b:;
			{
				_341417_overload=(*(_1c0ddbab7_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1c322b872:;
			{
				_341417_overload=(*(_1c0ddbab7_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1c3229908:;
			{
				_1c0da8c71_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c0dd82ab_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return false;;
			}
		}
		_match_end_1c3229e03:;
	};
	if ((_341417_overload == nullptr)) {
		_1c0da8c71_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c0dd82ab_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
		return false;;
	};
	jule::Ptr<_1c0c976ed_ParamIns> _344613_p = (*(_341417_overload))._field_Params[1LL];;
	return _1c0d366c1_checkAssignType((*(*(_self_))._field_e.alloc)._field_s, (*((*(_344613_p))._field_Decl))._field_Reference, &((*_344613_p.alloc)._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op);;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dca0b1_evalComptimeTypeInfo(_1c0dc8dd4_binaryEval* _self_) {
	jule::Ptr<_1c0cc0418_comptimeTypeInfo> _345113_r = _1c0ddde0a_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((_345113_r == nullptr)) {
		_1c0da8c71_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("comptimeTypeInfo", 16), &__jule_any_type4),jule::Any(_1c0dd82ab_Str((*(*(_self_))._field_r.alloc)._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c0cc0418_comptimeTypeInfo> _345613_l = _1c0ddde0a_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind);;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1c323a41e:;
			{
				jule::Ptr<_2021e617b_Const> _345917_constant = static__2021e6b4e_NewBool(_1c0dd85ec_Equal((*(_345613_l))._field_base, (*(_345113_r))._field_base));;
				return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec9578_primBool, ._field_Model=jule::Any(_345917_constant, &__jule_any_type19), ._field_Constant=_345917_constant});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1c323b7b6:;
			{
				jule::Ptr<_2021e617b_Const> _346617_constant = static__2021e6b4e_NewBool((!(_1c0dd85ec_Equal((*(_345613_l))._field_base, (*(_345113_r))._field_base))));;
				return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec9578_primBool, ._field_Model=jule::Any(_346617_constant, &__jule_any_type19), ._field_Constant=_346617_constant});;
			}
		}
		else {
			_case_begin_1c3239c8c:;
			{
				_1c0da8c71_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c0dd82ab_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c323a078:;
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dca347_evalNil(_1c0dc8dd4_binaryEval* _self_) {
	if ((!(_1c0dd9c91_NilCompatible((*((*(_self_))._field_r))._field_Kind.ptr())))) {
		_1c0da8c71_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4),jule::Any(_1c0dd82ab_Str((*(*(_self_))._field_r.alloc)._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1c324107e:;
			{
				return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec9578_primBool, });;
			}
		}
		else {
			_case_begin_1c323de28:;
			{
				_1c0da8c71_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c3240bd8:;
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dca5cd_evalEnum(_1c0dc8dd4_binaryEval* _self_) {
	jule::Ptr<_1c0cab27d_Enum> _349713_enm = _1c0ddace7_Enum((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1c324336c:;
			{
				jule::Ptr<_1c0dd7de3_TypeKind> _350117_rkind = (*((*(_self_))._field_r))._field_Kind;;
				if ((_1c0ddace7_Enum((*(*(_self_))._field_r.alloc)._field_Kind) != nullptr)) {
					_350117_rkind=(*((*(_1c0ddace7_Enum((*(*(_self_))._field_r.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
				if ((!(_1c0d3712d_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*(*(_349713_enm))._field_Kind.alloc)._field_Kind), &(_350117_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec9578_primBool, });;
			}
		}
		_match_end_1c3243306:;
	};
	if (((_1c0ddace7_Enum((*(*(_self_))._field_r.alloc)._field_Kind) == nullptr) || (_349713_enm != _1c0ddace7_Enum((*(*(_self_))._field_r.alloc)._field_Kind)))) {
		_1c0da8c71_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any((*_349713_enm.alloc)._field_Ident, &__jule_any_type4),jule::Any(_1c0dd82ab_Str((*(*(_self_))._field_r.alloc)._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1c3248d12:;
			{
				if ((!(_2021e5ad7_IsNum(_1c0dd82ab_Str((*(*_349713_enm.alloc)._field_Kind.alloc)._field_Kind.ptr()))))) {
					_1c0da8c71_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*_349713_enm.alloc)._field_Ident, &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec9578_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1c3249d57:;
			{
				jule::Ptr<_1c0caa711_EnumItem> _353113_first = (*_349713_enm.alloc)._field_Items[0LL];;
				{
					
					if (_2021ea14c_IsI64((*((*((*(_353113_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1c324d531:;
						{
							if ((_2021e7a51_ReadI64((*(*(*_353113_first.alloc)._field_Value.alloc)._field_Data.alloc)._field_Constant) == 0LL)) {
								goto _julec_label_1c325346a;
							};
							goto _julec_label_1c324e664;
						}
					}
					else if (_2021ea3d3_IsU64((*((*((*(_353113_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1c324d454:;
						{
							if ((_2021e7cd7_ReadU64((*(*(*_353113_first.alloc)._field_Value.alloc)._field_Data.alloc)._field_Constant) == 0LLU)) {
								goto _julec_label_1c325346a;
							};
							goto _julec_label_1c324e664;
						}
					}
					else {
						_case_begin_1c324d08b:;
						{
							jule::panic(jule::Str::lit("unimplemented enum type, this panic call should be unreachable", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:3544:17"));;
						}
					}
					_match_end_1c324d025:;
				};
				_julec_label_1c324e664:;
				_1c0da8c71_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("the @ enum type is not supports @ operator", 42), jule::Slice<jule::Any>::make({jule::Any((*_349713_enm.alloc)._field_Ident, &__jule_any_type4),jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				_1c0da90d4_pushSuggestion((*(_self_))._field_e, jule::Str::lit("define default enum field (the first one is default) with zero value to use & operator", 86), jule::Slice<jule::Any>());
				_julec_label_1c325346a:;
				goto _case_begin_1c3249dbd;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1c3249dbd:;
			{
				if (((_1c0dda544_Prim((*(*_349713_enm.alloc)._field_Kind.alloc)._field_Kind.ptr()) == nullptr) || (!(_2021e5510_IsInt(_1c0de0d0d_Str(_1c0dda544_Prim((*(*_349713_enm.alloc)._field_Kind.alloc)._field_Kind).ptr())))))) {
					_1c0da8c71_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*_349713_enm.alloc)._field_Ident, &__jule_any_type4)}));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1c32433d3:;
			{
				_1c0da8c71_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*_349713_enm.alloc)._field_Ident, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c324896b:;
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dca864_evalTypeEnum(_1c0dc8dd4_binaryEval* _self_) {
	jule::Ptr<_1c0cac988_TypeEnum> _356413_enm = _1c0ddb07d_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr());;
	if ((!(_1c0dc9a94_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1c32581b7:;
			{
				return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec9578_primBool, });;
			}
		}
		else {
			_case_begin_1c325756d:;
			{
				_1c0da8c71_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c0caccc9_Str(_356413_enm.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c3257cbb:;
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dcaaea_evalSptr(_1c0dc8dd4_binaryEval* _self_) {
	if ((!(_1c0dc9a94_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1c325a593:;
			{
				return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec9578_primBool, });;
			}
		}
		else {
			_case_begin_1c32595d6:;
			{
				_1c0da8c71_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c0dd82ab_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c325a1ec:;
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dcad81_evalPtr(_1c0dc8dd4_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1c325c7e8:;
			{
				if ((!(_1c0dc9a94_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec9578_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1c325db6d:;
			{
				if ((_1c0ddaa61_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) == nullptr)) {
					std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				};
				if (_1c0de87e9_IsUnsafe(_1c0ddaa61_Ptr((*(*(_self_))._field_l.alloc)._field_Kind).ptr())) {
					_1c0da8c71_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c0dd82ab_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
				};
				if ((!(_1c0dd1e53_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1c0da8c71_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("type @ is incompatible to use for pointer arithmetic", 52), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1c325986c:;
			{
				_1c0da8c71_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c0dd82ab_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c325bd47:;
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dcb117_evalArr(_1c0dc8dd4_binaryEval* _self_) {
	if ((!(_1c0dc9a94_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1c326536c:;
			{
				return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec9578_primBool, });;
			}
		}
		else {
			_case_begin_1c3264b63:;
			{
				_1c0da8c71_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c0dd82ab_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c3264ec6:;
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dcb39d_evalSlc(_1c0dc8dd4_binaryEval* _self_) {
	if ((!(_1c0dc9a94_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1c3267a01:;
			{
				return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec9578_primBool, });;
			}
		}
		else {
			_case_begin_1c3266a44:;
			{
				_1c0da8c71_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c0dd82ab_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c326765a:;
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dcb634_evalStruct(_1c0dc8dd4_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1c3269371:;
			{
				if (((*(_1c0ddbab7_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Gt == nullptr)) {
					_1c0da8c71_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c0dd82ab_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec9578_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1c326998c:;
			{
				if (((*(_1c0ddbab7_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_GtEq == nullptr)) {
					_1c0da8c71_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c0dd82ab_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec9578_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1c3269a03:;
			{
				if (((*(_1c0ddbab7_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Lt == nullptr)) {
					_1c0da8c71_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c0dd82ab_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec9578_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1c3269a69:;
			{
				if (((*(_1c0ddbab7_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_LtEq == nullptr)) {
					_1c0da8c71_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c0dd82ab_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec9578_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1c3269ad0:;
			{
				if ((!(_1c0dc9a94_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec9578_primBool, });;
			}
		}
		_match_end_1c32692a5:;
	};
	if ((!(_1c0dc9d2a_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dcb8ba_evalTrait(_1c0dc8dd4_binaryEval* _self_) {
	if ((!(_1c0dc9a94_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1c3275932:;
			{
				return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec9578_primBool, });;
			}
		}
		else {
			_case_begin_1c3274d2c:;
			{
				_1c0da8c71_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c0dd82ab_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c327558b:;
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dcbb51_evalAny(_1c0dc8dd4_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1c3277b87:;
			{
				return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec9578_primBool, });;
			}
		}
		else {
			_case_begin_1c3277390:;
			{
				_1c0da8c71_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("any", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c32771d6:;
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dcbdd7_evalBool(_1c0dc8dd4_binaryEval* _self_) {
	if ((!(_1c0dc9a94_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(54LLU) || _match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1c3279d65:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1c3278da8:;
			{
				_1c0da8c71_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c0dd82ab_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c32799be:;
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dcc16d_evalStr(_1c0dc8dd4_binaryEval* _self_) {
	jule::Str _376313_rk = _1c0dd82ab_Str((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((!_376313_rk.equal("str", 3))) {
		_1c0da8c71_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_376313_rk, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1c327db49:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1c327e9d5:;
			{
				return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec9578_primBool, });;
			}
		}
		else {
			_case_begin_1c327c939:;
			{
				_1c0da8c71_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("str", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c327d74d:;
	};
}



inline void _1c0dcc36b_setTypeToGreater(_1c0dc8dd4_binaryEval* _self_) {
	jule::Ptr<_1c0de09bc_Prim> _37889_lp = _1c0dda544_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	jule::Ptr<_1c0de09bc_Prim> _37899_rp = _1c0dda544_Prim((*((*(_self_))._field_r))._field_Kind);;
	if (_1c0da7401_IsConst((*(_self_))._field_l)) {
		if ((!(_1c0da7401_IsConst((*(_self_))._field_r)))) {
			(*(*(_self_))._field_l.alloc)._field_Kind=(*(*(_self_))._field_r.alloc)._field_Kind;
			(*((*(*(_self_))._field_l.alloc)._field_Constant))._field_Kind=(*(_37899_rp))._field_Kind;
			return;;
		};
		goto _julec_label_1c3284468;
	};
	if (_1c0da7401_IsConst((*(_self_))._field_r)) {
		(*(*(*(_self_))._field_r.alloc)._field_Constant.alloc)._field_Kind=(*(_37889_lp))._field_Kind;
		return;;
	};
	_julec_label_1c3284468:;
	if (((*(*(_self_))._field_l.alloc)._field_untyped && (!((*(*(_self_))._field_r.alloc)._field_untyped)))) {
		(*(*(_self_))._field_l.alloc)._field_Kind=(*(*(_self_))._field_r.alloc)._field_Kind;
		if (_1c0da7401_IsConst((*(_self_))._field_l)) {
			(*(*(*(_self_))._field_l.alloc)._field_Constant.alloc)._field_Kind=(*_37899_rp.alloc)._field_Kind;
		};
		(*(*(_self_))._field_l.alloc)._field_untyped=false;
		return;;
	} else if (((!((*(*(_self_))._field_l.alloc)._field_untyped)) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
		return;;
	};
	if (_2021e3cc2_IsGreater((*_37899_rp.alloc)._field_Kind, (*_37889_lp.alloc)._field_Kind)) {
		(*(*(_self_))._field_l.alloc)._field_Kind=(*(*(_self_))._field_r.alloc)._field_Kind;
		if (_1c0da7401_IsConst((*(_self_))._field_l)) {
			(*(*(*(_self_))._field_l.alloc)._field_Constant.alloc)._field_Kind=(*_37899_rp.alloc)._field_Kind;
		};
	};
}



inline void _1c0dcc624_checkModData(_1c0dc8dd4_binaryEval* _self_, jule::Ptr<_1c0da69e9_Data>* _382136_d) {
	if ((!(_1c0da7401_IsConst((*(_382136_d)).ptr())))) {
		if (((_1c0dda544_Prim((*((*(_382136_d))))._field_Kind.ptr()) == nullptr) || (!(_2021e5510_IsInt((*(_1c0dda544_Prim((*((*(_382136_d))))._field_Kind)))._field_Kind))))) {
			_1c0da8c71_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1c0d8c98b_sigAssignable(jule::Str::lit("i64", 3), _382136_d)) {
			_case_begin_1c328c273:;
			{
				_2021e90e6_SetI64((*((*(_382136_d))))._field_Constant.ptr(), _2021e8821_AsI64((*((*(_382136_d))))._field_Constant));
			}
		}
		else if (_1c0d8cd54_unsigAssignable(jule::Str::lit("u64", 3), _382136_d)) {
			_case_begin_1c328be54:;
			{
				_2021e939e_SetU64((*((*(_382136_d))))._field_Constant.ptr(), _2021e8aa7_AsU64((*((*(_382136_d))))._field_Constant));
			}
		}
		else {
			_case_begin_1c328bddd:;
			{
				_1c0da8c71_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c328bd44:;
	};
}



inline void _1c0dcc822_mod(_1c0dc8dd4_binaryEval* _self_) {
	_1c0dcc624_checkModData(_self_, &((*(_self_))._field_l));
	_1c0dcc624_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1c0dccc1d_numbersAreCompatibile(_1c0dc8dd4_binaryEval* _self_, jule::Str* _384337_lk, jule::Str* _384347_rk) {
	if ((!(_2021e5ad7_IsNum((*(_384347_rk)))))) {
		return false;;
	};
	if ((_1c0da7401_IsConst((*(_self_))._field_l.ptr()) && (*(*(_self_))._field_l.alloc)._field_untyped)) {
		return true;;
	};
	if ((*(_384337_lk)).equal("f32", 3)) {
		if ((_1c0da7401_IsConst((*(_self_))._field_r.ptr()) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1c0d8c617_floatAssignable(_384337_lk, &((*(_self_))._field_r));;
		};
		return (*(_384347_rk)).equal("f32", 3);;
	};
	if ((*(_384337_lk)).equal("f64", 3)) {
		if ((_1c0da7401_IsConst((*(_self_))._field_r) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1c0d8c617_floatAssignable(_384337_lk, &((*(_self_))._field_r));;
		};
		return (*(_384347_rk)).equal("f64", 3);;
	};
	if ((_1c0da7401_IsConst((*(_self_))._field_r) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
		return _1c0d8d1c8_intAssignable((*(_384337_lk)), &((*(_self_))._field_r));;
	};
	return ((*(_384337_lk)) == (*(_384347_rk)));;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dccea4_evalFloat(_1c0dc8dd4_binaryEval* _self_) {
	jule::Str _38699_lk = (*(_1c0dda544_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _38709_rk = (*(_1c0dda544_Prim((*((*(_self_))._field_r))._field_Kind)))._field_Kind;;
	if ((!(_1c0dccc1d_numbersAreCompatibile(_self_, &(_38699_lk), &(_38709_rk))))) {
		_1c0d3754b_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1c3297190:;
			{
				if (((!(_1c0da7401_IsConst((*(_self_))._field_l))) || (!(_1c0d8d1c8_intAssignable(jule::Str::lit("i64", 3), &((*(_self_))._field_l)))))) {
					_1c0da8c71_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38699_lk, &__jule_any_type4),jule::Any(_38709_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				if (((!(_1c0da7401_IsConst((*(_self_))._field_r))) || (!(_1c0d8d1c8_intAssignable(jule::Str::lit("u64", 3), &((*(_self_))._field_r)))))) {
					_1c0da8c71_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38699_lk, &__jule_any_type4),jule::Any(_38709_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				_2021e90e6_SetI64((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), _2021e8821_AsI64((*(*(_self_))._field_l.alloc)._field_Constant));
				_2021e939e_SetU64((*(*(_self_))._field_r.alloc)._field_Constant, _2021e8aa7_AsU64((*(*(_self_))._field_r.alloc)._field_Constant));
				if ((!(_1c0dd177c_isOkForShifting(&((*(_self_))._field_r))))) {
					_1c0da8c71_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1c3297129:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1c3297811:;
			{
				_1c0dcc36b_setTypeToGreater(_self_);
				return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec9578_primBool, });;
			}
		}
		_match_end_1c32977ab:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1c59e7cea:;
			{
				_1c0dcc36b_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1c59e89dd:;
			{
				if ((!(_2021e5510_IsInt(_38709_rk)))) {
					_1c0da8c71_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38699_lk, &__jule_any_type4),jule::Any(_38709_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				_1c0dcc822_mod(_self_);
				_1c0dcc36b_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1c32978ee:;
			{
				_1c0da8c71_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for floating-point type(s)", 52), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c59e7239:;
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dcd23a_evalInt(_1c0dc8dd4_binaryEval* _self_) {
	jule::Str _39339_lk = (*(_1c0dda544_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _39349_rk = (*(_1c0dda544_Prim((*((*(_self_))._field_r))._field_Kind)))._field_Kind;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1c59ec519:;
			{
				if (((!(_2021e5510_IsInt(_39339_lk))) || (!(_2021e5510_IsInt(_39349_rk))))) {
					_1c0da8c71_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_39339_lk, &__jule_any_type4),jule::Any(_39349_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				if ((!(_1c0dd177c_isOkForShifting(&((*(_self_))._field_r))))) {
					_1c0da8c71_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1c59ec805:;
	};
	if ((!(_1c0dccc1d_numbersAreCompatibile(_self_, &(_39339_lk), &(_39349_rk))))) {
		_1c0d3754b_pushCompatiblityError((*(*(_self_))._field_e.alloc)._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1c5a01133:;
			{
				return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec9578_primBool, });;
			}
		}
		_match_end_1c5a010bc:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(65LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1c5a02909:;
			{
				_1c0dcc36b_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1c5a035ec:;
			{
				_1c0dcc822_mod(_self_);
				_1c0dcc36b_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1c5a01221:;
			{
				_1c0da8c71_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for integer type(s)", 45), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c5a024ec:;
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dcd4c1_evalPrim(_1c0dc8dd4_binaryEval* _self_) {
	jule::Ptr<_1c0de09bc_Prim> _39909_prim = _1c0dda544_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		
		if (_1c0de3bbd_IsBool(_39909_prim.ptr())) {
			_case_begin_1c5a05cb4:;
			{
				return _1c0dcbdd7_evalBool(_self_);;
			}
		}
		else if (_1c0de3e54_IsStr(_39909_prim.ptr())) {
			_case_begin_1c5a05d5d:;
			{
				return _1c0dcc16d_evalStr(_self_);;
			}
		}
		_match_end_1c5a05c4d:;
	};
	if ((_1c0dda544_Prim((*((*(_self_))._field_r))._field_Kind) == nullptr)) {
		_1c0da8c71_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1c0de0d0d_Str(_39909_prim.ptr()), &__jule_any_type4),jule::Any(_1c0dd82ab_Str((*(*(_self_))._field_r.alloc)._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		
		if (_2021e5851_IsFloat((*_39909_prim.alloc)._field_Kind)) {
			_case_begin_1c5a087de:;
			{
				return _1c0dccea4_evalFloat(_self_);;
			}
		}
		else if (_2021e5510_IsInt((*_39909_prim.alloc)._field_Kind)) {
			_case_begin_1c5a08877:;
			{
				return _1c0dcd23a_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1c5a08778:;
			{
				return nullptr;;
			}
		}
		_match_end_1c5a05e07:;
	};
}



inline void _1c0dcd6be_checkSpecialCases(_1c0dc8dd4_binaryEval* _self_) {
	if (((!(_1c0dd94dd_Comparable((*((*(_self_))._field_l))._field_Kind.ptr()))) && (!(_1c0dd8ec1_IsNil((*((*(_self_))._field_r))._field_Kind))))) {
		_1c0da8c71_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
	} else if (((!(_1c0dd94dd_Comparable((*((*(_self_))._field_r))._field_Kind.ptr()))) && (!(_1c0dd8ec1_IsNil((*((*(_self_))._field_l))._field_Kind))))) {
		_1c0da8c71_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*(*(_self_))._field_r.alloc)._field_Kind), &__jule_any_type4)}));
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dcd955_evalOp(_1c0dc8dd4_binaryEval* _self_) {
	_1c0dcd6be_checkSpecialCases(_self_);
	{
		
		if (_1c0dd9257_Void((*((*(_self_))._field_l))._field_Kind.ptr())) {
			_case_begin_1c5a0e1a7:;
			{
				_1c0da8c71_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("void", 4), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		else if ((_1c0ddde0a_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c5a1054e:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1c5a105b5;
			}
		}
		else if ((_1c0ddde0a_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c5a105b5:;
			{
				return _1c0dca0b1_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_1c0dda544_Prim((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr) && _1c0de41da_IsAny(_1c0dda544_Prim((*(*(_self_))._field_r.alloc)._field_Kind).ptr()))) {
			_case_begin_1c5a0e020:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1c5a0e086;
			}
		}
		else if (_1c0dd8ec1_IsNil((*((*(_self_))._field_r))._field_Kind.ptr())) {
			_case_begin_1c5a0e086:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1c5a106a3;
			}
		}
		else if (_1c0dd8ec1_IsNil((*((*(_self_))._field_l))._field_Kind.ptr())) {
			_case_begin_1c5a106a3:;
			{
				return _1c0dca347_evalNil(_self_);;
			}
		}
		else if (((_1c0dda544_Prim((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr) && _1c0de41da_IsAny(_1c0dda544_Prim((*(*(_self_))._field_l.alloc)._field_Kind).ptr()))) {
			_case_begin_1c5a10719:;
			{
				return _1c0dcbb51_evalAny(_self_);;
			}
		}
		else if ((_1c0ddb07d_TypeEnum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c5a10780:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1c5a107e6;
			}
		}
		else if ((_1c0ddb07d_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c5a107e6:;
			{
				return _1c0dca864_evalTypeEnum(_self_);;
			}
		}
		else if ((_1c0ddace7_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c5a1085c:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1c5a108c3;
			}
		}
		else if ((_1c0ddace7_Enum((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c5a108c3:;
			{
				return _1c0dca5cd_evalEnum(_self_);;
			}
		}
		else if ((_1c0dda7ca_Sptr((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c5a10939:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1c5a109a0;
			}
		}
		else if ((_1c0dda7ca_Sptr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c5a109a0:;
			{
				return _1c0dcaaea_evalSptr(_self_);;
			}
		}
		else if ((_1c0ddaa61_Ptr((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c5a10a16:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1c5a10a7c;
			}
		}
		else if ((_1c0ddaa61_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c5a10a7c:;
			{
				return _1c0dcad81_evalPtr(_self_);;
			}
		}
		else if ((_1c0ddb314_Arr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c5a10ae3:;
			{
				return _1c0dcb117_evalArr(_self_);;
			}
		}
		else if ((_1c0ddb59a_Slc((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c5a10b59:;
			{
				return _1c0dcb39d_evalSlc(_self_);;
			}
		}
		else if ((_1c0ddbd4d_Trait((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c5a10bc0:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1c5a10c36;
			}
		}
		else if ((_1c0ddbd4d_Trait((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c5a10c36:;
			{
				return _1c0dcb8ba_evalTrait(_self_);;
			}
		}
		else if ((_1c0ddbab7_Struct((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c5a10c9c:;
			{
				return _1c0dcb634_evalStruct(_self_);;
			}
		}
		else if ((_1c0dda544_Prim((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c5a10d13:;
			{
				return _1c0dcd4c1_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1c5a0d915:;
			{
				_1c0da8c71_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c0dd82ab_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c5a0dd00:;
	};
}



inline void _1c0dcdc0d_evalConst(_1c0dc8dd4_binaryEval* _self_, jule::Ptr<_1c0da69e9_Data>* _408133_d) {
	{
		
		if (((*(_408133_d)) == nullptr) || ((*((*(_self_))._field_l))._field_Model == nullptr) || ((*((*(_self_))._field_r))._field_Model == nullptr)) {
			_case_begin_1c5a23b5b:;
			{
				return;;
			}
		}
		else if ((!(_1c0da7401_IsConst((*(_self_))._field_l.ptr()))) || (!(_1c0da7401_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1c5a24211:;
			{
				(*((*(_408133_d))))._field_Constant=nullptr;
				(*((*(_408133_d))))._field_untyped=false;
				return;;
			}
		}
		_match_end_1c5a23a7e:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1c5a242dd:;
			{
				(*((*(_408133_d))))._field_Constant=static__2021e6b4e_NewBool(_2021ebc31_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1c5a2671e:;
			{
				(*((*(_408133_d))))._field_Constant=static__2021e6b4e_NewBool((!(_2021ebc31_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1c5a26785:;
			{
				(*((*(_408133_d))))._field_Constant=static__2021e6b4e_NewBool(_2021eb8e0_Or((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1c5a267eb:;
			{
				(*((*(_408133_d))))._field_Constant=static__2021e6b4e_NewBool(_2021eb59e_And((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1c5a26862:;
			{
				(*((*(_408133_d))))._field_Constant=static__2021e6b4e_NewBool(_2021ec704_Gt((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1c5a268c8:;
			{
				(*((*(_408133_d))))._field_Constant=static__2021e6b4e_NewBool(_2021ec072_Lt((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1c5a26950:;
			{
				(*((*(_408133_d))))._field_Constant=static__2021e6b4e_NewBool(_2021eca45_GtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1c5a269c7:;
			{
				(*((*(_408133_d))))._field_Constant=static__2021e6b4e_NewBool(_2021ec3b3_LtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1c5a26a4e:;
			{
				_2021ecd86_Add((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_408133_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1c5a26ac6:;
			{
				_2021ed1c7_Sub((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_408133_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1c5a26b4d:;
			{
				_2021ed518_Mul((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_408133_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1c5a26bc5:;
			{
				jule::Bool _412113_ok = _2021ed859_Div((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));;
				if (((!(_412113_ok)) && (_2021e8d3d_AsF64((*(*(_self_))._field_r.alloc)._field_Constant) == 0LL))) {
					_1c0da8c71_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_408133_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
				jule::Ptr<_1c0de09bc_Prim> _412617_prim = _1c0dda544_Prim((*((*(_408133_d))))._field_Kind.ptr());;
				{
					
					if (_2021e4e38_IsSigInt((*(_412617_prim))._field_Kind)) {
						_case_begin_1c5a37c5d:;
						{
							_2021e90e6_SetI64((*((*(_408133_d))))._field_Constant, _2021e8821_AsI64((*((*(_408133_d))))._field_Constant));
						}
					}
					else if (_2021e5246_IsUnsigInt((*(_412617_prim))._field_Kind)) {
						_case_begin_1c5a37d07:;
						{
							_2021e939e_SetU64((*((*(_408133_d))))._field_Constant, _2021e8aa7_AsU64((*((*(_408133_d))))._field_Constant));
						}
					}
					_match_end_1c5a37c08:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1c5a26c4c:;
			{
				jule::Bool _413413_ok = _2021edb9a_Mod((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));;
				if (((!(_413413_ok)) && (_2021e8d3d_AsF64((*(*(_self_))._field_r.alloc)._field_Constant) == 0LL))) {
					_1c0da8c71_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_408133_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1c5a26cc4:;
			{
				_2021ee32c_BitwiseOr((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_408133_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1c5a26d4b:;
			{
				_2021ededb_BitwiseAnd((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_408133_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1c5a26dc3:;
			{
				_2021ee66d_Xor((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_408133_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1c5a26e4a:;
			{
				_2021ee9ae_Lshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_408133_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1c5a26ec2:;
			{
				_2021eed00_Rshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_408133_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		_match_end_1c5a25a1a:;
	};
	(*((*(_408133_d))))._field_Model=jule::Any((*((*(_408133_d))))._field_Constant, &__jule_any_type19);
	_1c0dd30b9_applyCastModelByEnum(_408133_d, _1c0ddace7_Enum((*((*(_408133_d))))._field_Kind.ptr()), &((*(_self_))._field_op));
}



inline void _1c0dcdeb6_checkData(_1c0dc8dd4_binaryEval* _self_, jule::Ptr<_1c0da69e9_Data>* _415933_d) {
	jule::Ptr<_1c0c98699_FnIns> _41609_f = _1c0ddb831_Fn((*((*(_415933_d))))._field_Kind.ptr());;
	if ((((_41609_f != nullptr) && ((*_41609_f.alloc)._field_Decl != nullptr)) && _1c0c95e9e_IsMethod((*_41609_f.alloc)._field_Decl))) {
		_1c0da8c71_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("invalid expression used for binary operation", 44), jule::Slice<jule::Any>());
	};
}



inline void _1c0dce1b4_checkDatas(_1c0dc8dd4_binaryEval* _self_) {
	_1c0dcdeb6_checkData(_self_, &((*(_self_))._field_l));
	_1c0dcdeb6_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1c0dce46c_setModel(_1c0dc8dd4_binaryEval* _self_, jule::Ptr<_1c0da69e9_Data>* _417132_d) {
	if (_1c0da7401_IsConst((*(_417132_d)).ptr())) {
		if (((_1c0da7401_IsConst((*(_self_))._field_l.ptr()) && _1c0da7401_IsConst((*(_self_))._field_r.ptr())) || (((*(*(_self_))._field_l.alloc)._field_Model == nullptr) && ((*(*(_self_))._field_r.alloc)._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_1c0da69e9_Data> _418013_l;
	jule::Ptr<_1c0da69e9_Data> _418020_r;
	({
		jule::Ptr<_1c0da69e9_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1c0da69e9_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_418013_l = ___jule_assign_arg;
		_418020_r = _1___jule_assign_arg;
	});
	if ((!(_1c0da7742_GoodOperand(_418013_l, &(_418020_r))))) {
		std::swap(_418013_l, _418020_r);
	};
	(*((*(_417132_d))))._field_Model=jule::Any(jule::new_ptr<_1c0c87952_BinaryExprModel>(_1c0c87952_BinaryExprModel{._field_Left=jule::new_ptr<_1c0c87457_OperandExprModel>(_1c0c87457_OperandExprModel{._field_Kind=(*_418013_l.alloc)._field_Kind, ._field_Model=(*_418013_l.alloc)._field_Model}), ._field_Right=jule::new_ptr<_1c0c87457_OperandExprModel>(_1c0c87457_OperandExprModel{._field_Kind=(*_418020_r.alloc)._field_Kind, ._field_Model=(*_418020_r.alloc)._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type111);
}



inline void _1c0dce725_postEval(_1c0dc8dd4_binaryEval* _self_, jule::Ptr<_1c0da69e9_Data>* _419832_d) {
	(*((*(_419832_d))))._field_Lvalue=false;
	_1c0dce46c_setModel(_self_, _419832_d);
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dceb21_solveExplicit(_1c0dc8dd4_binaryEval* _self_, jule::Ptr<_1c0da69e9_Data>* _420337_l, jule::Ptr<_1c0da69e9_Data>* _420352_r) {
	({
		jule::Ptr<_1c0da69e9_Data> ___jule_assign_arg = (*(_420337_l));
		jule::Ptr<_1c0da69e9_Data> _1___jule_assign_arg = (*(_420352_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1c0dce1b4_checkDatas(_self_);
	jule::Ptr<_1c0da69e9_Data> _420813_d = _1c0dcd955_evalOp(_self_);;
	({
		jule::Ptr<_1c0da69e9_Data> ___jule_assign_arg = (*(_420337_l));
		jule::Ptr<_1c0da69e9_Data> _1___jule_assign_arg = (*(_420352_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1c0dcdc0d_evalConst(_self_, &(_420813_d));
	if ((_420813_d != nullptr)) {
		(*_420813_d.alloc)._field_Mutable=true;
		_1c0dce725_postEval(_self_, &(_420813_d));
	};
	return _420813_d;;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dcee62_eval(_1c0dc8dd4_binaryEval* _self_, jule::Ptr<_1c0c67338_BinaryExpr>* _422328_op) {
	if (((*((*((*(_422328_op))))._field_Op))._field_Id == static_cast<jule::U64>(71LLU))) {
		_1c0da8c71_pushErr((*(_self_))._field_e.ptr(), (*((*(_422328_op))))._field_Op, jule::Str::lit("assignments not available for expressions", 41), jule::Slice<jule::Any>());
		_1c0da90d4_pushSuggestion((*(_self_))._field_e, jule::Str::lit("use clear imperative approach, comes relevant assignment statement before the expression", 88), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c0da69e9_Data> _423013_l = _1c0dc6640_evalExpr1((*(_self_))._field_e, (*((*(_422328_op))))._field_Left);;
	if (((_423013_l == nullptr) || ((*(_423013_l))._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1c0dd7de3_TypeKind> _423513_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_423013_l))._field_Kind;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_423513_prefix;
	});;
	jule::Ptr<_1c0da69e9_Data> _423813_r = _1c0dc6640_evalExpr1((*(_self_))._field_e, (*((*(_422328_op))))._field_Right);;
	if (((_423813_r == nullptr) || ((*(_423813_r))._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*((*(_422328_op))))._field_Op;
	jule::Ptr<_1c0da69e9_Data> _424513_d = _1c0dceb21_solveExplicit(_self_, &(_423013_l), &(_423813_r));;
	if ((((_424513_d != nullptr) && (*(_423013_l))._field_IsRune) && (*(_423813_r))._field_IsRune)) {
		(*_424513_d.alloc)._field_IsRune=true;
	};
	return _424513_d;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0dc8dd4_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0dd650c_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0dd7101_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c0dd82ab_Str(_1c0dd7de3_TypeKind* _self_) {
	if (_1c0dd8ec1_IsNil(_self_)) {
		return jule::Str::lit("nil", 3);;
	};
	_234c76a64_StrBuilder _7413_kind = static__234c76ec6_New(16LL);;
	if ((*(_self_))._field_Variadic) {
		_234c77537_WriteStr(&_7413_kind, jule::Str::lit("...", 3));
	};
	if (_1c0dd8c3a_Binded(_self_)) {
		_234c77537_WriteStr(&_7413_kind, jule::Str::lit("cpp.", 4));
		_234c77537_WriteStr(&_7413_kind, (*(_self_))._field_BindIdent);
	} else {
		_234c77537_WriteStr(&_7413_kind, _1c0dd793c_Kind_mptr_data[((*(_self_))._field_Kind).type_offset]._1c0dd7497_Str((*(_self_))._field_Kind));
	};
	return _234c77d2e_Str(&_7413_kind);;
}



inline jule::Bool _1c0dd85ec_Equal(jule::Ptr<_1c0dd7de3_TypeKind> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _9021_other) {
	if (_1c0dd8ec1_IsNil(_self_.ptr())) {
		return _1c0dd8ec1_IsNil(_9021_other.ptr());;
	};
	if (_1c0dd8c3a_Binded(_self_)) {
		return (_1c0dd8c3a_Binded(_9021_other) && ((*_self_.alloc)._field_BindIdent == (*_9021_other.alloc)._field_BindIdent));;
	};
	return _1c0dd793c_Kind_mptr_data[((*_self_.alloc)._field_Kind).type_offset]._1c0dd77d8_Equal((*_self_.alloc)._field_Kind, _9021_other);;
}



inline jule::Bool _1c0dd8c3a_Binded(_1c0dd7de3_TypeKind* _self_) {
	return ((*(_self_))._field_BindIdent.len() != 0LL);;
}



inline jule::Bool _1c0dd8ec1_IsNil(_1c0dd7de3_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1c0dd9257_Void(_1c0dd7de3_TypeKind* _self_) {
	jule::Ptr<_1c0de09bc_Prim> _1109_prim = _1c0dda544_Prim(&(*(_self_)));;
	return ((_1109_prim != nullptr) && (*_1109_prim.alloc)._field_Kind.equal("void", 4));;
}



inline jule::Bool _1c0dd94dd_Comparable(_1c0dd7de3_TypeKind* _self_) {
	{
		_1c0dd7de3_TypeKind* _11717__self = _self_;;
		if ((_1c0ddbab7_Struct(_11717__self) != nullptr)) {
			return (*(_1c0ddbab7_Struct(_11717__self)))._field_Comparable;;
		};
		return (((_1c0ddc0d4_Map(_11717__self) == nullptr) && (_1c0ddb59a_Slc(_11717__self) == nullptr)) && (_1c0ddb831_Fn(_11717__self) == nullptr));;
	};
}



inline jule::Bool _1c0dd9774_Mutable(_1c0dd7de3_TypeKind* _self_) {
	{
		_1c0dd7de3_TypeKind* _12817__self = _self_;;
		if ((_1c0ddbab7_Struct(_12817__self) != nullptr)) {
			return (*(_1c0ddbab7_Struct(_12817__self)))._field_Mutable;;
		};
		if ((_1c0ddbd4d_Trait(_12817__self) != nullptr)) {
			return true;;
		};
		if ((_1c0dda544_Prim(_12817__self) != nullptr)) {
			jule::Ptr<_1c0de09bc_Prim> _13617_p = _1c0dda544_Prim(_12817__self);;
			return _1c0de41da_IsAny(_13617_p.ptr());;
		};
		if ((_1c0ddb314_Arr(_12817__self) != nullptr)) {
			return _1c0dd9774_Mutable((*(_1c0ddb314_Arr(_12817__self)))._field_Elem.ptr());;
		};
		return (((_1c0ddb59a_Slc(_12817__self) != nullptr) || (_1c0ddaa61_Ptr(_12817__self) != nullptr)) || (_1c0dda7ca_Sptr(_12817__self) != nullptr));;
	};
}



inline jule::Bool _1c0dd9a0a_Ordered(_1c0dd7de3_TypeKind* _self_) {
	{
		_1c0dd7de3_TypeKind* _15117__self = _self_;;
		jule::Ptr<_1c0de09bc_Prim> _15213_prim = _1c0dda544_Prim(_15117__self);;
		if ((_15213_prim != nullptr)) {
			return (_2021e5ad7_IsNum((*_15213_prim.alloc)._field_Kind) || _1c0de3e54_IsStr(_15213_prim));;
		};
		if ((_1c0ddaa61_Ptr(_15117__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_1c0c83552_StructIns> _15913_s = _1c0ddbab7_Struct(_15117__self);;
		if ((_15913_s != nullptr)) {
			return (((((*_15913_s.alloc)._field_Operators._field_Gt != nullptr) && ((*_15913_s.alloc)._field_Operators._field_GtEq != nullptr)) && ((*_15913_s.alloc)._field_Operators._field_Lt != nullptr)) && ((*_15913_s.alloc)._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_1c0cab27d_Enum> _16613_enm = _1c0ddace7_Enum(_15117__self);;
		if ((_16613_enm != nullptr)) {
			return _2021e5ad7_IsNum(_1c0dd82ab_Str((*((*_16613_enm.alloc)._field_Kind))._field_Kind.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _1c0dd9c91_NilCompatible(_1c0dd7de3_TypeKind* _self_) {
	{
		_1c0dd7de3_TypeKind* _17717__self = _self_;;
		jule::Ptr<_1c0de09bc_Prim> _17913_prim = _1c0dda544_Prim(_17717__self);;
		if (((_17913_prim != nullptr) && _1c0de41da_IsAny(_17913_prim))) {
			return true;;
		};
		return (((((((_1c0dd8ec1_IsNil(_17717__self) || (_1c0ddb831_Fn(_17717__self) != nullptr)) || (_1c0dda7ca_Sptr(_17717__self) != nullptr)) || (_1c0ddaa61_Ptr(_17717__self) != nullptr)) || (_1c0ddbd4d_Trait(_17717__self) != nullptr)) || (_1c0ddb59a_Slc(_17717__self) != nullptr)) || (_1c0ddc0d4_Map(_17717__self) != nullptr)) || (_1c0ddb07d_TypeEnum(_17717__self) != nullptr));;
	};
}



inline jule::Bool _1c0dda027_PerformsRC(_1c0dd7de3_TypeKind* _self_) {
	{
		_1c0dd7de3_TypeKind* _19817__self = _self_;;
		jule::Ptr<_1c0de09bc_Prim> _19913_prim = _1c0dda544_Prim(_19817__self);;
		if ((_19913_prim != nullptr)) {
			return (_1c0de41da_IsAny(_19913_prim) || _1c0de3e54_IsStr(_19913_prim));;
		};
		return (((_1c0dda7ca_Sptr(_19817__self) != nullptr) || (_1c0ddb59a_Slc(_19817__self) != nullptr)) || (_1c0ddbd4d_Trait(_19817__self) != nullptr));;
	};
}



inline jule::Bool _1c0dda2ad_Variadicable(_1c0dd7de3_TypeKind* _self_) {
	{
		_1c0dd7de3_TypeKind* _21017__self = _self_;;
		return (_1c0ddb59a_Slc(_21017__self) != nullptr);;
	};
}



inline jule::Ptr<_1c0de09bc_Prim> _1c0dda544_Prim(_1c0dd7de3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 20)) {
			_case_begin_1c5a721e8:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0de09bc_Prim>(20);;
			}
		}
		else {
			_case_begin_1c5a85371:;
			{
				return nullptr;;
			}
		}
		_match_end_1c5a8531b:;
	};
}



inline jule::Ptr<_1c0de44e8_Sptr> _1c0dda7ca_Sptr(_1c0dd7de3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 21)) {
			_case_begin_1c5a85ea9:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0de44e8_Sptr>(21);;
			}
		}
		else {
			_case_begin_1c5a861da:;
			{
				return nullptr;;
			}
		}
		_match_end_1c5a86185:;
	};
}



inline jule::Ptr<_1c0de7cb0_Ptr> _1c0ddaa61_Ptr(_1c0dd7de3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_1c5a86bd0:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0de7cb0_Ptr>(26);;
			}
		}
		else {
			_case_begin_1c5a86e33:;
			{
				return nullptr;;
			}
		}
		_match_end_1c5a86dcd:;
	};
}



inline jule::Ptr<_1c0cab27d_Enum> _1c0ddace7_Enum(_1c0dd7de3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1c5a87928:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0cab27d_Enum>(3);;
			}
		}
		else {
			_case_begin_1c5a87b7b:;
			{
				return nullptr;;
			}
		}
		_match_end_1c5a87b26:;
	};
}



inline jule::Ptr<_1c0cac988_TypeEnum> _1c0ddb07d_TypeEnum(_1c0dd7de3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1c5a88671:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0cac988_TypeEnum>(4);;
			}
		}
		else {
			_case_begin_1c5a888c4:;
			{
				return nullptr;;
			}
		}
		_match_end_1c5a8886e:;
	};
}



inline jule::Ptr<_1c0de72dc_Arr> _1c0ddb314_Arr(_1c0dd7de3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 25)) {
			_case_begin_1c5a893b9:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0de72dc_Arr>(25);;
			}
		}
		else {
			_case_begin_1c5a8961c:;
			{
				return nullptr;;
			}
		}
		_match_end_1c5a895b7:;
	};
}



inline jule::Ptr<_1c0de4ebb_Slc> _1c0ddb59a_Slc(_1c0dd7de3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 22)) {
			_case_begin_1c5a8a112:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0de4ebb_Slc>(22);;
			}
		}
		else {
			_case_begin_1c5a8a365:;
			{
				return nullptr;;
			}
		}
		_match_end_1c5a8a310:;
	};
}



inline jule::Ptr<_1c0c98699_FnIns> _1c0ddb831_Fn(_1c0dd7de3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_1c5a8ad5a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0c98699_FnIns>(1);;
			}
		}
		else {
			_case_begin_1c5a8b0ad:;
			{
				return nullptr;;
			}
		}
		_match_end_1c5a8b058:;
	};
}



inline jule::Ptr<_1c0c83552_StructIns> _1c0ddbab7_Struct(_1c0dd7de3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1c5a8baa3:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0c83552_StructIns>(0);;
			}
		}
		else {
			_case_begin_1c5a8bcd4:;
			{
				return nullptr;;
			}
		}
		_match_end_1c5a8bc7e:;
	};
}



inline jule::Ptr<_1c0ca8a72_Trait> _1c0ddbd4d_Trait(_1c0dd7de3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 2)) {
			_case_begin_1c5a8c7c9:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0ca8a72_Trait>(2);;
			}
		}
		else {
			_case_begin_1c5a8ca2c:;
			{
				return nullptr;;
			}
		}
		_match_end_1c5a8c9c7:;
	};
}



inline jule::Ptr<_1c0de6660_Map> _1c0ddc0d4_Map(_1c0dd7de3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 24)) {
			_case_begin_1c5a8d522:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0de6660_Map>(24);;
			}
		}
		else {
			_case_begin_1c5a8d775:;
			{
				return nullptr;;
			}
		}
		_match_end_1c5a8d720:;
	};
}



inline jule::Ptr<_1c0de5ab0_Tuple> _1c0ddc36a_Tup(_1c0dd7de3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 23)) {
			_case_begin_1c5a8e26a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0de5ab0_Tuple>(23);;
			}
		}
		else {
			_case_begin_1c5a8e4bd:;
			{
				return nullptr;;
			}
		}
		_match_end_1c5a8e468:;
	};
}



inline jule::Bool _1c0ddc601_comptime(_1c0dd7de3_TypeKind* _self_) {
	return (((((((((((((_1c0dddb74_comptimeTypeInfos(_self_) != nullptr) || (_1c0ddde0a_comptimeTypeInfo(_self_) != nullptr)) || (_1c0ddc887_comptimeStructFields(_self_) != nullptr)) || (_1c0ddcb1d_comptimeStructField(_self_) != nullptr)) || (_1c0ddcda4_comptimeEnumFields(_self_) != nullptr)) || (_1c0ddd13a_comptimeEnumField(_self_) != nullptr)) || (_1c0dde191_comptimeStatics(_self_) != nullptr)) || (_1c0dde427_comptimeStatic(_self_) != nullptr)) || (_1c0ddd3c1_comptimeParams(_self_) != nullptr)) || (_1c0ddd657_comptimeParam(_self_) != nullptr)) || (_1c0dde6ad_comptimeValue(_self_) != nullptr)) || (_1c0ddebca_comptimeFiles(_self_) != nullptr)) || (_1c0dde944_comptimeFile(_self_) != nullptr));;
}



inline jule::Ptr<_1c0cb3274_comptimeStructFields> _1c0ddc887_comptimeStructFields(_1c0dd7de3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 7)) {
			_case_begin_1c5a9016c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0cb3274_comptimeStructFields>(7);;
			}
		}
		else {
			_case_begin_1c5a93b87:;
			{
				return nullptr;;
			}
		}
		_match_end_1c5a93b32:;
	};
}



inline jule::Ptr<_1c0cb15b3_comptimeStructField> _1c0ddcb1d_comptimeStructField(_1c0dd7de3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 6)) {
			_case_begin_1c5a942c5:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0cb15b3_comptimeStructField>(6);;
			}
		}
		else {
			_case_begin_1c5a94528:;
			{
				return nullptr;;
			}
		}
		_match_end_1c5a944c3:;
	};
}



inline jule::Ptr<_1c0cb8ec2_comptimeEnumFields> _1c0ddcda4_comptimeEnumFields(_1c0dd7de3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 11)) {
			_case_begin_1c5a9501d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0cb8ec2_comptimeEnumFields>(11);;
			}
		}
		else {
			_case_begin_1c5a95271:;
			{
				return nullptr;;
			}
		}
		_match_end_1c5a9521b:;
	};
}



inline jule::Ptr<_1c0cb7b2a_comptimeEnumField> _1c0ddd13a_comptimeEnumField(_1c0dd7de3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 10)) {
			_case_begin_1c5a95c66:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0cb7b2a_comptimeEnumField>(10);;
			}
		}
		else {
			_case_begin_1c5a95eb9:;
			{
				return nullptr;;
			}
		}
		_match_end_1c5a95e64:;
	};
}



inline jule::Ptr<_1c0cbc756_comptimeParams> _1c0ddd3c1_comptimeParams(_1c0dd7de3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 13)) {
			_case_begin_1c5a969ae:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0cbc756_comptimeParams>(13);;
			}
		}
		else {
			_case_begin_1c5a96c12:;
			{
				return nullptr;;
			}
		}
		_match_end_1c5a96bac:;
	};
}



inline jule::Ptr<_1c0cba5bc_comptimeParam> _1c0ddd657_comptimeParam(_1c0dd7de3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 12)) {
			_case_begin_1c5a97707:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0cba5bc_comptimeParam>(12);;
			}
		}
		else {
			_case_begin_1c5a9795a:;
			{
				return nullptr;;
			}
		}
		_match_end_1c5a97905:;
	};
}



inline jule::Ptr<_1c0cb0ae0_comptimeRange> _1c0ddd8dd_comptimeRange(_1c0dd7de3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 5)) {
			_case_begin_1c5a98450:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0cb0ae0_comptimeRange>(5);;
			}
		}
		else {
			_case_begin_1c5a986a3:;
			{
				return nullptr;;
			}
		}
		_match_end_1c5a9864d:;
	};
}



inline jule::Ptr<_1c0cbdd1d_comptimeTypeInfos> _1c0dddb74_comptimeTypeInfos(_1c0dd7de3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 14)) {
			_case_begin_1c5a99198:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0cbdd1d_comptimeTypeInfos>(14);;
			}
		}
		else {
			_case_begin_1c5a993eb:;
			{
				return nullptr;;
			}
		}
		_match_end_1c5a99396:;
	};
}



inline jule::Ptr<_1c0cc0418_comptimeTypeInfo> _1c0ddde0a_comptimeTypeInfo(_1c0dd7de3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 15)) {
			_case_begin_1c5a99de1:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0cc0418_comptimeTypeInfo>(15);;
			}
		}
		else {
			_case_begin_1c5a9a144:;
			{
				return nullptr;;
			}
		}
		_match_end_1c5a9a0de:;
	};
}



inline jule::Ptr<_1c0cb6530_comptimeStatics> _1c0dde191_comptimeStatics(_1c0dd7de3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 9)) {
			_case_begin_1c5a9ab39:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0cb6530_comptimeStatics>(9);;
			}
		}
		else {
			_case_begin_1c5a9ad8c:;
			{
				return nullptr;;
			}
		}
		_match_end_1c5a9ad37:;
	};
}



inline jule::Ptr<_1c0cb486e_comptimeStatic> _1c0dde427_comptimeStatic(_1c0dd7de3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 8)) {
			_case_begin_1c5a9b882:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0cb486e_comptimeStatic>(8);;
			}
		}
		else {
			_case_begin_1c5a9bad5:;
			{
				return nullptr;;
			}
		}
		_match_end_1c5a9ba80:;
	};
}



inline jule::Ptr<_1c0cc692a_comptimeValue> _1c0dde6ad_comptimeValue(_1c0dd7de3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 16)) {
			_case_begin_1c5a9c5ca:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0cc692a_comptimeValue>(16);;
			}
		}
		else {
			_case_begin_1c5a9c82d:;
			{
				return nullptr;;
			}
		}
		_match_end_1c5a9c7c8:;
	};
}



inline jule::Ptr<_1c0cca874_comptimeFile> _1c0dde944_comptimeFile(_1c0dd7de3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 18)) {
			_case_begin_1c5a9d323:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0cca874_comptimeFile>(18);;
			}
		}
		else {
			_case_begin_1c5a9d576:;
			{
				return nullptr;;
			}
		}
		_match_end_1c5a9d521:;
	};
}



inline jule::Ptr<_1c0cc9279_comptimeFiles> _1c0ddebca_comptimeFiles(_1c0dd7de3_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 17)) {
			_case_begin_1c5a9e06b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0cc9279_comptimeFiles>(17);;
			}
		}
		else {
			_case_begin_1c5a9e2be:;
			{
				return nullptr;;
			}
		}
		_match_end_1c5a9e269:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c0dd7de3_TypeKind _Src) {
	_Stream << _1c0dd82ab_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1c0de0439_checked(_1c0de00b5_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0de00b5_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c0de0d0d_Str(_1c0de09bc_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1c0de114e_Equal(jule::Ptr<_1c0de09bc_Prim> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _50821_other) {
	jule::Ptr<_1c0de09bc_Prim> _5099_prim = _1c0dda544_Prim(_50821_other.ptr());;
	if ((_5099_prim == nullptr)) {
		return false;;
	};
	return ((*(_self_))._field_Kind == (*(_5099_prim))._field_Kind);;
}



inline jule::Bool _1c0de15e4_IsConstraint(_1c0de09bc_Prim* _self_) {
	return ((((!(_1c0de3e54_IsStr(_self_))) && (!(_1c0de41da_IsAny(_self_)))) && (!(_1c0de3bbd_IsBool(_self_)))) && (!(_2021e5ad7_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1c0de187a_IsI8(_1c0de09bc_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i8", 2);;
}



inline jule::Bool _1c0de1b11_IsI16(_1c0de09bc_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i16", 3);;
}



inline jule::Bool _1c0de1d97_IsI32(_1c0de09bc_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i32", 3);;
}



inline jule::Bool _1c0de212d_IsI64(_1c0de09bc_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i64", 3);;
}



inline jule::Bool _1c0de23b4_IsU8(_1c0de09bc_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u8", 2);;
}



inline jule::Bool _1c0de264a_IsU16(_1c0de09bc_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u16", 3);;
}



inline jule::Bool _1c0de28d1_IsU32(_1c0de09bc_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u32", 3);;
}



inline jule::Bool _1c0de2b67_IsU64(_1c0de09bc_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u64", 3);;
}



inline jule::Bool _1c0de2ded_IsF32(_1c0de09bc_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f32", 3);;
}



inline jule::Bool _1c0de3184_IsF64(_1c0de09bc_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f64", 3);;
}



inline jule::Bool _1c0de341a_IsInt(_1c0de09bc_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("int", 3);;
}



inline jule::Bool _1c0de36a1_IsUint(_1c0de09bc_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uint", 4);;
}



inline jule::Bool _1c0de3937_IsUintptr(_1c0de09bc_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uintptr", 7);;
}



inline jule::Bool _1c0de3bbd_IsBool(_1c0de09bc_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("bool", 4);;
}



inline jule::Bool _1c0de3e54_IsStr(_1c0de09bc_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("str", 3);;
}



inline jule::Bool _1c0de41da_IsAny(_1c0de09bc_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("any", 3);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0de09bc_Prim _Src) {
	_Stream << _1c0de0d0d_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c0de486c_Str(_1c0de44e8_Sptr* _self_) {
	return (jule::Str::lit("&", 1) + _1c0dd82ab_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1c0de4bad_Equal(jule::Ptr<_1c0de44e8_Sptr> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _58521_other) {
	jule::Ptr<_1c0de44e8_Sptr> _5869_sptr = _1c0dda7ca_Sptr(_58521_other.ptr());;
	if ((_5869_sptr == nullptr)) {
		return false;;
	};
	return _1c0dd85ec_Equal((*(_self_))._field_Elem, (*(_5869_sptr))._field_Elem);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0de44e8_Sptr _Src) {
	_Stream << _1c0de486c_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c0de5450_Str(_1c0de4ebb_Slc* _self_) {
	return (jule::Str::lit("[]", 2) + _1c0dd82ab_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1c0de5791_Equal(jule::Ptr<_1c0de4ebb_Slc> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _60421_other) {
	jule::Ptr<_1c0de4ebb_Slc> _6059_slc = _1c0ddb59a_Slc(_60421_other.ptr());;
	if ((_6059_slc == nullptr)) {
		return false;;
	};
	return _1c0dd85ec_Equal((*(_self_))._field_Elem, (*(_6059_slc))._field_Elem);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0de4ebb_Slc _Src) {
	_Stream << _1c0de5450_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c0de5e34_Str(_1c0de5ab0_Tuple* _self_) {
	_234c76a64_StrBuilder _62113_s = static__234c76ec6_New(16LL);;
	_234c777e0_WriteByte(&_62113_s, '(');
	_234c77537_WriteStr(&_62113_s, _1c0dd82ab_Str((*(_self_))._field_Types[0LL].ptr()));
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1c5aae7da:;
		if (it != expr_end) {
			jule::Ptr<_1c0dd7de3_TypeKind> *_62416_t = it;
			{
				_234c777e0_WriteByte(&_62113_s, ',');
				_234c77537_WriteStr(&_62113_s, _1c0dd82ab_Str((*(_62416_t)).ptr()));
			}
			_iter_next_1c5aae7da:;
			++it;
			goto _iter_begin_1c5aae7da;
		}
		_iter_end_1c5aae7da:;
	};
	_234c777e0_WriteByte(&_62113_s, ')');
	return _234c77d2e_Str(&_62113_s);;
}



inline jule::Bool _1c0de6275_Equal(jule::Ptr<_1c0de5ab0_Tuple> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _63321_other) {
	jule::Ptr<_1c0de5ab0_Tuple> _6349_tup = _1c0ddc36a_Tup(_63321_other.ptr());;
	if ((_6349_tup == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Types.len() != (*(_6349_tup))._field_Types.len())) {
		return false;;
	};
	jule::I64 _64113_i = 0LL;;
	for (; (_64113_i < (*_self_.alloc)._field_Types.len()); (_64113_i)++) {
		{
			if ((!(_1c0dd85ec_Equal((*_self_.alloc)._field_Types[_64113_i], (*(_6349_tup))._field_Types[_64113_i])))) {
				return false;;
			};
		}
	_iter_next_1c5ab1c71:;
	}
	_iter_end_1c5ab1c71:;;
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0de5ab0_Tuple _Src) {
	_Stream << _1c0de5e34_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c0de69d4_Str(_1c0de6660_Map* _self_) {
	_234c76a64_StrBuilder _66113_s = static__234c76ec6_New(16LL);;
	_234c77537_WriteStr(&_66113_s, jule::Str::lit("map[", 4));
	_234c77537_WriteStr(&_66113_s, _1c0dd82ab_Str((*(_self_))._field_Key.ptr()));
	_234c777e0_WriteByte(&_66113_s, ']');
	_234c77537_WriteStr(&_66113_s, _1c0dd82ab_Str((*(_self_))._field_Val.ptr()));
	return _234c77d2e_Str(&_66113_s);;
}



inline jule::Bool _1c0de6d25_Equal(jule::Ptr<_1c0de6660_Map> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _67021_other) {
	jule::Ptr<_1c0de6660_Map> _6719_m = _1c0ddc0d4_Map(_67021_other.ptr());;
	if ((_6719_m == nullptr)) {
		return false;;
	};
	return (_1c0dd85ec_Equal((*(_self_))._field_Key, (*(_6719_m))._field_Key) && _1c0dd85ec_Equal((*_self_.alloc)._field_Val, (*(_6719_m))._field_Val));;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0de6660_Map _Src) {
	_Stream << _1c0de69d4_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c0de7661_Str(_1c0de72dc_Arr* _self_) {
	_234c76a64_StrBuilder _68913_s = static__234c76ec6_New(16LL);;
	_234c777e0_WriteByte(&_68913_s, '[');
	_234c77537_WriteStr(&_68913_s, _2021d80b3_Itoa((*(_self_))._field_N));
	_234c777e0_WriteByte(&_68913_s, ']');
	_234c77537_WriteStr(&_68913_s, _1c0dd82ab_Str((*(_self_))._field_Elem.ptr()));
	return _234c77d2e_Str(&_68913_s);;
}



inline jule::Bool _1c0de79a2_Equal(jule::Ptr<_1c0de72dc_Arr> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _69821_other) {
	jule::Ptr<_1c0de72dc_Arr> _6999_arr = _1c0ddb314_Arr(_69821_other.ptr());;
	if ((_6999_arr == nullptr)) {
		return false;;
	};
	return (((*(_self_))._field_N == (*(_6999_arr))._field_N) && _1c0dd85ec_Equal((*_self_.alloc)._field_Elem, (*(_6999_arr))._field_Elem));;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0de72dc_Arr _Src) {
	_Stream << _1c0de7661_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c0de8134_Str(_1c0de7cb0_Ptr* _self_) {
	if (_1c0de87e9_IsUnsafe(_self_)) {
		return jule::Str::lit("*unsafe", 7);;
	};
	return (jule::Str::lit("*", 1) + _1c0dd82ab_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1c0de8475_Equal(jule::Ptr<_1c0de7cb0_Ptr> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _72221_other) {
	jule::Ptr<_1c0de7cb0_Ptr> _7239_ptr = _1c0ddaa61_Ptr(_72221_other.ptr());;
	if ((_7239_ptr == nullptr)) {
		return false;;
	};
	return _1c0dd85ec_Equal((*(_self_))._field_Elem, (*(_7239_ptr))._field_Elem);;
}



inline jule::Bool _1c0de87e9_IsUnsafe(_1c0de7cb0_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0de7cb0_Ptr _Src) {
	_Stream << _1c0de8134_Str(&_Src);
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0de8cb1_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1c0dea4dd_pushErr(_1c0de9ca1_typeChecker* _self_, jule::Ptr<_1c0c49480_Token> _80826_token, jule::Str _80841_fmt, jule::Slice<jule::Any> _80854_args) {
	_1c0d2dbb3_pushErr((*(_self_))._field_s.ptr(), _80826_token, _80841_fmt, _80854_args);
}



inline void _1c0dea6db_allowBuiltin(_1c0de9ca1_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1c0dea8d9_disallowBuiltin(_1c0de9ca1_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _1c5ac1e29_pushReference(_1c0de9ca1_typeChecker* _self_, jule::Ptr<_1c0c83552_StructIns>* _82040_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1c452e756_Exist((*(_self_))._field_refers.ptr(), (*(_82040_t)))) {
		return;;
	};
	_1c0c9c659_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_82040_t)), &__jule_any_type9));
}

inline void _1c5ac4811_pushReference(_1c0de9ca1_typeChecker* _self_, jule::Ptr<_1c0ca8a72_Trait>* _82040_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1c5ac657c_Exist((*(_self_))._field_refers.ptr(), (*(_82040_t)))) {
		return;;
	};
	_1c0c9c659_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_82040_t)), &__jule_any_type10));
}



inline void _1c0deae4a_pushReferenceByKind(_1c0de9ca1_typeChecker* _self_, jule::Ptr<_1c0dd7de3_TypeKind>* _83043_k) {
	{
		
		if ((_1c0ddbab7_Struct((*(_83043_k)).ptr()) != nullptr)) {
			_case_begin_1c5ac0a4e:;
			{
				jule::Ptr<_1c0c83552_StructIns> _83317_t = _1c0ddbab7_Struct((*(_83043_k)).ptr());;
				_1c5ac1e29_pushReference(_self_, &(_83317_t));
			}
		}
		else if ((_1c0ddbd4d_Trait((*(_83043_k)).ptr()) != nullptr)) {
			_case_begin_1c5ac0ae8:;
			{
				jule::Ptr<_1c0ca8a72_Trait> _83617_t = _1c0ddbd4d_Trait((*(_83043_k)).ptr());;
				_1c5ac4811_pushReference(_self_, &(_83617_t));
			}
		}
		_match_end_1c5ac093e:;
	};
}



inline void _1c0deb368_pushCycleError(_1c0de9ca1_typeChecker* _self_, jule::Any _84129_def1, jule::Any _84140_def2, _234c76a64_StrBuilder* _84156_message) {
	;
	jule::Fn<jule::Str,jule::Any*> _8439_getIdent = jule::__new_closure<jule::Str,jule::Any*>((void*)__jule_anon_1c5ac8859, jule::Ptr<__jule_anon_1c5ac8859_ctx>::make(__jule_anon_1c5ac8859_ctx{}).as<jule::Uintptr>(), __jule_anon_1c5ac8859_ctx_handler);;
	jule::Str _8539_m = _234c77d2e_Str(_84156_message);;
	jule::Str _8549_def1Ident = _8439_getIdent(&(_84129_def1));;
	jule::Str _8559_def2Ident = _8439_getIdent(&(_84140_def2));;
	jule::Str _8569_refersTo = _21b8c5951_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_8549_def1Ident, &__jule_any_type4),jule::Any(_8559_def2Ident, &__jule_any_type4)}));;
	_234c77537_WriteStr(_84156_message, _21b86a264_Repeat(jule::Str::lit(" ", 1), 7LL));
	_234c77537_WriteStr(_84156_message, _8569_refersTo);
	_234c777e0_WriteByte(_84156_message, '\n');
	_234c77537_WriteStr(_84156_message, _8539_m);
}



inline jule::Bool _1c0deb764_checkCrossCycle(_1c0de9ca1_typeChecker* _self_, jule::Any _86330_decl, _234c76a64_StrBuilder* _86346_message) {
	{
		auto &_match_expr{ _86330_decl };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1c5acca28:;
			{
				jule::Ptr<_1c0dd7101_TypeAlias> _86613_ta = _86330_decl.unsafe_cast_ptr<_1c0dd7101_TypeAlias>();;
				{
					auto expr = &((*(_86613_ta))._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c5acd9d5:;
					if (it != expr_end) {
						jule::Any *_86720_d = it;
						{
							{
								
								if (((*(_86720_d)) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1c5ace2bb:;
									{
										_1c0deb368_pushCycleError(_self_, jule::Any(_86613_ta, &__jule_any_type65), (*(_86720_d)), _86346_message);
										return false;;
									}
								}
								else if ((!(_1c0deb764_checkCrossCycle(_self_, (*(_86720_d)), _86346_message)))) {
									_case_begin_1c5ace354:;
									{
										_1c0deb368_pushCycleError(_self_, jule::Any(_86613_ta, &__jule_any_type65), (*(_86720_d)), _86346_message);
										return false;;
									}
								}
								_match_end_1c5ace1bc:;
							};
						}
						_iter_next_1c5acd9d5:;
						++it;
						goto _iter_begin_1c5acd9d5;
					}
					_iter_end_1c5acd9d5:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1c5acc880:;
			{
				jule::Ptr<_1c0c807c4_Struct> _87813_s = _86330_decl.unsafe_cast_ptr<_1c0c807c4_Struct>();;
				{
					auto expr = &((*(_87813_s))._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c5ad0d28:;
					if (it != expr_end) {
						jule::Ptr<_1c0c807c4_Struct> *_87920_d = it;
						{
							{
								
								if ((__jule_any_type64_compare((*((*(_self_))._field_referencer))._field_owner, (*(_87920_d))))) {
									_case_begin_1c5ad160e:;
									{
										_1c0deb368_pushCycleError(_self_, jule::Any(_87813_s, &__jule_any_type64), jule::Any((*(_87920_d)), &__jule_any_type64), _86346_message);
										return false;;
									}
								}
								else if ((!(_1c0deb764_checkCrossCycle(_self_, jule::Any((*(_87920_d)), &__jule_any_type64), _86346_message)))) {
									_case_begin_1c5ad1697:;
									{
										_1c0deb368_pushCycleError(_self_, jule::Any(_87813_s, &__jule_any_type64), jule::Any((*(_87920_d)), &__jule_any_type64), _86346_message);
										return false;;
									}
								}
								_match_end_1c5ad1510:;
							};
						}
						_iter_next_1c5ad0d28:;
						++it;
						goto _iter_begin_1c5ad0d28;
					}
					_iter_end_1c5ad0d28:;
				};
			}
		}
		_match_end_1c5acc9c3:;
	};
	return true;;
}



inline jule::Bool _1c0debb60_checkIllegalCycles(_1c0de9ca1_typeChecker* _self_, jule::Ptr<_1c0c60045_IdentTypeDecl>* _89738_ident, jule::Any _89765_decl) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_referencer == nullptr) || (!((*(_self_))._field_cycleRisk)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _89765_decl };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1c5ad36cc:;
			{
				if ((*(_89765_decl.unsafe_cast_ptr<_1c0c807c4_Struct>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1c5ad1147:;
			{
				if ((*(_89765_decl.unsafe_cast_ptr<_1c0dd7101_TypeAlias>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1c5ad3336:;
	};
	if ((_89765_decl == (*((*(_self_))._field_referencer))._field_owner)) {
		_1c0dea4dd_pushErr(_self_, (*((*(_89738_ident))))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_referencer))._field_ident, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_234c76a64_StrBuilder _92013_message = static__234c76ec6_New(32LL);;
	if ((!(_1c0deb764_checkCrossCycle(_self_, _89765_decl, &(_92013_message))))) {
		jule::Str _92317_errMsg = _234c77d2e_Str(&_92013_message);;
		_234c7802c_Clear(&_92013_message);
		_1c0deb368_pushCycleError(_self_, (*((*(_self_))._field_referencer))._field_owner, _89765_decl, &(_92013_message));
		_92317_errMsg+=_234c77d2e_Str(&_92013_message);
		_1c0dea4dd_pushErr(_self_, (*((*(_89738_ident))))._field_Token, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_92317_errMsg, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1c5ad810a:;
			{
				{
					{ jule::Slice<jule::Any> *__jule_push_dest = (*((*(_self_))._field_referencer))._field_refs; __jule_push_dest->push(_89765_decl); };
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1c5ad62c3:;
			{
				{
					auto &_match_expr{ _89765_decl };
					
					if (_match_expr.type == &__jule_any_type64) {
						_case_begin_1c5ad89e0:;
						{
							jule::Ptr<_1c0c807c4_Struct> _93921_s = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1c0c807c4_Struct>();;
							(*(_93921_s))._field_Depends=jule::append((*_93921_s.alloc)._field_Depends,jule::Slice<jule::Ptr<_1c0c807c4_Struct>>::make({_89765_decl.unsafe_cast_ptr<_1c0c807c4_Struct>()}));
						}
					}
					_match_end_1c5ad898a:;
				};
			}
		}
		_match_end_1c5ad80a5:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait<_1c0dd793c_Kind> _1c0dec05b_fromTypeAlias(_1c0de9ca1_typeChecker* _self_, jule::Ptr<_1c0c60045_IdentTypeDecl>* _94733_decl, jule::Ptr<_1c0dd7101_TypeAlias>* _94760_ta) {
	if ((!(_1c0d2e422_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_94760_ta))))._field_Public, (*((*(_94760_ta))))._field_Token)))) {
		_1c0dea4dd_pushErr(_self_, (*((*(_94733_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_94733_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	(*((*(_94760_ta))))._field_Used=true;
	if (((*((*(_94733_decl))))._field_Generics.len() > 0LL)) {
		_1c0dea4dd_pushErr(_self_, (*((*(_94733_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_94733_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c5addc04:;
			if (it != expr_end) {
				jule::Ptr<_1c0dd7101_TypeAlias> _96420_bg = *it;
				{
					if (((_96420_bg == (*(_94760_ta))) || (((*((*((*(_94760_ta))))._field_Kind))._field_Kind != nullptr) && _1c0dd85ec_Equal((*(*((*(_94760_ta))))._field_Kind.alloc)._field_Kind, (*(*(_96420_bg))._field_Kind.alloc)._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1c5addc04;
					};
				}
				_iter_next_1c5addc04:;
				++it;
				goto _iter_begin_1c5addc04;
			}
			_iter_end_1c5addc04:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c5ae0ed1:;
			if (it != expr_end) {
				jule::Ptr<_1c0dd7101_TypeAlias> _97520_bg = *it;
				{
					if ((_97520_bg == (*(_94760_ta)))) {
						_1c0dea4dd_pushErr(_self_, (*((*(_94733_decl))))._field_Token, jule::Str::lit("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*((*(_94733_decl))))._field_Ident, &__jule_any_type4)}));
						return nullptr;;
					};
					{
						auto expr = &((*((*(_94760_ta))))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c5ae18a5:;
						if (it != expr_end) {
							jule::Ptr<_1c0dd7101_TypeAlias> _98024_dg = *it;
							{
								if ((_97520_bg == _98024_dg)) {
									_1c0dea4dd_pushErr(_self_, (*((*(_94733_decl))))._field_Token, jule::Str::lit("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*((*(_94733_decl))))._field_Ident, &__jule_any_type4)}));
									return nullptr;;
								};
							}
							_iter_next_1c5ae18a5:;
							++it;
							goto _iter_begin_1c5ae18a5;
						}
						_iter_end_1c5ae18a5:;
					};
				}
				_iter_next_1c5ae0ed1:;
				++it;
				goto _iter_begin_1c5ae0ed1;
			}
			_iter_end_1c5ae0ed1:;
		};
	};
	jule::Bool _98913_ok = _1c0debb60_checkIllegalCycles(_self_, _94733_decl, jule::Any((*(_94760_ta)), &__jule_any_type65));;
	if ((!(_98913_ok))) {
		return nullptr;;
	};
	if (((*(*((*(_94760_ta))))._field_Kind.alloc)._field_Kind == nullptr)) {
		_98913_ok=_1c0d3ae56_checkTypeAliasDeclKind((*(_self_))._field_s, _94760_ta, (*(_self_))._field_lookup);
		if ((!(_98913_ok))) {
			return nullptr;;
		};
	};
	if (((*((*(_94760_ta))))._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		(*(*(_self_))._field_ownerAlias.alloc)._field_Generics=jule::append((*(*(_self_))._field_ownerAlias.alloc)._field_Generics,jule::Slice<jule::Ptr<_1c0dd7101_TypeAlias>>::make({(*(_94760_ta))}));
	};
	jule::Ptr<_1c0dd7de3_TypeKind> _100813_tk = jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Generic=(*((*(_94760_ta))))._field_Generic, ._field_Kind=(*(*(*((*(_94760_ta))))._field_Kind.alloc)._field_Kind.alloc)._field_Kind});;
	_1c0deae4a_pushReferenceByKind(_self_, &(_100813_tk));
	if ((*((*(_94760_ta))))._field_Binded) {
		(*(_100813_tk))._field_BindIdent=(*((*(_94760_ta))))._field_Ident;
	} else {
		(*(_100813_tk))._field_BindIdent=(*(*(*((*(_94760_ta))))._field_Kind.alloc)._field_Kind.alloc)._field_BindIdent;
	};
	return jule::Trait<_1c0dd793c_Kind>(_100813_tk, 19);;
}



inline jule::Ptr<_1c0cab27d_Enum> _1c0dec457_fromEnum(_1c0de9ca1_typeChecker* _self_, jule::Ptr<_1c0c60045_IdentTypeDecl>* _102128_decl, jule::Ptr<_1c0cab27d_Enum>* _102155_e) {
	if ((!(_1c0d2e422_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_102155_e))))._field_Public, (*((*(_102155_e))))._field_Token)))) {
		_1c0dea4dd_pushErr(_self_, (*((*(_102128_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_102128_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_102128_decl))))._field_Generics.len() > 0LL)) {
		_1c0dea4dd_pushErr(_self_, (*((*(_102128_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_102128_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_102155_e));;
}



inline jule::Ptr<_1c0cac988_TypeEnum> _1c0dec853_fromTypeEnum(_1c0de9ca1_typeChecker* _self_, jule::Ptr<_1c0c60045_IdentTypeDecl>* _103332_decl, jule::Ptr<_1c0cac988_TypeEnum>* _103359_e) {
	if ((!(_1c0d2e422_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_103359_e))))._field_Public, (*((*(_103359_e))))._field_Token)))) {
		_1c0dea4dd_pushErr(_self_, (*((*(_103332_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_103332_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_103332_decl))))._field_Generics.len() > 0LL)) {
		_1c0dea4dd_pushErr(_self_, (*((*(_103332_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_103332_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_103359_e));;
}



inline jule::Ptr<_1c0ca8a72_Trait> _1c0decc4e_fromTrait(_1c0de9ca1_typeChecker* _self_, jule::Ptr<_1c0c60045_IdentTypeDecl>* _104529_decl, jule::Ptr<_1c0ca8a72_Trait>* _104556_t) {
	if ((!(_1c0d2e422_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_104556_t))))._field_Public, (*((*(_104556_t))))._field_Token)))) {
		_1c0dea4dd_pushErr(_self_, (*((*(_104529_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_104529_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_104529_decl))))._field_Generics.len() > 0LL)) {
		_1c0dea4dd_pushErr(_self_, (*((*(_104529_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_104529_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	_1c5ac4811_pushReference(_self_, _104556_t);
	return (*(_104556_t));;
}



inline jule::Bool _1c0ded14a_checkStructIns(_1c0de9ca1_typeChecker* _self_, jule::Ptr<_1c0c83552_StructIns>* _105838_ins, jule::Ptr<_1c0c49480_Token>* _105860_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_105838_ins))))._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_105838_ins))))._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (__jule_any_type64_compare((*(*(_self_))._field_referencer.alloc)._field_owner, (*((*(_105838_ins))))._field_Decl)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1c0d4754a_precheckStructIns((*(_self_))._field_s, _105838_ins, (*(_105860_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*((*(_105838_ins))))._field_Generics.len() > 0LL)) {
		_1c0d48062_checkStructInsOperators((*(_self_))._field_s, (*(_105838_ins)));
		_1c0d47803_checkStructIns((*(_self_))._field_s, _105838_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1c0ded403_appendUsedStructReference(_1c0de9ca1_typeChecker* _self_, jule::Ptr<_1c0c807c4_Struct>* _107949_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1c5b05589:;
			{
				jule::Ptr<_1c0c807c4_Struct> _108517_refS = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1c0c807c4_Struct>();;
				if ((!(_1c0c82254_IsUses(_108517_refS.ptr(), (*(_107949_s)))))) {
					(*_108517_refS.alloc)._field_Uses=jule::append((*_108517_refS.alloc)._field_Uses,jule::Slice<jule::Ptr<_1c0c807c4_Struct>>::make({(*(_107949_s))}));
				};
			}
		}
		_match_end_1c5b05534:;
	};
}



inline jule::Ptr<_1c0c83552_StructIns> _1c0ded7ee_buildStructInstance(_1c0de9ca1_typeChecker* _self_, jule::Ptr<_1c0c60045_IdentTypeDecl>* _109243_decl, jule::Ptr<_1c0c807c4_Struct>* _109270_s) {
	jule::Ptr<_1c0de8cb1_referencer> _109413_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1c0dd7101_TypeAlias>> _109613_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1c5b08548:;
				{
					jule::Ptr<_1c0cdeaec_scopeChecker> _110321_sc = (*(_self_))._field_lookup.cast_ptr<_1c0cdeaec_scopeChecker>(0);;
					jule::Ptr<_1c0cdeaec_scopeChecker> _110421_hard = _1c0ce322c_getHardRoot(_110321_sc);;
					if ((((*((*(_110421_hard))._field_owner))._field_Owner == nullptr) || ((*((*(*_110421_hard.alloc)._field_owner.alloc)._field_Owner))._field_Decl != (*(_109270_s))))) {
						goto _match_end_1c5b084e3;
					};
					jule::I64 _110817_n = ((*(*_110421_hard.alloc)._field_owner.alloc)._field_Generics.len() + (*((*(*_110421_hard.alloc)._field_owner.alloc)._field_Owner))._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=(*((*_110421_hard.alloc)._field_table))._field_TypeAliases.slice(0LL, _110817_n);
				}
			}
			_match_end_1c5b084e3:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait<_1c0e079d4_Lookup> _111813_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1c0c83552_StructIns> _112213_ins = _1c0c80c36_instance((*(_109270_s)));;
	(*(_112213_ins))._field_Generics=jule::Slice<jule::Ptr<_1c0dd650c_InsGeneric>>::alloc(0LL, (*((*(_109243_decl))))._field_Generics.len());
	{
		auto expr = &((*((*(_109243_decl))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5b0d87d:;
		if (it != expr_end) {
			jule::Ptr<_1c0c5e93a_TypeDecl> _112421_g = *it;
			{
				jule::Ptr<_1c0dd7de3_TypeKind> _112517_kind = _1c0e0210a_build(_self_, &((*(_112421_g))._field_Kind));;
				if ((_112517_kind == nullptr)) {
					return nullptr;;
				};
				(*_112213_ins.alloc)._field_Generics=jule::append((*_112213_ins.alloc)._field_Generics,jule::Slice<jule::Ptr<_1c0dd650c_InsGeneric>>::make({jule::new_ptr<_1c0dd650c_InsGeneric>(_1c0dd650c_InsGeneric{._field_Kind=_112517_kind, })}));
			}
			_iter_next_1c5b0d87d:;
			++it;
			goto _iter_begin_1c5b0d87d;
		}
		_iter_end_1c5b0d87d:;
	};
	(*(_self_))._field_lookup=_111813_lookup;
	(*(_self_))._field_bannedGenerics=_109613_bannedGenerics;
	(*(_self_))._field_referencer=_109413_referencer;
	return _112213_ins;;
}



inline jule::Ptr<_1c0c83552_StructIns> _1c0dedbea_fromStruct(_1c0de9ca1_typeChecker* _self_, jule::Ptr<_1c0c60045_IdentTypeDecl>* _114034_decl, jule::Ptr<_1c0c807c4_Struct>* _114061_s) {
	if ((!(_1c0d2e422_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_114061_s))))._field_Public, (*((*(_114061_s))))._field_Token)))) {
		_1c0dea4dd_pushErr(_self_, (*((*(_114034_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_114034_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*((*(_114034_decl))))._field_Generics.len() > 0LL)) {
			_1c0dea4dd_pushErr(_self_, (*((*(_114034_decl))))._field_Token, jule::Str::lit("generics are not allowed in this scope", 38), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1c0c83552_StructIns>(_1c0c83552_StructIns{._field_Decl=(*(_114061_s)), });;
	};
	jule::Bool _115813_ok = _1c0debb60_checkIllegalCycles(_self_, _114034_decl, jule::Any((*(_114061_s)), &__jule_any_type64));;
	if ((!(_115813_ok))) {
		return nullptr;;
	};
	_1c0ded403_appendUsedStructReference(_self_, _114061_s);
	jule::Ptr<_1c0c83552_StructIns> _116413_ins = _1c0ded7ee_buildStructInstance(_self_, _114034_decl, _114061_s);;
	if ((_116413_ins == nullptr)) {
		return nullptr;;
	};
	_115813_ok=_1c0d301e2_checkGenericQuantity((*(_self_))._field_s, (*((*(_116413_ins))._field_Decl))._field_Generics.len(), (*(_116413_ins))._field_Generics.len(), (*((*(_114034_decl))))._field_Token);
	if ((!(_115813_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1c0c83552_StructIns> _117413_existInstance = _1c0c81044_appendInstance((*(_114061_s)).ptr(), &(_116413_ins));;
	if ((_117413_existInstance != nullptr)) {
		if ((!(_1c0d39152_checkConstraintsStruct((*(_self_))._field_s, &(_116413_ins), &((*((*(_114034_decl))))._field_Token), _117413_existInstance)))) {
			return nullptr;;
		};
		_1c5ac1e29_pushReference(_self_, &(_117413_existInstance));
		return _117413_existInstance;;
	};
	if ((!(_1c0ded14a_checkStructIns(_self_, &(_116413_ins), &((*((*(_114034_decl))))._field_Token))))) {
		return nullptr;;
	};
	_1c5ac1e29_pushReference(_self_, &(_116413_ins));
	return _116413_ins;;
}



inline jule::Trait<_1c0dd793c_Kind> _1c0dee03b_getDef(_1c0de9ca1_typeChecker* _self_, jule::Ptr<_1c0c60045_IdentTypeDecl>* _119830_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5b18239:;
		if (it != expr_end) {
			jule::Ptr<_1c0c6bb45_GenericDecl> _119916_g = *it;
			{
				if (((*(_119916_g))._field_Ident == (*((*(_119830_decl))))._field_Ident)) {
					return jule::Trait<_1c0dd793c_Kind>(_1c0e04d11_buildPrimType((*_119916_g.alloc)._field_Ident), 20);;
				};
			}
			_iter_next_1c5b18239:;
			++it;
			goto _iter_begin_1c5b18239;
		}
		_iter_end_1c5b18239:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5b1857a:;
		if (it != expr_end) {
			jule::Ptr<_1c0dd7101_TypeAlias> _120521_g = *it;
			{
				if (((*(_120521_g))._field_Ident == (*((*(_119830_decl))))._field_Ident)) {
					if (((*((*(_119830_decl))))._field_Generics.len() > 0LL)) {
						_1c0dea4dd_pushErr(_self_, (*((*(_119830_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_119830_decl))))._field_Ident, &__jule_any_type4)}));
						return nullptr;;
					};
					jule::Ptr<_1c0c83552_StructIns> _121121_st = _1c0ddbab7_Struct((*((*_120521_g.alloc)._field_Kind))._field_Kind.ptr());;
					if ((_121121_st != nullptr)) {
						jule::Bool _121321_ok = _1c0debb60_checkIllegalCycles(_self_, _119830_decl, jule::Any((*_121121_st.alloc)._field_Decl, &__jule_any_type64));;
						if ((!(_121321_ok))) {
							return nullptr;;
						};
					};
					return (*(*(*_120521_g.alloc)._field_Kind.alloc)._field_Kind.alloc)._field_Kind;;
				};
			}
			_iter_next_1c5b1857a:;
			++it;
			goto _iter_begin_1c5b1857a;
		}
		_iter_end_1c5b1857a:;
	};
	if ((!((*((*(_119830_decl))))._field_Binded))) {
		jule::Ptr<_1c0cab27d_Enum> _122317_e = _1c0e079d4_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c0e0753e_FindEnum((*(_self_))._field_lookup, (*((*(_119830_decl))))._field_Ident);;
		if ((_122317_e != nullptr)) {
			return jule::Trait<_1c0dd793c_Kind>(_1c0dec457_fromEnum(_self_, _119830_decl, &(_122317_e)), 3);;
		};
		jule::Ptr<_1c0cac988_TypeEnum> _122817_te = _1c0e079d4_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c0e07880_FindTypeEnum((*(_self_))._field_lookup, (*((*(_119830_decl))))._field_Ident);;
		if ((_122817_te != nullptr)) {
			return jule::Trait<_1c0dd793c_Kind>(_1c0dec853_fromTypeEnum(_self_, _119830_decl, &(_122817_te)), 4);;
		};
		jule::Ptr<_1c0ca8a72_Trait> _123317_t = _1c0e079d4_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c0e071ed_FindTrait((*(_self_))._field_lookup, (*((*(_119830_decl))))._field_Ident);;
		if ((_123317_t != nullptr)) {
			return jule::Trait<_1c0dd793c_Kind>(_1c0decc4e_fromTrait(_self_, _119830_decl, &(_123317_t)), 2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1c0dea4dd_pushErr(_self_, (*((*(_119830_decl))))._field_Token, jule::Str::lit("binded definitions are not allowed in this scope", 48), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c0c807c4_Struct> _124213_s = _1c0e079d4_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c0e069b1_FindStruct((*(_self_))._field_lookup, (*((*(_119830_decl))))._field_Ident, (*((*(_119830_decl))))._field_Binded);;
	if ((_124213_s != nullptr)) {
		return jule::Trait<_1c0dd793c_Kind>(_1c0dedbea_fromStruct(_self_, _119830_decl, &(_124213_s)), 0);;
	};
	jule::Ptr<_1c0dd7101_TypeAlias> _124713_ta = _1c0e079d4_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c0e065b5_FindTypeAlias((*(_self_))._field_lookup, (*((*(_119830_decl))))._field_Ident, (*((*(_119830_decl))))._field_Binded);;
	if (((_124713_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_124713_ta=_1c0ecc306_findBuiltinTypeAlias((*((*(_119830_decl))))._field_Ident);
	};
	if ((_124713_ta != nullptr)) {
		return _1c0dec05b_fromTypeAlias(_self_, _119830_decl, &(_124713_ta));;
	};
	_1c0dea4dd_pushErr(_self_, (*((*(_119830_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_119830_decl))))._field_Ident, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Trait<_1c0dd793c_Kind> _1c0dee37c_buildIdent(_1c0de9ca1_typeChecker* _self_, jule::Ptr<_1c0c60045_IdentTypeDecl> _125933_decl) {
	return _1c0dee03b_getDef(_self_, &(_125933_decl));;
}



inline jule::Trait<_1c0dd793c_Kind> _1c0dee6bd_buildSubIdent(_1c0de9ca1_typeChecker* _self_, jule::Ptr<_1c0c6030e_SubIdentTypeDecl> _126336_decl) {
	jule::Trait<_1c0dd793c_Kind> _126413_ident = _1c0dee37c_buildIdent(_self_, (*(_126336_decl))._field_Idents[0LL]);;
	if ((_126413_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _126413_ident };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1c5b26258:;
			{
				goto _match_end_1c5b26346;
			}
		}
		else {
			_case_begin_1c5b26577:;
			{
				_1c0dea4dd_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c5b26346:;
	};
	jule::Ptr<_1c0cac988_TypeEnum> _127513_t = _126413_ident.cast_ptr<_1c0cac988_TypeEnum>(4);;
	jule::Slice<jule::Ptr<_1c0c60045_IdentTypeDecl>> _127613_idents = (*_126336_decl.alloc)._field_Idents.slice(1LL);;
	{
		auto expr = &(_127613_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5b27cb5:;
		if (it != expr_end) {
			jule::I64 _127713_i = it - expr->begin();
			jule::Ptr<_1c0c60045_IdentTypeDecl> _127716_id = *it;
			{
				jule::Ptr<_1c0cac3b1_TypeEnumItem> _127817_item = _1c0cad549_FindItem(_127513_t.ptr(), (*(_127716_id))._field_Ident);;
				if ((_127817_item == nullptr)) {
					_1c0dea4dd_pushErr(_self_, (*_127716_id.alloc)._field_Token, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*_127513_t.alloc)._field_Ident, &__jule_any_type4),jule::Any((*_127716_id.alloc)._field_Ident, &__jule_any_type4)}));
					return nullptr;;
				};
				if (((_127613_idents.len() - _127713_i) == 1LL)) {
					_1c0deae4a_pushReferenceByKind(_self_, &((*((*(_127817_item))._field_Kind))._field_Kind));
					return jule::Trait<_1c0dd793c_Kind>((*(*(_127817_item))._field_Kind.alloc)._field_Kind, 19);;
				};
				_127513_t=_1c0ddb07d_TypeEnum((*(*(_127817_item))._field_Kind.alloc)._field_Kind.ptr());
				if ((_127513_t == nullptr)) {
					_1c0dea4dd_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1c5b27cb5:;
			++it;
			_127713_i++;
			goto _iter_begin_1c5b27cb5;
		}
		_iter_end_1c5b27cb5:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0de44e8_Sptr> _1c0deea0e_buildSptrFromType(_1c0de9ca1_typeChecker* _self_, jule::Ptr<_1c0dd7de3_TypeKind>* _129741_elem) {
	{
		
		if (((*(_129741_elem)) == nullptr)) {
			_case_begin_1c5b2c4c3:;
			{
				return nullptr;;
			}
		}
		else if ((_1c0ddbab7_Struct((*(_129741_elem)).ptr()) != nullptr)) {
			_case_begin_1c5b2c55b:;
			{
				jule::Ptr<_1c0c83552_StructIns> _130313_s = _1c0ddbab7_Struct((*(_129741_elem)).ptr());;
				if ((((*(_130313_s))._field_Decl != nullptr) && (*(*_130313_s.alloc)._field_Decl.alloc)._field_Binded)) {
					_1c0dea4dd_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1c0ddb314_Arr((*(_129741_elem)).ptr()) != nullptr) && (*(_1c0ddb314_Arr((*(_129741_elem)).ptr())))._field_Auto)) {
			_case_begin_1c5b2c5c2:;
			{
				_1c0dea4dd_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c5b2bba9:;
	};
	return jule::new_ptr<_1c0de44e8_Sptr>(_1c0de44e8_Sptr{._field_Elem=(*(_129741_elem))});;
}



inline jule::Ptr<_1c0de44e8_Sptr> _1c0deed50_buildSptr(_1c0de9ca1_typeChecker* _self_, jule::Ptr<_1c0c609d5_SptrTypeDecl> _131732_decl) {
	jule::Bool _13189_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13189_cycleRisk;
	});;
	jule::Ptr<_1c0dd7de3_TypeKind> _132213_elem = _1c0e0244b_checkDecl(_self_, &((*(_131732_decl))._field_Elem));;
	return _1c0deea0e_buildSptrFromType(_self_, &(_132213_elem));;
}



inline jule::Ptr<_1c0de7cb0_Ptr> _1c0e00191_buildPtrFromType(_1c0de9ca1_typeChecker* _self_, jule::Ptr<_1c0dd7de3_TypeKind>* _132640_elem) {
	{
		
		if (((*(_132640_elem)) == nullptr)) {
			_case_begin_1c5b32594:;
			{
				return nullptr;;
			}
		}
		else if (((_1c0ddb314_Arr((*(_132640_elem)).ptr()) != nullptr) && (*(_1c0ddb314_Arr((*(_132640_elem)).ptr())))._field_Auto)) {
			_case_begin_1c5b3263d:;
			{
				_1c0dea4dd_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return jule::new_ptr<_1c0de7cb0_Ptr>();;
			}
		}
		_match_end_1c5b32484:;
	};
	return jule::new_ptr<_1c0de7cb0_Ptr>(_1c0de7cb0_Ptr{._field_Elem=(*(_132640_elem))});;
}



inline jule::Ptr<_1c0de7cb0_Ptr> _1c0e004d2_buildPtr(_1c0de9ca1_typeChecker* _self_, jule::Ptr<_1c0c61464_PtrTypeDecl> _134131_decl) {
	jule::Bool _13429_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13429_cycleRisk;
	});;
	jule::Ptr<_1c0dd7de3_TypeKind> _134617_elem = nullptr;;
	if ((!(_1c0c617c7_IsUnsafe(_134131_decl.ptr())))) {
		_134617_elem=_1c0e0244b_checkDecl(_self_, &((*_134131_decl.alloc)._field_Elem));
		return _1c0e00191_buildPtrFromType(_self_, &(_134617_elem));;
	};
	return jule::new_ptr<_1c0de7cb0_Ptr>(_1c0de7cb0_Ptr{._field_Elem=_134617_elem});;
}



inline jule::Ptr<_1c0de4ebb_Slc> _1c0e00823_buildSlc(_1c0de9ca1_typeChecker* _self_, jule::Ptr<_1c0c60d6a_SlcTypeDecl> _135831_decl) {
	jule::Bool _13599_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13599_cycleRisk;
	});;
	jule::Ptr<_1c0dd7de3_TypeKind> _136313_elem = _1c0e0244b_checkDecl(_self_, &((*(_135831_decl))._field_Elem));;
	{
		
		if ((_136313_elem == nullptr)) {
			_case_begin_1c5b37687:;
			{
				return nullptr;;
			}
		}
		else if (((_1c0ddb314_Arr(_136313_elem.ptr()) != nullptr) && (*(_1c0ddb314_Arr(_136313_elem)))._field_Auto)) {
			_case_begin_1c5b37720:;
			{
				_1c0dea4dd_pushErr(_self_, (*((*_135831_decl.alloc)._field_Elem))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c5b37632:;
	};
	return jule::new_ptr<_1c0de4ebb_Slc>(_1c0de4ebb_Slc{._field_Elem=_136313_elem});;
}



inline jule::Ptr<_1c0de72dc_Arr> _1c0e00b64_buildArr(_1c0de9ca1_typeChecker* _self_, jule::Ptr<_1c0c61c06_ArrTypeDecl> _137931_decl) {
	jule::I64 _138013_n = 0LL;;
	if ((!(_1c0c62069_AutoSized(_137931_decl.ptr())))) {
		jule::Ptr<_1c0da69e9_Data> _138317_size = _1c0dc6981_evalExpr(_1c0d36160_eval((*(_self_))._field_s, (*(_self_))._field_lookup), (*_137931_decl.alloc)._field_Size);;
		if ((_138317_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1c0da7401_IsConst(_138317_size.ptr())))) {
			_1c0dea4dd_pushErr(_self_, (*((*_137931_decl.alloc)._field_Size))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1c0dda544_Prim((*(_138317_size))._field_Kind.ptr()) == nullptr) || (!(_2021e5510_IsInt((*(_1c0dda544_Prim((*(_138317_size))._field_Kind)))._field_Kind))))) {
			_1c0dea4dd_pushErr(_self_, (*((*_137931_decl.alloc)._field_Size))._field_Token, jule::Str::lit("array size must be integer", 26), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138013_n=static_cast<jule::I64>(_2021e8821_AsI64((*(_138317_size))._field_Constant.ptr()));
		if ((_138013_n < 0LL)) {
			_1c0dea4dd_pushErr(_self_, (*((*_137931_decl.alloc)._field_Elem))._field_Token, jule::Str::lit("array size must be positive integer", 35), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _140117_max = _2021e1572_MaxI(jule::Str::lit("int", 3));;
			if (((_2021d9449_BitSize != 64LL) && (static_cast<jule::I64>(_138013_n) > _140117_max))) {
				_1c0dea4dd_pushErr(_self_, (*((*_137931_decl.alloc)._field_Size))._field_Token, jule::Str::lit("array with size @ overflows limit (@) of the system", 51), jule::Slice<jule::Any>::make({jule::Any(_1c0dd3e00_constoa(&((*(_138317_size))._field_Constant)), &__jule_any_type4),jule::Any(_2021d7ce9_FmtInt(_140117_max, 10LL), &__jule_any_type4)}));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_1c0dd7de3_TypeKind> _141013_elem = _1c0e0244b_checkDecl(_self_, &((*_137931_decl.alloc)._field_Elem));;
	{
		
		if ((_141013_elem == nullptr)) {
			_case_begin_1c5b42296:;
			{
				return nullptr;;
			}
		}
		else if (((_1c0ddb314_Arr(_141013_elem.ptr()) != nullptr) && (*(_1c0ddb314_Arr(_141013_elem)))._field_Auto)) {
			_case_begin_1c5b42340:;
			{
				_1c0dea4dd_pushErr(_self_, (*((*_137931_decl.alloc)._field_Elem))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c5b406d4:;
	};
	return jule::new_ptr<_1c0de72dc_Arr>(_1c0de72dc_Arr{._field_Auto=_1c0c62069_AutoSized(_137931_decl), ._field_N=_138013_n, ._field_Elem=_141013_elem});;
}



inline jule::Ptr<_1c0de6660_Map> _1c0e00ea5_buildMap(_1c0de9ca1_typeChecker* _self_, jule::Ptr<_1c0c62454_MapTypeDecl> _142831_decl) {
	jule::Bool _14299_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14299_cycleRisk;
	});;
	jule::Ptr<_1c0dd7de3_TypeKind> _143313_key = _1c0e0244b_checkDecl(_self_, &((*(_142831_decl))._field_Key));;
	if ((_143313_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c0dd7de3_TypeKind> _143813_val = _1c0e0244b_checkDecl(_self_, &((*_142831_decl.alloc)._field_Val));;
	if ((_143813_val == nullptr)) {
		return nullptr;;
	};
	if ((_1c0ddace7_Enum(_143813_val.ptr()) != nullptr)) {
		_1c0dea4dd_pushErr(_self_, (*((*_142831_decl.alloc)._field_Val))._field_Token, jule::Str::lit("maps do not support enums as map key type", 41), jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1c0de6660_Map>(_1c0de6660_Map{._field_Key=_143313_key, ._field_Val=_143813_val});;
}



inline jule::Ptr<_1c0de5ab0_Tuple> _1c0e012e6_buildTuple(_1c0de9ca1_typeChecker* _self_, jule::Ptr<_1c0c61167_TupleTypeDecl> _145233_decl) {
	jule::Slice<jule::Ptr<_1c0dd7de3_TypeKind>> _145313_types = jule::Slice<jule::Ptr<_1c0dd7de3_TypeKind>>::alloc(0LL, (*(_145233_decl))._field_Types.len());;
	{
		auto expr = &((*_145233_decl.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5b48797:;
		if (it != expr_end) {
			jule::Ptr<_1c0c5e93a_TypeDecl> _145421_t = *it;
			{
				jule::Ptr<_1c0dd7de3_TypeKind> _145517_kind = _1c0e0244b_checkDecl(_self_, &(_145421_t));;
				if ((_145517_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1c0dd7de3_TypeKind>> &__jule_push_dest = _145313_types; __jule_push_dest.push(_145517_kind); };
			}
			_iter_next_1c5b48797:;
			++it;
			goto _iter_begin_1c5b48797;
		}
		_iter_end_1c5b48797:;
	};
	return jule::new_ptr<_1c0de5ab0_Tuple>(_1c0de5ab0_Tuple{._field_Types=_145313_types});;
}



inline jule::Bool _1c0e01637_checkFuncTypes(_1c0de9ca1_typeChecker* _self_, jule::Ptr<_1c0c98699_FnIns>* _146538_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_146538_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5b5013e:;
		if (it != expr_end) {
			jule::Ptr<_1c0c976ed_ParamIns> _146621_p = *it;
			{
				(*(_146621_p))._field_Kind=_1c0e0210a_build(_self_, &((*((*((*((*_146621_p.alloc)._field_Decl))._field_Kind))._field_Decl))._field_Kind));
				__jule_func_result=((*_146621_p.alloc)._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1c0d39806_checkFnParamKind((*(_self_))._field_s, &(_146621_p));
			}
			_iter_next_1c5b5013e:;
			++it;
			goto _iter_begin_1c5b5013e;
		}
		_iter_end_1c5b5013e:;
	};
	if ((!(_1c0c95c18_IsVoid((*((*(_146538_f))))._field_Decl.ptr())))) {
		(*((*(_146538_f))))._field_Result=_1c0e0210a_build(_self_, &((*(*((*((*(*((*(_146538_f))))._field_Decl.alloc)._field_Result))._field_Kind))._field_Decl.alloc)._field_Kind));
		__jule_func_result = ((*((*(_146538_f))))._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1c0c98699_FnIns> _1c0e01978_buildFunc(_1c0de9ca1_typeChecker* _self_, jule::Ptr<_1c0c715ea_FnDecl> _148332_decl) {
	jule::Bool _14849_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14849_cycleRisk;
	});;
	if (((*(_148332_decl))._field_Generics.len() > 0LL)) {
		_1c0dea4dd_pushErr(_self_, (*_148332_decl.alloc)._field_Token, jule::Str::lit("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c0c95795_Fn> _149313_f = _1c0c9ed10_buildFunc(_148332_decl);;
	jule::I64 _14959_n = (*((*(_self_))._field_s))._field_errors.len();;
	_1c0d43aeb_checkAnonFuncDecl((*(_self_))._field_s, &(_149313_f));
	if ((_14959_n != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1c0c98699_FnIns> _150113_ins = _1c0c96c6e_instanceForce(_149313_f);;
	(*(_150113_ins))._field_Anon=true;
	jule::Bool _15049_ok = _1c0e01637_checkFuncTypes(_self_, &(_150113_ins));;
	if ((!(_15049_ok))) {
		return nullptr;;
	};
	return _150113_ins;;
}



inline jule::Trait<_1c0dd793c_Kind> _1c0e01cb9_buildByNamespace(_1c0de9ca1_typeChecker* _self_, jule::Ptr<_1c0c606d8_NamespaceTypeDecl> _151239_decl) {
	jule::Str _15139_path = _1c0e04937_buildLinkPathByTokens(&((*(_151239_decl))._field_Idents));;
	jule::Ptr<_1c0d09782_ImportInfo> _151413_imp = _1c0e079d4_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c0e05cbd_SelectPackage((*(_self_))._field_lookup, jule::__new_closure<jule::Bool,jule::Ptr<_1c0d09782_ImportInfo>>((void*)__jule_anon_1c5b5949a, jule::Ptr<__jule_anon_1c5b5949a_ctx>::make(__jule_anon_1c5b5949a_ctx{._151239_decl=_151239_decl,._15139_path=_15139_path}).as<jule::Uintptr>(), __jule_anon_1c5b5949a_ctx_handler));;
	jule::Str _15219_selfIdent = jule::Str::lit("self", 4);;
	if (((_151413_imp == nullptr) || (!(_1c0d0bcc3_isLookupable(_151413_imp.ptr(), &(_15219_selfIdent)))))) {
		_1c0dea4dd_pushErr(_self_, (*_151239_decl.alloc)._field_Idents[0LL], jule::Str::lit("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_15139_path, &__jule_any_type4)}));
		return nullptr;;
	};
	_1c0dea8d9_disallowBuiltin(_self_);
	jule::Trait<_1c0e079d4_Lookup> _152813_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1c0e079d4_Lookup>(_151413_imp, 1);
	jule::Ptr<_1c0dd7de3_TypeKind> _153013_kind = _1c0e0244b_checkDecl(_self_, &((*_151239_decl.alloc)._field_Kind));;
	(*(_self_))._field_lookup=_152813_lookup;
	_1c0dea6db_allowBuiltin(_self_);
	return jule::Trait<_1c0dd793c_Kind>(_153013_kind, 19);;
}



inline jule::Ptr<_1c0dd7de3_TypeKind> _1c0e0210a_build(_1c0de9ca1_typeChecker* _self_, jule::Any* _153629_declKind) {
	jule::Trait<_1c0dd793c_Kind> _153717_kind = nullptr;;
	{
		auto &_match_expr{ (*(_153629_declKind)) };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1c5b5ee84:;
			{
				jule::Trait<_1c0dd793c_Kind> _154017_t = _1c0dee37c_buildIdent(_self_, (*(_153629_declKind)).cast_ptr<_1c0c60045_IdentTypeDecl>(&__jule_any_type74));;
				if ((_154017_t != nullptr)) {
					_153717_kind=_154017_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1c5b5e3a1:;
			{
				jule::Trait<_1c0dd793c_Kind> _154517_t = _1c0dee6bd_buildSubIdent(_self_, (*(_153629_declKind)).cast_ptr<_1c0c6030e_SubIdentTypeDecl>(&__jule_any_type87));;
				if ((_154517_t != nullptr)) {
					_153717_kind=_154517_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1c5b5e505:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1c0de44e8_Sptr> _155117_t = _1c0deed50_buildSptr(_self_, (*(_153629_declKind)).cast_ptr<_1c0c609d5_SptrTypeDecl>(&__jule_any_type71));;
				if ((_155117_t != nullptr)) {
					_153717_kind=jule::Trait<_1c0dd793c_Kind>(_155117_t, 21);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1c5b5e56b:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1c0de7cb0_Ptr> _155717_t = _1c0e004d2_buildPtr(_self_, (*(_153629_declKind)).cast_ptr<_1c0c61464_PtrTypeDecl>(&__jule_any_type70));;
				if ((_155717_t != nullptr)) {
					_153717_kind=jule::Trait<_1c0dd793c_Kind>(_155717_t, 26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1c5b5e5d2:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1c0de4ebb_Slc> _156317_t = _1c0e00823_buildSlc(_self_, (*(_153629_declKind)).cast_ptr<_1c0c60d6a_SlcTypeDecl>(&__jule_any_type69));;
				if ((_156317_t != nullptr)) {
					_153717_kind=jule::Trait<_1c0dd793c_Kind>(_156317_t, 22);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1c5b5e648:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1c0de72dc_Arr> _156917_t = _1c0e00b64_buildArr(_self_, (*(_153629_declKind)).cast_ptr<_1c0c61c06_ArrTypeDecl>(&__jule_any_type68));;
				if ((_156917_t != nullptr)) {
					_153717_kind=jule::Trait<_1c0dd793c_Kind>(_156917_t, 25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1c5b5e6ae:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1c0de6660_Map> _157517_t = _1c0e00ea5_buildMap(_self_, (*(_153629_declKind)).cast_ptr<_1c0c62454_MapTypeDecl>(&__jule_any_type72));;
				if ((_157517_t != nullptr)) {
					_153717_kind=jule::Trait<_1c0dd793c_Kind>(_157517_t, 24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1c5b5e725:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1c0de5ab0_Tuple> _158117_t = _1c0e012e6_buildTuple(_self_, (*(_153629_declKind)).cast_ptr<_1c0c61167_TupleTypeDecl>(&__jule_any_type73));;
				if ((_158117_t != nullptr)) {
					_153717_kind=jule::Trait<_1c0dd793c_Kind>(_158117_t, 23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1c5b60050:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1c0c98699_FnIns> _158717_t = _1c0e01978_buildFunc(_self_, (*(_153629_declKind)).cast_ptr<_1c0c715ea_FnDecl>(&__jule_any_type14));;
				if ((_158717_t != nullptr)) {
					_153717_kind=jule::Trait<_1c0dd793c_Kind>(_158717_t, 1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1c5b600b6:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait<_1c0dd793c_Kind> _159317_t = _1c0e01cb9_buildByNamespace(_self_, (*(_153629_declKind)).cast_ptr<_1c0c606d8_NamespaceTypeDecl>(&__jule_any_type91));;
				if ((_159317_t != nullptr)) {
					_153717_kind=_159317_t;
				};
			}
		}
		else {
			_case_begin_1c5b5e48e:;
			{
				_1c0dea4dd_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c5b5e439:;
	};
	if ((_153717_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _153717_kind };
		
		if (_match_expr.type_is(true, 19)) {
			_case_begin_1c5b6d4c0:;
			{
				return _153717_kind.cast_ptr<_1c0dd7de3_TypeKind>(19);;
			}
		}
		else {
			_case_begin_1c5b60490:;
			{
				jule::Ptr<_1c0dd7de3_TypeKind> _160817_tk = jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=_153717_kind});;
				{
					auto &_match_expr{ _153717_kind };
					
					if (_match_expr.type_is(true, 20)) {
						_case_begin_1c5b6b8ca:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_1c0dd7de3_TypeKind>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_160817_tk); };
								};
							};
						}
					}
					else if (_match_expr.type_is(true, 0)) {
						_case_begin_1c5b6b754:;
						{
							jule::Ptr<_1c0c83552_StructIns> _161517_s = _153717_kind.cast_ptr<_1c0c83552_StructIns>(0);;
							if ((((*(_161517_s))._field_Decl != nullptr) && (*(*_161517_s.alloc)._field_Decl.alloc)._field_Binded)) {
								(*(_160817_tk))._field_BindIdent=(*(*_161517_s.alloc)._field_Decl.alloc)._field_Ident;
							};
						}
					}
					_match_end_1c5b6b875:;
				};
				return _160817_tk;;
			}
		}
		_match_end_1c5b6ab2c:;
	};
}



inline jule::Ptr<_1c0dd7de3_TypeKind> _1c0e0244b_checkDecl(_1c0de9ca1_typeChecker* _self_, jule::Ptr<_1c0c5e93a_TypeDecl>* _162433_decl) {
	jule::Ptr<_1c0c49480_Token> _162613_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*((*(_162433_decl))))._field_Token;
	jule::Ptr<_1c0dd7de3_TypeKind> _162913_kind = _1c0e0210a_build(_self_, &((*((*(_162433_decl))))._field_Kind));;
	(*(_self_))._field_errorToken=_162613_errorToken;
	return _162913_kind;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0de9ca1_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "ignoredGenerics:" << _Src._field_ignoredGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "cycleRisk:" << _Src._field_cycleRisk << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1c0e02d97_prim(jule::Str* _165121_ident, jule::Ptr<_1c0de09bc_Prim> _165133_t) {
	return ((*(_165133_t))._field_Kind == (*(_165121_ident)));;
}



inline jule::Bool static__1c0e0321b_exist(jule::Str* _165522_ident, jule::Ptr<_1c0dd7de3_TypeKind>* _165539_k) {
	{
		
		if ((_1c0dda544_Prim((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1c5b732d8:;
			{
				return static__1c0e02d97_prim(_165522_ident, _1c0dda544_Prim((*(_165539_k)).ptr()));;
			}
		}
		else if ((_1c0dda7ca_Sptr((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1c5b73360:;
			{
				jule::Ptr<_1c0de44e8_Sptr> _166017_sptr = _1c0dda7ca_Sptr((*(_165539_k)).ptr());;
				return static__1c0e0321b_exist(_165522_ident, &((*(_166017_sptr))._field_Elem));;
			}
		}
		else if ((_1c0ddaa61_Ptr((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1c5b733d7:;
			{
				jule::Ptr<_1c0de7cb0_Ptr> _166317_ptr = _1c0ddaa61_Ptr((*(_165539_k)).ptr());;
				return static__1c0e0321b_exist(_165522_ident, &((*(_166317_ptr))._field_Elem));;
			}
		}
		else if ((_1c0ddb59a_Slc((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1c5b7345e:;
			{
				jule::Ptr<_1c0de4ebb_Slc> _166617_slc = _1c0ddb59a_Slc((*(_165539_k)).ptr());;
				return static__1c0e0321b_exist(_165522_ident, &((*(_166617_slc))._field_Elem));;
			}
		}
		else if ((_1c0ddb314_Arr((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1c5b73629:;
			{
				jule::Ptr<_1c0de72dc_Arr> _166917_arr = _1c0ddb314_Arr((*(_165539_k)).ptr());;
				return static__1c0e0321b_exist(_165522_ident, &((*(_166917_arr))._field_Elem));;
			}
		}
		else if ((_1c0ddc0d4_Map((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1c5b73690:;
			{
				jule::Ptr<_1c0de6660_Map> _167217_m = _1c0ddc0d4_Map((*(_165539_k)).ptr());;
				return (static__1c0e0321b_exist(_165522_ident, &((*(_167217_m))._field_Key)) || static__1c0e0321b_exist(_165522_ident, &((*_167217_m.alloc)._field_Val)));;
			}
		}
		else if ((_1c0ddbab7_Struct((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1c5b73706:;
			{
				jule::Ptr<_1c0c83552_StructIns> _167617_s = _1c0ddbab7_Struct((*(_165539_k)).ptr());;
				{
					auto expr = &((*(_167617_s))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c5b7a7eb:;
					if (it != expr_end) {
						jule::Ptr<_1c0dd650c_InsGeneric> _167725_g = *it;
						{
							if (static__1c0e0321b_exist(_165522_ident, &((*(_167725_g))._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1c5b7a7eb:;
						++it;
						goto _iter_begin_1c5b7a7eb;
					}
					_iter_end_1c5b7a7eb:;
				};
				return false;;
			}
		}
		else if ((_1c0ddb831_Fn((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1c5b7376c:;
			{
				jule::Ptr<_1c0c98699_FnIns> _168417_f = _1c0ddb831_Fn((*(_165539_k)).ptr());;
				{
					auto expr = &((*(_168417_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c5b7c424:;
					if (it != expr_end) {
						jule::Ptr<_1c0c976ed_ParamIns> _168525_p = *it;
						{
							if (_1c0c943dc_IsSelf((*(_168525_p))._field_Decl.ptr())) {
								goto _iter_next_1c5b7c424;
							};
							if (static__1c0e0321b_exist(_165522_ident, &((*_168525_p.alloc)._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1c5b7c424:;
						++it;
						goto _iter_begin_1c5b7c424;
					}
					_iter_end_1c5b7c424:;
				};
				if (((*_168417_f.alloc)._field_Result != nullptr)) {
					return static__1c0e0321b_exist(_165522_ident, &((*_168417_f.alloc)._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1c0ddc36a_Tup((*(_165539_k)).ptr()) != nullptr)) {
			_case_begin_1c5b737e4:;
			{
				jule::Ptr<_1c0de5ab0_Tuple> _169817_tup = _1c0ddc36a_Tup((*(_165539_k)).ptr());;
				{
					auto expr = &((*(_169817_tup))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c5b7ec40:;
					if (it != expr_end) {
						jule::Ptr<_1c0dd7de3_TypeKind> _169925_t = *it;
						{
							if (static__1c0e0321b_exist(_165522_ident, &(_169925_t))) {
								return true;;
							};
						}
						_iter_next_1c5b7ec40:;
						++it;
						goto _iter_begin_1c5b7ec40;
					}
					_iter_end_1c5b7ec40:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1c5b731b7:;
			{
				return false;;
			}
		}
		_match_end_1c5b730b8:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c0e02957_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c1905ec6_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c1951a8d_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1c1952aa0_stop(_1c195242e_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1c1952d36_stopped(_1c195242e_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1c19530bc_finished(_1c195242e_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1c1953353_isLastSt(_1c195242e_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1c19536b6_pushErr(_1c195242e_scopeParser* _self_, jule::Ptr<_1c0c49480_Token> _18826_token, jule::Str _18841_fmt) {
	_1c1971195_pushErr((*(_self_))._field_p.ptr(), _18826_token, _18841_fmt, jule::Slice<jule::Any>());
}



inline void _1c1953a29_pushSuggestion(_1c195242e_scopeParser* _self_, jule::Str _19333_fmt, jule::Slice<jule::Any> _19346_args) {
	_1c1971508_pushSuggestion((*(_self_))._field_p.ptr(), _19333_fmt, _19346_args);
}



inline void _1c1953cd2_insertAsNext(_1c195242e_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _19736_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1c1951a8d_stmt>(_1c1951a8d_stmt{._field_tokens=(*(_19736_tokens)), });
}



inline jule::Ptr<_1c1951a8d_stmt> _1c1954068_next(_1c195242e_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1c0c6e95b_ScopeTree> _1c1954464_buildScope(_1c195242e_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _20734_tokens, jule::Ptr<_1c0c49480_Token> _20756_end) {
	jule::Ptr<_1c0c6e95b_ScopeTree> _20813_s = _1c1950817_newScope();;
	(*(_20813_s))._field_Parent=(*(_self_))._field_s;
	(*_20813_s.alloc)._field_End=_20756_end;
	_1c195242e_scopeParser _21113_ssp = _1c195242e_scopeParser{._field_p=(*(_self_))._field_p, };;
	_1c195e2d7_build(&_21113_ssp, _20734_tokens, &(_20813_s));
	return _20813_s;;
}



inline jule::Ptr<_1c0c727a5_VarDecl> _1c19547a5_buildVarSt(_1c195242e_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _21834_tokens) {
	jule::Ptr<_1c0c727a5_VarDecl> _21913_v = _1c1973e67_buildVar((*(_self_))._field_p, (*(_21834_tokens)));;
	(*(_21913_v))._field_Scope=(*(_self_))._field_s;
	return _21913_v;;
}



inline jule::Ptr<_1c0c72b7e_RetSt> _1c1954ae6_buildRetSt(_1c195242e_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>> _22433_tokens) {
	jule::Ptr<_1c0c72b7e_RetSt> _22513_st = jule::new_ptr<_1c0c72b7e_RetSt>(_1c0c72b7e_RetSt{._field_Token=_22433_tokens[0LL], });;
	if ((_22433_tokens.len() > 1LL)) {
		(_22433_tokens).mut_slice(1LL);;
		(*(_22513_st))._field_Expr=_1c1971849_buildExpr((*(_self_))._field_p, &(_22433_tokens));
	};
	return _22513_st;;
}



inline jule::Ptr<_1c0c733ee_Iter> _1c1954e37_buildWhileNextIter(_1c195242e_scopeParser* _self_, jule::Ptr<_1c1951a8d_stmt>* _23542_s) {
	jule::Ptr<_1c0c733ee_Iter> _23613_it = jule::new_ptr<_1c0c733ee_Iter>(_1c0c733ee_Iter{._field_Token=(*((*(_23542_s))))._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _23913_tokens = (*((*(_23542_s))))._field_tokens.slice(1LL);;
	jule::Ptr<_1c0c73c29_WhileKind> _24013_kind = jule::new_ptr<_1c0c73c29_WhileKind>();;
	if ((_23913_tokens.len() > 0LL)) {
		(*_24013_kind.alloc)._field_Expr=_1c1971849_buildExpr((*(_self_))._field_p, &(_23913_tokens));
	};
	if (_1c1953353_isLastSt(_self_)) {
		_1c19536b6_pushErr(_self_, (*(_23613_it))._field_Token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	_23913_tokens=(*(_1c1954068_next(_self_)))._field_tokens;
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _25213_stTokens = _1c196ab73_getBlockExpr(&(_23913_tokens));;
	if ((_25213_stTokens.len() > 0LL)) {
		jule::Ptr<_1c1951a8d_stmt> _25417_stmt = jule::new_ptr<_1c1951a8d_stmt>(_1c1951a8d_stmt{._field_tokens=_25213_stTokens, ._field_terminated=(*((*(_23542_s))))._field_terminated});;
		(*_24013_kind.alloc)._field_NextToken=_25213_stTokens[0LL];
		(*_24013_kind.alloc)._field_Next=_1c195de74_buildSt(_self_, &(_25417_stmt));
	};
	jule::I64 _26213_i = _25213_stTokens.len();;
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _26313_blockTokens = _1c196dd96_range(&(_26213_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_23913_tokens));;
	if ((_26313_blockTokens == nullptr)) {
		_1c1952aa0_stop(_self_);
		_1c19536b6_pushErr(_self_, (*_23613_it.alloc)._field_Token, jule::Str::lit("body is not exist", 17));
		_1c1953a29_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_26213_i < _23913_tokens.len())) {
		_1c19536b6_pushErr(_self_, _23913_tokens[_26213_i], jule::Str::lit("invalid syntax", 14));
	};
	(*_23613_it.alloc)._field_Scope=_1c1954464_buildScope(_self_, &(_26313_blockTokens), _23913_tokens[(_26213_i - 1LL)]);
	(*_23613_it.alloc)._field_Kind=jule::Any(_24013_kind, &__jule_any_type36);
	return _23613_it;;
}



inline jule::Ptr<_1c0c73c29_WhileKind> _1c1955278_buildWhileIterKind(_1c195242e_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _28042_tokens) {
	return jule::new_ptr<_1c0c73c29_WhileKind>(_1c0c73c29_WhileKind{._field_Expr=_1c1971849_buildExpr((*(_self_))._field_p, _28042_tokens), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>> _1c19555b9_getRangeKindKeysTokens(_1c195242e_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _28646_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>> _28713_vars;
	jule::Slice<_21b8c54de_Log> _28719_errs;
	({
		__jule_tuple_ssx_1c0c49480_Token__jule_tuple_s_21b8c54de_Log __jule_assign_result = _1c196e616_parts(_28646_toks, static_cast<jule::U64>(5LLU), true);
		_28713_vars = __jule_assign_result.__jule_result_arg0;
		_28719_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_28719_errs);
	return _28713_vars;;
}



inline jule::Ptr<_1c0c727a5_VarDecl> _1c195590a_buildRangeKindKey(_1c195242e_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _29241_tokens) {
	if (((*(_29241_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1c0c727a5_VarDecl> _29613_key = jule::new_ptr<_1c0c727a5_VarDecl>(_1c0c727a5_VarDecl{._field_Token=(*(_29241_tokens))[0LL], ._field_Setter=(*(_29241_tokens))[0LL], });;
	if (((*((*(_29613_key))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_29613_key.alloc)._field_Mutable=true;
		if (((*(_29241_tokens)).len() == 1LL)) {
			_1c19536b6_pushErr(_self_, (*_29613_key.alloc)._field_Token, jule::Str::lit("invalid syntax", 14));
		};
		(*_29613_key.alloc)._field_Token=(*(_29241_tokens))[1LL];
	} else if (((*(_29241_tokens)).len() > 1LL)) {
		_1c19536b6_pushErr(_self_, (*(_29241_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
	};
	if (((*((*(_29613_key))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c19536b6_pushErr(_self_, (*_29613_key.alloc)._field_Token, jule::Str::lit("invalid syntax", 14));
		_1c1953a29_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_29613_key.alloc)._field_Ident=(*(*_29613_key.alloc)._field_Token.alloc)._field_Kind;
	return _29613_key;;
}



inline jule::Slice<jule::Ptr<_1c0c727a5_VarDecl>> _1c1955c4b_buildRangeKindKeys(_1c195242e_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>>* _31842_parts) {
	jule::Slice<jule::Ptr<_1c0c727a5_VarDecl>> _31917_keys = nullptr;;
	{
		auto expr = _31842_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5d54b90:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c0c49480_Token>> _32021_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_1c0c727a5_VarDecl>> &__jule_push_dest = _31917_keys; __jule_push_dest.push(_1c195590a_buildRangeKindKey(_self_, &(_32021_tokens))); };
			}
			_iter_next_1c5d54b90:;
			++it;
			goto _iter_begin_1c5d54b90;
		}
		_iter_end_1c5d54b90:;
	};
	return _31917_keys;;
}



inline void _1c19560ae_setupRangeKindKeysPlain(_1c195242e_scopeParser* _self_, jule::Ptr<_1c0c74631_RangeKind>* _32647_rng, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _32669_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>> _32713_keyTokens = _1c19555b9_getRangeKindKeysTokens(_self_, _32669_tokens);;
	if ((_32713_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_32713_keyTokens.len() > 2LL)) {
		_1c19536b6_pushErr(_self_, (*((*(_32647_rng))))._field_InToken, jule::Str::lit("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1c0c727a5_VarDecl>> _33413_keys = _1c1955c4b_buildRangeKindKeys(_self_, &(_32713_keyTokens));;
	(*((*(_32647_rng))))._field_KeyA=_33413_keys[0LL];
	if ((_33413_keys.len() > 1LL)) {
		(*((*(_32647_rng))))._field_KeyB=_33413_keys[1LL];
	};
}



inline void _1c1956422_setupRangeKindKeysExplicit(_1c195242e_scopeParser* _self_, jule::Ptr<_1c0c74631_RangeKind>* _34150_rng, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _34172_tokens) {
	jule::I64 _34213_i = 0LL;;
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _34313_rang = _1c196dd96_range(&(_34213_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _34172_tokens);;
	if ((_34213_i < (*(_34172_tokens)).len())) {
		_1c19536b6_pushErr(_self_, (*((*(_34150_rng))))._field_InToken, jule::Str::lit("invalid syntax", 14));
	};
	_1c19560ae_setupRangeKindKeysPlain(_self_, _34150_rng, &(_34313_rang));
}



inline void _1c1956785_setupRangeKindKeys(_1c195242e_scopeParser* _self_, jule::Ptr<_1c0c74631_RangeKind>* _35042_rng, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _35064_tokens) {
	if (((*((*(_35064_tokens))[0LL]))._field_Id == static_cast<jule::U64>(74LLU))) {
		_1c1956422_setupRangeKindKeysExplicit(_self_, _35042_rng, _35064_tokens);
		return;;
	};
	_1c19560ae_setupRangeKindKeysPlain(_self_, _35042_rng, _35064_tokens);
}



inline jule::Ptr<_1c0c74631_RangeKind> _1c1956c3b_buildRangeIterKind(_1c195242e_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _35842_var_tokens, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _35914_exprTokens, jule::Ptr<_1c0c49480_Token>* _35941_inToken) {
	jule::Ptr<_1c0c74631_RangeKind> _36013_rng = jule::new_ptr<_1c0c74631_RangeKind>(_1c0c74631_RangeKind{._field_InToken=(*(_35941_inToken)), });;
	if (((*(_35914_exprTokens)).len() == 0LL)) {
		_1c19536b6_pushErr(_self_, (*(_36013_rng))._field_InToken, jule::Str::lit("expression missing", 18));
		return _36013_rng;;
	};
	(*_36013_rng.alloc)._field_Expr=_1c1971849_buildExpr((*(_self_))._field_p, _35914_exprTokens);
	if (((*(_35842_var_tokens)).len() > 0LL)) {
		_1c1956785_setupRangeKindKeys(_self_, &(_36013_rng), _35842_var_tokens);
	};
	return _36013_rng;;
}



inline jule::Any _1c1957137_buildCommonIterKind(_1c195242e_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _37443_tokens, jule::Ptr<_1c0c49480_Token>* _37462_err_tok) {
	jule::I64 _37513_braceN = 0LL;;
	{
		auto expr = _37443_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5d5e55c:;
		if (it != expr_end) {
			jule::I64 _37614_i = it - expr->begin();
			jule::Ptr<_1c0c49480_Token> _37621_tok = *it;
			{
				{
					auto &_match_expr{ (*(_37621_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1c5d5eeec:;
						{
							(_37513_braceN)++;
							goto _iter_next_1c5d5e55c;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1c5d603c6:;
						{
							(_37513_braceN)--;
						}
					}
					_match_end_1c5d602e9:;
				};
				if ((_37513_braceN != 0LL)) {
					goto _iter_next_1c5d5e55c;
				};
				{
					auto &_match_expr{ (*(_37621_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(12LLU)) {
						_case_begin_1c5d614d7:;
						{
							jule::Slice<jule::Ptr<_1c0c49480_Token>> _39321_declTokens = (*(_37443_tokens)).slice(0LL, _37614_i);;
							jule::Slice<jule::Ptr<_1c0c49480_Token>> _39421_exprTokens = (*(_37443_tokens)).slice((_37614_i + 1LL));;
							return jule::Any(_1c1956c3b_buildRangeIterKind(_self_, &(_39321_declTokens), &(_39421_exprTokens), &(_37621_tok)), &__jule_any_type38);;
						}
					}
					_match_end_1c5d61ac0:;
				};
			}
			_iter_next_1c5d5e55c:;
			++it;
			_37614_i++;
			goto _iter_begin_1c5d5e55c;
		}
		_iter_end_1c5d5e55c:;
	};
	return jule::Any(_1c1955278_buildWhileIterKind(_self_, _37443_tokens), &__jule_any_type36);;
}



inline jule::Ptr<_1c0c733ee_Iter> _1c1957478_buildCommonIter(_1c195242e_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>> _40138_tokens) {
	jule::Ptr<_1c0c733ee_Iter> _40213_it = jule::new_ptr<_1c0c733ee_Iter>(_1c0c733ee_Iter{._field_Token=_40138_tokens[0LL], });;
	(_40138_tokens).mut_slice(1LL);;
	if ((_40138_tokens.len() == 0LL)) {
		_1c1952aa0_stop(_self_);
		_1c19536b6_pushErr(_self_, (*(_40213_it))._field_Token, jule::Str::lit("body is not exist", 17));
		_1c1953a29_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _41213_exprTokens = _1c196ab73_getBlockExpr(&(_40138_tokens));;
	if ((_41213_exprTokens.len() > 0LL)) {
		(*_40213_it.alloc)._field_Kind=_1c1957137_buildCommonIterKind(_self_, &(_41213_exprTokens), &((*_40213_it.alloc)._field_Token));
	};
	jule::I64 _41613_i = _41213_exprTokens.len();;
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _41713_scopeTokens = _1c196dd96_range(&(_41613_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_40138_tokens));;
	if ((_41713_scopeTokens == nullptr)) {
		_1c1952aa0_stop(_self_);
		_1c19536b6_pushErr(_self_, (*_40213_it.alloc)._field_Token, jule::Str::lit("body is not exist", 17));
		_1c1953a29_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_41613_i < _40138_tokens.len())) {
		_1c19536b6_pushErr(_self_, _40138_tokens[_41613_i], jule::Str::lit("invalid syntax", 14));
	};
	(*_40213_it.alloc)._field_Scope=_1c1954464_buildScope(_self_, &(_41713_scopeTokens), _40138_tokens[(_41613_i - 1LL)]);
	return _40213_it;;
}



inline jule::Ptr<_1c0c733ee_Iter> _1c19577b9_buildIterSt(_1c195242e_scopeParser* _self_, jule::Ptr<_1c1951a8d_stmt>* _43135_st) {
	if ((*((*(_43135_st))))._field_terminated) {
		return _1c1954e37_buildWhileNextIter(_self_, _43135_st);;
	};
	return _1c1957478_buildCommonIter(_self_, (*((*(_43135_st))))._field_tokens);;
}



inline jule::Ptr<_1c0c74a0a_BreakSt> _1c1957b0a_buildBreakSt(_1c195242e_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _43836_tokens) {
	jule::Ptr<_1c0c74a0a_BreakSt> _43913_brk = jule::new_ptr<_1c0c74a0a_BreakSt>(_1c0c74a0a_BreakSt{._field_Token=(*(_43836_tokens))[0LL], });;
	if (((*(_43836_tokens)).len() > 1LL)) {
		if (((*((*(_43836_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1c19536b6_pushErr(_self_, (*(_43836_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			_1c1953a29_pushSuggestion(_self_, jule::Str::lit("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_43913_brk))._field_Label=(*(_43836_tokens))[1LL];
			if (((*(_43836_tokens)).len() > 2LL)) {
				_1c19536b6_pushErr(_self_, (*(_43836_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			};
		};
	};
	return _43913_brk;;
}



inline jule::Ptr<_1c0c74dd4_ContSt> _1c1957e4b_buildContSt(_1c195242e_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _45635_tokens) {
	jule::Ptr<_1c0c74dd4_ContSt> _45713_cont = jule::new_ptr<_1c0c74dd4_ContSt>(_1c0c74dd4_ContSt{._field_Token=(*(_45635_tokens))[0LL], });;
	if (((*(_45635_tokens)).len() > 1LL)) {
		if (((*((*(_45635_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1c19536b6_pushErr(_self_, (*(_45635_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			_1c1953a29_pushSuggestion(_self_, jule::Str::lit("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_45713_cont))._field_Label=(*(_45635_tokens))[1LL];
			if (((*(_45635_tokens)).len() > 2LL)) {
				_1c19536b6_pushErr(_self_, (*(_45635_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			};
		};
	};
	return _45713_cont;;
}



inline jule::Ptr<_1c0c7538a_If> _1c195828c_buildIf(_1c195242e_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _47431_tokens) {
	jule::Ptr<_1c0c7538a_If> _47513_model = jule::new_ptr<_1c0c7538a_If>(_1c0c7538a_If{._field_Token=(*(_47431_tokens))[0LL], });;
	((*(_47431_tokens))).mut_slice(1LL);;
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _47913_exprTokens = _1c196ab73_getBlockExpr(_47431_tokens);;
	jule::I64 _48013_i = 0LL;;
	if ((_47913_exprTokens.len() == 0LL)) {
		_1c19536b6_pushErr(_self_, (*(_47513_model))._field_Token, jule::Str::lit("expression missing", 18));
	} else {
		_48013_i=_47913_exprTokens.len();
	};
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _48613_scopeTokens = _1c196dd96_range(&(_48013_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _47431_tokens);;
	if ((_48613_scopeTokens == nullptr)) {
		_1c1952aa0_stop(_self_);
		_1c19536b6_pushErr(_self_, (*(_47513_model))._field_Token, jule::Str::lit("body is not exist", 17));
		_1c1953a29_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c0c49480_Token> _49313_end = (*(_47431_tokens))[(_48013_i - 1LL)];;
	if ((_48013_i < (*(_47431_tokens)).len())) {
		if (((*((*(_47431_tokens))[_48013_i]))._field_Id == static_cast<jule::U64>(14LLU))) {
			((*(_47431_tokens))).mut_slice(_48013_i);;
		} else {
			_1c19536b6_pushErr(_self_, (*(_47431_tokens))[_48013_i], jule::Str::lit("invalid syntax", 14));
			(*(_47431_tokens))=nullptr;
		};
	};
	(*_47513_model.alloc)._field_Expr=_1c1971849_buildExpr((*(_self_))._field_p, &(_47913_exprTokens));
	(*_47513_model.alloc)._field_Scope=_1c1954464_buildScope(_self_, &(_48613_scopeTokens), _49313_end);
	return _47513_model;;
}



inline jule::Ptr<_1c0c75764_Else> _1c19585cd_buildElse(_1c195242e_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _50733_tokens) {
	jule::Ptr<_1c0c75764_Else> _50813_els = jule::new_ptr<_1c0c75764_Else>(_1c0c75764_Else{._field_Token=(*(_50733_tokens))[0LL], });;
	((*(_50733_tokens))).mut_slice(1LL);;
	jule::I64 _51213_i = 0LL;;
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _51313_scopeTokens = _1c196dd96_range(&(_51213_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _50733_tokens);;
	if ((_51313_scopeTokens == nullptr)) {
		if ((_51213_i < (*(_50733_tokens)).len())) {
			_1c19536b6_pushErr(_self_, (*(_50813_els))._field_Token, jule::Str::lit("else's cannot have any expression", 33));
		} else {
			_1c1952aa0_stop(_self_);
			_1c19536b6_pushErr(_self_, (*(_50813_els))._field_Token, jule::Str::lit("body is not exist", 17));
			_1c1953a29_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_51213_i < (*(_50733_tokens)).len())) {
		_1c19536b6_pushErr(_self_, (*(_50733_tokens))[_51213_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_50813_els))._field_Scope=_1c1954464_buildScope(_self_, &(_51313_scopeTokens), (*(_50733_tokens))[(_51213_i - 1LL)]);
	return _50813_els;;
}



inline jule::Ptr<_1c0c75c1a_Conditional> _1c195891e_buildIfElseChain(_1c195242e_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>> _53139_tokens) {
	jule::Ptr<_1c0c75c1a_Conditional> _53213_chain = jule::new_ptr<_1c0c75c1a_Conditional>(_1c0c75c1a_Conditional{._field_Head=_1c195828c_buildIf(_self_, &(_53139_tokens)), });;
	if (((*(_53213_chain))._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53139_tokens.len() != 0LL)) {
		{
			if (((*(_53139_tokens[0LL]))._field_Id != static_cast<jule::U64>(14LLU))) {
				goto _iter_end_1c5d7b9db;
			};
			if (((_53139_tokens.len() > 1LL) && ((*(_53139_tokens[1LL]))._field_Id == static_cast<jule::U64>(13LLU)))) {
				(_53139_tokens).mut_slice(1LL);;
				jule::Ptr<_1c0c7538a_If> _54421_elif = _1c195828c_buildIf(_self_, &(_53139_tokens));;
				(*_53213_chain.alloc)._field_Tail=jule::append((*_53213_chain.alloc)._field_Tail,jule::Slice<jule::Ptr<_1c0c7538a_If>>::make({_54421_elif}));
				goto _iter_next_1c5d7b9db;
			};
			(*_53213_chain.alloc)._field_Default=_1c19585cd_buildElse(_self_, &(_53139_tokens));
			goto _iter_end_1c5d7b9db;
		}
	_iter_next_1c5d7b9db:;
	}
	_iter_end_1c5d7b9db:;;
	return _53213_chain;;
}



inline jule::Ptr<_1c0c63c6e_Expr> _1c1958c60_buildCoCallSt(_1c195242e_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>> _55436_tokens) {
	jule::Ptr<_1c0c49480_Token> _5559_token = _55436_tokens[0LL];;
	(_55436_tokens).mut_slice(1LL);;
	jule::Ptr<_1c0c63c6e_Expr> _55713_e = _1c1971849_buildExpr((*(_self_))._field_p, &(_55436_tokens));;
	if ((_55713_e == nullptr)) {
		return _55713_e;;
	};
	{
		auto &_match_expr{ (*(_55713_e))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1c5d80b11:;
			{
				(*((*(_55713_e))._field_Kind.unsafe_cast_ptr<_1c0c67998_FnCallExpr>()))._field_IsCo=true;
			}
		}
		else {
			_case_begin_1c5d8113e:;
			{
				_1c19536b6_pushErr(_self_, _5559_token, jule::Str::lit("statement must have function call expression", 44));
			}
		}
		_match_end_1c5d810d9:;
	};
	return _55713_e;;
}



inline jule::Ptr<_1c0c6c3e8_GotoSt> _1c19590a1_buildGotoSt(_1c195242e_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _57035_tokens) {
	jule::Ptr<_1c0c6c3e8_GotoSt> _57113_gt = jule::new_ptr<_1c0c6c3e8_GotoSt>(_1c0c6c3e8_GotoSt{._field_Token=(*(_57035_tokens))[0LL], });;
	if (((*(_57035_tokens)).len() == 1LL)) {
		_1c19536b6_pushErr(_self_, (*(_57113_gt))._field_Token, jule::Str::lit("missing label identifier for goto statement", 43));
		return nullptr;;
	} else if (((*(_57035_tokens)).len() > 2LL)) {
		_1c19536b6_pushErr(_self_, (*(_57035_tokens))[2LL], jule::Str::lit("invalid syntax", 14));
	};
	jule::Ptr<_1c0c49480_Token> _58013_identToken = (*(_57035_tokens))[1LL];;
	if (((*(_58013_identToken))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c19536b6_pushErr(_self_, _58013_identToken, jule::Str::lit("invalid syntax", 14));
		_1c1953a29_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return _57113_gt;;
	};
	(*(_57113_gt))._field_Label=_58013_identToken;
	return _57113_gt;;
}



inline jule::Ptr<_1c0c6c6e5_FallSt> _1c19593e2_buildFallSt(_1c195242e_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _59035_tokens) {
	jule::Ptr<_1c0c6c6e5_FallSt> _59113_fll = jule::new_ptr<_1c0c6c6e5_FallSt>(_1c0c6c6e5_FallSt{._field_Token=(*(_59035_tokens))[0LL]});;
	if (((*(_59035_tokens)).len() > 1LL)) {
		_1c19536b6_pushErr(_self_, (*(_59035_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
	};
	return _59113_fll;;
}



inline jule::Ptr<_1c0c76457_TypeAliasDecl> _1c1959733_buildTypeAliasSt(_1c195242e_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _60040_tokens) {
	jule::Ptr<_1c0c76457_TypeAliasDecl> _60113_tad = _1c19730dc_buildTypeAliasDecl((*(_self_))._field_p, _60040_tokens);;
	(*(_60113_tad))._field_Scope=(*(_self_))._field_s;
	return _60113_tad;;
}



inline void _1c1959c0b_pushCaseExpr(_1c195242e_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>> _60635_tokens, jule::Ptr<_1c0c49480_Token> _60657_token, jule::Bool _6079_typeMatch, jule::Slice<jule::Ptr<_1c0c63c6e_Expr>>* _60731_exprs) {
	if ((_60635_tokens.len() == 0LL)) {
		return;;
	};
	if (_6079_typeMatch) {
		jule::I64 _61217_i = 0LL;;
		jule::Ptr<_1c0c5e93a_TypeDecl> _61317_t;
		jule::Bool _61320_ok;
		({
			__jule_tuple_x_1c0c5e93a_TypeDecl__jule_tuple_bool __jule_assign_result = _1c1972c9b_buildType((*(_self_))._field_p, &(_60635_tokens), (&(_61217_i)), true);
			_61317_t = __jule_assign_result.__jule_result_arg0;
			_61320_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_61320_ok) {
			{ jule::Slice<jule::Ptr<_1c0c63c6e_Expr>> &__jule_push_dest = (*(_60731_exprs)); __jule_push_dest.push(jule::new_ptr<_1c0c63c6e_Expr>(_1c0c63c6e_Expr{._field_Token=_60635_tokens[0LL], ._field_End=_60635_tokens[(_60635_tokens.len() - 1LL)], ._field_Kind=jule::Any(_61317_t, &__jule_any_type89)})); };
			if ((_61217_i < _60635_tokens.len())) {
				_1c19536b6_pushErr(_self_, _60635_tokens[_61217_i], jule::Str::lit("invalid syntax", 14));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_1c0c63c6e_Expr>> &__jule_push_dest = (*(_60731_exprs)); __jule_push_dest.push(_1c1971849_buildExpr((*(_self_))._field_p, &(_60635_tokens))); };
}



inline __jule_tuple_sx_1c0c63c6e_Expr__jule_tuple_bool _1c195a1b2_buildCaseExprs(_1c195242e_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _62938_tokens, jule::Ptr<_1c0c49480_Token>* _62961_colon, jule::Bool _62976_typeMatch) {
	__jule_tuple_sx_1c0c63c6e_Expr__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::Ptr<_1c0c63c6e_Expr>> _63013_exprs = jule::Slice<jule::Ptr<_1c0c63c6e_Expr>>::alloc(0LL, 1LL);;
	jule::I64 _63113_braceN = 0LL;;
	jule::I64 _63213_j = 0LL;;
	{
		auto expr = _62938_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5d8c557:;
		if (it != expr_end) {
			jule::I64 _63314_i = it - expr->begin();
			jule::Ptr<_1c0c49480_Token> _63321_tok = *it;
			{
				{
					auto &_match_expr{ (*(_63321_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1c5d8d899:;
						{
							(_63113_braceN)++;
							goto _iter_next_1c5d8c557;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1c5d8dc73:;
						{
							(_63113_braceN)--;
							goto _iter_next_1c5d8c557;
						}
					}
					_match_end_1c5d8db96:;
				};
				if ((_63113_braceN != 0LL)) {
					goto _iter_next_1c5d8c557;
				};
				{
					
					if (((*(_63321_tok))._field_Id == static_cast<jule::U64>(66LLU))) {
						_case_begin_1c5d90406:;
						{
							jule::Slice<jule::Ptr<_1c0c49480_Token>> _65217_exprTokens = (*(_62938_tokens)).slice(_63213_j, _63314_i);;
							if ((_65217_exprTokens.len() == 0LL)) {
								_1c19536b6_pushErr(_self_, _63321_tok, jule::Str::lit("expression missing", 18));
							} else {
								_1c1959c0b_pushCaseExpr(_self_, (*(_62938_tokens)).slice(_63213_j, _63314_i), _63321_tok, _62976_typeMatch, &(_63013_exprs));
							};
							_63213_j=(_63314_i + 1LL);
						}
					}
					else if (((*(_63321_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
						_case_begin_1c5d9046c:;
						{
							(*(_62961_colon))=_63321_tok;
							_1c1959c0b_pushCaseExpr(_self_, (*(_62938_tokens)).slice(_63213_j, _63314_i), _63321_tok, _62976_typeMatch, &(_63013_exprs));
							((*(_62938_tokens))).mut_slice((_63314_i + 1LL));;
							__jule_func_result.__jule_result_arg0 = _63013_exprs;
							__jule_func_result.__jule_result_arg1 = (((_63314_i - _63213_j) == 0LL) || (_63013_exprs.len() != 0LL));
							return __jule_func_result;;
						}
					}
					_match_end_1c5d902e6:;
				};
			}
			_iter_next_1c5d8c557:;
			++it;
			_63314_i++;
			goto _iter_begin_1c5d8c557;
		}
		_iter_end_1c5d8c557:;
	};
	_1c19536b6_pushErr(_self_, (*(_62938_tokens))[0LL], jule::Str::lit("invalid syntax", 14));
	(*(_62938_tokens))=nullptr;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline jule::Ptr<_1c0c6e95b_ScopeTree> _1c195a503_buildCaseScope(_1c195242e_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _67138_tokens) {
	jule::I64 _67213_n = 0LL;;
	for (;;) {
		{
			jule::I64 _67417_i = 0LL;;
			jule::Slice<jule::Ptr<_1c0c49480_Token>> _67517_next;
			({
				__jule_tuple_sx_1c0c49480_Token__jule_tuple_bool __jule_assign_result = _1c195175d_skipSt(&(_67417_i), (*(_67138_tokens)).slice(_67213_n));
				_67517_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_67517_next.len() == 0LL)) {
				goto _iter_end_1c5d93eed;
			};
			jule::Ptr<_1c0c49480_Token> _67913_tok = _67517_next[0LL];;
			if (((*(_67913_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_67213_n+=_67417_i;
				goto _iter_next_1c5d93eed;
			};
			jule::Slice<jule::Ptr<_1c0c49480_Token>> _68417_scopeTokens = (*(_67138_tokens)).slice(0LL, _67213_n);;
			jule::Ptr<_1c0c6e95b_ScopeTree> _68517_scope = _1c1954464_buildScope(_self_, &(_68417_scopeTokens), (*(_67138_tokens))[_67213_n]);;
			((*(_67138_tokens))).mut_slice(_67213_n);;
			return _68517_scope;;
		}
	_iter_next_1c5d93eed:;
	}
	_iter_end_1c5d93eed:;;
	jule::Ptr<_1c0c49480_Token> _68917_end;;
	if (((*(_67138_tokens)).len() > 0LL)) {
		_68917_end=(*(_67138_tokens))[((*(_67138_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1c0c6e95b_ScopeTree> _69313_scope = _1c1954464_buildScope(_self_, _67138_tokens, _68917_end);;
	(*(_67138_tokens))=nullptr;
	return _69313_scope;;
}



inline __jule_tuple_x_1c0c7690d_Case__jule_tuple_bool _1c195a8ee_buildCase(_1c195242e_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _69833_tokens, jule::Bool _69851_typeMatch) {
	__jule_tuple_x_1c0c7690d_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1c0c7690d_Case> _69913_c = jule::new_ptr<_1c0c7690d_Case>(_1c0c7690d_Case{._field_Token=(*(_69833_tokens))[0LL], });;
	((*(_69833_tokens))).mut_slice(1LL);;
	jule::Ptr<_1c0c49480_Token> _70317_colon = nullptr;;
	jule::Bool _70418_ok;
	({
		__jule_tuple_sx_1c0c63c6e_Expr__jule_tuple_bool __jule_assign_result = _1c195a1b2_buildCaseExprs(_self_, _69833_tokens, &(_70317_colon), _69851_typeMatch);
		(*(_69913_c))._field_Exprs = __jule_assign_result.__jule_result_arg0;
		_70418_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*_69913_c.alloc)._field_Scope=_1c195a503_buildCaseScope(_self_, _69833_tokens);
	if (((*((*_69913_c.alloc)._field_Scope))._field_End == nullptr)) {
		(*(*_69913_c.alloc)._field_Scope.alloc)._field_End=_70317_colon;
	};
	jule::Bool _7099_isDefault = (_70418_ok && ((*_69913_c.alloc)._field_Exprs.len() == 0LL));;
	__jule_func_result.__jule_result_arg0 = _69913_c;
	__jule_func_result.__jule_result_arg1 = _7099_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1c0c7690d_Case__jule_tuple_x_1c0c75764_Else _1c195acea_buildCases(_1c195242e_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>> _71333_tokens, jule::Bool _71351_typeMatch) {
	__jule_tuple_sx_1c0c7690d_Case__jule_tuple_x_1c0c75764_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1c0c7690d_Case>> _71417_cases = nullptr;;
	jule::Ptr<_1c0c75764_Else> _71517_def = nullptr;;
	jule::Bool _71613_defNotLast = false;;
	while ((_71333_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1c0c49480_Token> _71817_tok = _71333_tokens[0LL];;
			if (((*(_71817_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_1c19536b6_pushErr(_self_, _71817_tok, jule::Str::lit("invalid syntax", 14));
				goto _iter_end_1c5d9c5de;
			};
			jule::Ptr<_1c0c7690d_Case> _72317_c;
			jule::Bool _72320_isDefault;
			({
				__jule_tuple_x_1c0c7690d_Case__jule_tuple_bool __jule_assign_result = _1c195a8ee_buildCase(_self_, &(_71333_tokens), _71351_typeMatch);
				_72317_c = __jule_assign_result.__jule_result_arg0;
				_72320_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72320_isDefault) {
				(*(_72317_c))._field_Token=_71817_tok;
				if ((_71517_def == nullptr)) {
					_71517_def=jule::new_ptr<_1c0c75764_Else>(_1c0c75764_Else{._field_Token=(*_72317_c.alloc)._field_Token, ._field_Scope=(*_72317_c.alloc)._field_Scope});
				} else {
					_1c19536b6_pushErr(_self_, _71817_tok, jule::Str::lit("invalid syntax", 14));
				};
			} else {
				_71613_defNotLast=(_71613_defNotLast || (_71517_def != nullptr));
				{ jule::Slice<jule::Ptr<_1c0c7690d_Case>> &__jule_push_dest = _71417_cases; __jule_push_dest.push(_72317_c); };
			};
		}
	_iter_next_1c5d9c5de:;
	}
	_iter_end_1c5d9c5de:;;
	if (_71613_defNotLast) {
		_1c19536b6_pushErr(_self_, (*(_71517_def))._field_Token, jule::Str::lit("default case should be last case", 32));
	};
	__jule_func_result.__jule_result_arg0 = _71417_cases;
	__jule_func_result.__jule_result_arg1 = _71517_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1c0c77227_MatchCase> _1c195b13b_buildMatchCase(_1c195242e_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>> _74737_tokens) {
	jule::Ptr<_1c0c77227_MatchCase> _74813_m = jule::new_ptr<_1c0c77227_MatchCase>(_1c0c77227_MatchCase{._field_Token=_74737_tokens[0LL], });;
	(_74737_tokens).mut_slice(1LL);;
	if (((_74737_tokens.len() > 0LL) && ((*(_74737_tokens[0LL]))._field_Id == static_cast<jule::U64>(7LLU)))) {
		(*(_74813_m))._field_TypeMatch=true;
		(_74737_tokens).mut_slice(1LL);;
	};
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _75813_exprTokens = _1c196ab73_getBlockExpr(&(_74737_tokens));;
	if ((_75813_exprTokens.len() > 0LL)) {
		(*_74813_m.alloc)._field_Expr=_1c1971849_buildExpr((*(_self_))._field_p, &(_75813_exprTokens));
	} else if ((*_74813_m.alloc)._field_TypeMatch) {
		_1c19536b6_pushErr(_self_, (*_74813_m.alloc)._field_Token, jule::Str::lit("expression missing", 18));
	};
	jule::I64 _76513_i = _75813_exprTokens.len();;
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _76613_blockToks = _1c196dd96_range(&(_76513_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_74737_tokens));;
	if ((_76613_blockToks == nullptr)) {
		_1c1952aa0_stop(_self_);
		_1c19536b6_pushErr(_self_, (*_74813_m.alloc)._field_Token, jule::Str::lit("body is not exist", 17));
		_1c1953a29_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_76513_i < _74737_tokens.len())) {
		_1c19536b6_pushErr(_self_, _74737_tokens[_76513_i], jule::Str::lit("invalid syntax", 14));
	};
	(*_74813_m.alloc)._field_End=_74737_tokens[(_76513_i - 1LL)];
	({
		__jule_tuple_sx_1c0c7690d_Case__jule_tuple_x_1c0c75764_Else __jule_assign_result = _1c195acea_buildCases(_self_, _76613_blockToks, (*_74813_m.alloc)._field_TypeMatch);
		(*_74813_m.alloc)._field_Cases = __jule_assign_result.__jule_result_arg0;
		(*_74813_m.alloc)._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _74813_m;;
}



inline jule::Ptr<_1c0c6e95b_ScopeTree> _1c195b47c_buildScopeSt(_1c195242e_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>> _78035_tokens) {
	jule::Bool _78113_isUnsafe = false;;
	jule::Bool _78213_isDeferred = false;;
	jule::Ptr<_1c0c49480_Token> _78313_token = _78035_tokens[0LL];;
	if (((*(_78313_token))._field_Id == static_cast<jule::U64>(31LLU))) {
		_78113_isUnsafe=true;
		(_78035_tokens).mut_slice(1LL);;
		if ((_78035_tokens.len() == 0LL)) {
			_1c19536b6_pushErr(_self_, _78313_token, jule::Str::lit("invalid syntax", 14));
			return nullptr;;
		};
		_78313_token=_78035_tokens[0LL];
		if (((*_78313_token.alloc)._field_Id == static_cast<jule::U64>(33LLU))) {
			_78213_isDeferred=true;
			(_78035_tokens).mut_slice(1LL);;
			if ((_78035_tokens.len() == 0LL)) {
				_1c19536b6_pushErr(_self_, _78313_token, jule::Str::lit("invalid syntax", 14));
				return nullptr;;
			};
		};
	} else if (((*(_78313_token))._field_Id == static_cast<jule::U64>(33LLU))) {
		_78213_isDeferred=true;
		(_78035_tokens).mut_slice(1LL);;
		if ((_78035_tokens.len() == 0LL)) {
			_1c19536b6_pushErr(_self_, _78313_token, jule::Str::lit("invalid syntax", 14));
			return nullptr;;
		};
	};
	jule::I64 _80913_i = 0LL;;
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _81013_scopeTokens = _1c196dd96_range(&(_80913_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_78035_tokens));;
	if ((_81013_scopeTokens == nullptr)) {
		_1c19536b6_pushErr(_self_, _78313_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	} else if ((_80913_i < _78035_tokens.len())) {
		_1c19536b6_pushErr(_self_, _78035_tokens[_80913_i], jule::Str::lit("invalid syntax", 14));
	};
	jule::Ptr<_1c0c6e95b_ScopeTree> _81713_scope = _1c1954464_buildScope(_self_, &(_81013_scopeTokens), _78035_tokens[(_80913_i - 1LL)]);;
	(*(_81713_scope))._field_Unsafety=_78113_isUnsafe;
	(*_81713_scope.alloc)._field_Deferred=_78213_isDeferred;
	return _81713_scope;;
}



inline jule::Ptr<_1c0c6c01e_LabelSt> _1c195b7bd_buildLabelSt(_1c195242e_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _82336_tokens) {
	jule::Ptr<_1c0c6c01e_LabelSt> _82413_lbl = jule::new_ptr<_1c0c6c01e_LabelSt>(_1c0c6c01e_LabelSt{._field_Token=(*(_82336_tokens))[0LL], ._field_Ident=(*((*(_82336_tokens))[0LL]))._field_Kind});;
	if (((*(_82336_tokens)).len() > 2LL)) {
		((*(_82336_tokens))).mut_slice(2LL);;
		_1c1953cd2_insertAsNext(_self_, _82336_tokens);
	};
	return _82413_lbl;;
}



inline __jule_tuple__1c0c6e098_StmtData__jule_tuple_bool _1c195bb0e_buildIdSt(_1c195242e_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _83833_tokens) {
	__jule_tuple__1c0c6e098_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_83833_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_1c0c49480_Token> _84313_token = (*(_83833_tokens))[1LL];;
	{
		auto &_match_expr{ (*(_84313_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1c5db325e:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1c195b7bd_buildLabelSt(_self_, _83833_tokens), &__jule_any_type55);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1c5db3a12:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1c196c2e5_assignInfo> _1c195be50_buildAssignInfo(_1c195242e_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _85239_tokens) {
	jule::Ptr<_1c196c2e5_assignInfo> _85313_info = jule::new_ptr<_1c196c2e5_assignInfo>(_1c196c2e5_assignInfo{._field_ok=true});;
	jule::I64 _85613_braceN = 0LL;;
	{
		auto expr = _85239_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5db522d:;
		if (it != expr_end) {
			jule::I64 _85714_i = it - expr->begin();
			jule::Ptr<_1c0c49480_Token> _85721_token = *it;
			{
				{
					auto &_match_expr{ (*(_85721_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1c5db5bac:;
						{
							(_85613_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1c5db6053:;
						{
							(_85613_braceN)--;
						}
					}
					_match_end_1c5db5e87:;
				};
				{
					
					if ((_85613_braceN > 0LL)) {
						_case_begin_1c5db6152:;
						{
							goto _iter_next_1c5db522d;
						}
					}
					else if (((!(_1c0c4e2cb_IsAssignOp((*(_85721_token))._field_Id))) && ((*_85721_token.alloc)._field_Id != static_cast<jule::U64>(38LLU)))) {
						_case_begin_1c5db7230:;
						{
							goto _iter_next_1c5db522d;
						}
					}
					_match_end_1c5db7197:;
				};
				(*(_85313_info))._field_l=(*(_85239_tokens)).slice(0LL, _85714_i);
				if (((*_85313_info.alloc)._field_l.len() == 0LL)) {
					(*_85313_info.alloc)._field_ok=false;
				};
				(*_85313_info.alloc)._field_setter=_85721_token;
				if (((_85714_i + 1LL) >= (*(_85239_tokens)).len())) {
					(*_85313_info.alloc)._field_r=nullptr;
					(*_85313_info.alloc)._field_ok=_1c0c4e012_IsPostfixOp((*((*_85313_info.alloc)._field_setter))._field_Id);
					goto _iter_end_1c5db522d;
				};
				(*_85313_info.alloc)._field_r=(*(_85239_tokens)).slice((_85714_i + 1LL));
				if (_1c0c4e012_IsPostfixOp((*(*_85313_info.alloc)._field_setter.alloc)._field_Id)) {
					if (((*_85313_info.alloc)._field_r.len() > 0LL)) {
						_1c19536b6_pushErr(_self_, (*_85313_info.alloc)._field_r[0LL], jule::Str::lit("invalid syntax", 14));
						(*_85313_info.alloc)._field_r=nullptr;
					};
				};
				goto _iter_end_1c5db522d;
			}
			_iter_next_1c5db522d:;
			++it;
			_85714_i++;
			goto _iter_begin_1c5db522d;
		}
		_iter_end_1c5db522d:;
	};
	return _85313_info;;
}



inline jule::Ptr<_1c0c6cd55_AssignLeft> _1c195c291_buildAssignL(_1c195242e_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _89736_tokens) {
	jule::Ptr<_1c0c6cd55_AssignLeft> _89813_l = jule::new_ptr<_1c0c6cd55_AssignLeft>(_1c0c6cd55_AssignLeft{._field_Token=(*(_89736_tokens))[0LL], });;
	if (((*((*(_89736_tokens))[0LL]))._field_Id == static_cast<jule::U64>(1LLU))) {
		(*(_89813_l))._field_Ident=(*((*_89813_l.alloc)._field_Token))._field_Kind;
	};
	(*_89813_l.alloc)._field_Expr=_1c1971849_buildExpr((*(_self_))._field_p, _89736_tokens);
	return _89813_l;;
}



inline jule::Slice<jule::Ptr<_1c0c6cd55_AssignLeft>> _1c195c5d2_buildAssignLs(_1c195242e_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>>* _90837_parts) {
	jule::Slice<jule::Ptr<_1c0c6cd55_AssignLeft>> _90917_lefts = nullptr;;
	{
		auto expr = _90837_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5dbec2c:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c0c49480_Token>> _91021_part = *it;
			{
				jule::Ptr<_1c0c6cd55_AssignLeft> _91117_l = _1c195c291_buildAssignL(_self_, &(_91021_part));;
				{ jule::Slice<jule::Ptr<_1c0c6cd55_AssignLeft>> &__jule_push_dest = _90917_lefts; __jule_push_dest.push(_91117_l); };
			}
			_iter_next_1c5dbec2c:;
			++it;
			goto _iter_begin_1c5dbec2c;
		}
		_iter_end_1c5dbec2c:;
	};
	return _90917_lefts;;
}



inline __jule_tuple__1c0c6e098_StmtData__jule_tuple_bool _1c195c923_buildPlainAssign(_1c195242e_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _91740_tokens) {
	__jule_tuple__1c0c6e098_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1c196c2e5_assignInfo> _91813_info = _1c195be50_buildAssignInfo(_self_, _91740_tokens);;
	if ((!((*(_91813_info))._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c0c6d3d8_AssignSt> _92313_assign = jule::new_ptr<_1c0c6d3d8_AssignSt>(_1c0c6d3d8_AssignSt{._field_Setter=(*_91813_info.alloc)._field_setter, });;
	if (((*((*_91813_info.alloc)._field_setter))._field_Id == static_cast<jule::U64>(38LLU))) {
		(*(_92313_assign))._field_Declarative=true;
		(*_92313_assign.alloc)._field_Right=_1c1971849_buildExpr((*(_self_))._field_p, &((*_91813_info.alloc)._field_r));
		jule::Bool _93113_ok = _1c195cd1e_buildDeclAssign1(_self_, &((*_91813_info.alloc)._field_l), &(_92313_assign));;
		if ((!(_93113_ok))) {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		if (((*_92313_assign.alloc)._field_Left.len() > 1LL)) {
			__jule_func_result.__jule_result_arg0 = jule::Any(_92313_assign, &__jule_any_type57);
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		jule::Ptr<_1c0c6cd55_AssignLeft> _94017_left = (*_92313_assign.alloc)._field_Left[0LL];;
		jule::Ptr<_1c0c727a5_VarDecl> _94117_decl = jule::new_ptr<_1c0c727a5_VarDecl>(_1c0c727a5_VarDecl{._field_Scope=(*(_self_))._field_s, ._field_Token=(*(_94017_left))._field_Token, ._field_Setter=(*_92313_assign.alloc)._field_Setter, ._field_Ident=(*_94017_left.alloc)._field_Ident, ._field_Mutable=(*_94017_left.alloc)._field_Mutable, ._field_Reference=(*_94017_left.alloc)._field_Reference, ._field_Expr=(*_92313_assign.alloc)._field_Right});;
		__jule_func_result.__jule_result_arg0 = jule::Any(_94117_decl, &__jule_any_type16);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>> _95313_parts;
	jule::Slice<_21b8c54de_Log> _95320_errs;
	({
		__jule_tuple_ssx_1c0c49480_Token__jule_tuple_s_21b8c54de_Log __jule_assign_result = _1c196e616_parts(&((*_91813_info.alloc)._field_l), static_cast<jule::U64>(5LLU), true);
		_95313_parts = __jule_assign_result.__jule_result_arg0;
		_95320_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_95320_errs.len() > 0LL)) {
		(*(*(_self_))._field_p.alloc)._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_95320_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(*_92313_assign.alloc)._field_Left=_1c195c5d2_buildAssignLs(_self_, &(_95313_parts));
	if (((*_91813_info.alloc)._field_r != nullptr)) {
		(*_92313_assign.alloc)._field_Right=_1c1971849_buildExpr((*(_self_))._field_p, &((*_91813_info.alloc)._field_r));
	};
	__jule_func_result.__jule_result_arg0 = jule::Any(_92313_assign, &__jule_any_type57);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Bool _1c195cd1e_buildDeclAssign1(_1c195242e_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _96740_lefts, jule::Ptr<_1c0c6d3d8_AssignSt>* _96762_assign) {
	jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>> _96913_parts;
	jule::Slice<_21b8c54de_Log> _96920_errs;
	({
		__jule_tuple_ssx_1c0c49480_Token__jule_tuple_s_21b8c54de_Log __jule_assign_result = _1c196e616_parts(_96740_lefts, static_cast<jule::U64>(5LLU), true);
		_96913_parts = __jule_assign_result.__jule_result_arg0;
		_96920_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_96920_errs.len() > 0LL)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_96920_errs);
		return false;;
	};
	{
		auto expr = &(_96913_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5dcb420:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c0c49480_Token>> _97521_part = *it;
			{
				jule::Bool _97617_isMut = false;;
				jule::Bool _97717_isRef = false;;
				jule::Ptr<_1c0c49480_Token> _97913_token = _97521_part[0LL];;
				if (((*(_97913_token))._field_Id == static_cast<jule::U64>(32LLU))) {
					_97617_isMut=true;
					(_97521_part).mut_slice(1LL);;
					if ((_97521_part.len() == 0LL)) {
						_1c19536b6_pushErr(_self_, _97913_token, jule::Str::lit("invalid syntax", 14));
						return false;;
					};
				};
				if (((*(_97521_part[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
					_97717_isRef=true;
					(_97521_part).mut_slice(1LL);;
					if ((_97521_part.len() == 0LL)) {
						_1c19536b6_pushErr(_self_, _97913_token, jule::Str::lit("invalid syntax", 14));
						return false;;
					};
				};
				if ((((*(_97521_part[0LL]))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(_97521_part[0LL]))._field_Id != static_cast<jule::U64>(74LLU)))) {
					_1c19536b6_pushErr(_self_, _97913_token, jule::Str::lit("invalid syntax", 14));
					return false;;
				};
				jule::Ptr<_1c0c6cd55_AssignLeft> _100317_l = _1c195c291_buildAssignL(_self_, &(_97521_part));;
				(*(_100317_l))._field_Mutable=_97617_isMut;
				(*_100317_l.alloc)._field_Reference=_97717_isRef;
				{ jule::Slice<jule::Ptr<_1c0c6cd55_AssignLeft>> &__jule_push_dest = (*((*(_96762_assign))))._field_Left; __jule_push_dest.push(_100317_l); };
			}
			_iter_next_1c5dcb420:;
			++it;
			goto _iter_begin_1c5dcb420;
		}
		_iter_end_1c5dcb420:;
	};
	return true;;
}



inline __jule_tuple_x_1c0c6d3d8_AssignSt__jule_tuple_bool _1c195d160_buildDeclAssign(_1c195242e_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>> _101238_tokens) {
	__jule_tuple_x_1c0c6d3d8_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_101238_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(_101238_tokens).mut_slice(1LL);;
	jule::Ptr<_1c0c49480_Token> _101813_token = _101238_tokens[0LL];;
	if (((*(_101813_token))._field_Id != static_cast<jule::U64>(74LLU))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c0c6d3d8_AssignSt> _102313_assign = jule::new_ptr<_1c0c6d3d8_AssignSt>(_1c0c6d3d8_AssignSt{._field_Declarative=true, });;
	jule::I64 _102713_i = 0LL;;
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _102813_rang = _1c196dd96_range(&(_102713_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_101238_tokens));;
	if ((_102813_rang == nullptr)) {
		_1c19536b6_pushErr(_self_, _101813_token, jule::Str::lit("invalid syntax", 14));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_102713_i + 1LL) < _101238_tokens.len())) {
		(*(_102313_assign))._field_Setter=_101238_tokens[_102713_i];
		if (((*((*_102313_assign.alloc)._field_Setter))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1c19536b6_pushErr(_self_, (*_102313_assign.alloc)._field_Setter, jule::Str::lit("invalid syntax", 14));
		};
		(_102713_i)++;
		jule::Slice<jule::Ptr<_1c0c49480_Token>> _103817_exprTokens = _101238_tokens.slice(_102713_i);;
		(*_102313_assign.alloc)._field_Right=_1c1971849_buildExpr((*(_self_))._field_p, &(_103817_exprTokens));
	};
	jule::Bool _10429_ok = _1c195cd1e_buildDeclAssign1(_self_, &(_102813_rang), &(_102313_assign));;
	__jule_func_result.__jule_result_arg0 = _102313_assign;
	__jule_func_result.__jule_result_arg1 = _10429_ok;
	return __jule_func_result;;
}



inline __jule_tuple__1c0c6e098_StmtData__jule_tuple_bool _1c195d4a1_buildAssignSt(_1c195242e_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _104637_tokens) {
	__jule_tuple__1c0c6e098_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1c196c69c_checkAssignTokens(_104637_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_104637_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1c5dda74d:;
			{
				({
					__jule_tuple_x_1c0c6d3d8_AssignSt__jule_tuple_bool __jule_assign_result = _1c195d160_buildDeclAssign(_self_, (*(_104637_tokens)));
					__jule_func_result.__jule_result_arg0 = jule::Any(__jule_assign_result.__jule_result_arg0, &__jule_any_type57);
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1c5dd9bc0:;
			{
				({
					__jule_tuple__1c0c6e098_StmtData__jule_tuple_bool __jule_assign_result = _1c195c923_buildPlainAssign(_self_, _104637_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1c5dda176:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1c0c64643_UseExpr> _1c195d7e2_buildUseExpr(_1c195242e_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _105936_tokens) {
	if (((*(_105936_tokens)).len() == 1LL)) {
		_1c19536b6_pushErr(_self_, (*(_105936_tokens))[0LL], jule::Str::lit("expression missing", 18));
		return nullptr;;
	};
	jule::Ptr<_1c0c64643_UseExpr> _106413_ue = jule::new_ptr<_1c0c64643_UseExpr>(_1c0c64643_UseExpr{._field_Token=(*(_105936_tokens))[0LL], });;
	((*(_105936_tokens))).mut_slice(1LL);;
	(*(_106413_ue))._field_Expr=_1c1971849_buildExpr((*(_self_))._field_p, _105936_tokens);
	return _106413_ue;;
}



inline jule::Any _1c195db33_buildConstSt(_1c195242e_scopeParser* _self_, jule::Ptr<_1c1951a8d_stmt>* _107236_st) {
	if (((*((*(_107236_st))))._field_tokens.len() == 1LL)) {
		_1c19536b6_pushErr(_self_, (*((*(_107236_st))))._field_tokens[0LL], jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_107236_st))))._field_tokens[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1c5ddedc3:;
			{
				((*((*(_107236_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1c0c733ee_Iter> _108017_iter = _1c19577b9_buildIterSt(_self_, _107236_st);;
				if ((_108017_iter != nullptr)) {
					(*_108017_iter.alloc)._field_Comptime=true;
				};
				return jule::Any(_108017_iter, &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1c5ddeba3:;
			{
				((*((*(_107236_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1c0c77227_MatchCase> _108717_mt = _1c195b13b_buildMatchCase(_self_, (*((*(_107236_st))))._field_tokens);;
				if ((_108717_mt != nullptr)) {
					(*_108717_mt.alloc)._field_Comptime=true;
				};
				return jule::Any(_108717_mt, &__jule_any_type58);;
			}
		}
		else {
			_case_begin_1c5ddd71d:;
			{
				return jule::Any(_1c19547a5_buildVarSt(_self_, &((*((*(_107236_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		_match_end_1c5dde730:;
	};
}



inline jule::Any _1c195de74_buildSt(_1c195242e_scopeParser* _self_, jule::Ptr<_1c1951a8d_stmt>* _109731_st) {
	jule::Ptr<_1c0c49480_Token> _109813_token = (*((*(_109731_st))))._field_tokens[0LL];;
	if (((*(_109813_token))._field_Id == static_cast<jule::U64>(1LLU))) {
		jule::Any _110017_s;
		jule::Bool _110020_ok;
		({
			__jule_tuple__1c0c6e098_StmtData__jule_tuple_bool __jule_assign_result = _1c195bb0e_buildIdSt(_self_, &((*((*(_109731_st))))._field_tokens));
			_110017_s = __jule_assign_result.__jule_result_arg0;
			_110020_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_110020_ok) {
			return _110017_s;;
		};
	};
	jule::Any _110613_s;
	jule::Bool _110616_ok;
	({
		__jule_tuple__1c0c6e098_StmtData__jule_tuple_bool __jule_assign_result = _1c195d4a1_buildAssignSt(_self_, &((*((*(_109731_st))))._field_tokens));
		_110613_s = __jule_assign_result.__jule_result_arg0;
		_110616_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_110616_ok) {
		return _110613_s;;
	};
	{
		auto &_match_expr{ (*(_109813_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1c5de59ab:;
			{
				return jule::Any(_1c195d7e2_buildUseExpr(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1c5de5e2e:;
			{
				return _1c195db33_buildConstSt(_self_, _109731_st);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1c5de5ea6:;
			{
				return jule::Any(_1c19547a5_buildVarSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1c5de601c:;
			{
				return jule::Any(_1c1954ae6_buildRetSt(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1c5de6083:;
			{
				return jule::Any(_1c19577b9_buildIterSt(_self_, _109731_st), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1c5de60e9:;
			{
				return jule::Any(_1c1957b0a_buildBreakSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1c5de6171:;
			{
				return jule::Any(_1c1957e4b_buildContSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1c5de61e8:;
			{
				return jule::Any(_1c195891e_buildIfElseChain(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1c5de6270:;
			{
				return jule::Any(_1c1958c60_buildCoCallSt(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type51);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(18LLU)) {
			_case_begin_1c5de62e7:;
			{
				return jule::Any(_1c19590a1_buildGotoSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type56);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_1c5de636e:;
			{
				return jule::Any(_1c19593e2_buildFallSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type59);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1c5de63e6:;
			{
				return jule::Any(_1c1959733_buildTypeAliasSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1c5de646d:;
			{
				return jule::Any(_1c195b13b_buildMatchCase(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type58);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1c5de64e5:;
			{
				if (((*((*(_109731_st))))._field_tokens.len() < 1LL)) {
					goto _match_end_1c5de5c75;
				};
				if ((((*((*((*(_109731_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(33LLU)) || ((*((*((*(_109731_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(72LLU)))) {
					return jule::Any(_1c195b47c_buildScopeSt(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type50);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1c5de656c:;
			{
				return jule::Any(_1c195b47c_buildScopeSt(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type50);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1c5de65e4:;
			{
				return jule::Any(_1c195b47c_buildScopeSt(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type50);;
			}
		}
		_match_end_1c5de5c75:;
	};
	jule::Ptr<_1c0c63c6e_Expr> _115313_expr = _1c1971849_buildExpr((*(_self_))._field_p, &((*((*(_109731_st))))._field_tokens));;
	if ((_115313_expr != nullptr)) {
		return jule::Any(_115313_expr, &__jule_any_type51);;
	};
	_1c19536b6_pushErr(_self_, _109813_token, jule::Str::lit("invalid syntax", 14));
	return nullptr;;
}



inline void _1c195e2d7_build(_1c195242e_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _116129_tokens, jule::Ptr<_1c0c6e95b_ScopeTree>* _116152_s) {
	if (((*(_116152_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1c1951e45_splitStmts(_116129_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_116152_s));
	while (((!(_1c1953353_isLastSt(_self_))) && (!(_1c19530bc_finished(_self_))))) {
		{
			jule::Ptr<_1c1951a8d_stmt> _116917_st = _1c1954068_next(_self_);;
			jule::Any _117017_data = _1c195de74_buildSt(_self_, &(_116917_st));;
			if ((_117017_data != nullptr)) {
				(*((*(_self_))._field_s))._field_Stmts=jule::append((*(*(_self_))._field_s.alloc)._field_Stmts,jule::Slice<_1c0c6e2eb_Stmt>::make({_1c0c6e2eb_Stmt{._field_Token=(*(_116917_st))._field_tokens[0LL], ._field_Data=_117017_data}}));
			};
			if (_1c1952d36_stopped(_self_)) {
				goto _iter_end_1c5e03865;
			};
		}
	_iter_next_1c5e03865:;
	}
	_iter_end_1c5e03865:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c195242e_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _1c196063a_pushErr(_1c195ed54_exprBuilder* _self_, jule::Ptr<_1c0c49480_Token> _4526_token, jule::Str _4541_fmt, jule::Slice<jule::Any> _4554_args) {
	_1c1971195_pushErr((*(_self_))._field_p.ptr(), _4526_token, _4541_fmt, _4554_args);
}



inline void _1c196099d_pushSuggestion(_1c195ed54_exprBuilder* _self_, jule::Str _5033_fmt, jule::Slice<jule::Any> _5046_args) {
	_1c1971508_pushSuggestion((*(_self_))._field_p.ptr(), _5033_fmt, _5046_args);
}



inline jule::Ptr<_1c0c64863_TupleExpr> _1c1960cde_buildTuple(_1c195ed54_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>>* _5434_parts) {
	jule::Ptr<_1c0c64863_TupleExpr> _5513_tuple = jule::new_ptr<_1c0c64863_TupleExpr>(_1c0c64863_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_1c0c63c6e_Expr>>::alloc(0LL, (*(_5434_parts)).len())});;
	{
		auto expr = _5434_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5e28967:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c0c49480_Token>> _5821_part = *it;
			{
				(*(_5513_tuple))._field_Expr=jule::append((*_5513_tuple.alloc)._field_Expr,jule::Slice<jule::Ptr<_1c0c63c6e_Expr>>::make({_1c196a1d3_buildFromTokens(_self_, _5821_part)}));
			}
			_iter_next_1c5e28967:;
			++it;
			goto _iter_begin_1c5e28967;
		}
		_iter_end_1c5e28967:;
	};
	return _5513_tuple;;
}



inline jule::Ptr<_1c0c64c09_LitExpr> _1c1961130_buildLit(_1c195ed54_exprBuilder* _self_, jule::Ptr<_1c0c49480_Token> _6427_token) {
	return jule::new_ptr<_1c0c64c09_LitExpr>(_1c0c64c09_LitExpr{._field_Token=_6427_token, ._field_Value=(*(_6427_token))._field_Kind});;
}



inline jule::Any _1c19617b2_buildSingle(_1c195ed54_exprBuilder* _self_, jule::Ptr<_1c0c49480_Token> _7534_token) {
	{
		auto &_match_expr{ (*(_7534_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1c5e2a8c0:;
			{
				return jule::Any(_1c1961130_buildLit(_self_, _7534_token), &__jule_any_type102);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1c5e2a936:;
			{
				return jule::Any(jule::new_ptr<_1c0c66205_VariadicExpr>(_1c0c66205_VariadicExpr{._field_Token=_7534_token, }), &__jule_any_type75);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(24LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1c5e2a99c:;
			{
				return jule::Any(_1c196b5be_buildIdentExpr(&(_7534_token)), &__jule_any_type79);;
			}
		}
		_match_end_1c5e2a815:;
	};
	_1c196063a_pushErr(_self_, _7534_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1c0c65589_IdentExpr> _1c1961b03_buildBindIdent(_1c195ed54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _9238_tokens) {
	if (((*((*(_9238_tokens))[0LL]))._field_Id != static_cast<jule::U64>(27LLU))) {
		return nullptr;;
	} else if (((*((*(_9238_tokens))[1LL]))._field_Id != static_cast<jule::U64>(17LLU))) {
		_1c196063a_pushErr(_self_, (*(_9238_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c196099d_pushSuggestion(_self_, jule::Str::lit("use dot (.) to access binded defines", 36), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c0c49480_Token> _10013_token = (*(_9238_tokens))[2LL];;
	if (((*(_10013_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c196063a_pushErr(_self_, (*(_9238_tokens))[2LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c196099d_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c0c65589_IdentExpr> _10613_expr = _1c196b5be_buildIdentExpr(&(_10013_token));;
	(*(_10613_expr))._field_Binded=true;
	return _10613_expr;;
}



inline jule::Ptr<_1c0c65d2b_UnaryExpr> _1c1961e44_buildUnary(_1c195ed54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>> _11133_tokens) {
	jule::Ptr<_1c0c49480_Token> _11213_op = _11133_tokens[0LL];;
	if ((_11133_tokens.len() == 1LL)) {
		_1c196063a_pushErr(_self_, _11213_op, jule::Str::lit("missing expression for unary operator", 37), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_1c0c49bbc_IsUnaryOp((*(_11213_op))._field_Id)))) {
		_1c196063a_pushErr(_self_, _11213_op, jule::Str::lit("invalid unary operator: @", 25), jule::Slice<jule::Any>::make({jule::Any((*_11213_op.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	(_11133_tokens).mut_slice(1LL);;
	return jule::new_ptr<_1c0c65d2b_UnaryExpr>(_1c0c65d2b_UnaryExpr{._field_Op=_11213_op, ._field_Expr=_1c196a1d3_buildFromTokens(_self_, _11133_tokens)});;
}



inline jule::Ptr<_1c0c66d82_SubIdentExpr> _1c1962285_buildObjSubIdent(_1c195ed54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>> _13239_tokens) {
	jule::I64 _13313_i = (_13239_tokens.len() - 1LL);;
	jule::Ptr<_1c0c49480_Token> _13413_identToken = _13239_tokens[_13313_i];;
	(_13313_i)--;
	(_13239_tokens).mut_slice(0LL, _13313_i);;
	if ((_13239_tokens.len() == 0LL)) {
		_1c196063a_pushErr(_self_, _13413_identToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1c0c66d82_SubIdentExpr>(_1c0c66d82_SubIdentExpr{._field_Expr=_1c196a1d3_buildFromTokens(_self_, _13239_tokens), ._field_Ident=_13413_identToken});;
}



inline jule::Ptr<_1c0c669a8_NsSelectionExpr> _1c19625c6_buildNsSubIdent(_1c195ed54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _14739_tokens) {
	jule::Ptr<_1c0c669a8_NsSelectionExpr> _14813_ns = jule::new_ptr<_1c0c669a8_NsSelectionExpr>();;
	if ((((*(_14739_tokens)).len() == 3LL) && ((*((*(_14739_tokens))[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		(*_14813_ns.alloc)._field_Ns=(*(_14739_tokens)).slice(0LL, 1LL);
		(*_14813_ns.alloc)._field_Ident=(*(_14739_tokens))[2LL];
	} else {
		{
			auto expr = _14739_tokens;
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c5e36e81:;
			if (it != expr_end) {
				jule::I64 _15418_i = it - expr->begin();
				jule::Ptr<_1c0c49480_Token> _15425_token = *it;
				{
					if (((_15418_i & 1LL) == 0LL)) {
						if (((*(_15425_token))._field_Id != static_cast<jule::U64>(1LLU))) {
							_1c196063a_pushErr(_self_, _15425_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							_1c196099d_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
						};
						(*_14813_ns.alloc)._field_Ns=jule::append((*_14813_ns.alloc)._field_Ns,jule::Slice<jule::Ptr<_1c0c49480_Token>>::make({_15425_token}));
					} else if (((*(_15425_token))._field_Id != static_cast<jule::U64>(19LLU))) {
						_1c196063a_pushErr(_self_, _15425_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						_1c196099d_pushSuggestion(_self_, jule::Str::lit("expected double colon \"::\"", 26), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1c5e36e81:;
				++it;
				_15418_i++;
				goto _iter_begin_1c5e36e81;
			}
			_iter_end_1c5e36e81:;
		};
		(*_14813_ns.alloc)._field_Ident=(*_14813_ns.alloc)._field_Ns[((*_14813_ns.alloc)._field_Ns.len() - 1LL)];
		((*(_14813_ns))._field_Ns).mut_slice(0LL, ((*(_14813_ns))._field_Ns.len() - 1LL));;
	};
	return _14813_ns;;
}



inline jule::Ptr<_1c0c5e93a_TypeDecl> _1c1962917_buildType(_1c195ed54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _17233_tokens) {
	jule::I64 _17313_i = 0LL;;
	jule::Ptr<_1c0c5e93a_TypeDecl> _17413_t;
	jule::Bool _17416_ok;
	({
		__jule_tuple_x_1c0c5e93a_TypeDecl__jule_tuple_bool __jule_assign_result = _1c1972c9b_buildType((*(_self_))._field_p, _17233_tokens, (&(_17313_i)), false);
		_17413_t = __jule_assign_result.__jule_result_arg0;
		_17416_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_17416_ok))) {
		_1c196063a_pushErr(_self_, (*(_17233_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_17313_i < (*(_17233_tokens)).len())) {
		_1c196063a_pushErr(_self_, (*(_17233_tokens))[_17313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _17413_t;;
}



inline jule::Any _1c1962c58_buildSubIdent(_1c195ed54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _18637_tokens) {
	jule::I64 _1879_i = ((*(_18637_tokens)).len() - 2LL);;
	jule::Ptr<_1c0c49480_Token> _1889_token = (*(_18637_tokens))[_1879_i];;
	{
		auto &_match_expr{ (*(_1889_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(17LLU)) {
			_case_begin_1c5e3ee9a:;
			{
				return jule::Any(_1c1962285_buildObjSubIdent(_self_, (*(_18637_tokens))), &__jule_any_type86);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1c5e405b6:;
			{
				return jule::Any(_1c19625c6_buildNsSubIdent(_self_, _18637_tokens), &__jule_any_type90);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1c5e4062c:;
			{
				return jule::Any(_1c1962917_buildType(_self_, _18637_tokens), &__jule_any_type89);;
			}
		}
		_match_end_1c5e40242:;
	};
	_1c196063a_pushErr(_self_, _1889_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1c0c66205_VariadicExpr> _1c1963099_buildVariadic(_1c195ed54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>> _20236_tokens) {
	jule::Ptr<_1c0c49480_Token> _20313_token = _20236_tokens[(_20236_tokens.len() - 1LL)];;
	(_20236_tokens).mut_slice(0LL, (_20236_tokens.len() - 1LL));;
	return jule::new_ptr<_1c0c66205_VariadicExpr>(_1c0c66205_VariadicExpr{._field_Token=_20313_token, ._field_Expr=_1c196a1d3_buildFromTokens(_self_, _20236_tokens)});;
}



inline jule::Ptr<_1c0c64038_RangeExpr> _1c19633da_buildBetweenParentheses(_1c195ed54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>> _21146_tokens) {
	if ((_21146_tokens.len() == 2LL)) {
		_1c196063a_pushErr(_self_, _21146_tokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		_1c196099d_pushSuggestion(_self_, jule::Str::lit("empty parentheses are not valid expression, must include an expression in range", 79), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_21146_tokens).mut_slice(1LL, (_21146_tokens.len() - 1LL));;
	return jule::new_ptr<_1c0c64038_RangeExpr>(_1c0c64038_RangeExpr{._field_Expr=_1c196a1d3_buildFromTokens(_self_, _21146_tokens)});;
}



inline jule::Ptr<_1c0c665ce_CastExpr> _1c196372b_tryBuildCast(_1c195ed54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _22336_tokens) {
	jule::I64 _22413_rangeN = 0LL;;
	{
		auto expr = _22336_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5e455bb:;
		if (it != expr_end) {
			jule::I64 _22513_i = it - expr->begin();
			jule::Ptr<_1c0c49480_Token> _22516_token = *it;
			{
				{
					auto &_match_expr{ (*(_22516_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1c5e46215:;
						{
							(_22413_rangeN)++;
							goto _iter_next_1c5e455bb;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1c5e465de:;
						{
							(_22413_rangeN)--;
						}
					}
					_match_end_1c5e46512:;
				};
				if ((_22413_rangeN > 0LL)) {
					goto _iter_next_1c5e455bb;
				} else if (((_22513_i + 1LL) == (*(_22336_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_1c0c49480_Token>> _24417_typeTokens = (*(_22336_tokens)).slice(0LL, (_22513_i + 1LL));;
				jule::Slice<jule::Ptr<_1c0c49480_Token>> _24517_exprTokens = (*(_22336_tokens)).slice((_22513_i + 1LL));;
				if ((_24517_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_1c0c49480_Token> _25213_tok = _24517_exprTokens[0LL];;
				if (((*(_25213_tok))._field_Id != static_cast<jule::U64>(74LLU))) {
					return nullptr;;
				};
				jule::Ptr<_1c0c665ce_CastExpr> _25717_cast = jule::new_ptr<_1c0c665ce_CastExpr>(_1c0c665ce_CastExpr{});;
				if ((_24517_exprTokens.len() == 2LL)) {
					_1c196063a_pushErr(_self_, _24517_exprTokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
					_1c196099d_pushSuggestion(_self_, jule::Str::lit("give an expression for casting", 30), jule::Slice<jule::Any>());
				};
				if ((_24417_typeTokens.len() == 2LL)) {
					_1c196063a_pushErr(_self_, _24417_typeTokens[0LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					_1c196099d_pushSuggestion(_self_, jule::Str::lit("type declaration expected for casting", 37), jule::Slice<jule::Any>());
				} else {
					(_24417_typeTokens).mut_slice(1LL, (_24417_typeTokens.len() - 1LL));;
					jule::I64 _27121_typeIndex = 0LL;;
					jule::Ptr<_1c0c5e93a_TypeDecl> _27221_t;
					jule::Bool _27224_ok;
					({
						__jule_tuple_x_1c0c5e93a_TypeDecl__jule_tuple_bool __jule_assign_result = _1c1972c9b_buildType((*(_self_))._field_p, &(_24417_typeTokens), (&(_27121_typeIndex)), true);
						_27221_t = __jule_assign_result.__jule_result_arg0;
						_27224_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_27224_ok && (_27121_typeIndex < _24417_typeTokens.len()))) {
						_1c196063a_pushErr(_self_, _24417_typeTokens[_27121_typeIndex], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					} else if ((!(_27224_ok))) {
						return _25717_cast;;
					};
					(*(_25717_cast))._field_Kind=_27221_t;
					if ((_24517_exprTokens.len() > 2LL)) {
						jule::I64 _28225_j = 0LL;;
						_1c196dd96_range(&(_28225_j), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_24517_exprTokens));
						if ((_28225_j < _24517_exprTokens.len())) {
							return nullptr;;
						};
						(_24517_exprTokens).mut_slice(0LL, _28225_j);;
						(*_25717_cast.alloc)._field_Expr=_1c196a1d3_buildFromTokens(_self_, _24517_exprTokens);
					};
				};
				return _25717_cast;;
			}
			_iter_next_1c5e455bb:;
			++it;
			_22513_i++;
			goto _iter_begin_1c5e455bb;
		}
		_iter_end_1c5e455bb:;
	};
	return nullptr;;
}



inline void _1c1963b49_pushArg(_1c195ed54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c63c6e_Expr>>* _29731_args, jule::Slice<jule::Ptr<_1c0c49480_Token>> _29750_tokens, jule::Ptr<_1c0c49480_Token> _29768_err_token) {
	if ((_29750_tokens.len() == 0LL)) {
		_1c196063a_pushErr(_self_, _29768_err_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c196099d_pushSuggestion(_self_, jule::Str::lit("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_1c0c63c6e_Expr>> &__jule_push_dest = (*(_29731_args)); __jule_push_dest.push(_1c196a1d3_buildFromTokens(_self_, _29750_tokens)); };
}



inline jule::Slice<jule::Ptr<_1c0c63c6e_Expr>> _1c1963e8a_buildArgs(_1c195ed54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>> _30632_tokens) {
	if ((_30632_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c0c63c6e_Expr>> _31217_args = nullptr;;
	jule::I64 _31313_last = 0LL;;
	jule::I64 _31413_rangeN = 0LL;;
	(_30632_tokens).mut_slice(1LL, (_30632_tokens.len() - 1LL));;
	{
		auto expr = &(_30632_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5e53de3:;
		if (it != expr_end) {
			jule::I64 _31613_i = it - expr->begin();
			jule::Ptr<_1c0c49480_Token> _31616_token = *it;
			{
				{
					auto &_match_expr{ (*(_31616_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1c5e546da:;
						{
							(_31413_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1c5e54ab4:;
						{
							(_31413_rangeN)--;
						}
					}
					_match_end_1c5e549d7:;
				};
				if (((_31413_rangeN > 0LL) || ((*(_31616_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1c5e53de3;
				};
				_1c1963b49_pushArg(_self_, &(_31217_args), _30632_tokens.slice(_31313_last, _31613_i), _31616_token);
				_31313_last=(_31613_i + 1LL);
			}
			_iter_next_1c5e53de3:;
			++it;
			_31613_i++;
			goto _iter_begin_1c5e53de3;
		}
		_iter_end_1c5e53de3:;
	};
	if ((_31313_last < _30632_tokens.len())) {
		if ((_31313_last == 0LL)) {
			if ((_30632_tokens.len() > 0LL)) {
				_1c1963b49_pushArg(_self_, &(_31217_args), _30632_tokens.slice(_31313_last), _30632_tokens[_31313_last]);
			};
		} else {
			_1c1963b49_pushArg(_self_, &(_31217_args), _30632_tokens.slice(_31313_last), _30632_tokens[(_31313_last - 1LL)]);
		};
	};
	return _31217_args;;
}



inline jule::Ptr<_1c0c67998_FnCallExpr> _1c1964782_buildFnCall(_1c195ed54_exprBuilder* _self_, jule::Ptr<_1c0c49480_Token>* _37235_token, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _37255_expr, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _37276_args) {
	return jule::new_ptr<_1c0c67998_FnCallExpr>(_1c0c67998_FnCallExpr{._field_Token=(*(_37235_token)), ._field_Expr=_1c196a1d3_buildFromTokens(_self_, (*(_37255_expr))), ._field_Args=_1c1963e8a_buildArgs(_self_, (*(_37276_args))), });;
}



inline jule::Any _1c1964ac3_buildParenthesesRange(_1c195ed54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _38045_tokens) {
	jule::Ptr<_1c0c49480_Token> _38113_token = (*(_38045_tokens))[0LL];;
	if (((*(_38113_token))._field_Id == static_cast<jule::U64>(74LLU))) {
		jule::Ptr<_1c0c665ce_CastExpr> _38317_expr = _1c196372b_tryBuildCast(_self_, _38045_tokens);;
		if ((_38317_expr != nullptr)) {
			return jule::Any(_38317_expr, &__jule_any_type106);;
		};
	};
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _38813_exprTokens;
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _38829_args_tokens;
	({
		__jule_tuple_sx_1c0c49480_Token__jule_tuple_sx_1c0c49480_Token __jule_assign_result = _1c196e160_rangeLast(_38045_tokens);
		_38813_exprTokens = __jule_assign_result.__jule_result_arg0;
		_38829_args_tokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_38813_exprTokens.len() == 0LL)) {
		return jule::Any(_1c19633da_buildBetweenParentheses(_self_, _38829_args_tokens), &__jule_any_type101);;
	};
	return jule::Any(_1c1964782_buildFnCall(_self_, &(_38113_token), &(_38813_exprTokens), &(_38829_args_tokens)), &__jule_any_type82);;
}



inline jule::Ptr<_1c0c650d3_UnsafeExpr> _1c1964e14_buildUnsafeExpr(_1c195ed54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>> _39738_tokens) {
	jule::Ptr<_1c0c49480_Token> _39813_token = _39738_tokens[0LL];;
	(_39738_tokens).mut_slice(1LL);;
	jule::I64 _40013_i = 0LL;;
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _40113_rangeTokens = _1c196dd96_range(&(_40013_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_39738_tokens));;
	if ((_40113_rangeTokens.len() == 0LL)) {
		_1c196063a_pushErr(_self_, _39738_tokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1c0c650d3_UnsafeExpr>(_1c0c650d3_UnsafeExpr{._field_Token=_39813_token, ._field_Expr=_1c196a1d3_buildFromTokens(_self_, _40113_rangeTokens)});;
}



inline jule::Ptr<_1c0c715ea_FnDecl> _1c1965255_buildAnonFn(_1c195ed54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _41235_tokens) {
	jule::Ptr<_1c0c715ea_FnDecl> _41313_f = _1c1977333_buildFn((*(_self_))._field_p, _41235_tokens, false, false);;
	if ((!(_1c0c7195d_IsAnon(_41313_f.ptr())))) {
		_1c196063a_pushErr(_self_, (*_41313_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c196099d_pushSuggestion(_self_, jule::Str::lit("anonymous function expected, remove identifier of function", 58), jule::Slice<jule::Any>());
	};
	return _41313_f;;
}



inline jule::Any _1c1965596_buildUnsafe(_1c195ed54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _42135_tokens) {
	{
		auto &_match_expr{ (*((*(_42135_tokens))[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1c5e66972:;
			{
				return jule::Any(_1c1965255_buildAnonFn(_self_, _42135_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_1c5e65d4a:;
			{
				return jule::Any(_1c1964e14_buildUnsafeExpr(_self_, (*(_42135_tokens))), &__jule_any_type103);;
			}
		}
		_match_end_1c5e66279:;
	};
}



inline void _1c19659b4_pushRangeLitPart(_1c195ed54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>> _43139_part, jule::Ptr<_1c0c49480_Token> _4329_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>>* _43234_parts) {
	if ((_43139_part.len() == 0LL)) {
		_1c196063a_pushErr(_self_, _4329_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c196099d_pushSuggestion(_self_, jule::Str::lit("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>> &__jule_push_dest = (*(_43234_parts)); __jule_push_dest.push(_43139_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>> _1c1965d05_getBraceRangeLitExprParts(_1c195ed54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>> _44248_tokens) {
	if ((_44248_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>> _44817_parts = nullptr;;
	jule::I64 _45013_last = 0LL;;
	jule::I64 _45113_rangeN = 0LL;;
	(_44248_tokens).mut_slice(1LL, (_44248_tokens.len() - 1LL));;
	{
		auto expr = &(_44248_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5e6a38d:;
		if (it != expr_end) {
			jule::I64 _45313_i = it - expr->begin();
			jule::Ptr<_1c0c49480_Token> _45316_token = *it;
			{
				{
					auto &_match_expr{ (*(_45316_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1c5e6ab85:;
						{
							(_45113_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1c5e6b05e:;
						{
							(_45113_rangeN)--;
						}
					}
					_match_end_1c5e6ae82:;
				};
				if (((_45113_rangeN > 0LL) || ((*(_45316_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1c5e6a38d;
				};
				_1c19659b4_pushRangeLitPart(_self_, _44248_tokens.slice(_45013_last, _45313_i), _45316_token, &(_44817_parts));
				_45013_last=(_45313_i + 1LL);
			}
			_iter_next_1c5e6a38d:;
			++it;
			_45313_i++;
			goto _iter_begin_1c5e6a38d;
		}
		_iter_end_1c5e6a38d:;
	};
	if ((_45013_last < _44248_tokens.len())) {
		if ((_45013_last == 0LL)) {
			if ((_44248_tokens.len() > 0LL)) {
				_1c19659b4_pushRangeLitPart(_self_, _44248_tokens.slice(_45013_last), _44248_tokens[_45013_last], &(_44817_parts));
			};
		} else {
			_1c19659b4_pushRangeLitPart(_self_, _44248_tokens.slice(_45013_last), _44248_tokens[(_45013_last - 1LL)], &(_44817_parts));
		};
	};
	return _44817_parts;;
}



inline jule::Ptr<_1c0c6848d_FieldExprPair> _1c1966146_buildFieldExprPair(_1c195ed54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>> _48441_tokens) {
	if (((_48441_tokens.len() - 2LL) == 0LL)) {
		_1c196063a_pushErr(_self_, _48441_tokens[1LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c0c6848d_FieldExprPair> _48913_pair = jule::new_ptr<_1c0c6848d_FieldExprPair>(_1c0c6848d_FieldExprPair{._field_Field=_48441_tokens[0LL], });;
	(_48441_tokens).mut_slice(2LL);;
	(*(_48913_pair))._field_Expr=_1c196a1d3_buildFromTokens(_self_, _48441_tokens);
	return _48913_pair;;
}



inline jule::Ptr<_1c0c63c6e_Expr> _1c1966487_buildStructLitExpr(_1c195ed54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _49742_tokens) {
	jule::Ptr<_1c0c49480_Token> _49813_token = (*(_49742_tokens))[0LL];;
	if ((((*(_49813_token))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_49742_tokens)).len() > 1LL))) {
		_49813_token=(*(_49742_tokens))[1LL];
		if (((*_49813_token.alloc)._field_Id == static_cast<jule::U64>(8LLU))) {
			return jule::new_ptr<_1c0c63c6e_Expr>(_1c0c63c6e_Expr{._field_Token=_49813_token, ._field_End=(*(_49742_tokens))[((*(_49742_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1c1966146_buildFieldExprPair(_self_, (*(_49742_tokens))), &__jule_any_type77)});;
		};
	};
	return _1c196a1d3_buildFromTokens(_self_, (*(_49742_tokens)));;
}



inline jule::Slice<jule::Ptr<_1c0c63c6e_Expr>> _1c19667c8_buildStructLitExprs(_1c195ed54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _51243_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>> _51313_parts = _1c1965d05_getBraceRangeLitExprParts(_self_, (*(_51243_tokens)));;
	if ((_51313_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c0c63c6e_Expr>> _51813_pairs = jule::Slice<jule::Ptr<_1c0c63c6e_Expr>>::alloc(0LL, _51313_parts.len());;
	{
		auto expr = &(_51313_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5e74870:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c0c49480_Token>> _51921_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1c0c63c6e_Expr>> &__jule_push_dest = _51813_pairs; __jule_push_dest.push(_1c1966487_buildStructLitExpr(_self_, &(_51921_part))); };
			}
			_iter_next_1c5e74870:;
			++it;
			goto _iter_begin_1c5e74870;
		}
		_iter_end_1c5e74870:;
	};
	return _51813_pairs;;
}



inline jule::Ptr<_1c0c68cb8_StructLit> _1c1966b19_buildTypedStructLiteral(_1c195ed54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>> _52546_tokens) {
	jule::I64 _52613_i = 0LL;;
	jule::Ptr<_1c0c5e93a_TypeDecl> _52713_t;
	jule::Bool _52716_ok;
	({
		__jule_tuple_x_1c0c5e93a_TypeDecl__jule_tuple_bool __jule_assign_result = _1c1972c9b_buildType((*(_self_))._field_p, &(_52546_tokens), (&(_52613_i)), true);
		_52713_t = __jule_assign_result.__jule_result_arg0;
		_52716_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_52716_ok))) {
		return nullptr;;
	} else if ((_52613_i >= _52546_tokens.len())) {
		_1c196063a_pushErr(_self_, _52546_tokens[_52613_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_52546_tokens).mut_slice(_52613_i);;
	jule::Ptr<_1c0c49480_Token> _5369_token = _52546_tokens[0LL];;
	if (((*(_5369_token))._field_Id != static_cast<jule::U64>(72LLU))) {
		_1c196063a_pushErr(_self_, _5369_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1c0c68cb8_StructLit>(_1c0c68cb8_StructLit{._field_End=_52546_tokens[(_52546_tokens.len() - 1LL)], ._field_Kind=_52713_t, ._field_Exprs=_1c19667c8_buildStructLitExprs(_self_, &(_52546_tokens))});;
}



inline jule::Ptr<_1c0c63c6e_Expr> _1c1966e5a_buildBraceLitPart(_1c195ed54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _54941_tokens) {
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _55013_l;
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _55020_r;
	({
		__jule_tuple_sx_1c0c49480_Token__jule_tuple_sx_1c0c49480_Token __jule_assign_result = _1c196b03b_splitDelim(_54941_tokens, static_cast<jule::U64>(8LLU));
		_55013_l = __jule_assign_result.__jule_result_arg0;
		_55020_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_55013_l != nullptr)) {
		return jule::new_ptr<_1c0c63c6e_Expr>(_1c0c63c6e_Expr{._field_Token=(*(_54941_tokens))[0LL], ._field_End=(*(_54941_tokens))[((*(_54941_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1c0c69a99_KeyValPair>(_1c0c69a99_KeyValPair{._field_Key=_1c196a1d3_buildFromTokens(_self_, _55013_l), ._field_Val=_1c196a1d3_buildFromTokens(_self_, _55020_r), ._field_Colon=(*(_54941_tokens))[_55013_l.len()]}), &__jule_any_type78)});;
	};
	return _1c196a1d3_buildFromTokens(_self_, (*(_54941_tokens)));;
}



inline jule::Ptr<_1c0c6926e_BraceLit> _1c196729b_buildBraceLit(_1c195ed54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _56637_tokens) {
	jule::Ptr<_1c0c6926e_BraceLit> _56713_lit = jule::new_ptr<_1c0c6926e_BraceLit>(_1c0c6926e_BraceLit{._field_Token=(*(_56637_tokens))[0LL], ._field_End=(*(_56637_tokens))[((*(_56637_tokens)).len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>> _57213_parts = _1c1965d05_getBraceRangeLitExprParts(_self_, (*(_56637_tokens)));;
	if ((_57213_parts == nullptr)) {
		return _56713_lit;;
	};
	(*(_56713_lit))._field_Exprs=jule::Slice<jule::Ptr<_1c0c63c6e_Expr>>::alloc(0LL, _57213_parts.len());
	{
		auto expr = &(_57213_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5e7e1b5:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c0c49480_Token>> _57821_part = *it;
			{
				(*_56713_lit.alloc)._field_Exprs=jule::append((*_56713_lit.alloc)._field_Exprs,jule::Slice<jule::Ptr<_1c0c63c6e_Expr>>::make({_1c1966e5a_buildBraceLitPart(_self_, &(_57821_part))}));
			}
			_iter_next_1c5e7e1b5:;
			++it;
			goto _iter_begin_1c5e7e1b5;
		}
		_iter_end_1c5e7e1b5:;
	};
	return _56713_lit;;
}



inline jule::Any _1c19675dc_buildBraceRange(_1c195ed54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _58539_tokens) {
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _58613_exprTokens;
	jule::I64 _58625_rangeN;
	({
		__jule_tuple_sx_1c0c49480_Token__jule_tuple_int __jule_assign_result = _1c196b888_getRangeExprTokens(_58539_tokens);
		_58613_exprTokens = __jule_assign_result.__jule_result_arg0;
		_58625_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_58613_exprTokens.len() == 0LL)) {
			_case_begin_1c5e80ccc:;
			{
				return jule::Any(_1c196729b_buildBraceLit(_self_, _58539_tokens), &__jule_any_type108);;
			}
		}
		else if ((_58625_rangeN > 0LL)) {
			_case_begin_1c5e80d76:;
			{
				_1c196063a_pushErr(_self_, (*(_58539_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c5e80c44:;
	};
	jule::Ptr<_1c0c49480_Token> _5979_elseToken = _58613_exprTokens[(_58613_exprTokens.len() - 1LL)];;
	if (((*(_58613_exprTokens[(_58613_exprTokens.len() - 1LL)]))._field_Id == static_cast<jule::U64>(14LLU))) {
		(_58613_exprTokens).mut_slice(0LL, (_58613_exprTokens.len() - 1LL));;
		jule::Any _60017_d = _1c1969a51_build(_self_, &(_58613_exprTokens));;
		if ((_60017_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _60017_d };
			
			if (_match_expr.type == &__jule_any_type82) {
				_case_begin_1c5e83780:;
				{
					((*(_58539_tokens))).mut_slice((_58613_exprTokens.len() + 1LL));;
					jule::I64 _60721_i = 0LL;;
					jule::Slice<jule::Ptr<_1c0c49480_Token>> _60821_rangeTokens = _1c196dd96_range(&(_60721_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _58539_tokens);;
					jule::Ptr<_1c0c67998_FnCallExpr> _60921_model = _60017_d.unsafe_cast_ptr<_1c0c67998_FnCallExpr>();;
					if (_1c0c680a3_Ignored(_60921_model.ptr())) {
						_1c196063a_pushErr(_self_, _5979_elseToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						_1c196099d_pushSuggestion(_self_, jule::Str::lit("just ignore exceptional or handle it but you cannot do both at same time", 72), jule::Slice<jule::Any>());
					};
					(*_60921_model.alloc)._field_Exception=_1c197233e_buildScope((*(_self_))._field_p, &(_60821_rangeTokens), (*(_58539_tokens))[(_60721_i - 1LL)]);
					return _60017_d;;
				}
			}
			else {
				_case_begin_1c5e83a7c:;
				{
					_1c196063a_pushErr(_self_, _58613_exprTokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1c5e83829:;
		};
	};
	{
		auto &_match_expr{ (*(_58613_exprTokens[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1c5e8806a:;
			{
				return _1c1965596_buildUnsafe(_self_, _58539_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1c5e8871e:;
			{
				return jule::Any(_1c1965255_buildAnonFn(_self_, _58539_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1c5e88785:;
			{
				return jule::Any(_1c1966b19_buildTypedStructLiteral(_self_, (*(_58539_tokens))), &__jule_any_type107);;
			}
		}
		else {
			_case_begin_1c5e86420:;
			{
				_1c196063a_pushErr(_self_, _58613_exprTokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c5e87b91:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>> _1c196792d_getEnumerableParts(_1c195ed54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>> _63741_tokens) {
	(_63741_tokens).mut_slice(1LL, (_63741_tokens.len() - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>> _63913_parts;
	jule::Slice<_21b8c54de_Log> _63920_errors;
	({
		__jule_tuple_ssx_1c0c49480_Token__jule_tuple_s_21b8c54de_Log __jule_assign_result = _1c196e616_parts(&(_63741_tokens), static_cast<jule::U64>(5LLU), true);
		_63913_parts = __jule_assign_result.__jule_result_arg0;
		_63920_errors = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_63920_errors);
	return _63913_parts;;
}



inline jule::Ptr<_1c0c6a2c5_SliceExpr> _1c1967c6e_buildSlice(_1c195ed54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>> _64433_tokens) {
	jule::Ptr<_1c0c6a2c5_SliceExpr> _64513_slc = jule::new_ptr<_1c0c6a2c5_SliceExpr>(_1c0c6a2c5_SliceExpr{._field_Token=_64433_tokens[0LL], ._field_End=_64433_tokens[(_64433_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>> _65013_parts = _1c196792d_getEnumerableParts(_self_, _64433_tokens);;
	if ((_65013_parts.len() == 0LL)) {
		return _64513_slc;;
	};
	(*(_64513_slc))._field_Exprs=jule::Slice<jule::Ptr<_1c0c63c6e_Expr>>::alloc(0LL, _65013_parts.len());
	{
		auto expr = &(_65013_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5e8d59d:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c0c49480_Token>> _65621_p = *it;
			{
				if ((_65621_p.len() == 0LL)) {
					goto _iter_next_1c5e8d59d;
				};
				(*_64513_slc.alloc)._field_Exprs=jule::append((*_64513_slc.alloc)._field_Exprs,jule::Slice<jule::Ptr<_1c0c63c6e_Expr>>::make({_1c196a1d3_buildFromTokens(_self_, _65621_p)}));
			}
			_iter_next_1c5e8d59d:;
			++it;
			goto _iter_begin_1c5e8d59d;
		}
		_iter_end_1c5e8d59d:;
	};
	return _64513_slc;;
}



inline jule::Ptr<_1c0c6ac32_IndexingExpr> _1c1968225_buildIndexing(_1c195ed54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>> _66636_exprTokens, jule::Slice<jule::Ptr<_1c0c49480_Token>> _66713_tokens, jule::Ptr<_1c0c49480_Token> _66735_errorToken) {
	jule::Ptr<_1c0c49480_Token> _66813_end = _66713_tokens[(_66713_tokens.len() - 1LL)];;
	(_66713_tokens).mut_slice(1LL, (_66713_tokens.len() - 1LL));;
	if ((_66713_tokens.len() == 0LL)) {
		_1c196063a_pushErr(_self_, _66735_errorToken, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c0c63c6e_Expr> _67413_expr = _1c196a1d3_buildFromTokens(_self_, _66636_exprTokens);;
	if ((_67413_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c0c63c6e_Expr> _67813_index = _1c196a1d3_buildFromTokens(_self_, _66713_tokens);;
	if ((_67813_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1c0c6ac32_IndexingExpr>(_1c0c6ac32_IndexingExpr{._field_Token=_66735_errorToken, ._field_End=_66813_end, ._field_Expr=_67413_expr, ._field_Index=_67813_index});;
}



inline jule::Ptr<_1c0c6b392_SlicingExpr> _1c1968841_buildSlicing(_1c195ed54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _69036_exprTokens, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _69063_start, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _69114_to, jule::Ptr<_1c0c49480_Token>* _69133_errorToken, jule::Ptr<_1c0c49480_Token> _69157_end) {
	jule::Ptr<_1c0c6b392_SlicingExpr> _69213_slc = jule::new_ptr<_1c0c6b392_SlicingExpr>(_1c0c6b392_SlicingExpr{._field_Token=(*(_69133_errorToken)), ._field_End=_69157_end, ._field_Expr=_1c196a1d3_buildFromTokens(_self_, (*(_69036_exprTokens))), });;
	if (((*(_69063_start)).len() > 0LL)) {
		(*(_69213_slc))._field_Start=_1c196a1d3_buildFromTokens(_self_, (*(_69063_start)));
	};
	if (((*(_69114_to)).len() > 0LL)) {
		(*_69213_slc.alloc)._field_To=_1c196a1d3_buildFromTokens(_self_, (*(_69114_to)));
	};
	return _69213_slc;;
}



inline jule::Any _1c1968b82_buildBracketRange(_1c195ed54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>> _70640_tokens) {
	jule::Ptr<_1c0c49480_Token> _70713_errorToken = _70640_tokens[0LL];;
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _70813_exprTokens;
	jule::I64 _70825_rangeN;
	({
		__jule_tuple_sx_1c0c49480_Token__jule_tuple_int __jule_assign_result = _1c196b888_getRangeExprTokens(&(_70640_tokens));
		_70813_exprTokens = __jule_assign_result.__jule_result_arg0;
		_70825_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_70813_exprTokens.len() == 0LL)) {
		return jule::Any(_1c1967c6e_buildSlice(_self_, _70640_tokens), &__jule_any_type94);;
	} else if ((_70825_rangeN > 0LL)) {
		_1c196063a_pushErr(_self_, _70713_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_70640_tokens).mut_slice(_70813_exprTokens.len());;
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _72313_splitTokens = _70640_tokens.slice(1LL, (_70640_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _72413_start;
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _72424_to;
	({
		__jule_tuple_sx_1c0c49480_Token__jule_tuple_sx_1c0c49480_Token __jule_assign_result = _1c196b03b_splitDelim(&(_72313_splitTokens), static_cast<jule::U64>(8LLU));
		_72413_start = __jule_assign_result.__jule_result_arg0;
		_72424_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_72413_start != nullptr) || (_72424_to != nullptr))) {
		return jule::Any(_1c1968841_buildSlicing(_self_, &(_70813_exprTokens), &(_72413_start), &(_72424_to), &(_70713_errorToken), _70640_tokens[(_70640_tokens.len() - 1LL)]), &__jule_any_type105);;
	};
	return jule::Any(_1c1968225_buildIndexing(_self_, _70813_exprTokens, _70640_tokens, _70713_errorToken), &__jule_any_type104);;
}



inline jule::Any _1c1968ec3_buildExclRight(_1c195ed54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _73138_tokens) {
	jule::Ptr<_1c0c49480_Token> _7329_token = (*(_73138_tokens))[((*(_73138_tokens)).len() - 1LL)];;
	((*(_73138_tokens))).mut_slice(0LL, ((*(_73138_tokens)).len() - 1LL));;
	jule::Any _73413_d = _1c1969a51_build(_self_, _73138_tokens);;
	if ((_73413_d == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _73413_d };
		
		if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1c5e9b5bc:;
			{
				(*(_73413_d.unsafe_cast_ptr<_1c0c67998_FnCallExpr>()))._field_Exception=jule::new_ptr<_1c0c6e95b_ScopeTree>(_1c0c6e95b_ScopeTree{._field_Deferred=true, });
				return _73413_d;;
			}
		}
		_match_end_1c5e9b3ad:;
	};
	_1c196063a_pushErr(_self_, _7329_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1c1969314_buildData(_1c195ed54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _74933_tokens) {
	{
		auto _match_expr{ (*(_74933_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1c5e9cc61:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1c5e9ccc7:;
			{
				return _1c19617b2_buildSingle(_self_, (*(_74933_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1c5e9cd3d:;
			{
				if (((*((*(_74933_tokens))[0LL]))._field_Id == static_cast<jule::U64>(27LLU))) {
					return jule::Any(_1c1961b03_buildBindIdent(_self_, _74933_tokens), &__jule_any_type79);;
				};
			}
		}
		_match_end_1c5e9cac9:;
	};
	jule::Ptr<_1c0c49480_Token> _76113_token = (*(_74933_tokens))[((*(_74933_tokens)).len() - 1LL)];;
	if (((*(_76113_token))._field_Id == static_cast<jule::U64>(39LLU))) {
		return jule::Any(_1c1963099_buildVariadic(_self_, (*(_74933_tokens))), &__jule_any_type75);;
	};
	_76113_token=(*(_74933_tokens))[0LL];
	if (_1c0c49bbc_IsUnaryOp((*_76113_token.alloc)._field_Id)) {
		if (((*(_74933_tokens)).len() > 1LL)) {
			_76113_token=(*(_74933_tokens))[1LL];
			if (((*_76113_token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
				return jule::Any(_1c1962917_buildType(_self_, _74933_tokens), &__jule_any_type89);;
			};
		};
		return jule::Any(_1c1961e44_buildUnary(_self_, (*(_74933_tokens))), &__jule_any_type88);;
	};
	if (((*(_74933_tokens)).len() >= 3LL)) {
		{
			auto &_match_expr{ (*(_76113_token))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
				_case_begin_1c5ea2815:;
				{
					if (((*(_74933_tokens)).len() > 3LL)) {
						jule::Ptr<_1c0c49480_Token> _78721_t = (*(_74933_tokens))[((*(_74933_tokens)).len() - 1LL)];;
						if (((*(_78721_t))._field_Id == static_cast<jule::U64>(75LLU))) {
							goto _match_end_1c5ea255c;
						};
					};
					jule::Ptr<_1c0c49480_Token> _79317_next = (*(_74933_tokens))[1LL];;
					if (((*(_79317_next))._field_Id != static_cast<jule::U64>(77LLU))) {
						goto _match_end_1c5ea255c;
					};
					return jule::Any(_1c1962917_buildType(_self_, _74933_tokens), &__jule_any_type89);;
				}
			}
			_match_end_1c5ea255c:;
		};
	};
	_76113_token=(*(_74933_tokens))[((*(_74933_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ (*(_76113_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1c5ea59d3:;
			{
				return _1c1962c58_buildSubIdent(_self_, _74933_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1c5ea5a49:;
			{
				return _1c1968ec3_buildExclRight(_self_, _74933_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1c5ea5ab0:;
			{
				return _1c1964ac3_buildParenthesesRange(_self_, _74933_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1c5ea5b26:;
			{
				return _1c19675dc_buildBraceRange(_self_, _74933_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1c5ea5b8c:;
			{
				return _1c1968b82_buildBracketRange(_self_, (*(_74933_tokens)));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1c5ea5c14:;
			{
				return jule::Any(_1c1962917_buildType(_self_, _74933_tokens), &__jule_any_type89);;
			}
		}
		_match_end_1c5ea597d:;
	};
	_1c196063a_pushErr(_self_, _76113_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1c1969710_buildBinary(_1c195ed54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _82135_tokens, jule::I64 _82153_i) {
	jule::Ptr<_1c0c49480_Token> _82213_op = (*(_82135_tokens))[_82153_i];;
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _82313_leftTokens = (*(_82135_tokens)).slice(0LL, _82153_i);;
	if ((_1c196a59b_isTypeOp(&((*(_82213_op))._field_Id)) && _1c196a8a9_isTypeRange(&(_82313_leftTokens)))) {
		return jule::Any(_1c1962917_buildType(_self_, _82135_tokens), &__jule_any_type89);;
	};
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _82813_rightTokens = (*(_82135_tokens)).slice((_82153_i + 1LL));;
	if ((_82313_leftTokens.len() == 0LL)) {
		_1c196063a_pushErr(_self_, (*(_82135_tokens))[_82153_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c196099d_pushSuggestion(_self_, jule::Str::lit("left operand expected for binary operator", 41), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_82813_rightTokens.len() == 0LL)) {
		_1c196063a_pushErr(_self_, (*(_82135_tokens))[_82153_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c196099d_pushSuggestion(_self_, jule::Str::lit("right operand expected for binary operator", 42), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1c0c67338_BinaryExpr>(_1c0c67338_BinaryExpr{._field_Left=_1c196a1d3_buildFromTokens(_self_, _82313_leftTokens), ._field_Right=_1c196a1d3_buildFromTokens(_self_, _82813_rightTokens), ._field_Op=_82213_op}), &__jule_any_type109);;
}



inline jule::Any _1c1969a51_build(_1c195ed54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _84629_tokens) {
	if (((*((*(_84629_tokens))[0LL]))._field_Id == static_cast<jule::U64>(37LLU))) {
		return jule::Any(_1c1962917_buildType(_self_, _84629_tokens), &__jule_any_type89);;
	};
	jule::I64 _8509_i = _1c196b305_findLowestPrecOp(_84629_tokens);;
	if ((_8509_i == -1LL)) {
		return _1c1969314_buildData(_self_, _84629_tokens);;
	};
	return _1c1969710_buildBinary(_self_, _84629_tokens, _8509_i);;
}



inline jule::Any _1c1969d92_buildKind(_1c195ed54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _85733_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>> _85813_parts;
	jule::Slice<_21b8c54de_Log> _85820_errors;
	({
		__jule_tuple_ssx_1c0c49480_Token__jule_tuple_s_21b8c54de_Log __jule_assign_result = _1c196e616_parts(_85733_tokens, static_cast<jule::U64>(5LLU), true);
		_85813_parts = __jule_assign_result.__jule_result_arg0;
		_85820_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_85820_errors != nullptr)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_85820_errors);
		return nullptr;;
	} else if ((_85813_parts.len() > 1LL)) {
		return jule::Any(_1c1960cde_buildTuple(_self_, &(_85813_parts)), &__jule_any_type80);;
	};
	return _1c1969a51_build(_self_, _85733_tokens);;
}



inline jule::Ptr<_1c0c63c6e_Expr> _1c196a1d3_buildFromTokens(_1c195ed54_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>> _86838_tokens) {
	if ((_86838_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _87213_kind = _1c1969d92_buildKind(_self_, &(_86838_tokens));;
	if ((_87213_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1c0c63c6e_Expr>(_1c0c63c6e_Expr{._field_Token=_86838_tokens[0LL], ._field_End=_86838_tokens[(_86838_tokens.len() - 1LL)], ._field_Kind=_87213_kind});;
}





std::ostream &operator<<(std::ostream &_Stream, _1c195ed54_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c196c2e5_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1c19709e1_stop(_1c19706e4_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1c1970c77_stopped(_1c19706e4_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1c1971195_pushErr(_1c19706e4_parser* _self_, jule::Ptr<_1c0c49480_Token> _20826_token, jule::Str _20841_fmt, jule::Slice<jule::Any> _20854_args) {
	{ jule::Slice<_21b8c54de_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1c196eccb_compilerErr(&(_20826_token), &(_20841_fmt), _20854_args)); };
}



inline void _1c1971508_pushSuggestion(_1c19706e4_parser* _self_, jule::Str _21333_fmt, jule::Slice<jule::Any> _21346_args) {
	{
		_1c1970172_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _21333_fmt, _21346_args);
	};
}



inline jule::Ptr<_1c0c63c6e_Expr> _1c1971849_buildExpr(jule::Ptr<_1c19706e4_parser> _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _21734_tokens) {
	return _1c196a1d3_buildFromTokens((*(_self_))._field_ep.ptr(), (*(_21734_tokens)));;
}



inline jule::Ptr<_1c0c5dd57_Directive> _1c1971b8a_buildDirective(_1c19706e4_parser* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>> _22137_tokens) {
	if ((_22137_tokens.len() == 1LL)) {
		_1c1971195_pushErr(_self_, _22137_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_22137_tokens[1LL]))._field_Column != ((*(_22137_tokens[0LL]))._field_Column + 1LL))) {
		_1c1971195_pushErr(_self_, _22137_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1c0c5dd57_Directive>(_1c0c5dd57_Directive{._field_Tag=_22137_tokens[1LL], ._field_Args=_22137_tokens.slice(2LL)});;
}



inline void _1c1971e43_pushDirective(_1c19706e4_parser* _self_, jule::Ptr<_1c0c5dd57_Directive> _23636_d) {
	if ((_23636_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5ed324c:;
		if (it != expr_end) {
			jule::Ptr<_1c0c5dd57_Directive> _24116_pd = *it;
			{
				if (((*((*(_23636_d))._field_Tag))._field_Kind == (*(*(_24116_pd))._field_Tag.alloc)._field_Kind)) {
					return;;
				};
			}
			_iter_next_1c5ed324c:;
			++it;
			goto _iter_begin_1c5ed324c;
		}
		_iter_end_1c5ed324c:;
	};
	{ jule::Slice<jule::Ptr<_1c0c5dd57_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_23636_d); };
}



inline jule::Ptr<_1c0c6e95b_ScopeTree> _1c197233e_buildScope(jule::Ptr<_1c19706e4_parser> _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _24935_tokens, jule::Ptr<_1c0c49480_Token> _24957_end) {
	jule::Ptr<_1c0c6e95b_ScopeTree> _25013_s = _1c1950817_newScope();;
	(*(_25013_s))._field_End=_24957_end;
	_1c195242e_scopeParser _25213_sp = _1c195242e_scopeParser{._field_p=_self_, };;
	_1c195e2d7_build(&_25213_sp, _24935_tokens, &(_25013_s));
	return _25013_s;;
}



inline __jule_tuple_x_1c0c5e93a_TypeDecl__jule_tuple_bool _1c19727e5__buildType(jule::Ptr<_1c19706e4_parser> _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _25942_tokens, jule::I64* _26013_i, jule::Bool _26022_err) {
	__jule_tuple_x_1c0c5e93a_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1c1982816_typeBuilder _26113_tb = _1c1982816_typeBuilder{._field_p=_self_, ._field_tokens=(*(_25942_tokens)), ._field_i=_26013_i, ._field_err=_26022_err};;
	__jule_func_result = std::move(_1c19857e7_build(&_26113_tb));
return __jule_func_result;;
}



inline __jule_tuple_x_1c0c5e93a_TypeDecl__jule_tuple_bool _1c1972c9b_buildType(jule::Ptr<_1c19706e4_parser> _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _27141_tokens, jule::I64* _27213_i, jule::Bool _27222_err) {
	__jule_tuple_x_1c0c5e93a_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1c0c49480_Token> _2739_token = (*(_27141_tokens))[(*(_27213_i))];;
	jule::Ptr<_1c0c5e93a_TypeDecl> _27413_t;
	jule::Bool _27416_ok;
	({
		__jule_tuple_x_1c0c5e93a_TypeDecl__jule_tuple_bool __jule_assign_result = _1c19727e5__buildType(_self_, _27141_tokens, _27213_i, _27222_err);
		_27413_t = __jule_assign_result.__jule_result_arg0;
		_27416_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_27222_err && (!(_27416_ok)))) {
		_1c1971195_pushErr(_self_, _2739_token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _27413_t;
	__jule_func_result.__jule_result_arg1 = _27416_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1c0c76457_TypeAliasDecl> _1c19730dc_buildTypeAliasDecl(jule::Ptr<_1c19706e4_parser> _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _28143_tokens) {
	jule::I64 _28213_i = 1LL;;
	if ((_28213_i >= (*(_28143_tokens)).len())) {
		_1c1971195_pushErr(_self_.ptr(), (*(_28143_tokens))[(_28213_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c0c76457_TypeAliasDecl> _28713_tad = jule::new_ptr<_1c0c76457_TypeAliasDecl>(_1c0c76457_TypeAliasDecl{._field_Token=(*(_28143_tokens))[1LL], ._field_Ident=(*((*(_28143_tokens))[1LL]))._field_Kind, });;
	jule::Ptr<_1c0c49480_Token> _29113_token = (*(_28143_tokens))[_28213_i];;
	if (((*(_29113_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c1971195_pushErr(_self_, _29113_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c1971508_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_28213_i)++;
	if ((_28213_i >= (*(_28143_tokens)).len())) {
		_1c1971195_pushErr(_self_, (*(_28143_tokens))[(_28213_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return _28713_tad;;
	};
	_29113_token=(*(_28143_tokens))[_28213_i];
	if (((*_29113_token.alloc)._field_Id != static_cast<jule::U64>(8LLU))) {
		_1c1971195_pushErr(_self_, (*(_28143_tokens))[(_28213_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c1971508_pushSuggestion(_self_, jule::Str::lit("expected colon \":\"", 18), jule::Slice<jule::Any>());
		return _28713_tad;;
	};
	(_28213_i)++;
	if ((_28213_i >= (*(_28143_tokens)).len())) {
		_1c1971195_pushErr(_self_, (*(_28143_tokens))[(_28213_i - 1LL)], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return _28713_tad;;
	};
	jule::Ptr<_1c0c5e93a_TypeDecl> _31213_t;
	jule::Bool _31216_ok;
	({
		__jule_tuple_x_1c0c5e93a_TypeDecl__jule_tuple_bool __jule_assign_result = _1c1972c9b_buildType(_self_, _28143_tokens, (&(_28213_i)), true);
		_31213_t = __jule_assign_result.__jule_result_arg0;
		_31216_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_28713_tad))._field_Kind=_31213_t;
	if ((_31216_ok && (_28213_i < (*(_28143_tokens)).len()))) {
		_1c1971195_pushErr(_self_, (*(_28143_tokens))[_28213_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_28713_tad.alloc)._field_Public=_1c0d28141_IsPub((*_28713_tad.alloc)._field_Ident);
	return _28713_tad;;
}



inline void _1c1973450_buildVarTypeAndExpr(jule::Ptr<_1c19706e4_parser> _self_, jule::Ptr<_1c0c727a5_VarDecl>* _32144_v, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _32162_tokens) {
	jule::I64 _32213_i = 0LL;;
	jule::Ptr<_1c0c49480_Token> _32313_tok = (*(_32162_tokens))[_32213_i];;
	if (((*(_32313_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_32213_i)++;
		if (((_32213_i >= (*(_32162_tokens)).len()) || ((*((*(_32162_tokens))[_32213_i]))._field_Id == static_cast<jule::U64>(71LLU)))) {
			_1c1971195_pushErr(_self_.ptr(), _32313_tok, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1c0c5e93a_TypeDecl> _33017_t;
		jule::Bool _33020_ok;
		({
			__jule_tuple_x_1c0c5e93a_TypeDecl__jule_tuple_bool __jule_assign_result = _1c1972c9b_buildType(_self_, _32162_tokens, (&(_32213_i)), true);
			_33017_t = __jule_assign_result.__jule_result_arg0;
			_33020_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_33020_ok) {
			(*((*(_32144_v))))._field_Kind=_33017_t;
			if ((_32213_i >= (*(_32162_tokens)).len())) {
				return;;
			};
			_32313_tok=(*(_32162_tokens))[_32213_i];
		};
	};
	if (((*_32313_tok.alloc)._field_Id != static_cast<jule::U64>(71LLU))) {
		_1c1971195_pushErr(_self_, _32313_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_32144_v))))._field_Setter=_32313_tok;
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _34613_exprTokens = (*(_32162_tokens)).slice((_32213_i + 1LL));;
	if ((_34613_exprTokens.len() == 0LL)) {
		_1c1971195_pushErr(_self_, _32313_tok, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_32144_v))))._field_Expr=_1c1971849_buildExpr(_self_, &(_34613_exprTokens));
}



inline void _1c19737b3_buildVarCommon(jule::Ptr<_1c19706e4_parser> _self_, jule::Ptr<_1c0c727a5_VarDecl>* _35439_v, jule::Slice<jule::Ptr<_1c0c49480_Token>> _35456_tokens) {
	(*((*(_35439_v))))._field_Token=_35456_tokens[0LL];
	if (((*((*((*(_35439_v))))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c1971195_pushErr(_self_.ptr(), (*((*(_35439_v))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c1971508_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_35439_v))))._field_Ident=(*(*((*(_35439_v))))._field_Token.alloc)._field_Kind;
	(*((*(_35439_v))))._field_Public=_1c0d28141_IsPub((*((*(_35439_v))))._field_Ident);
	(*((*(_35439_v))))._field_Kind=nullptr;
	if ((_35456_tokens.len() > 1LL)) {
		(_35456_tokens).mut_slice(1LL);;
		_1c1973450_buildVarTypeAndExpr(_self_, _35439_v, &(_35456_tokens));
	};
}



inline void _1c1973b26_buildVarBegin(_1c19706e4_parser* _self_, jule::Ptr<_1c0c727a5_VarDecl>* _37037_v, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _37055_tokens) {
	jule::Ptr<_1c0c49480_Token> _3719_tok = (*(_37055_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_3719_tok))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1c5eeda5e:;
			{
				(*((*(_37037_v))))._field_Statically=true;
				goto _case_begin_1c5eed6eb;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1c5eed6eb:;
			{
				if (((*(_37055_tokens)).len() == 1LL)) {
					(*(_37055_tokens))=nullptr;
					_1c1971195_pushErr(_self_, _3719_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				((*(_37055_tokens))).mut_slice(1LL);;
				if (((*((*(_37055_tokens))[0LL]))._field_Id == static_cast<jule::U64>(32LLU))) {
					(*((*(_37037_v))))._field_Mutable=true;
					((*(_37055_tokens))).mut_slice(1LL);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1c5eed3dd:;
			{
				(*((*(_37037_v))))._field_Constant=true;
				((*(_37055_tokens))).mut_slice(1LL);;
			}
		}
		else {
			_case_begin_1c5eed0ad:;
			{
				(*(_37055_tokens))=nullptr;
				_1c1971195_pushErr(_self_, _3719_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c5eed388:;
	};
}



inline jule::Ptr<_1c0c727a5_VarDecl> _1c1973e67_buildVar(jule::Ptr<_1c19706e4_parser> _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>> _39832_tokens) {
	jule::Ptr<_1c0c727a5_VarDecl> _39913_v = jule::new_ptr<_1c0c727a5_VarDecl>(_1c0c727a5_VarDecl{._field_Token=_39832_tokens[0LL], });;
	_1c1973b26_buildVarBegin(_self_.ptr(), &(_39913_v), &(_39832_tokens));
	if ((_39832_tokens.len() == 0LL)) {
		return nullptr;;
	};
	if (((*(_39832_tokens[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
		(*(_39913_v))._field_Reference=true;
		if ((_39832_tokens.len() == 1LL)) {
			return nullptr;;
		};
		(_39832_tokens).mut_slice(1LL);;
	};
	_1c19737b3_buildVarCommon(_self_, &(_39913_v), _39832_tokens);
	return _39913_v;;
}



inline jule::Ptr<_1c0c6bb45_GenericDecl> _1c19742a8_buildGeneric(jule::Ptr<_1c19706e4_parser> _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _41737_tokens) {
	jule::Ptr<_1c0c6bb45_GenericDecl> _41813_g = jule::new_ptr<_1c0c6bb45_GenericDecl>(_1c0c6bb45_GenericDecl{._field_Token=(*(_41737_tokens))[0LL], });;
	if (((*((*(_41813_g))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c1971195_pushErr(_self_.ptr(), (*_41813_g.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c1971508_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_41813_g.alloc)._field_Ident=(*(*_41813_g.alloc)._field_Token.alloc)._field_Kind;
	if (((*(_41737_tokens)).len() > 1LL)) {
		if (((*((*(_41737_tokens))[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
			_1c1971195_pushErr(_self_, (*(_41737_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_41737_tokens)).len() == 2LL)) {
			_1c1971195_pushErr(_self_, (*(_41737_tokens))[1LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_1c0c49480_Token>> _43517_constraintTokens = (*(_41737_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>> _43617_parts;
		jule::Slice<_21b8c54de_Log> _43624_errors;
		({
			__jule_tuple_ssx_1c0c49480_Token__jule_tuple_s_21b8c54de_Log __jule_assign_result = _1c196e616_parts(&(_43517_constraintTokens), static_cast<jule::U64>(66LLU), true);
			_43617_parts = __jule_assign_result.__jule_result_arg0;
			_43624_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_43624_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_43624_errors);
			return nullptr;;
		};
		(*_41813_g.alloc)._field_Constraint=jule::new_ptr<_1c0c6b68e_Constraint>(_1c0c6b68e_Constraint{._field_Mask=jule::Slice<jule::Ptr<_1c0c5e93a_TypeDecl>>::alloc(0LL, _43617_parts.len())});
		{
			auto expr = &(_43617_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c600ac9c:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_1c0c49480_Token>> _44225_part = *it;
				{
					jule::I64 _44321_i = 0LL;;
					jule::Ptr<_1c0c5e93a_TypeDecl> _44421_kind;
					({
						__jule_tuple_x_1c0c5e93a_TypeDecl__jule_tuple_bool __jule_assign_result = _1c1972c9b_buildType(_self_, &(_44225_part), (&(_44321_i)), true);
						_44421_kind = __jule_assign_result.__jule_result_arg0;
					});
					(*((*_41813_g.alloc)._field_Constraint))._field_Mask=jule::append((*(*_41813_g.alloc)._field_Constraint.alloc)._field_Mask,jule::Slice<jule::Ptr<_1c0c5e93a_TypeDecl>>::make({_44421_kind}));
					if ((_44321_i < _44225_part.len())) {
						_1c1971195_pushErr(_self_, _44225_part[_44321_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1c600ac9c:;
				++it;
				goto _iter_begin_1c600ac9c;
			}
			_iter_end_1c600ac9c:;
		};
	};
	return _41813_g;;
}



inline jule::Slice<jule::Ptr<_1c0c6bb45_GenericDecl>> _1c19746a4_buildGenerics(jule::Ptr<_1c19706e4_parser> _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _45438_tokens, jule::Ptr<_1c0c49480_Token>* _45457_errorToken) {
	if (((*(_45438_tokens)).len() == 0LL)) {
		_1c1971195_pushErr(_self_.ptr(), (*(_45457_errorToken)), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>> _46013_parts;
	jule::Slice<_21b8c54de_Log> _46020_errors;
	({
		__jule_tuple_ssx_1c0c49480_Token__jule_tuple_s_21b8c54de_Log __jule_assign_result = _1c196e616_parts(_45438_tokens, static_cast<jule::U64>(5LLU), true);
		_46013_parts = __jule_assign_result.__jule_result_arg0;
		_46020_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_46020_errors.len() > 0LL)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_46020_errors);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c0c6bb45_GenericDecl>> _46613_generics = jule::Slice<jule::Ptr<_1c0c6bb45_GenericDecl>>::alloc(0LL, _46013_parts.len());;
	{
		auto expr = &(_46013_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c601109e:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c0c49480_Token>> _46721_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1c0c6bb45_GenericDecl>> &__jule_push_dest = _46613_generics; __jule_push_dest.push(_1c19742a8_buildGeneric(_self_, &(_46721_part))); };
			}
			_iter_next_1c601109e:;
			++it;
			goto _iter_begin_1c601109e;
		}
		_iter_end_1c601109e:;
	};
	return _46613_generics;;
}



inline jule::Ptr<_1c0c70198_ParamDecl> _1c19749e5_buildSelfParam(_1c19706e4_parser* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>> _47437_tokens) {
	if ((_47437_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1c0c70198_ParamDecl> _47913_param = jule::new_ptr<_1c0c70198_ParamDecl>();;
	if (((*(_47437_tokens[0LL]))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_47913_param.alloc)._field_Mutable=true;
		if ((_47437_tokens.len() == 1LL)) {
			_1c1971195_pushErr(_self_, _47437_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_47437_tokens).mut_slice(1LL);;
	};
	_234c76a64_StrBuilder _49113_ident = static__234c76ec6_New(5LL);;
	if (((*(_47437_tokens[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
		_234c77537_WriteStr(&_49113_ident, jule::Str::lit("&", 1));
		if ((_47437_tokens.len() == 1LL)) {
			_1c1971195_pushErr(_self_, _47437_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_47437_tokens).mut_slice(1LL);;
	};
	if (((*(_47437_tokens[0LL]))._field_Id == static_cast<jule::U64>(24LLU))) {
		_234c77537_WriteStr(&_49113_ident, jule::Str::lit("self", 4));
		(*_47913_param.alloc)._field_Token=_47437_tokens[0LL];
		if ((_47437_tokens.len() != 1LL)) {
			_1c1971195_pushErr(_self_, _47437_tokens[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	};
	(*_47913_param.alloc)._field_Ident=_234c77d2e_Str(&_49113_ident);
	return _47913_param;;
}



inline void _1c1974e13_paramTypeBegin(_1c19706e4_parser* _self_, jule::Ptr<_1c0c70198_ParamDecl>* _51438_param, jule::I64* _51462_i, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _51471_tokens) {
	for (; ((*(_51462_i)) < (*(_51471_tokens)).len()); ((*(_51462_i)))++) {
		{
			jule::Ptr<_1c0c49480_Token> _51613_token = (*(_51471_tokens))[(*(_51462_i))];;
			if (((*(_51613_token))._field_Id != static_cast<jule::U64>(39LLU))) {
				return;;
			};
			if ((*((*(_51438_param))))._field_Variadic) {
				_1c1971195_pushErr(_self_, _51613_token, jule::Str::lit("define is already variadic", 26), jule::Slice<jule::Any>());
				goto _iter_next_1c60184a2;
			};
			(*((*(_51438_param))))._field_Variadic=true;
		}
	_iter_next_1c60184a2:;
	}
	_iter_end_1c60184a2:;;
}



inline void _1c1975276_buildParamType(jule::Ptr<_1c19706e4_parser> _self_, jule::Ptr<_1c0c70198_ParamDecl>* _52939_param, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _52963_tokens) {
	jule::I64 _53013_i = 0LL;;
	_1c1974e13_paramTypeBegin(_self_.ptr(), _52939_param, &(_53013_i), _52963_tokens);
	if ((_53013_i >= (*(_52963_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1c0c5e93a_TypeDecl__jule_tuple_bool __jule_assign_result = _1c1972c9b_buildType(_self_, _52963_tokens, (&(_53013_i)), true);
		(*((*(_52939_param))))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_53013_i < (*(_52963_tokens)).len())) {
		_1c1971195_pushErr(_self_, (*(_52963_tokens))[_53013_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1c19755d9_buildParamBody(jule::Ptr<_1c19706e4_parser> _self_, jule::Ptr<_1c0c70198_ParamDecl>* _54239_param, jule::Slice<jule::Ptr<_1c0c49480_Token>> _54262_tokens) {
	jule::Ptr<_1c0c49480_Token> _54313_tok = _54262_tokens[0LL];;
	if ((_54262_tokens.len() == 1LL)) {
		(*((*(_54239_param))))._field_Ident=(*(_54313_tok))._field_Kind;
		return;;
	} else if ((_54262_tokens.len() < 3LL)) {
		_1c1971195_pushErr(_self_.ptr(), _54313_tok, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_54262_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
		(*((*(_54239_param))))._field_Ident=jule::Str::lit("<anonymous>", 11);
		_1c1975276_buildParamType(_self_, _54239_param, &(_54262_tokens));
		return;;
	};
	(*((*(_54239_param))))._field_Ident=(*(_54313_tok))._field_Kind;
	(_54262_tokens).mut_slice(2LL);;
	_1c1975276_buildParamType(_self_, _54239_param, &(_54262_tokens));
}



inline jule::Ptr<_1c0c70198_ParamDecl> _1c197592a_buildParam(jule::Ptr<_1c19706e4_parser> _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>> _56234_tokens) {
	jule::Ptr<_1c0c70198_ParamDecl> _56313_param = jule::new_ptr<_1c0c70198_ParamDecl>(_1c0c70198_ParamDecl{._field_Token=_56234_tokens[0LL], });;
	if (((*((*(_56313_param))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_56313_param.alloc)._field_Mutable=true;
		if ((_56234_tokens.len() == 1LL)) {
			_1c1971195_pushErr(_self_.ptr(), _56234_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_56234_tokens).mut_slice(1LL);;
		(*_56313_param.alloc)._field_Token=_56234_tokens[0LL];
	};
	if ((_56234_tokens.len() >= 3LL)) {
		if (((*(*_56313_param.alloc)._field_Token.alloc)._field_Id == static_cast<jule::U64>(65LLU))) {
			if ((_56234_tokens.len() == 1LL)) {
				_1c1971195_pushErr(_self_, _56234_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if ((((*(_56234_tokens[1LL]))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_56234_tokens[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
				(*_56313_param.alloc)._field_Reference=true;
				(_56234_tokens).mut_slice(1LL);;
				(*_56313_param.alloc)._field_Token=_56234_tokens[0LL];
			};
		};
	};
	if (((*(*_56313_param.alloc)._field_Token.alloc)._field_Id != static_cast<jule::U64>(1LLU))) {
		(*_56313_param.alloc)._field_Ident=jule::Str::lit("<anonymous>", 11);
		_1c1975276_buildParamType(_self_, &(_56313_param), &(_56234_tokens));
	} else {
		_1c19755d9_buildParamBody(_self_, &(_56313_param), _56234_tokens);
	};
	return _56313_param;;
}



inline void _1c1975bd3_checkParams(_1c19706e4_parser* _self_, jule::Slice<jule::Ptr<_1c0c70198_ParamDecl>>* _60535_params) {
	{
		auto expr = _60535_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c60284a1:;
		if (it != expr_end) {
			jule::Ptr<_1c0c70198_ParamDecl> _60621_param = *it;
			{
				if ((_1c0c7051c_IsSelf(_60621_param.ptr()) || ((*_60621_param.alloc)._field_Kind != nullptr))) {
					goto _iter_next_1c60284a1;
				};
				if (((*_60621_param.alloc)._field_Token == nullptr)) {
					_1c1971195_pushErr(_self_, (*_60621_param.alloc)._field_Token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
				} else {
					(*_60621_param.alloc)._field_Kind=jule::new_ptr<_1c0c5e93a_TypeDecl>(_1c0c5e93a_TypeDecl{._field_Token=(*_60621_param.alloc)._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1c0c60045_IdentTypeDecl>(_1c0c60045_IdentTypeDecl{._field_Token=(*_60621_param.alloc)._field_Token, ._field_Ident=(*((*_60621_param.alloc)._field_Token))._field_Kind, }), &__jule_any_type74)});
					(*_60621_param.alloc)._field_Ident=jule::Str::lit("<anonymous>", 11);
				};
			}
			_iter_next_1c60284a1:;
			++it;
			goto _iter_begin_1c60284a1;
		}
		_iter_end_1c60284a1:;
	};
}



inline jule::Slice<jule::Ptr<_1c0c70198_ParamDecl>> _1c19760ce_buildParams(jule::Ptr<_1c19706e4_parser> _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _62536_tokens, jule::Bool _62554_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>> _62613_parts;
	jule::Slice<_21b8c54de_Log> _62620_errs;
	({
		__jule_tuple_ssx_1c0c49480_Token__jule_tuple_s_21b8c54de_Log __jule_assign_result = _1c196e616_parts(_62536_tokens, static_cast<jule::U64>(5LLU), true);
		_62613_parts = __jule_assign_result.__jule_result_arg0;
		_62620_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,_62620_errs);
	if ((_62613_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c0c70198_ParamDecl>> _63217_params = nullptr;;
	if ((_62554_method && (_62613_parts.len() > 0LL))) {
		jule::Ptr<_1c0c70198_ParamDecl> _63417_param = _1c19749e5_buildSelfParam(_self_, _62613_parts[0LL]);;
		if (((_63417_param != nullptr) && _1c0c7051c_IsSelf(_63417_param))) {
			{ jule::Slice<jule::Ptr<_1c0c70198_ParamDecl>> &__jule_push_dest = _63217_params; __jule_push_dest.push(_63417_param); };
			(_62613_parts).mut_slice(1LL);;
		};
	};
	{
		auto expr = &(_62613_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c602ec9e:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c0c49480_Token>> _64121_part = *it;
			{
				if ((_64121_part.len() == 0LL)) {
					goto _iter_next_1c602ec9e;
				};
				jule::Ptr<_1c0c70198_ParamDecl> _64517_param = _1c197592a_buildParam(_self_, _64121_part);;
				if ((_64517_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_1c0c70198_ParamDecl>> &__jule_push_dest = _63217_params; __jule_push_dest.push(_64517_param); };
				};
			}
			_iter_next_1c602ec9e:;
			++it;
			goto _iter_begin_1c602ec9e;
		}
		_iter_end_1c602ec9e:;
	};
	_1c1975bd3_checkParams(_self_, &(_63217_params));
	return _63217_params;;
}



inline __jule_tuple_x_1c0c6282d_RetTypeDecl__jule_tuple_bool _1c19764ca_buildMultiRetType(jule::Ptr<_1c19706e4_parser> _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _65542_tokens, jule::I64* _65565_i) {
	__jule_tuple_x_1c0c6282d_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1c0c6282d_RetTypeDecl>();
	((*(_65565_i)))++;
	if (((*(_65565_i)) >= (*(_65542_tokens)).len())) {
		((*(_65565_i)))--;
		({
			__jule_tuple_x_1c0c5e93a_TypeDecl__jule_tuple_bool __jule_assign_result = _1c1972c9b_buildType(_self_, _65542_tokens, _65565_i, false);
			(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_65565_i)))--;
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _66513_rangeTokens = _1c196dd96_range(_65565_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _65542_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>> _66713_parts;
	jule::Slice<_21b8c54de_Log> _66720_errs;
	({
		__jule_tuple_ssx_1c0c49480_Token__jule_tuple_s_21b8c54de_Log __jule_assign_result = _1c196e616_parts(&(_66513_rangeTokens), static_cast<jule::U64>(5LLU), true);
		_66713_parts = __jule_assign_result.__jule_result_arg0;
		_66720_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_66720_errs);
	if ((_66713_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1c0c5e93a_TypeDecl>> _67313_types = jule::Slice<jule::Ptr<_1c0c5e93a_TypeDecl>>::alloc(0LL, _66713_parts.len());;
	(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::Slice<jule::Ptr<_1c0c49480_Token>>::alloc(0LL, _66713_parts.len());
	{
		auto expr = &(_66713_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6035b73:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c0c49480_Token>> _67521_part = *it;
			{
				if ((_67521_part.len() == 0LL)) {
					goto _iter_next_1c6035b73;
				};
				jule::Ptr<_1c0c49480_Token> _67917_token = _67521_part[0LL];;
				jule::I64 _68017_offset = 0LL;;
				if ((_67521_part.len() > 1LL)) {
					_67917_token=_67521_part[1LL];
					if (((*(_67917_token))._field_Id == static_cast<jule::U64>(8LLU))) {
						_68017_offset=2LL;
						if ((_67521_part.len() < 3LL)) {
							_1c1971195_pushErr(_self_, _67917_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
							goto _iter_next_1c6035b73;
						};
					};
				};
				_67917_token=_67521_part[0LL];
				if ((_68017_offset != 2LL)) {
					jule::Ptr<_1c0c49480_Token> _69621_newToken = jule::new_ptr<_1c0c49480_Token>((*_67917_token.alloc));;
					(*_69621_newToken.alloc)._field_Kind=jule::Str::lit("<anonymous>", 11);
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,jule::Slice<jule::Ptr<_1c0c49480_Token>>::make({_69621_newToken}));
				} else {
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,jule::Slice<jule::Ptr<_1c0c49480_Token>>::make({_67917_token}));
				};
				jule::Ptr<_1c0c5e93a_TypeDecl> _70317_tk;
				({
					__jule_tuple_x_1c0c5e93a_TypeDecl__jule_tuple_bool __jule_assign_result = _1c1972c9b_buildType(_self_, &(_67521_part), (&(_68017_offset)), true);
					_70317_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_68017_offset < _67521_part.len())) {
					_1c1971195_pushErr(_self_, _67521_part[_68017_offset], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1c0c5e93a_TypeDecl>> &__jule_push_dest = _67313_types; __jule_push_dest.push(_70317_tk); };
			}
			_iter_next_1c6035b73:;
			++it;
			goto _iter_begin_1c6035b73;
		}
		_iter_end_1c6035b73:;
	};
	if ((_67313_types.len() > 1LL)) {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=jule::new_ptr<_1c0c5e93a_TypeDecl>(_1c0c5e93a_TypeDecl{._field_Token=(*(_65542_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1c0c61167_TupleTypeDecl>(_1c0c61167_TupleTypeDecl{._field_Types=_67313_types}), &__jule_any_type73)});
	} else {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=_67313_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1c0c6282d_RetTypeDecl__jule_tuple_bool _1c19768c6_buildRetType(jule::Ptr<_1c19706e4_parser> _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _72637_tokens, jule::I64* _72660_i) {
	__jule_tuple_x_1c0c6282d_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1c0c6282d_RetTypeDecl>();
	if (((*(_72660_i)) >= (*(_72637_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_1c0c49480_Token> _73213_token = (*(_72637_tokens))[(*(_72660_i))];;
	{
		auto &_match_expr{ (*(_73213_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1c603ea28:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(71LLU)) {
			_case_begin_1c603ea8e:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1c603eb05:;
			{
				if ((((*(_72660_i)) + 1LL) >= (*(_72637_tokens)).len())) {
					_1c1971195_pushErr(_self_.ptr(), _73213_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_72660_i)))++;
				_73213_token=(*(_72637_tokens))[(*(_72660_i))];
				{
					auto &_match_expr{ (*(_73213_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1c6040d37:;
						{
							({
								__jule_tuple_x_1c0c6282d_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1c19764ca_buildMultiRetType(_self_, _72637_tokens, _72660_i);
								__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
								__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
							});
							return __jule_func_result;;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1c6041a19:;
						{
							_1c1971195_pushErr(_self_, _73213_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
							return __jule_func_result;;
						}
					}
					_match_end_1c6041992:;
				};
				({
					__jule_tuple_x_1c0c5e93a_TypeDecl__jule_tuple_bool __jule_assign_result = _1c1972c9b_buildType(_self_, _72637_tokens, _72660_i, true);
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1c603e9c3:;
	};
	((*(_72660_i)))++;
	_1c1971195_pushErr(_self_.ptr(), _73213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1c0c715ea_FnDecl> _1c1976d7c_buildFnPrototype(jule::Ptr<_1c19706e4_parser> _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _76541_tokens, jule::I64* _76564_i, jule::Bool _76572_method) {
	jule::Ptr<_1c0c715ea_FnDecl> _76613_f = jule::new_ptr<_1c0c715ea_FnDecl>(_1c0c715ea_FnDecl{._field_Token=(*(_76541_tokens))[(*(_76564_i))], });;
	if (((*((*(_76613_f))._field_Token))._field_Id == static_cast<jule::U64>(34LLU))) {
		(*_76613_f.alloc)._field_Statically=true;
		((*(_76564_i)))++;
		if (((*(_76564_i)) >= (*(_76541_tokens)).len())) {
			_1c1971195_pushErr(_self_.ptr(), (*_76613_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_76613_f.alloc)._field_Token=(*(_76541_tokens))[(*(_76564_i))];
	};
	if (((*(*_76613_f.alloc)._field_Token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
		(*_76613_f.alloc)._field_Unsafety=true;
		((*(_76564_i)))++;
		if (((*(_76564_i)) >= (*(_76541_tokens)).len())) {
			_1c1971195_pushErr(_self_, (*_76613_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_76613_f.alloc)._field_Token=(*(_76541_tokens))[(*(_76564_i))];
	};
	((*(_76564_i)))++;
	if (((*(_76564_i)) >= (*(_76541_tokens)).len())) {
		_1c1971195_pushErr(_self_, (*_76613_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c0c49480_Token> _7999_tok = (*(_76541_tokens))[(*(_76564_i))];;
	if (((*(_7999_tok))._field_Id == static_cast<jule::U64>(1LLU))) {
		((*(_76564_i)))++;
		if (((*(_76564_i)) >= (*(_76541_tokens)).len())) {
			_1c1971195_pushErr(_self_, (*_76613_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_76613_f.alloc)._field_Ident=(*_7999_tok.alloc)._field_Kind;
	} else {
		(*_76613_f.alloc)._field_Ident=jule::Str::lit("<anonymous>", 11);
	};
	jule::Ptr<_1c0c49480_Token> _8119_errorToken = (*(_76541_tokens))[(*(_76564_i))];;
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _81213_genericsTokens = _1c196dd96_range(_76564_i, static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _76541_tokens);;
	if ((_81213_genericsTokens != nullptr)) {
		(*_76613_f.alloc)._field_Generics=_1c19746a4_buildGenerics(_self_, &(_81213_genericsTokens), &(_8119_errorToken));
	};
	if (((*((*(_76541_tokens))[(*(_76564_i))]))._field_Id != static_cast<jule::U64>(74LLU))) {
		_1c1971195_pushErr(_self_, (*(_76541_tokens))[(*(_76564_i))], jule::Str::lit("missing function parentheses", 28), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _82213_paramsToks = _1c196dd96_range(_76564_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _76541_tokens);;
	if ((_82213_paramsToks.len() > 0LL)) {
		(*_76613_f.alloc)._field_Params=_1c19760ce_buildParams(_self_, &(_82213_paramsToks), _76572_method);
	};
	if (((*(_76564_i)) < (*(_76541_tokens)).len())) {
		jule::Ptr<_1c0c49480_Token> _82813_token = (*(_76541_tokens))[(*(_76564_i))];;
		if (((*(_82813_token))._field_Id == static_cast<jule::U64>(68LLU))) {
			(*_76613_f.alloc)._field_Exceptional=true;
			((*(_76564_i)))++;
		};
	};
	(*_76613_f.alloc)._field_Public=_1c0d28141_IsPub((*_76613_f.alloc)._field_Ident);
	({
		__jule_tuple_x_1c0c6282d_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1c19768c6_buildRetType(_self_, _76541_tokens, _76564_i);
		(*_76613_f.alloc)._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _76613_f;;
}



inline jule::Ptr<_1c0c715ea_FnDecl> _1c1977333_buildFn(jule::Ptr<_1c19706e4_parser> _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _84232_tokens, jule::Bool _84250_method, jule::Bool _84264_prototype) {
	jule::I64 _84313_i = 0LL;;
	jule::Ptr<_1c0c715ea_FnDecl> _84413_f = _1c1976d7c_buildFnPrototype(_self_, _84232_tokens, &(_84313_i), _84250_method);;
	if (_84264_prototype) {
		if ((_84313_i < (*(_84232_tokens)).len())) {
			_1c1971195_pushErr(_self_, (*(_84232_tokens))[(_84313_i + 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		return _84413_f;;
	} else if ((_84413_f == nullptr)) {
		return _84413_f;;
	};
	if ((_84313_i >= (*(_84232_tokens)).len())) {
		_1c19709e1_stop(_self_);
		_1c1971195_pushErr(_self_, (*(_84413_f))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1c1971508_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _86013_blockTokens = _1c196dd96_range(&(_84313_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _84232_tokens);;
	if ((_86013_blockTokens != nullptr)) {
		(*_84413_f.alloc)._field_Scope=_1c197233e_buildScope(_self_, &(_86013_blockTokens), (*(_84232_tokens))[(_84313_i - 1LL)]);
		(*((*_84413_f.alloc)._field_Scope))._field_Unsafety=(*_84413_f.alloc)._field_Unsafety;
		if ((_84313_i < (*(_84232_tokens)).len())) {
			_1c1971195_pushErr(_self_, (*(_84232_tokens))[_84313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	} else {
		_1c19709e1_stop(_self_);
		_1c1971195_pushErr(_self_, (*_84413_f.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1c1971508_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _84413_f;;
}



inline jule::Slice<jule::Ptr<_1c0c49480_Token>> _1c1977674_getUseDeclSelectors(_1c19706e4_parser* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>> _87642_tokens) {
	jule::I64 _87713_i = 0LL;;
	_87642_tokens=_1c196dd96_range(&(_87713_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_87642_tokens));
	jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>> _87913_parts;
	jule::Slice<_21b8c54de_Log> _87920_errs;
	({
		__jule_tuple_ssx_1c0c49480_Token__jule_tuple_s_21b8c54de_Log __jule_assign_result = _1c196e616_parts(&(_87642_tokens), static_cast<jule::U64>(5LLU), true);
		_87913_parts = __jule_assign_result.__jule_result_arg0;
		_87920_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_87920_errs.len() > 0LL)) {
		((*(_self_))._field_errors).append(_87920_errs);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _88513_selectors = jule::Slice<jule::Ptr<_1c0c49480_Token>>::alloc(0LL, _87913_parts.len());;
	{
		auto expr = &(_87913_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c605a060:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c0c49480_Token>> _88621_part = *it;
			{
				if ((_88621_part.len() > 1LL)) {
					_1c1971195_pushErr(_self_, _88621_part[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1c0c49480_Token> _89017_tok = _88621_part[0LL];;
				if ((((*(_89017_tok))._field_Id != static_cast<jule::U64>(1LLU)) && ((*_89017_tok.alloc)._field_Id != static_cast<jule::U64>(24LLU)))) {
					_1c1971195_pushErr(_self_, _89017_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					_1c1971508_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					goto _iter_next_1c605a060;
				};
				{ jule::Slice<jule::Ptr<_1c0c49480_Token>> &__jule_push_dest = _88513_selectors; __jule_push_dest.push(_89017_tok); };
			}
			_iter_next_1c605a060:;
			++it;
			goto _iter_begin_1c605a060;
		}
		_iter_end_1c605a060:;
	};
	return _88513_selectors;;
}



inline void _1c19779d7_buildBindUseDecl(_1c19706e4_parser* _self_, jule::Ptr<_1c0c77a41_UseDecl>* _90140_decl, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _90157_tokens) {
	if (((*(_90157_tokens)).len() > 1LL)) {
		_1c1971195_pushErr(_self_, (*(_90157_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c0c49480_Token> _9059_token = (*(_90157_tokens))[0LL];;
	if ((((*(_9059_token))._field_Id != static_cast<jule::U64>(4LLU)) || (((*_9059_token.alloc)._field_Kind[0LL] != '`') && ((*_9059_token.alloc)._field_Kind[0LL] != '\"')))) {
		_1c1971195_pushErr(_self_, _9059_token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_90140_decl))))._field_Binded=true;
	(*((*(_90140_decl))))._field_LinkPath=(*_9059_token.alloc)._field_Kind.slice(1LL, ((*_9059_token.alloc)._field_Kind.len() - 1LL));
}



inline jule::Str _1c1977d28_useDeclTokstoa(_1c19706e4_parser* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _91434_tokens) {
	jule::I64 _91513_n = 0LL;;
	{
		auto expr = _91434_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6062441:;
		if (it != expr_end) {
			jule::Ptr<_1c0c49480_Token> *_91616_token = it;
			{
				if ((((*((*(_91616_token))))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(*(_91616_token)).alloc)._field_Id != static_cast<jule::U64>(19LLU)))) {
					_1c1971195_pushErr(_self_, (*(_91616_token)), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				_91513_n+=(*(*(_91616_token)).alloc)._field_Kind.len();
			}
			_iter_next_1c6062441:;
			++it;
			goto _iter_begin_1c6062441;
		}
		_iter_end_1c6062441:;
	};
	_234c76a64_StrBuilder _92213_s = static__234c76ec6_New(_91513_n);;
	{
		auto expr = _91434_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c60625a6:;
		if (it != expr_end) {
			jule::Ptr<_1c0c49480_Token> *_92316_token = it;
			{
				_234c77537_WriteStr(&_92213_s, (*((*(_92316_token))))._field_Kind);
			}
			_iter_next_1c60625a6:;
			++it;
			goto _iter_begin_1c60625a6;
		}
		_iter_end_1c60625a6:;
	};
	return _234c77d2e_Str(&_92213_s);;
}



inline void _1c197818b_buildStdUseDecl(_1c19706e4_parser* _self_, jule::Ptr<_1c0c77a41_UseDecl>* _92939_decl, jule::Slice<jule::Ptr<_1c0c49480_Token>> _92959_tokens) {
	(*((*(_92939_decl))))._field_Std=true;
	jule::Ptr<_1c0c49480_Token> _93213_token = _92959_tokens[0LL];;
	if ((_92959_tokens.len() < 3LL)) {
		_1c1971195_pushErr(_self_, _93213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(_92959_tokens).mut_slice(2LL);;
	_93213_token=_92959_tokens[(_92959_tokens.len() - 1LL)];
	{
		auto &_match_expr{ (*(_93213_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1c606705b:;
			{
				_1c1971195_pushErr(_self_, _93213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1c60670c2:;
			{
				jule::Slice<jule::Ptr<_1c0c49480_Token>> _94521_selectors = nullptr;;
				({
					__jule_tuple_sx_1c0c49480_Token__jule_tuple_sx_1c0c49480_Token __jule_assign_result = _1c196e160_rangeLast(&(_92959_tokens));
					_92959_tokens = __jule_assign_result.__jule_result_arg0;
					_94521_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_92939_decl))))._field_Selected=_1c1977674_getUseDeclSelectors(_self_, _94521_selectors);
				if ((_92959_tokens.len() == 0LL)) {
					_1c1971195_pushErr(_self_, _93213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_93213_token=_92959_tokens[(_92959_tokens.len() - 1LL)];
				if (((*(_93213_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1c1971195_pushErr(_self_, _93213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_92959_tokens).mut_slice(0LL, (_92959_tokens.len() - 1LL));;
				if ((_92959_tokens.len() == 0LL)) {
					_1c1971195_pushErr(_self_, _93213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1c6067138:;
			{
				(_92959_tokens).mut_slice(0LL, (_92959_tokens.len() - 1LL));;
				if ((_92959_tokens.len() == 0LL)) {
					_1c1971195_pushErr(_self_, _93213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_93213_token=_92959_tokens[(_92959_tokens.len() - 1LL)];
				if (((*(_93213_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1c1971195_pushErr(_self_, _93213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_92959_tokens).mut_slice(0LL, (_92959_tokens.len() - 1LL));;
				if ((_92959_tokens.len() == 0LL)) {
					_1c1971195_pushErr(_self_, _93213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_92939_decl))))._field_Full=true;
			}
		}
		_match_end_1c6067006:;
	};
	if (((_92959_tokens.len() == 1LL) && ((*(_92959_tokens[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		(*((*(_92939_decl))))._field_LinkPath=jule::Str::lit("std::unsafe", 11);
	} else {
		(*((*(_92939_decl))))._field_LinkPath=(jule::Str::lit("std::", 5) + _1c1977d28_useDeclTokstoa(_self_, &(_92959_tokens)));
	};
}



inline void _1c19784ee_buildIdentUseDecl(_1c19706e4_parser* _self_, jule::Ptr<_1c0c77a41_UseDecl>* _98741_decl, jule::Slice<jule::Ptr<_1c0c49480_Token>> _98761_tokens) {
	(*((*(_98741_decl))))._field_Std=false;
	jule::Ptr<_1c0c49480_Token> _99013_token = _98761_tokens[(_98761_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ (*(_99013_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1c6075982:;
			{
				_1c1971195_pushErr(_self_, _99013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1c60768d9:;
			{
				jule::Slice<jule::Ptr<_1c0c49480_Token>> _99621_selectors = nullptr;;
				({
					__jule_tuple_sx_1c0c49480_Token__jule_tuple_sx_1c0c49480_Token __jule_assign_result = _1c196e160_rangeLast(&(_98761_tokens));
					_98761_tokens = __jule_assign_result.__jule_result_arg0;
					_99621_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_98741_decl))))._field_Selected=_1c1977674_getUseDeclSelectors(_self_, _99621_selectors);
				if ((_98761_tokens.len() == 0LL)) {
					_1c1971195_pushErr(_self_, _99013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99013_token=_98761_tokens[(_98761_tokens.len() - 1LL)];
				if (((*(_99013_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1c1971195_pushErr(_self_, _99013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_98761_tokens).mut_slice(0LL, (_98761_tokens.len() - 1LL));;
				if ((_98761_tokens.len() == 0LL)) {
					_1c1971195_pushErr(_self_, _99013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1c6076950:;
			{
				(_98761_tokens).mut_slice(0LL, (_98761_tokens.len() - 1LL));;
				if ((_98761_tokens.len() == 0LL)) {
					_1c1971195_pushErr(_self_, _99013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99013_token=_98761_tokens[(_98761_tokens.len() - 1LL)];
				if (((*(_99013_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1c1971195_pushErr(_self_, _99013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_98761_tokens).mut_slice(0LL, (_98761_tokens.len() - 1LL));;
				if ((_98761_tokens.len() == 0LL)) {
					_1c1971195_pushErr(_self_, _99013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_98741_decl))))._field_Full=true;
			}
		}
		_match_end_1c60767b8:;
	};
	(*((*(_98741_decl))))._field_LinkPath=_1c1977d28_useDeclTokstoa(_self_, &(_98761_tokens));
}



inline void _1c1978862_parseUseDecl(_1c19706e4_parser* _self_, jule::Ptr<_1c0c77a41_UseDecl>* _103536_decl, jule::Slice<jule::Ptr<_1c0c49480_Token>> _103556_tokens) {
	if ((*((*(_103536_decl))))._field_Binded) {
		_1c19779d7_buildBindUseDecl(_self_, _103536_decl, &(_103556_tokens));
		return;;
	};
	jule::Ptr<_1c0c49480_Token> _104113_token = _103556_tokens[0LL];;
	if (((*(_104113_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c1971195_pushErr(_self_, _104113_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c1971508_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	if (((_103556_tokens.len() > 2LL) && ((*(_103556_tokens[1LL]))._field_Id == static_cast<jule::U64>(9LLU)))) {
		(*((*(_103536_decl))))._field_Alias=(*_104113_token.alloc)._field_Kind;
		if (((*(_103556_tokens[2LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1c1971195_pushErr(_self_, _104113_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			_1c1971508_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			return;;
		};
		(_103556_tokens).mut_slice(2LL);;
		_104113_token=_103556_tokens[0LL];
	};
	;
	{
		
		if ((*_104113_token.alloc)._field_Kind.equal("std", 3)) {
			_case_begin_1c6083aa0:;
			{
				_1c197818b_buildStdUseDecl(_self_, _103536_decl, _103556_tokens);
			}
		}
		else {
			_case_begin_1c60836e8:;
			{
				_1c19784ee_buildIdentUseDecl(_self_, _103536_decl, _103556_tokens);
			}
		}
		_match_end_1c6083693:;
	};
}



inline jule::Ptr<_1c0c77a41_UseDecl> _1c1978c5d_buildUseDecl(_1c19706e4_parser* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>> _106935_tokens, jule::Bool _106953_binded) {
	jule::Ptr<_1c0c77a41_UseDecl> _107013_decl = jule::new_ptr<_1c0c77a41_UseDecl>(_1c0c77a41_UseDecl{._field_Token=_106935_tokens[0LL], ._field_Binded=_106953_binded, });;
	if ((_106935_tokens.len() < 2LL)) {
		_1c1971195_pushErr(_self_, (*(_107013_decl))._field_Token, jule::Str::lit("missing path of use statement", 29), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_106935_tokens).mut_slice(1LL);;
	_1c1978862_parseUseDecl(_self_, &(_107013_decl), _106935_tokens);
	return _107013_decl;;
}



inline jule::Ptr<_1c0c5e93a_TypeDecl> _1c1979159_buildTypeEnumItemKind(jule::Ptr<_1c19706e4_parser> _self_, jule::I64* _108346_i, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _108359_tokens) {
	jule::I64 _108413_braceN = 0LL;;
	jule::I64 _10859_exprStart = (*(_108346_i));;
	for (; ((*(_108346_i)) < (*(_108359_tokens)).len()); ((*(_108346_i)))++) {
		{
			jule::Ptr<_1c0c49480_Token> _108713_t = (*(_108359_tokens))[(*(_108346_i))];;
			{
				auto &_match_expr{ (*(_108713_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1c6087a82:;
					{
						(_108413_braceN)++;
						goto _iter_next_1c6087059;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1c6087dd4:;
					{
						(_108413_braceN)--;
					}
				}
				_match_end_1c6087d6d:;
			};
			if ((_108413_braceN > 0LL)) {
				goto _iter_next_1c6087059;
			};
			if ((((*(_108713_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_108346_i)) + 1LL) >= (*(_108359_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1c0c49480_Token>> _110325_kindTokens = nullptr;;
				if (((*_108713_t.alloc)._field_Id == static_cast<jule::U64>(5LLU))) {
					_110325_kindTokens=(*(_108359_tokens)).slice(_10859_exprStart, (*(_108346_i)));
				} else {
					_110325_kindTokens=(*(_108359_tokens)).slice(_10859_exprStart);
				};
				jule::I64 _110921_j = 0LL;;
				jule::Ptr<_1c0c5e93a_TypeDecl> _111021_kind;
				({
					__jule_tuple_x_1c0c5e93a_TypeDecl__jule_tuple_bool __jule_assign_result = _1c1972c9b_buildType(_self_, &(_110325_kindTokens), (&(_110921_j)), true);
					_111021_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_110921_j < _110325_kindTokens.len())) {
					_1c1971195_pushErr(_self_, _110325_kindTokens[_110921_j], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				return _111021_kind;;
			};
		}
	_iter_next_1c6087059:;
	}
	_iter_end_1c6087059:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1c0c793d3_TypeEnumItemDecl>> _1c197949a_buildTypeEnumItems(jule::Ptr<_1c19706e4_parser> _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _112043_tokens) {
	jule::Slice<jule::Ptr<_1c0c793d3_TypeEnumItemDecl>> _112113_items = jule::Slice<jule::Ptr<_1c0c793d3_TypeEnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _112213_i = 0LL;;
	for (; (_112213_i < (*(_112043_tokens)).len()); (_112213_i)++) {
		{
			jule::Ptr<_1c0c49480_Token> _112417_t = (*(_112043_tokens))[_112213_i];;
			jule::Ptr<_1c0c793d3_TypeEnumItemDecl> _112517_item = jule::new_ptr<_1c0c793d3_TypeEnumItemDecl>();;
			(*_112517_item.alloc)._field_Token=_112417_t;
			if ((((*((*_112517_item.alloc)._field_Token))._field_Id == static_cast<jule::U64>(1LLU)) && (((*(_112043_tokens)).len() - _112213_i) > 2LL))) {
				_112417_t=(*(_112043_tokens))[(_112213_i + 1LL)];
				if (((*(_112417_t))._field_Id == static_cast<jule::U64>(8LLU))) {
					(*_112517_item.alloc)._field_Ident=(*(*_112517_item.alloc)._field_Token.alloc)._field_Kind;
					_112213_i+=2LL;
					if (((_112213_i >= (*(_112043_tokens)).len()) || ((*((*(_112043_tokens))[_112213_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
						_1c1971195_pushErr(_self_.ptr(), _112417_t, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
						goto _iter_next_1c608cc52;
					};
				};
			};
			(*_112517_item.alloc)._field_Kind=_1c1979159_buildTypeEnumItemKind(_self_, &(_112213_i), _112043_tokens);
			{ jule::Slice<jule::Ptr<_1c0c793d3_TypeEnumItemDecl>> &__jule_push_dest = _112113_items; __jule_push_dest.push(_112517_item); };
		}
	_iter_next_1c608cc52:;
	}
	_iter_end_1c608cc52:;;
	return _112113_items;;
}



inline jule::Ptr<_1c0c79a43_TypeEnumDecl> _1c19797db_buildTypeEnumDecl(jule::Ptr<_1c19706e4_parser> _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _114442_tokens) {
	jule::I64 _114513_i = 1LL;;
	jule::Ptr<_1c0c79a43_TypeEnumDecl> _114613_e = jule::new_ptr<_1c0c79a43_TypeEnumDecl>(_1c0c79a43_TypeEnumDecl{._field_Token=(*(_114442_tokens))[_114513_i], });;
	if (((*((*(_114613_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c1971195_pushErr(_self_.ptr(), (*_114613_e.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c1971508_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_114613_e.alloc)._field_Ident=(*(*_114613_e.alloc)._field_Token.alloc)._field_Kind;
	_114513_i+=3LL;
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _115613_itemTokens = _1c196dd96_range(&(_114513_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _114442_tokens);;
	if ((_115613_itemTokens == nullptr)) {
		_1c19709e1_stop(_self_);
		_1c1971195_pushErr(_self_, (*_114613_e.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1c1971508_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _114613_e;;
	} else if ((_114513_i < (*(_114442_tokens)).len())) {
		_1c1971195_pushErr(_self_, (*(_114442_tokens))[_114513_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_114613_e.alloc)._field_Public=_1c0d28141_IsPub((*_114613_e.alloc)._field_Ident);
	(*_114613_e.alloc)._field_End=(*(_114442_tokens))[(_114513_i - 1LL)];
	(*_114613_e.alloc)._field_Items=_1c197949a_buildTypeEnumItems(_self_, &(_115613_itemTokens));
	return _114613_e;;
}



inline jule::Ptr<_1c0c63c6e_Expr> _1c1979bd7_buildEnumItemExpr(jule::Ptr<_1c19706e4_parser> _self_, jule::I64* _117142_i, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _117155_tokens) {
	jule::I64 _117213_braceN = 0LL;;
	jule::I64 _11739_exprStart = (*(_117142_i));;
	for (; ((*(_117142_i)) < (*(_117155_tokens)).len()); ((*(_117142_i)))++) {
		{
			jule::Ptr<_1c0c49480_Token> _117513_t = (*(_117155_tokens))[(*(_117142_i))];;
			{
				auto &_match_expr{ (*(_117513_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1c609a8db:;
					{
						(_117213_braceN)++;
						goto _iter_next_1c6099db3;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1c609ac3d:;
					{
						(_117213_braceN)--;
					}
				}
				_match_end_1c609abc7:;
			};
			if ((_117213_braceN > 0LL)) {
				goto _iter_next_1c6099db3;
			};
			if ((((*(_117513_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_117142_i)) + 1LL) >= (*(_117155_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1c0c49480_Token>> _119125_exprTokens = nullptr;;
				if (((*_117513_t.alloc)._field_Id == static_cast<jule::U64>(5LLU))) {
					_119125_exprTokens=(*(_117155_tokens)).slice(_11739_exprStart, (*(_117142_i)));
				} else {
					_119125_exprTokens=(*(_117155_tokens)).slice(_11739_exprStart);
				};
				return _1c1971849_buildExpr(_self_, &(_119125_exprTokens));;
			};
		}
	_iter_next_1c6099db3:;
	}
	_iter_end_1c6099db3:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1c0c77ee7_EnumItemDecl>> _1c197a028_buildEnumItems(jule::Ptr<_1c19706e4_parser> _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _120339_tokens) {
	jule::Slice<jule::Ptr<_1c0c77ee7_EnumItemDecl>> _120413_items = jule::Slice<jule::Ptr<_1c0c77ee7_EnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _120513_i = 0LL;;
	for (; (_120513_i < (*(_120339_tokens)).len()); (_120513_i)++) {
		{
			jule::Ptr<_1c0c49480_Token> _120717_t = (*(_120339_tokens))[_120513_i];;
			jule::Ptr<_1c0c77ee7_EnumItemDecl> _120817_item = jule::new_ptr<_1c0c77ee7_EnumItemDecl>();;
			(*_120817_item.alloc)._field_Token=_120717_t;
			if (((*((*_120817_item.alloc)._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
				_1c1971195_pushErr(_self_.ptr(), (*_120817_item.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1c1971508_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			};
			(*_120817_item.alloc)._field_Ident=(*(*_120817_item.alloc)._field_Token.alloc)._field_Kind;
			if ((((_120513_i + 1LL) >= (*(_120339_tokens)).len()) || ((*((*(_120339_tokens))[(_120513_i + 1LL)]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				if (((_120513_i + 1LL) < (*(_120339_tokens)).len())) {
					(_120513_i)++;
				};
				{ jule::Slice<jule::Ptr<_1c0c77ee7_EnumItemDecl>> &__jule_push_dest = _120413_items; __jule_push_dest.push(_120817_item); };
				goto _iter_next_1c609e7d0;
			};
			(_120513_i)++;
			_120717_t=(*(_120339_tokens))[_120513_i];
			(_120513_i)++;
			if (((*(_120717_t))._field_Id != static_cast<jule::U64>(8LLU))) {
				_1c1971195_pushErr(_self_, _120717_t, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1c1971508_pushSuggestion(_self_, jule::Str::lit("expected colon \":\" for assignment", 33), jule::Slice<jule::Any>());
				goto _iter_next_1c609e7d0;
			};
			if (((_120513_i >= (*(_120339_tokens)).len()) || ((*((*(_120339_tokens))[_120513_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				_1c1971195_pushErr(_self_, _120717_t, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
				goto _iter_next_1c609e7d0;
			};
			(*_120817_item.alloc)._field_Expr=_1c1979bd7_buildEnumItemExpr(_self_, &(_120513_i), _120339_tokens);
			{ jule::Slice<jule::Ptr<_1c0c77ee7_EnumItemDecl>> &__jule_push_dest = _120413_items; __jule_push_dest.push(_120817_item); };
		}
	_iter_next_1c609e7d0:;
	}
	_iter_end_1c609e7d0:;;
	return _120413_items;;
}



inline jule::Ptr<_1c0c78aa8_EnumDecl> _1c197a369_buildEnumDecl(jule::Ptr<_1c19706e4_parser> _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _124038_tokens) {
	if (((*(_124038_tokens)).len() < 3LL)) {
		_1c1971195_pushErr(_self_.ptr(), (*(_124038_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c0c78aa8_EnumDecl> _124513_e = jule::new_ptr<_1c0c78aa8_EnumDecl>(_1c0c78aa8_EnumDecl{._field_Token=(*(_124038_tokens))[1LL], });;
	if (((*((*(_124513_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c1971195_pushErr(_self_, (*_124513_e.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c1971508_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_124513_e.alloc)._field_Ident=(*(*_124513_e.alloc)._field_Token.alloc)._field_Kind;
	jule::I64 _125313_i = 2LL;;
	if (((*((*(_124038_tokens))[_125313_i]))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_125313_i)++;
		if ((_125313_i >= (*(_124038_tokens)).len())) {
			_1c1971195_pushErr(_self_, (*(_124038_tokens))[(_125313_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return _124513_e;;
		};
		({
			__jule_tuple_x_1c0c5e93a_TypeDecl__jule_tuple_bool __jule_assign_result = _1c1972c9b_buildType(_self_, _124038_tokens, (&(_125313_i)), true);
			(*_124513_e.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_125313_i >= (*(_124038_tokens)).len())) {
			_1c19709e1_stop(_self_);
			_1c1971195_pushErr(_self_, (*_124513_e.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
			_1c1971508_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
			return _124513_e;;
		};
	} else {
		(*_124513_e.alloc)._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _127013_itemTokens = _1c196dd96_range(&(_125313_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _124038_tokens);;
	if ((_127013_itemTokens == nullptr)) {
		_1c19709e1_stop(_self_);
		_1c1971195_pushErr(_self_, (*_124513_e.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1c1971508_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _124513_e;;
	} else if ((_125313_i < (*(_124038_tokens)).len())) {
		_1c1971195_pushErr(_self_, (*(_124038_tokens))[_125313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_124513_e.alloc)._field_Public=_1c0d28141_IsPub((*_124513_e.alloc)._field_Ident);
	(*_124513_e.alloc)._field_End=(*(_124038_tokens))[(_125313_i - 1LL)];
	(*_124513_e.alloc)._field_Items=_1c197a028_buildEnumItems(_self_, &(_127013_itemTokens));
	return _124513_e;;
}



inline jule::Any _1c197a6aa_buildNodeEnumDecl(jule::Ptr<_1c19706e4_parser> _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _128542_tokens) {
	if ((((*(_128542_tokens)).len() > 3LL) && ((*((*(_128542_tokens))[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
		if (((*((*(_128542_tokens))[3LL]))._field_Id == static_cast<jule::U64>(7LLU))) {
			return jule::Any(_1c19797db_buildTypeEnumDecl(_self_, _128542_tokens), &__jule_any_type18);;
		};
	};
	return jule::Any(_1c197a369_buildEnumDecl(_self_, _128542_tokens), &__jule_any_type17);;
}



inline jule::Ptr<_1c0c79d0c_FieldDecl> _1c197a9eb_buildField(jule::Ptr<_1c19706e4_parser> _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>> _129434_tokens) {
	jule::Ptr<_1c0c79d0c_FieldDecl> _129513_f = jule::new_ptr<_1c0c79d0c_FieldDecl>();;
	(*_129513_f.alloc)._field_Mutable=((*(_129434_tokens[0LL]))._field_Id == static_cast<jule::U64>(32LLU));
	if ((*_129513_f.alloc)._field_Mutable) {
		if ((_129434_tokens.len() == 1LL)) {
			_1c1971195_pushErr(_self_.ptr(), _129434_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_129434_tokens).mut_slice(1LL);;
	};
	(*_129513_f.alloc)._field_Token=_129434_tokens[0LL];
	if (((*((*_129513_f.alloc)._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c1971195_pushErr(_self_, (*_129513_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c1971508_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_129513_f.alloc)._field_Ident=(*(*_129513_f.alloc)._field_Token.alloc)._field_Kind;
	if ((_129434_tokens.len() == 1LL)) {
		_1c1971195_pushErr(_self_, _129434_tokens[0LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if (((_129434_tokens.len() < 3LL) || ((*(_129434_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU)))) {
		_1c1971195_pushErr(_self_, _129434_tokens[1LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_129434_tokens).mut_slice(2LL);;
	jule::I64 _132313_i = 0LL;;
	({
		__jule_tuple_x_1c0c5e93a_TypeDecl__jule_tuple_bool __jule_assign_result = _1c1972c9b_buildType(_self_, &(_129434_tokens), (&(_132313_i)), true);
		(*_129513_f.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_132313_i < _129434_tokens.len())) {
		jule::Ptr<_1c0c49480_Token> _132613_token = _129434_tokens[_132313_i];;
		if (((*(_132613_token))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1c1971195_pushErr(_self_, _129434_tokens[_132313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_132313_i)++;
		if ((_132313_i >= _129434_tokens.len())) {
			_1c1971195_pushErr(_self_, _132613_token, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_129434_tokens).mut_slice(_132313_i);;
		(*_129513_f.alloc)._field_Default=_1c1971849_buildExpr(_self_, &(_129434_tokens));
	};
	(*_129513_f.alloc)._field_Public=_1c0d28141_IsPub((*_129513_f.alloc)._field_Ident);
	return _129513_f;;
}



inline jule::Slice<jule::Ptr<_1c0c79d0c_FieldDecl>> _1c197ad3c_buildStructDeclFields(jule::Ptr<_1c19706e4_parser> _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>> _134345_tokens) {
	jule::Slice<jule::Ptr<_1c0c79d0c_FieldDecl>> _134417_fields = nullptr;;
	jule::Slice<jule::Ptr<_1c1951a8d_stmt>> _134513_stmts = _1c1951e45_splitStmts(&(_134345_tokens));;
	{
		auto expr = &(_134513_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c60bec51:;
		if (it != expr_end) {
			jule::Ptr<_1c1951a8d_stmt> _134621_stmt = *it;
			{
				_134345_tokens=(*(_134621_stmt))._field_tokens;
				jule::Ptr<_1c0c79d0c_FieldDecl> _134817_f = _1c197a9eb_buildField(_self_, _134345_tokens);;
				{ jule::Slice<jule::Ptr<_1c0c79d0c_FieldDecl>> &__jule_push_dest = _134417_fields; __jule_push_dest.push(_134817_f); };
			}
			_iter_next_1c60bec51:;
			++it;
			goto _iter_begin_1c60bec51;
		}
		_iter_end_1c60bec51:;
	};
	return _134417_fields;;
}



inline jule::Ptr<_1c0c7a703_StructDecl> _1c197b17d_buildStructDecl(jule::Ptr<_1c19706e4_parser> _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _135440_tokens) {
	if (((*(_135440_tokens)).len() < 3LL)) {
		_1c1971195_pushErr(_self_.ptr(), (*(_135440_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _136013_i = 1LL;;
	jule::Ptr<_1c0c7a703_StructDecl> _136113_s = jule::new_ptr<_1c0c7a703_StructDecl>(_1c0c7a703_StructDecl{._field_Token=(*(_135440_tokens))[_136013_i], });;
	if (((*((*(_136113_s))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c1971195_pushErr(_self_, (*_136113_s.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c1971508_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_136013_i)++;
	if ((_136013_i >= (*(_135440_tokens)).len())) {
		_1c1971195_pushErr(_self_, (*(_135440_tokens))[_136013_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return _136113_s;;
	};
	(*_136113_s.alloc)._field_Ident=(*(*_136113_s.alloc)._field_Token.alloc)._field_Kind;
	jule::Ptr<_1c0c49480_Token> _13759_errorToken = (*(_135440_tokens))[_136013_i];;
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _137613_genericsTokens = _1c196dd96_range(&(_136013_i), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _135440_tokens);;
	if ((_137613_genericsTokens != nullptr)) {
		(*_136113_s.alloc)._field_Generics=_1c19746a4_buildGenerics(_self_, &(_137613_genericsTokens), &(_13759_errorToken));
	};
	if ((_136013_i >= (*(_135440_tokens)).len())) {
		_1c1971195_pushErr(_self_, (*(_135440_tokens))[(_136013_i - 1LL)], jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1c1971508_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _136113_s;;
	};
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _138613_bodyTokens = _1c196dd96_range(&(_136013_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _135440_tokens);;
	if ((_138613_bodyTokens == nullptr)) {
		_1c19709e1_stop(_self_);
		_1c1971195_pushErr(_self_, (*_136113_s.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1c1971508_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _136113_s;;
	};
	if ((_136013_i < (*(_135440_tokens)).len())) {
		_1c1971195_pushErr(_self_, (*(_135440_tokens))[_136013_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_136113_s.alloc)._field_Public=_1c0d28141_IsPub((*_136113_s.alloc)._field_Ident);
	(*_136113_s.alloc)._field_Fields=_1c197ad3c_buildStructDeclFields(_self_, _138613_bodyTokens);
	(*_136113_s.alloc)._field_End=(*(_135440_tokens))[(_136013_i - 1LL)];
	return _136113_s;;
}



inline void _1c197b436_checkMethodReceiver(_1c19706e4_parser* _self_, jule::Ptr<_1c0c715ea_FnDecl>* _140239_f) {
	if ((*((*(_140239_f))))._field_Statically) {
		if ((((*((*(_140239_f))))._field_Params.len() > 0LL) && _1c0c7051c_IsSelf((*((*(_140239_f))))._field_Params[0LL].ptr()))) {
			_1c1971195_pushErr(_self_, (*((*(_140239_f))))._field_Token, jule::Str::lit("static functions cannot have receiver parameter", 47), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*((*(_140239_f))))._field_Params.len() == 0LL)) {
		_1c1971195_pushErr(_self_, (*((*(_140239_f))))._field_Token, jule::Str::lit("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c0c70198_ParamDecl> _14149_param = (*((*(_140239_f))))._field_Params[0LL];;
	if ((!(_1c0c7051c_IsSelf(_14149_param.ptr())))) {
		_1c1971195_pushErr(_self_, (*((*(_140239_f))))._field_Token, jule::Str::lit("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1c197b799_buildTraitBody(jule::Ptr<_1c19706e4_parser> _self_, jule::Ptr<_1c0c7ae40_TraitDecl>* _142139_t, jule::Slice<jule::Ptr<_1c0c49480_Token>> _142158_tokens) {
	jule::Slice<jule::Ptr<_1c1951a8d_stmt>> _142213_stmts = _1c1951e45_splitStmts(&(_142158_tokens));;
	{
		auto expr = &(_142213_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c60d047b:;
		if (it != expr_end) {
			jule::Ptr<_1c1951a8d_stmt> _142321_stmt = *it;
			{
				_142158_tokens=(*(_142321_stmt))._field_tokens;
				if ((_142158_tokens.len() == 0LL)) {
					goto _iter_next_1c60d047b;
				};
				{
					auto &_match_expr{ (*(_142158_tokens[0LL]))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(29LLU)) {
						_case_begin_1c60d4095:;
						{
							jule::Ptr<_1c0c715ea_FnDecl> _143021_f = _1c1977333_buildFn(_self_, &(_142158_tokens), true, true);;
							if ((_143021_f == nullptr)) {
								goto _match_end_1c60d1867;
							};
							_1c197b436_checkMethodReceiver(_self_, &(_143021_f));
							if (((*(_143021_f))._field_Generics.len() > 0LL)) {
								_1c1971195_pushErr(_self_, (*(_143021_f))._field_Token, jule::Str::lit("trait methods cannot have generics", 34), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1c0c715ea_FnDecl>> &__jule_push_dest = (*((*(_142139_t))))._field_Methods; __jule_push_dest.push(_143021_f); };
						}
					}
					else {
						_case_begin_1c60d116e:;
						{
							jule::I64 _144021_i = 0LL;;
							jule::Ptr<_1c0c5e93a_TypeDecl> _144121_ti;
							jule::Bool _144125_ok;
							({
								__jule_tuple_x_1c0c5e93a_TypeDecl__jule_tuple_bool __jule_assign_result = _1c1972c9b_buildType(_self_, &(_142158_tokens), (&(_144021_i)), true);
								_144121_ti = __jule_assign_result.__jule_result_arg0;
								_144125_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_144125_ok))) {
								goto _match_end_1c60d1867;
							};
							if ((_144021_i < _142158_tokens.len())) {
								_1c1971195_pushErr(_self_, _142158_tokens[_144021_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1c0c5e93a_TypeDecl>> &__jule_push_dest = (*((*(_142139_t))))._field_Inherits; __jule_push_dest.push(_144121_ti); };
						}
					}
					_match_end_1c60d1867:;
				};
			}
			_iter_next_1c60d047b:;
			++it;
			goto _iter_begin_1c60d047b;
		}
		_iter_end_1c60d047b:;
	};
}



inline jule::Ptr<_1c0c7ae40_TraitDecl> _1c197bada_buildTraitDecl(jule::Ptr<_1c19706e4_parser> _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _145339_tokens) {
	if (((*(_145339_tokens)).len() < 3LL)) {
		_1c1971195_pushErr(_self_.ptr(), (*(_145339_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c0c7ae40_TraitDecl> _145813_t = jule::new_ptr<_1c0c7ae40_TraitDecl>(_1c0c7ae40_TraitDecl{._field_Token=(*(_145339_tokens))[1LL], });;
	if (((*((*(_145813_t))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c1971195_pushErr(_self_, (*_145813_t.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c1971508_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_145813_t.alloc)._field_Ident=(*(*_145813_t.alloc)._field_Token.alloc)._field_Kind;
	jule::I64 _146613_i = 2LL;;
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _146713_bodyTokens = _1c196dd96_range(&(_146613_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _145339_tokens);;
	if ((_146713_bodyTokens == nullptr)) {
		_1c19709e1_stop(_self_);
		_1c1971195_pushErr(_self_, (*_145813_t.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1c1971508_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_146613_i < (*(_145339_tokens)).len())) {
		_1c1971195_pushErr(_self_, (*(_145339_tokens))[_146613_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_145813_t.alloc)._field_Public=_1c0d28141_IsPub((*_145813_t.alloc)._field_Ident);
	_1c197b799_buildTraitBody(_self_, &(_145813_t), _146713_bodyTokens);
	(*_145813_t.alloc)._field_End=(*(_145339_tokens))[(_146613_i - 1LL)];
	return _145813_t;;
}



inline jule::Ptr<_1c0c715ea_FnDecl> _1c197be2b_buildBindFn(jule::Ptr<_1c19706e4_parser> _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>> _148335_tokens) {
	(_148335_tokens).mut_slice(1LL);;
	jule::Ptr<_1c0c715ea_FnDecl> _148513_f = _1c1977333_buildFn(_self_, &(_148335_tokens), false, true);;
	if ((_148513_f != nullptr)) {
		(*_148513_f.alloc)._field_Public=false;
		(*_148513_f.alloc)._field_Binded=true;
	};
	return _148513_f;;
}



inline jule::Ptr<_1c0c727a5_VarDecl> _1c197c26c_buildBindVar(jule::Ptr<_1c19706e4_parser> _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>> _149336_tokens) {
	(_149336_tokens).mut_slice(1LL);;
	jule::Ptr<_1c0c727a5_VarDecl> _149513_v = _1c1973e67_buildVar(_self_, _149336_tokens);;
	if ((_149513_v != nullptr)) {
		(*_149513_v.alloc)._field_Public=false;
		(*_149513_v.alloc)._field_Binded=true;
		if (((*_149513_v.alloc)._field_Expr != nullptr)) {
			_1c1971195_pushErr(_self_, (*_149513_v.alloc)._field_Token, jule::Str::lit("binded variables cannot have expression", 39), jule::Slice<jule::Any>());
		};
	};
	return _149513_v;;
}



inline jule::Ptr<_1c0c7a703_StructDecl> _1c197c5ad_buildBindStruct(jule::Ptr<_1c19706e4_parser> _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>> _150639_tokens) {
	(_150639_tokens).mut_slice(1LL);;
	jule::Ptr<_1c0c7a703_StructDecl> _150813_s = _1c197b17d_buildStructDecl(_self_, &(_150639_tokens));;
	if ((_150813_s != nullptr)) {
		(*_150813_s.alloc)._field_Public=false;
		{
			auto expr = &((*_150813_s.alloc)._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c60e311a:;
			if (it != expr_end) {
				jule::Ptr<_1c0c79d0c_FieldDecl> _151125_f = *it;
				{
					(*(_151125_f))._field_Public=true;
				}
				_iter_next_1c60e311a:;
				++it;
				goto _iter_begin_1c60e311a;
			}
			_iter_end_1c60e311a:;
		};
		(*_150813_s.alloc)._field_Binded=true;
	};
	return _150813_s;;
}



inline jule::Ptr<_1c0c76457_TypeAliasDecl> _1c197c8ee_buildBindTypeAlias(jule::Ptr<_1c19706e4_parser> _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>> _152042_tokens) {
	(_152042_tokens).mut_slice(1LL);;
	jule::Ptr<_1c0c76457_TypeAliasDecl> _152213_t = _1c19730dc_buildTypeAliasDecl(_self_, &(_152042_tokens));;
	if ((_152213_t != nullptr)) {
		(*_152213_t.alloc)._field_Public=false;
		(*_152213_t.alloc)._field_Binded=true;
	};
	return _152213_t;;
}



inline jule::Ptr<_1c0c77a41_UseDecl> _1c197cc40_buildBindUse(jule::Ptr<_1c19706e4_parser> _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>> _153036_tokens) {
	if ((_153036_tokens.len() == 1LL)) {
		_1c1971195_pushErr(_self_.ptr(), _153036_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_153036_tokens).mut_slice(1LL);;
	;
	return _1c1978c5d_buildUseDecl(_self_, _153036_tokens, true);;
}



inline jule::Any _1c197d081_buildBind(jule::Ptr<_1c19706e4_parser> _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _154134_tokens) {
	jule::Ptr<_1c0c49480_Token> _154213_token = (*(_154134_tokens))[0LL];;
	if (((*(_154134_tokens)).len() == 1LL)) {
		_1c1971195_pushErr(_self_.ptr(), _154213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_154213_token=(*(_154134_tokens))[1LL];
	{
		auto &_match_expr{ (*(_154213_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1c60e8dce:;
			{
				return jule::Any(_1c197be2b_buildBindFn(_self_, (*(_154134_tokens))), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1c60e8e45:;
			{
				return jule::Any(_1c197c26c_buildBindVar(_self_, (*(_154134_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1c60e8a5a:;
			{
				return jule::Any(_1c197c5ad_buildBindStruct(_self_, (*(_154134_tokens))), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1c60e8ac1:;
			{
				return jule::Any(_1c197c8ee_buildBindTypeAlias(_self_, (*(_154134_tokens))), &__jule_any_type12);;
			}
		}
		else {
			_case_begin_1c60e7dde:;
			{
				_1c1971195_pushErr(_self_, _154213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c60e8a05:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0c715ea_FnDecl> _1c197d3c2_getMethod(jule::Ptr<_1c19706e4_parser> _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _156534_tokens) {
	jule::I64 _156613_i = 0LL;;
	jule::Ptr<_1c0c49480_Token> _156713_token = (*(_156534_tokens))[_156613_i];;
	if (((*(_156713_token))._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_156613_i + 1LL) >= (*(_156534_tokens)).len())) {
			_1c1971195_pushErr(_self_.ptr(), _156713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_156613_i)++;
		_156713_token=(*(_156534_tokens))[_156613_i];
	};
	if (((*_156713_token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
		if (((_156613_i + 1LL) >= (*(_156534_tokens)).len())) {
			_1c1971195_pushErr(_self_, _156713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_156613_i)++;
		_156713_token=(*(_156534_tokens))[_156613_i];
	};
	if (((*_156713_token.alloc)._field_Id != static_cast<jule::U64>(29LLU))) {
		_1c1971195_pushErr(_self_, _156713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1c1977333_buildFn(_self_, _156534_tokens, true, false);;
}



inline void _1c197d735_parseImplBody(jule::Ptr<_1c19706e4_parser> _self_, jule::Ptr<_1c0c7b5a0_Impl>* _159438_ipl, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _159455_tokens) {
	jule::Slice<jule::Ptr<_1c1951a8d_stmt>> _159513_stmts = _1c1951e45_splitStmts(_159455_tokens);;
	{
		auto expr = &(_159513_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6101766:;
		if (it != expr_end) {
			jule::Ptr<_1c1951a8d_stmt> _159621_stmt = *it;
			{
				(*(_159455_tokens))=(*(_159621_stmt))._field_tokens;
				jule::Ptr<_1c0c49480_Token> _159817_token = (*(_159455_tokens))[0LL];;
				{
					auto &_match_expr{ (*(_159817_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1c6101eb4:;
						{
							_1c1971e43_pushDirective(_self_.ptr(), _1c1971b8a_buildDirective(_self_, (*(_159455_tokens))));
							goto _iter_next_1c6101766;
						}
					}
					_match_end_1c6102adb:;
				};
				{
					auto &_match_expr{ (*(_159817_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(6LLU)) {
						_case_begin_1c6103cda:;
						{
							jule::Ptr<_1c0c727a5_VarDecl> _160721_v = _1c1973e67_buildVar(_self_, (*(_159455_tokens)));;
							if ((_160721_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_1c0c727a5_VarDecl>> &__jule_push_dest = (*((*(_159438_ipl))))._field_Statics; __jule_push_dest.push(_160721_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1c6103d51:;
						{
							jule::Ptr<_1c0c715ea_FnDecl> _161421_f = _1c197d3c2_getMethod(_self_, _159455_tokens);;
							if ((_161421_f != nullptr)) {
								_1c197b436_checkMethodReceiver(_self_, &(_161421_f));
								_1c197e170_applyFnMeta(_self_, &(_161421_f));
								{ jule::Slice<jule::Ptr<_1c0c715ea_FnDecl>> &__jule_push_dest = (*((*(_159438_ipl))))._field_Methods; __jule_push_dest.push(_161421_f); };
							};
						}
					}
					else {
						_case_begin_1c6102c0c:;
						{
							_1c1971195_pushErr(_self_, _159817_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							goto _iter_next_1c6101766;
						}
					}
					_match_end_1c61031e6:;
				};
			}
			_iter_next_1c6101766:;
			++it;
			goto _iter_begin_1c6101766;
		}
		_iter_end_1c6101766:;
	};
}



inline jule::Ptr<_1c0c7b5a0_Impl> _1c197da76_buildImpl(jule::Ptr<_1c19706e4_parser> _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>> _162733_tokens) {
	jule::Ptr<_1c0c49480_Token> _162813_token = _162733_tokens[0LL];;
	if ((_162733_tokens.len() < 2LL)) {
		_1c1971195_pushErr(_self_.ptr(), _162813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _163413_i = 1LL;;
	jule::Ptr<_1c0c5e93a_TypeDecl> _163613_base;
	jule::Bool _163623_ok;
	({
		__jule_tuple_x_1c0c5e93a_TypeDecl__jule_tuple_bool __jule_assign_result = _1c1972c9b_buildType(_self_, &(_162733_tokens), (&(_163413_i)), true);
		_163613_base = __jule_assign_result.__jule_result_arg0;
		_163623_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_163623_ok))) {
		return nullptr;;
	};
	if ((_163413_i >= _162733_tokens.len())) {
		_1c1971195_pushErr(_self_, _162813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c0c7b5a0_Impl> _164513_ipl = jule::new_ptr<_1c0c7b5a0_Impl>(_1c0c7b5a0_Impl{._field_Base=_163613_base, });;
	_162813_token=_162733_tokens[_163413_i];
	if (((*(_162813_token))._field_Id != static_cast<jule::U64>(9LLU))) {
		if (((*_162813_token.alloc)._field_Id == static_cast<jule::U64>(72LLU))) {
			std::swap((*(_164513_ipl))._field_Base, (*_164513_ipl.alloc)._field_Dest);
			goto _julec_label_1c61107db;
		};
		_1c19709e1_stop(_self_);
		_1c1971195_pushErr(_self_, _162813_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1c1971508_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_163413_i)++;
	if ((_163413_i >= _162733_tokens.len())) {
		_1c19709e1_stop(_self_);
		_1c1971195_pushErr(_self_, _162813_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1c1971508_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1c0c5e93a_TypeDecl__jule_tuple_bool __jule_assign_result = _1c1972c9b_buildType(_self_, &(_162733_tokens), (&(_163413_i)), true);
		(*_164513_ipl.alloc)._field_Dest = __jule_assign_result.__jule_result_arg0;
		_163623_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_163623_ok))) {
		return nullptr;;
	};
	if ((_163413_i >= _162733_tokens.len())) {
		_1c19709e1_stop(_self_);
		_1c1971195_pushErr(_self_, _162813_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1c1971508_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1c61107db:;
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _168313_bodyTokens = _1c196dd96_range(&(_163413_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_162733_tokens));;
	if ((_168313_bodyTokens == nullptr)) {
		_1c19709e1_stop(_self_);
		_1c1971195_pushErr(_self_, _162813_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1c1971508_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_163413_i < _162733_tokens.len())) {
		_1c1971195_pushErr(_self_, _162733_tokens[_163413_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_164513_ipl.alloc)._field_End=_162733_tokens[(_163413_i - 1LL)];
	_1c197d735_parseImplBody(_self_, &(_164513_ipl), &(_168313_bodyTokens));
	return _164513_ipl;;
}



inline jule::Any _1c197ddb7_buildNodeData(jule::Ptr<_1c19706e4_parser> _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _169838_tokens) {
	jule::Ptr<_1c0c49480_Token> _169913_token = (*(_169838_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_169913_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1c6115846:;
			{
				jule::Ptr<_1c0c715ea_FnDecl> _170317_f = _1c1977333_buildFn(_self_, _169838_tokens, false, false);;
				if ((_170317_f != nullptr)) {
					(*_170317_f.alloc)._field_Global=true;
				};
				return jule::Any(_170317_f, &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1c611577a:;
			{
				return jule::Any(_1c1973e67_buildVar(_self_, (*(_169838_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1c6115e40:;
			{
				return jule::Any(_1c19730dc_buildTypeAliasDecl(_self_, _169838_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1c611546c:;
			{
				return _1c197a6aa_buildNodeEnumDecl(_self_, _169838_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1c61154d3:;
			{
				return jule::Any(_1c197b17d_buildStructDecl(_self_, _169838_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1c6115549:;
			{
				return jule::Any(_1c197bada_buildTraitDecl(_self_, _169838_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1c61155b0:;
			{
				return jule::Any(_1c197da76_buildImpl(_self_, (*(_169838_tokens))), &__jule_any_type11);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1c6115626:;
			{
				return _1c197d081_buildBind(_self_, _169838_tokens);;
			}
		}
		else {
			_case_begin_1c6115170:;
			{
				_1c1971195_pushErr(_self_.ptr(), _169913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c6115417:;
	};
}



inline void _1c197e170_applyFnMeta(_1c19706e4_parser* _self_, jule::Ptr<_1c0c715ea_FnDecl>* _173135_f) {
	(*((*(_173135_f))))._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1c197e428_applyMeta(_1c19706e4_parser* _self_, _1c0c5d939_Node* _173633_node) {
	{
		auto &_match_expr{ (*(_173633_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1c611bdd0:;
			{
				jule::Ptr<_1c0c727a5_VarDecl> _173917_v = (*(_173633_node))._field_Data.unsafe_cast_ptr<_1c0c727a5_VarDecl>();;
				if ((_173917_v == nullptr)) {
					return;;
				};
				(*(_173917_v))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1c611bb38:;
			{
				jule::Ptr<_1c0c715ea_FnDecl> _174617_f = (*(_173633_node))._field_Data.unsafe_cast_ptr<_1c0c715ea_FnDecl>();;
				if ((_174617_f == nullptr)) {
					return;;
				};
				_1c197e170_applyFnMeta(_self_, &(_174617_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1c611be79:;
			{
				jule::Ptr<_1c0c7a703_StructDecl> _175217_sd = (*(_173633_node))._field_Data.unsafe_cast_ptr<_1c0c7a703_StructDecl>();;
				if ((_175217_sd == nullptr)) {
					return;;
				};
				(*(_175217_sd))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1c611bd58:;
	};
}



inline void _1c197e6d1_pushUseDecl(jule::Ptr<_1c19706e4_parser> _self_, jule::Ptr<_1c0c77a41_UseDecl>* _176136_decl) {
	(*((*(_self_))._field_ast))._field_UseDecls=jule::append((*(*_self_.alloc)._field_ast.alloc)._field_UseDecls,jule::Slice<jule::Ptr<_1c0c77a41_UseDecl>>::make({(*(_176136_decl))}));
	if (((*(*_self_.alloc)._field_ast.alloc)._field_Nodes.len() > 0LL)) {
		_1c1971195_pushErr(_self_, (*((*(_176136_decl))))._field_Token, jule::Str::lit("use declarations must declared top of source code", 49), jule::Slice<jule::Any>());
		_1c1971508_pushSuggestion(_self_, jule::Str::lit("move this use declaration to top of source file", 47), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1c197ea22_pushMetaNodes(jule::Ptr<_1c19706e4_parser> _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _176938_tokens) {
	{
		auto &_match_expr{ (*((*(_176938_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1c6123227:;
			{
				;
				jule::Ptr<_1c0c77a41_UseDecl> _177317_decl = _1c1978c5d_buildUseDecl(_self_.ptr(), (*(_176938_tokens)), false);;
				_1c197e6d1_pushUseDecl(_self_, &(_177317_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1c612328d:;
			{
				if ((((*(_176938_tokens)).len() > 1LL) && ((*((*(_176938_tokens))[1LL]))._field_Id == static_cast<jule::U64>(16LLU)))) {
					jule::Ptr<_1c0c77a41_UseDecl> _177821_decl = _1c197cc40_buildBindUse(_self_, (*(_176938_tokens)));;
					_1c197e6d1_pushUseDecl(_self_, &(_177821_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1c6123304:;
			{
				_1c1971e43_pushDirective(_self_.ptr(), _1c1971b8a_buildDirective(_self_, (*(_176938_tokens))));
				return true;;
			}
		}
		_match_end_1c6123128:;
	};
	return false;;
}



inline _1c0c5d939_Node _1c197ed63_parseNode(jule::Ptr<_1c19706e4_parser> _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _178934_st) {
	_1c0c5d939_Node _179013_node = _1c0c5d939_Node{._field_Token=(*(_178934_st))[0LL], };;
	if (_1c197ea22_pushMetaNodes(_self_, _178934_st)) {
		return _179013_node;;
	};
	jule::Any _179813_data = _1c197ddb7_buildNodeData(_self_, _178934_st);;
	if ((_179813_data == nullptr)) {
		return _179013_node;;
	};
	_179013_node._field_Data=_179813_data;
	_1c197e428_applyMeta(_self_, &(_179013_node));
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1c1971195_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
	(*_self_.alloc)._field_directives=nullptr;
	return _179013_node;;
}



inline void _1c198011b_appendNode(jule::Ptr<_1c19706e4_parser> _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _181335_st) {
	if (((*(_181335_st)).len() == 0LL)) {
		return;;
	};
	_1c0c5d939_Node _181713_node = _1c197ed63_parseNode(_self_, _181335_st);;
	if (((_181713_node._field_Data != nullptr) && (!(_1c1970c77_stopped(_self_))))) {
		(*((*_self_.alloc)._field_ast))._field_Nodes=jule::append((*(*_self_.alloc)._field_ast.alloc)._field_Nodes,jule::Slice<_1c0c5d939_Node>::make({_181713_node}));
	};
}



inline void _1c19805e4_removeRange(_1c19706e4_parser* _self_, jule::I64 _182330_i, jule::U64 _182338_id, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _182352_tokens, jule::Slice<jule::I64>* _182375_ranges) {
	jule::U64 _18249_close = _1c196e89c_getCloseOfBrace(_182338_id);;
	for (; (_182330_i >= 0LL); (_182330_i)--) {
		{
			jule::Ptr<_1c0c49480_Token> _182613_tok = (*(_182352_tokens))[(*(_182375_ranges))[_182330_i]];;
			if (((*(_182613_tok))._field_Id != _18249_close)) {
				goto _iter_next_1c612d496;
			};
			(*(_182375_ranges))=jule::append((*(_182375_ranges)).slice(0LL, _182330_i),(*(_182375_ranges)).slice((_182330_i + 1LL)));
			goto _iter_end_1c612d496;
		}
	_iter_next_1c612d496:;
	}
	_iter_end_1c612d496:;;
}



inline void _1c1980a12_pushWrongOrderCloseErr(_1c19706e4_parser* _self_, jule::Ptr<_1c0c49480_Token>* _183542_t, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _183554_tokens, jule::Slice<jule::I64>* _183573_ranges) {
	{
		auto &_match_expr{ (*((*(_183554_tokens))[(*(_183573_ranges))[((*(_183573_ranges)).len() - 1LL)]]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(74LLU)) {
			_case_begin_1c6130784:;
			{
				_1c1971195_pushErr(_self_, (*(_183542_t)), jule::Str::lit("was expected parentheses close", 30), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1c61307ea:;
			{
				_1c1971195_pushErr(_self_, (*(_183542_t)), jule::Str::lit("was expected brace close", 24), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1c6130861:;
			{
				_1c1971195_pushErr(_self_, (*(_183542_t)), jule::Str::lit("was expected bracket close", 26), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c6130685:;
	};
}



inline void _1c1980eda_pushRangeClose(_1c19706e4_parser* _self_, jule::Ptr<_1c0c49480_Token> _184633_t, jule::U64 _184644_left, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _184660_tokens, jule::Slice<jule::I64>* _184683_ranges) {
	jule::I64 _18479_n = (*(_184683_ranges)).len();;
	if ((_18479_n == 0LL)) {
		{
			auto &_match_expr{ (*(_184633_t))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(77LLU)) {
				_case_begin_1c6133457:;
				{
					_1c1971195_pushErr(_self_, _184633_t, jule::Str::lit("extra closed brackets", 21), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(73LLU)) {
				_case_begin_1c61334bd:;
				{
					_1c1971195_pushErr(_self_, _184633_t, jule::Str::lit("extra closed braces", 19), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(75LLU)) {
				_case_begin_1c6133534:;
				{
					_1c1971195_pushErr(_self_, _184633_t, jule::Str::lit("extra closed parentheses", 24), jule::Slice<jule::Any>());
				}
			}
			_match_end_1c613339c:;
		};
		return;;
	} else if (((*((*(_184660_tokens))[(*(_184683_ranges))[(_18479_n - 1LL)]]))._field_Id != _184644_left)) {
		_1c1980a12_pushWrongOrderCloseErr(_self_, &(_184633_t), _184660_tokens, _184683_ranges);
	};
	_1c19805e4_removeRange(_self_, (_18479_n - 1LL), (*(_184633_t))._field_Id, _184660_tokens, _184683_ranges);
}



inline void _1c1981293_checkRanges(_1c19706e4_parser* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _186431_tokens) {
	jule::Slice<jule::I64> _186517_ranges = nullptr;;
	{
		auto expr = _186431_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c613568a:;
		if (it != expr_end) {
			jule::I64 _186713_i = it - expr->begin();
			jule::Ptr<_1c0c49480_Token> *_186716_token = it;
			{
				{
					auto &_match_expr{ (*((*(_186716_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1c61373c3:;
						{
							{ jule::Slice<jule::I64> &__jule_push_dest = _186517_ranges; __jule_push_dest.push(_186713_i); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1c613744a:;
						{
							_1c1980eda_pushRangeClose(_self_, (*(_186716_token)), static_cast<jule::U64>(74LLU), _186431_tokens, &(_186517_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU)) {
						_case_begin_1c61374b1:;
						{
							_1c1980eda_pushRangeClose(_self_, (*(_186716_token)), static_cast<jule::U64>(72LLU), _186431_tokens, &(_186517_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1c6137527:;
						{
							_1c1980eda_pushRangeClose(_self_, (*(_186716_token)), static_cast<jule::U64>(76LLU), _186431_tokens, &(_186517_ranges));
						}
					}
					_match_end_1c6137318:;
				};
			}
			_iter_next_1c613568a:;
			++it;
			_186713_i++;
			goto _iter_begin_1c613568a;
		}
		_iter_end_1c613568a:;
	};
	{
		auto expr = &(_186517_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6139628:;
		if (it != expr_end) {
			jule::I64 _188216_i = *it;
			{
				jule::Ptr<_1c0c49480_Token> _188313_token = (*(_186431_tokens))[_188216_i];;
				{
					auto &_match_expr{ (*(_188313_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1c613a371:;
						{
							_1c1971195_pushErr(_self_, _188313_token, jule::Str::lit("parentheses waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1c613a3d7:;
						{
							_1c1971195_pushErr(_self_, _188313_token, jule::Str::lit("brace waiting to close", 22), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1c613a44d:;
						{
							_1c1971195_pushErr(_self_, _188313_token, jule::Str::lit("bracket are waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					_match_end_1c613a10c:;
				};
			}
			_iter_next_1c6139628:;
			++it;
			goto _iter_begin_1c6139628;
		}
		_iter_end_1c6139628:;
	};
}



inline void _1c198154b_parse(jule::Ptr<_1c19706e4_parser> _self_, jule::Ptr<_1c0c4ec16_File>* _189530_f) {
	(*(_self_))._field_ast=jule::new_ptr<_1c0c5ca26_Ast>(_1c0c5ca26_Ast{._field_File=(*(_189530_f)), });
	(*_self_.alloc)._field_ep=jule::new_ptr<_1c195ed54_exprBuilder>(_1c195ed54_exprBuilder{._field_p=_self_});
	_1c1981293_checkRanges(_self_, &((*((*(_189530_f))))._field_Tokens));
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1c1951a8d_stmt>> _190813_stmts = _1c1951e45_splitStmts(&((*((*(_189530_f))))._field_Tokens));;
	jule::I64 _191113_i = 0LL;;
	for (; (_191113_i < _190813_stmts.len()); (_191113_i)++) {
		{
			jule::Ptr<_1c1951a8d_stmt> _191317_stmt = _190813_stmts[_191113_i];;
			if (((*(_191317_stmt))._field_tokens.len() < 2LL)) {
				return;;
			};
			if (((*((*_191317_stmt.alloc)._field_tokens[0LL]))._field_Id != static_cast<jule::U64>(35LLU))) {
				goto _iter_end_1c613dbd2;
			};
			if ((!(_21b8c7249_IsTopDirective((*((*_191317_stmt.alloc)._field_tokens[1LL]))._field_Kind)))) {
				goto _iter_end_1c613dbd2;
			};
			(*((*_self_.alloc)._field_ast))._field_TopDirectives=jule::append((*(*_self_.alloc)._field_ast.alloc)._field_TopDirectives,jule::Slice<jule::Ptr<_1c0c5dd57_Directive>>::make({_1c1971b8a_buildDirective(_self_, (*_191317_stmt.alloc)._field_tokens)}));
		}
	_iter_next_1c613dbd2:;
	}
	_iter_end_1c613dbd2:;;
	(*_self_.alloc)._field_errors=nullptr;
	for (; ((_191113_i < _190813_stmts.len()) && (!(_1c1970c77_stopped(_self_)))); (_191113_i)++) {
		{
			_1c198011b_appendNode(_self_, &((*(_190813_stmts[_191113_i]))._field_tokens));
		}
	_iter_next_1c6142048:;
	}
	_iter_end_1c6142048:;;
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1c1971195_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c19706e4_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ep:" << _Src._field_ep;
	_Stream << "}";
	return _Stream;
}



inline void _1c1982daa_pushErr(_1c1982816_typeBuilder* _self_, jule::Ptr<_1c0c49480_Token> _4126_token, jule::Str _4141_fmt) {
	if ((*(_self_))._field_err) {
		_1c1971195_pushErr((*(_self_))._field_p.ptr(), _4126_token, _4141_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1c198321d_pushSuggestion(_1c1982816_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args) {
	if ((*(_self_))._field_err) {
		_1c1971508_pushSuggestion((*(_self_))._field_p.ptr(), _4833_fmt, _4846_args);
	};
}



inline jule::Ptr<_1c0c5e93a_TypeDecl> _1c19834a4_buildNamespace(_1c1982816_typeBuilder* _self_) {
	jule::Ptr<_1c0c5e93a_TypeDecl> _5513_t = jule::new_ptr<_1c0c5e93a_TypeDecl>(_1c0c5e93a_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], });;
	jule::Ptr<_1c0c606d8_NamespaceTypeDecl> _5913_nst = jule::new_ptr<_1c0c606d8_NamespaceTypeDecl>();;
	jule::I64 _6013_n = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1c0c49480_Token> _6217_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if (((_6013_n & 1LL) == 0LL)) {
				if (((*(_6217_token))._field_Id != static_cast<jule::U64>(1LLU))) {
					_1c1982daa_pushErr(_self_, _6217_token, jule::Str::lit("invalid syntax", 14));
					_1c198321d_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				};
				(*_5913_nst.alloc)._field_Idents=jule::append((*_5913_nst.alloc)._field_Idents,jule::Slice<jule::Ptr<_1c0c49480_Token>>::make({_6217_token}));
			} else if (((*(_6217_token))._field_Id != static_cast<jule::U64>(19LLU))) {
				goto _iter_end_1c6146899;
			};
			(_6013_n)++;
		}
	_iter_next_1c6146899:;
	}
	_iter_end_1c6146899:;;
	((*(_5913_nst))._field_Idents).mut_slice(0LL, ((*(_5913_nst))._field_Idents.len() - 1LL));;
	((*((*(_self_))._field_i)))--;
	(*_5913_nst.alloc)._field_Kind=_1c1983c57_buildIdent(_self_);
	(*(_5513_t))._field_Kind=jule::Any(_5913_nst, &__jule_any_type91);
	return _5513_t;;
}



inline jule::Slice<jule::Ptr<_1c0c5e93a_TypeDecl>> _1c198373a_buildGenerics(_1c1982816_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_1c0c49480_Token> _889_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((*(_889_token))._field_Id != static_cast<jule::U64>(76LLU))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>> _9313_parts = _1c19839c1_identGenerics(_self_);;
	if ((_9313_parts.len() == 0LL)) {
		_1c1982daa_pushErr(_self_, _889_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c0c5e93a_TypeDecl>> _9913_types = jule::Slice<jule::Ptr<_1c0c5e93a_TypeDecl>>::alloc(0LL, _9313_parts.len());;
	{
		auto expr = &(_9313_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c614e907:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c0c49480_Token>> _10021_part = *it;
			{
				jule::I64 _10117_j = 0LL;;
				jule::Ptr<_1c0c5e93a_TypeDecl> _10217_t;
				({
					__jule_tuple_x_1c0c5e93a_TypeDecl__jule_tuple_bool __jule_assign_result = _1c1972c9b_buildType((*(_self_))._field_p, &(_10021_part), (&(_10117_j)), true);
					_10217_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_10117_j < _10021_part.len())) {
					_1c1982daa_pushErr(_self_, _10021_part[_10117_j], jule::Str::lit("invalid syntax", 14));
				};
				{ jule::Slice<jule::Ptr<_1c0c5e93a_TypeDecl>> &__jule_push_dest = _9913_types; __jule_push_dest.push(_10217_t); };
			}
			_iter_next_1c614e907:;
			++it;
			goto _iter_begin_1c614e907;
		}
		_iter_end_1c614e907:;
	};
	return _9913_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>> _1c19839c1_identGenerics(_1c1982816_typeBuilder* _self_) {
	jule::I64 _1129_first = (*((*(_self_))._field_i));;
	jule::I64 _11313_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1c0c49480_Token> _11513_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			{
				auto &_match_expr{ (*(_11513_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(76LLU)) {
					_case_begin_1c61536ec:;
					{
						(_11313_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(77LLU)) {
					_case_begin_1c6153a4e:;
					{
						(_11313_rangeN)--;
					}
				}
				_match_end_1c61539d8:;
			};
			if ((_11313_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1c6152a4d;
			};
		}
	_iter_next_1c6152a4d:;
	}
	_iter_end_1c6152a4d:;;
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _12713_tokens = (*(_self_))._field_tokens.slice((_1129_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>> _12813_parts;
	jule::Slice<_21b8c54de_Log> _12820_errors;
	({
		__jule_tuple_ssx_1c0c49480_Token__jule_tuple_s_21b8c54de_Log __jule_assign_result = _1c196e616_parts(&(_12713_tokens), static_cast<jule::U64>(5LLU), true);
		_12813_parts = __jule_assign_result.__jule_result_arg0;
		_12820_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_12820_errors);
	};
	return _12813_parts;;
}



inline jule::Ptr<_1c0c5e93a_TypeDecl> _1c1983c57_buildIdent(_1c1982816_typeBuilder* _self_) {
	jule::Bool _13613_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_13613_next && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return _1c19834a4_buildNamespace(_self_);;
	};
	jule::Ptr<_1c0c49480_Token> _14013_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1c0c60045_IdentTypeDecl> _14113_it = jule::new_ptr<_1c0c60045_IdentTypeDecl>(_1c0c60045_IdentTypeDecl{._field_Token=_14013_token, ._field_Ident=(*(_14013_token))._field_Kind, ._field_Binded=false, });;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1c0c5e93a_TypeDecl> _14713_itd = jule::new_ptr<_1c0c5e93a_TypeDecl>(_1c0c5e93a_TypeDecl{._field_Token=_14013_token, ._field_Kind=jule::Any(_14113_it, &__jule_any_type74)});;
	if (((!(_13613_next)) || ((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		(*(_14113_it))._field_Generics=_1c198373a_buildGenerics(_self_);
		return _14713_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1c1982daa_pushErr(_self_, _14013_token, jule::Str::lit("invalid syntax", 14));
		return _14713_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c1982daa_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("invalid syntax", 14));
		return _14713_itd;;
	};
	jule::Ptr<_1c0c6030e_SubIdentTypeDecl> _16413_sit = jule::new_ptr<_1c0c6030e_SubIdentTypeDecl>();;
	(*_16413_sit.alloc)._field_Idents=jule::append((*_16413_sit.alloc)._field_Idents,jule::Slice<jule::Ptr<_1c0c60045_IdentTypeDecl>>::make({_14113_it}));
	jule::Ptr<_1c0c5e93a_TypeDecl> _16613_ident = _1c1983c57_buildIdent(_self_);;
	{
		auto &_match_expr{ (*(_16613_ident))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1c615e61a:;
			{
				(*_16413_sit.alloc)._field_Idents=jule::append((*_16413_sit.alloc)._field_Idents,jule::Slice<jule::Ptr<_1c0c60045_IdentTypeDecl>>::make({(*(_16613_ident))._field_Kind.unsafe_cast_ptr<_1c0c60045_IdentTypeDecl>()}));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1c615c32c:;
			{
				(*_16413_sit.alloc)._field_Idents=jule::append((*_16413_sit.alloc)._field_Idents,(*((*(_16613_ident))._field_Kind.unsafe_cast_ptr<_1c0c6030e_SubIdentTypeDecl>()))._field_Idents);
			}
		}
		_match_end_1c615768a:;
	};
	return jule::new_ptr<_1c0c5e93a_TypeDecl>(_1c0c5e93a_TypeDecl{._field_Token=_14013_token, ._field_Kind=jule::Any(_16413_sit, &__jule_any_type87)});;
}



inline jule::Ptr<_1c0c5e93a_TypeDecl> _1c1983edd_buildCppLink(_1c1982816_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		_1c1982daa_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1c0c5e93a_TypeDecl> _18513_t = _1c1983c57_buildIdent(_self_);;
	(*((*(_18513_t))._field_Kind.cast_ptr<_1c0c60045_IdentTypeDecl>(&__jule_any_type74)))._field_Binded=true;
	return _18513_t;;
}



inline jule::Ptr<_1c0c5e93a_TypeDecl> _1c1984274_buildFn(_1c1982816_typeBuilder* _self_) {
	jule::Ptr<_1c0c49480_Token> _19113_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1c0c715ea_FnDecl> _19213_f = _1c1976d7c_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_19213_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1c0c7195d_IsAnon(_19213_f.ptr())))) {
		_1c1982daa_pushErr(_self_, (*(_19213_f))._field_Token, jule::Str::lit("invalid syntax", 14));
	};
	return jule::new_ptr<_1c0c5e93a_TypeDecl>(_1c0c5e93a_TypeDecl{._field_Token=_19113_token, ._field_Kind=jule::Any(_19213_f, &__jule_any_type14)});;
}



inline jule::Ptr<_1c0c5e93a_TypeDecl> _1c198450a_buildPtr(_1c1982816_typeBuilder* _self_) {
	jule::Ptr<_1c0c49480_Token> _20613_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1c1982daa_pushErr(_self_, _20613_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id == static_cast<jule::U64>(31LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1c0c5e93a_TypeDecl>(_1c0c5e93a_TypeDecl{._field_Token=_20613_token, ._field_Kind=jule::Any(jule::new_ptr<_1c0c61464_PtrTypeDecl>(_1c0c61464_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type70)});;
	};
	jule::Ptr<_1c0c5e93a_TypeDecl> _22313_elem = _1c1985561_step(_self_);;
	if ((_22313_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1c0c5e93a_TypeDecl>(_1c0c5e93a_TypeDecl{._field_Token=_20613_token, ._field_Kind=jule::Any(jule::new_ptr<_1c0c61464_PtrTypeDecl>(_1c0c61464_PtrTypeDecl{._field_Elem=_22313_elem}), &__jule_any_type70)});;
}



inline jule::Ptr<_1c0c5e93a_TypeDecl> _1c1984791_buildSptr(_1c1982816_typeBuilder* _self_) {
	jule::Ptr<_1c0c49480_Token> _23713_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1c1982daa_pushErr(_self_, _23713_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1c0c5e93a_TypeDecl> _24413_elem = _1c1985561_step(_self_);;
	if ((_24413_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1c0c5e93a_TypeDecl>(_1c0c5e93a_TypeDecl{._field_Token=_23713_token, ._field_Kind=jule::Any(jule::new_ptr<_1c0c609d5_SptrTypeDecl>(_1c0c609d5_SptrTypeDecl{._field_Elem=_24413_elem}), &__jule_any_type71)});;
}



inline jule::Ptr<_1c0c5e93a_TypeDecl> _1c1984a27_buildSlc(_1c1982816_typeBuilder* _self_) {
	jule::Ptr<_1c0c49480_Token> _25813_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1c0c5e93a_TypeDecl> _26013_elem = _1c1985561_step(_self_);;
	if ((_26013_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1c0c5e93a_TypeDecl>(_1c0c5e93a_TypeDecl{._field_Token=_25813_token, ._field_Kind=jule::Any(jule::new_ptr<_1c0c60d6a_SlcTypeDecl>(_1c0c60d6a_SlcTypeDecl{._field_Elem=_26013_elem}), &__jule_any_type69)});;
}



inline jule::Ptr<_1c0c5e93a_TypeDecl> _1c1984cad_buildArr(_1c1982816_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _27313_exprTokens = _1c196dd96_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1c1982daa_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1c0c5e93a_TypeDecl> _27913_elem = _1c1985561_step(_self_);;
	if ((_27913_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c0c61c06_ArrTypeDecl> _28413_arrt = jule::new_ptr<_1c0c61c06_ArrTypeDecl>(_1c0c61c06_ArrTypeDecl{._field_Elem=_27913_elem, });;
	jule::Ptr<_1c0c49480_Token> _28813_token = _27313_exprTokens[0LL];;
	if (((_27313_exprTokens.len() == 1LL) && ((*(_28813_token))._field_Id == static_cast<jule::U64>(39LLU)))) {
	} else {
		(*(_28413_arrt))._field_Size=_1c1971849_buildExpr((*(_self_))._field_p, &(_27313_exprTokens));
	};
	return jule::new_ptr<_1c0c5e93a_TypeDecl>(_1c0c5e93a_TypeDecl{._field_Token=_28813_token, ._field_Kind=jule::Any(_28413_arrt, &__jule_any_type68)});;
}



inline jule::Ptr<_1c0c5e93a_TypeDecl> _1c1985044_buildMap(_1c1982816_typeBuilder* _self_) {
	jule::Ptr<_1c0c49480_Token> _30213_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1c1982daa_pushErr(_self_, _30213_mapToken, jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _31013_keyTokens = _1c196dd96_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1c1982daa_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("type missing", 12));
		return nullptr;;
	} else if ((_31013_keyTokens.len() == 0LL)) {
		_1c1982daa_pushErr(_self_, _30213_mapToken, jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1c0c62454_MapTypeDecl> _31913_mapt = jule::new_ptr<_1c0c62454_MapTypeDecl>();;
	jule::I64 _32013_j = 0LL;;
	jule::Ptr<_1c0c5e93a_TypeDecl> _32113_keyt;
	jule::Bool _32123_ok;
	({
		__jule_tuple_x_1c0c5e93a_TypeDecl__jule_tuple_bool __jule_assign_result = _1c1972c9b_buildType((*(_self_))._field_p, &(_31013_keyTokens), (&(_32013_j)), (*(_self_))._field_err);
		_32113_keyt = __jule_assign_result.__jule_result_arg0;
		_32123_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32123_ok))) {
		return nullptr;;
	} else if ((_32013_j < _31013_keyTokens.len())) {
		_1c1982daa_pushErr(_self_, _31013_keyTokens[_32013_j], jule::Str::lit("invalid syntax", 14));
	};
	(*_31913_mapt.alloc)._field_Key=_32113_keyt;
	jule::Ptr<_1c0c5e93a_TypeDecl> _32913_valt;
	({
		__jule_tuple_x_1c0c5e93a_TypeDecl__jule_tuple_bool __jule_assign_result = _1c1972c9b_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_32913_valt = __jule_assign_result.__jule_result_arg0;
		_32123_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32123_ok))) {
		return nullptr;;
	};
	(*_31913_mapt.alloc)._field_Val=_32913_valt;
	return jule::new_ptr<_1c0c5e93a_TypeDecl>(_1c0c5e93a_TypeDecl{._field_Token=_30213_mapToken, ._field_Kind=jule::Any(_31913_mapt, &__jule_any_type72)});;
}



inline jule::Ptr<_1c0c5e93a_TypeDecl> _1c19852ca_buildEnumerable(_1c1982816_typeBuilder* _self_) {
	jule::Ptr<_1c0c49480_Token> _34113_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len())) {
		_1c1982daa_pushErr(_self_, _34113_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_34113_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((*(_34113_token))._field_Id == static_cast<jule::U64>(77LLU))) {
		return _1c1984a27_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1c1984cad_buildArr(_self_);;
}



inline jule::Ptr<_1c0c5e93a_TypeDecl> _1c1985561_step(_1c1982816_typeBuilder* _self_) {
	jule::Ptr<_1c0c49480_Token> _3569_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ (*(_3569_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1c617e97b:;
			{
				return _1c1983c57_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1c617e519:;
			{
				return _1c1983edd_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1c617ea9c:;
			{
				return _1c1984274_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1c617e1d9:;
			{
				return _1c198450a_buildPtr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1c617e250:;
			{
				return _1c1984791_buildSptr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1c617e2b6:;
			{
				return jule::new_ptr<_1c0c5e93a_TypeDecl>(_1c0c5e93a_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1c0c609d5_SptrTypeDecl>(_1c0c609d5_SptrTypeDecl{._field_Elem=_1c1984791_buildSptr(_self_)}), &__jule_any_type71)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1c617e32c:;
			{
				return _1c19852ca_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1c617e393:;
			{
				return _1c1985044_buildMap(_self_);;
			}
		}
		else {
			_case_begin_1c617dddc:;
			{
				((*((*(_self_))._field_i)))++;
				_1c1982daa_pushErr(_self_, _3569_token, jule::Str::lit("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1c617de75:;
	};
}



inline __jule_tuple_x_1c0c5e93a_TypeDecl__jule_tuple_bool _1c19857e7_build(_1c1982816_typeBuilder* _self_) {
	__jule_tuple_x_1c0c5e93a_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1c0c5e93a_TypeDecl> _38813_root = _1c1985561_step(_self_);;
	if ((_38813_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1c1982052_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _38813_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c1982816_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c114d5a9_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _1c11500d3_pushErr(_1c114ea83_directiveEval* _self_, jule::Ptr<_1c0c49480_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	{ jule::Slice<_21b8c54de_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_21b8c54de_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_2126_t))._field_Row, ._field_Column=(*_2126_t.alloc)._field_Column, ._field_Path=(*((*_2126_t.alloc)._field_File))._field_Path, ._field_Text=_21b8c5951_Logf(_2137_fmt, _2150_args), }); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>> _1c11504ce_splitOperans(_1c114ea83_directiveEval* _self_, jule::U64 _3331_op, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _3349_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>> _3413_parts = jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>>::alloc(0LL, 10LL);;
	jule::I64 _3513_i = 0LL;;
	jule::I64 _3613_rangeN = 0LL;;
	jule::I64 _3713_last = 0LL;;
	for (; (_3513_i < ((*(_3349_tokens)).len() - 1LL)); (_3513_i)++) {
		{
			jule::Ptr<_1c0c49480_Token> _3913_b = (*(_3349_tokens))[_3513_i];;
			{
				auto &_match_expr{ (*(_3913_b))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1c61a4462:;
					{
						(_3613_rangeN)++;
						goto _iter_next_1c61a394a;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1c61a47b4:;
					{
						(_3613_rangeN)--;
					}
				}
				_match_end_1c61a474d:;
			};
			if (((_3613_rangeN > 0LL) || ((*(_3913_b))._field_Id != _3331_op))) {
				goto _iter_next_1c61a394a;
			};
			{ jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>> &__jule_push_dest = _3413_parts; __jule_push_dest.push((*(_3349_tokens)).slice(_3713_last, _3513_i)); };
			_3713_last=(_3513_i + 1LL);
		}
	_iter_next_1c61a394a:;
	}
	_iter_end_1c61a394a:;;
	if ((_3713_last < (*(_3349_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>> &__jule_push_dest = _3413_parts; __jule_push_dest.push((*(_3349_tokens)).slice(_3713_last)); };
	} else {
		_1c11500d3_pushErr(_self_, (*(_3349_tokens))[(_3713_last - 1LL)], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _3413_parts;;
}



inline jule::Bool _1c1150820_evalDirectiveIdent(_1c114ea83_directiveEval* _self_, jule::Str _6433_ident) {
	if ((_6433_ident).empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c61a7311:;
		if (it != expr_end) {
			jule::Str *_6816_var = it;
			{
				if (((*(_6816_var)) == _6433_ident)) {
					return true;;
				};
			}
			_iter_next_1c61a7311:;
			++it;
			goto _iter_begin_1c61a7311;
		}
		_iter_end_1c61a7311:;
	};
	return false;;
}



inline jule::Bool _1c1150b61_evalDirectivePart(_1c114ea83_directiveEval* _self_, jule::Slice<jule::Ptr<_1c0c49480_Token>> _7840_part) {
	jule::Bool _799_logicalNot = ((*(_7840_part[0LL]))._field_Id == static_cast<jule::U64>(68LLU));;
	if (_799_logicalNot) {
		(_7840_part).mut_slice(1LL);;
	};
	if ((_7840_part.len() > 1LL)) {
		_1c11500d3_pushErr(_self_, _7840_part[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _8913_result = _1c1150820_evalDirectiveIdent(_self_, (*(_7840_part[0LL]))._field_Kind);;
	if (_799_logicalNot) {
		_8913_result=(!(_8913_result));
	};
	return _8913_result;;
}



inline jule::Bool _1c1150de7_eval(_1c114ea83_directiveEval* _self_) {
	if (((*((*(_self_))._field_d))._field_Args.len() == 0LL)) {
		_1c11500d3_pushErr(_self_, (*(*(_self_))._field_d.alloc)._field_Tag, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _10213_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>> _10413_logicalOrParts = _1c11504ce_splitOperans(_self_, static_cast<jule::U64>(55LLU), &((*(*(_self_))._field_d.alloc)._field_Args));;
	if ((_10413_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_10413_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c61aca31:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c0c49480_Token>> _10921_part = *it;
			{
				jule::Bool _11017_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>> _11117_logicalAndParts = _1c11504ce_splitOperans(_self_, static_cast<jule::U64>(54LLU), &(_10921_part));;
				if ((_11117_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_11117_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c61ae291:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_1c0c49480_Token>> _11625_andPart = *it;
						{
							jule::Ptr<_1c0c49480_Token> _11717_first = _11625_andPart[0LL];;
							if (((*(_11717_first))._field_Id == static_cast<jule::U64>(74LLU))) {
								jule::Ptr<_1c0c49480_Token> _11921_end = _11625_andPart[(_11625_andPart.len() - 1LL)];;
								if (((*(_11921_end))._field_Id != static_cast<jule::U64>(75LLU))) {
									_1c11500d3_pushErr(_self_, _11717_first, jule::Str::lit("parentheses waiting to close", 28), jule::Slice<jule::Any>());
									return false;;
								};
								(_11625_andPart).mut_slice(1LL, (_11625_andPart.len() - 1LL));;
							};
							_11017_and=(_11017_and && _1c1150b61_evalDirectivePart(_self_, _11625_andPart));
						}
						_iter_next_1c61ae291:;
						++it;
						goto _iter_begin_1c61ae291;
					}
					_iter_end_1c61ae291:;
				};
				_10213_result=(_10213_result || _11017_and);
			}
			_iter_next_1c61aca31:;
			++it;
			goto _iter_begin_1c61aca31;
		}
		_iter_end_1c61aca31:;
	};
	return _10213_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c114ea83_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c198694c_JuleImporter> static__1c1986d48_New(_1c114d5a9_CompileInfo _5819_info) {
	jule::Ptr<_1c198694c_JuleImporter> _5913_imp = jule::new_ptr<_1c198694c_JuleImporter>(_1c198694c_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_21b989ce0_PathStdlib}), });;
	_1c114de39_initVars(&((*(_5913_imp))._field_vars), &(_5819_info));
	return _5913_imp;;
}



inline jule::Slice<jule::Ptr<_1c0d09782_ImportInfo>> _1c19870ce_AllPackages(_1c198694c_JuleImporter* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1c198751e_SetModPath(_1c198694c_JuleImporter* _self_, jule::Str _7529_path) {
	(*(_self_))._field_mod=_7529_path;
}



inline jule::Str _1c19877a5_GetModPath(_1c198694c_JuleImporter* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1c1987ae6_ModById(_1c198694c_JuleImporter* _self_, jule::I64 _8322_id) {
	return (*(_self_))._field_mods[_8322_id];;
}



inline jule::Ptr<_1c0d09782_ImportInfo> _1c1987e37_GetImport(_1c198694c_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c61b58d5:;
		if (it != expr_end) {
			jule::Ptr<_1c0d09782_ImportInfo> _8821_p = *it;
			{
				if (((*(_8821_p))._field_Path == _8728_path)) {
					return _8821_p;;
				};
			}
			_iter_next_1c61b58d5:;
			++it;
			goto _iter_begin_1c61b58d5;
		}
		_iter_end_1c61b58d5:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1c0c5ca26_Ast__jule_tuple_s_21b8c54de_Log _1c1988333_ImportPackage(_1c198694c_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	__jule_tuple_sx_1c0c5ca26_Ast__jule_tuple_s_21b8c54de_Log __jule_func_result;
	jule::Slice<jule::Ptr<_234b095c8_DirEntry>> _9713_dirents = ({
		auto except = static__21b8768ad_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = jule::Slice<_21b8c54de_Log>::make({_1c1986463_flatCompilerErr((jule::Str::lit("connot read package directory: ", 31) + _9632_path))});
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_234b095c8_DirEntry>>(nullptr);});
	});;
	if (_9643_update_mod) {
		jule::Str _10213_newMod = _1c0d2752a_FindModuleFileDeep(_9632_path);;
		if ((_10213_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_10213_newMod;
			jule::Slice<_21b8c54de_Log> _10521_errs = _1c0d277e4_CheckModuleFile(&((*(_self_))._field_mod));;
			if ((_10521_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _10521_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1c0c5ca26_Ast>> _11213_asts = jule::Slice<jule::Ptr<_1c0c5ca26_Ast>>::alloc(0LL, _9713_dirents.len());;
	{
		auto expr = &(_9713_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c61b7035:;
		if (it != expr_end) {
			jule::Ptr<_234b095c8_DirEntry> _11316_dirent = *it;
			{
				if ((_234b0d06b_IsDir((*(_11316_dirent))._field_Stat.ptr()) || (!(_21b86a9a1_HasSuffix((*_11316_dirent.alloc)._field_Name, jule::Str::lit(".jule", 5)))))) {
					goto _iter_next_1c61b7035;
				};
				jule::Str _11913__path = _21b8752c4_Join(jule::Slice<jule::Str>::make({_9632_path,(*_11316_dirent.alloc)._field_Name}));;
				jule::Ptr<_1c0c4ec16_File> _12017_file = _1c0c510e1_NewFileSet(_11913__path);;
				_1c0c50134_Fill(_12017_file.ptr(), _1c1986155_readBuff((*_12017_file.alloc)._field_Path));
				jule::Slice<_21b8c54de_Log> _12217_errors = _1c0c5c5c5_Lex(_12017_file, static_cast<jule::I64>(0LL));;
				if ((_12217_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12217_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1c1905ec6_FileInfo> _12717_finfo = _1c194e7d3_ParseFile(_12017_file);;
				if (((*(_12717_finfo))._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = (*_12717_finfo.alloc)._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1c114c641_isPassFileAnnotation((*_11316_dirent.alloc)._field_Name)))) {
					goto _iter_next_1c61b7035;
				};
				jule::Bool _13713_r;
				jule::Slice<_21b8c54de_Log> _13720_logs;
				({
					__jule_tuple_bool__jule_tuple_s_21b8c54de_Log __jule_assign_result = _1c1988a1a_isPassBuildDirectives(_self_, &((*_12717_finfo.alloc)._field_Ast));
					_13713_r = __jule_assign_result.__jule_result_arg0;
					_13720_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13720_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13720_logs;
					return __jule_func_result;;
				};
				if ((!(_13713_r))) {
					goto _iter_next_1c61b7035;
				};
				{ jule::Slice<jule::Ptr<_1c0c5ca26_Ast>> &__jule_push_dest = _11213_asts; __jule_push_dest.push((*_12717_finfo.alloc)._field_Ast); };
			}
			_iter_next_1c61b7035:;
			++it;
			goto _iter_begin_1c61b7035;
		}
		_iter_end_1c61b7035:;
	};
	__jule_func_result.__jule_result_arg0 = _11213_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1c19885db_Imported(_1c198694c_JuleImporter* _self_, jule::Ptr<_1c0d09782_ImportInfo> _15331_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c61b9bd6:;
		if (it != expr_end) {
			jule::Ptr<_1c0d09782_ImportInfo> _15516_p = *it;
			{
				if ((((*(_15516_p))._field_Binded == (*(_15331_imp))._field_Binded) && ((*_15516_p.alloc)._field_LinkPath == (*_15331_imp.alloc)._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1c61b9bd6:;
			++it;
			goto _iter_begin_1c61b9bd6;
		}
		_iter_end_1c61b9bd6:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c61c221b:;
			if (it != expr_end) {
				jule::I64 _16217_i = it - expr->begin();
				jule::Str _16220_mod = *it;
				{
					if (((*(_self_))._field_mod == _16220_mod)) {
						(*_15331_imp.alloc)._field_ModId=_16217_i;
						goto _julec_label_1c61c288c;
					};
				}
				_iter_next_1c61c221b:;
				++it;
				_16217_i++;
				goto _iter_begin_1c61c221b;
			}
			_iter_end_1c61c221b:;
		};
		(*_15331_imp.alloc)._field_ModId=(*(_self_))._field_mods.len();
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_1c61c288c:;
	};
	{ jule::Slice<jule::Ptr<_1c0d09782_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_15331_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_21b8c54de_Log _1c1988a1a_isPassBuildDirectives(_1c198694c_JuleImporter* _self_, jule::Ptr<_1c0c5ca26_Ast>* _17945_file) {
	__jule_tuple_bool__jule_tuple_s_21b8c54de_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*((*(_17945_file))))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c61c52c9:;
		if (it != expr_end) {
			jule::Ptr<_1c0c5dd57_Directive> _18021_td = *it;
			{
				if ((!(*((*(_18021_td))._field_Tag))._field_Kind.equal("build", 5))) {
					goto _iter_next_1c61c52c9;
				};
				_1c114ea83_directiveEval _18417_de = _1c114ea83_directiveEval{._field_d=_18021_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _18813_result = _1c1150de7_eval(&_18417_de);;
				if ((_18417_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _18417_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_18813_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1c61c52c9:;
			++it;
			goto _iter_begin_1c61c52c9;
		}
		_iter_end_1c61c52c9:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c198694c_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c198b9da_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c61ebb08_isCommonOrdered(jule::Slice<jule::Ptr<_1c0c807c4_Struct>> _1834_s, jule::Ptr<_1c0c807c4_Struct> _1842_t) {
	{
		auto expr = &((*(_1842_t))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c61ecd5c:;
		if (it != expr_end) {
			jule::Ptr<_1c0c807c4_Struct> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c61ed5cc:;
					if (it != expr_end) {
						jule::Ptr<_1c0c807c4_Struct> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1c61ed5cc:;
						++it;
						goto _iter_begin_1c61ed5cc;
					}
					_iter_end_1c61ed5cc:;
				};
			}
			_iter_next_1c61ecd5c:;
			++it;
			goto _iter_begin_1c61ecd5c;
		}
		_iter_end_1c61ecd5c:;
	};
	return true;;
}

inline jule::Bool _1c6201a0e_isCommonOrdered(jule::Slice<jule::Ptr<_1c0d4dde2_Var>> _1834_s, jule::Ptr<_1c0d4dde2_Var> _1842_t) {
	{
		auto expr = &((*(_1842_t))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6202c1e:;
		if (it != expr_end) {
			jule::Ptr<_1c0d4dde2_Var> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c620348e:;
					if (it != expr_end) {
						jule::Ptr<_1c0d4dde2_Var> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1c620348e:;
						++it;
						goto _iter_begin_1c620348e;
					}
					_iter_end_1c620348e:;
				};
			}
			_iter_next_1c6202c1e:;
			++it;
			goto _iter_begin_1c6202c1e;
		}
		_iter_end_1c6202c1e:;
	};
	return true;;
}



inline void _1c61e81ed_orderCommon(jule::Slice<jule::Ptr<_1c0c807c4_Struct>>* _3135_s) {
	jule::I64 _3213_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c61e9683:;
		if (it != expr_end) {
			{
				jule::Bool _3417_swapped = false;;
				jule::I64 _3517_k = 0LL;;
				for (; (_3517_k < _3213_n); (_3517_k)++) {
					{
						if ((!(_1c61ebb08_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3517_k])))) {
							std::swap((*(_3135_s))[_3517_k], (*(_3135_s))[(_3517_k + 1LL)]);
							_3417_swapped=true;
						};
					}
				_iter_next_1c61ea222:;
				}
				_iter_end_1c61ea222:;;
				if ((!(_3417_swapped))) {
					goto _iter_end_1c61e9683;
				};
				(_3213_n)--;
			}
			_iter_next_1c61e9683:;
			++it;
			goto _iter_begin_1c61e9683;
		}
		_iter_end_1c61e9683:;
	};
}

inline void _1c61e8ebd_orderCommon(jule::Slice<jule::Ptr<_1c0d4dde2_Var>>* _3135_s) {
	jule::I64 _3213_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c61ee578:;
		if (it != expr_end) {
			{
				jule::Bool _3417_swapped = false;;
				jule::I64 _3517_k = 0LL;;
				for (; (_3517_k < _3213_n); (_3517_k)++) {
					{
						if ((!(_1c6201a0e_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3517_k])))) {
							std::swap((*(_3135_s))[_3517_k], (*(_3135_s))[(_3517_k + 1LL)]);
							_3417_swapped=true;
						};
					}
				_iter_next_1c6200128:;
				}
				_iter_end_1c6200128:;;
				if ((!(_3417_swapped))) {
					goto _iter_end_1c61ee578;
				};
				(_3213_n)--;
			}
			_iter_next_1c61ee578:;
			++it;
			goto _iter_begin_1c61ee578;
		}
		_iter_end_1c61ee578:;
	};
}



inline void static__1c198c645_orderStructures(jule::Slice<jule::Ptr<_1c0c807c4_Struct>>* _5136_structs) {
	_1c61e81ed_orderCommon(_5136_structs);
}



inline void static__1c198c876_orderVars(jule::Slice<jule::Ptr<_1c0d4dde2_Var>>* _5730_vars) {
	_1c61e8ebd_orderCommon(_5730_vars);
}





std::ostream &operator<<(std::ostream &_Stream, _1c198bc71_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c13413c3_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1c13465b5_optimizeChild(jule::Ptr<_1c13460cb_scopeDeadCode> _self_, jule::Ptr<_1c0cd763e_Scope>* _3938_s) {
	jule::Ptr<_1c13460cb_scopeDeadCode> _4013_sdc = jule::new_ptr<_1c13460cb_scopeDeadCode>(_1c13460cb_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_3938_s)), ._field_stmts=(&((*((*(_3938_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, });;
	{
		_1c1348ed0_optimizeStmts(_4013_sdc);
	};
}



inline void _1c134686d_optimizeBodyChildExceptional(jule::Ptr<_1c13460cb_scopeDeadCode> _self_, jule::Ptr<_1c0cd763e_Scope>* _5053_s) {
	jule::Ptr<_1c13460cb_scopeDeadCode> _5113_sdc = jule::new_ptr<_1c13460cb_scopeDeadCode>(_1c13460cb_scopeDeadCode{._field_s=(*(_5053_s)), ._field_stmts=(&((*((*(_5053_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=true});;
	{
		_1c1348ed0_optimizeStmts(_5113_sdc);
	};
}



inline void _1c1346b26_optimizeBodyChild(jule::Ptr<_1c13460cb_scopeDeadCode> _self_, jule::Ptr<_1c0cd763e_Scope>* _6142_s) {
	jule::Ptr<_1c13460cb_scopeDeadCode> _6213_sdc = jule::new_ptr<_1c13460cb_scopeDeadCode>(_1c13460cb_scopeDeadCode{._field_s=(*(_6142_s)), ._field_stmts=(&((*((*(_6142_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, });;
	{
		_1c1348ed0_optimizeStmts(_6213_sdc);
	};
}



inline void _1c1346dce_optimizeExprModel(jule::Ptr<_1c13460cb_scopeDeadCode> _self_, jule::Any* _7142_model) {
	_1c134a366_exprDeadCode _729_edc = static__1c134a9a4_new(&(_self_));;
	_1c13518cd_optimize(&_729_edc, _7142_model);
}



inline void _1c13470cc_eliminateFollowed(_1c13460cb_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		((*((*(_self_))._field_stmts))).mut_slice(0LL, ((*(_self_))._field_i + 1LL));;
	};
	jule::Ptr<_1c13460cb_scopeDeadCode> _8313_parent = (*(_self_))._field_parent;;
	while ((_8313_parent != nullptr)) {
		{
			{
				((*((*(_8313_parent))._field_stmts))).mut_slice(0LL, ((*(_8313_parent))._field_i + 1LL));;
			};
			_8313_parent=(*_8313_parent.alloc)._field_parent;
		}
	_iter_next_1c628db9a:;
	}
	_iter_end_1c628db9a:;;
}



inline void _1c1347385_pushGoto(jule::Ptr<_1c13460cb_scopeDeadCode> _self_, jule::Ptr<_1c0cda3ab_GotoSt> _9232_gt) {
	jule::I64 _9313_i = 0LL;;
	for (; (_9313_i < (*((*(_self_))._field_labels)).len()); (_9313_i)++) {
		{
			if (((*(_9232_gt))._field_Ident == (*((*(*_self_.alloc)._field_labels.alloc)[_9313_i]))._field_Ident)) {
				return;;
			};
		}
	_iter_next_1c62918d4:;
	}
	_iter_end_1c62918d4:;;
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*_self_.alloc)._field_gotos.alloc),jule::Slice<jule::Ptr<_1c0cda3ab_GotoSt>>::make({_9232_gt}));
}



inline void _1c134763d_pushLabel(jule::Ptr<_1c13460cb_scopeDeadCode> _self_, jule::Ptr<_1c0cd9ed2_Label> _10233_l) {
	jule::I64 _10313_i = 0LL;;
	while ((_10313_i < (*((*(_self_))._field_gotos)).len())) {
		{
			if (((*(_10233_l))._field_Ident == (*((*(*_self_.alloc)._field_gotos.alloc)[_10313_i]))._field_Ident)) {
				jule::copy((*((*(_self_))._field_gotos)).slice(_10313_i), (*((*(_self_))._field_gotos)).slice((_10313_i + 1LL)));
				((*((*(_self_))._field_gotos))).mut_slice(0LL, ((*((*(_self_))._field_gotos)).len() - 1LL));;
				goto _iter_next_1c6293ab2;
			};
			(_10313_i)++;
		}
	_iter_next_1c6293ab2:;
	}
	_iter_end_1c6293ab2:;;
	(*((*_self_.alloc)._field_labels))=jule::append((*(*_self_.alloc)._field_labels.alloc),jule::Slice<jule::Ptr<_1c0cd9ed2_Label>>::make({_10233_l}));
}



inline void _1c13478e6_optimizeRangeIter(jule::Ptr<_1c13460cb_scopeDeadCode> _self_, jule::Ptr<_1c0cd9476_RangeIter> _11541_it) {
	_1c1346dce_optimizeExprModel(_self_, &((*((*(_11541_it))._field_Expr))._field_Model));
	_1c1346b26_optimizeBodyChild(_self_, &((*_11541_it.alloc)._field_Scope));
}



inline void _1c1347b9e_optimizeWhileIter(jule::Ptr<_1c13460cb_scopeDeadCode> _self_, jule::Ptr<_1c0cd8a2a_WhileIter> _12041_it) {
	_1c1346dce_optimizeExprModel(_self_, &((*(_12041_it))._field_Expr));
	if (((*_12041_it.alloc)._field_Next != nullptr)) {
		_1c1348cd2_optimizeStmt(_self_, (*_12041_it.alloc)._field_Next);
	};
	_1c1346b26_optimizeBodyChild(_self_, &((*_12041_it.alloc)._field_Scope));
}



inline void _1c1347e57_optimizeInfIter(jule::Ptr<_1c13460cb_scopeDeadCode> _self_, jule::Ptr<_1c0cd8574_InfIter> _12839_it) {
	_1c1346b26_optimizeBodyChild(_self_, &((*(_12839_it))._field_Scope));
}



inline void _1c1348210_optimizeConditional(jule::Ptr<_1c13460cb_scopeDeadCode> _self_, jule::Ptr<_1c0cd8277_Conditional> _13243_c) {
	{
		auto expr = &((*(_13243_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c629aa86:;
		if (it != expr_end) {
			jule::Ptr<_1c0cd7a5c_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_1c1346dce_optimizeExprModel(_self_, &((*_13321_case.alloc)._field_Expr));
					_1c1346b26_optimizeBodyChild(_self_, &((*_13321_case.alloc)._field_Scope));
				};
			}
			_iter_next_1c629aa86:;
			++it;
			goto _iter_begin_1c629aa86;
		}
		_iter_end_1c629aa86:;
	};
	if (((*_13243_c.alloc)._field_Default != nullptr)) {
		if (((*_13243_c.alloc)._field_Elifs.len() == 0LL)) {
			_1c13465b5_optimizeChild(_self_, &((*(*_13243_c.alloc)._field_Default.alloc)._field_Scope));
		} else {
			_1c1346b26_optimizeBodyChild(_self_, &((*(*_13243_c.alloc)._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1c13484b8_optimizeMatch(jule::Ptr<_1c13460cb_scopeDeadCode> _self_, jule::Ptr<_1c0cdb852_Match> _15037_m) {
	{
		auto expr = &((*(_15037_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c629e0b7:;
		if (it != expr_end) {
			jule::Ptr<_1c0cdc37a_Case> _15121_case = *it;
			{
				{
					auto expr = &((*(_15121_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c629ea35:;
					if (it != expr_end) {
						jule::Ptr<_1c0da69e9_Data> _15225_expr = *it;
						{
							_1c1346dce_optimizeExprModel(_self_, &((*(_15225_expr))._field_Model));
						}
						_iter_next_1c629ea35:;
						++it;
						goto _iter_begin_1c629ea35;
					}
					_iter_end_1c629ea35:;
				};
				_1c1346b26_optimizeBodyChild(_self_, &((*_15121_case.alloc)._field_Scope));
			}
			_iter_next_1c629e0b7:;
			++it;
			goto _iter_begin_1c629e0b7;
		}
		_iter_end_1c629e0b7:;
	};
	if (((*_15037_m.alloc)._field_Default != nullptr)) {
		if (((*_15037_m.alloc)._field_Cases.len() == 0LL)) {
			_1c13465b5_optimizeChild(_self_, &((*(*_15037_m.alloc)._field_Default.alloc)._field_Scope));
		} else {
			_1c1346b26_optimizeBodyChild(_self_, &((*(*_15037_m.alloc)._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1c1348771_optimizeAssign(jule::Ptr<_1c13460cb_scopeDeadCode> _self_, jule::Ptr<_1c0cdac3b_Assign> _16838_assign) {
	_1c1346dce_optimizeExprModel(_self_, &((*((*(_16838_assign))._field_Left))._field_Model));
	_1c1346dce_optimizeExprModel(_self_, &((*((*_16838_assign.alloc)._field_Right))._field_Model));
}



inline void _1c1348a29_optimizeMultiAssign(jule::Ptr<_1c13460cb_scopeDeadCode> _self_, jule::Ptr<_1c0cdb1e2_MultiAssign> _17343_assign) {
	{
		auto expr = &((*(_17343_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c62a3dad:;
		if (it != expr_end) {
			jule::Ptr<_1c0da69e9_Data> _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_1c1346dce_optimizeExprModel(_self_, &((*_17421_l.alloc)._field_Model));
				};
			}
			_iter_next_1c62a3dad:;
			++it;
			goto _iter_begin_1c62a3dad;
		}
		_iter_end_1c62a3dad:;
	};
	_1c1346dce_optimizeExprModel(_self_, &((*_17343_assign.alloc)._field_Right));
}



inline void _1c1348cd2_optimizeStmt(jule::Ptr<_1c13460cb_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1c62a5a2a:;
			{
				jule::Ptr<_1c0cd763e_Scope> _18517_scope = _18236_st.unsafe_cast_ptr<_1c0cd763e_Scope>();;
				if ((*(_18517_scope))._field_Deferred) {
					_1c1349310_eliminateDeadCodeOfScope(_18517_scope);
				} else {
					_1c13465b5_optimizeChild(_self_, &(_18517_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1c62a5794:;
			{
				_1c13478e6_optimizeRangeIter(_self_, _18236_st.unsafe_cast_ptr<_1c0cd9476_RangeIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1c62a5aa2:;
			{
				_1c1347b9e_optimizeWhileIter(_self_, _18236_st.unsafe_cast_ptr<_1c0cd8a2a_WhileIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1c62a5b18:;
			{
				_1c1347e57_optimizeInfIter(_self_, _18236_st.unsafe_cast_ptr<_1c0cd8574_InfIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1c62a5b90:;
			{
				_1c1348210_optimizeConditional(_self_, _18236_st.unsafe_cast_ptr<_1c0cd8277_Conditional>());
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1c62a5c17:;
			{
				_1c13484b8_optimizeMatch(_self_, _18236_st.unsafe_cast_ptr<_1c0cdb852_Match>());
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1c62a5c8e:;
			{
				_1c1348771_optimizeAssign(_self_, _18236_st.unsafe_cast_ptr<_1c0cdac3b_Assign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1c62a5d16:;
			{
				_1c1348a29_optimizeMultiAssign(_self_, _18236_st.unsafe_cast_ptr<_1c0cdb1e2_MultiAssign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1c62a5d8d:;
			{
				jule::Ptr<_1c0da69e9_Data> _20617_d = _18236_st.unsafe_cast_ptr<_1c0da69e9_Data>();;
				if ((*(_self_))._field_except) {
					goto _match_end_1c62a58d7;
				};
				{
					auto &_match_expr{ (*(_20617_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type22 || _match_expr.type == &__jule_any_type28) {
						_case_begin_1c62ab789:;
						{
							_1c13470cc_eliminateFollowed(_self_);
						}
					}
					else {
						_case_begin_1c62abe2c:;
						{
							_1c1346dce_optimizeExprModel(_self_, &((*(_20617_d))._field_Model));
						}
					}
					_match_end_1c62abdc7:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1c62a5e15:;
			{
				_1c13470cc_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1c62a5e8c:;
			{
				_1c1347385_pushGoto(_self_, _18236_st.unsafe_cast_ptr<_1c0cda3ab_GotoSt>());
				_1c13470cc_eliminateFollowed(_self_);
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1c62a6014:;
			{
				_1c134763d_pushLabel(_self_, _18236_st.unsafe_cast_ptr<_1c0cd9ed2_Label>());
			}
		}
		_match_end_1c62a58d7:;
	};
}



inline void _1c1348ed0_optimizeStmts(jule::Ptr<_1c13460cb_scopeDeadCode> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_stmts)).len()); ((*_self_.alloc)._field_i)++) {
		{
			_1c1348cd2_optimizeStmt(_self_, (*((*_self_.alloc)._field_stmts))[(*_self_.alloc)._field_i]);
		}
	_iter_next_1c62ae825:;
	}
	_iter_end_1c62ae825:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c13460cb_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _1c134a366_exprDeadCode static__1c134a9a4_new(jule::Ptr<_1c13460cb_scopeDeadCode>* _4824_s) {
	return _1c134a366_exprDeadCode{._field_s=(*(_4824_s))};;
}



inline void _1c134ac5c_binary(_1c134a366_exprDeadCode* _self_, jule::Ptr<_1c0c87952_BinaryExprModel> _5425_m) {
	_1c13518cd_optimize(_self_, &((*((*(_5425_m))._field_Left))._field_Model));
	_1c13518cd_optimize(_self_, &((*((*_5425_m.alloc)._field_Right))._field_Model));
}



inline void _1c134b015_unary(_1c134a366_exprDeadCode* _self_, jule::Ptr<_1c0c87d2b_UnaryExprModel> _5924_m) {
	_1c13518cd_optimize(_self_, &((*((*(_5924_m))._field_Expr))._field_Model));
}



inline void _1c134b2bd_structureLit(_1c134a366_exprDeadCode* _self_, jule::Ptr<_1c0c88700_StructLitExprModel> _6331_m) {
	{
		auto expr = &((*(_6331_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c62b3186:;
		if (it != expr_end) {
			jule::Ptr<_1c0c88359_StructArgExprModel> _6421_arg = *it;
			{
				_1c13518cd_optimize(_self_, &((*((*(_6421_arg))._field_Expr))._field_Model));
			}
			_iter_next_1c62b3186:;
			++it;
			goto _iter_begin_1c62b3186;
		}
		_iter_end_1c62b3186:;
	};
}



inline void _1c134b576_allocStructure(_1c134a366_exprDeadCode* _self_, jule::Ptr<_1c0c889ec_AllocStructLitExprModel> _6933_m) {
	_1c134b2bd_structureLit(_self_, (*(_6933_m))._field_Lit);
}



inline void _1c134b82e_casting(_1c134a366_exprDeadCode* _self_, jule::Ptr<_1c0c89080_CastingExprModel> _7326_m) {
	_1c13518cd_optimize(_self_, &((*((*(_7326_m))._field_Expr))._field_Model));
}



inline void _1c134bad7_args(_1c134a366_exprDeadCode* _self_, jule::Slice<jule::Any>* _7724_args) {
	{
		auto expr = _7724_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c62b5782:;
		if (it != expr_end) {
			jule::Any _7821_arg = *it;
			{
				_1c13518cd_optimize(_self_, &(_7821_arg));
			}
			_iter_next_1c62b5782:;
			++it;
			goto _iter_begin_1c62b5782;
		}
		_iter_end_1c62b5782:;
	};
}



inline void _1c134bd90_funcCall(_1c134a366_exprDeadCode* _self_, jule::Ptr<_1c0c89932_FnCallExprModel> _8327_m) {
	_1c13518cd_optimize(_self_, &((*(_8327_m))._field_Expr));
	_1c134bad7_args(_self_, &((*_8327_m.alloc)._field_Args));
	if (((*_8327_m.alloc)._field_Except != nullptr)) {
		_1c134686d_optimizeBodyChildExceptional((*(_self_))._field_s, &((*_8327_m.alloc)._field_Except));
	};
}



inline void _1c134c148_slice(_1c134a366_exprDeadCode* _self_, jule::Ptr<_1c0c89d0b_SliceExprModel> _9124_m) {
	_1c134bad7_args(_self_, &((*(_9124_m))._field_Elems));
}



inline void _1c134c401_array(_1c134a366_exprDeadCode* _self_, jule::Ptr<_1c0c8cd20_ArrayExprModel> _9524_m) {
	if ((((*(_9524_m))._field_Elems.len() == 2LL) && ((*_9524_m.alloc)._field_Elems[1LL] == nullptr))) {
		_1c13518cd_optimize(_self_, &((*_9524_m.alloc)._field_Elems[0LL]));
	};
	_1c134bad7_args(_self_, &((*_9524_m.alloc)._field_Elems));
}



inline void _1c134c6a9_indexing(_1c134a366_exprDeadCode* _self_, jule::Ptr<_1c0c8a2b2_IndexingExprModel> _10227_m) {
	_1c13518cd_optimize(_self_, &((*((*(_10227_m))._field_Expr))._field_Model));
	_1c13518cd_optimize(_self_, &((*((*_10227_m.alloc)._field_Index))._field_Model));
}



inline void _1c134c962_anonFunc(_1c134a366_exprDeadCode* _self_, jule::Ptr<_1c0c8a768_AnonFnExprModel> _10727_m) {
	_1c1349310_eliminateDeadCodeOfScope((*((*(_10727_m))._field_Func))._field_Scope);
}



inline void _1c134cc1a_mapExpr(_1c134a366_exprDeadCode* _self_, jule::Ptr<_1c0c8b0e8_MapExprModel> _11126_m) {
	{
		auto expr = &((*(_11126_m))._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c62bb568:;
		if (it != expr_end) {
			jule::Ptr<_1c0c8ab42_KeyValPairExprModel> _11221_pair = *it;
			{
				_1c13518cd_optimize(_self_, &((*(_11221_pair))._field_Key));
				_1c13518cd_optimize(_self_, &((*_11221_pair.alloc)._field_Val));
			}
			_iter_next_1c62bb568:;
			++it;
			goto _iter_begin_1c62bb568;
		}
		_iter_end_1c62bb568:;
	};
}



inline void _1c134cec3_slicing(_1c134a366_exprDeadCode* _self_, jule::Ptr<_1c0c8b67b_SlicingExprModel> _11826_m) {
	_1c13518cd_optimize(_self_, &((*(_11826_m))._field_Expr));
	_1c13518cd_optimize(_self_, &((*_11826_m.alloc)._field_Left));
	if (((*_11826_m.alloc)._field_Right != nullptr)) {
		_1c13518cd_optimize(_self_, &((*_11826_m.alloc)._field_Right));
	};
}



inline void _1c134d27b_traitSub(_1c134a366_exprDeadCode* _self_, jule::Ptr<_1c0c8bc0e_TraitSubIdentExprModel> _12627_m) {
	_1c13518cd_optimize(_self_, &((*(_12627_m))._field_Expr));
}



inline void _1c134d534_structureSub(_1c134a366_exprDeadCode* _self_, jule::Ptr<_1c0c8c5a0_StructSubIdentExprModel> _13031_m) {
	_1c13518cd_optimize(_self_, &((*((*(_13031_m))._field_Expr))._field_Model));
}



inline void _1c134d7dc_tuple(_1c134a366_exprDeadCode* _self_, jule::Ptr<_1c0c8d11c_TupleExprModel> _13424_m) {
	{
		auto expr = &((*(_13424_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c62c0da8:;
		if (it != expr_end) {
			jule::Ptr<_1c0da69e9_Data> _13521_d = *it;
			{
				_1c13518cd_optimize(_self_, &((*(_13521_d))._field_Model));
			}
			_iter_next_1c62c0da8:;
			++it;
			goto _iter_begin_1c62c0da8;
		}
		_iter_end_1c62c0da8:;
	};
}



inline void _1c134da95_newCall(_1c134a366_exprDeadCode* _self_, jule::Ptr<_1c0c8dc99_BuiltinNewCallExprModel> _14026_m) {
	if (((*(_14026_m))._field_Init != nullptr)) {
		_1c13518cd_optimize(_self_, &((*_14026_m.alloc)._field_Init));
	};
}



inline void _1c134dd4d_outCall(_1c134a366_exprDeadCode* _self_, jule::Ptr<_1c0c8d4e6_BuiltinOutCallExprModel> _14626_m) {
	_1c13518cd_optimize(_self_, &((*(_14626_m))._field_Expr));
}



inline void _1c134e106_outlnCall(_1c134a366_exprDeadCode* _self_, jule::Ptr<_1c0c8d8c0_BuiltinOutlnCallExprModel> _15028_m) {
	_1c13518cd_optimize(_self_, &((*(_15028_m))._field_Expr));
}



inline void _1c134e3ae_panicCall(_1c134a366_exprDeadCode* _self_, jule::Ptr<_1c0c8e173_BuiltinPanicCallExprModel> _15428_m) {
	_1c13518cd_optimize(_self_, &((*(_15428_m))._field_Expr));
}



inline void _1c134e667_assertCall(_1c134a366_exprDeadCode* _self_, jule::Ptr<_1c0c8e629_BuiltinAssertCallExprModel> _15829_m) {
	_1c13518cd_optimize(_self_, &((*(_15829_m))._field_Expr));
}



inline void _1c134e920_errorCall(_1c134a366_exprDeadCode* _self_, jule::Ptr<_1c0c91230_BuiltinErrorCallExprModel> _16228_m) {
	_1c13518cd_optimize(_self_, &((*((*(_16228_m))._field_Err))._field_Model));
}



inline void _1c134ebc8_makeCall(_1c134a366_exprDeadCode* _self_, jule::Ptr<_1c0c8ead0_BuiltinMakeCallExprModel> _16627_m) {
	if (((*(_16627_m))._field_Len != nullptr)) {
		_1c13518cd_optimize(_self_, &((*_16627_m.alloc)._field_Len));
	};
	if (((*_16627_m.alloc)._field_Cap != nullptr)) {
		_1c13518cd_optimize(_self_, &((*_16627_m.alloc)._field_Cap));
	};
}



inline void _1c134ee81_appendCall(_1c134a366_exprDeadCode* _self_, jule::Ptr<_1c0c8eea9_BuiltinAppendCallExprModel> _17529_m) {
	_1c13518cd_optimize(_self_, &((*(_17529_m))._field_Dest));
	_1c13518cd_optimize(_self_, &((*_17529_m.alloc)._field_Elements));
}



inline void _1c1350239_lenCall(_1c134a366_exprDeadCode* _self_, jule::Ptr<_1c0c902a6_BuiltinLenCallExprModel> _18026_m) {
	_1c13518cd_optimize(_self_, &((*((*(_18026_m))._field_Expr))._field_Model));
}



inline void _1c13504e2_capCall(_1c134a366_exprDeadCode* _self_, jule::Ptr<_1c0c905a3_BuiltinCapCallExprModel> _18426_m) {
	_1c13518cd_optimize(_self_, &((*((*(_18426_m))._field_Expr))._field_Model));
}



inline void _1c135079a_deleteCall(_1c134a366_exprDeadCode* _self_, jule::Ptr<_1c0c9097c_BuiltinDeleteCallExprModel> _18829_m) {
	_1c13518cd_optimize(_self_, &((*((*(_18829_m))._field_Dest))._field_Model));
	if (((*_18829_m.alloc)._field_Key != nullptr)) {
		_1c13518cd_optimize(_self_, &((*(*_18829_m.alloc)._field_Key.alloc)._field_Model));
	};
}



inline void _1c1350a53_sizeof(_1c134a366_exprDeadCode* _self_, jule::Ptr<_1c0c918d4_SizeofExprModel> _19525_m) {
	_1c13518cd_optimize(_self_, &((*(_19525_m))._field_Expr));
}



inline void _1c1350d0b_alignof(_1c134a366_exprDeadCode* _self_, jule::Ptr<_1c0c91ac1_AlignofExprModel> _19926_m) {
	_1c13518cd_optimize(_self_, &((*(_19926_m))._field_Expr));
}



inline void _1c13510b4_integratedToStr(_1c134a366_exprDeadCode* _self_, jule::Ptr<_1c0c92165_IntegratedToStrExprModel> _20334_m) {
	_1c13518cd_optimize(_self_, &((*(_20334_m))._field_Expr));
}



inline void _1c135136c_free(_1c134a366_exprDeadCode* _self_, jule::Ptr<_1c0c9283b_FreeExprModel> _20723_m) {
	_1c13518cd_optimize(_self_, &((*(_20723_m))._field_Expr));
}



inline void _1c1351625_backendEmit(_1c134a366_exprDeadCode* _self_, jule::Ptr<_1c0c9253e_BackendEmitExprModel> _21130_m) {
	_1c134bad7_args(_self_, &((*(_21130_m))._field_Exprs));
}



inline void _1c13518cd_optimize(_1c134a366_exprDeadCode* _self_, jule::Any* _21528_model) {
	{
		auto &_match_expr{ (*(_21528_model)) };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1c62ce191:;
			{
				_1c134ac5c_binary(_self_, (*(_21528_model)).cast_ptr<_1c0c87952_BinaryExprModel>(&__jule_any_type111));
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1c62cdca6:;
			{
				_1c134b015_unary(_self_, (*(_21528_model)).cast_ptr<_1c0c87d2b_UnaryExprModel>(&__jule_any_type110));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1c62ce218:;
			{
				_1c134b2bd_structureLit(_self_, (*(_21528_model)).cast_ptr<_1c0c88700_StructLitExprModel>(&__jule_any_type95));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1c62ce27e:;
			{
				_1c134b576_allocStructure(_self_, (*(_21528_model)).cast_ptr<_1c0c889ec_AllocStructLitExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1c62ce306:;
			{
				_1c134b82e_casting(_self_, (*(_21528_model)).cast_ptr<_1c0c89080_CastingExprModel>(&__jule_any_type93));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1c62ce37d:;
			{
				_1c134bd90_funcCall(_self_, (*(_21528_model)).cast_ptr<_1c0c89932_FnCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1c62ce405:;
			{
				_1c134c148_slice(_self_, (*(_21528_model)).cast_ptr<_1c0c89d0b_SliceExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1c62ce47c:;
			{
				_1c134c401_array(_self_, (*(_21528_model)).cast_ptr<_1c0c8cd20_ArrayExprModel>(&__jule_any_type85));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1c62ce504:;
			{
				_1c134c6a9_indexing(_self_, (*(_21528_model)).cast_ptr<_1c0c8a2b2_IndexingExprModel>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1c62ce57b:;
			{
				_1c134c962_anonFunc(_self_, (*(_21528_model)).cast_ptr<_1c0c8a768_AnonFnExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1c62ce603:;
			{
				_1c134cc1a_mapExpr(_self_, (*(_21528_model)).cast_ptr<_1c0c8b0e8_MapExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1c62ce67a:;
			{
				_1c134cec3_slicing(_self_, (*(_21528_model)).cast_ptr<_1c0c8b67b_SlicingExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1c62ce702:;
			{
				_1c134d27b_traitSub(_self_, (*(_21528_model)).cast_ptr<_1c0c8bc0e_TraitSubIdentExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1c62ce779:;
			{
				_1c134d534_structureSub(_self_, (*(_21528_model)).cast_ptr<_1c0c8c5a0_StructSubIdentExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1c62ce801:;
			{
				_1c134d7dc_tuple(_self_, (*(_21528_model)).cast_ptr<_1c0c8d11c_TupleExprModel>(&__jule_any_type81));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1c62ce878:;
			{
				_1c134dd4d_outCall(_self_, (*(_21528_model)).cast_ptr<_1c0c8d4e6_BuiltinOutCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1c62ce900:;
			{
				_1c134e106_outlnCall(_self_, (*(_21528_model)).cast_ptr<_1c0c8d8c0_BuiltinOutlnCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1c62ce977:;
			{
				_1c134da95_newCall(_self_, (*(_21528_model)).cast_ptr<_1c0c8dc99_BuiltinNewCallExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1c62ce9ee:;
			{
				_1c134e3ae_panicCall(_self_, (*(_21528_model)).cast_ptr<_1c0c8e173_BuiltinPanicCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1c62cea76:;
			{
				_1c134e667_assertCall(_self_, (*(_21528_model)).cast_ptr<_1c0c8e629_BuiltinAssertCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1c62ceaed:;
			{
				_1c134e920_errorCall(_self_, (*(_21528_model)).cast_ptr<_1c0c91230_BuiltinErrorCallExprModel>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1c62ceb75:;
			{
				_1c134ebc8_makeCall(_self_, (*(_21528_model)).cast_ptr<_1c0c8ead0_BuiltinMakeCallExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1c62cebec:;
			{
				_1c134ee81_appendCall(_self_, (*(_21528_model)).cast_ptr<_1c0c8eea9_BuiltinAppendCallExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1c62cec74:;
			{
				_1c1350239_lenCall(_self_, (*(_21528_model)).cast_ptr<_1c0c902a6_BuiltinLenCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1c62ceceb:;
			{
				_1c13504e2_capCall(_self_, (*(_21528_model)).cast_ptr<_1c0c905a3_BuiltinCapCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1c62ced73:;
			{
				_1c135079a_deleteCall(_self_, (*(_21528_model)).cast_ptr<_1c0c9097c_BuiltinDeleteCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1c62cedea:;
			{
				_1c1350a53_sizeof(_self_, (*(_21528_model)).cast_ptr<_1c0c918d4_SizeofExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1c62cee72:;
			{
				_1c1350d0b_alignof(_self_, (*(_21528_model)).cast_ptr<_1c0c91ac1_AlignofExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1c62ceee9:;
			{
				_1c13510b4_integratedToStr(_self_, (*(_21528_model)).cast_ptr<_1c0c92165_IntegratedToStrExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1c62d0071:;
			{
				_1c135136c_free(_self_, (*(_21528_model)).cast_ptr<_1c0c9283b_FreeExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1c62d00e8:;
			{
				_1c1351625_backendEmit(_self_, (*(_21528_model)).cast_ptr<_1c0c9253e_BackendEmitExprModel>(&__jule_any_type24));
			}
		}
		_match_end_1c62cdde9:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c134a366_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0ed9d3b_ExceptionalForwardingExprModel _Src) {
	_Stream << "ExceptionalForwardingExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0eda1b0_SwapExprModel _Src) {
	_Stream << "SwapExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0eda589_EmptyCompareExprModel _Src) {
	_Stream << "EmptyCompareExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Neg:" << _Src._field_Neg;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0eda90d_RefExprModel _Src) {
	_Stream << "RefExprModel{";
	_Stream << "Var:" << _Src._field_Var;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0edad81_StrCompExprModel _Src) {
	_Stream << "StrCompExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "NotEq:" << _Src._field_NotEq;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0edb414_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0edb711_UnsafeBinaryExprModel _Src) {
	_Stream << "UnsafeBinaryExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0edba96_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0edbe70_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0edc349_AppendToSliceExprModel _Src) {
	_Stream << "AppendToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Slice:" << _Src._field_Slice;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0edc723_StrRuneIter _Src) {
	_Stream << "StrRuneIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Base:" << _Src._field_Base;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0edca20_UnsafeDerefExprModel _Src) {
	_Stream << "UnsafeDerefExprModel{";
	_Stream << "Base:" << _Src._field_Base;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0edcd1c_UnsafeCastingExprModel _Src) {
	_Stream << "UnsafeCastingExprModel{";
	_Stream << "Base:" << _Src._field_Base;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0edd9ee_nilVar _Src) {
	_Stream << "nilVar{";
	_Stream << "var:" << _Src._field_var << ", ";
	_Stream << "safe:" << _Src._field_safe;
	_Stream << "}";
	return _Stream;
}



inline void _1c0ede2a2_pushVar(_1c0eddd40_nils* _self_, jule::Uintptr _2926_var, jule::Bool _2940_safe) {
	if (((!(_1c100b764_Access)) || (_2926_var == 0LLU))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c634b5e8:;
		if (it != expr_end) {
			_1c0edd9ee_nilVar _3421_v = *it;
			{
				if ((_3421_v._field_var == _2926_var)) {
					_3421_v._field_safe=_2940_safe;
					return;;
				};
			}
			_iter_next_1c634b5e8:;
			++it;
			goto _iter_begin_1c634b5e8;
		}
		_iter_end_1c634b5e8:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c634bede:;
		if (it != expr_end) {
			_1c0edd9ee_nilVar _4121_v = *it;
			{
				if ((_4121_v._field_var == 0LLU)) {
					_4121_v._field_var=_2926_var;
					_4121_v._field_safe=_2940_safe;
					return;;
				};
			}
			_iter_next_1c634bede:;
			++it;
			goto _iter_begin_1c634bede;
		}
		_iter_end_1c634bede:;
	};
	{ jule::Slice<_1c0edd9ee_nilVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1c0edd9ee_nilVar{._field_var=_2926_var, ._field_safe=_2940_safe}); };
}



inline jule::Bool _1c0ede5e3_removeVar(_1c0eddd40_nils* _self_, jule::Uintptr _5228_var) {
	if ((_5228_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c634dcd2:;
			if (it != expr_end) {
				_1c0edd9ee_nilVar _5425_v = *it;
				{
					if ((_5425_v._field_var == _5228_var)) {
						_5425_v._field_var=0LLU;
						_5425_v._field_safe=false;
						return true;;
					};
				}
				_iter_next_1c634dcd2:;
				++it;
				goto _iter_begin_1c634dcd2;
			}
			_iter_end_1c634dcd2:;
		};
	};
	return false;;
}



inline jule::Bool _1c0ede934_isSafe(_1c0eddd40_nils* _self_, jule::Uintptr _6625_var) {
	if ((_6625_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c6350443:;
			if (it != expr_end) {
				_1c0edd9ee_nilVar _6820_v = *it;
				{
					if ((_6820_v._field_var == _6625_var)) {
						return _6820_v._field_safe;;
					};
				}
				_iter_next_1c6350443:;
				++it;
				goto _iter_begin_1c6350443;
			}
			_iter_end_1c6350443:;
		};
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0eddd40_nils _Src) {
	_Stream << "nils{";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c0ee1abd_scopeOptimizer> static__1c0ee2140_new(jule::Ptr<_1c0cd763e_Scope> _5023_scope) {
	jule::Ptr<_1c0ee1abd_scopeOptimizer> _5113_sc = jule::new_ptr<_1c0ee1abd_scopeOptimizer>(_1c0ee1abd_scopeOptimizer{._field_scope=_5023_scope, ._field_data=jule::new_ptr<_1c1006572_data>(_1c1006572_data{._field_boundary=jule::new_ptr<_1c1007e69_boundary>(), ._field_nils=jule::new_ptr<_1c0eddd40_nils>(), ._field_dynamic=jule::new_ptr<_1c1003629_dynamic>()})});;
	return _5113_sc;;
}



inline void _1c0ee23e8_setCurrentStmt(jule::Ptr<_1c0ee1abd_scopeOptimizer> _self_, jule::Any _6238_stmt) {
	(*((*(_self_))._field_scope))._field_Stmts[(*_self_.alloc)._field_i]=(*(((jule::Any*)((&(_6238_stmt))))));
}



inline void _1c0ee25e6_removeCurrent(jule::Ptr<_1c0ee1abd_scopeOptimizer> _self_) {
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts.slice(0LL, (*_self_.alloc)._field_i),(*(*_self_.alloc)._field_scope.alloc)._field_Stmts.slice(((*_self_.alloc)._field_i + 1LL)));
}



inline jule::Bool _1c0ee287c_isLastStmt(jule::Ptr<_1c0ee1abd_scopeOptimizer> _self_) {
	jule::Ptr<_1c0ee1abd_scopeOptimizer> _7213_r = _self_;;
	for (; (_7213_r != nullptr); _7213_r=(*_7213_r.alloc)._field_parent) {
		{
			if ((((*((*_7213_r.alloc)._field_scope))._field_Stmts.len() - (*_7213_r.alloc)._field_i) != 1LL)) {
				return false;;
			};
		}
	_iter_next_1c635ec38:;
	}
	_iter_end_1c635ec38:;;
	return true;;
}



inline jule::Bool _1c0ee2b13_isIter(jule::Ptr<_1c0ee1abd_scopeOptimizer> _self_) {
	jule::Ptr<_1c0ee1abd_scopeOptimizer> _8213_r = (*(_self_))._field_parent;;
	for (; (_8213_r != nullptr); _8213_r=(*_8213_r.alloc)._field_parent) {
		{
			{
				auto &_match_expr{ (*((*(_8213_r))._field_scope))._field_Stmts[(*(_8213_r))._field_i] };
				
				if (_match_expr.type == &__jule_any_type39 || _match_expr.type == &__jule_any_type37 || _match_expr.type == &__jule_any_type35) {
					_case_begin_1c6362499:;
					{
						return true;;
					}
				}
				_match_end_1c6362411:;
			};
		}
	_iter_next_1c63614cb:;
	}
	_iter_end_1c63614cb:;;
	return false;;
}



inline void _1c0ee2dbb_optimizeData(jule::Ptr<_1c0ee1abd_scopeOptimizer> _self_, jule::Ptr<_1c0da69e9_Data> _9436_d) {
	{
		auto &_match_expr{ (*(_9436_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1c6363643:;
			{
				jule::Ptr<_1c0c89932_FnCallExprModel> _9717_m = (*(_9436_d))._field_Model.unsafe_cast_ptr<_1c0c89932_FnCallExprModel>();;
				if (_2336c522d_Production) {
					if (((!(_1c0c99b2e_IsBuiltin((*(_9717_m))._field_Func.ptr()))) && _1c0ee672c_isStdPackage(&((*((*((*((*(*_9717_m.alloc)._field_Func.alloc)._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("debug", 5)))) {
						_1c0ee23e8_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
				static__1c0ee9356_optimizeData(&((*(_9436_d))._field_Model), &((*_self_.alloc)._field_data));
				if (((((((_1c100cbd8_Exceptional && (*(*(*_9717_m.alloc)._field_Func.alloc)._field_Decl.alloc)._field_Exceptional) && ((*_9717_m.alloc)._field_Except != nullptr)) && ((*(*_9717_m.alloc)._field_Except.alloc)._field_Stmts.len() == 1LL)) && _1c0ee795e_isForwarded(&((*_9717_m.alloc)._field_Except))) && _1c0ee287c_isLastStmt(_self_)) && (!(_1c0ee2b13_isIter(_self_))))) {
					_1c0ee23e8_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1c0ed9d3b_ExceptionalForwardingExprModel>(_1c0ed9d3b_ExceptionalForwardingExprModel{._field_Expr=_9717_m}), &__jule_any_type120));
				};
				return;;
			}
		}
		_match_end_1c63635cc:;
	};
	static__1c0ee9356_optimizeData(&((*_9436_d.alloc)._field_Model), &((*_self_.alloc)._field_data));
}



inline void _1c0ee3174_optimizeVar(jule::Ptr<_1c0ee1abd_scopeOptimizer> _self_, jule::Ptr<_1c0d4dde2_Var> _12035_v) {
	if (((*(_12035_v))._field_Value != nullptr)) {
		if (((((*((*(_self_))._field_data))._field_nils != nullptr) && _1c0ee04a1_isNilValidType((*((*_12035_v.alloc)._field_Kind))._field_Kind)) && _1c0ee01d7_isGuaranteedNonNilExpr(&((*(*_self_.alloc)._field_data.alloc)._field_nils), (*((*(*_12035_v.alloc)._field_Value.alloc)._field_Data))._field_Model))) {
			;
			_1c0ede2a2_pushVar((*(*_self_.alloc)._field_data.alloc)._field_nils, _1c0ee07e2_getNilVar(jule::Any(_12035_v, &__jule_any_type8)), true);
		};
		if (((*(*_self_.alloc)._field_data.alloc)._field_dynamic != nullptr)) {
			jule::Ptr<_1c0dd7de3_TypeKind> _12921_kind = _1c1004e00_isTypeGuaranteedDynamicData(&((*(*_self_.alloc)._field_data.alloc)._field_dynamic), (*(*_12035_v.alloc)._field_Kind.alloc)._field_Kind, (*(*(*_12035_v.alloc)._field_Value.alloc)._field_Data.alloc)._field_Model);;
			if ((_12921_kind != nullptr)) {
				if (_1c10049c1_isDynamicValidType((*(*_12035_v.alloc)._field_Kind.alloc)._field_Kind)) {
					_1c1003a8b_pushVar((*(*_self_.alloc)._field_data.alloc)._field_dynamic, _1c1005241_getDynamicVar(jule::Any(_12035_v, &__jule_any_type8)), _12921_kind);
				};
			};
		};
		static__1c0ee9356_optimizeData(&((*(*(*_12035_v.alloc)._field_Value.alloc)._field_Data.alloc)._field_Model), &((*_self_.alloc)._field_data));
	};
}



inline void _1c0ee342c_optimizeConditional(jule::Ptr<_1c0ee1abd_scopeOptimizer> _self_, jule::Ptr<_1c0cd8277_Conditional> _14143_c) {
	_1c1006077_dataCheckpoint _14213_checkpoint = _1c10068e6_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*_14143_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6371b3a:;
		if (it != expr_end) {
			jule::Ptr<_1c0cd7a5c_If> _14321_elif = *it;
			{
				static__1c0ee9356_optimizeData(&((*(_14321_elif))._field_Expr), &((*_self_.alloc)._field_data));
				_1c0ee60ab_optimizeChild(_self_, (*_14321_elif.alloc)._field_Scope);
				if ((((*(_14143_c))._field_Elifs.len() > 1LL) || ((*_14143_c.alloc)._field_Default != nullptr))) {
					_1c1006b9e_loadCheckpoint((*_self_.alloc)._field_data, &(_14213_checkpoint));
				};
			}
			_iter_next_1c6371b3a:;
			++it;
			goto _iter_begin_1c6371b3a;
		}
		_iter_end_1c6371b3a:;
	};
	if (((*_14143_c.alloc)._field_Default != nullptr)) {
		_1c0ee60ab_optimizeChild(_self_, (*(*_14143_c.alloc)._field_Default.alloc)._field_Scope);
		_1c1006b9e_loadCheckpoint((*_self_.alloc)._field_data, &(_14213_checkpoint));
	};
	if ((!(_1c100c18d_Cond))) {
		return;;
	};
	jule::Bool _15913_constCase = false;;
	{
		auto expr = &((*_14143_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6375776:;
		if (it != expr_end) {
			jule::I64 _16214_i = it - expr->begin();
			jule::Ptr<_1c0cd7a5c_If> _16221_elif = *it;
			{
				if ((!(_1c0ee6a3a_isConstantValidConditionalCase(&(_16221_elif))))) {
					goto _iter_next_1c6375776;
				};
				_15913_constCase=true;
				((*(_14143_c))._field_Elifs).mut_slice(0LL, _16214_i);;
				(*_14143_c.alloc)._field_Default=jule::new_ptr<_1c0cd7d59_Else>(_1c0cd7d59_Else{._field_Scope=(*(_16221_elif))._field_Scope});
				goto _iter_end_1c6375776;
			}
			_iter_next_1c6375776:;
			++it;
			_16214_i++;
			goto _iter_begin_1c6375776;
		}
		_iter_end_1c6375776:;
	};
	if (((*_14143_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1c0cd7a5c_If>* _17913_i = (&((*_14143_c.alloc)._field_Elifs[0LL]));;
	jule::Ptr<_1c0cd7a5c_If>* _1809_end = (&((*_14143_c.alloc)._field_Elifs[((*_14143_c.alloc)._field_Elifs.len() - 1LL)]));;
	for (; (_17913_i <= _1809_end); (_17913_i)++) {
		{
			{
				if (_1c0ee73cb_isUnreachableConditionalCase(&((*(_17913_i))))) {
					(*(_17913_i))=nullptr;
				};
			};
		}
	_iter_next_1c6378416:;
	}
	_iter_end_1c6378416:;;
	if (((*_14143_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_15913_constCase))) {
		return;;
	};
	jule::I64 _19813_only = -1LL;;
	{
		auto expr = &((*_14143_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c637a737:;
		if (it != expr_end) {
			jule::I64 _19913_j = it - expr->begin();
			jule::Ptr<_1c0cd7a5c_If> _19916_elif = *it;
			{
				if ((_19916_elif != nullptr)) {
					if ((_19813_only != -1LL)) {
						return;;
					};
					_19813_only=_19913_j;
				};
			}
			_iter_next_1c637a737:;
			++it;
			_19913_j++;
			goto _iter_begin_1c637a737;
		}
		_iter_end_1c637a737:;
	};
	if ((_19813_only != -1LL)) {
		_1c0ee23e8_setCurrentStmt(_self_, jule::Any((*((*_14143_c.alloc)._field_Elifs[_19813_only]))._field_Scope, &__jule_any_type21));
	};
}



inline void _1c0ee384a_buildDefaultConstantTrueCase(jule::Ptr<_1c0ee1abd_scopeOptimizer> _self_, jule::Ptr<_1c0cdc37a_Case> _21552_case, jule::I64* _21570_i, jule::Ptr<_1c0cdb852_Match>* _21583_m) {
	(*(_21552_case))._field_Exprs=nullptr;
	jule::I64 _2179_start = (*(_21570_i));;
	_julec_label_1c637cc12:;
	for (;;) {
		{
			if (((*((*_21552_case.alloc)._field_Scope))._field_Stmts.len() == 0LL)) {
				goto _iter_end_1c637cc78;
			};
			jule::Any *_22318_stmt = &((*(*_21552_case.alloc)._field_Scope.alloc)._field_Stmts[((*(*_21552_case.alloc)._field_Scope.alloc)._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_22318_stmt)) };
				
				if (_match_expr.type == &__jule_any_type47) {
					_case_begin_1c63803da:;
					{
						((*(_21570_i)))++;
						if (((*(_21570_i)) >= (*((*(_21583_m))))._field_Cases.len())) {
							(*(_22318_stmt))=jule::Any((*((*((*(_21583_m))))._field_Default))._field_Scope, &__jule_any_type21);
							goto _iter_end_1c637cc78;
						};
						_21552_case=(*((*(_21583_m))))._field_Cases[(*(_21570_i))];
						(*(_22318_stmt))=jule::Any((*_21552_case.alloc)._field_Scope, &__jule_any_type21);
					}
				}
				else {
					_case_begin_1c6380561:;
					{
						goto _iter_end_1c637cc78;
					}
				}
				_match_end_1c638050b:;
			};
		}
	_iter_next_1c637cc78:;
	}
	_iter_end_1c637cc78:;;
	(*((*(_21583_m))))._field_Default=(*((*(_21583_m))))._field_Cases[_2179_start];
	((*((*(_21583_m))))._field_Cases).mut_slice(0LL, _2179_start);;
}



inline void _1c0ee3b03_optimizeMatch(jule::Ptr<_1c0ee1abd_scopeOptimizer> _self_, jule::Ptr<_1c0cdb852_Match> _24137_m) {
	jule::Uintptr _24213_var = 0LLU;;
	if ((_1c100d249_Dynamic && (*(_24137_m))._field_TypeMatch)) {
		_24213_var=_1c1005241_getDynamicVar((*((*_24137_m.alloc)._field_Expr))._field_Model);
	};
	_1c1006077_dataCheckpoint _24613_checkpoint = _1c10068e6_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*_24137_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6384a82:;
		if (it != expr_end) {
			jule::Ptr<_1c0cdc37a_Case> _24721_case = *it;
			{
				{
					auto expr = &((*(_24721_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c6385467:;
					if (it != expr_end) {
						jule::Ptr<_1c0da69e9_Data> _24825_expr = *it;
						{
							static__1c0ee9356_optimizeData(&((*(_24825_expr))._field_Model), &((*_self_.alloc)._field_data));
						}
						_iter_next_1c6385467:;
						++it;
						goto _iter_begin_1c6385467;
					}
					_iter_end_1c6385467:;
				};
				if ((((*_24721_case.alloc)._field_Exprs.len() == 1LL) && ((*(*_self_.alloc)._field_data.alloc)._field_dynamic != nullptr))) {
					jule::Ptr<_1c0dd7de3_TypeKind> _25321_kind = _1c1004e00_isTypeGuaranteedDynamicData(&((*(*_self_.alloc)._field_data.alloc)._field_dynamic), (*((*_24721_case.alloc)._field_Exprs[0LL]))._field_Kind, nullptr);;
					if ((_25321_kind != nullptr)) {
						_1c1003a8b_pushVar((*(*_self_.alloc)._field_data.alloc)._field_dynamic, _24213_var, _25321_kind);
					} else {
						_1c1003dcc_removeVar((*(*_self_.alloc)._field_data.alloc)._field_dynamic, _24213_var);
					};
				};
				_1c0ee60ab_optimizeChild(_self_, (*_24721_case.alloc)._field_Scope);
				if ((((*_24137_m.alloc)._field_Cases.len() > 1LL) || ((*_24137_m.alloc)._field_Default != nullptr))) {
					_1c1006b9e_loadCheckpoint((*_self_.alloc)._field_data, &(_24613_checkpoint));
				};
			}
			_iter_next_1c6384a82:;
			++it;
			goto _iter_begin_1c6384a82;
		}
		_iter_end_1c6384a82:;
	};
	if (((*_24137_m.alloc)._field_Default != nullptr)) {
		_1c0ee60ab_optimizeChild(_self_, (*(*_24137_m.alloc)._field_Default.alloc)._field_Scope);
		_1c1006b9e_loadCheckpoint((*_self_.alloc)._field_data, &(_24613_checkpoint));
	};
	if ((!(_1c100c18d_Cond))) {
		return;;
	};
	jule::Bool _27413_constCase = false;;
	{
		auto expr = &((*_24137_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c638bda8:;
		if (it != expr_end) {
			jule::I64 _27718_i = it - expr->begin();
			jule::Ptr<_1c0cdc37a_Case> _27725_case = *it;
			{
				if ((!(_1c0ee7145_isConstantValidMatchCase(&(_27725_case))))) {
					goto _iter_next_1c638bda8;
				};
				_27413_constCase=true;
				_1c0ee384a_buildDefaultConstantTrueCase(_self_, _27725_case, &(_27718_i), &(_24137_m));
				goto _iter_end_1c638bda8;
			}
			_iter_next_1c638bda8:;
			++it;
			_27718_i++;
			goto _iter_begin_1c638bda8;
		}
		_iter_end_1c638bda8:;
	};
	if (((*_24137_m.alloc)._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1c0cdc37a_Case>* _29113_i = (&((*_24137_m.alloc)._field_Cases[0LL]));;
	jule::Ptr<_1c0cdc37a_Case>* _2929_end = (&((*_24137_m.alloc)._field_Cases[((*_24137_m.alloc)._field_Cases.len() - 1LL)]));;
	for (; (_29113_i <= _2929_end); (_29113_i)++) {
		{
			{
				if (_1c0ee7695_isUnreachableMatchCase(&((*(_29113_i))))) {
					(*(_29113_i))=nullptr;
				};
			};
		}
	_iter_next_1c638e064:;
	}
	_iter_end_1c638e064:;;
	if ((!(_27413_constCase))) {
		return;;
	};
	jule::I64 _30613_only = -1LL;;
	{
		auto expr = &((*_24137_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6390c36:;
		if (it != expr_end) {
			jule::I64 _30713_j = it - expr->begin();
			jule::Ptr<_1c0cdc37a_Case> _30716_case = *it;
			{
				if ((_30716_case != nullptr)) {
					if ((_30613_only != -1LL)) {
						return;;
					};
					_30613_only=_30713_j;
				};
			}
			_iter_next_1c6390c36:;
			++it;
			_30713_j++;
			goto _iter_begin_1c6390c36;
		}
		_iter_end_1c6390c36:;
	};
	if ((_30613_only != -1LL)) {
		_1c0ee23e8_setCurrentStmt(_self_, jule::Any((*((*_24137_m.alloc)._field_Cases[_30613_only]))._field_Scope, &__jule_any_type21));
	};
}



inline void _1c0ee3dab_optimizeRangeIter(jule::Ptr<_1c0ee1abd_scopeOptimizer> _self_, jule::Ptr<_1c0cd9476_RangeIter> _32341_it) {
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && ((*(_32341_it))._field_KeyA != nullptr))) {
		_1c10083cb_pushVar((*(*_self_.alloc)._field_data.alloc)._field_boundary, _1c100a39a_getBoundaryVar((*((*_32341_it.alloc)._field_Expr))._field_Model), jule::Any((*_32341_it.alloc)._field_KeyA, &__jule_any_type8));
	};
	_1c0ee60ab_optimizeChild(_self_, (*_32341_it.alloc)._field_Scope);
	if (_1c100ce91_Iter) {
		{
			auto &_match_expr{ (*((*(_32341_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type93) {
				_case_begin_1c6395895:;
				{
					jule::Ptr<_1c0c89080_CastingExprModel> _33521_cem = (*((*(_32341_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1c0c89080_CastingExprModel>();;
					jule::Ptr<_1c0de09bc_Prim> _33617_eprim = _1c0dda544_Prim((*(_33521_cem))._field_ExprKind.ptr());;
					if (((_33617_eprim == nullptr) || (!(_1c0de3e54_IsStr(_33617_eprim.ptr()))))) {
						goto _match_end_1c639582e;
					};
					jule::Ptr<_1c0de4ebb_Slc> _34021_s = _1c0ddb59a_Slc((*_33521_cem.alloc)._field_Kind.ptr());;
					if ((_34021_s == nullptr)) {
						goto _match_end_1c639582e;
					};
					jule::Ptr<_1c0de09bc_Prim> _34417_prim = _1c0dda544_Prim((*(_34021_s))._field_Elem.ptr());;
					if ((_34417_prim == nullptr)) {
						goto _match_end_1c639582e;
					};
					{
						
						if (_1c0de23b4_IsU8(_34417_prim.ptr())) {
							_case_begin_1c639926c:;
							{
								(*_32341_it.alloc)._field_Expr=(*_33521_cem.alloc)._field_Expr;
							}
						}
						else if (_1c0de1d97_IsI32(_34417_prim.ptr())) {
							_case_begin_1c63993d2:;
							{
								static__1c0ee9356_optimizeData(&((*((*_33521_cem.alloc)._field_Expr))._field_Model), &((*_self_.alloc)._field_data));
								_1c0ee23e8_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1c0edc723_StrRuneIter>(_1c0edc723_StrRuneIter{._field_Expr=(*_33521_cem.alloc)._field_Expr, ._field_Base=_32341_it}), &__jule_any_type121));
								return;;
							}
						}
						_match_end_1c63972c0:;
					};
				}
			}
			_match_end_1c639582e:;
		};
	};
	static__1c0ee9356_optimizeData(&((*(*_32341_it.alloc)._field_Expr.alloc)._field_Model), &((*_self_.alloc)._field_data));
}



inline void _1c0ee4164_optimizeWhileIter(jule::Ptr<_1c0ee1abd_scopeOptimizer> _self_, jule::Ptr<_1c0cd8a2a_WhileIter> _36841_it) {
	static__1c0ee9356_optimizeData(&((*(_36841_it))._field_Expr), &((*(_self_))._field_data));
	_1c0ee5d03_optimizeStmt(_self_, (*_36841_it.alloc)._field_Next);
	_1c0ee60ab_optimizeChild(_self_, (*_36841_it.alloc)._field_Scope);
}



inline jule::Bool _1c0ee44a5_substr(jule::Ptr<_1c0ee1abd_scopeOptimizer> _self_, jule::Ptr<_1c0cdac3b_Assign> _37430_a) {
	if (((*((*(_37430_a))._field_Op))._field_Id != static_cast<jule::U64>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_37430_a))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1c639e250:;
			{
				jule::Ptr<_1c0c8b67b_SlicingExprModel> _38017_sem = (*((*(_37430_a))._field_Right))._field_Model.unsafe_cast_ptr<_1c0c8b67b_SlicingExprModel>();;
				if (_1c0ed9203_equalModels((*((*_37430_a.alloc)._field_Left))._field_Model, (*(_38017_sem))._field_Expr)) {
					_1c0ee23e8_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1c0edb414_MutSlicingExprModel>(_1c0edb414_MutSlicingExprModel{._field_Token=(*_38017_sem.alloc)._field_Token, ._field_Expr=(*_38017_sem.alloc)._field_Expr, ._field_Left=(*_38017_sem.alloc)._field_Left, ._field_Right=(*_38017_sem.alloc)._field_Right}), &__jule_any_type122));
					return true;;
				};
			}
		}
		_match_end_1c639e1d9:;
	};
	return false;;
}



inline jule::Bool _1c0ee47e6_strAssign(jule::Ptr<_1c0ee1abd_scopeOptimizer> _self_, jule::Ptr<_1c0cdac3b_Assign> _39433_a) {
	if ((!(_1c100c3d0_Str))) {
		return false;;
	};
	jule::Ptr<_1c0de09bc_Prim> _3989_lp = _1c0dda544_Prim((*((*(_39433_a))._field_Left))._field_Kind.ptr());;
	if (((_3989_lp == nullptr) || (!(_1c0de3e54_IsStr(_3989_lp.ptr()))))) {
		return false;;
	};
	return _1c0ee44a5_substr(_self_, _39433_a);;
}



inline jule::Bool _1c0ee4b37_sliceAssign(jule::Ptr<_1c0ee1abd_scopeOptimizer> _self_, jule::Ptr<_1c0cdac3b_Assign> _40535_a) {
	if (((!(_1c100c677_Slice)) || (_1c0ddb59a_Slc((*((*(_40535_a))._field_Left))._field_Kind.ptr()) == nullptr))) {
		return false;;
	};
	return _1c0ee44a5_substr(_self_, _40535_a);;
}



inline void _1c0ee4de0_optimizePostfix(jule::Ptr<_1c0ee1abd_scopeOptimizer> _self_, jule::Ptr<_1c0cda785_Postfix> _41339_postfix) {
	if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
		_1c1009a4d_possibleBoundaryRemove(&((*(*_self_.alloc)._field_data.alloc)._field_boundary), (*(_41339_postfix))._field_Expr);
	};
	static__1c0ee9356_optimizeData(&((*_41339_postfix.alloc)._field_Expr), &((*_self_.alloc)._field_data));
}



inline void _1c0ee5198_optimizeAssign(jule::Ptr<_1c0ee1abd_scopeOptimizer> _self_, jule::Ptr<_1c0cdac3b_Assign> _42038_assign) {
	if ((((*((*(_42038_assign))._field_Op))._field_Id == static_cast<jule::U64>(71LLU)) && _1c0ed9203_equalModels((*((*_42038_assign.alloc)._field_Left))._field_Model, (*((*_42038_assign.alloc)._field_Right))._field_Model))) {
		_1c0ee25e6_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return;;
	};
	if (((*((*_self_.alloc)._field_data))._field_boundary != nullptr)) {
		if (_1c1009d17_isBoundaryRiskyType((*(*_42038_assign.alloc)._field_Left.alloc)._field_Kind)) {
			_1c1009a4d_possibleBoundaryRemove(&((*(*_self_.alloc)._field_data.alloc)._field_boundary), (*(*_42038_assign.alloc)._field_Left.alloc)._field_Model);
		};
	};
	if (((*(*_self_.alloc)._field_data.alloc)._field_nils != nullptr)) {
		if (_1c0ee01d7_isGuaranteedNonNilExpr(&((*(*_self_.alloc)._field_data.alloc)._field_nils), (*(*_42038_assign.alloc)._field_Right.alloc)._field_Model)) {
			if (_1c0ee04a1_isNilValidType((*(*_42038_assign.alloc)._field_Left.alloc)._field_Kind)) {
				;
				_1c0ede2a2_pushVar((*(*_self_.alloc)._field_data.alloc)._field_nils, _1c0ee07e2_getNilVar((*(*_42038_assign.alloc)._field_Left.alloc)._field_Model), true);
			};
		} else {
			_1c0eded1e_possibleNilRemove(&((*(*_self_.alloc)._field_data.alloc)._field_nils), (*(*_42038_assign.alloc)._field_Left.alloc)._field_Model);
		};
	};
	if (((*(*_self_.alloc)._field_data.alloc)._field_dynamic != nullptr)) {
		jule::Ptr<_1c0dd7de3_TypeKind> _44417_kind = _1c1004e00_isTypeGuaranteedDynamicData(&((*(*_self_.alloc)._field_data.alloc)._field_dynamic), (*(*_42038_assign.alloc)._field_Right.alloc)._field_Kind, (*(*_42038_assign.alloc)._field_Right.alloc)._field_Model);;
		if ((_44417_kind != nullptr)) {
			if (_1c10049c1_isDynamicValidType((*(*_42038_assign.alloc)._field_Left.alloc)._field_Kind)) {
				_1c1003a8b_pushVar((*(*_self_.alloc)._field_data.alloc)._field_dynamic, _1c1005241_getDynamicVar((*(*_42038_assign.alloc)._field_Left.alloc)._field_Model), _44417_kind);
			};
		} else {
			_1c10046b3_possibleDynamicRemove(&((*(*_self_.alloc)._field_data.alloc)._field_dynamic), (*(*_42038_assign.alloc)._field_Left.alloc)._field_Model);
		};
	};
	{
		
		if (_1c0ee47e6_strAssign(_self_, _42038_assign) || _1c0ee4b37_sliceAssign(_self_, _42038_assign)) {
			_case_begin_1c63ad79d:;
			{
				return;;
			}
		}
		_match_end_1c63b03a4:;
	};
	static__1c0ee9356_optimizeData(&((*(*_42038_assign.alloc)._field_Left.alloc)._field_Model), &((*_self_.alloc)._field_data));
	static__1c0ee9356_optimizeData(&((*(*_42038_assign.alloc)._field_Right.alloc)._field_Model), &((*_self_.alloc)._field_data));
	{
		auto &_match_expr{ (*((*(_42038_assign))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(43LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1c63b4023:;
			{
				if (((!(_1c100b4ab_Math)) || (_1c0ddbab7_Struct((*(*_42038_assign.alloc)._field_Left.alloc)._field_Kind.ptr()) != nullptr))) {
					goto _match_end_1c63b3eac;
				};
				jule::U64 _47013_oldId;
				jule::Str _47020_oldKind;
				({
					jule::U64 ___jule_assign_arg = (*(*_42038_assign.alloc)._field_Op.alloc)._field_Id;
					jule::Str _1___jule_assign_arg = (*(*_42038_assign.alloc)._field_Op.alloc)._field_Kind;
					_47013_oldId = ___jule_assign_arg;
					_47020_oldKind = _1___jule_assign_arg;
				});
				{
					auto &_match_expr{ (*((*(_42038_assign))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(43LLU)) {
						_case_begin_1c63b6ca1:;
						{
							(*(*_42038_assign.alloc)._field_Op.alloc)._field_Id=static_cast<jule::U64>(63LLU);
							(*(*_42038_assign.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit("/", 1);
						}
					}
					else if (_match_expr == static_cast<jule::U64>(44LLU)) {
						_case_begin_1c63b6d17:;
						{
							(*(*_42038_assign.alloc)._field_Op.alloc)._field_Id=static_cast<jule::U64>(64LLU);
							(*(*_42038_assign.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit("%", 1);
						}
					}
					else {
						_case_begin_1c63b6575:;
						{
							jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/opt/scope.jule:479:17"));;
						}
					}
					_match_end_1c63b68a5:;
				};
				jule::Any _48117_model = jule::Any(jule::new_ptr<_1c0c87952_BinaryExprModel>(_1c0c87952_BinaryExprModel{._field_Left=(*_42038_assign.alloc)._field_Left, ._field_Right=(*_42038_assign.alloc)._field_Right, ._field_Op=(*_42038_assign.alloc)._field_Op}), &__jule_any_type111);;
				static__1c0ee9356_optimizeData(&(_48117_model), &((*_self_.alloc)._field_data));
				{
					auto &_match_expr{ _48117_model };
					
					if (_match_expr.type == &__jule_any_type111) {
						_case_begin_1c63ba25a:;
						{
							(*_42038_assign.alloc)._field_Right=jule::new_ptr<_1c0c87457_OperandExprModel>((*(*_42038_assign.alloc)._field_Right.alloc));
							(*(*_42038_assign.alloc)._field_Op.alloc)._field_Id=static_cast<jule::U64>(71LLU);
							(*(*_42038_assign.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit("=", 1);
							(*(*_42038_assign.alloc)._field_Right.alloc)._field_Model=_48117_model;
							return;;
						}
					}
					_match_end_1c63b9e4c:;
				};
				(*(*_42038_assign.alloc)._field_Op.alloc)._field_Id=_47013_oldId;
				(*(*_42038_assign.alloc)._field_Op.alloc)._field_Kind=_47020_oldKind;
				return;;
			}
		}
		_match_end_1c63b3eac:;
	};
	if (_1c100b1ae_Append) {
		{
			auto &_match_expr{ (*((*(_42038_assign))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type25) {
				_case_begin_1c63bcda6:;
				{
					jule::Ptr<_1c0c8eea9_BuiltinAppendCallExprModel> _50321_m = (*(*_42038_assign.alloc)._field_Right.alloc)._field_Model.cast_ptr<_1c0c8eea9_BuiltinAppendCallExprModel>(&__jule_any_type25);;
					if ((!(_1c10026a0_areSameLvalueExprModel(&((*(*_42038_assign.alloc)._field_Left.alloc)._field_Model), &((*(_50321_m))._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ (*(_50321_m))._field_Elements };
						
						if (_match_expr.type == &__jule_any_type76) {
							_case_begin_1c63be36e:;
							{
								_1c0ee23e8_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1c0edbe70_PushToSliceExprModel>(_1c0edbe70_PushToSliceExprModel{._field_Dest=(*_50321_m.alloc)._field_Dest, ._field_Elems=(*(_50321_m))._field_Elements.unsafe_cast_ptr<_1c0c89d0b_SliceExprModel>()}), &__jule_any_type123));
							}
						}
						else {
							_case_begin_1c63be913:;
							{
								_1c0ee23e8_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1c0edc349_AppendToSliceExprModel>(_1c0edc349_AppendToSliceExprModel{._field_Dest=(*(*_42038_assign.alloc)._field_Left.alloc)._field_Model, ._field_Slice=(*_50321_m.alloc)._field_Elements}), &__jule_any_type124));
							}
						}
						_match_end_1c63be8ad:;
					};
				}
			}
			_match_end_1c63bcd40:;
		};
	};
}



inline jule::Bool _1c0ee54d9_tryOptimizeSwap(jule::Ptr<_1c0ee1abd_scopeOptimizer> _self_, jule::Ptr<_1c0cdb1e2_MultiAssign>* _52540_assign) {
	if (((((!(_1c100c930_Assign)) || ((*((*(_52540_assign))))._field_Left.len() != 2LL)) || ((*((*(_52540_assign))))._field_Left[0LL] == nullptr)) || ((*((*(_52540_assign))))._field_Left[1LL] == nullptr))) {
		return false;;
	};
	jule::Ptr<_1c0c8d11c_TupleExprModel> _53017_tup;;
	{
		auto &_match_expr{ (*((*(_52540_assign))))._field_Right };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1c63c350a:;
			{
				_53017_tup=(*((*(_52540_assign))))._field_Right.unsafe_cast_ptr<_1c0c8d11c_TupleExprModel>();
			}
		}
		_match_end_1c63c3494:;
	};
	if (((_53017_tup == nullptr) || ((*(_53017_tup))._field_Datas.len() != 2LL))) {
		return false;;
	};
	if ((_1c0ed9203_equalModels((*((*((*(_52540_assign))))._field_Left[0LL]))._field_Model, (*((*(_53017_tup))._field_Datas[0LL]))._field_Model) && _1c0ed9203_equalModels((*((*((*(_52540_assign))))._field_Left[1LL]))._field_Model, (*((*(_53017_tup))._field_Datas[1LL]))._field_Model))) {
		_1c0ee25e6_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return true;;
	};
	if (((!(_1c0ed9203_equalModels((*((*((*(_52540_assign))))._field_Left[0LL]))._field_Model, (*((*(_53017_tup))._field_Datas[1LL]))._field_Model))) || (!(_1c0ed9203_equalModels((*((*((*(_52540_assign))))._field_Left[1LL]))._field_Model, (*((*(_53017_tup))._field_Datas[0LL]))._field_Model))))) {
		return false;;
	};
	jule::Ptr<_1c0eda1b0_SwapExprModel> _55213_model = jule::new_ptr<_1c0eda1b0_SwapExprModel>(_1c0eda1b0_SwapExprModel{._field_Left=(*((*(_52540_assign))))._field_Left[0LL], ._field_Right=(*((*(_52540_assign))))._field_Left[1LL]});;
	static__1c0ee9356_optimizeData(&((*((*(_55213_model))._field_Left))._field_Model), &((*_self_.alloc)._field_data));
	static__1c0ee9356_optimizeData(&((*((*_55213_model.alloc)._field_Right))._field_Model), &((*_self_.alloc)._field_data));
	_1c0ee23e8_setCurrentStmt(_self_, jule::Any(_55213_model, &__jule_any_type125));
	return true;;
}



inline void _1c0ee5792_optimizeMultiAssign(jule::Ptr<_1c0ee1abd_scopeOptimizer> _self_, jule::Ptr<_1c0cdb1e2_MultiAssign> _56243_assign) {
	if (_1c0ee54d9_tryOptimizeSwap(_self_, &(_56243_assign))) {
		return;;
	};
	jule::Ptr<_1c0c8d11c_TupleExprModel> _56913_tup = static_cast<jule::Ptr<_1c0c8d11c_TupleExprModel>>(nullptr);;
	{
		auto &_match_expr{ (*(_56243_assign))._field_Right };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1c63cc008:;
			{
				_56913_tup=(*(_56243_assign))._field_Right.unsafe_cast_ptr<_1c0c8d11c_TupleExprModel>();
			}
		}
		_match_end_1c63cbe92:;
	};
	{
		auto expr = &((*(_56243_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c63cb139:;
		if (it != expr_end) {
			jule::I64 _57414_i = it - expr->begin();
			jule::Ptr<_1c0da69e9_Data> _57421_l = *it;
			{
				if ((_57421_l != nullptr)) {
					if (((*((*_self_.alloc)._field_data))._field_boundary != nullptr)) {
						if (_1c1009d17_isBoundaryRiskyType((*_57421_l.alloc)._field_Kind)) {
							_1c1009a4d_possibleBoundaryRemove(&((*(*_self_.alloc)._field_data.alloc)._field_boundary), (*_57421_l.alloc)._field_Model);
						};
					};
					if (((*(*_self_.alloc)._field_data.alloc)._field_nils != nullptr)) {
						if (((_56913_tup != nullptr) && _1c0ee01d7_isGuaranteedNonNilExpr(&((*(*_self_.alloc)._field_data.alloc)._field_nils), (*((*_56913_tup.alloc)._field_Datas[_57414_i]))._field_Model))) {
							if (_1c0ee04a1_isNilValidType((*_57421_l.alloc)._field_Kind)) {
								;
								_1c0ede2a2_pushVar((*(*_self_.alloc)._field_data.alloc)._field_nils, _1c0ee07e2_getNilVar((*_57421_l.alloc)._field_Model), true);
							};
						} else {
							_1c0eded1e_possibleNilRemove(&((*(*_self_.alloc)._field_data.alloc)._field_nils), (*_57421_l.alloc)._field_Model);
						};
					};
					if ((((*(*_self_.alloc)._field_data.alloc)._field_dynamic != nullptr) && (_56913_tup != nullptr))) {
						jule::Ptr<_1c0dd7de3_TypeKind> _59225_kind = _1c1004e00_isTypeGuaranteedDynamicData(&((*(*_self_.alloc)._field_data.alloc)._field_dynamic), (*((*_56913_tup.alloc)._field_Datas[_57414_i]))._field_Kind, (*((*_56913_tup.alloc)._field_Datas[_57414_i]))._field_Model);;
						if ((_59225_kind != nullptr)) {
							if (_1c10049c1_isDynamicValidType((*_57421_l.alloc)._field_Kind)) {
								_1c1003a8b_pushVar((*(*_self_.alloc)._field_data.alloc)._field_dynamic, _1c1005241_getDynamicVar((*_57421_l.alloc)._field_Model), _59225_kind);
							};
						} else {
							_1c10046b3_possibleDynamicRemove(&((*(*_self_.alloc)._field_data.alloc)._field_dynamic), (*_57421_l.alloc)._field_Model);
						};
					};
					static__1c0ee9356_optimizeData(&((*_57421_l.alloc)._field_Model), &((*_self_.alloc)._field_data));
				};
			}
			_iter_next_1c63cb139:;
			++it;
			_57414_i++;
			goto _iter_begin_1c63cb139;
		}
		_iter_end_1c63cb139:;
	};
	static__1c0ee9356_optimizeData(&((*_56243_assign.alloc)._field_Right), &((*_self_.alloc)._field_data));
}



inline void _1c0ee5a4a_optimizeRet(jule::Ptr<_1c0ee1abd_scopeOptimizer> _self_, jule::Ptr<_1c0cdce19_RetSt> _60835_r) {
	static__1c0ee9356_optimizeData(&((*(_60835_r))._field_Expr), &((*(_self_))._field_data));
	if ((!(_1c100cbd8_Exceptional))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_60835_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1c63d7e59:;
			{
				goto _match_end_1c63d8069;
			}
		}
		else {
			_case_begin_1c63d80be:;
			{
				return;;
			}
		}
		_match_end_1c63d8069:;
	};
	jule::Ptr<_1c0c89932_FnCallExprModel> _62213_fc = (*_60835_r.alloc)._field_Expr.cast_ptr<_1c0c89932_FnCallExprModel>(&__jule_any_type33);;
	if (((((!((*((*((*(_62213_fc))._field_Func))._field_Decl))._field_Exceptional)) || ((*_62213_fc.alloc)._field_Except == nullptr)) || ((*((*_62213_fc.alloc)._field_Except))._field_Stmts.len() != 1LL)) || (!(_1c0ee795e_isForwarded(&((*_62213_fc.alloc)._field_Except)))))) {
		return;;
	};
	_1c0ee23e8_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1c0ed9d3b_ExceptionalForwardingExprModel>(_1c0ed9d3b_ExceptionalForwardingExprModel{._field_Expr=_62213_fc}), &__jule_any_type120));
}



inline void _1c0ee5d03_optimizeStmt(jule::Ptr<_1c0ee1abd_scopeOptimizer> _self_, jule::Any _63236_stmt) {
	{
		auto &_match_expr{ _63236_stmt };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1c63db4bd:;
			{
				_1c0ee60ab_optimizeChild(_self_, _63236_stmt.unsafe_cast_ptr<_1c0cd763e_Scope>());
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1c63db204:;
			{
				_1c0ee2dbb_optimizeData(_self_, _63236_stmt.unsafe_cast_ptr<_1c0da69e9_Data>());
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c63db534:;
			{
				_1c0ee3174_optimizeVar(_self_, _63236_stmt.unsafe_cast_ptr<_1c0d4dde2_Var>());
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1c63db59a:;
			{
				_1c0ee342c_optimizeConditional(_self_, _63236_stmt.unsafe_cast_ptr<_1c0cd8277_Conditional>());
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1c63db611:;
			{
				_1c0ee3dab_optimizeRangeIter(_self_, _63236_stmt.unsafe_cast_ptr<_1c0cd9476_RangeIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1c63db677:;
			{
				_1c0ee4164_optimizeWhileIter(_self_, _63236_stmt.unsafe_cast_ptr<_1c0cd8a2a_WhileIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1c63db6ee:;
			{
				_1c0ee60ab_optimizeChild(_self_, (*(_63236_stmt.unsafe_cast_ptr<_1c0cd8574_InfIter>()))._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1c63db776:;
			{
				_1c0ee5198_optimizeAssign(_self_, _63236_stmt.unsafe_cast_ptr<_1c0cdac3b_Assign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1c63db7ed:;
			{
				_1c0ee5792_optimizeMultiAssign(_self_, _63236_stmt.unsafe_cast_ptr<_1c0cdb1e2_MultiAssign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1c63db875:;
			{
				_1c0ee3b03_optimizeMatch(_self_, _63236_stmt.unsafe_cast_ptr<_1c0cdb852_Match>());
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1c63db8ec:;
			{
				_1c0ee5a4a_optimizeRet(_self_, _63236_stmt.unsafe_cast_ptr<_1c0cdce19_RetSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1c63db974:;
			{
				_1c0ee4de0_optimizePostfix(_self_, _63236_stmt.unsafe_cast_ptr<_1c0cda785_Postfix>());
			}
		}
		_match_end_1c63db37a:;
	};
}



inline void _1c0ee60ab_optimizeChild(jule::Ptr<_1c0ee1abd_scopeOptimizer> _self_, jule::Ptr<_1c0cd763e_Scope> _66137_child) {
	jule::Ptr<_1c0ee1abd_scopeOptimizer> _66213_so = static__1c0ee2140_new(_66137_child);;
	(*(_66213_so))._field_parent=_self_;
	(*_66213_so.alloc)._field_data=(*(_self_))._field_data;
	_1c0ee62a9_optimize(_66213_so);
}



inline void _1c0ee62a9_optimize(jule::Ptr<_1c0ee1abd_scopeOptimizer> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_scope))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_1c0ee5d03_optimizeStmt(_self_, (*(*_self_.alloc)._field_scope.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_1c63e4927:;
	}
	_iter_end_1c63e4927:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0ee1abd_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline void static__1c0ee906a_optimize(jule::Any* _5829_model) {
	static__1c0ee9356_optimizeData(_5829_model, &(_1c1005b7b_emptyData));
}



inline void static__1c0ee9356_optimizeData(jule::Any* _6233_model, jule::Ptr<_1c1006572_data>* _6256_d) {
	if (_1c1351e94_exprEnabled) {
		jule::Ptr<_1c0ee891b_exprOptimizer> _6517_exop = jule::new_ptr<_1c0ee891b_exprOptimizer>(_1c0ee891b_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)(_6233_model)), ._field_data=(*(_6256_d))});;
		_1c1001d64_do(_6517_exop.ptr());
	};
}



inline jule::Bool _1c0ee9697_selfCmpCond(_1c0ee891b_exprOptimizer* _self_, jule::Ptr<_1c0c87952_BinaryExprModel>* _7331_m) {
	if ((!(_1c0ed9203_equalModels((*((*((*(_7331_m))))._field_Left))._field_Model, (*((*((*(_7331_m))))._field_Right))._field_Model)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_7331_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1c640411d:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__2021e6b4e_NewBool(true), &__jule_any_type19);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1c64041a6:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__2021e6b4e_NewBool(false), &__jule_any_type19);
				return true;;
			}
		}
		else {
			_case_begin_1c6402ec9:;
			{
				return false;;
			}
		}
		_match_end_1c64040a7:;
	};
}



inline jule::Bool _1c0ee99d8_boolCond(_1c0ee891b_exprOptimizer* _self_, jule::Ptr<_1c0c87952_BinaryExprModel>* _9728_m) {
	jule::Ptr<_1c0de09bc_Prim> _989_lp = _1c0dda544_Prim((*((*((*(_9728_m))))._field_Left))._field_Kind.ptr());;
	if (((_989_lp == nullptr) || (!(_1c0de3bbd_IsBool(_989_lp.ptr()))))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_9728_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1c64088c5:;
			{
				std::swap((*((*(_9728_m))))._field_Left, (*((*(_9728_m))))._field_Right);
			}
		}
		else {
			_case_begin_1c6407ad3:;
			{
				{
					auto &_match_expr{ (*((*((*(_9728_m))))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1c6406dbd:;
						{
							goto _match_end_1c64083ec;
						}
					}
					else {
						_case_begin_1c6408452:;
						{
							return false;;
						}
					}
					_match_end_1c64083ec:;
				};
			}
		}
		_match_end_1c6407a7d:;
	};
	jule::Ptr<_2021e617b_Const> _11513_c = (*((*((*(_9728_m))))._field_Right))._field_Model.cast_ptr<_2021e617b_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ (*((*((*(_9728_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1c640a4cb:;
			{
				if (_2021e806d_ReadBool(_11513_c.ptr())) {
					(*((*(_self_))._field_model))=(*(*((*(_9728_m))))._field_Left.alloc)._field_Model;
				} else {
					_2021e9657_SetBool(_11513_c.ptr(), false);
					(*((*(_self_))._field_model))=jule::Any(_11513_c, &__jule_any_type19);
				};
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1c640a575:;
			{
				if (_2021e806d_ReadBool(_11513_c.ptr())) {
					_2021e9657_SetBool(_11513_c, true);
					(*((*(_self_))._field_model))=jule::Any(_11513_c, &__jule_any_type19);
				} else {
					(*((*(_self_))._field_model))=(*(*((*(_9728_m))))._field_Left.alloc)._field_Model;
				};
				return true;;
			}
		}
		else {
			_case_begin_1c6408650:;
		}
		_match_end_1c640a465:;
	};
	return false;;
}



inline jule::Bool _1c0ee9d29_strCond(_1c0ee891b_exprOptimizer* _self_, jule::Ptr<_1c0c87952_BinaryExprModel> _15026_m) {
	jule::Ptr<_1c0de09bc_Prim> _1519_lp = _1c0dda544_Prim((*((*(_15026_m))._field_Left))._field_Kind.ptr());;
	if (((_1519_lp == nullptr) || (!(_1c0de3e54_IsStr(_1519_lp.ptr()))))) {
		return false;;
	};
	if ((((*((*_15026_m.alloc)._field_Op))._field_Id != static_cast<jule::U64>(50LLU)) && ((*(*_15026_m.alloc)._field_Op.alloc)._field_Id != static_cast<jule::U64>(51LLU)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_15026_m))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1c64120e8:;
			{
				std::swap((*_15026_m.alloc)._field_Left, (*_15026_m.alloc)._field_Right);
			}
		}
		else {
			_case_begin_1c6411306:;
			{
				{
					auto &_match_expr{ (*((*(_15026_m))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1c640ed71:;
						{
							goto _match_end_1c6411b20;
						}
					}
					else {
						_case_begin_1c6411b75:;
						{
							return false;;
						}
					}
					_match_end_1c6411b20:;
				};
			}
		}
		_match_end_1c64112a1:;
	};
	jule::Ptr<_2021e617b_Const> _17113_c = (*((*_15026_m.alloc)._field_Right))._field_Model.cast_ptr<_2021e617b_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ (*((*(_15026_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1c6411d84:;
			{
				if ((_2021e8304_ReadStr(_17113_c.ptr())).empty()) {
					jule::Any _17521_model = jule::Any(jule::new_ptr<_1c0eda589_EmptyCompareExprModel>(_1c0eda589_EmptyCompareExprModel{._field_Expr=(*(*_15026_m.alloc)._field_Left.alloc)._field_Model, ._field_Neg=false}), &__jule_any_type126);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_17521_model))))));
					goto _match_end_1c6413b22;
				};
				jule::Any _18217_model = jule::Any(jule::new_ptr<_1c0edad81_StrCompExprModel>(_1c0edad81_StrCompExprModel{._field_Left=(*(*_15026_m.alloc)._field_Left.alloc)._field_Model, ._field_Right=_17113_c, ._field_NotEq=false}), &__jule_any_type127);;
				(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_18217_model))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1c6413baa:;
			{
				if ((_2021e8304_ReadStr(_17113_c.ptr())).empty()) {
					jule::Any _19021_model = jule::Any(jule::new_ptr<_1c0eda589_EmptyCompareExprModel>(_1c0eda589_EmptyCompareExprModel{._field_Expr=(*(*_15026_m.alloc)._field_Left.alloc)._field_Model, ._field_Neg=true}), &__jule_any_type126);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_19021_model))))));
					goto _match_end_1c6413b22;
				};
				jule::Any _19717_model = jule::Any(jule::new_ptr<_1c0edad81_StrCompExprModel>(_1c0edad81_StrCompExprModel{._field_Left=(*(*_15026_m.alloc)._field_Left.alloc)._field_Model, ._field_Right=_17113_c, ._field_NotEq=true}), &__jule_any_type127);;
				(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_19717_model))))));
			}
		}
		_match_end_1c6413b22:;
	};
	return true;;
}



inline jule::Bool _1c0eea2d0_tryNeutralElement1(_1c0ee891b_exprOptimizer* _self_, jule::Ptr<_1c0c87952_BinaryExprModel>* _20738_m, jule::Ptr<_2021e617b_Const> _20763_c, jule::Ptr<_1c0c87457_OperandExprModel>* _20775_nc) {
	if (_2021ea900_IsStr(_20763_c.ptr())) {
		if ((!(_1c100c3d0_Str))) {
			return false;;
		};
		if (((_2021e8304_ReadStr(_20763_c)).empty() && ((*((*((*(_20738_m))))._field_Op))._field_Id == static_cast<jule::U64>(60LLU)))) {
			(*((*(_self_))._field_model))=(*((*(_20775_nc))))._field_Model;
			return true;;
		};
		return false;;
	};
	if (((!(_1c100b4ab_Math)) || (_2021e8d3d_AsF64(_20763_c) != 0LL))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_20738_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1c641c7b8:;
			{
				if (((*(_20775_nc)) == (*((*(_20738_m))))._field_Left)) {
					(*(*(_self_))._field_model.alloc)=(*((*(_20775_nc))))._field_Model;
					return true;;
				};
				(*(*(_self_))._field_model.alloc)=jule::Any(_20763_c, &__jule_any_type19);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1c641d478:;
			{
				_2021e90e6_SetI64(_20763_c, 0LL);
				(*(*(_self_))._field_model.alloc)=jule::Any(_20763_c, &__jule_any_type19);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1c641d4de:;
			{
				(*(*(_self_))._field_model.alloc)=(*((*(_20775_nc))))._field_Model;
				return true;;
			}
		}
		_match_end_1c641d346:;
	};
	return false;;
}



inline jule::Bool _1c0eea621_tryNeutralElement(_1c0ee891b_exprOptimizer* _self_, jule::Ptr<_1c0c87952_BinaryExprModel>* _25137_m) {
	{
		auto &_match_expr{ (*((*((*(_25137_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1c6421965:;
			{
				jule::Ptr<_2021e617b_Const> _25517_c = (*((*((*(_25137_m))))._field_Left))._field_Model.unsafe_cast_ptr<_2021e617b_Const>();;
				return _1c0eea2d0_tryNeutralElement1(_self_, _25137_m, _25517_c, &((*((*(_25137_m))))._field_Right));;
			}
		}
		_match_end_1c64218ee:;
	};
	{
		auto &_match_expr{ (*((*((*(_25137_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1c6421dc7:;
			{
				jule::Ptr<_2021e617b_Const> _26017_c = (*((*((*(_25137_m))))._field_Right))._field_Model.unsafe_cast_ptr<_2021e617b_Const>();;
				return _1c0eea2d0_tryNeutralElement1(_self_, _25137_m, _26017_c, &((*((*(_25137_m))))._field_Left));;
			}
		}
		_match_end_1c6421d61:;
	};
	return false;;
}



inline void _1c0eea8c9_checkBinaryForBoundary(_1c0ee891b_exprOptimizer* _self_, jule::Ptr<_1c0c87952_BinaryExprModel>* _26642_m) {
	if (((*((*(_self_))._field_data))._field_boundary == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*((*(_26642_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1c6425381:;
			{
				jule::Ptr<_1c0c902a6_BuiltinLenCallExprModel> _27217_blc = (*((*((*(_26642_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1c0c902a6_BuiltinLenCallExprModel>();;
				if ((!(_1c100a0d1_isBoundaryValidType((*((*(_27217_blc))._field_Expr))._field_Kind)))) {
					return;;
				};
				if ((((*((*((*(_26642_m))))._field_Op))._field_Id != static_cast<jule::U64>(70LLU)) && ((*(*((*(_26642_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(50LLU)))) {
					return;;
				};
				if (((*(*((*(_26642_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_26642_m))))._field_Right))._field_Model };
						
						if (_match_expr.type == &__jule_any_type19) {
							_case_begin_1c64285d7:;
							{
								jule::Ptr<_2021e617b_Const> _28425_c = jule::new_ptr<_2021e617b_Const>((*((*((*((*(_26642_m))))._field_Right))._field_Model.cast_ptr<_2021e617b_Const>(&__jule_any_type19))));;
								_2021ed1c7_Sub(_28425_c, (*(static__2021e65bb_NewI64(1LL))));
								_1c10083cb_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1c100a39a_getBoundaryVar((*(*_27217_blc.alloc)._field_Expr.alloc)._field_Model), jule::Any(_28425_c, &__jule_any_type19));
							}
						}
						_match_end_1c6428571:;
					};
					return;;
				};
				_1c10083cb_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1c100a39a_getBoundaryVar((*(*_27217_blc.alloc)._field_Expr.alloc)._field_Model), (*(*((*(_26642_m))))._field_Right.alloc)._field_Model);
				return;;
			}
		}
		_match_end_1c642531a:;
	};
	{
		auto &_match_expr{ (*((*((*(_26642_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1c64258c0:;
			{
				jule::Ptr<_1c0c902a6_BuiltinLenCallExprModel> _29517_blc = (*((*((*(_26642_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1c0c902a6_BuiltinLenCallExprModel>();;
				if ((!(_1c100a0d1_isBoundaryValidType((*(*(_29517_blc))._field_Expr.alloc)._field_Kind)))) {
					return;;
				};
				if ((((*(*((*(_26642_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(69LLU)) && ((*(*((*(_26642_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(50LLU)))) {
					return;;
				};
				if (((*(*((*(_26642_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_26642_m))))._field_Left))._field_Model };
						
						if (_match_expr.type == &__jule_any_type19) {
							_case_begin_1c643005b:;
							{
								jule::Ptr<_2021e617b_Const> _30725_c = jule::new_ptr<_2021e617b_Const>((*((*((*((*(_26642_m))))._field_Left))._field_Model.cast_ptr<_2021e617b_Const>(&__jule_any_type19))));;
								_2021ed1c7_Sub(_30725_c, (*(static__2021e65bb_NewI64(1LL))));
								_1c10083cb_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1c100a39a_getBoundaryVar((*(*_29517_blc.alloc)._field_Expr.alloc)._field_Model), jule::Any(_30725_c, &__jule_any_type19));
							}
						}
						_match_end_1c642eee5:;
					};
					return;;
				};
				_1c10083cb_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1c100a39a_getBoundaryVar((*(*_29517_blc.alloc)._field_Expr.alloc)._field_Model), (*(*((*(_26642_m))))._field_Left.alloc)._field_Model);
				return;;
			}
		}
		_match_end_1c6425859:;
	};
}



inline void _1c0eeab82_checkBinaryForNil(_1c0ee891b_exprOptimizer* _self_, jule::Ptr<_1c0c87952_BinaryExprModel>* _31837_m) {
	if (((*((*(_self_))._field_data))._field_nils == nullptr)) {
		return;;
	};
	jule::Uintptr _32213_var = _1c0ee07e2_getNilVar((*((*((*(_31837_m))))._field_Left))._field_Model);;
	if ((_32213_var != 0LLU)) {
		if ((!(_1c0ee04a1_isNilValidType((*(*((*(_31837_m))))._field_Left.alloc)._field_Kind)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_31837_m))))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type19) {
				_case_begin_1c643589c:;
				{
					_1c0ede2a2_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _32213_var, ((*((*((*(_31837_m))))._field_Op))._field_Id == static_cast<jule::U64>(51LLU)));
				}
			}
			_match_end_1c6435836:;
		};
		return;;
	};
	_32213_var=_1c0ee07e2_getNilVar((*((*((*(_31837_m))))._field_Right))._field_Model);
	if ((_32213_var != 0LLU)) {
		if ((!(_1c0ee04a1_isNilValidType((*(*((*(_31837_m))))._field_Right.alloc)._field_Kind)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_31837_m))))._field_Left))._field_Model };
			
			if (_match_expr.type == &__jule_any_type19) {
				_case_begin_1c6438042:;
				{
					_1c0ede2a2_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _32213_var, ((*(*((*(_31837_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(51LLU)));
				}
			}
			_match_end_1c6437ecb:;
		};
		return;;
	};
}



inline void _1c0eeae3a_binary(_1c0ee891b_exprOptimizer* _self_, jule::Ptr<_1c0c87952_BinaryExprModel> _35025_m) {
	_1c0eea8c9_checkBinaryForBoundary(_self_, &(_35025_m));
	_1c0eeab82_checkBinaryForNil(_self_, &(_35025_m));
	static__1c0ee9356_optimizeData(&((*((*(_35025_m))._field_Left))._field_Model), &((*(_self_))._field_data));
	static__1c0ee9356_optimizeData(&((*((*_35025_m.alloc)._field_Right))._field_Model), &((*(_self_))._field_data));
	if (_1c100c18d_Cond) {
		{
			
			if (_1c0ee9d29_strCond(_self_, _35025_m) || _1c0ee99d8_boolCond(_self_, &(_35025_m)) || _1c0ee9697_selfCmpCond(_self_, &(_35025_m))) {
				_case_begin_1c643ac48:;
				{
					return;;
				}
			}
			_match_end_1c643ab7c:;
		};
	};
	if (_1c0eea621_tryNeutralElement(_self_, &(_35025_m))) {
		return;;
	};
	if ((!(_1c100b4ab_Math))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_35025_m))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1c643bb17:;
			{
				goto _match_end_1c643c035;
			}
		}
		else {
			_case_begin_1c643c08a:;
			{
				return;;
			}
		}
		_match_end_1c643c035:;
	};
	jule::Ptr<_1c0de09bc_Prim> _3869_lp = _1c0dda544_Prim((*(*_35025_m.alloc)._field_Left.alloc)._field_Kind.ptr());;
	if ((_3869_lp == nullptr)) {
		return;;
	};
	jule::Ptr<_1c0de09bc_Prim> _3909_rp = _1c0dda544_Prim((*(*_35025_m.alloc)._field_Right.alloc)._field_Kind);;
	if ((_3909_rp == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_35025_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1c643eb09:;
			{
				jule::Bool _39713_ok;
				jule::U64 _39717_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1c10022d7_checkForBitShiftOpt(&((*_35025_m.alloc)._field_Left), &((*_35025_m.alloc)._field_Right));
					_39713_ok = __jule_assign_result.__jule_result_arg0;
					_39717_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_39713_ok) {
					(*((*_35025_m.alloc)._field_Op))._field_Id=static_cast<jule::U64>(56LLU);
					(*(*_35025_m.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit("<<", 2);
					jule::Ptr<_2021e617b_Const> _40121_c = (*(*_35025_m.alloc)._field_Right.alloc)._field_Model.cast_ptr<_2021e617b_Const>(&__jule_any_type19);;
					_2021e939e_SetU64(_40121_c.ptr(), _39717_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1c643e730:;
			{
				jule::Bool _40813_ok;
				jule::U64 _40817_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1c10022d7_checkForBitShiftOpt(&((*_35025_m.alloc)._field_Left), &((*_35025_m.alloc)._field_Right));
					_40813_ok = __jule_assign_result.__jule_result_arg0;
					_40817_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_40813_ok) {
					(*((*_35025_m.alloc)._field_Op))._field_Id=static_cast<jule::U64>(57LLU);
					(*(*_35025_m.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit(">>", 2);
					jule::Ptr<_2021e617b_Const> _41221_c = (*(*_35025_m.alloc)._field_Right.alloc)._field_Model.cast_ptr<_2021e617b_Const>(&__jule_any_type19);;
					_2021e939e_SetU64(_41221_c.ptr(), _40817_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1c643e796:;
			{
				jule::Ptr<_2021e617b_Const> _41917_c = (*(*_35025_m.alloc)._field_Right.alloc)._field_Model.cast_ptr<_2021e617b_Const>(&__jule_any_type19);;
				if ((_2021e8d3d_AsF64(_41917_c.ptr()) == 2LL)) {
					(*((*_35025_m.alloc)._field_Op))._field_Id=static_cast<jule::U64>(65LLU);
					(*(*_35025_m.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit("&", 1);
					_2021e90e6_SetI64(_41917_c, 1LL);
					return;;
				};
			}
		}
		else {
			_case_begin_1c643e356:;
			{
				return;;
			}
		}
		_match_end_1c643e6b9:;
	};
	jule::Any _43413_model = jule::Any(jule::new_ptr<_1c0edb711_UnsafeBinaryExprModel>(_1c0edb711_UnsafeBinaryExprModel{._field_Node=_35025_m}), &__jule_any_type128);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_43413_model))))));
}



inline void _1c0eeb1e3_unary(_1c0ee891b_exprOptimizer* _self_, jule::Ptr<_1c0c87d2b_UnaryExprModel> _43824_m) {
	static__1c0ee9356_optimizeData(&((*((*(_43824_m))._field_Expr))._field_Model), &((*(_self_))._field_data));
	if ((!(_1c100bcc5_Ptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_43824_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1c6449394:;
			{
				{
					auto &_match_expr{ (*((*(_43824_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type110) {
						_case_begin_1c644a450:;
						{
							jule::Ptr<_1c0c87d2b_UnaryExprModel> _44721_um = (*((*(_43824_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1c0c87d2b_UnaryExprModel>();;
							if (((*((*(_44721_um))._field_Op))._field_Id == static_cast<jule::U64>(65LLU))) {
								(*((*(_self_))._field_model))=(*(*_44721_um.alloc)._field_Expr.alloc)._field_Model;
								return;;
							};
							return;;
						}
					}
					_match_end_1c644a3d9:;
				};
				if ((!(_1c100b764_Access))) {
					return;;
				};
				if ((((*((*(_self_))._field_data))._field_nils != nullptr) && _1c0ee04a1_isNilValidType((*(*_43824_m.alloc)._field_Expr.alloc)._field_Kind))) {
					jule::Uintptr _46117_var = _1c0ee07e2_getNilVar((*(*_43824_m.alloc)._field_Expr.alloc)._field_Model);;
					if (_1c0ede934_isSafe((*(*(_self_))._field_data.alloc)._field_nils, _46117_var)) {
						jule::Any _46325_model = jule::Any(jule::new_ptr<_1c0edca20_UnsafeDerefExprModel>(_1c0edca20_UnsafeDerefExprModel{._field_Base=_43824_m}), &__jule_any_type129);;
						(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_46325_model))))));
						return;;
					};
					_1c0ede2a2_pushVar((*(*(_self_))._field_data.alloc)._field_nils, _46117_var, true);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1c64497a1:;
			{
				{
					auto &_match_expr{ (*((*(_43824_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1c6450e4a:;
						{
							jule::Ptr<_1c0d4dde2_Var> _47321_v = (*((*(_43824_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1c0d4dde2_Var>();;
							if ((*(_47321_v))._field_Reference) {
								jule::Any _47525_model = jule::Any(jule::new_ptr<_1c0eda90d_RefExprModel>(_1c0eda90d_RefExprModel{._field_Var=_47321_v}), &__jule_any_type130);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_47525_model))))));
							};
						}
					}
					_match_end_1c6450dd4:;
				};
			}
		}
		_match_end_1c644965d:;
	};
}



inline void _1c0eeb49b_structureLit(_1c0ee891b_exprOptimizer* _self_, jule::Ptr<_1c0c88700_StructLitExprModel> _48231_m) {
	{
		auto expr = &((*(_48231_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c64512d0:;
		if (it != expr_end) {
			jule::Ptr<_1c0c88359_StructArgExprModel> _48321_arg = *it;
			{
				if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
					if (_1c1009d17_isBoundaryRiskyType((*((*(_48321_arg))._field_Expr))._field_Kind)) {
						_1c1009a4d_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), jule::Any(_48321_arg, &__jule_any_type131));
					};
				};
				if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
					_1c0eded1e_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*_48321_arg.alloc)._field_Expr.alloc)._field_Model);
				};
				if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
					_1c10046b3_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*_48321_arg.alloc)._field_Expr.alloc)._field_Model);
				};
				static__1c0ee9356_optimizeData(&((*(*_48321_arg.alloc)._field_Expr.alloc)._field_Model), &((*(_self_))._field_data));
			}
			_iter_next_1c64512d0:;
			++it;
			goto _iter_begin_1c64512d0;
		}
		_iter_end_1c64512d0:;
	};
}



inline void _1c0eeb754_allocStructure(_1c0ee891b_exprOptimizer* _self_, jule::Ptr<_1c0c889ec_AllocStructLitExprModel> _49933_m) {
	_1c0eeb49b_structureLit(_self_, (*(_49933_m))._field_Lit);
}



inline void _1c0eeba0c_casting(_1c0ee891b_exprOptimizer* _self_, jule::Ptr<_1c0c89080_CastingExprModel> _50326_m) {
	jule::Bool _5049_valid = _1c10049c1_isDynamicValidType((*(_50326_m))._field_ExprKind);;
	jule::Uintptr _5059_var = _1c1005241_getDynamicVar((*((*_50326_m.alloc)._field_Expr))._field_Model);;
	if (((_5049_valid && ((*((*(_self_))._field_data))._field_dynamic != nullptr)) && _1c10042c8_isFits((*(*(_self_))._field_data.alloc)._field_dynamic, _5059_var, (*_50326_m.alloc)._field_Kind))) {
		jule::Any _50717_model = jule::Any(jule::new_ptr<_1c0edcd1c_UnsafeCastingExprModel>(_1c0edcd1c_UnsafeCastingExprModel{._field_Base=_50326_m}), &__jule_any_type132);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_50717_model))))));
		return;;
	};
	static__1c0ee9356_optimizeData(&((*(*_50326_m.alloc)._field_Expr.alloc)._field_Model), &((*(_self_))._field_data));
	if ((((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr) && _5049_valid)) {
		_1c1003a8b_pushVar((*(*(_self_))._field_data.alloc)._field_dynamic, _5059_var, (*_50326_m.alloc)._field_Kind);
	};
}



inline void _1c0eebd70_args(_1c0ee891b_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1c0c976ed_ParamIns>> _51723_params, jule::Slice<jule::Any>* _51749_args) {
	{
		auto expr = _51749_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c645c693:;
		if (it != expr_end) {
			jule::I64 _51814_i = it - expr->begin();
			jule::Any _51821_arg = *it;
			{
				if ((_51814_i < _51723_params.len())) {
					jule::Ptr<_1c0c976ed_ParamIns> _52021_p = _51723_params[_51814_i];;
					if (((*((*(_52021_p))._field_Decl))._field_Mutable && (*(*_52021_p.alloc)._field_Decl.alloc)._field_Reference)) {
						if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
							if (_1c1009d17_isBoundaryRiskyType((*_52021_p.alloc)._field_Kind)) {
								_1c1009a4d_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), _51821_arg);
							};
						};
						if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
							_1c0eded1e_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), _51821_arg);
						};
						if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
							_1c10046b3_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), _51821_arg);
						};
					};
				};
				static__1c0ee9356_optimizeData(&(_51821_arg), &((*(_self_))._field_data));
				(*(_51749_args))[_51814_i]=_51821_arg;
			}
			_iter_next_1c645c693:;
			++it;
			_51814_i++;
			goto _iter_begin_1c645c693;
		}
		_iter_end_1c645c693:;
	};
}



inline void _1c0eec128_scope(_1c0ee891b_exprOptimizer* _self_, jule::Ptr<_1c0cd763e_Scope>* _54025_s) {
	jule::Ptr<_1c0ee1abd_scopeOptimizer> _54113_scopt = static__1c0ee2140_new((*(_54025_s)));;
	(*(_54113_scopt))._field_data=(*(_self_))._field_data;
	_1c0ee62a9_optimize(_54113_scopt);
}



inline void _1c0eec3d1_funcCall(_1c0ee891b_exprOptimizer* _self_, jule::Ptr<_1c0c89932_FnCallExprModel> _54627_m) {
	static__1c0ee9356_optimizeData(&((*(_54627_m))._field_Expr), &((*(_self_))._field_data));
	_1c0eebd70_args(_self_, (*((*_54627_m.alloc)._field_Func))._field_Params, &((*_54627_m.alloc)._field_Args));
	if (((*_54627_m.alloc)._field_Except != nullptr)) {
		_1c0eec128_scope(_self_, &((*_54627_m.alloc)._field_Except));
	};
}



inline void _1c0eec689_slice(_1c0ee891b_exprOptimizer* _self_, jule::Ptr<_1c0c89d0b_SliceExprModel> _55424_m) {
	_1c0eebd70_args(_self_, nullptr, &((*(_55424_m))._field_Elems));
}



inline void _1c0eec942_array(_1c0ee891b_exprOptimizer* _self_, jule::Ptr<_1c0c8cd20_ArrayExprModel> _55824_m) {
	if ((((*(_55824_m))._field_Elems.len() == 2LL) && ((*_55824_m.alloc)._field_Elems[1LL] == nullptr))) {
		jule::Any _56017_elem = (*_55824_m.alloc)._field_Elems[0LL];;
		static__1c0ee9356_optimizeData(&(_56017_elem), &((*(_self_))._field_data));
		(*_55824_m.alloc)._field_Elems[0LL]=_56017_elem;
	};
	_1c0eebd70_args(_self_, nullptr, &((*_55824_m.alloc)._field_Elems));
}



inline void _1c0eecbea_indexing(_1c0ee891b_exprOptimizer* _self_, jule::Ptr<_1c0c8a2b2_IndexingExprModel> _56727_m) {
	static__1c0ee9356_optimizeData(&((*((*(_56727_m))._field_Expr))._field_Model), &((*(_self_))._field_data));
	static__1c0ee9356_optimizeData(&((*((*_56727_m.alloc)._field_Index))._field_Model), &((*(_self_))._field_data));
	if ((!(_1c100b764_Access))) {
		return;;
	};
	jule::Bool _5749_array = (_1c0ddb314_Arr((*(*_56727_m.alloc)._field_Expr.alloc)._field_Kind.ptr()) != nullptr);;
	if ((_5749_array && _1c0da7401_IsConst((*_56727_m.alloc)._field_Index))) {
		jule::Any _57717_model = jule::Any(jule::new_ptr<_1c0edba96_UnsafeIndexingExprModel>(_1c0edba96_UnsafeIndexingExprModel{._field_Node=_56727_m}), &__jule_any_type133);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_57717_model))))));
		return;;
	};
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && _1c100a0d1_isBoundaryValidType((*(*_56727_m.alloc)._field_Expr.alloc)._field_Kind))) {
		jule::Uintptr _58313_var = _1c100a39a_getBoundaryVar((*(*_56727_m.alloc)._field_Expr.alloc)._field_Model);;
		if (_1c1008b18_fitsMaxSize((*(*(_self_))._field_data.alloc)._field_boundary, _58313_var, (*(*_56727_m.alloc)._field_Index.alloc)._field_Model)) {
			jule::Any _58521_model = jule::Any(jule::new_ptr<_1c0edba96_UnsafeIndexingExprModel>(_1c0edba96_UnsafeIndexingExprModel{._field_Node=_56727_m}), &__jule_any_type133);;
			(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_58521_model))))));
			return;;
		};
		_1c10083cb_pushVar((*(*(_self_))._field_data.alloc)._field_boundary, _58313_var, (*(*_56727_m.alloc)._field_Index.alloc)._field_Model);
	};
}



inline void _1c0eecea3_anonFunc(_1c0ee891b_exprOptimizer* _self_, jule::Ptr<_1c0c8a768_AnonFnExprModel> _59327_m) {
	_1c0eec128_scope(_self_, &((*((*(_59327_m))._field_Func))._field_Scope));
}



inline void _1c0eed25b_mapExpr(_1c0ee891b_exprOptimizer* _self_, jule::Ptr<_1c0c8b0e8_MapExprModel> _59726_m) {
	{
		auto expr = &((*(_59726_m))._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6470a3b:;
		if (it != expr_end) {
			jule::Ptr<_1c0c8ab42_KeyValPairExprModel> _59821_pair = *it;
			{
				static__1c0ee9356_optimizeData(&((*(_59821_pair))._field_Key), &((*(_self_))._field_data));
				static__1c0ee9356_optimizeData(&((*_59821_pair.alloc)._field_Val), &((*(_self_))._field_data));
			}
			_iter_next_1c6470a3b:;
			++it;
			goto _iter_begin_1c6470a3b;
		}
		_iter_end_1c6470a3b:;
	};
}



inline void _1c0eed514_slicing(_1c0ee891b_exprOptimizer* _self_, jule::Ptr<_1c0c8b67b_SlicingExprModel> _60426_m) {
	static__1c0ee9356_optimizeData(&((*(_60426_m))._field_Expr), &((*(_self_))._field_data));
	static__1c0ee9356_optimizeData(&((*_60426_m.alloc)._field_Left), &((*(_self_))._field_data));
	if (((*_60426_m.alloc)._field_Right != nullptr)) {
		static__1c0ee9356_optimizeData(&((*_60426_m.alloc)._field_Right), &((*(_self_))._field_data));
	};
}



inline void _1c0eed7bc_traitSub(_1c0ee891b_exprOptimizer* _self_, jule::Ptr<_1c0c8bc0e_TraitSubIdentExprModel> _61227_m) {
	static__1c0ee9356_optimizeData(&((*(_61227_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1c0eeda75_structureSub(_1c0ee891b_exprOptimizer* _self_, jule::Ptr<_1c0c8c5a0_StructSubIdentExprModel> _61631_m) {
	static__1c0ee9356_optimizeData(&((*((*(_61631_m))._field_Expr))._field_Model), &((*(_self_))._field_data));
}



inline void _1c0eedd2d_tuple(_1c0ee891b_exprOptimizer* _self_, jule::Ptr<_1c0c8d11c_TupleExprModel> _62024_m) {
	{
		auto expr = &((*(_62024_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6474d2b:;
		if (it != expr_end) {
			jule::Ptr<_1c0da69e9_Data> _62121_d = *it;
			{
				static__1c0ee9356_optimizeData(&((*(_62121_d))._field_Model), &((*(_self_))._field_data));
			}
			_iter_next_1c6474d2b:;
			++it;
			goto _iter_begin_1c6474d2b;
		}
		_iter_end_1c6474d2b:;
	};
}



inline void _1c0eee0d6_newCall(_1c0ee891b_exprOptimizer* _self_, jule::Ptr<_1c0c8dc99_BuiltinNewCallExprModel> _62626_m) {
	if (((*(_62626_m))._field_Init != nullptr)) {
		static__1c0ee9356_optimizeData(&((*_62626_m.alloc)._field_Init), &((*(_self_))._field_data));
	};
}



inline void _1c0eee38e_outCall(_1c0ee891b_exprOptimizer* _self_, jule::Ptr<_1c0c8d4e6_BuiltinOutCallExprModel> _63226_m) {
	static__1c0ee9356_optimizeData(&((*(_63226_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1c0eee647_outlnCall(_1c0ee891b_exprOptimizer* _self_, jule::Ptr<_1c0c8d8c0_BuiltinOutlnCallExprModel> _63628_m) {
	static__1c0ee9356_optimizeData(&((*(_63628_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1c0eee900_panicCall(_1c0ee891b_exprOptimizer* _self_, jule::Ptr<_1c0c8e173_BuiltinPanicCallExprModel> _64028_m) {
	static__1c0ee9356_optimizeData(&((*(_64028_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1c0eeeba8_assertCall(_1c0ee891b_exprOptimizer* _self_, jule::Ptr<_1c0c8e629_BuiltinAssertCallExprModel> _64429_m) {
	static__1c0ee9356_optimizeData(&((*(_64429_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1c0eeee61_errorCall(_1c0ee891b_exprOptimizer* _self_, jule::Ptr<_1c0c91230_BuiltinErrorCallExprModel> _64828_m) {
	static__1c0ee9356_optimizeData(&((*((*(_64828_m))._field_Err))._field_Model), &((*(_self_))._field_data));
}



inline void _1c1000219_makeCall(_1c0ee891b_exprOptimizer* _self_, jule::Ptr<_1c0c8ead0_BuiltinMakeCallExprModel> _65227_m) {
	if (((*(_65227_m))._field_Len != nullptr)) {
		static__1c0ee9356_optimizeData(&((*_65227_m.alloc)._field_Len), &((*(_self_))._field_data));
	};
	if (((*_65227_m.alloc)._field_Cap != nullptr)) {
		static__1c0ee9356_optimizeData(&((*_65227_m.alloc)._field_Cap), &((*(_self_))._field_data));
	};
}



inline void _1c10004c2_appendCall(_1c0ee891b_exprOptimizer* _self_, jule::Ptr<_1c0c8eea9_BuiltinAppendCallExprModel> _66129_m) {
	static__1c0ee9356_optimizeData(&((*(_66129_m))._field_Dest), &((*(_self_))._field_data));
	static__1c0ee9356_optimizeData(&((*_66129_m.alloc)._field_Elements), &((*(_self_))._field_data));
}



inline void _1c100077a_lenCall(_1c0ee891b_exprOptimizer* _self_, jule::Ptr<_1c0c902a6_BuiltinLenCallExprModel> _66626_m) {
	static__1c0ee9356_optimizeData(&((*((*(_66626_m))._field_Expr))._field_Model), &((*(_self_))._field_data));
}



inline void _1c1000a33_capCall(_1c0ee891b_exprOptimizer* _self_, jule::Ptr<_1c0c905a3_BuiltinCapCallExprModel> _67026_m) {
	static__1c0ee9356_optimizeData(&((*((*(_67026_m))._field_Expr))._field_Model), &((*(_self_))._field_data));
}



inline void _1c1000cdb_deleteCall(_1c0ee891b_exprOptimizer* _self_, jule::Ptr<_1c0c9097c_BuiltinDeleteCallExprModel> _67429_m) {
	static__1c0ee9356_optimizeData(&((*((*(_67429_m))._field_Dest))._field_Model), &((*(_self_))._field_data));
	if (((*_67429_m.alloc)._field_Key != nullptr)) {
		static__1c0ee9356_optimizeData(&((*(*_67429_m.alloc)._field_Key.alloc)._field_Model), &((*(_self_))._field_data));
	};
}



inline void _1c1001094_sizeof(_1c0ee891b_exprOptimizer* _self_, jule::Ptr<_1c0c918d4_SizeofExprModel> _68125_m) {
	static__1c0ee9356_optimizeData(&((*(_68125_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1c100134c_alignof(_1c0ee891b_exprOptimizer* _self_, jule::Ptr<_1c0c91ac1_AlignofExprModel> _68526_m) {
	static__1c0ee9356_optimizeData(&((*(_68526_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1c1001605_integratedToStr(_1c0ee891b_exprOptimizer* _self_, jule::Ptr<_1c0c92165_IntegratedToStrExprModel> _68934_m) {
	static__1c0ee9356_optimizeData(&((*(_68934_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1c10018ad_free(_1c0ee891b_exprOptimizer* _self_, jule::Ptr<_1c0c9283b_FreeExprModel> _69323_m) {
	static__1c0ee9356_optimizeData(&((*(_69323_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1c1001b66_backendEmit(_1c0ee891b_exprOptimizer* _self_, jule::Ptr<_1c0c9253e_BackendEmitExprModel> _69730_m) {
	_1c0eebd70_args(_self_, nullptr, &((*(_69730_m))._field_Exprs));
}



inline void _1c1001d64_do(_1c0ee891b_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_model)) };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1c6483543:;
			{
				_1c0eeae3a_binary(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1c0c87952_BinaryExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1c6482ed2:;
			{
				_1c0eeb1e3_unary(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1c0c87d2b_UnaryExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1c64835ba:;
			{
				_1c0eeb49b_structureLit(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1c0c88700_StructLitExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1c6483631:;
			{
				_1c0eeb754_allocStructure(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1c0c889ec_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1c64836a8:;
			{
				_1c0eeba0c_casting(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1c0c89080_CastingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1c6483730:;
			{
				_1c0eec3d1_funcCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1c0c89932_FnCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1c64837a7:;
			{
				_1c0eec689_slice(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1c0c89d0b_SliceExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1c648382e:;
			{
				_1c0eec942_array(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1c0c8cd20_ArrayExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1c64838a6:;
			{
				_1c0eecbea_indexing(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1c0c8a2b2_IndexingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1c648392d:;
			{
				_1c0eecea3_anonFunc(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1c0c8a768_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1c64839a5:;
			{
				_1c0eed25b_mapExpr(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1c0c8b0e8_MapExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1c6483a2c:;
			{
				_1c0eed514_slicing(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1c0c8b67b_SlicingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1c6483aa4:;
			{
				_1c0eed7bc_traitSub(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1c0c8bc0e_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1c6483b2b:;
			{
				_1c0eeda75_structureSub(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1c0c8c5a0_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1c6483ba3:;
			{
				_1c0eedd2d_tuple(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1c0c8d11c_TupleExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1c6483c2a:;
			{
				_1c0eee38e_outCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1c0c8d4e6_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1c6483ca2:;
			{
				_1c0eee647_outlnCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1c0c8d8c0_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1c6483d29:;
			{
				_1c0eee0d6_newCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1c0c8dc99_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1c6483da1:;
			{
				_1c0eee900_panicCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1c0c8e173_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1c6483e28:;
			{
				_1c0eeeba8_assertCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1c0c8e629_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1c6483ea0:;
			{
				_1c0eeee61_errorCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1c0c91230_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1c6484027:;
			{
				_1c1000219_makeCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1c0c8ead0_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1c648409e:;
			{
				_1c10004c2_appendCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1c0c8eea9_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1c6484126:;
			{
				_1c100077a_lenCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1c0c902a6_BuiltinLenCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1c648419d:;
			{
				_1c1000a33_capCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1c0c905a3_BuiltinCapCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1c6484225:;
			{
				_1c1000cdb_deleteCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1c0c9097c_BuiltinDeleteCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1c648429c:;
			{
				_1c1001094_sizeof(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1c0c918d4_SizeofExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1c6484324:;
			{
				_1c100134c_alignof(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1c0c91ac1_AlignofExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1c648439b:;
			{
				_1c1001605_integratedToStr(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1c0c92165_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1c6484423:;
			{
				_1c10018ad_free(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1c0c9283b_FreeExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1c648449a:;
			{
				_1c1001b66_backendEmit(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1c0c9253e_BackendEmitExprModel>());
			}
		}
		_match_end_1c648329b:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c0ee891b_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c10032d8_dynamicVar _Src) {
	_Stream << "dynamicVar{";
	_Stream << "var:" << _Src._field_var << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline void _1c1003a8b_pushVar(jule::Ptr<_1c1003629_dynamic> _self_, jule::Uintptr _3127_var, jule::Ptr<_1c0dd7de3_TypeKind> _3145_kind) {
	if (((!(_1c100d249_Dynamic)) || (_3127_var == 0LLU))) {
		return;;
	};
	_3145_kind=_1c1004e00_isTypeGuaranteedDynamicData(&(_self_), _3145_kind, nullptr);
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c64a6a0b:;
		if (it != expr_end) {
			_1c10032d8_dynamicVar _3721_v = *it;
			{
				if ((_3721_v._field_var == _3127_var)) {
					_3721_v._field_kind=_3145_kind;
					return;;
				};
			}
			_iter_next_1c64a6a0b:;
			++it;
			goto _iter_begin_1c64a6a0b;
		}
		_iter_end_1c64a6a0b:;
	};
	{
		auto expr = &((*_self_.alloc)._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c64a6e07:;
		if (it != expr_end) {
			_1c10032d8_dynamicVar _4421_v = *it;
			{
				if ((_4421_v._field_var == 0LLU)) {
					({
						jule::Uintptr ___jule_assign_arg = _3127_var;
						jule::Ptr<_1c0dd7de3_TypeKind> _1___jule_assign_arg = _3145_kind;
						_4421_v._field_var = ___jule_assign_arg;
						_4421_v._field_kind = _1___jule_assign_arg;
					});
					return;;
				};
			}
			_iter_next_1c64a6e07:;
			++it;
			goto _iter_begin_1c64a6e07;
		}
		_iter_end_1c64a6e07:;
	};
	(*_self_.alloc)._field_vars=jule::append((*_self_.alloc)._field_vars,jule::Slice<_1c10032d8_dynamicVar>::make({_1c10032d8_dynamicVar{._field_var=_3127_var, ._field_kind=_3145_kind}}));
}



inline jule::Bool _1c1003dcc_removeVar(_1c1003629_dynamic* _self_, jule::Uintptr _5428_var) {
	if ((_5428_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c64a9657:;
			if (it != expr_end) {
				_1c10032d8_dynamicVar _5625_v = *it;
				{
					if ((_5625_v._field_var == _5428_var)) {
						_5625_v._field_var=0LLU;
						_5625_v._field_kind=nullptr;
						return true;;
					};
				}
				_iter_next_1c64a9657:;
				++it;
				goto _iter_begin_1c64a9657;
			}
			_iter_end_1c64a9657:;
		};
	};
	return false;;
}



inline jule::Bool _1c10042c8_isFits(_1c1003629_dynamic* _self_, jule::Uintptr _6825_var, jule::Ptr<_1c0dd7de3_TypeKind> _6839_kind) {
	if ((_6825_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c64aaed8:;
			if (it != expr_end) {
				_1c10032d8_dynamicVar _7020_v = *it;
				{
					if ((_7020_v._field_var == _6825_var)) {
						return ((_7020_v._field_kind != nullptr) && _1c0dd85ec_Equal(_7020_v._field_kind, _6839_kind));;
					};
				}
				_iter_next_1c64aaed8:;
				++it;
				goto _iter_begin_1c64aaed8;
			}
			_iter_end_1c64aaed8:;
		};
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c1003629_dynamic _Src) {
	_Stream << "dynamic{";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline _1c1006077_dataCheckpoint _1c10068e6_getCheckpoint(_1c1006572_data* _self_) {
	_1c1006077_dataCheckpoint _2513_c = _1c1006077_dataCheckpoint{};;
	_2513_c._field_boundary._field_vars=jule::append(jule::Slice<_1c1007b28_boundaryVar>::alloc(0LL, 0LL),(*((*(_self_))._field_boundary))._field_vars);
	{
		auto expr = &(_2513_c._field_boundary._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c64acd64:;
		if (it != expr_end) {
			jule::I64 _2713_i = it - expr->begin();
			{
				_2513_c._field_boundary._field_vars[_2713_i]._field_maxSize=jule::append(jule::Slice<jule::Any>::alloc(0LL, 0LL, jule::Any(nullptr)),_2513_c._field_boundary._field_vars[_2713_i]._field_maxSize);
			}
			_iter_next_1c64acd64:;
			++it;
			_2713_i++;
			goto _iter_begin_1c64acd64;
		}
		_iter_end_1c64acd64:;
	};
	_2513_c._field_nils._field_vars=jule::append(jule::Slice<_1c0edd9ee_nilVar>::alloc(0LL, 0LL),(*((*(_self_))._field_nils))._field_vars);
	_2513_c._field_dynamic._field_vars=jule::append(jule::Slice<_1c10032d8_dynamicVar>::alloc(0LL, 0LL),(*((*(_self_))._field_dynamic))._field_vars);
	return _2513_c;;
}



inline void _1c1006b9e_loadCheckpoint(_1c1006572_data* _self_, _1c1006077_dataCheckpoint* _3538_c) {
	(*((*(_self_))._field_boundary))=(*(_3538_c))._field_boundary;
	(*((*(_self_))._field_nils))=(*(_3538_c))._field_nils;
	(*((*(_self_))._field_dynamic))=(*(_3538_c))._field_dynamic;
}





std::ostream &operator<<(std::ostream &_Stream, _1c1006572_data _Src) {
	_Stream << "data{";
	_Stream << "boundary:" << _Src._field_boundary << ", ";
	_Stream << "nils:" << _Src._field_nils << ", ";
	_Stream << "dynamic:" << _Src._field_dynamic;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c1007b28_boundaryVar _Src) {
	_Stream << "boundaryVar{";
	_Stream << "var:" << _Src._field_var << ", ";
	_Stream << "maxSize:" << _Src._field_maxSize;
	_Stream << "}";
	return _Stream;
}



inline void _1c10083cb_pushVar(_1c1007e69_boundary* _self_, jule::Uintptr _2426_var, jule::Any _2444_maxSize) {
	if (((!(_1c100b764_Access)) || (_2426_var == 0LLU))) {
		return;;
	};
	if ((!(_1c1008ed1_isValidBoundaryInfo(_2444_maxSize)))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c64c1e55:;
		if (it != expr_end) {
			_1c1007b28_boundaryVar _3221_v = *it;
			{
				if ((_3221_v._field_var == _2426_var)) {
					{
						auto expr = &(_3221_v._field_maxSize);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c64c2bd1:;
						if (it != expr_end) {
							jule::I64 _3421_i = it - expr->begin();
							jule::Any _3424_max = *it;
							{
								if (_1c100971d_fitsSize(_2444_maxSize, _3424_max)) {
									_3221_v._field_maxSize[_3421_i]=_2444_maxSize;
									return;;
								};
							}
							_iter_next_1c64c2bd1:;
							++it;
							_3421_i++;
							goto _iter_begin_1c64c2bd1;
						}
						_iter_end_1c64c2bd1:;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = _3221_v._field_maxSize; __jule_push_dest.push(_2444_maxSize); };
					return;;
				};
			}
			_iter_next_1c64c1e55:;
			++it;
			goto _iter_begin_1c64c1e55;
		}
		_iter_end_1c64c1e55:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c64c27a2:;
		if (it != expr_end) {
			_1c1007b28_boundaryVar _4621_v = *it;
			{
				if ((_4621_v._field_var == 0LLU)) {
					_4621_v._field_var=_2426_var;
					{ jule::Slice<jule::Any> &__jule_push_dest = _4621_v._field_maxSize; __jule_push_dest.push(_2444_maxSize); };
					return;;
				};
			}
			_iter_next_1c64c27a2:;
			++it;
			goto _iter_begin_1c64c27a2;
		}
		_iter_end_1c64c27a2:;
	};
	{ jule::Slice<_1c1007b28_boundaryVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1c1007b28_boundaryVar{._field_var=_2426_var, ._field_maxSize=jule::Slice<jule::Any>::make({_2444_maxSize})}); };
}



inline jule::Bool _1c1008b18_fitsMaxSize(_1c1007e69_boundary* _self_, jule::Uintptr _7130_var, jule::Any _7144_expr) {
	if ((_7130_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c64c7565:;
			if (it != expr_end) {
				_1c1007b28_boundaryVar _7320_v = *it;
				{
					if ((_7320_v._field_var == _7130_var)) {
						return (_1c1009399_fitsMaxSize(_7320_v._field_maxSize, _7144_expr) != -1LL);;
					};
				}
				_iter_next_1c64c7565:;
				++it;
				goto _iter_begin_1c64c7565;
			}
			_iter_end_1c64c7565:;
		};
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c1007e69_boundary _Src) {
	_Stream << "boundary{";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c135247d_Optimizer> static__1c1352901_New(jule::Ptr<_1c1989301_IR>* _2624_ir) {
	return jule::new_ptr<_1c135247d_Optimizer>(_1c135247d_Optimizer{._field_ir=(*(_2624_ir))});;
}



inline void _1c1352ba9_optimizeGlobal(_1c135247d_Optimizer* _self_, jule::Ptr<_1c0d4dde2_Var>* _3238_v) {
	if ((!((*((*(_3238_v))))._field_Binded))) {
		static__1c0ee906a_optimize(&((*((*((*((*(_3238_v))))._field_Value))._field_Data))._field_Model));
	};
}



inline void _1c1352e62_optimizeFunction(_1c135247d_Optimizer* _self_, jule::Ptr<_1c0c95795_Fn>* _3840_func) {
	if ((*((*(_3840_func))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_3840_func))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c64cc5c0:;
		if (it != expr_end) {
			jule::Ptr<_1c0c98699_FnIns> _4221_ins = *it;
			{
				jule::Ptr<_1c0ee1abd_scopeOptimizer> _4317_so = static__1c0ee2140_new((*(_4221_ins))._field_Scope);;
				_1c0ee62a9_optimize(_4317_so);
			}
			_iter_next_1c64cc5c0:;
			++it;
			goto _iter_begin_1c64cc5c0;
		}
		_iter_end_1c64cc5c0:;
	};
}



inline void _1c135321a_optimizeStruct(_1c135247d_Optimizer* _self_, jule::Ptr<_1c0c807c4_Struct>* _4838_s) {
	if ((*((*(_4838_s))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_4838_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c64cdc75:;
		if (it != expr_end) {
			jule::Ptr<_1c0c83552_StructIns> _5221_ins = *it;
			{
				{
					auto expr = &((*(_5221_ins))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c64ce66b:;
					if (it != expr_end) {
						jule::Ptr<_1c0c829a2_FieldIns> _5325_f = *it;
						{
							if (((*(_5325_f))._field_Default != nullptr)) {
								static__1c0ee906a_optimize(&((*(*_5325_f.alloc)._field_Default.alloc)._field_Model));
							};
						}
						_iter_next_1c64ce66b:;
						++it;
						goto _iter_begin_1c64ce66b;
					}
					_iter_end_1c64ce66b:;
				};
				{
					auto expr = &((*_5221_ins.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c64ceaab:;
					if (it != expr_end) {
						jule::Ptr<_1c0c95795_Fn> _5825_m = *it;
						{
							_1c1352e62_optimizeFunction(_self_, &(_5825_m));
						}
						_iter_next_1c64ceaab:;
						++it;
						goto _iter_begin_1c64ceaab;
					}
					_iter_end_1c64ceaab:;
				};
			}
			_iter_next_1c64cdc75:;
			++it;
			goto _iter_begin_1c64cdc75;
		}
		_iter_end_1c64cdc75:;
	};
}



inline void _1c13534c3_optimizeGlobals(_1c135247d_Optimizer* _self_, jule::Ptr<_1c0d0c6a8_Package>* _6439_p) {
	{
		auto expr = &((*((*(_6439_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c64d0eec:;
		if (it != expr_end) {
			jule::Ptr<_1c0da1681_SymbolTable> _6521_f = *it;
			{
				{
					auto expr = &((*(_6521_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c64d1bce:;
					if (it != expr_end) {
						jule::Ptr<_1c0d4dde2_Var> _6625_v = *it;
						{
							_1c1352ba9_optimizeGlobal(_self_, &(_6625_v));
						}
						_iter_next_1c64d1bce:;
						++it;
						goto _iter_begin_1c64d1bce;
					}
					_iter_end_1c64d1bce:;
				};
			}
			_iter_next_1c64d0eec:;
			++it;
			goto _iter_begin_1c64d0eec;
		}
		_iter_end_1c64d0eec:;
	};
}



inline void _1c135377b_optimizeFunctions(_1c135247d_Optimizer* _self_, jule::Ptr<_1c0d0c6a8_Package>* _7241_p) {
	{
		auto expr = &((*((*(_7241_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c64d2262:;
		if (it != expr_end) {
			jule::Ptr<_1c0da1681_SymbolTable> _7321_f = *it;
			{
				{
					auto expr = &((*(_7321_f))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c64d30cb:;
					if (it != expr_end) {
						jule::Ptr<_1c0c95795_Fn> _7425_func = *it;
						{
							_1c1352e62_optimizeFunction(_self_, &(_7425_func));
						}
						_iter_next_1c64d30cb:;
						++it;
						goto _iter_begin_1c64d30cb;
					}
					_iter_end_1c64d30cb:;
				};
			}
			_iter_next_1c64d2262:;
			++it;
			goto _iter_begin_1c64d2262;
		}
		_iter_end_1c64d2262:;
	};
}



inline void _1c1353a34_optimizeStructs(_1c135247d_Optimizer* _self_, jule::Ptr<_1c0d0c6a8_Package>* _8039_p) {
	{
		auto expr = &((*((*(_8039_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c64d365e:;
		if (it != expr_end) {
			jule::Ptr<_1c0da1681_SymbolTable> _8121_f = *it;
			{
				{
					auto expr = &((*(_8121_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c64d44c8:;
					if (it != expr_end) {
						jule::Ptr<_1c0c807c4_Struct> _8225_s = *it;
						{
							_1c135321a_optimizeStruct(_self_, &(_8225_s));
						}
						_iter_next_1c64d44c8:;
						++it;
						goto _iter_begin_1c64d44c8;
					}
					_iter_end_1c64d44c8:;
				};
			}
			_iter_next_1c64d365e:;
			++it;
			goto _iter_begin_1c64d365e;
		}
		_iter_end_1c64d365e:;
	};
}



inline void _1c1353cdc_optimizePackage(_1c135247d_Optimizer* _self_, jule::Ptr<_1c0d0c6a8_Package>* _8839_p) {
	_1c13534c3_optimizeGlobals(_self_, _8839_p);
	_1c135377b_optimizeFunctions(_self_, _8839_p);
	_1c1353a34_optimizeStructs(_self_, _8839_p);
}



inline void _1c1353eda_Optimize(_1c135247d_Optimizer* _self_) {
	_1c1354282_detectEnabled();
	if (_1c100ae06_Deadcode) {
		_1c1344706_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1c1352280_scopeEnabled || _1c1351e94_exprEnabled)) {
		{
			auto expr = &((*((*(_self_))._field_ir))._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c64d64b9:;
			if (it != expr_end) {
				jule::Ptr<_1c0d09782_ImportInfo> _10425_u = *it;
				{
					if ((!((*(_10425_u))._field_Binded))) {
						_1c1353cdc_optimizePackage(_self_, &((*_10425_u.alloc)._field_Package));
					};
				}
				_iter_next_1c64d64b9:;
				++it;
				goto _iter_begin_1c64d64b9;
			}
			_iter_end_1c64d64b9:;
		};
		_1c1353cdc_optimizePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	};
	if (_1c100ae06_Deadcode) {
		_1c1349c6c_EliminateScopes(&((*(_self_))._field_ir));
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c135247d_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1c0e56abb_Reset(void) {
	jule::out(jule::Str::lit("\033[0m", 4));
}



inline void static__1c0e57eeb_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__1c0e56abb_Reset();
}





std::ostream &operator<<(std::ostream &_Stream, _1c0e57c43_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1c0e59904_LogFlat(_21b8c54de_Log* _1424_l) {
	jule::outln((*(_1424_l))._field_Text);
}



inline void static__1c0e59b35_LogError(_21b8c54de_Log* _1925_l) {
	jule::out(jule::Str::lit("\033[31m", 5));
	jule::out(jule::Str::lit("error: ", 7));
	jule::out((*(_1925_l))._field_Text);
	static__1c0e56abb_Reset();
	if (((*(_1925_l))._field_Path.len() != 0LL)) {
		jule::out(jule::Str::lit("\n  --> ", 7));
		jule::out((*(_1925_l))._field_Path);
	};
	if ((((*(_1925_l))._field_Row != 0LL) && ((*(_1925_l))._field_Column != 0LL))) {
		jule::out(jule::Str::lit(":", 1));
		jule::out(_2021d80b3_Itoa((*(_1925_l))._field_Row));
		jule::out(jule::Str::lit(":", 1));
		jule::out(_2021d80b3_Itoa((*(_1925_l))._field_Column));
	};
	if (((*(_1925_l))._field_Line.len() != 0LL)) {
		jule::Str _3617_line = _21b871c4e_TrimLeft((*(_1925_l))._field_Line, jule::Str::lit("\r\n\v\b ", 5));;
		jule::I64 _3717_offset = (((*(_1925_l))._field_Line.len() - _3617_line.len()) + 1LL);;
		jule::I64 _3817_oldLen = _3617_line.len();;
		_3617_line=_21b871c4e_TrimLeft(_3617_line, jule::Str::lit("\t", 1));
		if ((_3817_oldLen != _3617_line.len())) {
			_3717_offset+=((_3817_oldLen - _3617_line.len()) << 3LLU);
		};
		jule::out(jule::Str::lit("\n  ", 3));
		jule::Str _4413_row = _2021d80b3_Itoa((*(_1925_l))._field_Row);;
		jule::out(_4413_row);
		jule::out(jule::Str::lit(" | ", 3));
		jule::out(_3617_line);
		jule::out(jule::Str::lit("\n  ", 3));
		jule::out(_21b86a264_Repeat(jule::Str::lit(" ", 1), _4413_row.len()));
		jule::out(jule::Str::lit(" | ", 3));
		jule::out(_21b86a264_Repeat(jule::Str::lit(" ", 1), ((*(_1925_l))._field_Column - _3717_offset)));
		jule::out(jule::Str::lit("^", 1));
		if (((*(_1925_l))._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str::lit("\n  ", 3));
			jule::out(_21b86a264_Repeat(jule::Str::lit(" ", 1), _4413_row.len()));
			jule::out(jule::Str::lit(" | ", 3));
			static__1c0e57eeb_Print(jule::Str::lit("\033[95m", 5), jule::Str::lit("suggestion: ", 12));
			jule::out((*(_1925_l))._field_Suggestion);
		};
	};
	jule::outln(jule::Str::lit("\n", 1));
}



inline void static__1c0e59d66_Log(_21b8c54de_Log* _6520_l) {
	{
		auto &_match_expr{ (*(_6520_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1c64e388e:;
			{
				static__1c0e59904_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1c64e4065:;
			{
				static__1c0e59b35_LogError(_6520_l);
			}
		}
		_match_end_1c64e3e88:;
	};
}



inline void static__1c0e5a097_PrintLogs(jule::Slice<_21b8c54de_Log>* _7526_logs) {
	{
		auto expr = _7526_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c64e4a6b:;
		if (it != expr_end) {
			_21b8c54de_Log *_7616_l = it;
			{
				static__1c0e59d66_Log(_7616_l);
			}
			_iter_next_1c64e4a6b:;
			++it;
			goto _iter_begin_1c64e4a6b;
		}
		_iter_end_1c64e4a6b:;
	};
	jule::out(jule::Str::lit("=== ", 4));
	jule::out(_2021d80b3_Itoa((*(_7526_logs)).len()));
	jule::outln(jule::Str::lit(" error generated ===", 20));
}





std::ostream &operator<<(std::ostream &_Stream, _1c0e59629_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c2540cec_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _1c25414c3_Time static__1c254187a_Unix(jule::U64 _9120_sec) {
	return _1c25414c3_Time{._field_sec=_9120_sec};;
}



inline _1c25414c3_Time static__1c2541a89_Now(void) {
	return static__1c254187a_Unix(_1c25435b3_unix());;
}



inline _1c2540cec_AbsTime _1c2543272_Abs(_1c25414c3_Time* _self_) {
	jule::U64 _1279_secs = ((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _12813_days = (_1279_secs / 86400LLU);;
	jule::U64 _12913_remSecs = (_1279_secs % 86400LL);;
	if ((_12913_remSecs < 0LLU)) {
		_12913_remSecs+=86400LLU;
		(_12813_days)--;
	};
	jule::U64 _13513_qcCycles = (_12813_days / 146097LLU);;
	jule::U64 _13613_remDays = (_12813_days % 146097LL);;
	if ((_13613_remDays < 0LLU)) {
		_13613_remDays+=146097LLU;
		(_13513_qcCycles)--;
	};
	jule::U64 _14213_cCycles = (_13613_remDays / 36524LLU);;
	if ((_14213_cCycles == 4LLU)) {
		(_14213_cCycles)--;
	};
	_13613_remDays-=(_14213_cCycles * 36524LLU);
	jule::U64 _14813_qCycles = (_13613_remDays / 1461LLU);;
	if ((_14813_qCycles == 25LLU)) {
		(_14813_qCycles)--;
	};
	_13613_remDays-=(_14813_qCycles * 1461LLU);
	jule::U64 _15413_remYears = (_13613_remDays / 365LLU);;
	if ((_15413_remYears == 4LLU)) {
		(_15413_remYears)--;
	};
	_13613_remDays-=(_15413_remYears * 365LLU);
	jule::U64 _16013_leap = static_cast<jule::U64>(0LLU);;
	if (((_15413_remYears == 0LLU) && ((_14813_qCycles > 0LLU) || (_14213_cCycles == 0LLU)))) {
		_16013_leap=1LLU;
	};
	jule::U64 _16413_yDay = (((_13613_remDays + 31LLU) + 28LLU) + _16013_leap);;
	if ((_16413_yDay >= (365LLU + _16013_leap))) {
		_16413_yDay-=(365LLU + _16013_leap);
	};
	jule::U64 _16913_months = static_cast<jule::U64>(0LLU);;
	for (; (_1c254025d_mdays[static_cast<jule::I64>(_16913_months)] <= _13613_remDays); (_16913_months)++) {
		{
			_13613_remDays-=_1c254025d_mdays[static_cast<jule::I64>(_16913_months)];
		}
	_iter_next_1c6522956:;
	}
	_iter_end_1c6522956:;;
	_1c2540cec_AbsTime _17413_t = _1c2540cec_AbsTime{};;
	_17413_t._field_Year=((((_15413_remYears + (4LLU * _14813_qCycles)) + (100LLU * _14213_cCycles)) + (400LLU * _13513_qcCycles)) + 100LLU);
	_17413_t._field_Month=(_16913_months + 2LLU);
	if ((_17413_t._field_Month >= 12LLU)) {
		_17413_t._field_Month-=12LLU;
		(_17413_t._field_Year)++;
	};
	_17413_t._field_Month+=1LLU;
	_17413_t._field_Year+=1900LLU;
	_17413_t._field_Day=(_13613_remDays + 1LLU);
	_17413_t._field_WeekDay=((3LLU + _12813_days) % 7LL);
	if ((_17413_t._field_WeekDay < 0LLU)) {
		_17413_t._field_WeekDay+=7LLU;
	};
	_17413_t._field_YearDay=_16413_yDay;
	_17413_t._field_Hour=(_12913_remSecs / 3600LLU);
	_17413_t._field_Minute=((_12913_remSecs / 60LLU) % 60LL);
	_17413_t._field_Second=(_12913_remSecs % 60LL);
	return _17413_t;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c25414c3_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c246a95d_scopeCoder> static__1c246b0bd_new(jule::Ptr<_1c254b467_ObjectCoder>* _7124_oc) {
	return jule::new_ptr<_1c246a95d_scopeCoder>(_1c246a95d_scopeCoder{._field_oc=(*(_7124_oc))});;
}



inline void _1c65bcbaa_iterHead(jule::Ptr<_1c246a95d_scopeCoder> _self_, jule::Ptr<_1c0cd9476_RangeIter>* _7832_it, jule::Bool* _7844_ref, jule::Str _7855_begin) {
	_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1c254c105_addIndent((*_self_.alloc)._field_oc);
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1c100ab09_Copy && _1c2472c84_isCopyOptimizable(&((*((*(_7832_it))))._field_Expr)))) {
		(*(_7844_ref))=true;
		{
			auto &_match_expr{ (*((*((*(_7832_it))))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1c65c1032:;
				{
					jule::Ptr<_1c0d4dde2_Var> _8717_v = (*((*((*(_7832_it))))._field_Expr))._field_Model.unsafe_cast_ptr<_1c0d4dde2_Var>();;
					if ((*(_8717_v))._field_Reference) {
						_1c2483b41_model((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*((*(_7832_it))))._field_Expr))._field_Model);
						goto _match_end_1c65c1692;
					};
					goto _case_begin_1c65c16e7;
				}
			}
			else {
				_case_begin_1c65c16e7:;
				{
					_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
					_1c2483b41_model((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*((*(_7832_it))))._field_Expr))._field_Model);
					_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1c65c1692:;
		};
	} else {
		_1c2479274_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*((*(_7832_it))))._field_Expr))._field_Model);
	};
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("auto it = expr", 14));
	if ((*(_7844_ref))) {
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("->", 2));
	} else {
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	};
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("begin();\n", 9));
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("auto expr_end = expr", 20));
	if ((*(_7844_ref))) {
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("->", 2));
	} else {
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	};
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("end();\n", 7));
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, _7855_begin);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("if (it != expr_end) {\n", 22));
	_1c254c105_addIndent((*_self_.alloc)._field_oc);
	_1c254c501_indent((*_self_.alloc)._field_oc);
}



inline void _1c246b794_rangeIndexIter(jule::Ptr<_1c246a95d_scopeCoder> _self_, jule::Ptr<_1c0cd9476_RangeIter>* _12739_it) {
	_234c76a64_StrBuilder _12813_sb = static__234c76ec6_New(64LL);;
	static__1c248c7d7_iterBegin(&(_12813_sb), static_cast<jule::Uintptr>((*(_12739_it))));
	jule::Str _1309_begin = _234c77d2e_Str(&_12813_sb);;
	_234c7802c_Clear(&_12813_sb);
	static__1c248cdae_iterNext(&(_12813_sb), static_cast<jule::Uintptr>((*(_12739_it))));
	jule::Str _1339_next = _234c77d2e_Str(&_12813_sb);;
	jule::Bool _13513_ref = false;;
	_1c65bcbaa_iterHead(_self_, _12739_it, &(_13513_ref), _1309_begin);
	if (((*((*(_12739_it))))._field_KeyA != nullptr)) {
		_1c2554ddd_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_12739_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1c65cd65a, jule::Ptr<__jule_anon_1c65cd65a_ctx>::make(__jule_anon_1c65cd65a_ctx{._self_=_self_,._13513_ref=_13513_ref}).as<jule::Uintptr>(), __jule_anon_1c65cd65a_ctx_handler));
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1c254c501_indent((*_self_.alloc)._field_oc);
	};
	if (((*((*(_12739_it))))._field_KeyB != nullptr)) {
		(*(*((*(_12739_it))))._field_KeyB.alloc)._field_Reference=(_1c100ab09_Copy && _1c247314c_isIterCopyOptimizable(&((*((*(_12739_it))))._field_Expr), &((*((*(_12739_it))))._field_KeyB)));
		_1c2554ddd_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_12739_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1c65d2120, jule::Ptr<__jule_anon_1c65d2120_ctx>::make(__jule_anon_1c65d2120_ctx{._self_=_self_,._12739_it=_12739_it}).as<jule::Uintptr>(), __jule_anon_1c65d2120_ctx_handler));
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1c254c501_indent((*_self_.alloc)._field_oc);
	};
	_1c2471ee7_scope(_self_, (*((*(_12739_it))))._field_Scope);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, _1339_next);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("++it;\n", 6));
	_1c254c501_indent((*_self_.alloc)._field_oc);
	if (((*((*(_12739_it))))._field_KeyA != nullptr)) {
		static__1c248c4eb_var(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*((*(_12739_it))))._field_KeyA);
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("++;\n", 4));
		_1c254c501_indent((*_self_.alloc)._field_oc);
	};
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("goto ", 5));
	_1c254bb4e_write((*_self_.alloc)._field_oc, _1309_begin);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1c254c303_doneIndent((*_self_.alloc)._field_oc);
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("}\n", 2));
	_1c254c501_indent((*_self_.alloc)._field_oc);
	static__1c248cac3_iterEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_12739_it))));
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1c254c303_doneIndent((*_self_.alloc)._field_oc);
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1c246ba4c_rangeHashmapIter(jule::Ptr<_1c246a95d_scopeCoder> _self_, jule::Ptr<_1c0cd9476_RangeIter>* _19441_it) {
	_234c76a64_StrBuilder _19513_sb = static__234c76ec6_New(64LL);;
	static__1c248c7d7_iterBegin(&(_19513_sb), static_cast<jule::Uintptr>((*(_19441_it))));
	jule::Str _1979_begin = _234c77d2e_Str(&_19513_sb);;
	_234c7802c_Clear(&_19513_sb);
	static__1c248cdae_iterNext(&(_19513_sb), static_cast<jule::Uintptr>((*(_19441_it))));
	jule::Str _2009_next = _234c77d2e_Str(&_19513_sb);;
	jule::Bool _20213_ref = false;;
	_1c65bcbaa_iterHead(_self_, _19441_it, &(_20213_ref), _1979_begin);
	if (((*((*(_19441_it))))._field_KeyA != nullptr)) {
		_1c2554ddd_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_19441_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1c65e15e6, jule::Ptr<__jule_anon_1c65e15e6_ctx>::make(__jule_anon_1c65e15e6_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c65e15e6_ctx_handler));
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1c254c501_indent((*_self_.alloc)._field_oc);
	};
	if (((*((*(_19441_it))))._field_KeyB != nullptr)) {
		_1c2554ddd_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_19441_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1c65e3a6b, jule::Ptr<__jule_anon_1c65e3a6b_ctx>::make(__jule_anon_1c65e3a6b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c65e3a6b_ctx_handler));
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1c254c501_indent((*_self_.alloc)._field_oc);
	};
	_1c2471ee7_scope(_self_, (*((*(_19441_it))))._field_Scope);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, _2009_next);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("++it;\n", 6));
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("goto ", 5));
	_1c254bb4e_write((*_self_.alloc)._field_oc, _1979_begin);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1c254c303_doneIndent((*_self_.alloc)._field_oc);
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("}\n", 2));
	_1c254c501_indent((*_self_.alloc)._field_oc);
	static__1c248cac3_iterEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_19441_it))));
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1c254c303_doneIndent((*_self_.alloc)._field_oc);
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1c246bd05_strRuneIter(jule::Ptr<_1c246a95d_scopeCoder> _self_, jule::Ptr<_1c0edc723_StrRuneIter> _24135_it) {
	_234c76a64_StrBuilder _24213_sb = static__234c76ec6_New(64LL);;
	static__1c248c7d7_iterBegin(&(_24213_sb), static_cast<jule::Uintptr>((*(_24135_it))._field_Base));
	jule::Str _2449_begin = _234c77d2e_Str(&_24213_sb);;
	_234c7802c_Clear(&_24213_sb);
	static__1c248cdae_iterNext(&(_24213_sb), static_cast<jule::Uintptr>((*_24135_it.alloc)._field_Base));
	jule::Str _2479_next = _234c77d2e_Str(&_24213_sb);;
	_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1c254c105_addIndent((*_self_.alloc)._field_oc);
	_1c254c501_indent((*_self_.alloc)._field_oc);
	jule::Bool _25313_ref = false;;
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1c100ab09_Copy && _1c2472c84_isCopyOptimizable(&((*_24135_it.alloc)._field_Expr)))) {
		_25313_ref=true;
		{
			auto &_match_expr{ (*((*(_24135_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1c66067d7:;
				{
					jule::Ptr<_1c0d4dde2_Var> _25917_v = (*((*(_24135_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1c0d4dde2_Var>();;
					if ((*(_25917_v))._field_Reference) {
						_1c2483b41_model((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*_24135_it.alloc)._field_Expr))._field_Model);
						goto _match_end_1c6606e47;
					};
					goto _case_begin_1c6606e9c;
				}
			}
			else {
				_case_begin_1c6606e9c:;
				{
					_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
					_1c2483b41_model((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*_24135_it.alloc)._field_Expr))._field_Model);
					_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1c6606e47:;
		};
	} else {
		_1c2479274_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*_24135_it.alloc)._field_Expr))._field_Model);
	};
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("char *it = expr", 15));
	if (_25313_ref) {
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("->", 2));
	} else {
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	};
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("operator char*();\n", 18));
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("const char *end = it + expr", 27));
	if (_25313_ref) {
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("->", 2));
	} else {
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	};
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("len();\n", 7));
	_1c254c501_indent((*_self_.alloc)._field_oc);
	if (((*((*_24135_it.alloc)._field_Base))._field_KeyA != nullptr)) {
		_1c2554ddd_varInitExpr((*_self_.alloc)._field_oc, &((*(*_24135_it.alloc)._field_Base.alloc)._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1c6612606, jule::Ptr<__jule_anon_1c6612606_ctx>::make(__jule_anon_1c6612606_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c6612606_ctx_handler));
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1c254c501_indent((*_self_.alloc)._field_oc);
	};
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("std::size_t len;\n", 17));
	_1c254c501_indent((*_self_.alloc)._field_oc);
	if (((*(*_24135_it.alloc)._field_Base.alloc)._field_KeyB != nullptr)) {
		_1c2554ddd_varInitExpr((*_self_.alloc)._field_oc, &((*(*_24135_it.alloc)._field_Base.alloc)._field_KeyB), nullptr);
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1c254c501_indent((*_self_.alloc)._field_oc);
	};
	_1c254bb4e_write((*_self_.alloc)._field_oc, _2449_begin);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("std::tie(", 9));
	if (((*(*_24135_it.alloc)._field_Base.alloc)._field_KeyB != nullptr)) {
		static__1c248c4eb_var(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(*_24135_it.alloc)._field_Base.alloc)._field_KeyB);
	} else {
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("std::ignore", 11));
	};
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(", len) = jule::utf8_decode_rune_str(it, end - it", 48));
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(");\n", 3));
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("if (it < end) {\n", 16));
	_1c254c105_addIndent((*_self_.alloc)._field_oc);
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c2471ee7_scope(_self_, (*(*_24135_it.alloc)._field_Base.alloc)._field_Scope);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, _2479_next);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("it += len;\n", 11));
	_1c254c501_indent((*_self_.alloc)._field_oc);
	if (((*(*_24135_it.alloc)._field_Base.alloc)._field_KeyA != nullptr)) {
		static__1c248c4eb_var(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(*_24135_it.alloc)._field_Base.alloc)._field_KeyA);
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("++;\n", 4));
		_1c254c501_indent((*_self_.alloc)._field_oc);
	};
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("goto ", 5));
	_1c254bb4e_write((*_self_.alloc)._field_oc, _2449_begin);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1c254c303_doneIndent((*_self_.alloc)._field_oc);
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("}\n", 2));
	_1c254c303_doneIndent((*_self_.alloc)._field_oc);
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1c246c0ad_ifCase(jule::Ptr<_1c246a95d_scopeCoder> _self_, jule::Ptr<_1c0cd7a5c_If> _34930_i) {
	if (((*(_34930_i))._field_Expr != nullptr)) {
		_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		_1c2479274_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_34930_i.alloc)._field_Expr);
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(") ", 2));
	};
	_1c2471ee7_scope(_self_, (*_34930_i.alloc)._field_Scope);
}



inline void _1c246c366_conditional(jule::Ptr<_1c246a95d_scopeCoder> _self_, jule::Ptr<_1c0cd8277_Conditional> _35835_c) {
	jule::Bool _35913_writed = false;;
	{
		auto expr = &((*(_35835_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c662741d:;
		if (it != expr_end) {
			jule::Ptr<_1c0cd7a5c_If> _36021_elif = *it;
			{
				if ((_36021_elif == nullptr)) {
					goto _iter_next_1c662741d;
				};
				if (_35913_writed) {
					_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
				};
				_35913_writed=true;
				_1c246c0ad_ifCase(_self_, _36021_elif);
			}
			_iter_next_1c662741d:;
			++it;
			goto _iter_begin_1c662741d;
		}
		_iter_end_1c662741d:;
	};
	if (((*_35835_c.alloc)._field_Default != nullptr)) {
		if (_35913_writed) {
			_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(" else ", 6));
		};
		_1c2471ee7_scope(_self_, (*(*_35835_c.alloc)._field_Default.alloc)._field_Scope);
	};
}



inline void _1c246c61e_infIter(jule::Ptr<_1c246a95d_scopeCoder> _self_, jule::Ptr<_1c0cd8574_InfIter> _37831_it) {
	_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("for (;;) {\n", 11));
	_1c254c105_addIndent((*_self_.alloc)._field_oc);
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c2471ee7_scope(_self_, (*(_37831_it))._field_Scope);
	_1c254c303_doneIndent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1c254c501_indent((*_self_.alloc)._field_oc);
	static__1c248cdae_iterNext(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_37831_it));
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("}\n", 2));
	_1c254c501_indent((*_self_.alloc)._field_oc);
	static__1c248cac3_iterEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_37831_it));
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(":;", 2));
}



inline void _1c246c8c7_whileIter(jule::Ptr<_1c246a95d_scopeCoder> _self_, jule::Ptr<_1c0cd8a2a_WhileIter> _39533_it) {
	if ((((*(_39533_it))._field_Expr != nullptr) && ((*_39533_it.alloc)._field_Next == nullptr))) {
		_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("while (", 7));
		_1c2479274_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_39533_it.alloc)._field_Expr);
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(") {", 3));
	} else {
		_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
		if (((*(_39533_it))._field_Expr != nullptr)) {
			_1c2479274_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_39533_it.alloc)._field_Expr);
		};
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("; ", 2));
		if (((*_39533_it.alloc)._field_Next != nullptr)) {
			_1c2471986_st(_self_, (*_39533_it.alloc)._field_Next);
		};
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(") {", 3));
	};
	if (((*((*(_39533_it))._field_Scope))._field_Stmts.len() == 0LL)) {
		_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1c254c105_addIndent((*_self_.alloc)._field_oc);
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c2471ee7_scope(_self_, (*_39533_it.alloc)._field_Scope);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1c254c303_doneIndent((*_self_.alloc)._field_oc);
	_1c254c501_indent((*_self_.alloc)._field_oc);
	static__1c248cdae_iterNext(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_39533_it));
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("}\n", 2));
	_1c254c501_indent((*_self_.alloc)._field_oc);
	static__1c248cac3_iterEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_39533_it));
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(":;", 2));
}



inline void _1c246cb80_rangeIter(jule::Ptr<_1c246a95d_scopeCoder> _self_, jule::Ptr<_1c0cd9476_RangeIter> _43433_it) {
	{
		
		if ((_1c0ddb59a_Slc((*((*(_43433_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c663cd6d:;
			{
				_1c246b794_rangeIndexIter(_self_, &(_43433_it));
			}
		}
		else if ((_1c0ddb314_Arr((*((*(_43433_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c663ca2c:;
			{
				_1c246b794_rangeIndexIter(_self_, &(_43433_it));
			}
		}
		else if ((_1c0ddc0d4_Map((*((*(_43433_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c663ca93:;
			{
				_1c246ba4c_rangeHashmapIter(_self_, &(_43433_it));
			}
		}
		else {
			_case_begin_1c663c9b6:;
			{
				_1c246b794_rangeIndexIter(_self_, &(_43433_it));
			}
		}
		_match_end_1c663c8b7:;
	};
}



inline void _1c246ce38_cont(jule::Ptr<_1c246a95d_scopeCoder> _self_, jule::Ptr<_1c0cd980b_ContSt> _44724_c) {
	_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1c248cdae_iterNext(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_44724_c))._field_It);
}



inline void _1c246d1e1_label(jule::Ptr<_1c246a95d_scopeCoder> _self_, jule::Ptr<_1c0cd9ed2_Label> _45225_l) {
	static__1c248d19a_label(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(_45225_l));
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(":", 1));
}



inline void _1c246d499_gotoSt(jule::Ptr<_1c246a95d_scopeCoder> _self_, jule::Ptr<_1c0cda3ab_GotoSt> _45726_gt) {
	_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1c248d19a_label(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_45726_gt))._field_Label));
}



inline void _1c246d752_postfix(jule::Ptr<_1c246a95d_scopeCoder> _self_, jule::Ptr<_1c0cda785_Postfix> _46231_p) {
	_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1c2479274_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(_46231_p))._field_Expr);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	_1c254bb4e_write((*_self_.alloc)._field_oc, (*_46231_p.alloc)._field_Op);
}



inline void _1c246da0a_assign(jule::Ptr<_1c246a95d_scopeCoder> _self_, jule::Ptr<_1c0cdac3b_Assign> _46930_a) {
	_1c2479274_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_46930_a))._field_Left))._field_Model);
	_1c254bb4e_write((*_self_.alloc)._field_oc, (*((*_46930_a.alloc)._field_Op))._field_Kind);
	_1c2479274_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*_46930_a.alloc)._field_Right))._field_Model);
}



inline void _1c246dcb3_mapLookupAssign(jule::Ptr<_1c246a95d_scopeCoder> _self_, jule::Ptr<_1c0cdb1e2_MultiAssign>* _47540_a) {
	jule::Ptr<_1c0c8a2b2_IndexingExprModel> _47613_iem = (*((*(_47540_a))))._field_Right.cast_ptr<_1c0c8a2b2_IndexingExprModel>(&__jule_any_type44);;
	_1c2479274_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_47613_iem))._field_Expr))._field_Model);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(".lookup(", 8));
	_1c2479274_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*_47613_iem.alloc)._field_Index))._field_Model);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_47540_a))))._field_Left[0LL] != nullptr)) {
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
		_1c2479274_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*((*(_47540_a))))._field_Left[0LL]))._field_Model);
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("), ", 3));
	} else {
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("nullptr, ", 9));
	};
	if (((*((*(_47540_a))))._field_Left[1LL] != nullptr)) {
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
		_1c2479274_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*((*(_47540_a))))._field_Left[1LL]))._field_Model);
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	} else {
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1c246e06b_multiAssignTup(jule::Ptr<_1c246a95d_scopeCoder> _self_, jule::Ptr<_1c0cdb1e2_MultiAssign>* _49839_a) {
	_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1c254c105_addIndent((*_self_.alloc)._field_oc);
	jule::Ptr<_1c0c8d11c_TupleExprModel> _50213_tup = (*((*(_49839_a))))._field_Right.cast_ptr<_1c0c8d11c_TupleExprModel>(&__jule_any_type81);;
	{
		auto expr = &((*(_50213_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6653416:;
		if (it != expr_end) {
			jule::I64 _50414_i = it - expr->begin();
			jule::Ptr<_1c0da69e9_Data> _50421_r = *it;
			{
				_1c254c501_indent((*_self_.alloc)._field_oc);
				jule::Ptr<_1c0da69e9_Data> _50617_l = (*((*(_49839_a))))._field_Left[_50414_i];;
				if ((_50617_l != nullptr)) {
					{
						auto &_match_expr{ (*(_50617_l))._field_Model };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1c66561e9:;
							{
								jule::Ptr<_1c0d4dde2_Var> _51025_v = (*(_50617_l))._field_Model.unsafe_cast_ptr<_1c0d4dde2_Var>();;
								if (((*(_51025_v))._field_Reference && (!(_1c0d4e2bb_IsInitialized(_51025_v))))) {
									static__1c248c4eb_var(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _51025_v);
									_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(" = &(", 5));
									_1c2479274_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(_50421_r))._field_Model);
									_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(");\n", 3));
									(*((*(_49839_a))))._field_Left[_50414_i]=nullptr;
									goto _iter_next_1c6653416;
								};
							}
						}
						_match_end_1c6656194:;
					};
					_1c25630b6_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_50617_l.alloc)._field_Kind);
					_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(" ", 1));
					static__1c248a74c_toOut(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1c246a1ee_assignArgName, static_cast<jule::Uintptr>(_50414_i));
					_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
				};
				_1c2479274_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_50421_r.alloc)._field_Model);
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1c6653416:;
			++it;
			_50414_i++;
			goto _iter_begin_1c6653416;
		}
		_iter_end_1c6653416:;
	};
	{
		auto expr = &((*((*(_49839_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c665bead:;
		if (it != expr_end) {
			jule::I64 _53114_i = it - expr->begin();
			jule::Ptr<_1c0da69e9_Data> _53121_l = *it;
			{
				if ((_53121_l == nullptr)) {
					goto _iter_next_1c665bead;
				};
				_1c254c501_indent((*_self_.alloc)._field_oc);
				_1c2479274_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(_53121_l))._field_Model);
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
				static__1c248a74c_toOut(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1c246a1ee_assignArgName, static_cast<jule::Uintptr>(_53114_i));
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1c665bead:;
			++it;
			_53114_i++;
			goto _iter_begin_1c665bead;
		}
		_iter_end_1c665bead:;
	};
	_1c254c303_doneIndent((*_self_.alloc)._field_oc);
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("})", 2));
}



inline void _1c246e324_multiAssignFn(jule::Ptr<_1c246a95d_scopeCoder> _self_, jule::Ptr<_1c0cdb1e2_MultiAssign>* _54738_a) {
	_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1c254c105_addIndent((*_self_.alloc)._field_oc);
	_1c254c501_indent((*_self_.alloc)._field_oc);
	jule::Ptr<_1c0c89932_FnCallExprModel> _55213_f = (*((*(_54738_a))))._field_Right.cast_ptr<_1c0c89932_FnCallExprModel>(&__jule_any_type33);;
	_1c2568066_codeMut1((*((*(*_self_.alloc)._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*((*(_55213_f))._field_Func))._field_Result));
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(" __jule_assign_result = ", 24));
	_1c2479274_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*(_54738_a))))._field_Right);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	jule::Ptr<_1c0de5ab0_Tuple> _55813_tup = _1c0ddc36a_Tup((*(*_55213_f.alloc)._field_Func.alloc)._field_Result.ptr());;
	{
		auto expr = &((*((*(_54738_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c666688b:;
		if (it != expr_end) {
			jule::I64 _55914_i = it - expr->begin();
			jule::Ptr<_1c0da69e9_Data> _55921_l = *it;
			{
				if ((_55921_l != nullptr)) {
					;
					_1c254c501_indent((*_self_.alloc)._field_oc);
					_1c2479274_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_55921_l.alloc)._field_Model);
					{
						
						if (_1c0dd85ec_Equal((*(_55813_tup))._field_Types[_55914_i], (*_55921_l.alloc)._field_Kind)) {
							_case_begin_1c667336a:;
							{
								_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(" = __jule_assign_result.__jule_result_arg", 41));
								_1c254bb4e_write((*_self_.alloc)._field_oc, _2021d80b3_Itoa(_55914_i));
							}
						}
						else if (_1c248603e_isAny(&((*_55921_l.alloc)._field_Kind))) {
							_case_begin_1c666aa16:;
							{
								_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(" = jule::Any(__jule_assign_result.__jule_result_arg", 51));
								_1c254bb4e_write((*_self_.alloc)._field_oc, _2021d80b3_Itoa(_55914_i));
								_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(", &__jule_any_type", 18));
								_1c254bb4e_write((*_self_.alloc)._field_oc, _2021d80b3_Itoa(_1c254cec4_pushAnyType((*_self_.alloc)._field_oc, (*(_55813_tup))._field_Types[_55914_i])));
								_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
							}
						}
						else {
							_case_begin_1c6667ded:;
							{
								_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
								if ((_1c0ddbd4d_Trait((*(_55813_tup))._field_Types[_55914_i].ptr()) != nullptr)) {
									jule::Ptr<_1c0ca8a72_Trait> _57829_t1 = _1c0ddbd4d_Trait((*_55921_l.alloc)._field_Kind.ptr());;
									jule::Ptr<_1c0ca8a72_Trait> _57929_t2 = _1c0ddbd4d_Trait((*_55813_tup.alloc)._field_Types[_55914_i].ptr());;
									_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_assign_result.__jule_result_arg", 38));
									_1c254bb4e_write((*_self_.alloc)._field_oc, _2021d80b3_Itoa(_55914_i));
									_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(".mask<", 6));
									static__1c248b561_traitDecl(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _57829_t1);
									_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
									_1c254e190_pushAndWriteMaskMapper((*_self_.alloc)._field_oc, _57829_t1, _57929_t2);
									_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
									goto _match_end_1c6668e21;
								};
								_1c25630b6_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_55921_l.alloc)._field_Kind);
								_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
								_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_assign_result.__jule_result_arg", 38));
								_1c254bb4e_write((*_self_.alloc)._field_oc, _2021d80b3_Itoa(_55914_i));
								_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
								_1c254bb4e_write((*_self_.alloc)._field_oc, _2021d80b3_Itoa(_1c254dd2c_findTypeOffset((*_self_.alloc)._field_oc, _1c0ddbd4d_Trait((*_55921_l.alloc)._field_Kind), (*_55813_tup.alloc)._field_Types[_55914_i])));
								_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
							}
						}
						_match_end_1c6668e21:;
					};
					_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
				};
			}
			_iter_next_1c666688b:;
			++it;
			_55914_i++;
			goto _iter_begin_1c666688b;
		}
		_iter_end_1c666688b:;
	};
	_1c254c303_doneIndent((*_self_.alloc)._field_oc);
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("})", 2));
}



inline void _1c246e5cc_multiAssign(jule::Ptr<_1c246a95d_scopeCoder> _self_, jule::Ptr<_1c0cdb1e2_MultiAssign> _60635_a) {
	{
		auto expr = &((*(_60635_a))._field_Decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6678ded:;
		if (it != expr_end) {
			jule::Ptr<_1c0d4dde2_Var> _60921_d = *it;
			{
				_1c2554ddd_varInitExpr((*(_self_))._field_oc, &(_60921_d), nullptr);
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
				_1c254c501_indent((*_self_.alloc)._field_oc);
			}
			_iter_next_1c6678ded:;
			++it;
			goto _iter_begin_1c6678ded;
		}
		_iter_end_1c6678ded:;
	};
	{
		auto &_match_expr{ (*(_60635_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1c6679618:;
			{
				_1c246dcb3_mapLookupAssign(_self_, &(_60635_a));
				return;;
			}
		}
		_match_end_1c66795b3:;
	};
	{
		auto &_match_expr{ (*(_60635_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1c667b8a1:;
			{
				_1c246e06b_multiAssignTup(_self_, &(_60635_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1c667b120:;
			{
				_1c246e324_multiAssignFn(_self_, &(_60635_a));
			}
		}
		else {
			_case_begin_1c667b0a9:;
			{
				jule::panic(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:628:13"));;
			}
		}
		_match_end_1c667b054:;
	};
}



inline jule::Fn<void> _1c246e91d_matchExpr(jule::Ptr<_1c246a95d_scopeCoder> _self_, jule::Ptr<_1c0cdb852_Match> _63233_m) {
	if ((!(_1c0da7401_IsConst((*(_63233_m))._field_Expr.ptr())))) {
		return jule::__new_closure<void>((void*)__jule_anon_1c667d496, jule::Ptr<__jule_anon_1c667d496_ctx>::make(__jule_anon_1c667d496_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c667d496_ctx_handler);;
	};
	if (((!(_2021ea669_IsBool((*(*_63233_m.alloc)._field_Expr.alloc)._field_Constant.ptr()))) || (!(_2021e806d_ReadBool((*(*_63233_m.alloc)._field_Expr.alloc)._field_Constant))))) {
		return jule::__new_closure<void>((void*)__jule_anon_1c667e7a5, jule::Ptr<__jule_anon_1c667e7a5_ctx>::make(__jule_anon_1c667e7a5_ctx{._self_=_self_,._63233_m=_63233_m}).as<jule::Uintptr>(), __jule_anon_1c667e7a5_ctx_handler);;
	};
	return nullptr;;
}



inline void _1c246ec81_case(jule::Ptr<_1c246a95d_scopeCoder> _self_, jule::Ptr<_1c0cdb852_Match> _64228_m, jule::Ptr<_1c0cdc37a_Case> _64243_c) {
	if ((((*(_64243_c))._field_Exprs.len() != 0LL) && (!((*(_64228_m))._field_Comptime)))) {
		if ((((*_64228_m.alloc)._field_Cases.len() > 0LL) && ((*_64228_m.alloc)._field_Cases[0LL] == _64243_c))) {
			_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		} else {
			_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
		};
		{
			auto expr = &((*_64243_c.alloc)._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c66838ca:;
			if (it != expr_end) {
				jule::I64 _64918_i = it - expr->begin();
				jule::Ptr<_1c0da69e9_Data> _64925_expr = *it;
				{
					{
						
						if ((!((*_64228_m.alloc)._field_TypeMatch))) {
							_case_begin_1c668b1a7:;
							{
								jule::Fn<void> _65221_caseExpr = _1c246e91d_matchExpr(_self_, _64228_m);;
								if (_1c0da7742_GoodOperand((*_64228_m.alloc)._field_Expr.ptr(), &(_64925_expr))) {
									if ((_65221_caseExpr != nullptr)) {
										_65221_caseExpr();
										_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(" == ", 4));
									};
									_1c2479274_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(_64925_expr))._field_Model);
								} else {
									_1c2479274_possibleRefExpr((*((*_self_.alloc)._field_oc))._field_ec, (*(_64925_expr))._field_Model);
									if ((_65221_caseExpr != nullptr)) {
										_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(" == ", 4));
										_65221_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1c668459b:;
							{
								_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
								jule::Ptr<_1c0dd7de3_TypeKind> _66825_tk = (*(_64925_expr))._field_Model.cast_ptr<_1c0dd7de3_TypeKind>(&__jule_any_type84);;
								if ((_1c0ddbd4d_Trait((*((*_64228_m.alloc)._field_Expr))._field_Kind.ptr()) != nullptr)) {
									_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(".type_is(", 9));
									_1c2476859_boolean((*(*_self_.alloc)._field_oc.alloc)._field_ec, (_1c0dda7ca_Sptr((*_64925_expr.alloc)._field_Kind) != nullptr));
									_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
									_1c254bb4e_write((*_self_.alloc)._field_oc, _2021d80b3_Itoa(_1c254dd2c_findTypeOffset((*_self_.alloc)._field_oc, _1c0ddbd4d_Trait((*(*_64228_m.alloc)._field_Expr.alloc)._field_Kind), (*_64925_expr.alloc)._field_Kind)));
									_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
								} else {
									jule::I64 _67625_j = _1c254cec4_pushAnyType((*_self_.alloc)._field_oc, _66825_tk);;
									_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(".type == &__jule_any_type", 25));
									_1c254bb4e_write((*_self_.alloc)._field_oc, _2021d80b3_Itoa(_67625_j));
								};
							}
						}
						_match_end_1c668449c:;
					};
					if ((((*_64243_c.alloc)._field_Exprs.len() - _64918_i) > 1LL)) {
						_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit(" || ", 4));
					};
				}
				_iter_next_1c66838ca:;
				++it;
				_64918_i++;
				goto _iter_begin_1c66838ca;
			}
			_iter_end_1c66838ca:;
		};
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(") ", 2));
	} else if ((((*(_64228_m))._field_Default == _64243_c) && ((*_64228_m.alloc)._field_Cases.len() != 0LL))) {
		_1c254c501_indent((*(_self_))._field_oc);
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("else ", 5));
	};
	_1c254c105_addIndent((*(_self_))._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("{\n", 2));
	_1c254c501_indent((*_self_.alloc)._field_oc);
	static__1c248d772_caseBegin(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_64243_c));
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	if (((*((*(_64243_c))._field_Scope))._field_Stmts.len() > 0LL)) {
		_1c254c501_indent((*_self_.alloc)._field_oc);
		_1c2471ee7_scope(_self_, (*_64243_c.alloc)._field_Scope);
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	};
	_1c254c303_doneIndent((*_self_.alloc)._field_oc);
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1c2470039_matchSt(jule::Ptr<_1c246a95d_scopeCoder> _self_, jule::Ptr<_1c0cdb852_Match> _71031_m) {
	if ((((*(_71031_m))._field_Cases.len() == 0LL) && ((*_71031_m.alloc)._field_Default == nullptr))) {
		return;;
	};
	if (((*_71031_m.alloc)._field_Comptime && (((*_71031_m.alloc)._field_Default == nullptr) || ((*((*((*_71031_m.alloc)._field_Default))._field_Scope))._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1c254c105_addIndent((*_self_.alloc)._field_oc);
	_1c254c501_indent((*_self_.alloc)._field_oc);
	if (((!((*_71031_m.alloc)._field_Comptime)) && (!(_1c0da7401_IsConst((*_71031_m.alloc)._field_Expr.ptr()))))) {
		if ((_1c100ab09_Copy && _1c2472c84_isCopyOptimizable(&((*_71031_m.alloc)._field_Expr)))) {
			_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("auto &_match_expr{ ", 19));
		} else {
			_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("auto _match_expr{ ", 18));
		};
		_1c2479274_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(*_71031_m.alloc)._field_Expr.alloc)._field_Model);
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(" };\n", 4));
		_1c254c501_indent((*_self_.alloc)._field_oc);
	};
	if (((*_71031_m.alloc)._field_Cases.len() > 0LL)) {
		{
			auto expr = &((*_71031_m.alloc)._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c669dc25:;
			if (it != expr_end) {
				jule::Ptr<_1c0cdc37a_Case> _73825_c = *it;
				{
					if ((_73825_c == nullptr)) {
						goto _iter_next_1c669dc25;
					};
					_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
					_1c254c501_indent((*_self_.alloc)._field_oc);
					_1c246ec81_case(_self_, _71031_m, _73825_c);
				}
				_iter_next_1c669dc25:;
				++it;
				goto _iter_begin_1c669dc25;
			}
			_iter_end_1c669dc25:;
		};
	};
	if (((*_71031_m.alloc)._field_Default != nullptr)) {
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1c246ec81_case(_self_, _71031_m, (*_71031_m.alloc)._field_Default);
	};
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1c254c501_indent((*_self_.alloc)._field_oc);
	static__1c248d486_matchEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_71031_m));
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(":;", 2));
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1c254c303_doneIndent((*_self_.alloc)._field_oc);
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1c24702e2_fallSt(jule::Ptr<_1c246a95d_scopeCoder> _self_, jule::Ptr<_1c0cdca73_FallSt> _76526_f) {
	_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1c248d772_caseBegin(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_76526_f))._field_DestCase);
}



inline void _1c247059a_breakSt(jule::Ptr<_1c246a95d_scopeCoder> _self_, jule::Ptr<_1c0cd9bd5_BreakSt> _77027_b) {
	_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	if (((*(_77027_b))._field_It != 0LLU)) {
		static__1c248cac3_iterEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_77027_b.alloc)._field_It);
	} else {
		static__1c248d486_matchEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_77027_b))._field_Mtch);
	};
}



inline void _1c2470853_setResult(jule::Ptr<_1c246a95d_scopeCoder> _self_, jule::Ptr<_1c0cdce19_RetSt> _77933_r) {
	if (((*((*((*((*(_77933_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
		_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = ", 21));
		_1c2479274_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_77933_r.alloc)._field_Expr);
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
		_1c254c501_indent((*_self_.alloc)._field_oc);
		return;;
	};
	{
		auto &_match_expr{ (*(_77933_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1c66a8a21:;
			{
				jule::Slice<jule::Ptr<_1c0da69e9_Data>> _78917_datas = (*((*(_77933_r))._field_Expr.unsafe_cast_ptr<_1c0c8d11c_TupleExprModel>()))._field_Datas;;
				{
					auto expr = &(_78917_datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c66ac5e6:;
					if (it != expr_end) {
						jule::I64 _79017_i = it - expr->begin();
						jule::Ptr<_1c0da69e9_Data> _79020_data = *it;
						{
							_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1c254bb4e_write((*_self_.alloc)._field_oc, _2021d80b3_Itoa(_79017_i));
							_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
							_1c2479274_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(_79020_data))._field_Model);
							_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
							_1c254c501_indent((*_self_.alloc)._field_oc);
						}
						_iter_next_1c66ac5e6:;
						++it;
						_79017_i++;
						goto _iter_begin_1c66ac5e6;
					}
					_iter_end_1c66ac5e6:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1c66ab6c2:;
			{
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_func_result = std::move(", 31));
				_1c2483b41_model((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_77933_r.alloc)._field_Expr);
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(");\n", 3));
			}
		}
		else {
			_case_begin_1c66ab2e8:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:803:13"));;
			}
		}
		_match_end_1c66ab293:;
	};
}



inline void _1c2470b0b_retSt(jule::Ptr<_1c246a95d_scopeCoder> _self_, jule::Ptr<_1c0cdce19_RetSt> _80729_r) {
	if (_1c0c95c18_IsVoid((*((*(_80729_r))._field_Func))._field_Decl.ptr())) {
		if ((*(*(*_80729_r.alloc)._field_Func.alloc)._field_Decl.alloc)._field_Exceptional) {
			_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};", 31));
			return;;
		};
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("return;", 7));
		return;;
	} else if (((*((*((*((*(_80729_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 0LL)) {
		if ((*(*(*_80729_r.alloc)._field_Func.alloc)._field_Decl.alloc)._field_Exceptional) {
			_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
			_1c25630b6_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(*_80729_r.alloc)._field_Func.alloc)._field_Result);
			_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(">{.result=", 10));
			_1c2479274_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_80729_r.alloc)._field_Expr);
			_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("};", 2));
		} else {
			_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
			_1c2479274_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_80729_r.alloc)._field_Expr);
			_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
		};
		return;;
	};
	if (((*(_80729_r))._field_Expr != nullptr)) {
		_1c2470853_setResult(_self_, _80729_r);
	};
	if ((*((*((*_80729_r.alloc)._field_Func))._field_Decl))._field_Exceptional) {
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
		_1c2568066_codeMut1((*((*(*_self_.alloc)._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*(*_80729_r.alloc)._field_Func.alloc)._field_Result));
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(">{.result=__jule_func_result};", 30));
	} else {
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("return __jule_func_result;", 26));
	};
}



inline void _1c2470db4_var(jule::Ptr<_1c246a95d_scopeCoder> _self_, jule::Ptr<_1c0d4dde2_Var> _84327_v) {
	if ((!((*(_84327_v))._field_Constant))) {
		_1c2555196_var((*(_self_))._field_oc, _84327_v);
	};
}



inline void _1c247116c_mutSlicing(jule::Ptr<_1c246a95d_scopeCoder> _self_, jule::Ptr<_1c0edb414_MutSlicingExprModel> _84934_m) {
	_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1c2479274_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(_84934_m))._field_Expr);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(").mut_slice(", 12));
	if ((!(_2336c522d_Production))) {
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
		_1c254e448_locInfo((*_self_.alloc)._field_oc, &((*_84934_m.alloc)._field_Token));
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\", ", 3));
	};
	_1c2479274_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_84934_m.alloc)._field_Left);
	if (((*_84934_m.alloc)._field_Right != nullptr)) {
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
		_1c2479274_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_84934_m.alloc)._field_Right);
	};
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(");", 2));
}



inline void _1c2471425_swap(jule::Ptr<_1c246a95d_scopeCoder> _self_, jule::Ptr<_1c0eda1b0_SwapExprModel> _86628_m) {
	_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("std::swap(", 10));
	_1c2479274_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*(_86628_m))._field_Left))._field_Model);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	_1c2479274_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*_86628_m.alloc)._field_Right))._field_Model);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1c24716cd_exceptionalForwarding(jule::Ptr<_1c246a95d_scopeCoder> _self_, jule::Ptr<_1c0ed9d3b_ExceptionalForwardingExprModel> _87445_m) {
	_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	_1c247ae57_pureFuncCall((*(*_self_.alloc)._field_oc.alloc)._field_ec, &((*(_87445_m))._field_Expr));
}



inline void _1c2471986_st(jule::Ptr<_1c246a95d_scopeCoder> _self_, jule::Any _88026_st) {
	if ((_88026_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _88026_st };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1c66c9316:;
			{
				_1c2471ee7_scope(_self_, _88026_st.unsafe_cast_ptr<_1c0cd763e_Scope>());
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c66c98cc:;
			{
				_1c2470db4_var(_self_, _88026_st.unsafe_cast_ptr<_1c0d4dde2_Var>());
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1c66c9943:;
			{
				_1c2483b41_model((*((*(_self_))._field_oc))._field_ec, (*(_88026_st.unsafe_cast_ptr<_1c0da69e9_Data>()))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1c66ca1d5:;
			{
				_1c246c366_conditional(_self_, _88026_st.unsafe_cast_ptr<_1c0cd8277_Conditional>());
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1c66ca24b:;
			{
				_1c246c61e_infIter(_self_, _88026_st.unsafe_cast_ptr<_1c0cd8574_InfIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1c66ca2b2:;
			{
				_1c246c8c7_whileIter(_self_, _88026_st.unsafe_cast_ptr<_1c0cd8a2a_WhileIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1c66ca328:;
			{
				_1c246cb80_rangeIter(_self_, _88026_st.unsafe_cast_ptr<_1c0cd9476_RangeIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1c66ca38e:;
			{
				_1c246ce38_cont(_self_, _88026_st.unsafe_cast_ptr<_1c0cd980b_ContSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1c66ca405:;
			{
				_1c246d1e1_label(_self_, _88026_st.unsafe_cast_ptr<_1c0cd9ed2_Label>());
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1c66ca46b:;
			{
				_1c246d499_gotoSt(_self_, _88026_st.unsafe_cast_ptr<_1c0cda3ab_GotoSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1c66ca4d2:;
			{
				_1c246d752_postfix(_self_, _88026_st.unsafe_cast_ptr<_1c0cda785_Postfix>());
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1c66ca548:;
			{
				_1c246da0a_assign(_self_, _88026_st.unsafe_cast_ptr<_1c0cdac3b_Assign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1c66ca5ae:;
			{
				_1c246e5cc_multiAssign(_self_, _88026_st.unsafe_cast_ptr<_1c0cdb1e2_MultiAssign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1c66ca625:;
			{
				_1c2470039_matchSt(_self_, _88026_st.unsafe_cast_ptr<_1c0cdb852_Match>());
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1c66ca68b:;
			{
				_1c24702e2_fallSt(_self_, _88026_st.unsafe_cast_ptr<_1c0cdca73_FallSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1c66ca713:;
			{
				_1c247059a_breakSt(_self_, _88026_st.unsafe_cast_ptr<_1c0cd9bd5_BreakSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1c66ca78a:;
			{
				_1c2470b0b_retSt(_self_, _88026_st.unsafe_cast_ptr<_1c0cdce19_RetSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1c66ca812:;
			{
				_1c2481369_pushToSlice((*((*(_self_))._field_oc))._field_ec, _88026_st.unsafe_cast_ptr<_1c0edbe70_PushToSliceExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1c66ca889:;
			{
				_1c2481622_appendToSlice((*((*(_self_))._field_oc))._field_ec, _88026_st.unsafe_cast_ptr<_1c0edc349_AppendToSliceExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1c66ca911:;
			{
				_1c247116c_mutSlicing(_self_, _88026_st.unsafe_cast_ptr<_1c0edb414_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1c66ca988:;
			{
				_1c2471425_swap(_self_, _88026_st.unsafe_cast_ptr<_1c0eda1b0_SwapExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1c66caa10:;
			{
				_1c24716cd_exceptionalForwarding(_self_, _88026_st.unsafe_cast_ptr<_1c0ed9d3b_ExceptionalForwardingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1c66caa87:;
			{
				_1c246bd05_strRuneIter(_self_, _88026_st.unsafe_cast_ptr<_1c0edc723_StrRuneIter>());
			}
		}
		else {
			_case_begin_1c66c94e2:;
			{
				_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1c66c948c:;
	};
}



inline void _1c2471c3e_scopeStmts(jule::Ptr<_1c246a95d_scopeCoder> _self_, jule::Ptr<_1c0cd763e_Scope>* _93635_s) {
	{
		auto expr = &((*((*(_93635_s))))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c66d8545:;
		if (it != expr_end) {
			jule::Any _93721_st = *it;
			{
				_1c254c501_indent((*(_self_))._field_oc);
				_1c2471986_st(_self_, _93721_st);
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1c66d8545:;
			++it;
			goto _iter_begin_1c66d8545;
		}
		_iter_end_1c66d8545:;
	};
}



inline void _1c2471ee7_scope(jule::Ptr<_1c246a95d_scopeCoder> _self_, jule::Ptr<_1c0cd763e_Scope> _94529_s) {
	_1c254c105_addIndent((*(_self_))._field_oc);
	if ((*(_94529_s))._field_Deferred) {
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("__JULE_DEFER(", 13));
	};
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("{\n", 2));
	_1c2471c3e_scopeStmts(_self_, &(_94529_s));
	_1c254c303_doneIndent((*_self_.alloc)._field_oc);
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
	if ((*_94529_s.alloc)._field_Deferred) {
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(");", 2));
	};
}



inline void _1c24722a0_commonFuncScope(jule::Ptr<_1c246a95d_scopeCoder> _self_, jule::Ptr<_1c0c98699_FnIns>* _96040_f) {
	if ((!(_1c0c95c18_IsVoid((*((*(_96040_f))))._field_Decl.ptr())))) {
		jule::Ptr<_1c0de5ab0_Tuple> _96217_tup = _1c0ddc36a_Tup((*((*(_96040_f))))._field_Result.ptr());;
		if ((_96217_tup != nullptr)) {
			_1c254c501_indent((*(_self_))._field_oc);
			_1c2567890_tup((*((*(*_self_.alloc)._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _96217_tup);
			_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(" __jule_func_result;\n", 21));
			{
				auto expr = &((*_96217_tup.alloc)._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1c66e1790:;
				if (it != expr_end) {
					jule::I64 _96722_i = it - expr->begin();
					jule::Ptr<_1c0dd7de3_TypeKind> _96729_t = *it;
					{
						if (_1c256a3dc_shouldInitialized(&(_96729_t))) {
							_1c254c501_indent((*_self_.alloc)._field_oc);
							_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1c254bb4e_write((*_self_.alloc)._field_oc, _2021d80b3_Itoa(_96722_i));
							_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
							_1c2483de9_initExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, _96729_t);
							_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
						};
					}
					_iter_next_1c66e1790:;
					++it;
					_96722_i++;
					goto _iter_begin_1c66e1790;
				}
				_iter_end_1c66e1790:;
			};
		} else if (((*((*(*((*(_96040_f))))._field_Decl.alloc)._field_Result))._field_Idents.len() == 1LL)) {
			_1c254c501_indent((*(_self_))._field_oc);
			_1c25630b6_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*((*(_96040_f))))._field_Result);
			_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(" __jule_func_result", 19));
			if (_1c256a3dc_shouldInitialized(&((*((*(_96040_f))))._field_Result))) {
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
				_1c2483de9_initExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*(_96040_f))))._field_Result);
			};
			_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
		};
	};
	_1c2471c3e_scopeStmts(_self_, &((*((*(_96040_f))))._field_Scope));
	if (((*(*((*(_96040_f))))._field_Decl.alloc)._field_Exceptional && _1c0c95c18_IsVoid((*((*(_96040_f))))._field_Decl))) {
		_1c254c501_indent((*_self_.alloc)._field_oc);
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("return jule::VoidExceptional{};\n", 32));
	};
}



inline void _1c2472613_anonFuncScope(jule::Ptr<_1c246a95d_scopeCoder> _self_, jule::Ptr<_1c0c8a768_AnonFnExprModel> _100037_m, jule::Str _100058_ident) {
	if (((*((*(_100037_m))._field_Func))._field_Scope == nullptr)) {
		return;;
	};
	(*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes=jule::append((*(*(*_self_.alloc)._field_oc.alloc)._field_ec.alloc)._field_varPrefixes,jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1c0d4dde2_Var>>>::make({jule::__new_closure<jule::Bool,jule::Ptr<_1c0d4dde2_Var>>((void*)__jule_anon_1c66ed093, jule::Ptr<__jule_anon_1c66ed093_ctx>::make(__jule_anon_1c66ed093_ctx{._self_=_self_,._100037_m=_100037_m}).as<jule::Uintptr>(), __jule_anon_1c66ed093_ctx_handler)}));
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("{\n", 2));
	_1c254c105_addIndent((*_self_.alloc)._field_oc);
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, _100058_ident);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("_ctx *__jule_closure_ctx = (", 28));
	_1c254bb4e_write((*_self_.alloc)._field_oc, _100058_ident);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("_ctx*)jule::__closure_get_ctx();\n", 33));
	_1c24722a0_commonFuncScope(_self_, &((*_100037_m.alloc)._field_Func));
	_1c254c303_doneIndent((*_self_.alloc)._field_oc);
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
	((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes).mut_slice(0LL, ((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes.len() - 1LL));;
}



inline void _1c24728bb_funcScope(jule::Ptr<_1c246a95d_scopeCoder> _self_, jule::Ptr<_1c0c98699_FnIns> _102433_f) {
	if (((*(_102433_f))._field_Scope == nullptr)) {
		return;;
	};
	_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1c254c105_addIndent((*_self_.alloc)._field_oc);
	_1c24722a0_commonFuncScope(_self_, &(_102433_f));
	_1c254c303_doneIndent((*_self_.alloc)._field_oc);
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}





std::ostream &operator<<(std::ostream &_Stream, _1c246a95d_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c2475e30_exprCoder> static__1c24762e8_new(jule::Ptr<_1c254b467_ObjectCoder>* _11324_oc) {
	return jule::new_ptr<_1c2475e30_exprCoder>(_1c2475e30_exprCoder{._field_oc=(*(_11324_oc)), });;
}



inline void _1c24765a1_string(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_2021e617b_Const>* _11927_c) {
	jule::Str _1209_content = _2021e8304_ReadStr((*(_11927_c)).ptr());;
	if ((_1209_content.len() == 0LL)) {
		_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		return;;
	};
	jule::Str _1259_len = _2021d7ce9_FmtInt(static_cast<jule::I64>(_1209_content.len()), 10LL);;
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::Str", 9));
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("::lit(", 6));
	_1c2484bdb_cstrLit(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1209_content);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	_1c254bb4e_write((*_self_.alloc)._field_oc, _1259_len);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1c2476859_boolean(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Bool _13427_b) {
	if (_13427_b) {
		_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("true", 4));
	} else {
		_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
	};
}



inline void _1c2476a57_nilLit(jule::Ptr<_1c2475e30_exprCoder> _self_) {
	_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
}



inline jule::Bool _1c2476d98_ftoaSpecialCases(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::F64* _14637_x) {
	{
		
		if (_20218c62d_IsNaN((*(_14637_x)))) {
			_case_begin_1c67224d5:;
			{
				_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("NAN", 3));
			}
		}
		else if (_20218ccb0_IsInf((*(_14637_x)), 1LL)) {
			_case_begin_1c672257e:;
			{
				_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("INFINITY", 8));
			}
		}
		else if (_20218ccb0_IsInf((*(_14637_x)), -1LL)) {
			_case_begin_1c6722606:;
			{
				_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1c672244c:;
			{
				return false;;
			}
		}
		_match_end_1c672234d:;
	};
	return true;;
}



inline void _1c2477151_float32(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_2021e617b_Const>* _16028_c) {
	jule::F64 _1619_x = _2021e8d3d_AsF64((*(_16028_c)).ptr());;
	if (_1c2476d98_ftoaSpecialCases(_self_, &(_1619_x))) {
		return;;
	};
	{
		
		if ((_1619_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1c672672b:;
			{
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MAX_F32", 13));
			}
		}
		else if ((_1619_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1c67257d5:;
			{
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1c672576e:;
			{
				_1c2485082_ftoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _1619_x, 32LL);
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("f", 1));
			}
		}
		_match_end_1c672563c:;
	};
}



inline void _1c2477409_float64(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_2021e617b_Const>* _17928_c) {
	jule::F64 _1809_x = _2021e8d3d_AsF64((*(_17928_c)).ptr());;
	if (_1c2476d98_ftoaSpecialCases(_self_, &(_1809_x))) {
		return;;
	};
	{
		
		if ((_1809_x == jule::MAX_F64)) {
			_case_begin_1c67291ac:;
			{
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MAX_F64", 13));
			}
		}
		else if ((_1809_x == jule::MIN_F64)) {
			_case_begin_1c6728cc2:;
			{
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1c6728c5b:;
			{
				_1c2485082_ftoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _1809_x, 64LL);
			}
		}
		_match_end_1c6728b29:;
	};
}



inline void _1c24776b2_constant(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_2021e617b_Const> _19732_c) {
	{
		
		if (_2021ea900_IsStr(_19732_c.ptr())) {
			_case_begin_1c672b005:;
			{
				_1c24765a1_string(_self_, &(_19732_c));
			}
		}
		else if (_2021ea669_IsBool(_19732_c.ptr())) {
			_case_begin_1c672b06b:;
			{
				_1c2476859_boolean(_self_, _2021e806d_ReadBool(_19732_c));
			}
		}
		else if (_2021eab86_IsF64(_19732_c.ptr())) {
			_case_begin_1c672b0d2:;
			{
				{
					
					if ((*_19732_c.alloc)._field_Kind.equal("f32", 3)) {
						_case_begin_1c672d9b9:;
						{
							_1c2477151_float32(_self_, &(_19732_c));
						}
					}
					else {
						_case_begin_1c672d634:;
						{
							_1c2477409_float64(_self_, &(_19732_c));
						}
					}
					_match_end_1c672d546:;
				};
			}
		}
		else if (_2021ea14c_IsI64(_19732_c.ptr())) {
			_case_begin_1c672b148:;
			{
				_1c248536d_itoa(&((*((*(_self_))._field_oc))._field_Buf), _2021e7a51_ReadI64(_19732_c));
			}
		}
		else if (_2021ea3d3_IsU64(_19732_c.ptr())) {
			_case_begin_1c672b1ae:;
			{
				_1c2485659_utoa(&((*((*(_self_))._field_oc))._field_Buf), _2021e7cd7_ReadU64(_19732_c));
			}
		}
		else if (_2021eae1c_IsNil(_19732_c.ptr())) {
			_case_begin_1c672b225:;
			{
				_1c2476a57_nilLit(_self_);
			}
		}
		else {
			_case_begin_1c672ae8e:;
			{
				_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1c672ad90:;
	};
}



inline void _1c2477ad0_divByZeroBinary(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c49480_Token>* _22136_op, jule::Ptr<_1c0c87457_OperandExprModel>* _22153_l, jule::Ptr<_1c0c87457_OperandExprModel>* _22180_r) {
	_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("jule::", 6));
	{
		auto &_match_expr{ (*((*(_22136_op))))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1c6731b65:;
			{
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("div(", 4));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1c6732605:;
			{
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("mod(", 4));
			}
		}
		_match_end_1c673257d:;
	};
	if ((!(_2336c522d_Production))) {
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
		_1c254e448_locInfo((*_self_.alloc)._field_oc, _22136_op);
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\",", 2));
	};
	_1c2479274_possibleRefExpr(_self_, (*((*(_22153_l))))._field_Model);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(",", 1));
	_1c2479274_possibleRefExpr(_self_, (*((*(_22180_r))))._field_Model);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1c2477d88_unsafeBinary(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c87952_BinaryExprModel> _24336_m) {
	if ((((*((*(_24336_m))._field_Op))._field_Id == static_cast<jule::U64>(50LLU)) || ((*(*_24336_m.alloc)._field_Op.alloc)._field_Id == static_cast<jule::U64>(51LLU)))) {
		if (_1c248603e_isAny(&((*((*_24336_m.alloc)._field_Left))._field_Kind))) {
			if (((!(_1c0dd8ec1_IsNil((*((*_24336_m.alloc)._field_Right))._field_Kind.ptr()))) && (!(_1c248603e_isAny(&((*(*_24336_m.alloc)._field_Right.alloc)._field_Kind)))))) {
				_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				if (((*(*_24336_m.alloc)._field_Op.alloc)._field_Id == static_cast<jule::U64>(51LLU))) {
					_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("!", 1));
				};
				jule::I64 _25321_i = _1c254cec4_pushAnyType((*_self_.alloc)._field_oc, (*(*_24336_m.alloc)._field_Right.alloc)._field_Kind);;
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_any_type", 15));
				_1c254bb4e_write((*_self_.alloc)._field_oc, _2021d80b3_Itoa(_25321_i));
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("_compare(", 9));
				_1c2479274_possibleRefExpr(_self_, (*(*_24336_m.alloc)._field_Left.alloc)._field_Model);
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
				_1c2479274_possibleRefExpr(_self_, (*(*_24336_m.alloc)._field_Right.alloc)._field_Model);
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("))", 2));
				return;;
			};
		};
	};
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
	_1c2479274_possibleRefExpr(_self_, (*(*_24336_m.alloc)._field_Left.alloc)._field_Model);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(" ", 1));
	_1c254bb4e_write((*_self_.alloc)._field_oc, (*(*_24336_m.alloc)._field_Op.alloc)._field_Kind);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(" ", 1));
	_1c2479274_possibleRefExpr(_self_, (*(*_24336_m.alloc)._field_Right.alloc)._field_Model);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1c2478141_binary(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c87952_BinaryExprModel> _27430_m) {
	{
		auto &_match_expr{ (*((*(_27430_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1c67437ae:;
			{
				if ((_1c0ddbab7_Struct((*((*(_27430_m))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1c2477ad0_divByZeroBinary(_self_, &((*_27430_m.alloc)._field_Op), &((*_27430_m.alloc)._field_Left), &((*_27430_m.alloc)._field_Right));
					return;;
				};
			}
		}
		_match_end_1c6743704:;
	};
	_1c2477d88_unsafeBinary(_self_, _27430_m);
}



inline void _1c24783e9_var(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0d4dde2_Var> _28627_m) {
	{
		auto expr = &((*(_self_))._field_varPrefixes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6745a36:;
		if (it != expr_end) {
			jule::Fn<jule::Bool,jule::Ptr<_1c0d4dde2_Var>> _28716_prefix = *it;
			{
				if (_28716_prefix(_28627_m)) {
					return;;
				};
			}
			_iter_next_1c6745a36:;
			++it;
			goto _iter_begin_1c6745a36;
		}
		_iter_end_1c6745a36:;
	};
	if ((*(_28627_m))._field_Binded) {
		jule::Ptr<_1c0c5dd57_Directive> _29313_d = _1c2569c5a_findDirective(&((*_28627_m.alloc)._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_29313_d != nullptr)) {
			_1c254be07_writeBytes((*_self_.alloc)._field_oc, _1c25599d6_concatAllParts((*_29313_d.alloc)._field_Args));
			_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1c248c4eb_var(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _28627_m);
}



inline void _1c24786a2_structureIns(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c83552_StructIns> _30236_m) {
	_1c256136c_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _30236_m);
}



inline void _1c247895a_unary(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c87d2b_UnaryExprModel> _30629_m) {
	{
		auto &_match_expr{ (*((*(_30629_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1c6749d04:;
			{
				_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("(~(", 3));
				_1c2479274_possibleRefExpr(_self_, (*((*(_30629_m))._field_Expr))._field_Model);
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1c674a3dc:;
			{
				if ((_2336c522d_Production || (_1c0dda7ca_Sptr((*((*(_30629_m))._field_Expr))._field_Kind.ptr()) == nullptr))) {
					goto _match_end_1c674a310;
				};
				_1c2479274_possibleRefExpr(_self_, (*(*_30629_m.alloc)._field_Expr.alloc)._field_Model);
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(".get(\"", 6));
				_1c254e448_locInfo((*_self_.alloc)._field_oc, &((*_30629_m.alloc)._field_Op));
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\")", 2));
				return;;
			}
		}
		_match_end_1c674a310:;
	};
	_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1c254bb4e_write((*_self_.alloc)._field_oc, (*((*(_30629_m))._field_Op))._field_Kind);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
	_1c2479274_possibleRefExpr(_self_, (*((*_30629_m.alloc)._field_Expr))._field_Model);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("))", 2));
}



inline void _1c2478c13_structureLit(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c88700_StructLitExprModel> _33036_m) {
	if ((*((*((*(_33036_m))._field_Strct))._field_Decl))._field_Binded) {
		_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	};
	static__1c248be24_structureIns(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*_33036_m.alloc)._field_Strct));
	if ((*(*(*_33036_m.alloc)._field_Strct.alloc)._field_Decl.alloc)._field_Binded) {
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	};
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
	if (((*_33036_m.alloc)._field_Args.len() > 0LL)) {
		_julec_label_1c6755051:;
		{
			auto expr = &((*(*_33036_m.alloc)._field_Strct.alloc)._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c67551e9:;
			if (it != expr_end) {
				jule::I64 _34317_i = it - expr->begin();
				jule::Ptr<_1c0c829a2_FieldIns> _34320_f = *it;
				{
					{
						auto expr = &((*_33036_m.alloc)._field_Args);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c675adae:;
						if (it != expr_end) {
							jule::Ptr<_1c0c88359_StructArgExprModel> _34429_arg = *it;
							{
								if (((*(_34429_arg))._field_Field == _34320_f)) {
									_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
									static__1c248c210_field(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*((*_34429_arg.alloc)._field_Field))._field_Decl));
									_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("=", 1));
									_1c2479274_possibleRefExpr(_self_, (*((*_34429_arg.alloc)._field_Expr))._field_Model);
									if ((((*(*_33036_m.alloc)._field_Strct.alloc)._field_Fields.len() - _34317_i) > 1LL)) {
										_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
									};
									goto _iter_next_1c67551e9;
								};
							}
							_iter_next_1c675adae:;
							++it;
							goto _iter_begin_1c675adae;
						}
						_iter_end_1c675adae:;
					};
				}
				_iter_next_1c67551e9:;
				++it;
				_34317_i++;
				goto _iter_begin_1c67551e9;
			}
			_iter_end_1c67551e9:;
		};
	};
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1c2478ebb_allocStructure(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c889ec_AllocStructLitExprModel> _36138_m) {
	_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	static__1c248be24_structureIns(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*((*(_36138_m))._field_Lit))._field_Strct));
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
	_1c2478c13_structureLit(_self_, (*_36138_m.alloc)._field_Lit);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1c2479274_possibleRefExpr(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Any _36935_expr) {
	{
		auto &_match_expr{ _36935_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c6763218:;
			{
				jule::Ptr<_1c0d4dde2_Var> _37213_v = _36935_expr.unsafe_cast_ptr<_1c0d4dde2_Var>();;
				if ((*(_37213_v))._field_Reference) {
					_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("(*(", 3));
					_1c2483b41_model(_self_, _36935_expr);
					_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("))", 2));
					return;;
				};
			}
		}
		_match_end_1c67631b3:;
	};
	_1c2483b41_model(_self_, _36935_expr);
}



inline void _1c2479692_castTraitFromTrait(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c89080_CastingExprModel>* _38343_m, jule::Ptr<_1c0ca8a72_Trait> _38369_t1, jule::Ptr<_1c0ca8a72_Trait> _38385_t2) {
	_1c2479274_possibleRefExpr(_self_, (*((*((*(_38343_m))))._field_Expr))._field_Model);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(".mask<", 6));
	static__1c248b561_traitDecl(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _38369_t1);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
	_1c254e190_pushAndWriteMaskMapper((*_self_.alloc)._field_oc, _38369_t1, _38385_t2);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1c247994a_casting(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c89080_CastingExprModel> _39831_m) {
	{
		
		if (_1c248603e_isAny(&((*(_39831_m))._field_Kind))) {
			_case_begin_1c6768938:;
			{
				if (_1c0dd8ec1_IsNil((*_39831_m.alloc)._field_ExprKind.ptr())) {
					_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("jule::Any()", 11));
					return;;
				};
				if ((_1c0ddb07d_TypeEnum((*_39831_m.alloc)._field_ExprKind) != nullptr)) {
					_1c2479274_possibleRefExpr(_self_, (*((*_39831_m.alloc)._field_Expr))._field_Model);
					return;;
				};
				jule::I64 _40913_i = _1c254cec4_pushAnyType((*_self_.alloc)._field_oc, (*_39831_m.alloc)._field_ExprKind);;
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::Any(", 10));
				{
					auto &_match_expr{ (*((*(_39831_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1c676bd48:;
						{
							jule::Ptr<_1c0de09bc_Prim> _41317_prim = _1c0dda544_Prim((*_39831_m.alloc)._field_ExprKind);;
							if (((_41317_prim != nullptr) && _2021e5510_IsInt((*_41317_prim.alloc)._field_Kind))) {
								_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("static_cast<", 12));
								_1c255d413_prim((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _41317_prim);
								_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
								_1c2479274_possibleRefExpr(_self_, (*(*_39831_m.alloc)._field_Expr.alloc)._field_Model);
								_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1c676c83d;
							};
							goto _case_begin_1c676c893;
						}
					}
					else {
						_case_begin_1c676c893:;
						{
							_1c2479274_possibleRefExpr(_self_, (*(*_39831_m.alloc)._field_Expr.alloc)._field_Model);
						}
					}
					_match_end_1c676c83d:;
				};
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(", &__jule_any_type", 18));
				_1c254bb4e_write((*_self_.alloc)._field_oc, _2021d80b3_Itoa(_40913_i));
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if (_1c248603e_isAny(&((*(_39831_m))._field_ExprKind))) {
			_case_begin_1c67689d2:;
			{
				_1c2479274_possibleRefExpr(_self_, (*((*_39831_m.alloc)._field_Expr))._field_Model);
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1c0dda7ca_Sptr((*_39831_m.alloc)._field_Kind.ptr()) != nullptr)) {
					_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1c25630b6_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_1c0dda7ca_Sptr((*_39831_m.alloc)._field_Kind)))._field_Elem);
				} else {
					_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("cast<", 5));
					_1c25630b6_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_39831_m.alloc)._field_Kind);
				};
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
				if ((!(_2336c522d_Production))) {
					_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
					_1c254e448_locInfo((*_self_.alloc)._field_oc, &((*_39831_m.alloc)._field_Token));
					_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\", ", 3));
				};
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("&__jule_any_type", 16));
				_1c254bb4e_write((*_self_.alloc)._field_oc, _2021d80b3_Itoa(_1c254cec4_pushAnyType((*_self_.alloc)._field_oc, (*_39831_m.alloc)._field_Kind)));
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1c0ddaa61_Ptr((*(_39831_m))._field_ExprKind.ptr()) != nullptr) || (_1c0ddaa61_Ptr((*_39831_m.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6768a48:;
			{
				_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1c25630b6_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_39831_m.alloc)._field_Kind);
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")(", 2));
				_1c2479274_possibleRefExpr(_self_, (*((*_39831_m.alloc)._field_Expr))._field_Model);
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if ((_1c0ddbd4d_Trait((*(_39831_m))._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1c6768aae:;
			{
				if ((_1c0ddbd4d_Trait((*_39831_m.alloc)._field_Kind.ptr()) != nullptr)) {
					_1c2479692_castTraitFromTrait(_self_, &(_39831_m), _1c0ddbd4d_Trait((*_39831_m.alloc)._field_Kind), _1c0ddbd4d_Trait((*_39831_m.alloc)._field_ExprKind));
					return;;
				};
				_1c2479274_possibleRefExpr(_self_, (*((*_39831_m.alloc)._field_Expr))._field_Model);
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1c0dda7ca_Sptr((*_39831_m.alloc)._field_Kind) != nullptr)) {
					_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1c25630b6_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_1c0dda7ca_Sptr((*_39831_m.alloc)._field_Kind)))._field_Elem);
				} else {
					_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("cast<", 5));
					_1c25630b6_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_39831_m.alloc)._field_Kind);
				};
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
				if ((!(_2336c522d_Production))) {
					_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
					_1c254e448_locInfo((*_self_.alloc)._field_oc, &((*_39831_m.alloc)._field_Token));
					_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\", ", 3));
				};
				_1c254bb4e_write((*_self_.alloc)._field_oc, _2021d80b3_Itoa(_1c254dd2c_findTypeOffset((*_self_.alloc)._field_oc, _1c0ddbd4d_Trait((*_39831_m.alloc)._field_ExprKind), (*_39831_m.alloc)._field_Kind)));
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1c0ddbd4d_Trait((*(_39831_m))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6768b25:;
			{
				_1c25630b6_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_39831_m.alloc)._field_Kind);
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
				_1c2479274_possibleRefExpr(_self_, (*((*_39831_m.alloc)._field_Expr))._field_Model);
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
				_1c254bb4e_write((*_self_.alloc)._field_oc, _2021d80b3_Itoa(_1c254dd2c_findTypeOffset((*_self_.alloc)._field_oc, _1c0ddbd4d_Trait((*_39831_m.alloc)._field_Kind), (*_39831_m.alloc)._field_ExprKind)));
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1c67687b2:;
	};
	jule::Ptr<_1c0de09bc_Prim> _4909_prim = _1c0dda544_Prim((*(_39831_m))._field_Kind.ptr());;
	jule::Ptr<_1c0de09bc_Prim> _4919_eprim = _1c0dda544_Prim((*_39831_m.alloc)._field_ExprKind.ptr());;
	if ((((_4919_eprim != nullptr) && (_4909_prim != nullptr)) && _1c0de3e54_IsStr(_4909_prim))) {
		if (_1c0de23b4_IsU8(_4919_eprim)) {
			_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::from_byte(", 21));
		} else {
			_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::from_rune(", 21));
		};
		_1c2479274_possibleRefExpr(_self_, (*((*_39831_m.alloc)._field_Expr))._field_Model);
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("static_cast<", 12));
	_1c25630b6_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_39831_m.alloc)._field_Kind);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
	_1c2479274_possibleRefExpr(_self_, (*(*_39831_m.alloc)._field_Expr.alloc)._field_Model);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1c2479c03_models(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Slice<jule::Any> _50930_args) {
	if ((_50930_args.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &(_50930_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6794ac9:;
		if (it != expr_end) {
			jule::I64 _51314_i = it - expr->begin();
			jule::Any _51321_a = *it;
			{
				_1c2479274_possibleRefExpr(_self_, _51321_a);
				if (((_50930_args.len() - _51314_i) > 1LL)) {
					_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(",", 1));
				};
			}
			_iter_next_1c6794ac9:;
			++it;
			_51314_i++;
			goto _iter_begin_1c6794ac9;
		}
		_iter_end_1c6794ac9:;
	};
}



inline void _1c2479eab_args(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c89932_FnCallExprModel>* _52129_m) {
	jule::I64 _52213_j = 0LL;;
	if (((((*((*((*(_52129_m))))._field_Func))._field_Owner != nullptr) && (!((*((*(*((*(_52129_m))))._field_Func.alloc)._field_Decl))._field_Statically))) || (((*(*((*(_52129_m))))._field_Func.alloc)._field_Params.len() > 0LL) && _1c0c943dc_IsSelf((*((*(*((*(_52129_m))))._field_Func.alloc)._field_Params[0LL]))._field_Decl.ptr())))) {
		(_52213_j)++;
	};
	{
		auto expr = &((*((*(_52129_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6797c97:;
		if (it != expr_end) {
			jule::I64 _52713_i = it - expr->begin();
			jule::Any _52716_arg = *it;
			{
				jule::Ptr<_1c0c976ed_ParamIns> _52813_p = (*(*((*(_52129_m))))._field_Func.alloc)._field_Params[_52213_j];;
				if ((((*(_52813_p))._field_Decl != nullptr) && (*(*_52813_p.alloc)._field_Decl.alloc)._field_Reference)) {
					{
						auto &_match_expr{ _52716_arg };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1c679aa8b:;
							{
								jule::Ptr<_1c0d4dde2_Var> _53221_v = _52716_arg.unsafe_cast_ptr<_1c0d4dde2_Var>();;
								if ((*(_53221_v))._field_Reference) {
									_1c2483b41_model(_self_, _52716_arg);
									goto _julec_label_1c679a4d6;
								};
							}
						}
						_match_end_1c679aa36:;
					};
					_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
					_1c2483b41_model(_self_, _52716_arg);
					_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
					goto _julec_label_1c679a4d6;
				};
				_1c2479274_possibleRefExpr(_self_, _52716_arg);
				_julec_label_1c679a4d6:;
				if ((((*((*(_52129_m))))._field_Args.len() - _52713_i) > 1LL)) {
					_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
				};
				(_52213_j)++;
			}
			_iter_next_1c6797c97:;
			++it;
			_52713_i++;
			goto _iter_begin_1c6797c97;
		}
		_iter_end_1c6797c97:;
	};
}



inline void _1c247a264_modelForCall(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Any _55236_expr) {
	{
		auto &_match_expr{ _55236_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c67a08c6:;
			{
				_1c247d7d9_funcIns(_self_, _55236_expr.unsafe_cast_ptr<_1c0c98699_FnIns>());
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1c67a071c:;
			{
				jule::Ptr<_1c0c8c5a0_StructSubIdentExprModel> _55817_ssie = _55236_expr.unsafe_cast_ptr<_1c0c8c5a0_StructSubIdentExprModel>();;
				if (((*(_55817_ssie))._field_Method != nullptr)) {
					_1c247d7d9_funcIns(_self_, (*_55817_ssie.alloc)._field_Method);
					return;;
				};
			}
		}
		_match_end_1c67a0860:;
	};
	_1c2479274_possibleRefExpr(_self_, _55236_expr);
}



inline void _1c247a51c_pushCallInf(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c89932_FnCallExprModel>* _56732_m) {
	if ((_2336c522d_Production || (!((*((*((*(_56732_m))))._field_Func))._field_Anon)))) {
		_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		return;;
	};
	if ((*(*((*(_56732_m))))._field_Func.alloc)._field_Anon) {
		{
			auto &_match_expr{ (*((*(_56732_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type98) {
				_case_begin_1c67a43e1:;
				{
					if ((*((*((*((*((*((*(_56732_m))))._field_Expr.unsafe_cast_ptr<_1c0c8c5a0_StructSubIdentExprModel>()))._field_Field))._field_Decl))._field_Owner))._field_Binded) {
						_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
						return;;
					};
				}
			}
			_match_end_1c67a438b:;
		};
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(".call", 5));
	};
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("(\"", 2));
	_1c254e448_locInfo((*_self_.alloc)._field_oc, &((*((*(_56732_m))))._field_Token));
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
	if (((*((*(_56732_m))))._field_Args.len() != 0LL)) {
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	};
}



inline jule::Bool _1c247a85d_isWrapped(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c89932_FnCallExprModel>* _59034_m) {
	if ((((!(_1c0c99b2e_IsBuiltin((*((*(_59034_m))))._field_Func.ptr()))) && ((*((*(*((*(_59034_m))))._field_Func.alloc)._field_Decl))._field_Params.len() > 0LL)) && _1c0c943dc_IsSelf((*(*(*((*(_59034_m))))._field_Func.alloc)._field_Decl.alloc)._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_59034_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type98) {
				_case_begin_1c67a913d:;
				{
					jule::Ptr<_1c0c8c5a0_StructSubIdentExprModel> _59421_ssie = (*((*(_59034_m))))._field_Expr.unsafe_cast_ptr<_1c0c8c5a0_StructSubIdentExprModel>();;
					{
						
						if (_1c0c94673_IsRef((*(*(*((*(_59034_m))))._field_Func.alloc)._field_Decl.alloc)._field_Params[0LL].ptr()) || (_1c0dda7ca_Sptr((*((*(_59421_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1c67aad21:;
							{
								goto _match_end_1c67aa084;
							}
						}
						else {
							_case_begin_1c67aa0ea:;
							{
								if ((_1c0ddbab7_Struct((*((*(_59421_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									if ((!((*(*_59421_ssie.alloc)._field_Expr.alloc)._field_Lvalue))) {
										_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("({ auto _wrap_copy = ", 21));
										_1c2483b41_model(_self_, (*(*_59421_ssie.alloc)._field_Expr.alloc)._field_Model);
										_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1c67aa084:;
					};
				}
			}
			_match_end_1c67a90d8:;
		};
	};
	return false;;
}



inline jule::Bool _1c247ab9e_writeReceiver(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Any _61437_m) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ _61437_m };
		
		if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1c67b08c5:;
			{
				_1c2479274_possibleRefExpr(_self_, (*((*(_61437_m.unsafe_cast_ptr<_1c0c87d2b_UnaryExprModel>()))._field_Expr))._field_Model);
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1c67b0ad4:;
			{
				_1c2479274_possibleRefExpr(_self_, (*((*((*(_61437_m.unsafe_cast_ptr<_1c0edca20_UnsafeDerefExprModel>()))._field_Base))._field_Expr))._field_Model);
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c67b0a6d:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:623:13"));;
			}
		}
		_match_end_1c67b0a18:;
	};
}



inline void _1c247ae57_pureFuncCall(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c89932_FnCallExprModel>* _62737_m) {
	jule::Bool _6289_wrapped = _1c247a85d_isWrapped(_self_, _62737_m);;
	_1c247a264_modelForCall(_self_, (*((*(_62737_m))))._field_Expr);
	if ((!(_1c0c99b2e_IsBuiltin((*((*(_62737_m))))._field_Func.ptr())))) {
		if (((*((*(*((*(_62737_m))))._field_Func.alloc)._field_Decl))._field_Binded && ((*(*((*(_62737_m))))._field_Func.alloc)._field_Generics.len() > 0LL))) {
			if ((!(_1c256a123_hasDirective(&((*(*(*((*(_62737_m))))._field_Func.alloc)._field_Decl.alloc)._field_Directives), jule::Str::lit("cdef", 4))))) {
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("<", 1));
				{
					auto expr = &((*(*((*(_62737_m))))._field_Func.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c67b4bd7:;
					if (it != expr_end) {
						jule::I64 _63426_i = it - expr->begin();
						jule::Ptr<_1c0dd650c_InsGeneric> _63433_g = *it;
						{
							_1c25630b6_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_63433_g))._field_Kind);
							if ((((*(*((*(_62737_m))))._field_Func.alloc)._field_Generics.len() - _63426_i) > 1LL)) {
								_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
							};
						}
						_iter_next_1c67b4bd7:;
						++it;
						_63426_i++;
						goto _iter_begin_1c67b4bd7;
					}
					_iter_end_1c67b4bd7:;
				};
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(">", 1));
			};
		};
	};
	_1c247a51c_pushCallInf(_self_, _62737_m);
	jule::Bool _64513_locinfo = false;;
	if ((((!(_1c0c99b2e_IsBuiltin((*((*(_62737_m))))._field_Func))) && ((*(*(*((*(_62737_m))))._field_Func.alloc)._field_Decl.alloc)._field_Params.len() > 0LL)) && _1c0c943dc_IsSelf((*(*(*((*(_62737_m))))._field_Func.alloc)._field_Decl.alloc)._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_62737_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type98) {
				_case_begin_1c67b9e62:;
				{
					jule::Ptr<_1c0c8c5a0_StructSubIdentExprModel> _64921_ssie = (*((*(_62737_m))))._field_Expr.unsafe_cast_ptr<_1c0c8c5a0_StructSubIdentExprModel>();;
					{
						
						if (_1c0c94673_IsRef((*(*(*((*(_62737_m))))._field_Func.alloc)._field_Decl.alloc)._field_Params[0LL].ptr())) {
							_case_begin_1c67be84b:;
							{
								_1c247ab9e_writeReceiver(_self_, (*((*(_64921_ssie))._field_Expr))._field_Model);
							}
						}
						else if ((_1c0dda7ca_Sptr((*((*(_64921_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1c67bb00c:;
							{
								jule::Bool _65621_safe = _1c247ab9e_writeReceiver(_self_, (*(*_64921_ssie.alloc)._field_Expr.alloc)._field_Model);;
								if (_65621_safe) {
									_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(".ptr(", 5));
									if ((!(_2336c522d_Production))) {
										_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
										_1c254e448_locInfo((*_self_.alloc)._field_oc, &((*((*(_62737_m))))._field_Token));
										_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
									};
									_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
								};
							}
						}
						else {
							_case_begin_1c67bae96:;
							{
								if ((_1c0ddbab7_Struct((*((*(_64921_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ (*((*(_64921_ssie))._field_Expr))._field_Model };
										
										if (_match_expr.type == &__jule_any_type8) {
											_case_begin_1c67bb78d:;
											{
												jule::Ptr<_1c0d4dde2_Var> _67029_v = (*((*(_64921_ssie))._field_Expr))._field_Model.unsafe_cast_ptr<_1c0d4dde2_Var>();;
												if ((*(_67029_v))._field_Reference) {
													goto _match_end_1c67bbc77;
												};
												goto _case_begin_1c67bbccc;
											}
										}
										else {
											_case_begin_1c67bbccc:;
											{
												_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("&", 1));
											}
										}
										_match_end_1c67bbc77:;
									};
								};
								if (_6289_wrapped) {
									_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("_wrap_copy", 10));
								} else if ((_1c0ddaa61_Ptr((*(*_64921_ssie.alloc)._field_Expr.alloc)._field_Kind) == nullptr)) {
									_1c2483b41_model(_self_, (*(*_64921_ssie.alloc)._field_Expr.alloc)._field_Model);
								} else {
									_1c2479274_possibleRefExpr(_self_, (*((*((*(*_64921_ssie.alloc)._field_Expr.alloc)._field_Model.cast_ptr<_1c0c87d2b_UnaryExprModel>(&__jule_any_type110)))._field_Expr))._field_Model);
								};
							}
						}
						_match_end_1c67bae30:;
					};
					if (((*((*(_62737_m))))._field_Args.len() > 0LL)) {
						_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1c67b9aee:;
				{
					_1c2479274_possibleRefExpr(_self_, (*((*((*(_62737_m))))._field_Expr.unsafe_cast_ptr<_1c0c8bc0e_TraitSubIdentExprModel>()))._field_Expr);
					if ((!(_2336c522d_Production))) {
						_64513_locinfo=true;
					};
					if (((*((*(_62737_m))))._field_Args.len() > 0LL)) {
						_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			_match_end_1c67b9deb:;
		};
	};
	_1c2479eab_args(_self_, _62737_m);
	if (_64513_locinfo) {
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(", \"", 3));
		_1c254e448_locInfo((*_self_.alloc)._field_oc, &((*((*(_62737_m))))._field_Token));
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
	};
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	if (_6289_wrapped) {
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("; })", 4));
	};
}



inline void _1c247b210_coFuncCall(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c89932_FnCallExprModel>* _71535_m) {
	_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1c254c105_addIndent((*_self_.alloc)._field_oc);
	_234c76a64_StrBuilder _71813_head = static__234c76ec6_New(32LL);;
	_234c77537_WriteStr(&_71813_head, jule::Str::lit("std::thread([", 13));
	if (((*((*((*(_71535_m))))._field_Func))._field_Owner != nullptr)) {
		_234c77537_WriteStr(&_71813_head, jule::Str::lit("_self_", 6));
		if (((*((*(_71535_m))))._field_Args.len() > 0LL)) {
			_234c77537_WriteStr(&_71813_head, jule::Str::lit(", ", 2));
		};
	};
	{
		auto expr = &((*((*(_71535_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c67d0120:;
		if (it != expr_end) {
			jule::I64 _72613_i = it - expr->begin();
			jule::Any _72616_arg = *it;
			{
				if ((_72613_i > 0LL)) {
					_234c77537_WriteStr(&_71813_head, jule::Str::lit(", ", 2));
				};
				{
					auto &_match_expr{ _72616_arg };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1c67d1660:;
						{
							jule::Ptr<_1c0d4dde2_Var> _73221_v = _72616_arg.unsafe_cast_ptr<_1c0d4dde2_Var>();;
							static__1c248c4eb_var(&(_71813_head), _73221_v);
							goto _iter_next_1c67d0120;
						}
					}
					_match_end_1c67d0dbd:;
				};
				jule::Str _73613_name = (jule::Str::lit("_co_arg_", 8) + _2021d80b3_Itoa(_72613_i));;
				_234c77537_WriteStr(&_71813_head, _73613_name);
				_1c254c501_indent((*_self_.alloc)._field_oc);
				_1c25630b6_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*((*(*((*(_71535_m))))._field_Func.alloc)._field_Params[_72613_i]))._field_Kind);
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(" ", 1));
				if ((*((*((*(*((*(_71535_m))))._field_Func.alloc)._field_Params[_72613_i]))._field_Decl))._field_Reference) {
					_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("&", 1));
				};
				_1c254bb4e_write((*_self_.alloc)._field_oc, _73613_name);
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
				_1c2479274_possibleRefExpr(_self_, _72616_arg);
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
				jule::Any _74813_argS = jule::Any(_73613_name, &__jule_any_type4);;
				(*((*(_71535_m))))._field_Args[_72613_i]=(*(((jule::Any*)((&(_74813_argS))))));
			}
			_iter_next_1c67d0120:;
			++it;
			_72613_i++;
			goto _iter_begin_1c67d0120;
		}
		_iter_end_1c67d0120:;
	};
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_234c7727e_Write(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf, _234c787d0_Buf(&_71813_head));
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("](void) mutable -> void {\n", 26));
	_1c254c105_addIndent((*_self_.alloc)._field_oc);
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c247ae57_pureFuncCall(_self_, _71535_m);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1c254c303_doneIndent((*_self_.alloc)._field_oc);
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("}).detach();\n", 13));
	_1c254c303_doneIndent((*_self_.alloc)._field_oc);
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1c247b573_writeUseExpr(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c98699_FnIns>* _76637_f, jule::Ptr<_1c0da69e9_Data> _76652_d) {
	if ((_1c0ddc36a_Tup((*(_76652_d))._field_Kind.ptr()) == nullptr)) {
		_1c2479274_possibleRefExpr(_self_, (*_76652_d.alloc)._field_Model);
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
		return;;
	};
	jule::Ptr<_1c0c8d11c_TupleExprModel> _77213_tup = (*_76652_d.alloc)._field_Model.cast_ptr<_1c0c8d11c_TupleExprModel>(&__jule_any_type81);;
	_1c2567890_tup((*((*(*_self_.alloc)._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1c0ddc36a_Tup((*((*(_76637_f))))._field_Result.ptr()));
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
	{
		auto expr = &((*_77213_tup.alloc)._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c67deb35:;
		if (it != expr_end) {
			jule::I64 _77513_i = it - expr->begin();
			jule::Ptr<_1c0da69e9_Data> _77516_data = *it;
			{
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(".__jule_result_arg", 18));
				_1c254bb4e_write((*_self_.alloc)._field_oc, _2021d80b3_Itoa(_77513_i));
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("=", 1));
				_1c2479274_possibleRefExpr(_self_, (*(_77516_data))._field_Model);
				if ((((*(_77213_tup))._field_Datas.len() - _77513_i) > 1LL)) {
					_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1c67deb35:;
			++it;
			_77513_i++;
			goto _iter_begin_1c67deb35;
		}
		_iter_end_1c67deb35:;
	};
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("};", 2));
}



inline void _1c247b82b_funcCall(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c89932_FnCallExprModel> _78732_m) {
	if ((*(_78732_m))._field_IsCo) {
		_1c247b210_coFuncCall(_self_, &(_78732_m));
		return;;
	};
	if (((_1c0c99b2e_IsBuiltin((*_78732_m.alloc)._field_Func.ptr()) || (!((*((*(*_78732_m.alloc)._field_Func.alloc)._field_Decl))._field_Exceptional))) || (((*_78732_m.alloc)._field_Except != nullptr) && ((*(*_78732_m.alloc)._field_Except.alloc)._field_Stmts.len() == 0LL)))) {
		_1c247ae57_pureFuncCall(_self_, &(_78732_m));
		return;;
	};
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("({\n", 3));
	_1c254c105_addIndent((*_self_.alloc)._field_oc);
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("auto except = ", 14));
	_1c247ae57_pureFuncCall(_self_, &(_78732_m));
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1c254c501_indent((*_self_.alloc)._field_oc);
	if (((*_78732_m.alloc)._field_Except != nullptr)) {
		if ((((*(*_78732_m.alloc)._field_Func.alloc)._field_Result == nullptr) || (!((*_78732_m.alloc)._field_Assigned)))) {
			_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("if (!except.ok()) ", 18));
			_1c2471ee7_scope((*(*_self_.alloc)._field_oc.alloc)._field_sc, (*_78732_m.alloc)._field_Except);
			_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		} else {
			jule::Bool _81517_forwarded = _1c2485a33_isForwarded(&((*_78732_m.alloc)._field_Except));;
			_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("(except.ok()) ? (except.result) : (", 35));
			if (_81517_forwarded) {
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
			};
			jule::Any _82021_stmt = (*(*_78732_m.alloc)._field_Except.alloc)._field_Stmts[((*(*_78732_m.alloc)._field_Except.alloc)._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _82021_stmt };
				
				if (_match_expr.type == &__jule_any_type23) {
					_case_begin_1c67ed726:;
					{
						((*((*(_78732_m))._field_Except))._field_Stmts).mut_slice(0LL, ((*((*(_78732_m))._field_Except))._field_Stmts.len() - 1LL));;
						_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("{\n", 2));
						_1c254c105_addIndent((*_self_.alloc)._field_oc);
						_1c2471c3e_scopeStmts((*(*_self_.alloc)._field_oc.alloc)._field_sc, &((*_78732_m.alloc)._field_Except));
						_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
						_1c254c501_indent((*_self_.alloc)._field_oc);
						_1c247b573_writeUseExpr(_self_, &((*_78732_m.alloc)._field_Func), _82021_stmt.unsafe_cast_ptr<_1c0da69e9_Data>());
						_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
						_1c254c303_doneIndent((*_self_.alloc)._field_oc);
						_1c254c501_indent((*_self_.alloc)._field_oc);
						_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
					}
				}
				else {
					_case_begin_1c67eec33:;
					{
						_1c2471ee7_scope((*(*_self_.alloc)._field_oc.alloc)._field_sc, (*_78732_m.alloc)._field_Except);
					}
				}
				_match_end_1c67eebcd:;
			};
			if (_81517_forwarded) {
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(" ", 1));
				_1c2483de9_initExpr(_self_, (*(*_78732_m.alloc)._field_Func.alloc)._field_Result);
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(";}", 2));
			};
			_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(");\n", 3));
		};
		_1c254c303_doneIndent((*_self_.alloc)._field_oc);
	} else {
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1c254e448_locInfo((*_self_.alloc)._field_oc, &((*_78732_m.alloc)._field_Token));
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\"));\n", 5));
		if ((!(_1c0c95c18_IsVoid((*(*_78732_m.alloc)._field_Func.alloc)._field_Decl)))) {
			_1c254c501_indent((*_self_.alloc)._field_oc);
			_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("(except.result);\n", 17));
		};
		_1c254c303_doneIndent((*_self_.alloc)._field_oc);
	};
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("})", 2));
}



inline void _1c247bad4_slice(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c89d0b_SliceExprModel> _86029_m) {
	if (((*(_86029_m))._field_Elems.len() == 0LL)) {
		_1c255ece9_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_86029_m.alloc)._field_ElemKind);
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1c255ece9_asSlice((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_86029_m.alloc)._field_ElemKind);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("::make({", 8));
	_1c2479c03_models(_self_, (*_86029_m.alloc)._field_Elems);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("})", 2));
}



inline void _1c247bd8c_indexing(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c8a2b2_IndexingExprModel> _87232_m) {
	{
		auto &_match_expr{ (*((*(_87232_m))._field_Expr))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1c68113a4:;
			{
				_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::at(", 14));
				if ((!(_2336c522d_Production))) {
					_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
					_1c254e448_locInfo((*_self_.alloc)._field_oc, &((*(_87232_m))._field_Token));
					_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\", ", 3));
				};
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("reinterpret_cast<const jule::U8*>(", 34));
				jule::Str _88313_s = _2021e8304_ReadStr((*((*(_87232_m))._field_Expr))._field_Model.unsafe_cast_ptr<_2021e617b_Const>().ptr());;
				_1c2484bdb_cstrLit(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _88313_s);
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("), ", 3));
				_1c254bb4e_write((*_self_.alloc)._field_oc, _2021d80b3_Itoa(_88313_s.len()));
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
				_1c2479274_possibleRefExpr(_self_, (*((*_87232_m.alloc)._field_Index))._field_Model);
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1c681134e:;
	};
	_1c2479274_possibleRefExpr(_self_, (*((*_87232_m.alloc)._field_Expr))._field_Model);
	{
		
		if (_2336c522d_Production || (_1c0ddaa61_Ptr((*(*_87232_m.alloc)._field_Expr.alloc)._field_Kind.ptr()) != nullptr) || (_1c0ddc0d4_Map((*(*_87232_m.alloc)._field_Expr.alloc)._field_Kind) != nullptr) || _1c2485c75_isExprComesFromBind(&((*_87232_m.alloc)._field_Expr))) {
			_case_begin_1c681a138:;
			{
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("[", 1));
				_1c2479274_possibleRefExpr(_self_, (*(*_87232_m.alloc)._field_Index.alloc)._field_Model);
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1c681144d:;
			{
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(".at(\"", 5));
				_1c254e448_locInfo((*_self_.alloc)._field_oc, &((*_87232_m.alloc)._field_Token));
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\", ", 3));
				_1c2479274_possibleRefExpr(_self_, (*(*_87232_m.alloc)._field_Index.alloc)._field_Model);
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1c6817a2b:;
	};
}



inline void _1c247c145_unsafeIndexing(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0edba96_UnsafeIndexingExprModel> _91238_m) {
	_1c2479274_possibleRefExpr(_self_, (*((*((*(_91238_m))._field_Node))._field_Expr))._field_Model);
	{
		
		if (_2336c522d_Production || (_1c0ddaa61_Ptr((*(*(*_91238_m.alloc)._field_Node.alloc)._field_Expr.alloc)._field_Kind.ptr()) != nullptr) || (_1c0ddc0d4_Map((*(*(*_91238_m.alloc)._field_Node.alloc)._field_Expr.alloc)._field_Kind) != nullptr)) {
			_case_begin_1c681de61:;
			{
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("[", 1));
				_1c2479274_possibleRefExpr(_self_, (*((*(*_91238_m.alloc)._field_Node.alloc)._field_Index))._field_Model);
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1c681d02b:;
			{
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(".__at(", 6));
				_1c2479274_possibleRefExpr(_self_, (*((*(*_91238_m.alloc)._field_Node.alloc)._field_Index))._field_Model);
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1c681daba:;
	};
}



inline void _1c247c3ed_anonFunc(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c8a768_AnonFnExprModel> _92932_m) {
	jule::Str _9309_ident = _1c254cb83_pushAnonFn((*(_self_))._field_oc, &(_92932_m));;
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::__new_closure<", 20));
	_1c25628e0_anonFunc((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_92932_m))._field_Func);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(">((void*)", 9));
	_1c254bb4e_write((*_self_.alloc)._field_oc, _9309_ident);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(", jule::Ptr<", 12));
	_1c254bb4e_write((*_self_.alloc)._field_oc, _9309_ident);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("_ctx", 4));
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(">::make(", 8));
	_1c254bb4e_write((*_self_.alloc)._field_oc, _9309_ident);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("_ctx", 4));
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
	{
		auto expr = &((*_92932_m.alloc)._field_Captured);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c68283bb:;
		if (it != expr_end) {
			jule::I64 _94214_i = it - expr->begin();
			jule::Ptr<_1c0d4dde2_Var> _94221_v = *it;
			{
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				static__1c248c4eb_var(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _94221_v);
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("=", 1));
				_1c24783e9_var(_self_, _94221_v);
				if ((((*_92932_m.alloc)._field_Captured.len() - _94214_i) > 1LL)) {
					_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(",", 1));
				};
			}
			_iter_next_1c68283bb:;
			++it;
			_94214_i++;
			goto _iter_begin_1c68283bb;
		}
		_iter_end_1c68283bb:;
	};
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("}).as<jule::Uintptr>(), ", 24));
	_1c254bb4e_write((*_self_.alloc)._field_oc, _9309_ident);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("_ctx_handler", 12));
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1c247c6a6_mapExpr(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c8b0e8_MapExprModel> _95731_m) {
	_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("jule::Map<", 10));
	_1c25630b6_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_95731_m))._field_KeyKind);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	_1c25630b6_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_95731_m.alloc)._field_ValKind);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(">({", 3));
	if (((*_95731_m.alloc)._field_Entries.len() > 0LL)) {
		{
			auto expr = &((*_95731_m.alloc)._field_Entries);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c6831a23:;
			if (it != expr_end) {
				jule::I64 _96418_i = it - expr->begin();
				jule::Ptr<_1c0c8ab42_KeyValPairExprModel> _96425_pair = *it;
				{
					_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
					_1c2479274_possibleRefExpr(_self_, (*(_96425_pair))._field_Key);
					_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(",", 1));
					_1c2479274_possibleRefExpr(_self_, (*_96425_pair.alloc)._field_Val);
					_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
					if ((((*_95731_m.alloc)._field_Entries.len() - _96418_i) > 1LL)) {
						_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_1c6831a23:;
				++it;
				_96418_i++;
				goto _iter_begin_1c6831a23;
			}
			_iter_end_1c6831a23:;
		};
	};
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("})", 2));
}



inline void _1c247c95e_slicing(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c8b67b_SlicingExprModel> _97831_m) {
	_1c2479274_possibleRefExpr(_self_, (*(_97831_m))._field_Expr);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(".slice(", 7));
	if ((!(_2336c522d_Production))) {
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
		_1c254e448_locInfo((*_self_.alloc)._field_oc, &((*_97831_m.alloc)._field_Token));
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\", ", 3));
	};
	_1c2479274_possibleRefExpr(_self_, (*_97831_m.alloc)._field_Left);
	if (((*_97831_m.alloc)._field_Right != nullptr)) {
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
		_1c2479274_possibleRefExpr(_self_, (*_97831_m.alloc)._field_Right);
	};
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1c247cc17_traitSub(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c8bc0e_TraitSubIdentExprModel> _99432_m) {
	static__1c248b561_traitDecl(&((*((*(_self_))._field_oc))._field_Buf), (*(_99432_m))._field_Trt);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("_mptr_data", 10));
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("[(", 2));
	_1c2479274_possibleRefExpr(_self_, (*_99432_m.alloc)._field_Expr);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(").type_offset].", 15));
	static__1c248ae89_func(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*_99432_m.alloc)._field_Method));
}



inline void _1c247cec0_structureSub(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c8c5a0_StructSubIdentExprModel> _100336_m) {
	_1c2479274_possibleRefExpr(_self_, (*((*(_100336_m))._field_Expr))._field_Model);
	if (((*_100336_m.alloc)._field_Field == nullptr)) {
		return;;
	};
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	static__1c248c210_field(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*((*_100336_m.alloc)._field_Field))._field_Decl));
}



inline void _1c247d278_array(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c8cd20_ArrayExprModel> _101229_m) {
	_1c25616d0_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_101229_m))._field_Kind);
	if (((*_101229_m.alloc)._field_Elems.len() == 0LL)) {
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	if ((((*_101229_m.alloc)._field_Elems.len() == 2LL) && ((*_101229_m.alloc)._field_Elems[1LL] == nullptr))) {
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
		_1c2479274_possibleRefExpr(_self_, (*_101229_m.alloc)._field_Elems[0LL]);
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("({", 2));
	_1c2479c03_models(_self_, (*_101229_m.alloc)._field_Elems);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("})", 2));
	return;;
}



inline void _1c247d531_funcInsCommon(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c98699_FnIns> _103537_m) {
	_1c2562c53_func((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _103537_m);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
	_1c247d7d9_funcIns(_self_, _103537_m);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1c247d7d9_funcIns(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c98699_FnIns> _104231_m) {
	if ((((*(_104231_m))._field_Decl != nullptr) && (*(*_104231_m.alloc)._field_Decl.alloc)._field_Binded)) {
		jule::Ptr<_1c0c5dd57_Directive> _104413_d = _1c2569c5a_findDirective(&((*(*_104231_m.alloc)._field_Decl.alloc)._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_104413_d != nullptr)) {
			_1c254be07_writeBytes((*(_self_))._field_oc, _1c25599d6_concatAllParts((*_104413_d.alloc)._field_Args));
			_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1c248b275_funcIns(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &(_104231_m));
}



inline void _1c247da92_tuple(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c8d11c_TupleExprModel> _105329_m) {
	{
		auto expr = &((*_105329_m.alloc)._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c684aa3c:;
		if (it != expr_end) {
			jule::I64 _105414_i = it - expr->begin();
			jule::Ptr<_1c0da69e9_Data> _105421_d = *it;
			{
				_1c2479274_possibleRefExpr(_self_, (*(_105421_d))._field_Model);
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
				if ((((*(_105329_m))._field_Datas.len() - _105414_i) > 1LL)) {
					_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
					_1c254c501_indent((*_self_.alloc)._field_oc);
				};
			}
			_iter_next_1c684aa3c:;
			++it;
			_105414_i++;
			goto _iter_begin_1c684aa3c;
		}
		_iter_end_1c684aa3c:;
	};
}



inline void _1c247dd4a_newCall(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c8dc99_BuiltinNewCallExprModel> _106431_m) {
	_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_1c25630b6_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_106431_m))._field_Kind);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
	if (((*_106431_m.alloc)._field_Init != nullptr)) {
		_1c2479274_possibleRefExpr(_self_, (*_106431_m.alloc)._field_Init);
	};
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1c247e103_outCall(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c8d4e6_BuiltinOutCallExprModel> _107431_m) {
	if (((*(_107431_m))._field_Debug && _2336c522d_Production)) {
		return;;
	};
	_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("jule::out(", 10));
	_1c2479274_possibleRefExpr(_self_, (*_107431_m.alloc)._field_Expr);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1c247e3ab_outlnCall(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c8d8c0_BuiltinOutlnCallExprModel> _108333_m) {
	if (((*(_108333_m))._field_Debug && _2336c522d_Production)) {
		return;;
	};
	_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("jule::outln(", 12));
	_1c2479274_possibleRefExpr(_self_, (*_108333_m.alloc)._field_Expr);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1c247e664_panicCall(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c8e173_BuiltinPanicCallExprModel> _109233_m) {
	_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("jule::panic(", 12));
	_1c2479274_possibleRefExpr(_self_, (*(_109233_m))._field_Expr);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(" + jule::Str(\"\\nlocation: ", 26));
	_1c254e448_locInfo((*_self_.alloc)._field_oc, &((*_109233_m.alloc)._field_Token));
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1c247e91c_assertCall(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c8e629_BuiltinAssertCallExprModel> _110034_m) {
	if (_2336c522d_Production) {
		return;;
	};
	_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("if (!(", 6));
	_1c2479274_possibleRefExpr(_self_, (*(_110034_m))._field_Expr);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")) jule::panic(jule::Str(", 25));
	_1c2484bdb_cstrLit(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_110034_m.alloc)._field_Log);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(") + jule::Str(\"\\nlocation: ", 27));
	_1c254e448_locInfo((*_self_.alloc)._field_oc, &((*_110034_m.alloc)._field_Token));
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1c247ebc5_errorCall(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c91230_BuiltinErrorCallExprModel> _111333_m) {
	_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	if (_1c0c95c18_IsVoid((*((*(_111333_m))._field_Func))._field_Decl.ptr())) {
		{
			auto &_match_expr{ (*((*(_111333_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1c685be9e:;
				{
					jule::Ptr<_1c0d4dde2_Var> _111817_v = (*((*(_111333_m))._field_Err))._field_Model.unsafe_cast_ptr<_1c0d4dde2_Var>();;
					if ((*(_111817_v))._field_Ident.equal("error", 5)) {
						_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::VoidExceptional{.error=std::move(except.error)}", 53));
						return;;
					};
				}
			}
			_match_end_1c685be49:;
		};
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::VoidExceptional{.error=jule::Any(", 39));
	} else {
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::Exceptional<", 18));
		_1c2568066_codeMut1((*((*(*_self_.alloc)._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*((*(_111333_m))._field_Func))._field_Result));
		{
			auto &_match_expr{ (*((*(_111333_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1c6861415:;
				{
					jule::Ptr<_1c0d4dde2_Var> _113017_v = (*((*(_111333_m))._field_Err))._field_Model.unsafe_cast_ptr<_1c0d4dde2_Var>();;
					if ((*(_113017_v))._field_Ident.equal("error", 5)) {
						_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(">{.error=except.error}", 22));
						return;;
					};
				}
			}
			_match_end_1c68613b0:;
		};
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(">{.error=jule::Any(", 19));
	};
	_1c2479274_possibleRefExpr(_self_, (*((*(_111333_m))._field_Err))._field_Model);
	jule::I64 _11399_i = _1c254cec4_pushAnyType((*_self_.alloc)._field_oc, (*(*_111333_m.alloc)._field_Err.alloc)._field_Kind);;
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(", &__jule_any_type", 18));
	_1c254bb4e_write((*_self_.alloc)._field_oc, _2021d80b3_Itoa(_11399_i));
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")}", 2));
}



inline void _1c247ee7d_copyCall(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c90d56_BuiltinCopyCallExprModel> _114532_m) {
	_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("jule::copy(", 11));
	_1c2479274_possibleRefExpr(_self_, (*((*(_114532_m))._field_Dest))._field_Model);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	_1c2479274_possibleRefExpr(_self_, (*((*_114532_m.alloc)._field_Src))._field_Model);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1c2480236_lenCall(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c902a6_BuiltinLenCallExprModel> _115331_m) {
	_1c2479274_possibleRefExpr(_self_, (*((*(_115331_m))._field_Expr))._field_Model);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(".len()", 6));
}



inline void _1c24804de_capCall(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c905a3_BuiltinCapCallExprModel> _115831_m) {
	_1c2479274_possibleRefExpr(_self_, (*((*(_115831_m))._field_Expr))._field_Model);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(".cap()", 6));
}



inline void _1c2480797_deleteCall(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c9097c_BuiltinDeleteCallExprModel> _116334_m) {
	_1c2479274_possibleRefExpr(_self_, (*((*(_116334_m))._field_Dest))._field_Model);
	if (((*_116334_m.alloc)._field_Key != nullptr)) {
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(".del(", 5));
		_1c2479274_possibleRefExpr(_self_, (*(*_116334_m.alloc)._field_Key.alloc)._field_Model);
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	} else {
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(".clear()", 8));
	};
}



inline void _1c2480a50_makeCallSlice(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c8ead0_BuiltinMakeCallExprModel>* _117438_m) {
	jule::Ptr<_1c0de4ebb_Slc> _117513_slice = _1c0ddb59a_Slc((*((*(_117438_m))))._field_Kind.ptr());;
	_1c25630b6_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*((*(_117438_m))))._field_Kind);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("::alloc(", 8));
	_1c2479274_possibleRefExpr(_self_, (*((*(_117438_m))))._field_Len);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_117438_m))))._field_Cap != nullptr)) {
		_1c2479274_possibleRefExpr(_self_, (*((*(_117438_m))))._field_Cap);
	} else {
		_1c2479274_possibleRefExpr(_self_, (*((*(_117438_m))))._field_Len);
	};
	if (_1c256a3dc_shouldInitialized(&((*(_117513_slice))._field_Elem))) {
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
		_1c2483de9_initExpr(_self_, (*_117513_slice.alloc)._field_Elem);
	};
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1c2480d08_makeCallStr(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c8ead0_BuiltinMakeCallExprModel>* _119236_m) {
	_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("::alloc(", 8));
	_1c2479274_possibleRefExpr(_self_, (*((*(_119236_m))))._field_Len);
	if (((*((*(_119236_m))))._field_Cap != nullptr)) {
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
		_1c2479274_possibleRefExpr(_self_, (*((*(_119236_m))))._field_Cap);
	};
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1c24810b1_makeCall(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c8ead0_BuiltinMakeCallExprModel> _120332_m) {
	if ((_1c0ddb59a_Slc((*(_120332_m))._field_Kind.ptr()) != nullptr)) {
		_1c2480a50_makeCallSlice(_self_, &(_120332_m));
		return;;
	};
	_1c2480d08_makeCallStr(_self_, &(_120332_m));
}



inline void _1c2481369_pushToSlice(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0edbe70_PushToSliceExprModel> _121135_m) {
	;
	_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("{ ", 2));
	_1c255ece9_asSlice((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*((*(_121135_m))._field_Elems))._field_ElemKind);
	jule::Bool _121913_ptr = false;;
	{
		auto &_match_expr{ (*(_121135_m))._field_Dest };
		
		if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1c68789b0:;
			{
				jule::Ptr<_1c0c87d2b_UnaryExprModel> _122317_u = (*(_121135_m))._field_Dest.unsafe_cast_ptr<_1c0c87d2b_UnaryExprModel>();;
				if ((_1c0ddaa61_Ptr((*((*(_122317_u))._field_Expr))._field_Kind.ptr()) != nullptr)) {
					_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(" *__jule_push_dest = ", 21));
					_1c2479274_possibleRefExpr(_self_, (*(*_122317_u.alloc)._field_Expr.alloc)._field_Model);
					_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("; ", 2));
					_121913_ptr=true;
					goto _match_end_1c687a709;
				};
				goto _case_begin_1c687a75e;
			}
		}
		else {
			_case_begin_1c687a75e:;
			{
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(" &__jule_push_dest = ", 21));
				_1c2479274_possibleRefExpr(_self_, (*_121135_m.alloc)._field_Dest);
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("; ", 2));
			}
		}
		_match_end_1c687a709:;
	};
	if (((*(*_121135_m.alloc)._field_Elems.alloc)._field_Elems.len() == 1LL)) {
		if (_121913_ptr) {
			_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_push_dest->push(", 23));
		} else {
			_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_push_dest.push(", 22));
		};
		_1c2479274_possibleRefExpr(_self_, (*(*_121135_m.alloc)._field_Elems.alloc)._field_Elems[0LL]);
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("); }", 4));
		return;;
	};
	if (_121913_ptr) {
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_push_dest.alloc_for_append(", 34));
	};
	_1c254bb4e_write((*_self_.alloc)._field_oc, _2021d80b3_Itoa((*(*_121135_m.alloc)._field_Elems.alloc)._field_Elems.len()));
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("); ", 3));
	{
		auto expr = &((*(*_121135_m.alloc)._field_Elems.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c68821c2:;
		if (it != expr_end) {
			jule::Any _125721_e = *it;
			{
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_push_dest", 16));
				if (_121913_ptr) {
					_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("->__push(", 9));
				} else {
					_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(".__push(", 8));
				};
				_1c2479274_possibleRefExpr(_self_, _125721_e);
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("); ", 3));
			}
			_iter_next_1c68821c2:;
			++it;
			goto _iter_begin_1c68821c2;
		}
		_iter_end_1c68821c2:;
	};
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1c2481622_appendToSlice(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0edc349_AppendToSliceExprModel> _127137_m) {
	_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1c2479274_possibleRefExpr(_self_, (*(_127137_m))._field_Dest);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(").append(", 9));
	_1c2479274_possibleRefExpr(_self_, (*_127137_m.alloc)._field_Slice);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(");", 2));
}



inline void _1c24818ca_appendCall(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c8eea9_BuiltinAppendCallExprModel> _127934_m) {
	_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("jule::append(", 13));
	_1c2479274_possibleRefExpr(_self_, (*(_127934_m))._field_Dest);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(",", 1));
	_1c2479274_possibleRefExpr(_self_, (*_127934_m.alloc)._field_Elements);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1c2481b83_sizeof(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c918d4_SizeofExprModel> _128730_m) {
	_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("sizeof(", 7));
	_1c2479274_possibleRefExpr(_self_, (*(_128730_m))._field_Expr);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1c2481e3b_alignof(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c91ac1_AlignofExprModel> _129331_m) {
	_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("alignof(", 8));
	_1c2479274_possibleRefExpr(_self_, (*(_129331_m))._field_Expr);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1c24821e4_runeLit(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c91d68_RuneExprModel> _129927_m) {
	if (((*(_129927_m))._field_Code <= 127LL)) {
		_234c777e0_WriteByte(&(*((*(_self_))._field_oc))._field_Buf, '\'');
		jule::Str _130217_b = _1c24845c0_sbtoa(static_cast<jule::U8>((*_129927_m.alloc)._field_Code));;
		if (_130217_b.equal("'", 1)) {
			_234c777e0_WriteByte(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf, '\\');
		};
		_234c77537_WriteStr(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf, _130217_b);
		_234c777e0_WriteByte(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf, '\'');
		return;;
	};
	_1c248536d_itoa(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::I64>((*_129927_m.alloc)._field_Code));
}



inline void _1c248249c_structureStatic(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c8c946_StructStaticIdentExprModel> _131339_m) {
	static__1c248b275_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &((*(_131339_m))._field_Method));
}



inline void _1c2482755_integratedToStr(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c92165_IntegratedToStrExprModel> _131739_m) {
	_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("jule::to_str(", 13));
	_1c2479274_possibleRefExpr(_self_, (*(_131739_m))._field_Expr);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1c2482a0d_backendEmit(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c9253e_BackendEmitExprModel> _132335_m) {
	if (((*(_132335_m))._field_Exprs.len() == 0LL)) {
		_1c254bb4e_write((*(_self_))._field_oc, (*_132335_m.alloc)._field_Code);
		return;;
	};
	jule::I64 _13289_n = _234c782b3_Len(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf);;
	jule::Slice<jule::Any> _132913_args = jule::Slice<jule::Any>::alloc((*_132335_m.alloc)._field_Exprs.len(), (*_132335_m.alloc)._field_Exprs.len());;
	{
		auto expr = &((*_132335_m.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6895a65:;
		if (it != expr_end) {
			jule::I64 _133014_i = it - expr->begin();
			jule::Any _133021_expr = *it;
			{
				_1c2479274_possibleRefExpr(_self_, _133021_expr);
				jule::Slice<jule::U8> _133217_buf = _234c787d0_Buf(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf);;
				_132913_args[_133014_i]=jule::Any(static_cast<jule::Str>(_133217_buf.slice(_13289_n)), &__jule_any_type4);
				{
					_234c78a88_SetBuf(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf, _133217_buf.slice(0LL, _13289_n));
				};
			}
			_iter_next_1c6895a65:;
			++it;
			_133014_i++;
			goto _iter_begin_1c6895a65;
		}
		_iter_end_1c6895a65:;
	};
	_1c254bb4e_write((*_self_.alloc)._field_oc, _1c0ec77eb_Format((*_132335_m.alloc)._field_Code, _132913_args));
}



inline void _1c2482cb6_free(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0c9283b_FreeExprModel> _133928_m) {
	_1c2479274_possibleRefExpr(_self_, (*(_133928_m))._field_Expr);
	if (_2336c4b23_RC) {
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(".dealloc()", 10));
		return;;
	};
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(".__free()", 9));
}



inline void _1c248306e_strComp(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0edad81_StrCompExprModel> _134831_m) {
	if ((*(_134831_m))._field_NotEq) {
		_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("(!", 2));
	};
	jule::Str _13529_s = _2021e8304_ReadStr((*_134831_m.alloc)._field_Right.ptr());;
	_1c2479274_possibleRefExpr(_self_, (*_134831_m.alloc)._field_Left);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(".equal(", 7));
	_1c2484bdb_cstrLit(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _13529_s);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	_1c254bb4e_write((*_self_.alloc)._field_oc, _2021d80b3_Itoa(_13529_s.len()));
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	if ((*_134831_m.alloc)._field_NotEq) {
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1c2483327_emptyCompare(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0eda589_EmptyCompareExprModel> _136436_m) {
	if ((*(_136436_m))._field_Neg) {
		_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
	};
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
	_1c2479274_possibleRefExpr(_self_, (*_136436_m.alloc)._field_Expr);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(").empty()", 9));
}



inline void _1c24835d0_unsafeDeref(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0edca20_UnsafeDerefExprModel> _137335_m) {
	{
		
		if ((_1c0dda7ca_Sptr((*((*((*(_137335_m))._field_Base))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c68a4612:;
			{
				_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1c2479274_possibleRefExpr(_self_, (*(*(*_137335_m.alloc)._field_Base.alloc)._field_Expr.alloc)._field_Model);
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(".alloc)", 7));
			}
		}
		else {
			_case_begin_1c68a416c:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1380:13"));;
			}
		}
		_match_end_1c68a406d:;
	};
}



inline void _1c2483888_unsafeCasting(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0edcd1c_UnsafeCastingExprModel> _138437_m) {
	{
		
		if (_1c248603e_isAny(&((*((*(_138437_m))._field_Base))._field_ExprKind))) {
			_case_begin_1c68a72b3:;
			{
				_1c2479274_possibleRefExpr(_self_, (*((*(*_138437_m.alloc)._field_Base.alloc)._field_Expr))._field_Model);
				if ((_1c0dda7ca_Sptr((*(*_138437_m.alloc)._field_Base.alloc)._field_Kind.ptr()) != nullptr)) {
					_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast_ptr<", 17));
					_1c25630b6_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_1c0dda7ca_Sptr((*(*_138437_m.alloc)._field_Base.alloc)._field_Kind)))._field_Elem);
				} else {
					_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast<", 13));
					_1c25630b6_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(*_138437_m.alloc)._field_Base.alloc)._field_Kind);
				};
				_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(">()", 3));
			}
		}
		else {
			_case_begin_1c68a6d1d:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1397:13"));;
			}
		}
		_match_end_1c68a6c1e:;
	};
}



inline void _1c2483b41_model(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Any _140129_m) {
	{
		auto &_match_expr{ _140129_m };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1c68ac8b2:;
			{
				_1c254bb4e_write((*(_self_))._field_oc, _140129_m.unsafe_cast<jule::Str>());
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1c68aca5a:;
			{
				_1c25630b6_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _140129_m.unsafe_cast_ptr<_1c0dd7de3_TypeKind>());
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1c68acac1:;
			{
				_1c24776b2_constant(_self_, _140129_m.unsafe_cast_ptr<_2021e617b_Const>());
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c68acb37:;
			{
				_1c24783e9_var(_self_, _140129_m.unsafe_cast_ptr<_1c0d4dde2_Var>());
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1c68acb9d:;
			{
				_1c24786a2_structureIns(_self_, _140129_m.unsafe_cast_ptr<_1c0c83552_StructIns>());
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c68acc14:;
			{
				_1c247d531_funcInsCommon(_self_, _140129_m.unsafe_cast_ptr<_1c0c98699_FnIns>());
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1c68acc7a:;
			{
				_1c2477d88_unsafeBinary(_self_, (*(_140129_m.unsafe_cast_ptr<_1c0edb711_UnsafeBinaryExprModel>()))._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1c68ad8b3:;
			{
				_1c2478141_binary(_self_, _140129_m.unsafe_cast_ptr<_1c0c87952_BinaryExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1c68ad929:;
			{
				_1c247895a_unary(_self_, _140129_m.unsafe_cast_ptr<_1c0c87d2b_UnaryExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1c68ad990:;
			{
				_1c2478c13_structureLit(_self_, _140129_m.unsafe_cast_ptr<_1c0c88700_StructLitExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1c68ada06:;
			{
				_1c2478ebb_allocStructure(_self_, _140129_m.unsafe_cast_ptr<_1c0c889ec_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1c68ada6c:;
			{
				_1c247994a_casting(_self_, _140129_m.unsafe_cast_ptr<_1c0c89080_CastingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1c68adad3:;
			{
				_1c247b82b_funcCall(_self_, _140129_m.unsafe_cast_ptr<_1c0c89932_FnCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1c68adb49:;
			{
				_1c247bad4_slice(_self_, _140129_m.unsafe_cast_ptr<_1c0c89d0b_SliceExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1c68adbb0:;
			{
				_1c247d278_array(_self_, _140129_m.unsafe_cast_ptr<_1c0c8cd20_ArrayExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1c68adc37:;
			{
				_1c247c145_unsafeIndexing(_self_, _140129_m.unsafe_cast_ptr<_1c0edba96_UnsafeIndexingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1c68adcae:;
			{
				_1c247bd8c_indexing(_self_, _140129_m.unsafe_cast_ptr<_1c0c8a2b2_IndexingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1c68add36:;
			{
				_1c247c3ed_anonFunc(_self_, _140129_m.unsafe_cast_ptr<_1c0c8a768_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1c68addad:;
			{
				_1c247c6a6_mapExpr(_self_, _140129_m.unsafe_cast_ptr<_1c0c8b0e8_MapExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1c68ade35:;
			{
				_1c247c95e_slicing(_self_, _140129_m.unsafe_cast_ptr<_1c0c8b67b_SlicingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1c68adeac:;
			{
				_1c247cc17_traitSub(_self_, _140129_m.unsafe_cast_ptr<_1c0c8bc0e_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1c68ae034:;
			{
				_1c247cec0_structureSub(_self_, _140129_m.unsafe_cast_ptr<_1c0c8c5a0_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1c68ae0ab:;
			{
				_1c247da92_tuple(_self_, _140129_m.unsafe_cast_ptr<_1c0c8d11c_TupleExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1c68ae133:;
			{
				_1c247e103_outCall(_self_, _140129_m.unsafe_cast_ptr<_1c0c8d4e6_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1c68ae1aa:;
			{
				_1c247e3ab_outlnCall(_self_, _140129_m.unsafe_cast_ptr<_1c0c8d8c0_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1c68ae232:;
			{
				_1c247dd4a_newCall(_self_, _140129_m.unsafe_cast_ptr<_1c0c8dc99_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1c68ae2a9:;
			{
				_1c247e664_panicCall(_self_, _140129_m.unsafe_cast_ptr<_1c0c8e173_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1c68ae331:;
			{
				_1c247e91c_assertCall(_self_, _140129_m.unsafe_cast_ptr<_1c0c8e629_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1c68ae3a8:;
			{
				_1c247ebc5_errorCall(_self_, _140129_m.unsafe_cast_ptr<_1c0c91230_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1c68ae430:;
			{
				_1c24810b1_makeCall(_self_, _140129_m.unsafe_cast_ptr<_1c0c8ead0_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1c68ae4a7:;
			{
				_1c24818ca_appendCall(_self_, _140129_m.unsafe_cast_ptr<_1c0c8eea9_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1c68ae52e:;
			{
				_1c247ee7d_copyCall(_self_, _140129_m.unsafe_cast_ptr<_1c0c90d56_BuiltinCopyCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1c68ae5a6:;
			{
				_1c2480236_lenCall(_self_, _140129_m.unsafe_cast_ptr<_1c0c902a6_BuiltinLenCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1c68ae62d:;
			{
				_1c24804de_capCall(_self_, _140129_m.unsafe_cast_ptr<_1c0c905a3_BuiltinCapCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1c68ae6a5:;
			{
				_1c2480797_deleteCall(_self_, _140129_m.unsafe_cast_ptr<_1c0c9097c_BuiltinDeleteCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1c68ae72c:;
			{
				_1c2481b83_sizeof(_self_, _140129_m.unsafe_cast_ptr<_1c0c918d4_SizeofExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1c68ae7a4:;
			{
				_1c2481e3b_alignof(_self_, _140129_m.unsafe_cast_ptr<_1c0c91ac1_AlignofExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1c68ae82b:;
			{
				_1c24821e4_runeLit(_self_, _140129_m.unsafe_cast_ptr<_1c0c91d68_RuneExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1c68ae8a3:;
			{
				_1c248249c_structureStatic(_self_, _140129_m.unsafe_cast_ptr<_1c0c8c946_StructStaticIdentExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1c68ae92a:;
			{
				_1c2482755_integratedToStr(_self_, _140129_m.unsafe_cast_ptr<_1c0c92165_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1c68ae9a2:;
			{
				_1c2482a0d_backendEmit(_self_, _140129_m.unsafe_cast_ptr<_1c0c9253e_BackendEmitExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1c68aea29:;
			{
				_1c2482cb6_free(_self_, _140129_m.unsafe_cast_ptr<_1c0c9283b_FreeExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1c68aeaa1:;
			{
				_1c248306e_strComp(_self_, _140129_m.unsafe_cast_ptr<_1c0edad81_StrCompExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1c68aeb28:;
			{
				_1c24783e9_var(_self_, (*(_140129_m.unsafe_cast_ptr<_1c0eda90d_RefExprModel>()))._field_Var);
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1c68aeba0:;
			{
				_1c2483327_emptyCompare(_self_, _140129_m.unsafe_cast_ptr<_1c0eda589_EmptyCompareExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1c68aec27:;
			{
				_1c24835d0_unsafeDeref(_self_, _140129_m.unsafe_cast_ptr<_1c0edca20_UnsafeDerefExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1c68aec9e:;
			{
				_1c2483888_unsafeCasting(_self_, _140129_m.unsafe_cast_ptr<_1c0edcd1c_UnsafeCastingExprModel>());
			}
		}
		else {
			_case_begin_1c68ac9e4:;
			{
				_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1c68a7a22:;
	};
}



inline void _1c2483de9_initExpr(jule::Ptr<_1c2475e30_exprCoder> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _150232_t) {
	if (_1c0dd9c91_NilCompatible(_150232_t.ptr())) {
		if ((_1c0ddaa61_Ptr(_150232_t) != nullptr)) {
			_1c254bb4e_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		} else {
			_1c25630b6_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _150232_t);
			_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1c0de5ab0_Tuple> _151213_tup = _1c0ddc36a_Tup(_150232_t);;
	if ((_151213_tup != nullptr)) {
		_1c2567890_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _151213_tup);
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
		{
			auto expr = &((*_151213_tup.alloc)._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c68d3289:;
			if (it != expr_end) {
				jule::I64 _151618_i = it - expr->begin();
				jule::Ptr<_1c0dd7de3_TypeKind> _151625_tt = *it;
				{
					if ((!(_1c256a3dc_shouldInitialized(&(_151625_tt))))) {
						goto _iter_next_1c68d3289;
					};
					_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(".__jule_result_arg", 18));
					_1c254bb4e_write((*_self_.alloc)._field_oc, _2021d80b3_Itoa(_151618_i));
					_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("=", 1));
					_1c2483de9_initExpr(_self_, _151625_tt);
					if ((((*_151213_tup.alloc)._field_Types.len() - _151618_i) > 1LL)) {
						_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
					};
				}
				_iter_next_1c68d3289:;
				++it;
				_151618_i++;
				goto _iter_begin_1c68d3289;
			}
			_iter_end_1c68d3289:;
		};
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	jule::Ptr<_1c0cab27d_Enum> _153113_enm = _1c0ddace7_Enum(_150232_t);;
	if ((_153113_enm != nullptr)) {
		_1c2483b41_model(_self_, (*((*((*((*_153113_enm.alloc)._field_Items[0LL]))._field_Value))._field_Data))._field_Model);
		return;;
	};
	jule::Ptr<_1c0de09bc_Prim> _15369_prim = _1c0dda544_Prim(_150232_t);;
	if ((_15369_prim != nullptr)) {
		if (_2021e5ad7_IsNum((*_15369_prim.alloc)._field_Kind)) {
			_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("0", 1));
		} else if (_1c0de3bbd_IsBool(_15369_prim)) {
			_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("false", 5));
		} else if (_1c0de3e54_IsStr(_15369_prim)) {
			_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::Str()", 11));
		};
		return;;
	};
	if ((_1c0ddb314_Arr(_150232_t) != nullptr)) {
		jule::Ptr<_1c0de72dc_Arr> _154817_arr = _1c0ddb314_Arr(_150232_t);;
		_1c25630b6_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _150232_t);
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
		_1c2483de9_initExpr(_self_, (*(_154817_arr))._field_Elem);
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	jule::Ptr<_1c0c83552_StructIns> _155513_s = _1c0ddbab7_Struct(_150232_t);;
	if ((((_155513_s != nullptr) && (*((*_155513_s.alloc)._field_Decl))._field_Binded) && (_1c2569c5a_findDirective(&((*(*_155513_s.alloc)._field_Decl.alloc)._field_Directives), jule::Str::lit("typedef", 7)) == nullptr))) {
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
		_1c25630b6_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _150232_t);
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("){}", 3));
		return;;
	};
	_1c25630b6_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _150232_t);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("()", 2));
}





std::ostream &operator<<(std::ostream &_Stream, _1c2475e30_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "varPrefixes:" << _Src._field_varPrefixes;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c2487084_TestCoder> static__1c2487507_New(jule::Ptr<_1c254b467_ObjectCoder>* _2924_oc) {
	return jule::new_ptr<_1c2487084_TestCoder>(_1c2487084_TestCoder{._field_oc=(*(_2924_oc))});;
}



inline jule::Ptr<_1c0d09782_ImportInfo> _1c248778d_findTestingPackage(jule::Ptr<_1c2487084_TestCoder> _self_) {
	{
		auto expr = &((*((*((*(_self_))._field_oc))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c68e2ee1:;
		if (it != expr_end) {
			jule::Ptr<_1c0d09782_ImportInfo> _3621_imp = *it;
			{
				if ((*(_3621_imp))._field_LinkPath.equal("std::testing", 12)) {
					return _3621_imp;;
				};
			}
			_iter_next_1c68e2ee1:;
			++it;
			goto _iter_begin_1c68e2ee1;
		}
		_iter_end_1c68e2ee1:;
	};
	return nullptr;;
}



inline void _1c2487a46_appendTest(jule::Ptr<_1c2487084_TestCoder> _self_, jule::Ptr<_1c0c98699_FnIns> _4434_f) {
	_1c254c501_indent((*(_self_))._field_oc);
	_1c2488283_callTmReset(_self_);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("std::cout << \">>> TEST RUNNING: \" ", 34));
	_1c2484bdb_cstrLit(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*((*(_4434_f))._field_Decl))._field_Ident);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(" << std::endl;\n", 15));
	_1c254c501_indent((*_self_.alloc)._field_oc);
	static__1c248b275_funcIns(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &(_4434_f));
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("(_t);\n", 6));
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("post_test();\n", 13));
}



inline void _1c2487cee_appendPackageTests(jule::Ptr<_1c2487084_TestCoder> _self_, jule::Ptr<_1c0d0c6a8_Package>* _5943_p) {
	{
		auto expr = &((*((*(_5943_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c68e97ab:;
		if (it != expr_end) {
			jule::Ptr<_1c0da1681_SymbolTable> _6021_file = *it;
			{
				{
					auto expr = &((*(_6021_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c68ea229:;
					if (it != expr_end) {
						jule::Ptr<_1c0c95795_Fn> _6125_f = *it;
						{
							if (_1c256a123_hasDirective(&((*(_6125_f))._field_Directives), jule::Str::lit("test", 4))) {
								_1c2487a46_appendTest(_self_, (*_6125_f.alloc)._field_Instances[0LL]);
							};
						}
						_iter_next_1c68ea229:;
						++it;
						goto _iter_begin_1c68ea229;
					}
					_iter_end_1c68ea229:;
				};
			}
			_iter_next_1c68e97ab:;
			++it;
			goto _iter_begin_1c68e97ab;
		}
		_iter_end_1c68e97ab:;
	};
}



inline jule::Bool _1c2488085_readyTestingPackage(jule::Ptr<_1c2487084_TestCoder> _self_) {
	jule::Ptr<_1c0d09782_ImportInfo> _7013_p = _1c248778d_findTestingPackage(_self_);;
	if ((_7013_p == nullptr)) {
		return false;;
	};
	(*_self_.alloc)._field_t=(*(_1c0d0a95e_FindStruct(_7013_p.ptr(), jule::Str::lit("T", 1), false)))._field_Instances[0LL];
	(*_self_.alloc)._field_tmReset=_1c0c845b9_FindMethod((*_self_.alloc)._field_t.ptr(), jule::Str::lit("reset", 5), false);
	(*_self_.alloc)._field_tmFailed=_1c0c845b9_FindMethod((*_self_.alloc)._field_t, jule::Str::lit("Failed", 6), false);
	(*_self_.alloc)._field_tmSkipped=_1c0c845b9_FindMethod((*_self_.alloc)._field_t, jule::Str::lit("Skipped", 7), false);
	return true;;
}



inline void _1c2488283_callTmReset(jule::Ptr<_1c2487084_TestCoder> _self_) {
	static__1c248ae89_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmReset));
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1c2488481_callTmFailed(jule::Ptr<_1c2487084_TestCoder> _self_) {
	static__1c248ae89_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmFailed));
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1c248867e_callTmSkipped(jule::Ptr<_1c2487084_TestCoder> _self_) {
	static__1c248ae89_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmSkipped));
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1c248887c_Serialize(jule::Ptr<_1c2487084_TestCoder> _self_) {
	_1c25590e0_serializeHead((*(_self_))._field_oc);
	__JULE_DEFER({
		_1c2558de2_end((*_self_.alloc)._field_oc);
	});;
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\nvoid test_point(void) {\n", 25));
	_1c254c105_addIndent((*_self_.alloc)._field_oc);
	_1c254c501_indent((*_self_.alloc)._field_oc);
	if ((!(_1c2488085_readyTestingPackage(_self_)))) {
		_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
		_1c254c303_doneIndent((*_self_.alloc)._field_oc);
		return;;
	};
	_234c76a64_StrBuilder _11813_tb = static__234c76ec6_New(40LL);;
	_1c256136c_structureIns((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &(_11813_tb), (*_self_.alloc)._field_t);
	_1c255dad9_asSptr((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _234c787d0_Buf(&_11813_tb));
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(" _t = jule::new_ptr<", 20));
	_1c254be07_writeBytes((*_self_.alloc)._field_oc, _234c787d0_Buf(&_11813_tb));
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(">(); _t.ref = nullptr;\n", 23));
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("auto post_test = [&](void) {\n", 29));
	_1c254c105_addIndent((*_self_.alloc)._field_oc);
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("++total;\n", 9));
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("if (", 4));
	_1c2488481_callTmFailed(_self_);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("else if (", 9));
	_1c248867e_callTmSkipped(_self_);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1c254c303_doneIndent((*_self_.alloc)._field_oc);
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("};\n", 3));
	_1c2487cee_appendPackageTests(_self_, &((*((*(*_self_.alloc)._field_oc.alloc)._field_ir))._field_Main));
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("\n\n", 2));
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("if (failed != 0) std::exit(1);\n", 31));
	_1c254c303_doneIndent((*_self_.alloc)._field_oc);
	_1c254c501_indent((*_self_.alloc)._field_oc);
	_1c254bb4e_write((*_self_.alloc)._field_oc, jule::Str::lit("}\n", 2));
}





std::ostream &operator<<(std::ostream &_Stream, _1c2487084_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline void static__1c248a3a6_writeIdentTo(_234c76a64_StrBuilder* _3433_buf, jule::Str* _3451_ident) {
	{
		auto expr = _3451_ident;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6914ac3:;
		if (it != expr_end) {
			jule::U8 *_3516_b = it;
			{
				if (((*(_3516_b)) >= 128LLU)) {
					goto _julec_label_1c6915c6c;
				};
			}
			_iter_next_1c6914ac3:;
			++it;
			goto _iter_begin_1c6914ac3;
		}
		_iter_end_1c6914ac3:;
	};
	_234c77537_WriteStr(_3433_buf, (*(_3451_ident)));
	return;;
	_julec_label_1c6915c6c:;
	{
		auto expr = _3451_ident;
		char *it = expr->operator char*();
		const char *end = it + expr->len();
		std::size_t len;
		jule::I32 _4516_r;
		_iter_begin_1c691608b:;
		std::tie(_4516_r, len) = jule::utf8_decode_rune_str(it, end - it);
		if (it < end) {
			{
				if ((_4516_r < 128LL)) {
					_234c777e0_WriteByte(_3433_buf, static_cast<jule::U8>(_4516_r));
					goto _iter_next_1c691608b;
				};
				_234c77537_WriteStr(_3433_buf, _2021d7ce9_FmtInt(static_cast<jule::I64>(_4516_r), 15LL));
			}
			_iter_next_1c691608b:;
			it += len;
			goto _iter_begin_1c691608b;
		}
	};
}



inline void static__1c248a74c_toOut(_234c76a64_StrBuilder* _6226_buf, jule::Str _6243_ident, jule::Uintptr _6255_addr) {
	_234c777e0_WriteByte(_6226_buf, '_');
	if ((_6255_addr != 0LLU)) {
		_234c77537_WriteStr(_6226_buf, _2021d7931_FmtUint(static_cast<jule::U64>(_6255_addr), 15LL));
		_234c777e0_WriteByte(_6226_buf, '_');
	};
	static__1c248a3a6_writeIdentTo(_6226_buf, &(_6243_ident));
}



inline void static__1c248ab9d_toLocal(_234c76a64_StrBuilder* _7728_buf, jule::I64 _7745_row, jule::I64 _7755_col, jule::Str* _7766_ident) {
	_234c777e0_WriteByte(_7728_buf, '_');
	_234c77537_WriteStr(_7728_buf, _2021d80b3_Itoa(_7745_row));
	_234c77537_WriteStr(_7728_buf, _2021d80b3_Itoa(_7755_col));
	_234c777e0_WriteByte(_7728_buf, '_');
	static__1c248a3a6_writeIdentTo(_7728_buf, _7766_ident);
}



inline void static__1c248ae89_func(_234c76a64_StrBuilder* _8525_buf, jule::Ptr<_1c0c95795_Fn>* _8543_f) {
	{
		
		if ((*((*(_8543_f))))._field_Binded) {
			_case_begin_1c691a90e:;
			{
				_234c77537_WriteStr(_8525_buf, (*((*(_8543_f))))._field_Ident);
				return;;
			}
		}
		else if ((*((*(_8543_f))))._field_Ident.equal("main", 4)) {
			_case_begin_1c691a9a8:;
			{
				_234c77537_WriteStr(_8525_buf, jule::Str::lit("entry_point", 11));
				return;;
			}
		}
		else if (_1c0c95e9e_IsMethod((*(_8543_f)).ptr())) {
			_case_begin_1c691aa1e:;
			{
				if ((*((*(_8543_f))))._field_Statically) {
					_234c77537_WriteStr(_8525_buf, jule::Str::lit("static_", 7));
				};
			}
		}
		_match_end_1c691a7aa:;
	};
	static__1c248a74c_toOut(_8525_buf, (*((*(_8543_f))))._field_Ident, static_cast<jule::Uintptr>((*(_8543_f))));
}



inline void static__1c248b275_funcIns(_234c76a64_StrBuilder* _10128_buf, jule::Ptr<_1c0c98699_FnIns>* _10146_f) {
	if (_1c0c99b2e_IsBuiltin((*(_10146_f)).ptr())) {
		_234c77537_WriteStr(_10128_buf, jule::Str::lit("jule::", 6));
		_234c77537_WriteStr(_10128_buf, (*((*((*(_10146_f))))._field_Decl))._field_Ident);
		return;;
	};
	if (((*(*((*(_10146_f))))._field_Decl.alloc)._field_Binded || ((*((*(_10146_f))))._field_Generics.len() == 0LL))) {
		static__1c248ae89_func(_10128_buf, &((*((*(_10146_f))))._field_Decl));
		return;;
	};
	static__1c248a74c_toOut(_10128_buf, (*(*((*(_10146_f))))._field_Decl.alloc)._field_Ident, static_cast<jule::Uintptr>((*(_10146_f))));
}



inline void static__1c248b561_traitDecl(_234c76a64_StrBuilder* _11630_buf, jule::Ptr<_1c0ca8a72_Trait> _11647_t) {
	static__1c248a74c_toOut(_11630_buf, (*(_11647_t))._field_Ident, static_cast<jule::Uintptr>(_11647_t));
}



inline void static__1c248b84c_param(_234c76a64_StrBuilder* _12026_buf, jule::Ptr<_1c0c93cc1_Param>* _12044_p) {
	if ((_1c0c4c131_IsAnonIdent((*((*(_12044_p))))._field_Ident) || _1c0c4bd67_IsIgnoreIdent((*((*(_12044_p))))._field_Ident))) {
		return;;
	};
	if (_1c0c943dc_IsSelf((*(_12044_p)).ptr())) {
		_234c77537_WriteStr(_12026_buf, jule::Str::lit("_self_", 6));
		return;;
	};
	if (((*((*(_12044_p))))._field_Token == nullptr)) {
		static__1c248ab9d_toLocal(_12026_buf, 0LL, 0LL, &((*((*(_12044_p))))._field_Ident));
		return;;
	};
	static__1c248ab9d_toLocal(_12026_buf, (*((*((*(_12044_p))))._field_Token))._field_Row, (*((*((*(_12044_p))))._field_Token))._field_Column, &((*((*(_12044_p))))._field_Ident));
}



inline void static__1c248bb38_structure(_234c76a64_StrBuilder* _13530_buf, jule::Ptr<_1c0c807c4_Struct>* _13548_s) {
	if ((*((*(_13548_s))))._field_Binded) {
		if ((!(_1c256a123_hasDirective(&((*((*(_13548_s))))._field_Directives), jule::Str::lit("typedef", 7))))) {
			_234c77537_WriteStr(_13530_buf, jule::Str::lit("struct ", 7));
		};
		_234c77537_WriteStr(_13530_buf, (*((*(_13548_s))))._field_Ident);
		return;;
	};
	static__1c248a74c_toOut(_13530_buf, (*((*(_13548_s))))._field_Ident, static_cast<jule::Uintptr>((*(_13548_s))));
}



inline void static__1c248be24_structureIns(_234c76a64_StrBuilder* _14633_buf, jule::Ptr<_1c0c83552_StructIns>* _14651_s) {
	if (((*((*((*(_14651_s))))._field_Decl))._field_Binded || ((*((*(_14651_s))))._field_Generics.len() == 0LL))) {
		static__1c248bb38_structure(_14633_buf, &((*((*(_14651_s))))._field_Decl));
		return;;
	};
	static__1c248a74c_toOut(_14633_buf, (*(*((*(_14651_s))))._field_Decl.alloc)._field_Ident, static_cast<jule::Uintptr>((*(_14651_s))));
}



inline void static__1c248c210_field(_234c76a64_StrBuilder* _15426_buf, jule::Ptr<_1c0c7c89d_Field>* _15444_f) {
	if ((*((*((*(_15444_f))))._field_Owner))._field_Binded) {
		_234c77537_WriteStr(_15426_buf, (*((*(_15444_f))))._field_Ident);
		return;;
	};
	_234c77537_WriteStr(_15426_buf, jule::Str::lit("_field_", 7));
	static__1c248a3a6_writeIdentTo(_15426_buf, &((*((*(_15444_f))))._field_Ident));
}



inline void static__1c248c4eb_var(_234c76a64_StrBuilder* _16424_buf, jule::Ptr<_1c0d4dde2_Var> _16445_v) {
	{
		
		if ((*(_16445_v))._field_Binded) {
			_case_begin_1c692917b:;
			{
				_234c77537_WriteStr(_16424_buf, (*_16445_v.alloc)._field_Ident);
			}
		}
		else if ((*(_16445_v))._field_Ident.equal("error", 5)) {
			_case_begin_1c69291e2:;
			{
				_234c77537_WriteStr(_16424_buf, jule::Str::lit("except.error", 12));
			}
		}
		else if ((*(_16445_v))._field_Ident.equal("self", 4)) {
			_case_begin_1c6929258:;
			{
				_234c77537_WriteStr(_16424_buf, jule::Str::lit("_self_", 6));
			}
		}
		else if (((*(_16445_v))._field_RetOrder == -1LL)) {
			_case_begin_1c69292be:;
			{
				_234c77537_WriteStr(_16424_buf, jule::Str::lit("__jule_func_result", 18));
			}
		}
		else if (((*(_16445_v))._field_RetOrder >= 0LL)) {
			_case_begin_1c6929335:;
			{
				_234c77537_WriteStr(_16424_buf, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
				_234c77537_WriteStr(_16424_buf, _2021d80b3_Itoa((*_16445_v.alloc)._field_RetOrder));
			}
		}
		else if (((*(_16445_v))._field_Scope != nullptr)) {
			_case_begin_1c692939b:;
			{
				static__1c248ab9d_toLocal(_16424_buf, (*((*_16445_v.alloc)._field_Token))._field_Row, (*(*_16445_v.alloc)._field_Token.alloc)._field_Column, &((*_16445_v.alloc)._field_Ident));
			}
		}
		else {
			_case_begin_1c6929115:;
			{
				static__1c248a74c_toOut(_16424_buf, (*(_16445_v))._field_Ident, static_cast<jule::Uintptr>(_16445_v));
			}
		}
		_match_end_1c6929016:;
	};
}



inline void static__1c248c7d7_iterBegin(_234c76a64_StrBuilder* _18630_buf, jule::Uintptr _18647_it) {
	_234c77537_WriteStr(_18630_buf, jule::Str::lit("_iter_begin_", 12));
	_234c77537_WriteStr(_18630_buf, _2021d7931_FmtUint(static_cast<jule::U64>(_18647_it), 15LL));
}



inline void static__1c248cac3_iterEnd(_234c76a64_StrBuilder* _19128_buf, jule::Uintptr _19145_it) {
	_234c77537_WriteStr(_19128_buf, jule::Str::lit("_iter_end_", 10));
	_234c77537_WriteStr(_19128_buf, _2021d7931_FmtUint(static_cast<jule::U64>(_19145_it), 15LL));
}



inline void static__1c248cdae_iterNext(_234c76a64_StrBuilder* _19629_buf, jule::Uintptr _19646_it) {
	_234c77537_WriteStr(_19629_buf, jule::Str::lit("_iter_next_", 11));
	_234c77537_WriteStr(_19629_buf, _2021d7931_FmtUint(static_cast<jule::U64>(_19646_it), 15LL));
}



inline void static__1c248d19a_label(_234c76a64_StrBuilder* _20126_buf, jule::Uintptr _20143_u) {
	_234c77537_WriteStr(_20126_buf, jule::Str::lit("_julec_label_", 13));
	_234c77537_WriteStr(_20126_buf, _2021d7931_FmtUint(static_cast<jule::U64>(_20143_u), 15LL));
}



inline void static__1c248d486_matchEnd(_234c76a64_StrBuilder* _20629_buf, jule::Uintptr _20646_m) {
	_234c77537_WriteStr(_20629_buf, jule::Str::lit("_match_end_", 11));
	_234c77537_WriteStr(_20629_buf, _2021d7931_FmtUint(static_cast<jule::U64>(_20646_m), 15LL));
}



inline void static__1c248d772_caseBegin(_234c76a64_StrBuilder* _21130_buf, jule::Uintptr _21147_c) {
	_234c77537_WriteStr(_21130_buf, jule::Str::lit("_case_begin_", 12));
	_234c77537_WriteStr(_21130_buf, _2021d7931_FmtUint(static_cast<jule::U64>(_21147_c), 15LL));
}





std::ostream &operator<<(std::ostream &_Stream, _1c2489d9a_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c25493ee_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c25499c6_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "ti:" << _Src._field_ti << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c2549da0_traitCast _Src) {
	_Stream << "traitCast{";
	_Stream << "t1:" << _Src._field_t1 << ", ";
	_Stream << "t2:" << _Src._field_t2;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c254a2bd_anonHash _Src) {
	_Stream << "anonHash{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c255be7d_Str(_1c255bad7_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1c255c2be_Equal(jule::Ptr<_1c255bad7_customType> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _4121_k) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c255bad7_customType _Src) {
	_Stream << _1c255be7d_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1c255c6ed_typeCoder> static__1c255cc3c_new(jule::Ptr<_1c254b467_ObjectCoder>* _6624_oc) {
	jule::Ptr<_1c255c6ed_typeCoder> _6713_tc = jule::new_ptr<_1c255c6ed_typeCoder>(_1c255c6ed_typeCoder{._field_oc=(*(_6624_oc)), });;
	(*(_6713_tc))._field_rc=static__1c2565ea9_new(&(_6713_tc));
	return _6713_tc;;
}



inline void _1c255d0a0_toType(_1c255c6ed_typeCoder* _self_, _234c76a64_StrBuilder* _7330_buf, jule::Str _7351_id) {
	if ((!_7351_id.equal("uintptr", 7))) {
		_7351_id=_2021da22a_RealKindOf(_7351_id);
	};
	_234c77537_WriteStr(_7330_buf, jule::Str::lit("jule::", 6));
	if (((97LL <= _7351_id[0LL]) && (_7351_id[0LL] <= 122LLU))) {
		_234c777e0_WriteByte(_7330_buf, (_7351_id[0LL] - 32LLU));
	} else {
		_234c777e0_WriteByte(_7330_buf, _7351_id[0LL]);
	};
	_234c77537_WriteStr(_7330_buf, _7351_id.slice(1LL));
}



inline void _1c255d413_prim(_1c255c6ed_typeCoder* _self_, _234c76a64_StrBuilder* _8728_buf, jule::Ptr<_1c0de09bc_Prim> _8745_p) {
	_1c255d0a0_toType(_self_, _8728_buf, (*(_8745_p))._field_Kind);
}



inline void _1c255d776_tuple(_1c255c6ed_typeCoder* _self_, _234c76a64_StrBuilder* _9229_buf, jule::Ptr<_1c0de5ab0_Tuple> _9250_t) {
	_234c77537_WriteStr(_9229_buf, jule::Str::lit("std::tuple<", 11));
	{
		auto expr = &((*_9250_t.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6aa0ae9:;
		if (it != expr_end) {
			jule::I64 _9414_i = it - expr->begin();
			jule::Ptr<_1c0dd7de3_TypeKind> _9421_tk = *it;
			{
				_1c25630b6_kind(_self_, _9229_buf, _9421_tk);
				if ((((*(_9250_t))._field_Types.len() - _9414_i) > 1LL)) {
					_234c777e0_WriteByte(_9229_buf, ',');
				};
			}
			_iter_next_1c6aa0ae9:;
			++it;
			_9414_i++;
			goto _iter_begin_1c6aa0ae9;
		}
		_iter_end_1c6aa0ae9:;
	};
	_234c777e0_WriteByte(_9229_buf, '>');
}



inline void _1c255dad9_asSptr(_1c255c6ed_typeCoder* _self_, _234c76a64_StrBuilder* _10430_buf, jule::Slice<jule::U8> _10447_elem) {
	_234c77537_WriteStr(_10430_buf, jule::Str::lit("jule::Ptr<", 10));
	_234c7727e_Write(_10430_buf, _10447_elem);
	_234c777e0_WriteByte(_10430_buf, '>');
}



inline void _1c255de4c_sptr(_1c255c6ed_typeCoder* _self_, _234c76a64_StrBuilder* _11128_buf, jule::Ptr<_1c0de44e8_Sptr> _11149_sptr) {
	_234c77537_WriteStr(_11128_buf, jule::Str::lit("jule::Ptr<", 10));
	_1c25630b6_kind(_self_, _11128_buf, (*(_11149_sptr))._field_Elem);
	_234c777e0_WriteByte(_11128_buf, '>');
}



inline void _1c255e2b0_ptr(_1c255c6ed_typeCoder* _self_, _234c76a64_StrBuilder* _11827_buf, jule::Ptr<_1c0de7cb0_Ptr> _11848_p) {
	;
	if (_1c0de87e9_IsUnsafe(_11848_p.ptr())) {
		_234c77537_WriteStr(_11827_buf, jule::Str::lit("void*", 5));
	} else {
		_1c25630b6_kind(_self_, _11827_buf, (*(_11848_p))._field_Elem);
		_234c77537_WriteStr(_11827_buf, jule::Str::lit("*", 1));
	};
}



inline void _1c255e623_enumDecl(_1c255c6ed_typeCoder* _self_, _234c76a64_StrBuilder* _12932_buf, jule::Ptr<_1c0cab27d_Enum> _12953_e) {
	_1c25630b6_kind(_self_, _12932_buf, (*((*(_12953_e))._field_Kind))._field_Kind);
}



inline void _1c255e986_typeEnumDecl(_1c255c6ed_typeCoder* _self_, _234c76a64_StrBuilder* _13436_buf, jule::Ptr<_1c0cac988_TypeEnum> _13457_e) {
	_234c77537_WriteStr(_13436_buf, jule::Str::lit("jule::Any", 9));
}



inline void _1c255ece9_asSlice(_1c255c6ed_typeCoder* _self_, _234c76a64_StrBuilder* _13831_buf, jule::Ptr<_1c0dd7de3_TypeKind> _13852_elem) {
	_234c77537_WriteStr(_13831_buf, jule::Str::lit("jule::Slice<", 12));
	_1c25630b6_kind(_self_, _13831_buf, _13852_elem);
	_234c777e0_WriteByte(_13831_buf, '>');
}



inline void _1c256015c_slice(_1c255c6ed_typeCoder* _self_, _234c76a64_StrBuilder* _14529_buf, jule::Ptr<_1c0de4ebb_Slc> _14550_s) {
	_1c255ece9_asSlice(_self_, _14529_buf, (*(_14550_s))._field_Elem);
}



inline void _1c25604c0_mapType(_1c255c6ed_typeCoder* _self_, _234c76a64_StrBuilder* _15031_buf, jule::Ptr<_1c0de6660_Map> _15052_m) {
	_234c77537_WriteStr(_15031_buf, jule::Str::lit("jule::Map<", 10));
	_1c25630b6_kind(_self_, _15031_buf, (*(_15052_m))._field_Key);
	_234c777e0_WriteByte(_15031_buf, ',');
	_1c25630b6_kind(_self_, _15031_buf, (*_15052_m.alloc)._field_Val);
	_234c777e0_WriteByte(_15031_buf, '>');
}



inline void _1c2560b96_traitDecl(_1c255c6ed_typeCoder* _self_, _234c76a64_StrBuilder* _16533_buf, jule::Ptr<_1c0ca8a72_Trait> _16550_t) {
	_234c77537_WriteStr(_16533_buf, jule::Str::lit("jule::Trait<", 12));
	static__1c248b561_traitDecl(_16533_buf, _16550_t);
	_234c777e0_WriteByte(_16533_buf, '>');
}



inline void _1c2561009_structure(_1c255c6ed_typeCoder* _self_, _234c76a64_StrBuilder* _17233_buf, jule::Ptr<_1c0c807c4_Struct> _17250_s) {
	static__1c248bb38_structure(_17233_buf, &(_17250_s));
}



inline void _1c256136c_structureIns(_1c255c6ed_typeCoder* _self_, _234c76a64_StrBuilder* _17736_buf, jule::Ptr<_1c0c83552_StructIns> _17757_s) {
	if ((!((*((*(_17757_s))._field_Decl))._field_Binded))) {
		static__1c248be24_structureIns(_17736_buf, &(_17757_s));
		return;;
	};
	jule::Ptr<_1c0c5dd57_Directive> _1829_d = _1c2569c5a_findDirective(&((*(*_17757_s.alloc)._field_Decl.alloc)._field_Directives), jule::Str::lit("namespace", 9));;
	if ((_1829_d != nullptr)) {
		_234c7727e_Write(_17736_buf, _1c25599d6_concatAllParts((*_1829_d.alloc)._field_Args));
		_234c77537_WriteStr(_17736_buf, jule::Str::lit("::", 2));
	};
	static__1c248be24_structureIns(_17736_buf, &(_17757_s));
	if (((*_17757_s.alloc)._field_Generics.len() > 0LL)) {
		_234c777e0_WriteByte(_17736_buf, '<');
		{
			auto expr = &((*_17757_s.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c6ab0037:;
			if (it != expr_end) {
				jule::I64 _19018_i = it - expr->begin();
				jule::Ptr<_1c0dd650c_InsGeneric> _19025_g = *it;
				{
					_1c25630b6_kind(_self_, _17736_buf, (*(_19025_g))._field_Kind);
					if ((((*_17757_s.alloc)._field_Generics.len() - _19018_i) > 1LL)) {
						_234c777e0_WriteByte(_17736_buf, ',');
					};
				}
				_iter_next_1c6ab0037:;
				++it;
				_19018_i++;
				goto _iter_begin_1c6ab0037;
			}
			_iter_end_1c6ab0037:;
		};
		_234c777e0_WriteByte(_17736_buf, '>');
	};
}



inline void _1c25616d0_array(_1c255c6ed_typeCoder* _self_, _234c76a64_StrBuilder* _20129_buf, jule::Ptr<_1c0de72dc_Arr> _20150_a) {
	_234c77537_WriteStr(_20129_buf, jule::Str::lit("jule::Array<", 12));
	_1c25630b6_kind(_self_, _20129_buf, (*(_20150_a))._field_Elem);
	_234c777e0_WriteByte(_20129_buf, ',');
	_234c77537_WriteStr(_20129_buf, _2021d80b3_Itoa((*_20150_a.alloc)._field_N));
	_234c777e0_WriteByte(_20129_buf, '>');
}



inline void _1c2561da6_paramIns(_1c255c6ed_typeCoder* _self_, _234c76a64_StrBuilder* _22432_buf, jule::Ptr<_1c0c976ed_ParamIns>* _22454_p) {
	if ((*((*((*(_22454_p))))._field_Decl))._field_Variadic) {
		_234c77537_WriteStr(_22432_buf, jule::Str::lit("jule::Slice<", 12));
		_1c25630b6_kind(_self_, _22432_buf, (*((*(_22454_p))))._field_Kind);
		_234c777e0_WriteByte(_22432_buf, '>');
	} else {
		_1c25630b6_kind(_self_, _22432_buf, (*((*(_22454_p))))._field_Kind);
	};
	if ((*((*((*(_22454_p))))._field_Decl))._field_Reference) {
		_234c777e0_WriteByte(_22432_buf, '*');
	};
}



inline void _1c256257c_funcInsResult(_1c255c6ed_typeCoder* _self_, _234c76a64_StrBuilder* _25637_s, jule::Ptr<_1c0c98699_FnIns>* _25657_f) {
	if (_1c0c95c18_IsVoid((*((*(_25657_f))))._field_Decl.ptr())) {
		if ((*(*((*(_25657_f))))._field_Decl.alloc)._field_Exceptional) {
			_234c77537_WriteStr(_25637_s, jule::Str::lit("jule::VoidExceptional", 21));
		} else {
			_234c77537_WriteStr(_25637_s, jule::Str::lit("void", 4));
		};
		return;;
	};
	if ((*(*((*(_25657_f))))._field_Decl.alloc)._field_Exceptional) {
		_234c77537_WriteStr(_25637_s, jule::Str::lit("jule::Exceptional<", 18));
		_1c2568066_codeMut1((*(_self_))._field_rc.ptr(), _25637_s, &((*((*(_25657_f))))._field_Result));
		_234c777e0_WriteByte(_25637_s, '>');
		return;;
	};
	_1c2568066_codeMut1((*(_self_))._field_rc, _25637_s, &((*((*(_25657_f))))._field_Result));
}



inline void _1c25628e0_anonFunc(_1c255c6ed_typeCoder* _self_, _234c76a64_StrBuilder* _27432_buf, jule::Ptr<_1c0c98699_FnIns> _27453_f) {
	if ((((*(_27453_f))._field_Result != nullptr) && (_1c0ddc36a_Tup((*_27453_f.alloc)._field_Result) != nullptr))) {
		_1c254d27c_pushResultIns((*(_self_))._field_oc, &(_27453_f));
	};
	_1c256257c_funcInsResult(_self_, _27432_buf, &(_27453_f));
	if (((*_27453_f.alloc)._field_Params.len() == 0LL)) {
		return;;
	};
	_234c777e0_WriteByte(_27432_buf, ',');
	{
		auto expr = &((*_27453_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6ac170d:;
		if (it != expr_end) {
			jule::I64 _28314_i = it - expr->begin();
			jule::Ptr<_1c0c976ed_ParamIns> _28321_param = *it;
			{
				if (_1c0c943dc_IsSelf((*(_28321_param))._field_Decl.ptr())) {
					goto _iter_next_1c6ac170d;
				};
				_1c2561da6_paramIns(_self_, _27432_buf, &(_28321_param));
				if ((((*_27453_f.alloc)._field_Params.len() - _28314_i) > 1LL)) {
					_234c777e0_WriteByte(_27432_buf, ',');
				};
			}
			_iter_next_1c6ac170d:;
			++it;
			_28314_i++;
			goto _iter_begin_1c6ac170d;
		}
		_iter_end_1c6ac170d:;
	};
}



inline void _1c2562c53_func(_1c255c6ed_typeCoder* _self_, _234c76a64_StrBuilder* _29528_buf, jule::Ptr<_1c0c98699_FnIns> _29549_f) {
	_234c77537_WriteStr(_29528_buf, jule::Str::lit("jule::Fn<", 9));
	_1c25628e0_anonFunc(_self_, _29528_buf, _29549_f);
	_234c777e0_WriteByte(_29528_buf, '>');
}



inline void _1c25630b6_kind(_1c255c6ed_typeCoder* _self_, _234c76a64_StrBuilder* _30228_buf, jule::Ptr<_1c0dd7de3_TypeKind> _30249_k) {
	{
		
		if ((_1c0ddbab7_Struct(_30249_k.ptr()) != nullptr)) {
			_case_begin_1c6ac4e09:;
			{
				_1c256136c_structureIns(_self_, _30228_buf, _1c0ddbab7_Struct(_30249_k));
				return;;
			}
		}
		else if (_1c0dd8c3a_Binded(_30249_k.ptr())) {
			_case_begin_1c6ac4ea3:;
			{
				_234c77537_WriteStr(_30228_buf, (*_30249_k.alloc)._field_BindIdent);
				return;;
			}
		}
		else if ((_1c0dda544_Prim(_30249_k.ptr()) != nullptr)) {
			_case_begin_1c6ac5019:;
			{
				_1c255d413_prim(_self_, _30228_buf, _1c0dda544_Prim(_30249_k));
				return;;
			}
		}
		else if ((_1c0ddc36a_Tup(_30249_k.ptr()) != nullptr)) {
			_case_begin_1c6ac5080:;
			{
				_1c255d776_tuple(_self_, _30228_buf, _1c0ddc36a_Tup(_30249_k));
				return;;
			}
		}
		else if ((_1c0dda7ca_Sptr(_30249_k.ptr()) != nullptr)) {
			_case_begin_1c6ac50e6:;
			{
				_1c255de4c_sptr(_self_, _30228_buf, _1c0dda7ca_Sptr(_30249_k));
				return;;
			}
		}
		else if ((_1c0ddaa61_Ptr(_30249_k.ptr()) != nullptr)) {
			_case_begin_1c6ac516d:;
			{
				_1c255e2b0_ptr(_self_, _30228_buf, _1c0ddaa61_Ptr(_30249_k));
				return;;
			}
		}
		else if ((_1c0ddace7_Enum(_30249_k.ptr()) != nullptr)) {
			_case_begin_1c6ac51e5:;
			{
				_1c255e623_enumDecl(_self_, _30228_buf, _1c0ddace7_Enum(_30249_k));
				return;;
			}
		}
		else if ((_1c0ddb07d_TypeEnum(_30249_k.ptr()) != nullptr)) {
			_case_begin_1c6ac526c:;
			{
				_1c255e986_typeEnumDecl(_self_, _30228_buf, _1c0ddb07d_TypeEnum(_30249_k));
				return;;
			}
		}
		else if ((_1c0ddb59a_Slc(_30249_k.ptr()) != nullptr)) {
			_case_begin_1c6ac52e4:;
			{
				_1c256015c_slice(_self_, _30228_buf, _1c0ddb59a_Slc(_30249_k));
				return;;
			}
		}
		else if ((_1c0ddc0d4_Map(_30249_k.ptr()) != nullptr)) {
			_case_begin_1c6ac536b:;
			{
				_1c25604c0_mapType(_self_, _30228_buf, _1c0ddc0d4_Map(_30249_k));
				return;;
			}
		}
		else if ((_1c0ddbd4d_Trait(_30249_k.ptr()) != nullptr)) {
			_case_begin_1c6ac53e3:;
			{
				_1c2560b96_traitDecl(_self_, _30228_buf, _1c0ddbd4d_Trait(_30249_k));
				return;;
			}
		}
		else if ((_1c0ddb314_Arr(_30249_k.ptr()) != nullptr)) {
			_case_begin_1c6ac546a:;
			{
				_1c25616d0_array(_self_, _30228_buf, _1c0ddb314_Arr(_30249_k));
				return;;
			}
		}
		else if ((_1c0ddb831_Fn(_30249_k.ptr()) != nullptr)) {
			_case_begin_1c6ac54e2:;
			{
				_1c2562c53_func(_self_, _30228_buf, _1c0ddb831_Fn(_30249_k));
				return;;
			}
		}
		_match_end_1c6ac4c2d:;
	};
	{
		auto &_match_expr{ (*(_30249_k))._field_Kind };
		
		if (_match_expr.type_is(true, 27)) {
			_case_begin_1c6ac557a:;
			{
				_234c77537_WriteStr(_30228_buf, (*((*(_30249_k))._field_Kind.cast_ptr<_1c255bad7_customType>(27)))._field_kind);
			}
		}
		else {
			_case_begin_1c6acdc26:;
			{
				_234c77537_WriteStr(_30228_buf, jule::Str::lit("[<unimplemented_type_kind>]", 27));
			}
		}
		_match_end_1c6acdbc1:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c255c6ed_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "rc:" << _Src._field_rc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c25659d1_resultCoder> static__1c2565ea9_new(jule::Ptr<_1c255c6ed_typeCoder>* _36924_tc) {
	return jule::new_ptr<_1c25659d1_resultCoder>(_1c25659d1_resultCoder{._field_tc=(*(_36924_tc))});;
}



inline void _1c256631c_ptr(_1c25659d1_resultCoder* _self_, _234c76a64_StrBuilder* _37327_s, jule::Ptr<_1c0de7cb0_Ptr> _37346_p) {
	_234c77537_WriteStr(_37327_s, jule::Str::lit("p", 1));
	_1c2567c03_codeMut(_self_, _37327_s, &((*(_37346_p))._field_Elem));
}



inline void _1c2566680_sptr(_1c25659d1_resultCoder* _self_, _234c76a64_StrBuilder* _37828_s, jule::Ptr<_1c0de44e8_Sptr> _37847_p) {
	_234c77537_WriteStr(_37828_s, jule::Str::lit("x", 1));
	_1c2567c03_codeMut(_self_, _37828_s, &((*(_37847_p))._field_Elem));
}



inline void _1c25669e3_mapType(_1c25659d1_resultCoder* _self_, _234c76a64_StrBuilder* _38331_s, jule::Ptr<_1c0de6660_Map> _38350_p) {
	_234c77537_WriteStr(_38331_s, jule::Str::lit("m", 1));
	_1c2567c03_codeMut(_self_, _38331_s, &((*(_38350_p))._field_Key));
	_1c2567c03_codeMut(_self_, _38331_s, &((*_38350_p.alloc)._field_Val));
}



inline void _1c2566d56_slice(_1c25659d1_resultCoder* _self_, _234c76a64_StrBuilder* _38929_s, jule::Ptr<_1c0de4ebb_Slc> _38948_slc) {
	_234c77537_WriteStr(_38929_s, jule::Str::lit("s", 1));
	_1c2567c03_codeMut(_self_, _38929_s, &((*(_38948_slc))._field_Elem));
}



inline void _1c25671b9_arr(_1c25659d1_resultCoder* _self_, _234c76a64_StrBuilder* _39427_s, jule::Ptr<_1c0de72dc_Arr> _39446_arr) {
	_234c77537_WriteStr(_39427_s, jule::Str::lit("a", 1));
	_234c77537_WriteStr(_39427_s, _2021d7ce9_FmtInt(static_cast<jule::I64>((*(_39446_arr))._field_N), 16LL));
	_1c2567c03_codeMut(_self_, _39427_s, &((*_39446_arr.alloc)._field_Elem));
}



inline void _1c256752c_func(_1c25659d1_resultCoder* _self_, _234c76a64_StrBuilder* _40028_s, jule::Ptr<_1c0c98699_FnIns> _40047_f) {
	_234c77537_WriteStr(_40028_s, jule::Str::lit("f", 1));
	{
		auto expr = &((*(_40047_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6ad61e5:;
		if (it != expr_end) {
			jule::Ptr<_1c0c976ed_ParamIns> _40221_p = *it;
			{
				if ((*((*(_40221_p))._field_Decl))._field_Reference) {
					_234c77537_WriteStr(_40028_s, jule::Str::lit("r", 1));
				};
				_1c2567c03_codeMut(_self_, _40028_s, &((*_40221_p.alloc)._field_Kind));
			}
			_iter_next_1c6ad61e5:;
			++it;
			goto _iter_begin_1c6ad61e5;
		}
		_iter_end_1c6ad61e5:;
	};
	if (((*_40047_f.alloc)._field_Result != nullptr)) {
		_1c2567c03_codeMut(_self_, _40028_s, &((*_40047_f.alloc)._field_Result));
	};
}



inline void _1c2567890_tup(_1c25659d1_resultCoder* _self_, _234c76a64_StrBuilder* _41327_s, jule::Ptr<_1c0de5ab0_Tuple> _41346_tup) {
	{
		auto expr = &((*(_41346_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6ad8846:;
		if (it != expr_end) {
			jule::Ptr<_1c0dd7de3_TypeKind> _41421_t = *it;
			{
				_234c77537_WriteStr(_41327_s, jule::Str::lit("__jule_tuple_", 13));
				_1c2567c03_codeMut(_self_, _41327_s, &(_41421_t));
			}
			_iter_next_1c6ad8846:;
			++it;
			goto _iter_begin_1c6ad8846;
		}
		_iter_end_1c6ad8846:;
	};
}



inline void _1c2567c03_codeMut(_1c25659d1_resultCoder* _self_, _234c76a64_StrBuilder* _42031_s, jule::Ptr<_1c0dd7de3_TypeKind>* _42051_t) {
	{
		auto &_match_expr{ (*((*(_42051_t))))._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_1c6ad9a45:;
			{
				_1c256631c_ptr(_self_, _42031_s, (*((*(_42051_t))))._field_Kind.cast_ptr<_1c0de7cb0_Ptr>(26));
			}
		}
		else if (_match_expr.type_is(true, 21)) {
			_case_begin_1c6ada271:;
			{
				_1c2566680_sptr(_self_, _42031_s, (*((*(_42051_t))))._field_Kind.cast_ptr<_1c0de44e8_Sptr>(21));
			}
		}
		else if (_match_expr.type_is(true, 24)) {
			_case_begin_1c6ad9e0d:;
			{
				_1c25669e3_mapType(_self_, _42031_s, (*((*(_42051_t))))._field_Kind.cast_ptr<_1c0de6660_Map>(24));
			}
		}
		else if (_match_expr.type_is(true, 22)) {
			_case_begin_1c6ad9e74:;
			{
				_1c2566d56_slice(_self_, _42031_s, (*((*(_42051_t))))._field_Kind.cast_ptr<_1c0de4ebb_Slc>(22));
			}
		}
		else if (_match_expr.type_is(true, 25)) {
			_case_begin_1c6ad9eda:;
			{
				_1c25671b9_arr(_self_, _42031_s, (*((*(_42051_t))))._field_Kind.cast_ptr<_1c0de72dc_Arr>(25));
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1c6ada051:;
			{
				_1c256752c_func(_self_, _42031_s, (*((*(_42051_t))))._field_Kind.cast_ptr<_1c0c98699_FnIns>(1));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1c6ada4b3:;
			{
				jule::Ptr<_1c0cab27d_Enum> _43513_te = (*((*(_42051_t))))._field_Kind.cast_ptr<_1c0cab27d_Enum>(3);;
				static__1c248a74c_toOut(_42031_s, (*(_43513_te))._field_Ident, static_cast<jule::Uintptr>(_43513_te));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1c6ada529:;
			{
				jule::Ptr<_1c0cac988_TypeEnum> _43813_te = (*((*(_42051_t))))._field_Kind.cast_ptr<_1c0cac988_TypeEnum>(4);;
				static__1c248a74c_toOut(_42031_s, (*(_43813_te))._field_Ident, static_cast<jule::Uintptr>(_43813_te));
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1c6ada590:;
			{
				jule::Ptr<_1c0c83552_StructIns> _44117_si = (*((*(_42051_t))))._field_Kind.cast_ptr<_1c0c83552_StructIns>(0);;
				static__1c248be24_structureIns(_42031_s, &(_44117_si));
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1c6ada606:;
			{
				jule::Ptr<_1c0ca8a72_Trait> _44417_trt = (*((*(_42051_t))))._field_Kind.cast_ptr<_1c0ca8a72_Trait>(2);;
				static__1c248b561_traitDecl(_42031_s, _44417_trt);
			}
		}
		else if (_match_expr.type_is(true, 20)) {
			_case_begin_1c6ada66c:;
			{
				_234c77537_WriteStr(_42031_s, (*((*((*(_42051_t))))._field_Kind.cast_ptr<_1c0de09bc_Prim>(20)))._field_Kind);
			}
		}
		else if (_match_expr.type_is(true, 23)) {
			_case_begin_1c6ada6e4:;
			{
				_1c2567890_tup(_self_, _42031_s, (*((*(_42051_t))))._field_Kind.cast_ptr<_1c0de5ab0_Tuple>(23));
			}
		}
		else {
			_case_begin_1c6ad9d97:;
			{
				jule::panic(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:451:13"));;
			}
		}
		_match_end_1c6ad9d42:;
	};
}



inline void _1c2568066_codeMut1(_1c25659d1_resultCoder* _self_, _234c76a64_StrBuilder* _45532_s, jule::Ptr<_1c0dd7de3_TypeKind>* _45552_t) {
	jule::Ptr<_1c0de5ab0_Tuple> _45613_tup = _1c0ddc36a_Tup((*(_45552_t)).ptr());;
	if ((_45613_tup != nullptr)) {
		_1c2567890_tup(_self_, _45532_s, _45613_tup);
	} else {
		_1c25630b6_kind((*(_self_))._field_tc.ptr(), _45532_s, (*(_45552_t)));
	};
}



inline jule::Slice<jule::U8> _1c2568374_code(_1c25659d1_resultCoder* _self_, jule::Ptr<_1c0dd7de3_TypeKind>* _46428_t) {
	_234c76a64_StrBuilder _46513_s = static__234c76ec6_New(20LL);;
	_1c2567c03_codeMut(_self_, &(_46513_s), _46428_t);
	return _234c787d0_Buf(&_46513_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c25659d1_resultCoder _Src) {
	_Stream << "resultCoder{";
	_Stream << "tc:" << _Src._field_tc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c6ae65ac_Name(_1c6ae615b_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1c6ae6711_What(_1c6ae615b_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1c6ae6865_Reset(_1c6ae615b_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1c6ae69b9_Short(_1c6ae615b_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c6ae615b_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1c6ae98bd_Name(_1c6ae9c53_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1c6aea03e_What(_1c6ae9c53_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1c6aea182_Reset(_1c6ae9c53_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1c6aea2c5_Short(_1c6ae9c53_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c6ae9c53_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1c6aed031_Name(_1c6aed3b6_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1c6aed6a2_What(_1c6aed3b6_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1c6aed7e5_Reset(_1c6aed3b6_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1c6aed938_Short(_1c6aed3b6_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c6aed3b6_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1c6b016d8_Name(_1c6b01a6d_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1c6b01d59_What(_1c6b01a6d_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1c6b01e9c_Reset(_1c6b01a6d_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1c6b020e0_Short(_1c6b01a6d_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c6b01a6d_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1c6b04d4b_Name(_1c6b051d1_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1c6b054bc_What(_1c6b051d1_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1c6b05610_Reset(_1c6b051d1_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1c6b05753_Short(_1c6b051d1_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c6b051d1_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c1cd423e_FlagSet> static__1c1cd452a_New(void) {
	return jule::new_ptr<_1c1cd423e_FlagSet>(_1c1cd423e_FlagSet{._field_flags=jule::Slice<jule::Trait<_1c1cd266b_CommonFlag>>::alloc(0LL, 20LL)});;
}



inline jule::Trait<_1c1cd266b_CommonFlag> _1c1cd49d1_FindFlag(_1c1cd423e_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6b10175:;
		if (it != expr_end) {
			jule::Trait<_1c1cd266b_CommonFlag> _7221_flag = *it;
			{
				if ((_1c1cd266b_CommonFlag_mptr_data[(_7221_flag).type_offset]._1c1cd1cec_Name(_7221_flag) == _7127_name)) {
					return _7221_flag;;
				};
			}
			_iter_next_1c6b10175:;
			++it;
			goto _iter_begin_1c6b10175;
		}
		_iter_end_1c6b10175:;
	};
	return nullptr;;
}



inline jule::Trait<_1c1cd266b_CommonFlag> _1c1cd4d22_FindFlagShort(_1c1cd423e_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6b10ede:;
		if (it != expr_end) {
			jule::Trait<_1c1cd266b_CommonFlag> _8221_flag = *it;
			{
				if ((_1c1cd266b_CommonFlag_mptr_data[(_8221_flag).type_offset]._1c1cd2083_Short(_8221_flag) == _8132_name)) {
					return _8221_flag;;
				};
			}
			_iter_next_1c6b10ede:;
			++it;
			goto _iter_begin_1c6b10ede;
		}
		_iter_end_1c6b10ede:;
	};
	return nullptr;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1c1cd53e9_Parse(_1c1cd423e_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_1c1cd6c03_argParser _11613_ap = _1c1cd6c03_argParser{._field_set=(*(_self_)), ._field_args=_11524_args, };;
	({
		auto except = _1c1cd81ee_parse(&_11613_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>{.result=_11613_ap._field_content};;
}



inline jule::Ptr<_1c6b051d1_Flag> _1c6b70306_addFlagCommon(_1c1cd423e_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	if ((_1c1cd49d1_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:133:13"));;
	};
	if (((_13146_short != 0LL) && (_1c1cd4d22_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:13"));;
	};
	jule::Ptr<_1c6b051d1_Flag> _14013_flag = jule::new_ptr<_1c6b051d1_Flag>(_1c6b051d1_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait<_1c1cd266b_CommonFlag>> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait<_1c1cd266b_CommonFlag>(_14013_flag, 4)); };
	return _14013_flag;;
}

inline jule::Ptr<_1c6b01a6d_Flag> _1c6b771ed_addFlagCommon(_1c1cd423e_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	if ((_1c1cd49d1_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:133:13"));;
	};
	if (((_13146_short != 0LL) && (_1c1cd4d22_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:13"));;
	};
	jule::Ptr<_1c6b01a6d_Flag> _14013_flag = jule::new_ptr<_1c6b01a6d_Flag>(_1c6b01a6d_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait<_1c1cd266b_CommonFlag>> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait<_1c1cd266b_CommonFlag>(_14013_flag, 3)); };
	return _14013_flag;;
}



inline void _1c6b6d05c_AddVar(_1c1cd423e_FlagSet* _self_, jule::Ptr<jule::Str> _16762_var, jule::Str _16771_name, jule::I32 _16782_short, jule::Str _16795_what) {
	jule::Ptr<_1c6b051d1_Flag> _16813_flag = _1c6b70306_addFlagCommon(_self_, _16771_name, _16782_short, _16795_what);;
	(*(_16813_flag))._field_default=(*(_16762_var));
	(*_16813_flag.alloc)._field_data=_16762_var;
}

inline void _1c6b74e98_AddVar(_1c1cd423e_FlagSet* _self_, jule::Ptr<jule::Bool> _16762_var, jule::Str _16771_name, jule::I32 _16782_short, jule::Str _16795_what) {
	jule::Ptr<_1c6b01a6d_Flag> _16813_flag = _1c6b771ed_addFlagCommon(_self_, _16771_name, _16782_short, _16795_what);;
	(*(_16813_flag))._field_default=(*(_16762_var));
	(*_16813_flag.alloc)._field_data=_16762_var;
}





std::ostream &operator<<(std::ostream &_Stream, _1c1cd423e_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_i64__jule_tuple_bool _1c6b17db4_parseInteger(_1c1cd6c03_argParser* _self_, jule::Str* _18231_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64> _18239_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18231_s))).empty()) {
			_case_begin_1c6b1a9cc:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_21b86a62c_HasPrefix((*(_18231_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1c6b1ad95:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_21b86a62c_HasPrefix((*(_18231_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1c6b1a515:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_21b86a62c_HasPrefix((*(_18231_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1c6b1a57b:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18231_s))[0LL] == '0')) {
			_case_begin_1c6b1a5e2:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1c6b1a49e:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1c6b1a3a0:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1c6b20839_parseInteger(_1c1cd6c03_argParser* _self_, jule::Str* _18231_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64> _18239_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18231_s))).empty()) {
			_case_begin_1c6b2340d:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_21b86a62c_HasPrefix((*(_18231_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1c6b237c6:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_21b86a62c_HasPrefix((*(_18231_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1c6b22e46:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_21b86a62c_HasPrefix((*(_18231_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1c6b22eac:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18231_s))[0LL] == '0')) {
			_case_begin_1c6b23023:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1c6b22dd0:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1c6b22cd1:;
	};
	return __jule_func_result;;
}



inline jule::Str _1c1cd751c_getData(_1c1cd6c03_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1c1cd7792_processFlag(_1c1cd6c03_argParser* _self_, jule::Trait<_1c1cd266b_CommonFlag>* _20935_flag) {
	{
		auto &_match_expr{ (*(_20935_flag)) };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1c6b150c0:;
			{
				jule::Ptr<_1c6b01a6d_Flag> _21217_bf = (*(_20935_flag)).cast_ptr<_1c6b01a6d_Flag>(3);;
				(*((*(_21217_bf))._field_data))=(!((*_21217_bf.alloc)._field_default));
				return jule::VoidExceptional{};;
			}
		}
		_match_end_1c6b1506a:;
	};
	jule::Str _2179_data = _1c1cd751c_getData(_self_);;
	if ((_2179_data).empty()) {
		return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + _1c1cd266b_CommonFlag_mptr_data[((*(_20935_flag))).type_offset]._1c1cd1cec_Name((*(_20935_flag)))) + jule::Str::lit(": expression missing", 20)), &__jule_any_type4)};
	};
	{
		auto &_match_expr{ (*(_20935_flag)) };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1c6b16e6d:;
			{
				jule::Ptr<_1c6ae615b_Flag> _22417_intf = (*(_20935_flag)).cast_ptr<_1c6ae615b_Flag>(0);;
				jule::Bool _22527_ok;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1c6b17db4_parseInteger(_self_, &(_2179_data), jule::__new_closure<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64>((void*)__jule_anon_1c6b1b89b, jule::Ptr<__jule_anon_1c6b1b89b_ctx>::make(__jule_anon_1c6b1b89b_ctx{}).as<jule::Uintptr>(), __jule_anon_1c6b1b89b_ctx_handler));
					(*((*(_22417_intf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_22527_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_22527_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + _1c1cd266b_CommonFlag_mptr_data[((*(_20935_flag))).type_offset]._1c1cd1cec_Name((*(_20935_flag)))) + jule::Str::lit(": expression must be valid signed integer", 41)), &__jule_any_type4)};
				};
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1c6b1681e:;
			{
				jule::Ptr<_1c6ae9c53_Flag> _23217_uintf = (*(_20935_flag)).cast_ptr<_1c6ae9c53_Flag>(1);;
				jule::Bool _23328_ok;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1c6b20839_parseInteger(_self_, &(_2179_data), jule::__new_closure<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64>((void*)__jule_anon_1c6b242cc, jule::Ptr<__jule_anon_1c6b242cc_ctx>::make(__jule_anon_1c6b242cc_ctx{}).as<jule::Uintptr>(), __jule_anon_1c6b242cc_ctx_handler));
					(*((*(_23217_uintf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23328_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23328_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + _1c1cd266b_CommonFlag_mptr_data[((*(_20935_flag))).type_offset]._1c1cd1cec_Name((*(_20935_flag)))) + jule::Str::lit(": expression must be valid unsigned integer", 43)), &__jule_any_type4)};
				};
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1c6b16ed4:;
			{
				jule::Ptr<_1c6aed3b6_Flag> _24017_ff = (*(_20935_flag)).cast_ptr<_1c6aed3b6_Flag>(2);;
				(*((*(_24017_ff))._field_data))=({
					auto except = _2021cd064_ParseFloat(_2179_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + _1c1cd266b_CommonFlag_mptr_data[((*(_20935_flag))).type_offset]._1c1cd1cec_Name((*(_20935_flag)))) + jule::Str::lit(": expression must be valid floating-point", 41)), &__jule_any_type4)};
					} 0;});
				});
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1c6b1704a:;
			{
				(*((*((*(_20935_flag)).cast_ptr<_1c6b051d1_Flag>(4)))._field_data))=_2179_data;
			}
		}
		_match_end_1c6b16731:;
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1c1cd7a4a_singleDash(_1c1cd6c03_argParser* _self_, jule::Str* _24930_arg) {
	if (((*(_24930_arg)).len() == 1LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_24930_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4)};
	};
	{
		auto expr = (*(_24930_arg)).slice(1LL);
		char *it = expr.operator char*();
		const char *end = it + expr.len();
		std::size_t len;
		jule::I32 _25416_r;
		_iter_begin_1c6b29b73:;
		std::tie(_25416_r, len) = jule::utf8_decode_rune_str(it, end - it);
		if (it < end) {
			{
				jule::Trait<_1c1cd266b_CommonFlag> _25517_flag = _1c1cd4d22_FindFlagShort(&(*(_self_))._field_set, _25416_r);;
				if ((_25517_flag == nullptr)) {
					return jule::VoidExceptional{.error=jule::Any((((*(_24930_arg)) + jule::Str::lit(": flag is not exist: ", 21)) + jule::Str::from_rune(_25416_r)), &__jule_any_type4)};
				};
				({
					auto except = _1c1cd7792_processFlag(_self_, &(_25517_flag));
					if (!except.ok()) {
						return jule::VoidExceptional{.error=std::move(except.error)};
					}
				});
			}
			_iter_next_1c6b29b73:;
			it += len;
			goto _iter_begin_1c6b29b73;
		}
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1c1cd7d03_doubleDash(_1c1cd6c03_argParser* _self_, jule::Str* _26330_arg) {
	if (((*(_26330_arg)).len() == 2LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26330_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4)};
	};
	jule::Trait<_1c1cd266b_CommonFlag> _26713_flag = _1c1cd49d1_FindFlag(&(*(_self_))._field_set, (*(_26330_arg)).slice(2LL));;
	if ((_26713_flag == nullptr)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26330_arg)) + jule::Str::lit(": flag is not exist", 19)), &__jule_any_type4)};
	};
	return _1c1cd7792_processFlag(_self_, &(_26713_flag));
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1c1cd8001_tryArg(_1c1cd6c03_argParser* _self_) {
	jule::Str _2759_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional{};;
	};
	if ((_2759_arg[0LL] == '-')) {
		if (((_2759_arg.len() > 1LL) && (_2759_arg[1LL] == '-'))) {
			({
				auto except = _1c1cd7d03_doubleDash(_self_, &(_2759_arg));
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
			return jule::VoidExceptional{};;
		};
		({
			auto except = _1c1cd7a4a_singleDash(_self_, &(_2759_arg));
			if (!except.ok()) {
				return jule::VoidExceptional{.error=std::move(except.error)};
			}
		});
		return jule::VoidExceptional{};;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_2759_arg); };
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1c1cd81ee_parse(_1c1cd6c03_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1c1cd8001_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
		}
	_iter_next_1c6b2e837:;
	}
	_iter_end_1c6b2e837:;;
	return jule::VoidExceptional{};
}





std::ostream &operator<<(std::ostream &_Stream, _1c1cd6c03_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c254b467_ObjectCoder> static__1c254b896_New(jule::Ptr<_1c1989301_IR>* _10424_ir, _1c25493ee_SerializationInfo _10433_info) {
	jule::Ptr<_1c254b467_ObjectCoder> _10513_oc = jule::new_ptr<_1c254b467_ObjectCoder>(_1c254b467_ObjectCoder{._field_ir=(*(_10424_ir)), ._field_info=_10433_info, });;
	(*(_10513_oc))._field_ec=static__1c24762e8_new(&(_10513_oc));
	(*_10513_oc.alloc)._field_sc=static__1c246b0bd_new(&(_10513_oc));
	(*_10513_oc.alloc)._field_tc=static__1c255cc3c_new(&(_10513_oc));
	return _10513_oc;;
}



inline void _1c254bb4e_write(jule::Ptr<_1c254b467_ObjectCoder> _self_, jule::Str _11525_s) {
	_234c77537_WriteStr(&(*(_self_))._field_Buf, _11525_s);
}



inline void _1c254be07_writeBytes(jule::Ptr<_1c254b467_ObjectCoder> _self_, jule::Slice<jule::U8> _11930_b) {
	_234c7727e_Write(&(*(_self_))._field_Buf, _11930_b);
}



inline void _1c254c105_addIndent(jule::Ptr<_1c254b467_ObjectCoder> _self_) {
	(*(_self_))._field_indentBuffer=jule::append((*_self_.alloc)._field_indentBuffer,jule::Slice<jule::U8>::make({9LLU}));
}



inline void _1c254c303_doneIndent(jule::Ptr<_1c254b467_ObjectCoder> _self_) {
	((*(_self_))._field_indentBuffer).mut_slice(0LL, ((*(_self_))._field_indentBuffer.len() - 1LL));;
}



inline void _1c254c501_indent(jule::Ptr<_1c254b467_ObjectCoder> _self_) {
	_234c7727e_Write(&(*(_self_))._field_Buf, (*_self_.alloc)._field_indentBuffer);
}



inline jule::I64 _1c254c842_findAnyType(jule::Ptr<_1c254b467_ObjectCoder> _self_, jule::Ptr<_1c0dd7de3_TypeKind>* _13836_t) {
	{
		auto expr = &((*(_self_))._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c694dd93:;
		if (it != expr_end) {
			jule::I64 _13914_i = it - expr->begin();
			jule::Ptr<_1c0dd7de3_TypeKind> _13921_at = *it;
			{
				if (_1c0dd85ec_Equal(_13921_at, (*(_13836_t)))) {
					return _13914_i;;
				};
			}
			_iter_next_1c694dd93:;
			++it;
			_13914_i++;
			goto _iter_begin_1c694dd93;
		}
		_iter_end_1c694dd93:;
	};
	return -1LL;;
}



inline jule::Str _1c254cb83_pushAnonFn(jule::Ptr<_1c254b467_ObjectCoder> _self_, jule::Ptr<_1c0c8a768_AnonFnExprModel>* _14735_m) {
	jule::Str __jule_func_result;
	_234c77537_WriteStr(&(*(_self_))._field_anonObj, jule::Str::lit("struct ", 7));
	jule::I64 _1509_l = _234c782b3_Len(&(*_self_.alloc)._field_anonObj);;
	_234c77537_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("__jule_anon_", 12));
	_234c77537_WriteStr(&(*_self_.alloc)._field_anonObj, _2021d7931_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_14735_m))))._field_Func)), 15LL));
	__jule_func_result=static_cast<jule::Str>(_234c787d0_Buf(&(*_self_.alloc)._field_anonObj).slice(_1509_l));
	_234c77537_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx{\n", 6));
	{
		auto expr = &((*((*(_14735_m))))._field_Captured);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6952429:;
		if (it != expr_end) {
			jule::Ptr<_1c0d4dde2_Var> _15521_v = *it;
			{
				_234c777e0_WriteByte(&(*_self_.alloc)._field_anonObj, 9LLU);
				_1c25630b6_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_anonObj), (*((*(_15521_v))._field_Kind))._field_Kind);
				_234c777e0_WriteByte(&(*_self_.alloc)._field_anonObj, ' ');
				if ((*_15521_v.alloc)._field_Reference) {
					_234c777e0_WriteByte(&(*_self_.alloc)._field_anonObj, '*');
				};
				static__1c248c4eb_var(&((*_self_.alloc)._field_anonObj), _15521_v);
				_234c77537_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit(";\n", 2));
			}
			_iter_next_1c6952429:;
			++it;
			goto _iter_begin_1c6952429;
		}
		_iter_end_1c6952429:;
	};
	_234c77537_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("};\n", 3));
	_234c77537_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("static void ", 12));
	_234c77537_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
	_234c77537_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<", 55));
	_234c77537_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
	_234c77537_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx>().dealloc(); }\n", 21));
	(*_self_.alloc)._field_anons=jule::append((*_self_.alloc)._field_anons,jule::Slice<jule::Ptr<_1c254a2bd_anonHash>>::make({jule::new_ptr<_1c254a2bd_anonHash>(_1c254a2bd_anonHash{._field_expr=(*(_14735_m)), ._field_ident=__jule_func_result})}));
	_1c2555509_anonFuncInsDecl(_self_, _14735_m, __jule_func_result);
	_234c777e0_WriteByte(&(*_self_.alloc)._field_anonObj, '\n');
	return __jule_func_result;;
}



inline jule::I64 _1c254cec4_pushAnyType(jule::Ptr<_1c254b467_ObjectCoder> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _18135_t) {
	if ((_1c0ddace7_Enum(_18135_t.ptr()) != nullptr)) {
		_18135_t=(*((*(_1c0ddace7_Enum(_18135_t)))._field_Kind))._field_Kind;
	};
	jule::I64 _18513_i = _1c254c842_findAnyType(_self_, &(_18135_t));;
	if ((_18513_i != -1LL)) {
		return _18513_i;;
	};
	_18513_i=(*_self_.alloc)._field_anyTypeMap.len();
	(*_self_.alloc)._field_anyTypeMap=jule::append((*_self_.alloc)._field_anyTypeMap,jule::Slice<jule::Ptr<_1c0dd7de3_TypeKind>>::make({_18135_t}));
	jule::Str _1919_si = _2021d80b3_Itoa(_18513_i);;
	if ((_1c0dda7ca_Sptr(_18135_t) != nullptr)) {
		_234c76a64_StrBuilder _19317_elemKind = static__234c76ec6_New(40LL);;
		_1c25630b6_kind((*_self_.alloc)._field_tc.ptr(), &(_19317_elemKind), (*(_1c0dda7ca_Sptr(_18135_t)))._field_Elem);
		_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("void __jule_any_type", 20));
		_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, _1919_si);
		_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64));
		_234c7727e_Write(&(*_self_.alloc)._field_anyObj, _234c787d0_Buf(&_19317_elemKind));
		_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(">().dealloc(); }\n", 17));
		_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, _1919_si);
		_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_any_type", 25));
		_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, _1919_si);
		_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};\n", 58));
		_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
		_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, _1919_si);
		_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
		_1c255dad9_asSptr((*_self_.alloc)._field_tc, &((*_self_.alloc)._field_anyObj), _234c787d0_Buf(&_19317_elemKind));
		_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
		_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, _1919_si);
		_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" && jule::ptr_equal(any.data.alloc, other.alloc); }\n", 52));
	} else {
		jule::Bool _22013_comparable = _1c0dd94dd_Comparable(_18135_t);;
		_234c76a64_StrBuilder _22117_kindB = static__234c76ec6_New(40LL);;
		_1c25630b6_kind((*_self_.alloc)._field_tc.ptr(), &(_22117_kindB), _18135_t);
		jule::Slice<jule::U8> _22313_kind = _234c787d0_Buf(&_22117_kindB);;
		if (_234c760b3_BytesStr(_22313_kind).equal("[<unimplemented_type_kind>]", 27)) {
			jule::outln(_1c0dd82ab_Str(_18135_t));
		};
		_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("void __jule_any_type", 20));
		_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, _1919_si);
		_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64));
		_234c7727e_Write(&(*_self_.alloc)._field_anyObj, _22313_kind);
		_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(">().dealloc(); }\n", 17));
		if (_22013_comparable) {
			_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, _1919_si);
			_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<", 66));
			_234c7727e_Write(&(*_self_.alloc)._field_anyObj, _22313_kind);
			_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*>(alloc) == *reinterpret_cast<", 31));
			_234c7727e_Write(&(*_self_.alloc)._field_anyObj, _22313_kind);
			_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*>(other); }\n", 13));
		};
		_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Str __jule_any_type", 25));
		_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, _1919_si);
		_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<", 76));
		if ((_1c0ddaa61_Ptr(_18135_t) == nullptr)) {
			_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("const ", 6));
			_234c7727e_Write(&(*_self_.alloc)._field_anyObj, _22313_kind);
		} else {
			_234c7727e_Write(&(*_self_.alloc)._field_anyObj, _22313_kind);
			_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("* const", 7));
		};
		_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*>(alloc)); }\n", 14));
		_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, _1919_si);
		_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_any_type", 25));
		_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, _1919_si);
		_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_dealloc, ", 10));
		if (_22013_comparable) {
			_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(".eq=__jule_any_type", 19));
			_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, _1919_si);
			_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq, ", 5));
		};
		_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(".to_str=__jule_any_type", 23));
		_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, _1919_si);
		_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str};\n", 10));
		if (_22013_comparable) {
			_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, _1919_si);
			_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
			_234c7727e_Write(&(*_self_.alloc)._field_anyObj, _22313_kind);
			_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
			_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, _1919_si);
			_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" && __jule_any_type", 19));
			_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, _1919_si);
			_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq(any.data.alloc, (void*)&other); }\n", 38));
		};
	};
	return _18513_i;;
}



inline void _1c254d27c_pushResultIns(jule::Ptr<_1c254b467_ObjectCoder> _self_, jule::Ptr<_1c0c98699_FnIns>* _29138_f) {
	jule::Str _2929_s = static_cast<jule::Str>(_1c2568374_code((*((*(_self_))._field_tc))._field_rc.ptr(), &((*((*(_29138_f))))._field_Result)));;
	jule::Bool _29312_ok;
	(*_self_.alloc)._field_resultMap.lookup(_2929_s, nullptr, &(_29312_ok));
	if (_29312_ok) {
		return;;
	};
	(*_self_.alloc)._field_resultMap[_2929_s]=false;
	_234c77537_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("struct ", 7));
	_234c77537_WriteStr(&(*_self_.alloc)._field_resultDecls, _2929_s);
	_234c77537_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(" {\n", 3));
	{
		auto expr = &((*(_1c0ddc36a_Tup((*((*(_29138_f))))._field_Result.ptr())))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c69788d4:;
		if (it != expr_end) {
			jule::I64 _30114_i = it - expr->begin();
			jule::Ptr<_1c0dd7de3_TypeKind> _30121_t = *it;
			{
				_234c777e0_WriteByte(&(*_self_.alloc)._field_resultDecls, 9LLU);
				_1c25630b6_kind((*_self_.alloc)._field_tc, &((*_self_.alloc)._field_resultDecls), _30121_t);
				_234c777e0_WriteByte(&(*_self_.alloc)._field_resultDecls, ' ');
				_234c77537_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("__jule_result_arg", 17));
				_234c77537_WriteStr(&(*_self_.alloc)._field_resultDecls, _2021d80b3_Itoa(_30114_i));
				_234c77537_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(";\n", 2));
			}
			_iter_next_1c69788d4:;
			++it;
			_30114_i++;
			goto _iter_begin_1c69788d4;
		}
		_iter_end_1c69788d4:;
	};
	_234c77537_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("};\n", 3));
}



inline void _1c254d535_pushResult(jule::Ptr<_1c254b467_ObjectCoder> _self_, jule::Ptr<_1c0c95795_Fn>* _31235_f) {
	if ((_1c0c95c18_IsVoid((*(_31235_f)).ptr()) || ((*((*((*(_31235_f))))._field_Result))._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I64 _31613_n = (*((*(_31235_f))))._field_Instances.len();;
	if (((*((*(_31235_f))))._field_Generics.len() == 0LL)) {
		_31613_n=1LL;
	};
	{
		auto expr = (*((*(_31235_f))))._field_Instances.slice(0LL, _31613_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1c697d983:;
		if (it != expr_end) {
			jule::Ptr<_1c0c98699_FnIns> _32021_ins = *it;
			{
				_1c254d27c_pushResultIns(_self_, &(_32021_ins));
			}
			_iter_next_1c697d983:;
			++it;
			goto _iter_begin_1c697d983;
		}
		_iter_end_1c697d983:;
	};
}



inline jule::I64 _1c254d931_findTypeOffsetS(_1c254b467_ObjectCoder* _self_, jule::Ptr<_1c0ca8a72_Trait> _32530_t, jule::Ptr<_1c0c83552_StructIns> _32545_s) {
	if (((*(_32530_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c697eaa5:;
		if (it != expr_end) {
			jule::Ptr<_1c25499c6_traitHash> *_32916_hash = it;
			{
				if ((((*((*(_32916_hash))))._field_t == _32530_t) && ((*(*(_32916_hash)).alloc)._field_s == _32545_s))) {
					return (*(*(_32916_hash)).alloc)._field_i;;
				};
			}
			_iter_next_1c697eaa5:;
			++it;
			goto _iter_begin_1c697eaa5;
		}
		_iter_end_1c697eaa5:;
	};
	return -1LL;;
}



inline jule::I64 _1c254dd2c_findTypeOffset(_1c254b467_ObjectCoder* _self_, jule::Ptr<_1c0ca8a72_Trait> _33729_t, jule::Ptr<_1c0dd7de3_TypeKind> _33744_k) {
	if (((*(_33729_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1c0c83552_StructIns> _34117_s = nullptr;;
	if ((_1c0dda7ca_Sptr(_33744_k.ptr()) != nullptr)) {
		_33744_k=(*(_1c0dda7ca_Sptr(_33744_k)))._field_Elem;
	};
	_34117_s=_1c0ddbab7_Struct(_33744_k);
	if ((_34117_s == nullptr)) {
		return -1LL;;
	};
	return _1c254d931_findTypeOffsetS(_self_, _33729_t, _34117_s);;
}



inline void _1c254e190_pushAndWriteMaskMapper(jule::Ptr<_1c254b467_ObjectCoder> _self_, jule::Ptr<_1c0ca8a72_Trait> _35246_t1, jule::Ptr<_1c0ca8a72_Trait> _35262_t2) {
	_234c76a64_StrBuilder _35313_ident = static__234c76ec6_New(32LL);;
	_234c77537_WriteStr(&_35313_ident, jule::Str::lit("__jule_trait_offset_mapper_", 27));
	_234c77537_WriteStr(&_35313_ident, _2021d7931_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_35262_t2)), 15LL));
	_234c77537_WriteStr(&_35313_ident, jule::Str::lit("_to_", 4));
	_234c77537_WriteStr(&_35313_ident, _2021d7931_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_35246_t1)), 15LL));
	_234c7727e_Write(&(*(_self_))._field_Buf, _234c787d0_Buf(&_35313_ident));
	{
		auto expr = &((*_self_.alloc)._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c698602e:;
		if (it != expr_end) {
			_1c2549da0_traitCast _36116_m = *it;
			{
				if (((_36116_m._field_t1 == _35246_t1) && (_36116_m._field_t2 == _35262_t2))) {
					return;;
				};
			}
			_iter_next_1c698602e:;
			++it;
			goto _iter_begin_1c698602e;
		}
		_iter_end_1c698602e:;
	};
	(*_self_.alloc)._field_traitCastMap=jule::append((*_self_.alloc)._field_traitCastMap,jule::Slice<_1c2549da0_traitCast>::make({_1c2549da0_traitCast{._field_t1=_35246_t1, ._field_t2=_35262_t2}}));
	;
	_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Int", 9));
	_234c777e0_WriteByte(&(*_self_.alloc)._field_anyObj, ' ');
	_234c7727e_Write(&(*_self_.alloc)._field_anyObj, _234c787d0_Buf(&_35313_ident));
	_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("(const jule::Int offset) noexcept { ", 36));
	{
		auto expr = &((*(_35246_t1))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6987e54:;
		if (it != expr_end) {
			jule::Ptr<_1c0c807c4_Struct> _38021_s1 = *it;
			{
				{
					auto expr = &((*(_35262_t2))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c6989906:;
					if (it != expr_end) {
						jule::Ptr<_1c0c807c4_Struct> _38120_s2 = *it;
						{
							if ((_38021_s1 == _38120_s2)) {
								{
									auto expr = &((*(_38021_s1))._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1c698a792:;
									if (it != expr_end) {
										jule::Ptr<_1c0c83552_StructIns> _38333_s1i = *it;
										{
											jule::I64 _38425_i1 = _1c254d931_findTypeOffsetS(_self_, _35246_t1, _38333_s1i);;
											jule::I64 _38525_i2 = _1c254d931_findTypeOffsetS(_self_, _35262_t2, _38333_s1i);;
											_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("if (offset == ", 14));
											_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, _2021d80b3_Itoa(_38525_i2));
											_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(") return ", 9));
											_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, _2021d80b3_Itoa(_38425_i1));
											_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; ", 2));
										}
										_iter_next_1c698a792:;
										++it;
										goto _iter_begin_1c698a792;
									}
									_iter_end_1c698a792:;
								};
							};
						}
						_iter_next_1c6989906:;
						++it;
						goto _iter_begin_1c6989906;
					}
					_iter_end_1c6989906:;
				};
			}
			_iter_next_1c6987e54:;
			++it;
			goto _iter_begin_1c6987e54;
		}
		_iter_end_1c6987e54:;
	};
	_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" return ", 8));
	_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, _2021d80b3_Itoa(0LL));
	_234c77537_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; }\n", 4));
}



inline void _1c254e448_locInfo(jule::Ptr<_1c254b467_ObjectCoder> _self_, jule::Ptr<_1c0c49480_Token>* _40128_t) {
	jule::Str *_40210_loc = &((*((*((*(_40128_t))))._field_File))._field_Path);;
	if (_2336c522d_Production) {
		{
			
			if (_21b86a62c_HasPrefix((*(_40210_loc)), _21b989ce0_PathStdlib)) {
				_case_begin_1c69908a7:;
				{
					_1c24848ab_cstrBytes(&((*(_self_))._field_Buf), (*(_40210_loc)).slice((_21b875eb7_Dir(_21b989ce0_PathStdlib).len() + 1LL)));
				}
			}
			else if (_21b86a62c_HasPrefix((*(_40210_loc)), (*((*(_self_))._field_ir))._field_Root)) {
				_case_begin_1c6990995:;
				{
					_1c24848ab_cstrBytes(&((*_self_.alloc)._field_Buf), (*(_40210_loc)).slice((_21b875eb7_Dir((*(*_self_.alloc)._field_ir.alloc)._field_Root).len() + 1LL)));
				}
			}
			else {
				_case_begin_1c69904de:;
				{
					_1c24848ab_cstrBytes(&((*(_self_))._field_Buf), (*(_40210_loc)));
				}
			}
			_match_end_1c6990423:;
		};
	} else {
		_1c24848ab_cstrBytes(&((*(_self_))._field_Buf), (*(_40210_loc)));
	};
	_1c254bb4e_write(_self_, jule::Str::lit(":", 1));
	_1c254bb4e_write(_self_, _2021d80b3_Itoa((*((*(_40128_t))))._field_Row));
	_1c254bb4e_write(_self_, jule::Str::lit(":", 1));
	_1c254bb4e_write(_self_, _2021d80b3_Itoa((*((*(_40128_t))))._field_Column));
}



inline void _1c254e646_head(jule::Ptr<_1c254b467_ObjectCoder> _self_) {
	_1c25414c3_Time _4289_time = static__1c2541a89_Now();;
	_1c2540cec_AbsTime _4299_abs = _1c2543272_Abs(&_4289_time);;
	_1c254bb4e_write(_self_, jule::Str::lit("// Auto generated by JuleC.\n", 28));
	_1c254bb4e_write(_self_, jule::Str::lit("// JuleC version: ", 18));
	_1c254bb4e_write(_self_, jule::Str::lit("jule0.0.16 @master", 18));
	_1c254bb4e_write(_self_, jule::Str::lit("\n", 1));
	_1c254bb4e_write(_self_, jule::Str::lit("// Date: ", 9));
	_1c254bb4e_write(_self_, _2021d7931_FmtUint(_4299_abs._field_Day, 10LL));
	_1c254bb4e_write(_self_, jule::Str::lit("/", 1));
	_1c254bb4e_write(_self_, _2021d7931_FmtUint(_4299_abs._field_Month, 10LL));
	_1c254bb4e_write(_self_, jule::Str::lit("/", 1));
	_1c254bb4e_write(_self_, _2021d7931_FmtUint(_4299_abs._field_Year, 10LL));
	_1c254bb4e_write(_self_, jule::Str::lit(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1c254bb4e_write(_self_, (*_self_.alloc)._field_info._field_Compiler);
	_1c254bb4e_write(_self_, jule::Str::lit(" ", 1));
	_1c254bb4e_write(_self_, (*_self_.alloc)._field_info._field_CompilerCommand);
	_1c254bb4e_write(_self_, jule::Str::lit("\n\n", 2));
	if (_2336c522d_Production) {
		_1c254bb4e_write(_self_, jule::Str::lit("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_2336c4b23_RC))) {
		_1c254bb4e_write(_self_, jule::Str::lit("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_2336c4edb_Safety))) {
		_1c254bb4e_write(_self_, jule::Str::lit("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1c254e844_links(_self_);
	_1c254bb4e_write(_self_, jule::Str::lit("\n\n#include \"", 12));
	_1c254bb4e_write(_self_, _21b98a593_PathApi);
	_1c254bb4e_write(_self_, jule::Str::lit("\"\n\n", 3));
}



inline void _1c254e844_links(jule::Ptr<_1c254b467_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c699c012:;
		if (it != expr_end) {
			jule::Ptr<_1c0d09782_ImportInfo> _46616_used = *it;
			{
				{
					
					if ((!((*(_46616_used))._field_Binded))) {
						_case_begin_1c699cd15:;
						{
							goto _iter_next_1c699c012;
						}
					}
					else if (_21b8b8081_IsStdHeaderPath((*(_46616_used))._field_Path)) {
						_case_begin_1c699cd9d:;
						{
							_1c254bb4e_write(_self_, jule::Str::lit("#include ", 9));
							_1c254bb4e_write(_self_, (*_46616_used.alloc)._field_Path);
							_1c254bb4e_write(_self_, jule::Str::lit("\n", 1));
						}
					}
					else if (_21b8b81c4_IsValidHeaderExt(_21b87555a_Ext((*(_46616_used))._field_Path))) {
						_case_begin_1c699ce14:;
						{
							_1c254bb4e_write(_self_, jule::Str::lit("#include \"", 10));
							_1c254bb4e_write(_self_, (*_46616_used.alloc)._field_Path);
							_1c254bb4e_write(_self_, jule::Str::lit("\"\n", 2));
						}
					}
					_match_end_1c699cbc2:;
				};
			}
			_iter_next_1c699c012:;
			++it;
			goto _iter_begin_1c699c012;
		}
		_iter_end_1c699c012:;
	};
}



inline void _1c254eaec_prepareStructure(_1c254b467_ObjectCoder* _self_, jule::Ptr<_1c0c807c4_Struct>* _48240_s) {
	{
		auto expr = &((*((*(_48240_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c69a0c91:;
		if (it != expr_end) {
			jule::Ptr<_1c0c83552_StructIns> _48321_ins = *it;
			{
				{
					auto expr = &((*(_48321_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c69a1643:;
					if (it != expr_end) {
						jule::Ptr<_1c0c95795_Fn> _48425_m = *it;
						{
							if ((*(_48425_m))._field_Statically) {
								goto _iter_next_1c69a1643;
							};
							{
								auto expr = &((*_48425_m.alloc)._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c69a21b0:;
								if (it != expr_end) {
									jule::Ptr<_1c0c98699_FnIns> _48829_mins = *it;
									{
										jule::Ptr<_1c0c976ed_ParamIns> _48925_p = (*(_48829_mins))._field_Params[0LL];;
										_234c76a64_StrBuilder _49025_kind = static__234c76ec6_New(40LL);;
										_1c25630b6_kind((*(_self_))._field_tc.ptr(), &(_49025_kind), (*(_48925_p))._field_Kind);
										if ((!(_1c0c94673_IsRef((*_48925_p.alloc)._field_Decl.ptr())))) {
											_234c77537_WriteStr(&_49025_kind, jule::Str::lit("*", 1));
										};
										(*_48925_p.alloc)._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(jule::new_ptr<_1c255bad7_customType>(_1c255bad7_customType{._field_kind=_234c77d2e_Str(&_49025_kind)}), 27)});
									}
									_iter_next_1c69a21b0:;
									++it;
									goto _iter_begin_1c69a21b0;
								}
								_iter_end_1c69a21b0:;
							};
						}
						_iter_next_1c69a1643:;
						++it;
						goto _iter_begin_1c69a1643;
					}
					_iter_end_1c69a1643:;
				};
			}
			_iter_next_1c69a0c91:;
			++it;
			goto _iter_begin_1c69a0c91;
		}
		_iter_end_1c69a0c91:;
	};
}



inline void _1c254ecea_prepareStructures(jule::Ptr<_1c254b467_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c69a1599:;
		if (it != expr_end) {
			jule::Ptr<_1c0c807c4_Struct> _50621_s = *it;
			{
				if (((*(_50621_s))._field_Token != nullptr)) {
					_1c254eaec_prepareStructure(_self_.ptr(), &(_50621_s));
				};
			}
			_iter_next_1c69a1599:;
			++it;
			goto _iter_begin_1c69a1599;
		}
		_iter_end_1c69a1599:;
	};
}



inline void _1c25500a3_iterPackages(jule::Ptr<_1c254b467_ObjectCoder> _self_, jule::Fn<void,jule::Ptr<_1c0d0c6a8_Package>*> _51332_f) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c69a6758:;
		if (it != expr_end) {
			jule::Ptr<_1c0d09782_ImportInfo> _51421_used = *it;
			{
				if ((!((*(_51421_used))._field_Binded))) {
					_51332_f(&((*_51421_used.alloc)._field_Package));
				};
			}
			_iter_next_1c69a6758:;
			++it;
			goto _iter_begin_1c69a6758;
		}
		_iter_end_1c69a6758:;
	};
	_51332_f(&((*(*_self_.alloc)._field_ir.alloc)._field_Main));
}



inline void _1c25502a1_buildTraitMap(jule::Ptr<_1c254b467_ObjectCoder> _self_) {
	_1c25500a3_iterPackages(_self_, jule::__new_closure<void,jule::Ptr<_1c0d0c6a8_Package>*>((void*)__jule_anon_1c69a886a, jule::Ptr<__jule_anon_1c69a886a_ctx>::make(__jule_anon_1c69a886a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c69a886a_ctx_handler));
}



inline void _1c255049e_traitDecls(jule::Ptr<_1c254b467_ObjectCoder> _self_) {
	_1c25500a3_iterPackages(_self_, jule::__new_closure<void,jule::Ptr<_1c0d0c6a8_Package>*>((void*)__jule_anon_1c69a8bbc, jule::Ptr<__jule_anon_1c69a8bbc_ctx>::make(__jule_anon_1c69a8bbc_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c69a8bbc_ctx_handler));
}



inline void _1c2550757_structurePlainDecl(jule::Ptr<_1c254b467_ObjectCoder> _self_, jule::Ptr<_1c0c807c4_Struct>* _58043_s) {
	{
		auto expr = &((*((*(_58043_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c69a9b68:;
		if (it != expr_end) {
			jule::Ptr<_1c0c83552_StructIns> _58121_ins = *it;
			{
				_1c254bb4e_write(_self_, jule::Str::lit("struct ", 7));
				static__1c248be24_structureIns(&((*_self_.alloc)._field_Buf), &(_58121_ins));
				_1c254bb4e_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1c69a9b68:;
			++it;
			goto _iter_begin_1c69a9b68;
		}
		_iter_end_1c69a9b68:;
	};
}



inline void _1c2550955_structurePlainDecls(jule::Ptr<_1c254b467_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c69b61b3:;
		if (it != expr_end) {
			jule::Ptr<_1c0c807c4_Struct> _58921_s = *it;
			{
				if (((*(_58921_s))._field_Token != nullptr)) {
					_1c2550757_structurePlainDecl(_self_, &(_58921_s));
				};
			}
			_iter_next_1c69b61b3:;
			++it;
			goto _iter_begin_1c69b61b3;
		}
		_iter_end_1c69b61b3:;
	};
}



inline void _1c2550c0d_fieldDecl(jule::Ptr<_1c254b467_ObjectCoder> _self_, jule::Ptr<_1c0c829a2_FieldIns>* _59634_f) {
	_1c25630b6_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_59634_f))))._field_Kind);
	_1c254bb4e_write(_self_, jule::Str::lit(" ", 1));
	static__1c248c210_field(&((*_self_.alloc)._field_Buf), &((*((*(_59634_f))))._field_Decl));
	if (((*((*(_59634_f))))._field_Default == nullptr)) {
		if (_1c256a3dc_shouldInitialized(&((*((*(_59634_f))))._field_Kind))) {
			_1c254bb4e_write(_self_, jule::Str::lit(" = ", 3));
			_1c2483de9_initExpr((*_self_.alloc)._field_ec, (*((*(_59634_f))))._field_Kind);
		};
	} else {
		_1c254bb4e_write(_self_, jule::Str::lit(" = ", 3));
		_1c2479274_possibleRefExpr((*_self_.alloc)._field_ec, (*((*((*(_59634_f))))._field_Default))._field_Model);
	};
	_1c254bb4e_write(_self_, jule::Str::lit(";", 1));
}



inline void _1c2550eb6_structureDestructor(jule::Ptr<_1c254b467_ObjectCoder> _self_, jule::Ptr<_1c0c83552_StructIns>* _61444_s) {
	;
	jule::Ptr<_1c0c95795_Fn> _6179_disposeMethod = _1c0c845b9_FindMethod((*(_61444_s)).ptr(), jule::Str::lit("Dispose", 7), false);;
	jule::Bool _61813_disposed = static__1c0d50388_Dispose(_6179_disposeMethod);;
	if ((!(_61813_disposed))) {
		return;;
	};
	_1c254bb4e_write(_self_, jule::Str::lit("~", 1));
	static__1c248be24_structureIns(&((*_self_.alloc)._field_Buf), _61444_s);
	_1c254bb4e_write(_self_, jule::Str::lit("(void) { ", 9));
	static__1c248ae89_func(&((*_self_.alloc)._field_Buf), &(_6179_disposeMethod));
	_1c254bb4e_write(_self_, jule::Str::lit("(this); }", 9));
}



inline void _1c2551329_structureOperatorEq(jule::Ptr<_1c254b467_ObjectCoder> _self_, jule::Slice<jule::U8> _63039_ident, jule::Ptr<_1c0c83552_StructIns>* _63059_s) {
	if ((!((*((*(_63059_s))))._field_Comparable))) {
		return;;
	};
	if (((*((*(_63059_s))))._field_Operators._field_Eq != nullptr)) {
		_1c2551aaa_structureOperator(_self_, _63039_ident, &((*((*(_63059_s))))._field_Operators._field_Eq), jule::Str::lit("==", 2));
		return;;
	};
	_1c254c501_indent(_self_);
	if (_1c100ba1c_Inline) {
		_1c254bb4e_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1c254bb4e_write(_self_, jule::Str::lit("bool operator==(", 16));
	_1c254be07_writeBytes(_self_, _63039_ident);
	_1c254bb4e_write(_self_, jule::Str::lit(" _other) {", 10));
	if (((*((*(_63059_s))))._field_Fields.len() > 0LL)) {
		_1c254c105_addIndent(_self_);
		_1c254bb4e_write(_self_, jule::Str::lit("\n", 1));
		_1c254c501_indent(_self_);
		_1c254bb4e_write(_self_, jule::Str::lit("return ", 7));
		_1c254c105_addIndent(_self_);
		jule::Bool _65317_writed = false;;
		{
			auto expr = &((*((*(_63059_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c69c42ae:;
			if (it != expr_end) {
				jule::Ptr<_1c0c829a2_FieldIns> _65425_f = *it;
				{
					jule::Ptr<_1c0c83552_StructIns> _65617_strct = _1c0ddbab7_Struct((*(_65425_f))._field_Kind.ptr());;
					if ((((_65617_strct != nullptr) && ((*_65617_strct.alloc)._field_Decl != nullptr)) && (*(*_65617_strct.alloc)._field_Decl.alloc)._field_Binded)) {
						goto _iter_next_1c69c42ae;
					};
					if (_65317_writed) {
						_1c254bb4e_write(_self_, jule::Str::lit(" &&", 3));
					};
					_65317_writed=true;
					_1c254bb4e_write(_self_, jule::Str::lit("\n", 1));
					_1c254c501_indent(_self_);
					_1c254bb4e_write(_self_, jule::Str::lit("this->", 6));
					_234c76a64_StrBuilder _66721_fIdent = static__234c76ec6_New((*((*_65425_f.alloc)._field_Decl))._field_Ident.len());;
					static__1c248c210_field(&(_66721_fIdent), &((*_65425_f.alloc)._field_Decl));
					_1c254be07_writeBytes(_self_, _234c787d0_Buf(&_66721_fIdent));
					_1c254bb4e_write(_self_, jule::Str::lit(" == _other.", 11));
					_1c254be07_writeBytes(_self_, _234c787d0_Buf(&_66721_fIdent));
				}
				_iter_next_1c69c42ae:;
				++it;
				goto _iter_begin_1c69c42ae;
			}
			_iter_end_1c69c42ae:;
		};
		_1c254c303_doneIndent(_self_);
		if ((!(_65317_writed))) {
			_1c254bb4e_write(_self_, jule::Str::lit("true", 4));
		};
		_1c254bb4e_write(_self_, jule::Str::lit(";\n", 2));
		_1c254c303_doneIndent(_self_);
		_1c254c501_indent(_self_);
		_1c254bb4e_write(_self_, jule::Str::lit("}", 1));
	} else {
		_1c254bb4e_write(_self_, jule::Str::lit(" return true; }", 15));
	};
	_1c254bb4e_write(_self_, jule::Str::lit("\n\n", 2));
}



inline void _1c255168c_structureOperatorNotEq(jule::Ptr<_1c254b467_ObjectCoder> _self_, jule::Slice<jule::U8> _68742_ident, jule::Ptr<_1c0c83552_StructIns>* _68762_s) {
	if ((!((*((*(_68762_s))))._field_Comparable))) {
		return;;
	};
	_1c254c501_indent(_self_);
	if (_1c100ba1c_Inline) {
		_1c254bb4e_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1c254bb4e_write(_self_, jule::Str::lit("bool operator!=(", 16));
	_1c254be07_writeBytes(_self_, _68742_ident);
	_1c254bb4e_write(_self_, jule::Str::lit(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1c2551aaa_structureOperator(jule::Ptr<_1c254b467_ObjectCoder> _self_, jule::Slice<jule::U8> _70137_ident, jule::Ptr<_1c0c98699_FnIns>* _70157_f, jule::Str _70168_op) {
	if (((*(_70157_f)) == nullptr)) {
		return;;
	};
	jule::Bool _7069_unary = ((*((*(_70157_f))))._field_Params.len() == 1LL);;
	jule::Bool _7079_assignment = _1c0c95c18_IsVoid((*((*(_70157_f))))._field_Decl.ptr());;
	_1c254c501_indent(_self_);
	if (_1c100ba1c_Inline) {
		_1c254bb4e_write(_self_, jule::Str::lit("inline ", 7));
	};
	if (_7079_assignment) {
		_1c254be07_writeBytes(_self_, _70137_ident);
		_1c254bb4e_write(_self_, jule::Str::lit("&", 1));
	} else {
		if ((_1c0dda544_Prim((*((*(_70157_f))))._field_Result.ptr()) == nullptr)) {
			_1c254be07_writeBytes(_self_, _70137_ident);
		} else {
			_1c254bb4e_write(_self_, jule::Str::lit("jule::Bool", 10));
		};
	};
	_1c254bb4e_write(_self_, jule::Str::lit(" operator", 9));
	_1c254bb4e_write(_self_, _70168_op);
	_1c254bb4e_write(_self_, jule::Str::lit("(", 1));
	if ((!(_7069_unary))) {
		jule::Ptr<_1c0c976ed_ParamIns> _72917_p = (*((*(_70157_f))))._field_Params[1LL];;
		_1c2561da6_paramIns((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), &(_72917_p));
		_1c254bb4e_write(_self_, jule::Str::lit(" _other", 7));
	};
	_1c254bb4e_write(_self_, jule::Str::lit(") { ", 4));
	if ((!(_7079_assignment))) {
		_1c254bb4e_write(_self_, jule::Str::lit("return ", 7));
	};
	static__1c248b275_funcIns(&((*_self_.alloc)._field_Buf), _70157_f);
	if ((!(_7069_unary))) {
		_1c254bb4e_write(_self_, jule::Str::lit("(this, _other); ", 16));
		if (_7079_assignment) {
			_1c254bb4e_write(_self_, jule::Str::lit("return *this; ", 14));
		};
		_1c254bb4e_write(_self_, jule::Str::lit("}", 1));
	} else {
		_1c254bb4e_write(_self_, jule::Str::lit("(this); }", 9));
	};
	_1c254bb4e_write(_self_, jule::Str::lit("\n\n", 2));
}



inline void _1c2551d63_structureOperators(jule::Ptr<_1c254b467_ObjectCoder> _self_, jule::Ptr<_1c0c83552_StructIns>* _75043_s) {
	_234c76a64_StrBuilder _75113_sb = static__234c76ec6_New(40LL);;
	static__1c248be24_structureIns(&(_75113_sb), _75043_s);
	jule::Slice<jule::U8> _7539_ident = _234c787d0_Buf(&_75113_sb);;
	_1c2551329_structureOperatorEq(_self_, _7539_ident, _75043_s);
	_1c255168c_structureOperatorNotEq(_self_, _7539_ident, _75043_s);
	_1c2551aaa_structureOperator(_self_, _7539_ident, &((*((*(_75043_s))))._field_Operators._field_Gt), jule::Str::lit(">", 1));
	_1c2551aaa_structureOperator(_self_, _7539_ident, &((*((*(_75043_s))))._field_Operators._field_GtEq), jule::Str::lit(">=", 2));
	_1c2551aaa_structureOperator(_self_, _7539_ident, &((*((*(_75043_s))))._field_Operators._field_Lt), jule::Str::lit("<", 1));
	_1c2551aaa_structureOperator(_self_, _7539_ident, &((*((*(_75043_s))))._field_Operators._field_LtEq), jule::Str::lit("<=", 2));
	_1c2551aaa_structureOperator(_self_, _7539_ident, &((*((*(_75043_s))))._field_Operators._field_Shl), jule::Str::lit("<<", 2));
	_1c2551aaa_structureOperator(_self_, _7539_ident, &((*((*(_75043_s))))._field_Operators._field_Shr), jule::Str::lit(">>", 2));
	_1c2551aaa_structureOperator(_self_, _7539_ident, &((*((*(_75043_s))))._field_Operators._field_Add), jule::Str::lit("+", 1));
	_1c2551aaa_structureOperator(_self_, _7539_ident, &((*((*(_75043_s))))._field_Operators._field_Sub), jule::Str::lit("-", 1));
	_1c2551aaa_structureOperator(_self_, _7539_ident, &((*((*(_75043_s))))._field_Operators._field_Div), jule::Str::lit("/", 1));
	_1c2551aaa_structureOperator(_self_, _7539_ident, &((*((*(_75043_s))))._field_Operators._field_Mul), jule::Str::lit("*", 1));
	_1c2551aaa_structureOperator(_self_, _7539_ident, &((*((*(_75043_s))))._field_Operators._field_Mod), jule::Str::lit("%", 1));
	_1c2551aaa_structureOperator(_self_, _7539_ident, &((*((*(_75043_s))))._field_Operators._field_BitAnd), jule::Str::lit("&", 1));
	_1c2551aaa_structureOperator(_self_, _7539_ident, &((*((*(_75043_s))))._field_Operators._field_BitOr), jule::Str::lit("|", 1));
	_1c2551aaa_structureOperator(_self_, _7539_ident, &((*((*(_75043_s))))._field_Operators._field_BitXor), jule::Str::lit("^", 1));
	_1c2551aaa_structureOperator(_self_, _7539_ident, &((*((*(_75043_s))))._field_Operators._field_Neg), jule::Str::lit("-", 1));
	_1c2551aaa_structureOperator(_self_, _7539_ident, &((*((*(_75043_s))))._field_Operators._field_Pos), jule::Str::lit("+", 1));
	_1c2551aaa_structureOperator(_self_, _7539_ident, &((*((*(_75043_s))))._field_Operators._field_BitNot), jule::Str::lit("~", 1));
	_1c2551aaa_structureOperator(_self_, _7539_ident, &((*((*(_75043_s))))._field_Operators._field_AddAssign), jule::Str::lit("+=", 2));
	_1c2551aaa_structureOperator(_self_, _7539_ident, &((*((*(_75043_s))))._field_Operators._field_SubAssign), jule::Str::lit("-=", 2));
	_1c2551aaa_structureOperator(_self_, _7539_ident, &((*((*(_75043_s))))._field_Operators._field_DivAssign), jule::Str::lit("/=", 2));
	_1c2551aaa_structureOperator(_self_, _7539_ident, &((*((*(_75043_s))))._field_Operators._field_MulAssign), jule::Str::lit("*=", 2));
	_1c2551aaa_structureOperator(_self_, _7539_ident, &((*((*(_75043_s))))._field_Operators._field_ModAssign), jule::Str::lit("%=", 2));
	_1c2551aaa_structureOperator(_self_, _7539_ident, &((*((*(_75043_s))))._field_Operators._field_ShlAssign), jule::Str::lit("<<=", 3));
	_1c2551aaa_structureOperator(_self_, _7539_ident, &((*((*(_75043_s))))._field_Operators._field_ShrAssign), jule::Str::lit(">>=", 3));
	_1c2551aaa_structureOperator(_self_, _7539_ident, &((*((*(_75043_s))))._field_Operators._field_BitOrAssign), jule::Str::lit("|=", 2));
	_1c2551aaa_structureOperator(_self_, _7539_ident, &((*((*(_75043_s))))._field_Operators._field_BitAndAssign), jule::Str::lit("&=", 2));
	_1c2551aaa_structureOperator(_self_, _7539_ident, &((*((*(_75043_s))))._field_Operators._field_BitXorAssign), jule::Str::lit("^=", 2));
}



inline void _1c255211b_structureInsDecl(jule::Ptr<_1c254b467_ObjectCoder> _self_, jule::Ptr<_1c0c83552_StructIns>* _79141_s) {
	{
		auto expr = &((*((*(_79141_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c69e6d70:;
		if (it != expr_end) {
			jule::Ptr<_1c0c95795_Fn> _79221_m = *it;
			{
				if (_1c255aa09_isHeadDecl(&(_79221_m))) {
					_1c2553727_funcDecl(_self_, &(_79221_m), false);
				};
			}
			_iter_next_1c69e6d70:;
			++it;
			goto _iter_begin_1c69e6d70;
		}
		_iter_end_1c69e6d70:;
	};
	_1c254bb4e_write(_self_, jule::Str::lit("struct ", 7));
	static__1c248be24_structureIns(&((*_self_.alloc)._field_Buf), _79141_s);
	_1c254bb4e_write(_self_, jule::Str::lit(" {\n", 3));
	_1c254c105_addIndent(_self_);
	{
		auto expr = &((*((*(_79141_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c69e7678:;
		if (it != expr_end) {
			jule::Ptr<_1c0c829a2_FieldIns> _80321_f = *it;
			{
				_1c254c501_indent(_self_);
				_1c2550c0d_fieldDecl(_self_, &(_80321_f));
				_1c254bb4e_write(_self_, jule::Str::lit("\n", 1));
			}
			_iter_next_1c69e7678:;
			++it;
			goto _iter_begin_1c69e7678;
		}
		_iter_end_1c69e7678:;
	};
	_1c254c501_indent(_self_);
	_1c2550eb6_structureDestructor(_self_, _79141_s);
	_1c254bb4e_write(_self_, jule::Str::lit("\n\n", 2));
	_1c2551d63_structureOperators(_self_, _79141_s);
	_1c254bb4e_write(_self_, jule::Str::lit("\n", 1));
	_1c254c303_doneIndent(_self_);
	_1c254c501_indent(_self_);
	_1c254bb4e_write(_self_, jule::Str::lit("};", 2));
}



inline void _1c25523c4_structureDecl(jule::Ptr<_1c254b467_ObjectCoder> _self_, jule::Ptr<_1c0c807c4_Struct>* _82138_s) {
	{
		auto expr = &((*((*(_82138_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c69ec2a4:;
		if (it != expr_end) {
			jule::Ptr<_1c0c83552_StructIns> _82221_ins = *it;
			{
				_1c255211b_structureInsDecl(_self_, &(_82221_ins));
			}
			_iter_next_1c69ec2a4:;
			++it;
			goto _iter_begin_1c69ec2a4;
		}
		_iter_end_1c69ec2a4:;
	};
}



inline void _1c25525c2_structureDecls(jule::Ptr<_1c254b467_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c69eca13:;
		if (it != expr_end) {
			jule::Ptr<_1c0c807c4_Struct> _82821_s = *it;
			{
				if (((*(_82821_s))._field_Token != nullptr)) {
					_1c25523c4_structureDecl(_self_, &(_82821_s));
					_1c254bb4e_write(_self_, jule::Str::lit("\n", 1));
				};
			}
			_iter_next_1c69eca13:;
			++it;
			goto _iter_begin_1c69eca13;
		}
		_iter_end_1c69eca13:;
	};
}



inline void _1c25527c0_structureMethodDecls(jule::Ptr<_1c254b467_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c69eda47:;
		if (it != expr_end) {
			jule::Ptr<_1c0c807c4_Struct> _83721_s = *it;
			{
				if (((*(_83721_s))._field_Token != nullptr)) {
					{
						auto expr = &((*_83721_s.alloc)._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c6a00b04:;
						if (it != expr_end) {
							jule::Ptr<_1c0c83552_StructIns> _83929_ins = *it;
							{
								{
									auto expr = &((*(_83929_ins))._field_Methods);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1c6a0153e:;
									if (it != expr_end) {
										jule::Ptr<_1c0c95795_Fn> _84033_m = *it;
										{
											if ((!(_1c255aa09_isHeadDecl(&(_84033_m))))) {
												_1c254d535_pushResult(_self_, &(_84033_m));
												_1c2553727_funcDecl(_self_, &(_84033_m), false);
											};
										}
										_iter_next_1c6a0153e:;
										++it;
										goto _iter_begin_1c6a0153e;
									}
									_iter_end_1c6a0153e:;
								};
							}
							_iter_next_1c6a00b04:;
							++it;
							goto _iter_begin_1c6a00b04;
						}
						_iter_end_1c6a00b04:;
					};
				};
			}
			_iter_next_1c69eda47:;
			++it;
			goto _iter_begin_1c69eda47;
		}
		_iter_end_1c69eda47:;
	};
}



inline void _1c2552a78_paramsDecls(jule::Ptr<_1c254b467_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1c0c976ed_ParamIns>>* _85236_params) {
	if (((*(_85236_params)).len() == 0LL)) {
		_1c254bb4e_write(_self_, jule::Str::lit("(void)", 6));
		return;;
	};
	_1c254bb4e_write(_self_, jule::Str::lit("(", 1));
	{
		auto expr = _85236_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6a01d25:;
		if (it != expr_end) {
			jule::I64 _85914_i = it - expr->begin();
			jule::Ptr<_1c0c976ed_ParamIns> _85921_p = *it;
			{
				_1c2561da6_paramIns((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), &(_85921_p));
				if ((((*(_85236_params)).len() - _85914_i) > 1LL)) {
					_1c254bb4e_write(_self_, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1c6a01d25:;
			++it;
			_85914_i++;
			goto _iter_begin_1c6a01d25;
		}
		_iter_end_1c6a01d25:;
	};
	_1c254bb4e_write(_self_, jule::Str::lit(")", 1));
}



inline void _1c2553051_funcHead(jule::Ptr<_1c254b467_ObjectCoder> _self_, _234c76a64_StrBuilder* _87233_buf, jule::Ptr<_1c0c98699_FnIns>* _87255_f, jule::Bool _87266_ptr, jule::Str _87277_ident) {
	if ((((!(_87266_ptr)) && _1c100ba1c_Inline) && (!(_1c0c96235_IsEntryPoint((*((*(_87255_f))))._field_Decl.ptr()))))) {
		_234c77537_WriteStr(_87233_buf, jule::Str::lit("inline ", 7));
	};
	_1c256257c_funcInsResult((*(_self_))._field_tc.ptr(), _87233_buf, _87255_f);
	if (_87266_ptr) {
		_234c77537_WriteStr(_87233_buf, jule::Str::lit("(*", 2));
		static__1c248b275_funcIns(_87233_buf, _87255_f);
		_234c777e0_WriteByte(_87233_buf, ')');
	} else {
		_234c777e0_WriteByte(_87233_buf, ' ');
		if ((_87277_ident).empty()) {
			static__1c248b275_funcIns(_87233_buf, _87255_f);
		} else {
			_234c77537_WriteStr(_87233_buf, _87277_ident);
		};
	};
}



inline void _1c25533b4_funcDeclIns(jule::Ptr<_1c254b467_ObjectCoder> _self_, jule::Ptr<_1c0c98699_FnIns>* _89136_f, jule::Bool _89147_ptr) {
	_1c254c501_indent(_self_);
	_1c2553051_funcHead(_self_, &((*_self_.alloc)._field_Buf), _89136_f, _89147_ptr, jule::Str());
	_1c2552a78_paramsDecls(_self_, &((*((*(_89136_f))))._field_Params));
	_1c254bb4e_write(_self_, jule::Str::lit(";\n", 2));
}



inline void _1c2553727_funcDecl(jule::Ptr<_1c254b467_ObjectCoder> _self_, jule::Ptr<_1c0c95795_Fn>* _89833_f, jule::Bool _89841_ptr) {
	{
		auto expr = &((*((*(_89833_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6a0a625:;
		if (it != expr_end) {
			jule::Ptr<_1c0c98699_FnIns> _89921_c = *it;
			{
				_1c25533b4_funcDeclIns(_self_, &(_89921_c), _89841_ptr);
			}
			_iter_next_1c6a0a625:;
			++it;
			goto _iter_begin_1c6a0a625;
		}
		_iter_end_1c6a0a625:;
	};
}



inline void _1c2553b45_funcDeclTrait(jule::Ptr<_1c254b467_ObjectCoder> _self_, jule::Ptr<_1c0ca8a72_Trait>* _90438_t, jule::Ptr<_1c0c95795_Fn>* _90454_f, jule::Bool _90462_ptr) {
	{
		auto expr = &((*((*(_90454_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6a0b956:;
		if (it != expr_end) {
			jule::Ptr<_1c0c98699_FnIns> _90521_c = *it;
			{
				jule::Ptr<_1c0dd7de3_TypeKind> _90617_k = (*((*(_90521_c))._field_Params[0LL]))._field_Kind;;
				(*((*_90521_c.alloc)._field_Params[0LL]))._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>((*(_90438_t)), 2)});
				_1c25533b4_funcDeclIns(_self_, &(_90521_c), _90462_ptr);
				(*((*_90521_c.alloc)._field_Params[0LL]))._field_Kind=_90617_k;
			}
			_iter_next_1c6a0b956:;
			++it;
			goto _iter_begin_1c6a0b956;
		}
		_iter_end_1c6a0b956:;
	};
}



inline void _1c2553d43_funcDecls(jule::Ptr<_1c254b467_ObjectCoder> _self_) {
	_1c25500a3_iterPackages(_self_, jule::__new_closure<void,jule::Ptr<_1c0d0c6a8_Package>*>((void*)__jule_anon_1c6a0e88d, jule::Ptr<__jule_anon_1c6a0e88d_ctx>::make(__jule_anon_1c6a0e88d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c6a0e88d_ctx_handler));
}



inline void _1c25541a6_traitDataTypeMethods(jule::Ptr<_1c254b467_ObjectCoder> _self_, jule::Ptr<_1c0ca8a72_Trait>* _92645_owner, jule::Ptr<_1c0ca8a72_Trait>* _92665_t) {
	{
		auto expr = &((*((*(_92665_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6a0ee87:;
		if (it != expr_end) {
			jule::Ptr<_1c0c95795_Fn> _92721_m = *it;
			{
				jule::Ptr<_1c0c98699_FnIns> _92817_ins = (*(_92721_m))._field_Instances[0LL];;
				jule::Ptr<_1c0c976ed_ParamIns> _92917_p = (*(_92817_ins))._field_Params[0LL];;
				(*(_92917_p))._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>((*(_92665_t)), 2)});
				{
					auto expr = (*_92817_ins.alloc)._field_Params.slice(1LL);
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_1c6a14b5c:;
					if (it != expr_end) {
						jule::I64 _93318_i = it - expr.begin();
						jule::Ptr<_1c0c976ed_ParamIns> _93325_ip = *it;
						{
							if (_1c0c4c131_IsAnonIdent((*((*(_93325_ip))._field_Decl))._field_Ident)) {
								(*(*_93325_ip.alloc)._field_Decl.alloc)._field_Ident=(jule::Str::lit("_", 1) + _2021d80b3_Itoa(_93318_i));
							};
						}
						_iter_next_1c6a14b5c:;
						++it;
						_93318_i++;
						goto _iter_begin_1c6a14b5c;
					}
					_iter_end_1c6a14b5c:;
				};
				if ((!(_2336c522d_Production))) {
					jule::Ptr<_1c0c976ed_ParamIns> _93921_lp = (*_92817_ins.alloc)._field_Params[((*_92817_ins.alloc)._field_Params.len() - 1LL)];;
					{
						auto &_match_expr{ (*((*(_93921_lp))._field_Kind))._field_Kind };
						
						if (_match_expr.type_is(true, 27)) {
							_case_begin_1c6a17ab6:;
							{
								goto _match_end_1c6a17687;
							}
						}
						else {
							_case_begin_1c6a176dc:;
							{
								(*_92817_ins.alloc)._field_Params=jule::append((*_92817_ins.alloc)._field_Params,jule::Slice<jule::Ptr<_1c0c976ed_ParamIns>>::make({jule::new_ptr<_1c0c976ed_ParamIns>(_1c0c976ed_ParamIns{._field_Decl=jule::new_ptr<_1c0c93cc1_Param>(_1c0c93cc1_Param{._field_Ident=jule::Str::lit("__file", 6)}), ._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(jule::new_ptr<_1c255bad7_customType>(_1c255bad7_customType{._field_kind=jule::Str::lit("const char*", 11)}), 27)})})}));
							}
						}
						_match_end_1c6a17687:;
					};
				};
				_1c254d535_pushResult(_self_, &(_92721_m));
				_1c2553b45_funcDeclTrait(_self_, _92645_owner, &(_92721_m), true);
			}
			_iter_next_1c6a0ee87:;
			++it;
			goto _iter_begin_1c6a0ee87;
		}
		_iter_end_1c6a0ee87:;
	};
}



inline void _1c25543a4_traitDataTypes(jule::Ptr<_1c254b467_ObjectCoder> _self_) {
	_1c25500a3_iterPackages(_self_, jule::__new_closure<void,jule::Ptr<_1c0d0c6a8_Package>*>((void*)__jule_anon_1c6a18ba5, jule::Ptr<__jule_anon_1c6a18ba5_ctx>::make(__jule_anon_1c6a18ba5_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c6a18ba5_ctx_handler));
}



inline void _1c2554717_paramIns(jule::Ptr<_1c254b467_ObjectCoder> _self_, _234c76a64_StrBuilder* _98533_buf, jule::Ptr<_1c0c976ed_ParamIns>* _98555_p) {
	_1c2561da6_paramIns((*(_self_))._field_tc.ptr(), _98533_buf, _98555_p);
	_234c777e0_WriteByte(_98533_buf, ' ');
	static__1c248b84c_param(_98533_buf, &((*((*(_98555_p))))._field_Decl));
}



inline void _1c2554a7a_paramsIns(jule::Ptr<_1c254b467_ObjectCoder> _self_, _234c76a64_StrBuilder* _99134_buf, jule::Slice<jule::Ptr<_1c0c976ed_ParamIns>>* _99156_params) {
	if (((*(_99156_params)).len() == 0LL)) {
		_234c77537_WriteStr(_99134_buf, jule::Str::lit("(void)", 6));
		return;;
	};
	_234c777e0_WriteByte(_99134_buf, '(');
	{
		auto expr = _99156_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6a25d38:;
		if (it != expr_end) {
			jule::I64 _99714_i = it - expr->begin();
			jule::Ptr<_1c0c976ed_ParamIns> _99721_p = *it;
			{
				_1c2554717_paramIns(_self_, _99134_buf, &(_99721_p));
				if ((((*(_99156_params)).len() - _99714_i) > 1LL)) {
					_234c77537_WriteStr(_99134_buf, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1c6a25d38:;
			++it;
			_99714_i++;
			goto _iter_begin_1c6a25d38;
		}
		_iter_end_1c6a25d38:;
	};
	_234c777e0_WriteByte(_99134_buf, ')');
}



inline void _1c2554ddd_varInitExpr(jule::Ptr<_1c254b467_ObjectCoder> _self_, jule::Ptr<_1c0d4dde2_Var>* _100636_v, jule::Fn<void> _100645_init) {
	if ((*((*(_100636_v))))._field_Statically) {
		_1c254bb4e_write(_self_, jule::Str::lit("static ", 7));
	};
	_1c25630b6_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*((*(_100636_v))))._field_Kind))._field_Kind);
	_1c254bb4e_write(_self_, jule::Str::lit(" ", 1));
	if ((*((*(_100636_v))))._field_Reference) {
		_1c254bb4e_write(_self_, jule::Str::lit("*", 1));
	};
	static__1c248c4eb_var(&((*_self_.alloc)._field_Buf), (*(_100636_v)));
	if ((_100645_init != nullptr)) {
		_1c254bb4e_write(_self_, jule::Str::lit(" = ", 3));
		_100645_init();
	};
	_1c254bb4e_write(_self_, jule::Str::lit(";", 1));
}



inline void _1c2555196_var(jule::Ptr<_1c254b467_ObjectCoder> _self_, jule::Ptr<_1c0d4dde2_Var> _102427_v) {
	if (_1c0c4bd67_IsIgnoreIdent((*(_102427_v))._field_Ident)) {
		return;;
	};
	if ((((*_102427_v.alloc)._field_Value != nullptr) && ((*(*_102427_v.alloc)._field_Value.alloc)._field_Expr != nullptr))) {
		if (((*((*(*_102427_v.alloc)._field_Value.alloc)._field_Data))._field_Model != nullptr)) {
			if ((*_102427_v.alloc)._field_Reference) {
				_1c2554ddd_varInitExpr(_self_, &(_102427_v), jule::__new_closure<void>((void*)__jule_anon_1c6a2d3d4, jule::Ptr<__jule_anon_1c6a2d3d4_ctx>::make(__jule_anon_1c6a2d3d4_ctx{._self_=_self_,._102427_v=_102427_v}).as<jule::Uintptr>(), __jule_anon_1c6a2d3d4_ctx_handler));
			} else {
				_1c2554ddd_varInitExpr(_self_, &(_102427_v), jule::__new_closure<void>((void*)__jule_anon_1c6a304d5, jule::Ptr<__jule_anon_1c6a304d5_ctx>::make(__jule_anon_1c6a304d5_ctx{._self_=_self_,._102427_v=_102427_v}).as<jule::Uintptr>(), __jule_anon_1c6a304d5_ctx_handler));
			};
			return;;
		};
		_1c2554ddd_varInitExpr(_self_, &(_102427_v), nullptr);
		return;;
	};
	if ((*_102427_v.alloc)._field_Reference) {
		_1c2554ddd_varInitExpr(_self_, &(_102427_v), jule::__new_closure<void>((void*)__jule_anon_1c6a32c02, jule::Ptr<__jule_anon_1c6a32c02_ctx>::make(__jule_anon_1c6a32c02_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c6a32c02_ctx_handler));
		return;;
	};
	if (_1c256a3dc_shouldInitialized(&((*((*_102427_v.alloc)._field_Kind))._field_Kind))) {
		_1c2554ddd_varInitExpr(_self_, &(_102427_v), jule::__new_closure<void>((void*)__jule_anon_1c6a33d79, jule::Ptr<__jule_anon_1c6a33d79_ctx>::make(__jule_anon_1c6a33d79_ctx{._self_=_self_,._102427_v=_102427_v}).as<jule::Uintptr>(), __jule_anon_1c6a33d79_ctx_handler));
		return;;
	};
	_1c2554ddd_varInitExpr(_self_, &(_102427_v), nullptr);
}



inline void _1c2555509_anonFuncInsDecl(jule::Ptr<_1c254b467_ObjectCoder> _self_, jule::Ptr<_1c0c8a768_AnonFnExprModel>* _105540_m, jule::Str _105561_ident) {
	_1c2553051_funcHead(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_105540_m))))._field_Func), false, _105561_ident);
	_1c2554a7a_paramsIns(_self_, &((*_self_.alloc)._field_anonObj), &((*((*((*(_105540_m))))._field_Func))._field_Params));
	_234c777e0_WriteByte(&(*_self_.alloc)._field_anonObj, ';');
}



inline void _1c255586c_anonFuncIns(jule::Ptr<_1c254b467_ObjectCoder> _self_, jule::Ptr<_1c0c8a768_AnonFnExprModel>* _106136_m, jule::Str _106157_ident) {
	_1c2553051_funcHead(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_106136_m))))._field_Func), false, _106157_ident);
	_1c2554a7a_paramsIns(_self_, &((*_self_.alloc)._field_Buf), &((*((*((*(_106136_m))))._field_Func))._field_Params));
	_1c254bb4e_write(_self_, jule::Str::lit(" ", 1));
	_1c2472613_anonFuncScope((*_self_.alloc)._field_sc, (*(_106136_m)), _106157_ident);
	if (((*(*((*(_106136_m))))._field_Func.alloc)._field_Scope != nullptr)) {
		_1c254bb4e_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1c2555b25_funcIns(jule::Ptr<_1c254b467_ObjectCoder> _self_, jule::Ptr<_1c0c98699_FnIns>* _107132_f) {
	_1c2553051_funcHead(_self_, &((*_self_.alloc)._field_Buf), _107132_f, false, jule::Str());
	_1c2554a7a_paramsIns(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_107132_f))))._field_Params));
	_1c254bb4e_write(_self_, jule::Str::lit(" ", 1));
	_1c24728bb_funcScope((*_self_.alloc)._field_sc, (*(_107132_f)));
	if (((*((*(_107132_f))))._field_Scope != nullptr)) {
		_1c254bb4e_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1c2555dcd_func(jule::Ptr<_1c254b467_ObjectCoder> _self_, jule::Ptr<_1c0c95795_Fn>* _108129_f) {
	{
		auto expr = &((*((*(_108129_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6a3cadb:;
		if (it != expr_end) {
			jule::Ptr<_1c0c98699_FnIns> _108221_ins = *it;
			{
				_1c2555b25_funcIns(_self_, &(_108221_ins));
			}
			_iter_next_1c6a3cadb:;
			++it;
			goto _iter_begin_1c6a3cadb;
		}
		_iter_end_1c6a3cadb:;
	};
}



inline void _1c2556241_funcTrait(jule::Ptr<_1c254b467_ObjectCoder> _self_, jule::Ptr<_1c25499c6_traitHash>* _108734_hash, jule::Ptr<_1c0c95795_Fn>* _108757_f) {
	jule::Str _10889_ident = (*((*(_108757_f))))._field_Ident;;
	{
		auto expr = &((*((*(_108757_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6a3e3b2:;
		if (it != expr_end) {
			jule::Ptr<_1c0c98699_FnIns> _108921_ins = *it;
			{
				(*(_108921_ins))._field_Scope=nullptr;
				_234c76a64_StrBuilder _109217_s = static__234c76ec6_New((((((*((*(_108757_f))))._field_Ident.len() + _10889_ident.len()) + (*((*(_108734_hash))))._field_ti.len()) + 2LL) + 4LLU));;
				_234c77537_WriteStr(&_109217_s, _10889_ident);
				_234c777e0_WriteByte(&_109217_s, '_');
				_234c77537_WriteStr(&_109217_s, (*((*(_108734_hash))))._field_ti);
				_234c777e0_WriteByte(&_109217_s, '_');
				_234c77537_WriteStr(&_109217_s, _2021d80b3_Itoa((*((*(_108734_hash))))._field_i));
				(*((*(_108757_f))))._field_Ident=_234c77d2e_Str(&_109217_s);
				jule::Ptr<_1c0dd7de3_TypeKind> _110117_k = (*((*_108921_ins.alloc)._field_Params[0LL]))._field_Kind;;
				(*((*_108921_ins.alloc)._field_Params[0LL]))._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>((*((*(_108734_hash))))._field_t, 2)});
				_1c2555b25_funcIns(_self_, &(_108921_ins));
				(*((*_108921_ins.alloc)._field_Params[0LL]))._field_Kind=_110117_k;
			}
			_iter_next_1c6a3e3b2:;
			++it;
			goto _iter_begin_1c6a3e3b2;
		}
		_iter_end_1c6a3e3b2:;
	};
	(*((*(_108757_f))))._field_Ident=_10889_ident;
}



inline void _1c25565a4_traitWrapper(jule::Ptr<_1c254b467_ObjectCoder> _self_, jule::Ptr<_1c0c95795_Fn>* _110937_m, jule::Ptr<_1c25499c6_traitHash>* _110950_hash) {
	_1c2556241_funcTrait(_self_, _110950_hash, _110937_m);
	if (((*((*(_110950_hash))))._field_s == nullptr)) {
		if (_2336c522d_Production) {
			_1c254bb4e_write(_self_, jule::Str::lit(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
		} else {
			_1c254bb4e_write(_self_, jule::Str::lit(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
		};
		return;;
	};
	jule::Bool _11219_ptr = (!(_1c0c94673_IsRef((*((*(_110937_m))))._field_Params[0LL].ptr())));;
	jule::Ptr<_1c0c95795_Fn> _112313_sm = _1c0c845b9_FindMethod((*((*(_110950_hash))))._field_s.ptr(), (*((*(_110937_m))))._field_Ident, false);;
	if (((_112313_sm == nullptr) || ((*(_112313_sm))._field_Instances.len() == 0LL))) {
		return;;
	};
	_1c254c105_addIndent(_self_);
	_1c254bb4e_write(_self_, jule::Str::lit("{\n", 2));
	_1c254c501_indent(_self_);
	if (((*(_112313_sm))._field_Exceptional || (!(_1c0c95c18_IsVoid(_112313_sm.ptr()))))) {
		_1c254bb4e_write(_self_, jule::Str::lit("return ", 7));
	};
	static__1c248ae89_func(&((*_self_.alloc)._field_Buf), &(_112313_sm));
	_1c254bb4e_write(_self_, jule::Str::lit("(", 1));
	if (_11219_ptr) {
		_1c254bb4e_write(_self_, jule::Str::lit("_self_.safe_ptr<", 16));
		_1c256136c_structureIns((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_110950_hash))))._field_s);
		_1c254bb4e_write(_self_, jule::Str::lit(">(", 2));
		if ((!(_2336c522d_Production))) {
			_1c254bb4e_write(_self_, jule::Str::lit("_00___file", 10));
		};
		_1c254bb4e_write(_self_, jule::Str::lit(")", 1));
	} else {
		_1c254bb4e_write(_self_, jule::Str::lit("_self_.data.as<", 15));
		_1c2561009_structure((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*(_112313_sm))._field_Owner);
		_1c254bb4e_write(_self_, jule::Str::lit(">()", 3));
	};
	{
		auto expr = (*((*(_110937_m))))._field_Params.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1c6a4a6cb:;
		if (it != expr_end) {
			jule::Ptr<_1c0c93cc1_Param> _114916_mp = *it;
			{
				_1c254bb4e_write(_self_, jule::Str::lit(", ", 2));
				static__1c248b84c_param(&((*_self_.alloc)._field_Buf), &(_114916_mp));
			}
			_iter_next_1c6a4a6cb:;
			++it;
			goto _iter_begin_1c6a4a6cb;
		}
		_iter_end_1c6a4a6cb:;
	};
	_1c254bb4e_write(_self_, jule::Str::lit(");\n}\n", 5));
	_1c254c303_doneIndent(_self_);
}



inline void _1c25567a2_traitWrappers(jule::Ptr<_1c254b467_ObjectCoder> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6a502b3:;
		if (it != expr_end) {
			jule::Ptr<_1c25499c6_traitHash> _115821_hash = *it;
			{
				{
					auto expr = &((*((*(_115821_hash))._field_t))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c6a50c20:;
					if (it != expr_end) {
						jule::Ptr<_1c0c95795_Fn> _115925_m = *it;
						{
							_1c25565a4_traitWrapper(_self_, &(_115925_m), &(_115821_hash));
						}
						_iter_next_1c6a50c20:;
						++it;
						goto _iter_begin_1c6a50c20;
					}
					_iter_end_1c6a50c20:;
				};
			}
			_iter_next_1c6a502b3:;
			++it;
			goto _iter_begin_1c6a502b3;
		}
		_iter_end_1c6a502b3:;
	};
}



inline void _1c2556b15_traitDataMethods(jule::Ptr<_1c254b467_ObjectCoder> _self_, jule::Ptr<_1c0ca8a72_Trait>* _116541_t, jule::Ptr<_1c25499c6_traitHash>* _116553_hash) {
	{
		auto expr = &((*((*(_116541_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6a51ca9:;
		if (it != expr_end) {
			jule::Ptr<_1c0c95795_Fn> _116621_m = *it;
			{
				_234c76a64_StrBuilder _116717_mIdent = static__234c76ec6_New((*(_116621_m))._field_Ident.len());;
				static__1c248ae89_func(&(_116717_mIdent), &(_116621_m));
				_1c254c501_indent(_self_);
				_1c254bb4e_write(_self_, jule::Str::lit(".", 1));
				_1c254be07_writeBytes(_self_, _234c787d0_Buf(&_116717_mIdent));
				_1c254bb4e_write(_self_, jule::Str::lit("=", 1));
				_1c254be07_writeBytes(_self_, _234c787d0_Buf(&_116717_mIdent));
				_1c254bb4e_write(_self_, jule::Str::lit("_", 1));
				_1c254bb4e_write(_self_, (*((*(_116553_hash))))._field_ti);
				_1c254bb4e_write(_self_, jule::Str::lit("_", 1));
				_1c254bb4e_write(_self_, _2021d80b3_Itoa((*((*(_116553_hash))))._field_i));
				_1c254bb4e_write(_self_, jule::Str::lit(",\n", 2));
			}
			_iter_next_1c6a51ca9:;
			++it;
			goto _iter_begin_1c6a51ca9;
		}
		_iter_end_1c6a51ca9:;
	};
}



inline void _1c2556e78_traitData(jule::Ptr<_1c254b467_ObjectCoder> _self_, jule::Ptr<_1c25499c6_traitHash>* _118234_hash, jule::Ptr<_1c0ca8a72_Trait>* _118257_old) {
	if (((*((*((*(_118234_hash))))._field_t))._field_Methods.len() == 0LL)) {
		return;;
	};
	_234c76a64_StrBuilder _118613_ident = static__234c76ec6_New((*(*((*(_118234_hash))))._field_t.alloc)._field_Ident.len());;
	static__1c248b561_traitDecl(&(_118613_ident), (*((*(_118234_hash))))._field_t);
	if (((*((*(_118234_hash))))._field_t != (*(_118257_old)))) {
		if (((*(_118257_old)) != nullptr)) {
			_1c254c303_doneIndent(_self_);
			_1c254c501_indent(_self_);
			_1c254bb4e_write(_self_, jule::Str::lit("};\n", 3));
		};
		_1c254bb4e_write(_self_, jule::Str::lit("static ", 7));
		_1c254be07_writeBytes(_self_, _234c787d0_Buf(&_118613_ident));
		_1c254bb4e_write(_self_, jule::Str::lit("MptrData ", 9));
		_1c254be07_writeBytes(_self_, _234c787d0_Buf(&_118613_ident));
		_1c254bb4e_write(_self_, jule::Str::lit("_mptr_data[] = {\n", 17));
		(*(_118257_old))=(*((*(_118234_hash))))._field_t;
		_1c254c105_addIndent(_self_);
	};
	_1c254c501_indent(_self_);
	_1c254bb4e_write(_self_, jule::Str::lit("{\n", 2));
	_1c254c105_addIndent(_self_);
	_1c2556b15_traitDataMethods(_self_, &((*((*(_118234_hash))))._field_t), _118234_hash);
	_1c254c303_doneIndent(_self_);
	_1c254c501_indent(_self_);
	_1c254bb4e_write(_self_, jule::Str::lit("},\n", 3));
}



inline void _1c2557176_traitDatas(jule::Ptr<_1c254b467_ObjectCoder> _self_) {
	jule::Ptr<_1c0ca8a72_Trait> _121217_old = nullptr;;
	{
		auto expr = &((*_self_.alloc)._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6a5d2d2:;
		if (it != expr_end) {
			jule::Ptr<_1c25499c6_traitHash> _121321_hash = *it;
			{
				_1c2556e78_traitData(_self_, &(_121321_hash), &(_121217_old));
			}
			_iter_next_1c6a5d2d2:;
			++it;
			goto _iter_begin_1c6a5d2d2;
		}
		_iter_end_1c6a5d2d2:;
	};
	if ((_121217_old != nullptr)) {
		_1c254c303_doneIndent(_self_);
		_1c254c501_indent(_self_);
		_1c254bb4e_write(_self_, jule::Str::lit("};\n", 3));
	};
}



inline void _1c2557374_globals(jule::Ptr<_1c254b467_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6a5ed83:;
		if (it != expr_end) {
			jule::Ptr<_1c0d4dde2_Var> _122421_v = *it;
			{
				_1c25630b6_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_122421_v))._field_Kind))._field_Kind);
				_1c254bb4e_write(_self_, jule::Str::lit(" ", 1));
				static__1c248c4eb_var(&((*_self_.alloc)._field_Buf), _122421_v);
				_1c254bb4e_write(_self_, jule::Str::lit(" = ", 3));
				_1c2483b41_model((*_self_.alloc)._field_ec, (*((*((*_122421_v.alloc)._field_Value))._field_Data))._field_Model);
				_1c254bb4e_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1c6a5ed83:;
			++it;
			goto _iter_begin_1c6a5ed83;
		}
		_iter_end_1c6a5ed83:;
	};
}



inline void _1c2557572_decls(jule::Ptr<_1c254b467_ObjectCoder> _self_) {
	_1c255049e_traitDecls(_self_);
	_1c2550955_structurePlainDecls(_self_);
	_1c25525c2_structureDecls(_self_);
	(*_self_.alloc)._field_headPos=_234c782b3_Len(&(*_self_.alloc)._field_Buf);
	_1c25527c0_structureMethodDecls(_self_);
	_1c2553d43_funcDecls(_self_);
	_1c254bb4e_write(_self_, jule::Str::lit("\n\n", 2));
	_1c25543a4_traitDataTypes(_self_);
	_1c254bb4e_write(_self_, jule::Str::lit("\n\n", 2));
	_1c25567a2_traitWrappers(_self_);
	_1c254bb4e_write(_self_, jule::Str::lit("\n\n", 2));
	_1c2557176_traitDatas(_self_);
	_1c254bb4e_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_declPos=_234c782b3_Len(&(*_self_.alloc)._field_Buf);
	_1c2557374_globals(_self_);
}



inline void _1c255782a_structureMethods(jule::Ptr<_1c254b467_ObjectCoder> _self_, jule::Ptr<_1c0c83552_StructIns>* _125241_s) {
	{
		auto expr = &((*((*(_125241_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6a6783b:;
		if (it != expr_end) {
			jule::Ptr<_1c0c95795_Fn> _125321_f = *it;
			{
				_1c2555dcd_func(_self_, &(_125321_f));
				_1c254bb4e_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1c6a6783b:;
			++it;
			goto _iter_begin_1c6a6783b;
		}
		_iter_end_1c6a6783b:;
	};
}



inline void _1c2557ad3_structureOstream(jule::Ptr<_1c254b467_ObjectCoder> _self_, jule::Ptr<_1c0c83552_StructIns>* _125941_s) {
	_1c254c501_indent(_self_);
	_1c254bb4e_write(_self_, jule::Str::lit("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	static__1c248be24_structureIns(&((*_self_.alloc)._field_Buf), _125941_s);
	_1c254bb4e_write(_self_, jule::Str::lit(" _Src) {\n", 9));
	_1c254c105_addIndent(_self_);
	_1c254c501_indent(_self_);
	jule::Ptr<_1c0c95795_Fn> _126713_fts = _1c0c845b9_FindMethod((*(_125941_s)).ptr(), jule::Str::lit("Str", 3), false);;
	if (static__1c0d50652_Str(_126713_fts)) {
		_1c254bb4e_write(_self_, jule::Str::lit("_Stream << ", 11));
		static__1c248ae89_func(&((*_self_.alloc)._field_Buf), &(_126713_fts));
		_1c254bb4e_write(_self_, jule::Str::lit("(&_Src);\n", 9));
	} else {
		_1c254bb4e_write(_self_, jule::Str::lit("_Stream << \"", 12));
		_1c24848ab_cstrBytes(&((*_self_.alloc)._field_Buf), (*((*((*(_125941_s))))._field_Decl))._field_Ident);
		_1c254bb4e_write(_self_, jule::Str::lit("{\";\n", 4));
		{
			auto expr = &((*((*(_125941_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c6a6c478:;
			if (it != expr_end) {
				jule::I64 _127718_i = it - expr->begin();
				jule::Ptr<_1c0c829a2_FieldIns> _127725_f = *it;
				{
					_1c254c501_indent(_self_);
					_1c254bb4e_write(_self_, jule::Str::lit("_Stream << \"", 12));
					_1c24848ab_cstrBytes(&((*_self_.alloc)._field_Buf), (*((*(_127725_f))._field_Decl))._field_Ident);
					_1c254bb4e_write(_self_, jule::Str::lit(":", 1));
					jule::Ptr<_1c0c83552_StructIns> _128417_strct = _1c0ddbab7_Struct((*_127725_f.alloc)._field_Kind.ptr());;
					if ((((_128417_strct != nullptr) && ((*_128417_strct.alloc)._field_Decl != nullptr)) && (*(*_128417_strct.alloc)._field_Decl.alloc)._field_Binded)) {
						_1c254bb4e_write(_self_, jule::Str::lit(" cpp.", 5));
						static__1c248c210_field(&((*_self_.alloc)._field_Buf), &((*_127725_f.alloc)._field_Decl));
						_1c254bb4e_write(_self_, jule::Str::lit("\"", 1));
					} else {
						_1c254bb4e_write(_self_, jule::Str::lit("\" << _Src.", 10));
						static__1c248c210_field(&((*_self_.alloc)._field_Buf), &((*_127725_f.alloc)._field_Decl));
					};
					if (((_127718_i + 1LL) < (*((*(_125941_s))))._field_Fields.len())) {
						_1c254bb4e_write(_self_, jule::Str::lit(" << \", \"", 8));
					};
					_1c254bb4e_write(_self_, jule::Str::lit(";\n", 2));
				}
				_iter_next_1c6a6c478:;
				++it;
				_127718_i++;
				goto _iter_begin_1c6a6c478;
			}
			_iter_end_1c6a6c478:;
		};
		_1c254c501_indent(_self_);
		_1c254bb4e_write(_self_, jule::Str::lit("_Stream << \"}\";\n", 16));
	};
	_1c254c501_indent(_self_);
	_1c254bb4e_write(_self_, jule::Str::lit("return _Stream;\n", 16));
	_1c254c303_doneIndent(_self_);
	_1c254bb4e_write(_self_, jule::Str::lit("}", 1));
}



inline void _1c2557d8b_structureIns(jule::Ptr<_1c254b467_ObjectCoder> _self_, jule::Ptr<_1c0c83552_StructIns>* _131037_s) {
	_1c255782a_structureMethods(_self_, _131037_s);
	_1c254bb4e_write(_self_, jule::Str::lit("\n\n", 2));
	_1c2557ad3_structureOstream(_self_, _131037_s);
}



inline void _1c2558144_structure(jule::Ptr<_1c254b467_ObjectCoder> _self_, jule::Ptr<_1c0c807c4_Struct>* _131634_s) {
	{
		auto expr = &((*((*(_131634_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6a76729:;
		if (it != expr_end) {
			jule::Ptr<_1c0c83552_StructIns> _131721_ins = *it;
			{
				_1c2557d8b_structureIns(_self_, &(_131721_ins));
				_1c254bb4e_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1c6a76729:;
			++it;
			goto _iter_begin_1c6a76729;
		}
		_iter_end_1c6a76729:;
	};
}



inline void _1c2558342_structures(jule::Ptr<_1c254b467_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6a76e77:;
		if (it != expr_end) {
			jule::Ptr<_1c0c807c4_Struct> _132421_s = *it;
			{
				if (((*(_132421_s))._field_Token != nullptr)) {
					_1c2558144_structure(_self_, &(_132421_s));
					_1c254bb4e_write(_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1c6a76e77:;
			++it;
			goto _iter_begin_1c6a76e77;
		}
		_iter_end_1c6a76e77:;
	};
}



inline void _1c2558540_funcs(jule::Ptr<_1c254b467_ObjectCoder> _self_) {
	_1c25500a3_iterPackages(_self_, jule::__new_closure<void,jule::Ptr<_1c0d0c6a8_Package>*>((void*)__jule_anon_1c6a799e6, jule::Ptr<__jule_anon_1c6a799e6_ctx>::make(__jule_anon_1c6a799e6_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c6a799e6_ctx_handler));
}



inline void _1c25587e8_pushInit(jule::Ptr<_1c254b467_ObjectCoder> _self_, jule::Ptr<_1c0d0c6a8_Package>* _134833_pkg) {
	_1c25596c8_iterFiles(_134833_pkg, jule::__new_closure<void,jule::Ptr<_1c0da1681_SymbolTable>*>((void*)__jule_anon_1c6a7d5aa, jule::Ptr<__jule_anon_1c6a7d5aa_ctx>::make(__jule_anon_1c6a7d5aa_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c6a7d5aa_ctx_handler));
}



inline void _1c25589e6_anonHashes(jule::Ptr<_1c254b467_ObjectCoder> _self_) {
	_julec_label_1c6a7ec2c:;
	jule::Slice<jule::Ptr<_1c254a2bd_anonHash>> _136513_anons = (*(_self_))._field_anons;;
	(*_self_.alloc)._field_anons=nullptr;
	{
		auto expr = &(_136513_anons);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6a810e6:;
		if (it != expr_end) {
			jule::Ptr<_1c254a2bd_anonHash> _136721_h = *it;
			{
				_1c255586c_anonFuncIns(_self_, &((*(_136721_h))._field_expr), (*_136721_h.alloc)._field_ident);
			}
			_iter_next_1c6a810e6:;
			++it;
			goto _iter_begin_1c6a810e6;
		}
		_iter_end_1c6a810e6:;
	};
	if (((*_self_.alloc)._field_anons.len() > 0LL)) {
		goto _julec_label_1c6a7ec2c;
	};
}



inline void _1c2558be4_initCaller(jule::Ptr<_1c254b467_ObjectCoder> _self_) {
	_1c254bb4e_write(_self_, jule::Str::lit("void __jule_call_initializers(void) {\n", 38));
	_1c254c105_addIndent(_self_);
	_1c25500a3_iterPackages(_self_, jule::__new_closure<void,jule::Ptr<_1c0d0c6a8_Package>*>((void*)__jule_anon_1c6a83c97, jule::Ptr<__jule_anon_1c6a83c97_ctx>::make(__jule_anon_1c6a83c97_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c6a83c97_ctx_handler));
	_1c254c303_doneIndent(_self_);
	_1c254bb4e_write(_self_, jule::Str::lit("\n}", 2));
}



inline void _1c2558de2_end(jule::Ptr<_1c254b467_ObjectCoder> _self_) {
	_1c254bb4e_write(_self_, jule::Str::lit("int main(int argc, char *argv[], char *envp[]) {\n    jule::__closure_init();\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 176));
	if (_2336c486a_Test) {
		_1c254bb4e_write(_self_, jule::Str::lit("test_point();", 13));
	} else {
		_1c254bb4e_write(_self_, jule::Str::lit("entry_point();", 14));
	};
	_1c254bb4e_write(_self_, jule::Str::lit("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1c25590e0_serializeHead(jule::Ptr<_1c254b467_ObjectCoder> _self_) {
	_1c254ecea_prepareStructures(_self_);
	_1c25502a1_buildTraitMap(_self_);
	_1c254e646_head(_self_);
	_1c254bb4e_write(_self_, jule::Str::lit("\n", 1));
	_1c2557572_decls(_self_);
	if ((_234c782b3_Len(&(*_self_.alloc)._field_resultDecls) > 0LL)) {
		jule::Slice<jule::U8> _141417_head = jule::Slice<jule::U8>::alloc(0LL, (_234c782b3_Len(&(*_self_.alloc)._field_Buf) + _234c782b3_Len(&(*_self_.alloc)._field_resultDecls)), 0);;
		(_141417_head).append(_234c787d0_Buf(&(*_self_.alloc)._field_Buf).slice(0LL, (*_self_.alloc)._field_headPos));;
		(_141417_head).append(_234c787d0_Buf(&(*_self_.alloc)._field_resultDecls));;
		(*_self_.alloc)._field_declPos+=_234c782b3_Len(&(*_self_.alloc)._field_resultDecls);
		(_141417_head).append(_234c787d0_Buf(&(*_self_.alloc)._field_Buf).slice((*_self_.alloc)._field_headPos));;
		{
			_234c78a88_SetBuf(&(*_self_.alloc)._field_Buf, _141417_head);
		};
	};
	_1c254bb4e_write(_self_, jule::Str::lit("\n", 1));
	_1c2558342_structures(_self_);
	_1c2558540_funcs(_self_);
	_1c2558be4_initCaller(_self_);
	_1c254bb4e_write(_self_, jule::Str::lit("\n\n", 2));
	_1c25589e6_anonHashes(_self_);
	if ((_234c782b3_Len(&(*_self_.alloc)._field_anyObj) > 0LL)) {
		jule::Slice<jule::U8> _143117_head = jule::Slice<jule::U8>::alloc(0LL, (_234c782b3_Len(&(*_self_.alloc)._field_Buf) + _234c782b3_Len(&(*_self_.alloc)._field_anyObj)), 0);;
		(_143117_head).append(_234c787d0_Buf(&(*_self_.alloc)._field_Buf).slice(0LL, (*_self_.alloc)._field_declPos));;
		(_143117_head).append(_234c787d0_Buf(&(*_self_.alloc)._field_anyObj));;
		(_143117_head).append(_234c787d0_Buf(&(*_self_.alloc)._field_Buf).slice((*_self_.alloc)._field_declPos));;
		{
			_234c78a88_SetBuf(&(*_self_.alloc)._field_Buf, _143117_head);
		};
		(*_self_.alloc)._field_declPos+=_234c782b3_Len(&(*_self_.alloc)._field_anyObj);
	};
	if ((_234c782b3_Len(&(*_self_.alloc)._field_anonObj) > 0LL)) {
		jule::Slice<jule::U8> _143917_head = jule::Slice<jule::U8>::alloc(0LL, (_234c782b3_Len(&(*_self_.alloc)._field_Buf) + _234c782b3_Len(&(*_self_.alloc)._field_anonObj)), 0);;
		(_143917_head).append(_234c787d0_Buf(&(*_self_.alloc)._field_Buf).slice(0LL, (*_self_.alloc)._field_declPos));;
		(_143917_head).append(_234c787d0_Buf(&(*_self_.alloc)._field_anonObj));;
		(_143917_head).append(_234c787d0_Buf(&(*_self_.alloc)._field_Buf).slice((*_self_.alloc)._field_declPos));;
		{
			_234c78a88_SetBuf(&(*_self_.alloc)._field_Buf, _143917_head);
		};
	};
}



inline void _1c25592dd_Serialize(jule::Ptr<_1c254b467_ObjectCoder> _self_) {
	_1c25590e0_serializeHead(_self_);
	_1c2558de2_end(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1c254b467_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Buf:" << _Src._field_Buf << ", ";
	_Stream << "resultDecls:" << _Src._field_resultDecls << ", ";
	_Stream << "anyObj:" << _Src._field_anyObj << ", ";
	_Stream << "anonObj:" << _Src._field_anonObj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "anons:" << _Src._field_anons << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "resultMap:" << _Src._field_resultMap << ", ";
	_Stream << "anyTypeMap:" << _Src._field_anyTypeMap << ", ";
	_Stream << "traitCastMap:" << _Src._field_traitCastMap << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "tc:" << _Src._field_tc << ", ";
	_Stream << "headPos:" << _Src._field_headPos << ", ";
	_Stream << "declPos:" << _Src._field_declPos;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c1006077_dataCheckpoint _Src) {
	_Stream << "dataCheckpoint{";
	_Stream << "boundary:" << _Src._field_boundary << ", ";
	_Stream << "nils:" << _Src._field_nils << ", ";
	_Stream << "dynamic:" << _Src._field_dynamic;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c13417e1_ObjectDeadCode> static__1c1341c86_new(jule::Ptr<_1c1989301_IR>* _3524_ir) {
	return jule::new_ptr<_1c13417e1_ObjectDeadCode>(_1c13417e1_ObjectDeadCode{._field_ir=(*(_3524_ir))});;
}



inline jule::Bool _1c622b6b5_isLive(jule::Ptr<_1c13417e1_ObjectDeadCode> _self_, jule::Ptr<_1c0ca8a72_Trait>* _4130_t) {
	jule::Slice<jule::Ptr<_1c0ca8a72_Trait>> _4217_live = nullptr;;
	{
		
{
			_case_begin_1c622d398:;
			{
				_4217_live=(*(_self_))._field_live._field_traits;
			}
		}
		_match_end_1c622d277:;
	};
	{
		auto expr = &(_4217_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c622c650:;
		if (it != expr_end) {
			jule::I64 _5313_i = it - expr->begin();
			{
				if ((_4217_live[_5313_i] == (*(_4130_t)))) {
					return true;;
				};
			}
			_iter_next_1c622c650:;
			++it;
			_5313_i++;
			goto _iter_begin_1c622c650;
		}
		_iter_end_1c622c650:;
	};
	return false;;
}

inline jule::Bool _1c6232116_isLive(jule::Ptr<_1c13417e1_ObjectDeadCode> _self_, jule::Ptr<_1c0c98699_FnIns>* _4130_t) {
	jule::Slice<jule::Ptr<_1c0c98699_FnIns>> _4217_live = nullptr;;
	{
		
{
			_case_begin_1c6233c3e:;
			{
				_4217_live=(*(_self_))._field_live._field_fns;
			}
		}
		_match_end_1c6233b84:;
	};
	{
		auto expr = &(_4217_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c623435a:;
		if (it != expr_end) {
			jule::I64 _5313_i = it - expr->begin();
			{
				if ((_4217_live[_5313_i] == (*(_4130_t)))) {
					return true;;
				};
			}
			_iter_next_1c623435a:;
			++it;
			_5313_i++;
			goto _iter_begin_1c623435a;
		}
		_iter_end_1c623435a:;
	};
	return false;;
}

inline jule::Bool _1c6237e74_isLive(jule::Ptr<_1c13417e1_ObjectDeadCode> _self_, jule::Ptr<_1c0c83552_StructIns>* _4130_t) {
	jule::Slice<jule::Ptr<_1c0c83552_StructIns>> _4217_live = nullptr;;
	{
		
{
			_case_begin_1c623c61b:;
			{
				_4217_live=(*(_self_))._field_live._field_structs;
			}
		}
		_match_end_1c623c73c:;
	};
	{
		auto expr = &(_4217_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c623bb15:;
		if (it != expr_end) {
			jule::I64 _5313_i = it - expr->begin();
			{
				if ((_4217_live[_5313_i] == (*(_4130_t)))) {
					return true;;
				};
			}
			_iter_next_1c623bb15:;
			++it;
			_5313_i++;
			goto _iter_begin_1c623bb15;
		}
		_iter_end_1c623bb15:;
	};
	return false;;
}

inline jule::Bool _1c62401ac_isLive(jule::Ptr<_1c13417e1_ObjectDeadCode> _self_, jule::Ptr<_1c0d4dde2_Var>* _4130_t) {
	jule::Slice<jule::Ptr<_1c0d4dde2_Var>> _4217_live = nullptr;;
	{
		
{
			_case_begin_1c6241a93:;
			{
				_4217_live=(*(_self_))._field_live._field_vars;
			}
		}
		_match_end_1c6241c2a:;
	};
	{
		auto expr = &(_4217_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6240ad6:;
		if (it != expr_end) {
			jule::I64 _5313_i = it - expr->begin();
			{
				if ((_4217_live[_5313_i] == (*(_4130_t)))) {
					return true;;
				};
			}
			_iter_next_1c6240ad6:;
			++it;
			_5313_i++;
			goto _iter_begin_1c6240ad6;
		}
		_iter_end_1c6240ad6:;
	};
	return false;;
}



inline void _1c622d068_pushLive(jule::Ptr<_1c13417e1_ObjectDeadCode> _self_, jule::Ptr<_1c0ca8a72_Trait> _6135_t) {
	{
		
{
			_case_begin_1c62304ee:;
			{
				(*(_self_))._field_live._field_traits=jule::append((*_self_.alloc)._field_live._field_traits,jule::Slice<jule::Ptr<_1c0ca8a72_Trait>>::make({_6135_t}));
			}
		}
		_match_end_1c622e883:;
	};
}

inline void _1c623237a_pushLive(jule::Ptr<_1c13417e1_ObjectDeadCode> _self_, jule::Ptr<_1c0c98699_FnIns> _6135_t) {
	{
		
{
			_case_begin_1c62362a2:;
			{
				(*(_self_))._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,jule::Slice<jule::Ptr<_1c0c98699_FnIns>>::make({_6135_t}));
			}
		}
		_match_end_1c62358bc:;
	};
}

inline void _1c623853a_pushLive(jule::Ptr<_1c13417e1_ObjectDeadCode> _self_, jule::Ptr<_1c0c83552_StructIns> _6135_t) {
	{
		
{
			_case_begin_1c6239bbd:;
			{
				(*(_self_))._field_live._field_structs=jule::append((*_self_.alloc)._field_live._field_structs,jule::Slice<jule::Ptr<_1c0c83552_StructIns>>::make({_6135_t}));
			}
		}
		_match_end_1c6239030:;
	};
}

inline void _1c6240421_pushLive(jule::Ptr<_1c13417e1_ObjectDeadCode> _self_, jule::Ptr<_1c0d4dde2_Var> _6135_t) {
	{
		
{
			_case_begin_1c62442c1:;
			{
				(*(_self_))._field_live._field_vars=jule::append((*_self_.alloc)._field_live._field_vars,jule::Slice<jule::Ptr<_1c0d4dde2_Var>>::make({_6135_t}));
			}
		}
		_match_end_1c6243743:;
	};
}



inline void _1c1342638_setReferencesAsLive(jule::Ptr<_1c13417e1_ObjectDeadCode> _self_, jule::Ptr<_1c0c9b878_ReferenceStack>* _7444_rs) {
	if (((*(_7444_rs)) == nullptr)) {
		return;;
	};
	jule::I64 _7813_i = 0LL;;
	for (; (_7813_i < _1c0c9c060_Len((*(_7444_rs)).ptr())); (_7813_i)++) {
		{
			jule::Any _8017_ref = _1c0c9c3a1_At((*(_7444_rs)).ptr(), _7813_i);;
			{
				auto &_match_expr{ _8017_ref };
				
				if (_match_expr.type == &__jule_any_type10) {
					_case_begin_1c622a351:;
					{
						jule::Ptr<_1c0ca8a72_Trait> _8321_t = _8017_ref.unsafe_cast_ptr<_1c0ca8a72_Trait>();;
						if (_1c622b6b5_isLive(_self_, &(_8321_t))) {
							goto _iter_next_1c62295c5;
						};
						_1c622d068_pushLive(_self_, _8321_t);
						{
							auto expr = &((*(_8321_t))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1c622ae67:;
							if (it != expr_end) {
								jule::Ptr<_1c0c95795_Fn> _8829_ins = *it;
								{
									{
										auto expr = &((*(_8829_ins))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1c622c496:;
										if (it != expr_end) {
											jule::Ptr<_1c0c98699_FnIns> _8933_mins = *it;
											{
												if (_1c6232116_isLive(_self_, &(_8933_mins))) {
													goto _iter_next_1c622c496;
												};
												_1c623237a_pushLive(_self_, _8933_mins);
												_1c1342638_setReferencesAsLive(_self_, &((*(_8933_mins))._field_Refers));
											}
											_iter_next_1c622c496:;
											++it;
											goto _iter_begin_1c622c496;
										}
										_iter_end_1c622c496:;
									};
								}
								_iter_next_1c622ae67:;
								++it;
								goto _iter_begin_1c622ae67;
							}
							_iter_end_1c622ae67:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1c622a1ec:;
					{
						jule::Ptr<_1c0c98699_FnIns> _9821_f = _8017_ref.unsafe_cast_ptr<_1c0c98699_FnIns>();;
						if (_1c6232116_isLive(_self_, &(_9821_f))) {
							goto _match_end_1c622a0ba;
						};
						if ((((*(_9821_f))._field_Owner != nullptr) && (!((*((*_9821_f.alloc)._field_Decl))._field_Statically)))) {
							if ((!(_1c6237e74_isLive(_self_, &((*_9821_f.alloc)._field_Owner))))) {
								_1c623853a_pushLive(_self_, (*_9821_f.alloc)._field_Owner);
								_1c1342638_setReferencesAsLive(_self_, &((*(*_9821_f.alloc)._field_Owner.alloc)._field_Refers));
							};
						};
						_1c623237a_pushLive(_self_, _9821_f);
						_1c1342638_setReferencesAsLive(_self_, &((*_9821_f.alloc)._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_1c622a3ea:;
					{
						jule::Ptr<_1c0d4dde2_Var> _11121_v = _8017_ref.unsafe_cast_ptr<_1c0d4dde2_Var>();;
						if (_1c62401ac_isLive(_self_, &(_11121_v))) {
							goto _match_end_1c622a0ba;
						};
						_1c6240421_pushLive(_self_, _11121_v);
						_1c1342638_setReferencesAsLive(_self_, &((*(_11121_v))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_1c622a461:;
					{
						jule::Ptr<_1c0c83552_StructIns> _11821_s = _8017_ref.unsafe_cast_ptr<_1c0c83552_StructIns>();;
						if (_1c6237e74_isLive(_self_, &(_11821_s))) {
							goto _match_end_1c622a0ba;
						};
						_1c623853a_pushLive(_self_, _11821_s);
						_1c1342638_setReferencesAsLive(_self_, &((*(_11821_s))._field_Refers));
						{
							auto expr = &((*_11821_s.alloc)._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1c6246625:;
							if (it != expr_end) {
								jule::Ptr<_1c0c95795_Fn> _12429_m = *it;
								{
									{
										auto expr = &((*(_12429_m))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1c62472d5:;
										if (it != expr_end) {
											jule::Ptr<_1c0c98699_FnIns> _12533_ins = *it;
											{
												if (_1c6232116_isLive(_self_, &(_12533_ins))) {
													goto _iter_next_1c62472d5;
												};
												if (_1c134530b_isTraitMethod(&(_11821_s), &(_12533_ins))) {
													_1c623237a_pushLive(_self_, _12533_ins);
													_1c1342638_setReferencesAsLive(_self_, &((*(_12533_ins))._field_Refers));
												};
												;
												;
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Eq)) {
														_1c623237a_pushLive(_self_, _12533_ins);
														_1c1342638_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Gt)) {
														_1c623237a_pushLive(_self_, _12533_ins);
														_1c1342638_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_GtEq)) {
														_1c623237a_pushLive(_self_, _12533_ins);
														_1c1342638_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Lt)) {
														_1c623237a_pushLive(_self_, _12533_ins);
														_1c1342638_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_LtEq)) {
														_1c623237a_pushLive(_self_, _12533_ins);
														_1c1342638_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Shl)) {
														_1c623237a_pushLive(_self_, _12533_ins);
														_1c1342638_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Shr)) {
														_1c623237a_pushLive(_self_, _12533_ins);
														_1c1342638_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Add)) {
														_1c623237a_pushLive(_self_, _12533_ins);
														_1c1342638_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Sub)) {
														_1c623237a_pushLive(_self_, _12533_ins);
														_1c1342638_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Div)) {
														_1c623237a_pushLive(_self_, _12533_ins);
														_1c1342638_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Mul)) {
														_1c623237a_pushLive(_self_, _12533_ins);
														_1c1342638_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Mod)) {
														_1c623237a_pushLive(_self_, _12533_ins);
														_1c1342638_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_BitAnd)) {
														_1c623237a_pushLive(_self_, _12533_ins);
														_1c1342638_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_BitOr)) {
														_1c623237a_pushLive(_self_, _12533_ins);
														_1c1342638_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_BitXor)) {
														_1c623237a_pushLive(_self_, _12533_ins);
														_1c1342638_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Neg)) {
														_1c623237a_pushLive(_self_, _12533_ins);
														_1c1342638_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Pos)) {
														_1c623237a_pushLive(_self_, _12533_ins);
														_1c1342638_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_BitNot)) {
														_1c623237a_pushLive(_self_, _12533_ins);
														_1c1342638_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_AddAssign)) {
														_1c623237a_pushLive(_self_, _12533_ins);
														_1c1342638_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_SubAssign)) {
														_1c623237a_pushLive(_self_, _12533_ins);
														_1c1342638_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_DivAssign)) {
														_1c623237a_pushLive(_self_, _12533_ins);
														_1c1342638_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_MulAssign)) {
														_1c623237a_pushLive(_self_, _12533_ins);
														_1c1342638_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_ModAssign)) {
														_1c623237a_pushLive(_self_, _12533_ins);
														_1c1342638_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_ShlAssign)) {
														_1c623237a_pushLive(_self_, _12533_ins);
														_1c1342638_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_ShrAssign)) {
														_1c623237a_pushLive(_self_, _12533_ins);
														_1c1342638_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_BitOrAssign)) {
														_1c623237a_pushLive(_self_, _12533_ins);
														_1c1342638_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_BitAndAssign)) {
														_1c623237a_pushLive(_self_, _12533_ins);
														_1c1342638_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_BitXorAssign)) {
														_1c623237a_pushLive(_self_, _12533_ins);
														_1c1342638_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
											}
											_iter_next_1c62472d5:;
											++it;
											goto _iter_begin_1c62472d5;
										}
										_iter_end_1c62472d5:;
									};
								}
								_iter_next_1c6246625:;
								++it;
								goto _iter_begin_1c6246625;
							}
							_iter_end_1c6246625:;
						};
					}
				}
				_match_end_1c622a0ba:;
			};
		}
	_iter_next_1c62295c5:;
	}
	_iter_end_1c62295c5:;;
}



inline void _1c13428e1_inits(jule::Ptr<_1c13417e1_ObjectDeadCode> _self_, jule::Ptr<_1c0d0c6a8_Package>* _15630_pkg) {
	{
		auto expr = &((*((*(_15630_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6229619:;
		if (it != expr_end) {
			jule::Ptr<_1c0da1681_SymbolTable> _15721_file = *it;
			{
				{
					auto expr = &((*(_15721_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c624715e:;
					if (it != expr_end) {
						jule::Ptr<_1c0c95795_Fn> _15825_f = *it;
						{
							if ((*(_15825_f))._field_Ident.equal("init", 4)) {
								jule::Ptr<_1c0c98699_FnIns> _16025_ins = (*_15825_f.alloc)._field_Instances[0LL];;
								(*(_self_))._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,jule::Slice<jule::Ptr<_1c0c98699_FnIns>>::make({_16025_ins}));
								_1c1342638_setReferencesAsLive(_self_, &((*(_16025_ins))._field_Refers));
							};
						}
						_iter_next_1c624715e:;
						++it;
						goto _iter_begin_1c624715e;
					}
					_iter_end_1c624715e:;
				};
			}
			_iter_next_1c6229619:;
			++it;
			goto _iter_begin_1c6229619;
		}
		_iter_end_1c6229619:;
	};
}



inline void _1c1342b99_collectLivePackage(jule::Ptr<_1c13417e1_ObjectDeadCode> _self_, jule::Ptr<_1c0d0c6a8_Package>* _16843_pkg) {
	_1c13428e1_inits(_self_, _16843_pkg);
	if (_2336c486a_Test) {
		{
			auto expr = &((*((*(_16843_pkg))))._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c6265dd6:;
			if (it != expr_end) {
				jule::Ptr<_1c0da1681_SymbolTable> _17425_file = *it;
				{
					{
						auto expr = &((*(_17425_file))._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c6266821:;
						if (it != expr_end) {
							jule::Ptr<_1c0c95795_Fn> _17529_f = *it;
							{
								if (_1c1344e43_hasDirective(&((*(_17529_f))._field_Directives), jule::Str::lit("test", 4))) {
									jule::Ptr<_1c0c98699_FnIns> _17729_ins = (*_17529_f.alloc)._field_Instances[0LL];;
									(*_self_.alloc)._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,jule::Slice<jule::Ptr<_1c0c98699_FnIns>>::make({_17729_ins}));
									_1c1342638_setReferencesAsLive(_self_, &((*(_17729_ins))._field_Refers));
								};
							}
							_iter_next_1c6266821:;
							++it;
							goto _iter_begin_1c6266821;
						}
						_iter_end_1c6266821:;
					};
				}
				_iter_next_1c6265dd6:;
				++it;
				goto _iter_begin_1c6265dd6;
			}
			_iter_end_1c6265dd6:;
		};
	};
}



inline void _1c1342d97_collectLive(jule::Ptr<_1c13417e1_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6266546:;
		if (it != expr_end) {
			jule::Ptr<_1c0d09782_ImportInfo> _18721_used = *it;
			{
				if ((!((*(_18721_used))._field_Binded))) {
					_1c1342b99_collectLivePackage(_self_, &((*_18721_used.alloc)._field_Package));
				};
			}
			_iter_next_1c6266546:;
			++it;
			goto _iter_begin_1c6266546;
		}
		_iter_end_1c6266546:;
	};
	_1c1342b99_collectLivePackage(_self_, &((*(*_self_.alloc)._field_ir.alloc)._field_Main));
	jule::Ptr<_1c0c95795_Fn> _19513_main = _1c0d0dc3c_FindFn((*(*_self_.alloc)._field_ir.alloc)._field_Main.ptr(), jule::Str::lit("main", 4), false);;
	jule::Ptr<_1c0c98699_FnIns> _19613_ins = (*(_19513_main))._field_Instances[0LL];;
	(*_self_.alloc)._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,jule::Slice<jule::Ptr<_1c0c98699_FnIns>>::make({_19613_ins}));
	_1c1342638_setReferencesAsLive(_self_, &((*(_19613_ins))._field_Refers));
}



inline void _1c1343150_removeDeadGlobals(jule::Ptr<_1c13417e1_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1c0d4dde2_Var>>* _20142_vars) {
	jule::I64 _20213_i = 0LL;;
	while ((_20213_i < (*(_20142_vars)).len())) {
		{
			jule::Ptr<_1c0d4dde2_Var> _20413_v = (*(_20142_vars))[_20213_i];;
			if (_1c62401ac_isLive(_self_, &(_20413_v))) {
				(_20213_i)++;
				goto _iter_next_1c626c8e3;
			};
			(*(_20142_vars))=jule::append((*(_20142_vars)).slice(0LL, _20213_i),(*(_20142_vars)).slice((_20213_i + 1LL)));
		}
	_iter_next_1c626c8e3:;
	}
	_iter_end_1c626c8e3:;;
}



inline void _1c1343408_removeDeadFns(jule::Ptr<_1c13417e1_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1c0c95795_Fn>>* _21338_funcs) {
	jule::I64 _21413_i = 0LL;;
	while ((_21413_i < (*(_21338_funcs)).len())) {
		{
			jule::Ptr<_1c0c95795_Fn> _21617_f = (*(_21338_funcs))[_21413_i];;
			jule::I64 _21717_j = 0LL;;
			while ((_21717_j < (*(_21617_f))._field_Instances.len())) {
				{
					jule::Ptr<_1c0c98699_FnIns> _21917_ins = (*_21617_f.alloc)._field_Instances[_21717_j];;
					if (_1c6232116_isLive(_self_, &(_21917_ins))) {
						(_21717_j)++;
						goto _iter_next_1c6270297;
					};
					(*_21617_f.alloc)._field_Instances=jule::append((*_21617_f.alloc)._field_Instances.slice(0LL, _21717_j),(*_21617_f.alloc)._field_Instances.slice((_21717_j + 1LL)));
				}
			_iter_next_1c6270297:;
			}
			_iter_end_1c6270297:;;
			if (((*_21617_f.alloc)._field_Instances.len() == 0LL)) {
				(*(_21338_funcs))=jule::append((*(_21338_funcs)).slice(0LL, _21413_i),(*(_21338_funcs)).slice((_21413_i + 1LL)));
				goto _iter_next_1c626e681;
			};
			(_21413_i)++;
		}
	_iter_next_1c626e681:;
	}
	_iter_end_1c626e681:;;
}



inline void _1c13436b1_removeDeadStructs(jule::Ptr<_1c13417e1_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1c0c807c4_Struct>>* _23442_structs) {
	jule::I64 _23513_i = 0LL;;
	while ((_23513_i < (*(_23442_structs)).len())) {
		{
			jule::Ptr<_1c0c807c4_Struct> _23717_s = (*(_23442_structs))[_23513_i];;
			jule::I64 _23817_j = 0LL;;
			while ((_23817_j < (*(_23717_s))._field_Instances.len())) {
				{
					jule::Ptr<_1c0c83552_StructIns> _24021_ins = (*_23717_s.alloc)._field_Instances[_23817_j];;
					_1c1343408_removeDeadFns(_self_, &((*(_24021_ins))._field_Methods));
					if ((((*_24021_ins.alloc)._field_Methods.len() != 0LL) || _1c6237e74_isLive(_self_, &(_24021_ins)))) {
						(_23817_j)++;
						goto _iter_next_1c6273ed2;
					};
					(*_23717_s.alloc)._field_Instances=jule::append((*_23717_s.alloc)._field_Instances.slice(0LL, _23817_j),(*_23717_s.alloc)._field_Instances.slice((_23817_j + 1LL)));
				}
			_iter_next_1c6273ed2:;
			}
			_iter_end_1c6273ed2:;;
			if (((*_23717_s.alloc)._field_Instances.len() == 0LL)) {
				(*(_23442_structs))=jule::append((*(_23442_structs)).slice(0LL, _23513_i),(*(_23442_structs)).slice((_23513_i + 1LL)));
				goto _iter_next_1c62731ce;
			};
			(_23513_i)++;
		}
	_iter_next_1c62731ce:;
	}
	_iter_end_1c62731ce:;;
}



inline void _1c1343969_removeDeadTraits(jule::Ptr<_1c13417e1_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1c0ca8a72_Trait>>* _25641_traits) {
	jule::I64 _25713_i = 0LL;;
	while ((_25713_i < (*(_25641_traits)).len())) {
		{
			jule::Ptr<_1c0ca8a72_Trait> _25917_t = (*(_25641_traits))[_25713_i];;
			if ((!(_1c622b6b5_isLive(_self_, &(_25917_t))))) {
				(*(_25641_traits))=jule::append((*(_25641_traits)).slice(0LL, _25713_i),(*(_25641_traits)).slice((_25713_i + 1LL)));
				goto _iter_next_1c6277975;
			};
			jule::I64 _26417_j = 0LL;;
			while ((_26417_j < (*(_25917_t))._field_Implemented.len())) {
				{
					jule::Ptr<_1c0c807c4_Struct> _26617_s = (*_25917_t.alloc)._field_Implemented[_26417_j];;
					if (((*(_26617_s))._field_Instances.len() > 0LL)) {
						(_26417_j)++;
						goto _iter_next_1c62784c0;
					};
					(*_25917_t.alloc)._field_Implemented=jule::append((*_25917_t.alloc)._field_Implemented.slice(0LL, _26417_j),(*_25917_t.alloc)._field_Implemented.slice((_26417_j + 1LL)));
				}
			_iter_next_1c62784c0:;
			}
			_iter_end_1c62784c0:;;
			(_25713_i)++;
		}
	_iter_next_1c6277975:;
	}
	_iter_end_1c6277975:;;
}



inline void _1c1343c22_removeDeadsFile(jule::Ptr<_1c13417e1_ObjectDeadCode> _self_, jule::Ptr<_1c0da1681_SymbolTable>* _27740_file) {
	_1c1343408_removeDeadFns(_self_, &((*((*(_27740_file))))._field_Funcs));
	_1c13436b1_removeDeadStructs(_self_, &((*((*(_27740_file))))._field_Structs));
	_1c1343969_removeDeadTraits(_self_, &((*((*(_27740_file))))._field_Traits));
	_1c1343150_removeDeadGlobals(_self_, &((*((*(_27740_file))))._field_Vars));
}



inline void _1c1343eca_removeDeadsPackage(jule::Ptr<_1c13417e1_ObjectDeadCode> _self_, jule::Ptr<_1c0d0c6a8_Package>* _28443_pkg) {
	{
		auto expr = &((*((*(_28443_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c627d184:;
		if (it != expr_end) {
			jule::Ptr<_1c0da1681_SymbolTable> _28521_file = *it;
			{
				_1c1343c22_removeDeadsFile(_self_, &(_28521_file));
			}
			_iter_next_1c627d184:;
			++it;
			goto _iter_begin_1c627d184;
		}
		_iter_end_1c627d184:;
	};
}



inline void _1c13441c8_removeDeads(jule::Ptr<_1c13417e1_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c627d8e3:;
		if (it != expr_end) {
			jule::Ptr<_1c0d09782_ImportInfo> _29121_used = *it;
			{
				if ((!((*(_29121_used))._field_Binded))) {
					_1c1343eca_removeDeadsPackage(_self_, &((*_29121_used.alloc)._field_Package));
				};
			}
			_iter_next_1c627d8e3:;
			++it;
			goto _iter_begin_1c627d8e3;
		}
		_iter_end_1c627d8e3:;
	};
	_1c1343eca_removeDeadsPackage(_self_, &((*(*_self_.alloc)._field_ir.alloc)._field_Main));
}



inline void _1c13443c6_elimanate(jule::Ptr<_1c13417e1_ObjectDeadCode> _self_) {
	_1c1342d97_collectLive(_self_);
	_1c13441c8_removeDeads(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1c13417e1_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_x_1c1989301_IR__jule_tuple_s_21b8c54de_Log static__1c1989796_Build(jule::Str _2721_path, jule::I64 _2732_flags) {
	__jule_tuple_x_1c1989301_IR__jule_tuple_s_21b8c54de_Log __jule_func_result;
	jule::Ptr<_1c198694c_JuleImporter> _2813_importer = static__1c1986d48_New(_1c198b27b_buildCompileInfo());;
	jule::Slice<jule::Ptr<_1c0c5ca26_Ast>> _2913_files;
	jule::Slice<_21b8c54de_Log> _2924_logs;
	({
		__jule_tuple_sx_1c0c5ca26_Ast__jule_tuple_s_21b8c54de_Log __jule_assign_result = _1c1988333_ImportPackage(_2813_importer.ptr(), _2721_path, true);
		_2913_files = __jule_assign_result.__jule_result_arg0;
		_2924_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2924_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2924_logs;
		return __jule_func_result;;
	};
	jule::Str _339_root = _2721_path;;
	if ((_2913_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1c0d0c6a8_Package> _3913_pkg;
	({
		__jule_tuple_x_1c0d0c6a8_Package__jule_tuple_s_21b8c54de_Log __jule_assign_result = _1c0e09178_AnalyzePackage(_2913_files, jule::Trait<_1c0d0686c_Importer>(_2813_importer, 0), _2732_flags);
		_3913_pkg = __jule_assign_result.__jule_result_arg0;
		_2924_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2924_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2924_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1c1989301_IR> _4413_ir = jule::new_ptr<_1c1989301_IR>(_1c1989301_IR{._field_Root=_339_root, ._field_Main=_3913_pkg, ._field_Used=_1c19870ce_AllPackages(_2813_importer), });;
	(*(_4413_ir))._field_Passes=_1c198b06c_getAllUniquePasses(&((*_4413_ir.alloc)._field_Main), (*_4413_ir.alloc)._field_Used);
	__jule_func_result.__jule_result_arg0 = _4413_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1c1989c80_appendStructs(_1c1989301_IR* _self_, jule::Ptr<_1c0d0c6a8_Package>* _5633_p, jule::Slice<jule::Ptr<_1c0c807c4_Struct>>* _5657_buffer) {
	{
		auto expr = &((*((*(_5633_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c61e058b:;
		if (it != expr_end) {
			jule::Ptr<_1c0da1681_SymbolTable> _5721_f = *it;
			{
				{
					auto expr = &((*(_5721_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c61e0ed7:;
					if (it != expr_end) {
						jule::Ptr<_1c0c807c4_Struct> _5825_s = *it;
						{
							if ((!((*(_5825_s))._field_Binded))) {
								{ jule::Slice<jule::Ptr<_1c0c807c4_Struct>> &__jule_push_dest = (*(_5657_buffer)); __jule_push_dest.push(_5825_s); };
							};
						}
						_iter_next_1c61e0ed7:;
						++it;
						goto _iter_begin_1c61e0ed7;
					}
					_iter_end_1c61e0ed7:;
				};
			}
			_iter_next_1c61e058b:;
			++it;
			goto _iter_begin_1c61e058b;
		}
		_iter_end_1c61e058b:;
	};
}



inline jule::Slice<jule::Ptr<_1c0c807c4_Struct>> _1c198a016_GetAllStructures(_1c1989301_IR* _self_) {
	jule::Slice<jule::Ptr<_1c0c807c4_Struct>> _6917_buffer = nullptr;;
	_1c1989c80_appendStructs(_self_, &((*(_self_))._field_Main), &(_6917_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c61e2181:;
		if (it != expr_end) {
			jule::Ptr<_1c0d09782_ImportInfo> _7121_u = *it;
			{
				if ((!((*(_7121_u))._field_Binded))) {
					_1c1989c80_appendStructs(_self_, &((*_7121_u.alloc)._field_Package), &(_6917_buffer));
				};
			}
			_iter_next_1c61e2181:;
			++it;
			goto _iter_begin_1c61e2181;
		}
		_iter_end_1c61e2181:;
	};
	return _6917_buffer;;
}



inline void _1c198a379_appendGlobals(_1c1989301_IR* _self_, jule::Ptr<_1c0d0c6a8_Package>* _7933_p, jule::Slice<jule::Ptr<_1c0d4dde2_Var>>* _7957_buffer) {
	{
		auto expr = &((*((*(_7933_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c61e37d1:;
		if (it != expr_end) {
			jule::Ptr<_1c0da1681_SymbolTable> _8021_f = *it;
			{
				{
					auto expr = &((*(_8021_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c61e422c:;
					if (it != expr_end) {
						jule::Ptr<_1c0d4dde2_Var> _8125_v = *it;
						{
							if (((((*(_8125_v))._field_Token != nullptr) && (!((*_8125_v.alloc)._field_Binded))) && (!((*_8125_v.alloc)._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_1c0d4dde2_Var>> &__jule_push_dest = (*(_7957_buffer)); __jule_push_dest.push(_8125_v); };
							};
						}
						_iter_next_1c61e422c:;
						++it;
						goto _iter_begin_1c61e422c;
					}
					_iter_end_1c61e422c:;
				};
			}
			_iter_next_1c61e37d1:;
			++it;
			goto _iter_begin_1c61e37d1;
		}
		_iter_end_1c61e37d1:;
	};
}



inline jule::Slice<jule::Ptr<_1c0d4dde2_Var>> _1c198a610_GetAllGlobals(_1c1989301_IR* _self_) {
	jule::Slice<jule::Ptr<_1c0d4dde2_Var>> _9217_buffer = nullptr;;
	_1c198a379_appendGlobals(_self_, &((*(_self_))._field_Main), &(_9217_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c61e5b35:;
		if (it != expr_end) {
			jule::Ptr<_1c0d09782_ImportInfo> _9421_u = *it;
			{
				if ((!((*(_9421_u))._field_Binded))) {
					_1c198a379_appendGlobals(_self_, &((*_9421_u.alloc)._field_Package), &(_9217_buffer));
				};
			}
			_iter_next_1c61e5b35:;
			++it;
			goto _iter_begin_1c61e5b35;
		}
		_iter_end_1c61e5b35:;
	};
	return _9217_buffer;;
}



inline void _1c198a80d_Order(_1c1989301_IR* _self_) {
	(*(_self_))._field_Ordered._field_Structs=_1c198a016_GetAllStructures(_self_);
	(*(_self_))._field_Ordered._field_Globals=_1c198a610_GetAllGlobals(_self_);
	static__1c198c645_orderStructures(&((*(_self_))._field_Ordered._field_Structs));
	static__1c198c876_orderVars(&((*(_self_))._field_Ordered._field_Globals));
}





std::ostream &operator<<(std::ostream &_Stream, _1c1989301_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c0c838c6_Str(_1c0c83552_StructIns* _self_) {
	_234c76a64_StrBuilder _23913_kind = static__234c76ec6_New(32LL);;
	_234c77537_WriteStr(&_23913_kind, (*((*(_self_))._field_Decl))._field_Ident);
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		_234c777e0_WriteByte(&_23913_kind, '[');
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c41956ca:;
			if (it != expr_end) {
				jule::I64 _24317_i = it - expr->begin();
				jule::Ptr<_1c0dd650c_InsGeneric> *_24320_g = it;
				{
					_234c77537_WriteStr(&_23913_kind, _1c0dd82ab_Str((*((*(_24320_g))))._field_Kind.ptr()));
					if ((_24317_i < ((*(_self_))._field_Generics.len() - 1LL))) {
						_234c777e0_WriteByte(&_23913_kind, ',');
					};
				}
				_iter_next_1c41956ca:;
				++it;
				_24317_i++;
				goto _iter_begin_1c41956ca;
			}
			_iter_end_1c41956ca:;
		};
		_234c777e0_WriteByte(&_23913_kind, ']');
	};
	return _234c77d2e_Str(&_23913_kind);;
}



inline jule::Bool _1c0c83c17_Equal(jule::Ptr<_1c0c83552_StructIns> _self_, jule::Ptr<_1c0dd7de3_TypeKind> _25521_other) {
	jule::Ptr<_1c0c83552_StructIns> _2569_s = _1c0ddbab7_Struct(_25521_other.ptr());;
	if ((_2569_s == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Decl != (*(_2569_s))._field_Decl)) {
		return false;;
	};
	if (((*_self_.alloc)._field_Generics.len() != (*(_2569_s))._field_Generics.len())) {
		return false;;
	};
	jule::I64 _26913_i = 0LL;;
	for (; (_26913_i < (*_self_.alloc)._field_Generics.len()); (_26913_i)++) {
		{
			if ((!(_1c0dd85ec_Equal((*((*_self_.alloc)._field_Generics[_26913_i]))._field_Kind, (*((*(_2569_s))._field_Generics[_26913_i]))._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1c41996ce:;
	}
	_iter_end_1c41996ce:;;
	return true;;
}



inline jule::Bool _1c0c841bd_Same(_1c0c83552_StructIns* _self_, jule::Ptr<_1c0c83552_StructIns> _28319_s) {
	if ((((*(_self_))._field_Decl != (*(_28319_s))._field_Decl) || ((*_28319_s.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c419c2d6:;
		if (it != expr_end) {
			jule::I64 _28713_i = it - expr->begin();
			jule::Ptr<_1c0dd650c_InsGeneric> *_28716_g = it;
			{
				jule::Ptr<_1c0dd650c_InsGeneric> _28813_g2 = (*_28319_s.alloc)._field_Generics[_28713_i];;
				if ((((*((*((*(_28716_g))))._field_Kind))._field_BindIdent != (*(*(_28813_g2))._field_Kind.alloc)._field_BindIdent) || (!(_1c0dd85ec_Equal((*(*(_28716_g)).alloc)._field_Kind, (*_28813_g2.alloc)._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1c419c2d6:;
			++it;
			_28713_i++;
			goto _iter_begin_1c419c2d6;
		}
		_iter_end_1c419c2d6:;
	};
	return true;;
}



inline jule::Ptr<_1c0c95795_Fn> _1c0c845b9_FindMethod(_1c0c83552_StructIns* _self_, jule::Str _29829_ident, jule::Bool _29841_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c419ed11:;
		if (it != expr_end) {
			jule::Ptr<_1c0c95795_Fn> _29921_f = *it;
			{
				if ((((*(_29921_f))._field_Statically == _29841_statically) && ((*_29921_f.alloc)._field_Ident == _29829_ident))) {
					return _29921_f;;
				};
			}
			_iter_next_1c419ed11:;
			++it;
			goto _iter_begin_1c419ed11;
		}
		_iter_end_1c419ed11:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0c829a2_FieldIns> _1c0c8490a_FindField(_1c0c83552_StructIns* _self_, jule::Str _30928_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c41a0372:;
		if (it != expr_end) {
			jule::Ptr<_1c0c829a2_FieldIns> _31021_f = *it;
			{
				if (((*((*(_31021_f))._field_Decl))._field_Ident == _30928_ident)) {
					return _31021_f;;
				};
			}
			_iter_next_1c41a0372:;
			++it;
			goto _iter_begin_1c41a0372;
		}
		_iter_end_1c41a0372:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0d4dde2_Var> _1c0c84c4b_FindStatic(_1c0c83552_StructIns* _self_, jule::Str _32029_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c41a22db:;
		if (it != expr_end) {
			jule::Ptr<_1c0d4dde2_Var> _32121_v = *it;
			{
				if (((*(_32121_v))._field_Ident == _32029_ident)) {
					return _32121_v;;
				};
			}
			_iter_next_1c41a22db:;
			++it;
			goto _iter_begin_1c41a22db;
		}
		_iter_end_1c41a22db:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c83552_StructIns _Src) {
	_Stream << _1c0c838c6_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_21b9826bc_Cmd> static__21b982ab8_New(jule::Str _2619_path) {
	return jule::new_ptr<_21b9826bc_Cmd>(_21b9826bc_Cmd{._field_path=_2619_path, });;
}



inline jule::VoidExceptional _21b982cb6_Spawn(_21b9826bc_Cmd* _self_) {
	return _21b986c87_spawn(_self_);
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _21b98324a_Wait(_21b9826bc_Cmd* _self_) {
	return _21b98721b_wait(_self_);
}



inline jule::VoidExceptional _21b986c87_spawn(_21b9826bc_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess != nullptr)) {
		jule::panic(jule::Str::lit("command is already spawned", 26) + jule::Str("\nlocation: std/process/cmd_windows.jule:43:13"));;
	};
	STARTUPINFOW _4513_startupInfo = (STARTUPINFOW){};;
	PROCESS_INFORMATION _4613_processInfo = (PROCESS_INFORMATION){};;
	{
		ZeroMemory((&(_4513_startupInfo)), sizeof(_4513_startupInfo));
		ZeroMemory((&(_4613_processInfo)), sizeof(_4613_processInfo));
	};
	_4513_startupInfo.cb=sizeof(_4513_startupInfo);
	jule::Slice<jule::Str> _5213_args = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len()));;
	_5213_args[0LL]=(*(_self_))._field_path;
	(_5213_args).append((*(_self_))._field_Args);;
	jule::Slice<jule::U16> _559_argv = _234ab8059_UTF16FromStr(_21b98788c_makeCmdLine(_5213_args));;
	jule::Slice<jule::U16> _569_env = ({
		auto except = _21b987c66_createEnvBlock((*(_self_))._field_Env);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional{.error=std::move(except.error)};
		} jule::Slice<jule::U16>(nullptr);});
	});;
	jule::U16* _5713_envp = (&(_569_env[0LL]));;
	if (((*(_self_))._field_Env.len() == 0LL)) {
		_5713_envp=nullptr;
	};
	;
	{
		if ((CreateProcessW(nullptr, ((wchar_t*)((&(_559_argv[0LL])))), nullptr, nullptr, 0LL, 1024LLU, _5713_envp, nullptr, (&(_4513_startupInfo)), (&(_4613_processInfo))) == 0LL)) {
			return jule::VoidExceptional{.error=jule::Any(_21b988e87_getLastProcessError(), &__jule_any_type0)};
		};
	};
	(*(_self_))._field_attrs._field_hProcess=_4613_processInfo.hProcess;
	(*(_self_))._field_attrs._field_hThread=_4613_processInfo.hThread;
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _21b98721b_wait(_21b9826bc_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess == nullptr)) {
		jule::panic(jule::Str::lit("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_windows.jule:86:13"));;
	};
	{
		WaitForSingleObject((*(_self_))._field_attrs._field_hProcess, INFINITE);
	};
	__jule_unsigned_long _8913_exitCode = static_cast<__jule_unsigned_long>(4294967295LLU);;
	{
		GetExitCodeProcess((*(_self_))._field_attrs._field_hProcess, (&(_8913_exitCode)));
		_234ae20d8_CloseHandle(((jule::Uintptr)((*(_self_))._field_attrs._field_hProcess)));
		_234ae20d8_CloseHandle(((jule::Uintptr)((*(_self_))._field_attrs._field_hThread)));
	};
	(*(_self_))._field_attrs._field_hProcess=nullptr;
	(*(_self_))._field_attrs._field_hThread=nullptr;
	return jule::Exceptional<jule::I64>{.result=static_cast<jule::I64>(_8913_exitCode)};;
}





std::ostream &operator<<(std::ostream &_Stream, _21b9826bc_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "attrs:" << _Src._field_attrs << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}



inline jule::I32 _234ab70e1_DecodeRune(jule::I32 _6815_r1, jule::I32 _6825_r2) {
	if (((((55296LL <= _6815_r1) && (_6815_r1 < 56320LL)) && (56320LL <= _6825_r2)) && (_6825_r2 < 57344LL))) {
		return ((((_6815_r1 - 55296LL) << 10LL) | (_6825_r2 - 56320LL)) + 65536LL);;
	};
	return 65533LL;;
}



inline __jule_tuple_i32__jule_tuple_i32 _234ab73aa_EncodeRune(jule::I32 _7819_r) {
	__jule_tuple_i32__jule_tuple_i32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((_7819_r < 65536LL) || (_7819_r > 1114111LL))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 65533LL;
		return __jule_func_result;;
	};
	_7819_r-=65536LL;
	__jule_func_result.__jule_result_arg0 = (55296LL + ((_7819_r >> 10LL) & 1023LL));
	__jule_func_result.__jule_result_arg1 = (56320LL + (_7819_r & 1023LL));
	return __jule_func_result;;
}



inline jule::Slice<jule::U16> _234ab76eb_Encode(jule::Slice<jule::I32> _8711_s) {
	jule::I64 _889_n = _8711_s.len();;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1ce566d:;
		if (it != expr_end) {
			jule::I32 *_8912_v = it;
			{
				if (((*(_8912_v)) >= 65536LL)) {
					(_889_n)++;
				};
			}
			_iter_next_1c1ce566d:;
			++it;
			goto _iter_begin_1c1ce566d;
		}
		_iter_end_1c1ce566d:;
	};
	jule::Slice<jule::U16> _959_a = jule::Slice<jule::U16>::alloc(_889_n, _889_n, 0);;
	_889_n=0LL;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1ce43b4:;
		if (it != expr_end) {
			jule::I32 *_9712_v = it;
			{
				{
					
					if (((0LL <= (*(_9712_v))) && ((*(_9712_v)) < 55296LL)) || ((57344LL <= (*(_9712_v))) && ((*(_9712_v)) < 65536LL))) {
						_case_begin_1c1ce8110:;
						{
							_959_a[_889_n]=static_cast<jule::U16>((*(_9712_v)));
							(_889_n)++;
						}
					}
					else if (((65536LL <= (*(_9712_v))) && ((*(_9712_v)) <= 1114111LL))) {
						_case_begin_1c1ce7ce1:;
						{
							jule::I32 _10513_r1;
							jule::I32 _10517_r2;
							({
								__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _234ab73aa_EncodeRune((*(_9712_v)));
								_10513_r1 = __jule_assign_result.__jule_result_arg0;
								_10517_r2 = __jule_assign_result.__jule_result_arg1;
							});
							_959_a[_889_n]=static_cast<jule::U16>(_10513_r1);
							_959_a[(_889_n + 1LL)]=static_cast<jule::U16>(_10517_r2);
							_889_n+=2LL;
						}
					}
					else {
						_case_begin_1c1ce7c7a:;
						{
							_959_a[_889_n]=static_cast<jule::U16>(65533LLU);
							(_889_n)++;
						}
					}
					_match_end_1c1ce7b7b:;
				};
			}
			_iter_next_1c1ce43b4:;
			++it;
			goto _iter_begin_1c1ce43b4;
		}
		_iter_end_1c1ce43b4:;
	};
	return _959_a.slice(0LL, _889_n);;
}



inline jule::Slice<jule::I32> _234ab7982_Decode(jule::Slice<jule::U16> _11911_s) {
	jule::Slice<jule::I32> _1209_a = jule::Slice<jule::I32>::alloc(_11911_s.len(), _11911_s.len(), 0);;
	jule::I64 _1219_n = 0LL;;
	jule::I64 _1229_i = 0LL;;
	for (; (_1229_i < _11911_s.len()); (_1229_i)++) {
		{
			jule::U16 _1249_r = _11911_s[_1229_i];;
			{
				
				if ((_1249_r < 55296LLU) || (57344LL <= _1249_r)) {
					_case_begin_1c1cec91c:;
					{
						_1209_a[_1219_n]=static_cast<jule::I32>(_1249_r);
					}
				}
				else if (((((_1249_r < 56320LLU) && ((_1229_i + 1LL) < _11911_s.len())) && (56320LL <= _11911_s[(_1229_i + 1LL)])) && (_11911_s[(_1229_i + 1LL)] < 57344LLU))) {
					_case_begin_1c1cec6ca:;
					{
						_1209_a[_1219_n]=_234ab70e1_DecodeRune(static_cast<jule::I32>(_1249_r), static_cast<jule::I32>(_11911_s[(_1229_i + 1LL)]));
						(_1229_i)++;
					}
				}
				else {
					_case_begin_1c1cec323:;
					{
						_1209_a[_1219_n]=65533LL;
					}
				}
				_match_end_1c1cec2ac:;
			};
			(_1219_n)++;
		}
	_iter_next_1c1ce97c6:;
	}
	_iter_end_1c1ce97c6:;;
	return _1209_a.slice(0LL, _1219_n);;
}



inline jule::Slice<jule::U16> _234ab7d06_AppendRune(jule::Slice<jule::U16> _14919_a, jule::I32 _14929_r) {
	{
		
		if (((0LL <= _14929_r) && (_14929_r < 55296LL)) || ((57344LL <= _14929_r) && (_14929_r < 65536LL))) {
			_case_begin_1c1d003c0:;
			{
				return jule::append(_14919_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(_14929_r)}));;
			}
		}
		else if (((65536LL <= _14929_r) && (_14929_r <= 1114111LL))) {
			_case_begin_1c1d00469:;
			{
				jule::I32 _1569_r1;
				jule::I32 _15613_r2;
				({
					__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _234ab73aa_EncodeRune(_14929_r);
					_1569_r1 = __jule_assign_result.__jule_result_arg0;
					_15613_r2 = __jule_assign_result.__jule_result_arg1;
				});
				return jule::append(_14919_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(_1569_r1),static_cast<jule::U16>(_15613_r2)}));;
			}
		}
		_match_end_1c1d00304:;
	};
	return jule::append(_14919_a,jule::Slice<jule::U16>::make({65533LLU}));;
}



inline jule::Slice<jule::U16> _234ab8059_UTF16FromStr(jule::Str _1417_s) {
	;
	jule::Slice<jule::I32> _205_runes = static_cast<jule::Slice<jule::I32>>(_1417_s);;
	jule::Slice<jule::U16> _219_buff = jule::Slice<jule::U16>::alloc(0LL, _205_runes.len(), 0);;
	{
		auto expr = &(_205_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1d0ace3:;
		if (it != expr_end) {
			jule::I32 *_2212_r = it;
			{
				if (((*(_2212_r)) == 0LL)) {
					goto _iter_end_1c1d0ace3;
				};
				_219_buff=_234ab7d06_AppendRune(_219_buff, (*(_2212_r)));
			}
			_iter_next_1c1d0ace3:;
			++it;
			goto _iter_begin_1c1d0ace3;
		}
		_iter_end_1c1d0ace3:;
	};
	return _234ab7d06_AppendRune(_219_buff, 0LL);;
}



inline jule::Str _234ab8367_UTF16ToStr(jule::Slice<jule::U16> _3415_s) {
	if ((_3415_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _389_codePage = _3415_s;;
	{
		auto expr = &(_3415_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1d0d5ba:;
		if (it != expr_end) {
			jule::I64 _399_i = it - expr->begin();
			jule::U16 *_3912_v = it;
			{
				if (((*(_3912_v)) == 0LLU)) {
					(_389_codePage).mut_slice(0LL, _399_i);;
					goto _iter_end_1c1d0d5ba;
				};
			}
			_iter_next_1c1d0d5ba:;
			++it;
			_399_i++;
			goto _iter_begin_1c1d0d5ba;
		}
		_iter_end_1c1d0d5ba:;
	};
	return static_cast<jule::Str>(_234ab7982_Decode(_389_codePage));;
}



inline jule::Str _234ab8631_U16PtrToStr(jule::U16* _5023_s) {
	if ((_5023_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _5513_codePage;;
	jule::I64 _569_i = 0LL;;
	for (; ; (_569_i)++) {
		{
			jule::U16 _589_r = _5023_s[_569_i];;
			if ((_589_r == 0LLU)) {
				return static_cast<jule::Str>(_234ab7982_Decode(_5513_codePage));;
			};
			{ jule::Slice<jule::U16> &__jule_push_dest = _5513_codePage; __jule_push_dest.push(_589_r); };
		}
	_iter_next_1c1d0e5aa:;
	}
	_iter_end_1c1d0e5aa:;;
	return jule::Str();;
}



inline jule::I64 _234a16183_GetLastErrno(void) {
	return errno;;
}



inline jule::Uintptr _234ae1d1e_GetStdHandle(jule::Uintptr _6417_stdh) {
	return ((jule::Uintptr)(GetStdHandle(_6417_stdh)));;
}



inline jule::Bool _234ae20d8_CloseHandle(jule::Uintptr _6523_stdh) {
	return CloseHandle(((void*)(_6523_stdh)));;
}



inline jule::I64 _234ae245c_Wstat(jule::U16* _6817_path, struct _stat* _6833_stat) {
	return _wstat(((wchar_t*)(_6817_path)), _6833_stat);;
}



inline jule::I64 _234ae288b_Wopen(jule::U16* _7317_path, jule::I64 _7329_flag, jule::I64 _7340_mode) {
	return _wopen(((wchar_t*)((&(_7317_path[0LL])))), _7329_flag, _7340_mode);;
}



inline jule::U32 _234ae2a9a_GetLastError(void) {
	return GetLastError();;
}



inline jule::U32 _234ae2e1e_GetCurrentDirectory(jule::U32 _8231_bufflen, jule::U16* _8249_buff) {
	return GetCurrentDirectoryW(_8231_bufflen, ((wchar_t*)(_8249_buff)));;
}



inline jule::Bool _234ae34a2_DeleteFile(jule::U16* _9322_path) {
	return DeleteFileW(((wchar_t*)(_9322_path)));;
}



inline jule::Bool _234ae376b_CreateDirectory(jule::U16* _9827_path) {
	return CreateDirectoryW(((wchar_t*)(_9827_path)), nullptr);;
}



inline jule::Bool _234ae3a35_RemoveDirectory(jule::U16* _10327_path) {
	return RemoveDirectoryW(((wchar_t*)(_10327_path)));;
}



inline jule::U32 _234ae401e_GetFullPathName(jule::U16* _10827_path, jule::U32 _10839_bufflen, jule::U16* _1095_buff, jule::U16** _10917_fname) {
	return GetFullPathNameW(((wchar_t*)(_10827_path)), _10839_bufflen, ((wchar_t*)(_1095_buff)), ((wchar_t**)(_10917_fname)));;
}



inline jule::Bool _234ae4393_GetConsoleMode(jule::Uintptr _11419_handle, jule::I64* _11440_mode) {
	return GetConsoleMode(((HANDLE)(_11419_handle)), ((DWORD*)(_11440_mode)));;
}



inline jule::Bool _234ae499d_SetConsoleMode(jule::Uintptr _11919_handle, jule::I64 _11935_mode) {
	return SetConsoleMode(((HANDLE)(_11919_handle)), static_cast<DWORD>(_11935_mode));;
}



inline jule::Bool _234ae4eed_WriteConsole(jule::Uintptr _12424_handle, jule::U16* _12440_buffer, jule::I64 _12454_toWrite, jule::I64* _12510_written, void* _12524_reserved) {
	return WriteConsoleW(((HANDLE)(_12424_handle)), ((void*)(_12440_buffer)), static_cast<DWORD>(_12454_toWrite), ((DWORD*)((*(_12510_written)))), _12524_reserved);;
}



inline jule::Bool _234ae54d7_ReadConsole(jule::Uintptr _13223_handle, jule::U16* _13243_buffer, jule::I64 _13257_toRead, jule::I64* _13310_readed) {
	return ReadConsoleW(((HANDLE)(_13223_handle)), ((void*)(_13243_buffer)), static_cast<DWORD>(_13257_toRead), ((DWORD*)(_13310_readed)), nullptr);;
}



inline jule::Uintptr _234ae5a6a_FindFirstFile(jule::U16* _14425_path, WIN32_FIND_DATAW* _14441_data) {
	return ((jule::Uintptr)(FindFirstFileW(((wchar_t*)(_14425_path)), _14441_data)));;
}



inline jule::I64 _234ae5dde_FindNextFile(jule::Uintptr _14924_h, WIN32_FIND_DATAW* _14939_data) {
	return FindNextFileW(((HANDLE)(_14924_h)), _14939_data);;
}



inline jule::I64 _234ae61a8_FindClose(jule::Uintptr _15414_h) {
	return FindClose(((HANDLE)(_15414_h)));;
}



inline jule::I64 _234ae8287_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n) {
	return read(_2016_handle, _2033_buff, _2048_n);;
}



inline jule::I64 _234ae8661_Close(jule::I64 _2510_handle) {
	return close(_2510_handle);;
}



inline jule::I64 _234ae8a18_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n) {
	return write(_2817_handle, _2830_buff, _2845_n);;
}



inline void _234ae8c49_Exit(jule::I64 _339_code) {
	exit(_339_code);
}



inline __jule_tuple_i32__jule_tuple_int _234b9cc21_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1865_p0 = _18215_p[0LL];;
	jule::U8 _1875_x = _234b9b989_first[static_cast<jule::I64>(_1865_p0)];;
	if ((_1875_x >= 240LLU)) {
		jule::I32 _1929_mask = static_cast<jule::I32>(((_1875_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_18215_p[0LL]) & (~(_1929_mask))) | (65533LL & _1929_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _1955_sz = static_cast<jule::I64>((_1875_x & 7LLU));;
	_234b9c03e_acceptRange _1965_accept = _234b9c3d5_acceptRanges[static_cast<jule::I64>((_1875_x >> 4LLU))];;
	if ((_18215_p.len() < _1955_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2005_b1 = _18215_p[1LL];;
	if (((_2005_b1 < _1965_accept._field_lo) || (_1965_accept._field_hi < _2005_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1955_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_1865_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2005_b1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2075_b2 = _18215_p[2LL];;
	if (((_2075_b2 < 128LLU) || (191LL < _2075_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1955_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_1865_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2005_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2075_b2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2145_b3 = _18215_p[3LL];;
	if (((_2145_b3 < 128LLU) || (191LL < _2145_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_1865_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2005_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2075_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2145_b3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _234b9d062_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2335_s0 = _22918_s[0LL];;
	jule::U8 _2345_x = _234b9b989_first[static_cast<jule::I64>(_2335_s0)];;
	if ((_2345_x >= 240LLU)) {
		jule::I32 _2399_mask = static_cast<jule::I32>(((_2345_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_22918_s[0LL]) & (~(_2399_mask))) | (65533LL & _2399_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _2425_sz = static_cast<jule::I64>((_2345_x & 7LLU));;
	_234b9c03e_acceptRange _2435_accept = _234b9c3d5_acceptRanges[static_cast<jule::I64>((_2345_x >> 4LLU))];;
	if ((_22918_s.len() < _2425_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2475_s1 = _22918_s[1LL];;
	if (((_2475_s1 < _2435_accept._field_lo) || (_2435_accept._field_hi < _2475_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2425_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_2335_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2475_s1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2545_s2 = _22918_s[2LL];;
	if (((_2545_s2 < 128LLU) || (191LL < _2545_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2425_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_2335_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2475_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2545_s2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2615_s3 = _22918_s[3LL];;
	if (((_2615_s3 < 128LLU) || (191LL < _2615_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_2335_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2475_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2545_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2615_s3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _234b9d5b2_DecodeLastRuneStr(jule::Str _31722_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_31722_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I64 _3215_end = _31722_s.len();;
	jule::I64 _3229_start = (_3215_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(_31722_s[_3229_start]);
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _3309_lim = (_3215_end - 4LL);;
	if ((_3309_lim < 0LL)) {
		_3309_lim=0LL;
	};
	(_3229_start)--;
	for (; (_3229_start >= _3309_lim); (_3229_start)--) {
		{
			if (_234b9eccd_RuneStart(_31722_s[_3229_start])) {
				goto _iter_end_1c270ca46;
			};
		}
	_iter_next_1c270ca46:;
	}
	_iter_end_1c270ca46:;;
	if ((_3229_start < 0LL)) {
		_3229_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _234b9d062_DecodeRuneStr(_31722_s.slice(_3229_start, _3215_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3229_start + __jule_func_result.__jule_result_arg1) != _3215_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::I64 _234b9d87b_RuneLen(jule::I32 _35212_r) {
	{
		
		if ((_35212_r < 0LL)) {
			_case_begin_1c270e916:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 127LL)) {
			_case_begin_1c270ed12:;
			{
				return 1LL;;
			}
		}
		else if ((_35212_r <= 2047LL)) {
			_case_begin_1c270ed89:;
			{
				return 2LL;;
			}
		}
		else if (((55296LL <= _35212_r) && (_35212_r <= 57343LL))) {
			_case_begin_1c270ee11:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 65535LL)) {
			_case_begin_1c270ee88:;
			{
				return 3LL;;
			}
		}
		else if ((_35212_r <= 1114111LL)) {
			_case_begin_1c270e97c:;
			{
				return 4LL;;
			}
		}
		else {
			_case_begin_1c270e8a0:;
			{
				return -1LL;;
			}
		}
		_match_end_1c270e7a1:;
	};
}



inline jule::I64 _234b9dd10_EncodeRune(jule::Slice<jule::U8> _37419_p, jule::I32 _37434_r) {
	jule::U32 _3765_i = static_cast<jule::U32>(_37434_r);;
	{
		
		if ((_3765_i <= 127LLU)) {
			_case_begin_1c2714641:;
			{
				_37419_p[0LL]=static_cast<jule::U8>(_37434_r);
				return 1LL;;
			}
		}
		else if ((_3765_i <= 2047LLU)) {
			_case_begin_1c2714d6c:;
			{
				_37419_p[0LL]=(192LLU | static_cast<jule::U8>((_37434_r >> 6LL)));
				_37419_p[1LL]=(128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU));
				return 2LL;;
			}
		}
		else if ((_3765_i > 1114111LLU) || ((55296LL <= _3765_i) && (_3765_i <= 57343LLU))) {
			_case_begin_1c27128b4:;
			{
				_37434_r=65533LL;
				goto _case_begin_1c2714c29;
			}
		}
		else if ((_3765_i <= 65535LLU)) {
			_case_begin_1c2714c29:;
			{
				_37419_p[0LL]=(224LLU | static_cast<jule::U8>((_37434_r >> 12LL)));
				_37419_p[1LL]=(128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU));
				_37419_p[2LL]=(128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU));
				return 3LL;;
			}
		}
		else {
			_case_begin_1c27124eb:;
			{
				_37419_p[0LL]=(240LLU | static_cast<jule::U8>((_37434_r >> 18LL)));
				_37419_p[1LL]=(128LLU | (static_cast<jule::U8>((_37434_r >> 12LL)) & 63LLU));
				_37419_p[2LL]=(128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU));
				_37419_p[3LL]=(128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU));
				return 4LL;;
			}
		}
		_match_end_1c2712485:;
	};
}



inline jule::Slice<jule::U8> _234b9e10c_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(_40530_r)}));;
	};
	return _234b9e481_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _234b9e481_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4145_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4145_i <= 2047LLU)) {
			_case_begin_1c271c11b:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({(192LL | static_cast<jule::U8>((_41242_r >> 6LL))),(128LL | (static_cast<jule::U8>(_41242_r) & 63LLU))}));;
			}
		}
		else if ((_4145_i > 1114111LLU) || ((55296LL <= _4145_i) && (_4145_i <= 57343LLU))) {
			_case_begin_1c271abec:;
			{
				_41242_r=128LL;
				goto _case_begin_1c271ac63;
			}
		}
		else if ((_4145_i <= 65535LLU)) {
			_case_begin_1c271ac63:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({(224LL | static_cast<jule::U8>((_41242_r >> 12LL))),(128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)),(128LL | (static_cast<jule::U8>(_41242_r) & 63LLU))}));;
			}
		}
		else {
			_case_begin_1c271a48d:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({(240LL | static_cast<jule::U8>((_41242_r >> 18LL))),(128LL | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU)),(128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)),(128LL | (static_cast<jule::U8>(_41242_r) & 63LLU))}));;
			}
		}
		_match_end_1c271a427:;
	};
}



inline jule::I64 _234b9ea14_RuneCountStr(jule::Str _47317_s) {
	jule::I64 __jule_func_result = 0;
	jule::I64 _4749_i = 0LL;;
	for (; (_4749_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _47613_c = _47317_s[_4749_i];;
			if ((_47613_c < 128LLU)) {
				(_4749_i)++;
				goto _iter_next_1c2725531;
			};
			jule::U8 _4829_x = _234b9b989_first[static_cast<jule::I64>(_47613_c)];;
			if ((_4829_x == 241LLU)) {
				(_4749_i)++;
				goto _iter_next_1c2725531;
			};
			jule::I64 _48713_size = static_cast<jule::I64>((_4829_x & 7LLU));;
			if (((_4749_i + _48713_size) > _47317_s.len())) {
				(_4749_i)++;
				goto _iter_next_1c2725531;
			};
			_234b9c03e_acceptRange _4929_accept = _234b9c3d5_acceptRanges[static_cast<jule::I64>((_4829_x >> 4LLU))];;
			_47613_c=_47317_s[(_4749_i + 1LL)];
			if (((_47613_c < _4929_accept._field_lo) || (_4929_accept._field_hi < _47613_c))) {
				_48713_size=1LL;
			} else if ((_48713_size == 2LL)) {
			} else {
				_47613_c=_47317_s[(_4749_i + 2LL)];
				if (((_47613_c < 128LLU) || (191LL < _47613_c))) {
					_48713_size=1LL;
				} else if ((_48713_size == 3LL)) {
				} else {
					_47613_c=_47317_s[(_4749_i + 3LL)];
					if (((_47613_c < 128LLU) || (191LL < _47613_c))) {
						_48713_size=1LL;
					};
				};
			};
			_4749_i+=_48713_size;
		}
	_iter_next_1c2725531:;
	}
	_iter_end_1c2725531:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _234b9eccd_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline void _234ba0e22_handleRW(jule::Slice<jule::U8>* _514_b) {
}



inline void _234ba69a5_HandleRW(jule::Slice<jule::U8>* _814_b) {
	_234ba0e22_handleRW(_814_b);
}



inline jule::Str _234c6a085_Str(jule::U8* _108_b, jule::I64 _1018_n) {
	jule::Str _119_s = jule::Str();;
	{
		_119_s.buffer = jule::Ptr<jule::U8>::make(_108_b, nullptr);
		_119_s._len = _1018_n;
		_119_s._slice = _108_b;
	};
	return _119_s;;
}



inline jule::Slice<jule::U8> _1c27477d9_Slice(jule::U8* _2316_e, jule::I64 _2326_n) {
	jule::Slice<jule::U8> _249_buf = static_cast<jule::Slice<jule::U8>>(nullptr);;
	{
		_249_buf.data = jule::Ptr<jule::U8>::make(_2316_e, nullptr);
		_249_buf._len = _2326_n;
		_249_buf._cap = _2326_n;
		_249_buf._slice = _2316_e;
	};
	return _249_buf;;
}



inline jule::Slice<jule::U8> _234c75d2c_StrBytes(jule::Str _4113_s) {
	if ((_4113_s.len() == 0LL)) {
		return nullptr;;
	};
	return _1c27477d9_Slice((&(_4113_s[0LL])), _4113_s.len());;
}



inline jule::Str _234c760b3_BytesStr(jule::Slice<jule::U8> _5013_b) {
	if ((_5013_b.len() == 0LL)) {
		return jule::Str();;
	};
	return _234c6a085_Str((&(_5013_b[0LL])), _5013_b.len());;
}



inline jule::Str _234c7637c_StrFromBytes(jule::Slice<jule::U8> _5817_b) {
	return (*(((jule::Str*)((&(_5817_b))))));;
}



inline jule::I64 _234ca4b3b_getLastOsErrorWindows(void) {
	jule::U32 _165_err = _234ae2a9a_GetLastError();;
	{
		auto &_match_expr{ _165_err };
		
		if (_match_expr == 5LL) {
			_case_begin_1c275c436:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1c275c49c:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1c275c513:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 123LL) {
			_case_begin_1c275c579:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else {
			_case_begin_1c275a852:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		_match_end_1c275a940:;
	};
}



inline jule::Slice<jule::Str> _234ca5bb4_Args(void) {
	return jule::args();;
}



inline jule::Exceptional<jule::Str> _234ca6126_WorkingDir(void) {
	return _234ca704a_getwd();
}



inline jule::Exceptional<jule::Str> _234ca704a_getwd(void) {
	jule::Array<jule::U16,261> _1513_buf = jule::Array<jule::U16,261>(0);;
	jule::U32 _165_n = _234ae2e1e_GetCurrentDirectory(static_cast<jule::U32>(261LLU), (&(_1513_buf[0LL])));;
	if ((_165_n == 0LLU)) {
		return jule::Exceptional<jule::Str>{.error=jule::Any(_234ca4b3b_getLastOsErrorWindows(), &__jule_any_type0)};
	};
	return jule::Exceptional<jule::Str>{.result=_234ab8631_U16PtrToStr((&(_1513_buf[0LL])))};;
}



inline jule::Bool _21b7b2772_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_21b8204e4__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _21b82893c_isExcludingLatin(_21b7bb748_Letter, _7613_r);;
}



inline jule::Bool _21b827cb0_is16(jule::Slice<_21b826022_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c3469a8d:;
			if (it != expr_end) {
				jule::I64 _19313_i = it - expr->begin();
				{
					_21b826022_Range16* _19413_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < (*(_19413_range))._field_Lo)) {
							return false;;
						};
						if ((_19128_r <= (*(_19413_range))._field_Hi)) {
							return (((*(_19413_range))._field_Stride == 1LLU) || (jule::mod((_19128_r - (*(_19413_range))._field_Lo),(*(_19413_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1c3469a8d:;
				++it;
				_19313_i++;
				goto _iter_begin_1c3469a8d;
			}
			_iter_end_1c3469a8d:;
		};
		return false;;
	};
	jule::I64 _2089_lo = 0LL;;
	jule::I64 _2099_hi = _1919_ranges.len();;
	while ((_2089_lo < _2099_hi)) {
		{
			jule::I64 _2119_m = (_2089_lo + ((_2099_hi - _2089_lo) >> 1LLU));;
			_21b826022_Range16* _2129_range = (&(_1919_ranges[_2119_m]));;
			{
				if ((((*(_2129_range))._field_Lo <= _19128_r) && (_19128_r <= (*(_2129_range))._field_Hi))) {
					return (((*(_2129_range))._field_Stride == 1LLU) || (jule::mod((_19128_r - (*(_2129_range))._field_Lo),(*(_2129_range))._field_Stride) == 0LLU));;
				};
				if ((_19128_r < (*(_2129_range))._field_Lo)) {
					_2099_hi=_2119_m;
				} else {
					_2089_lo=(_2119_m + 1LL);
				};
			};
		}
	_iter_next_1c346962b:;
	}
	_iter_end_1c346962b:;;
	return false;;
}



inline jule::Bool _21b828134_is32(jule::Slice<_21b826550_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c347126a:;
			if (it != expr_end) {
				jule::I64 _23013_i = it - expr->begin();
				{
					_21b826550_Range32* _23113_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < (*(_23113_range))._field_Lo)) {
							return false;;
						};
						if ((_22828_r <= (*(_23113_range))._field_Hi)) {
							return (((*(_23113_range))._field_Stride == 1LLU) || (jule::mod((_22828_r - (*(_23113_range))._field_Lo),(*(_23113_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1c347126a:;
				++it;
				_23013_i++;
				goto _iter_begin_1c347126a;
			}
			_iter_end_1c347126a:;
		};
		return false;;
	};
	jule::I64 _2459_lo = 0LL;;
	jule::I64 _2469_hi = _2289_ranges.len();;
	while ((_2459_lo < _2469_hi)) {
		{
			jule::I64 _2489_m = (_2459_lo + ((_2469_hi - _2459_lo) >> 1LLU));;
			_21b826550_Range32* _2499_range = (&(_2289_ranges[_2489_m]));;
			{
				if ((((*(_2499_range))._field_Lo <= _22828_r) && (_22828_r <= (*(_2499_range))._field_Hi))) {
					return (((*(_2499_range))._field_Stride == 1LLU) || (jule::mod((_22828_r - (*(_2499_range))._field_Lo),(*(_2499_range))._field_Stride) == 0LLU));;
				};
				if ((_22828_r < (*(_2499_range))._field_Lo)) {
					_2469_hi=_2489_m;
				} else {
					_2459_lo=(_2489_m + 1LL);
				};
			};
		}
	_iter_next_1c346cc4a:;
	}
	_iter_end_1c346cc4a:;;
	return false;;
}



inline jule::Bool _21b82893c_isExcludingLatin(jule::Ptr<_21b8269c3_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_21b826022_Range16> *_28010_R16 = &((*(_27821_rangeTab))._field_R16);;
		jule::I64 _2829_off = (*_27821_rangeTab.alloc)._field_LatinOffset;;
		if ((((*(_28010_R16)).len() > _2829_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_28010_R16))[((*(_28010_R16)).len() - 1LL)]._field_Hi)))) {
			return _21b827cb0_is16((*(_28010_R16)).slice(_2829_off), static_cast<jule::U16>(_27844_r));;
		};
	};
	jule::Slice<_21b826550_Range32> *_2876_R32 = &((*_27821_rangeTab.alloc)._field_R32);;
	if ((((*(_2876_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_2876_R32))[0LL]._field_Lo)))) {
		return _21b828134_is32((*(_2876_R32)), static_cast<jule::U32>(_27844_r));;
	};
	return false;;
}



inline jule::Bool _21b828b7e_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_21b8204e4__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _21b82893c_isExcludingLatin(_21b7c2a18_Upper, _29512_r);;
}



inline jule::I64 _21b8694b6_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b) {
	jule::U8* _469_it = _4535_end;;
	for (; (_469_it >= _4517_begin); (_469_it)--) {
		{
			{
				if (((*(_469_it)) == _4547_b)) {
					return ((jule::I64)((_469_it - _4517_begin)));;
				};
			};
		}
	_iter_next_1c3486aee:;
	}
	_iter_end_1c3486aee:;;
	return -1LL;;
}



inline jule::I64 _21b869ae3_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b) {
	{
		auto expr = &(_6816_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3488cbb:;
		if (it != expr_end) {
			jule::I64 _709_i = it - expr->begin();
			jule::U8 *_7012_se = it;
			{
				if (((*(_7012_se)) == _6824_b)) {
					return _709_i;;
				};
			}
			_iter_next_1c3488cbb:;
			++it;
			_709_i++;
			goto _iter_begin_1c3488cbb;
		}
		_iter_end_1c3488cbb:;
	};
	return -1LL;;
}



inline jule::I64 _21b869e67_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b) {
	if ((_7920_s.len() == 0LL)) {
		return -1LL;;
	};
	return _21b8694b6_findLastByte((&(_7920_s[0LL])), (&(_7920_s[(_7920_s.len() - 1LL)])), _7928_b);;
}



inline jule::Str _21b86a264_Repeat(jule::Str _1111_s, jule::I64 _1123_n) {
	if ((_1123_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1111_s.len() > jule::div(jule::MAX_I64,_1123_n))) {
		jule::panic(jule::Str::lit("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:16:9"));;
	};
	_234c76a64_StrBuilder _189_ss = static__234c76ec6_New((_1111_s.len() * _1123_n));;
	for (; (_1123_n > 0LL); (_1123_n)--) {
		{
			_234c77537_WriteStr(&_189_ss, _1111_s);
		}
	_iter_next_1c3499a9b:;
	}
	_iter_end_1c3499a9b:;;
	return _234c77d2e_Str(&_189_ss);;
}



inline jule::Bool _21b86a62c_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub) {
	return ((_2614_s.len() >= _2622_sub.len()) && (_2614_s.slice(0LL, _2622_sub.len()) == _2622_sub));;
}



inline jule::Bool _21b86a9a1_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub) {
	return ((_3114_s.len() >= _3122_sub.len()) && (_3114_s.slice((_3114_s.len() - _3122_sub.len())) == _3122_sub));;
}



inline jule::I64 _21b86ae57_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I64 _3933_i) {
	if ((((_3933_i < 0LL) || (_3911_s.len() < _3919_sub.len())) || (_3919_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_3933_i < _3911_s.len()); (_3933_i)++) {
		{
			if (_21b86a62c_HasPrefix(_3911_s.slice(_3933_i), _3919_sub)) {
				return _3933_i;;
			};
		}
	_iter_next_1c349d6e8:;
	}
	_iter_end_1c349d6e8:;;
	return -1LL;;
}



inline jule::I64 _21b86b298_Find(jule::Str _549_s, jule::Str _5417_sub) {
	return _21b86ae57_FindAt(_549_s, _5417_sub, 0LL);;
}



inline jule::I64 _21b86b6c7_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I64 _6233_i) {
	jule::I64 _639_j = ((_6233_i - _6223_sub.len()) + 1LL);;
	if (((((_6223_sub.len() == 0LL) || (_6233_i < 0LL)) || (_6233_i >= _6215_s.len())) || (_639_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_1c34a1443:;
	for (; (_639_j >= 0LL); (_639_j)--) {
		{
			jule::I64 _6913_k = _639_j;;
			jule::I64 _7013_z = 0LL;;
			for (; (_7013_z < _6223_sub.len()); ({
				jule::I64 ___jule_assign_arg = (_6913_k + 1LL);
				jule::I64 _1___jule_assign_arg = (_7013_z + 1LL);
				_6913_k = ___jule_assign_arg;
				_7013_z = _1___jule_assign_arg;
			})) {
				{
					if ((_6215_s[_6913_k] != _6223_sub[_7013_z])) {
						goto _iter_next_1c34a109c;
					};
				}
			_iter_next_1c34a206a:;
			}
			_iter_end_1c34a206a:;;
			return _639_j;;
		}
	_iter_next_1c34a109c:;
	}
	_iter_end_1c34a109c:;;
	return -1LL;;
}



inline jule::I64 _21b86ba4b_FindLast(jule::Str _8413_s, jule::Str _8421_sub) {
	return _21b86b6c7_FindLastAt(_8413_s, _8421_sub, (_8413_s.len() - 1LL));;
}



inline jule::I64 _21b86d333_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b) {
	return _21b869e67_FindLastByteStr(_14817_s, _14825_b);;
}



inline jule::I64 _21b86d6a7_FindRune(jule::Str _15513_s, jule::I32 _15521_r) {
	jule::I64 _1569_i = 0LL;;
	while ((_1569_i < _15513_s.len())) {
		{
			jule::I32 _1589_br;
			jule::I64 _15813_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _234b9d062_DecodeRuneStr(_15513_s.slice(_1569_i));
				_1589_br = __jule_assign_result.__jule_result_arg0;
				_15813_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_15521_r == _1589_br)) {
				return _1569_i;;
			};
			_1569_i+=_15813_n;
		}
	_iter_next_1c34a97d1:;
	}
	_iter_end_1c34a97d1:;;
	return -1LL;;
}



inline jule::I64 _21b86e0d1_FindAny(jule::Str _18512_s, jule::Str _18520_runes) {
	jule::I64 _1869_i = 0LL;;
	while ((_1869_i < _18512_s.len())) {
		{
			jule::I32 _1889_r;
			jule::I64 _18812_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _234b9d062_DecodeRuneStr(_18512_s.slice(_1869_i));
				_1889_r = __jule_assign_result.__jule_result_arg0;
				_18812_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_21b86d6a7_FindRune(_18520_runes, _1889_r) != -1LL)) {
				return _1869_i;;
			};
			_1869_i+=_18812_n;
		}
	_iter_next_1c34acb03:;
	}
	_iter_end_1c34acb03:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _21b86e774_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I64 _21532_n) {
	jule::I64 _2169_cap = _21532_n;;
	if ((_21532_n < 0LL)) {
		_2169_cap=16LLU;
	};
	jule::Slice<jule::Str> _2209_parts = jule::Slice<jule::Str>::alloc(0LL, _2169_cap);;
	if ((_21532_n == 0LL)) {
		return _2209_parts;;
	};
	if ((_21532_n < 0LL)) {
		_21532_n=_21510_s.len();
	};
	jule::I64 _2279_i = 0LL;;
	for (; (_21532_n > 0LL); (_21532_n)--) {
		{
			jule::I64 _2299_j = _21b86ae57_FindAt(_21510_s, _21518_sub, _2279_i);;
			if ((_2299_j == -1LL)) {
				goto _iter_end_1c34b2410;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _2209_parts; __jule_push_dest.push(_21510_s.slice(_2279_i, _2299_j)); };
			_2279_i=(_2299_j + _21518_sub.len());
		}
	_iter_next_1c34b2410:;
	}
	_iter_end_1c34b2410:;;
	if (((_21532_n > 0LL) && (_2279_i < _21510_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _2209_parts; __jule_push_dest.push(_21510_s.slice(_2279_i)); };
	};
	return _2209_parts;;
}



inline jule::Bool _21b86eae8_Contains(jule::Str _24313_s, jule::Str _24321_sub) {
	return (_21b86ae57_FindAt(_24313_s, _24321_sub, 0LL) != -1LL);;
}



inline jule::Bool _21b870665_ContainsAny(jule::Str _25816_s, jule::Str _25824_runes) {
	return (_21b86e0d1_FindAny(_25816_s, _25824_runes) != -1LL);;
}



inline jule::I64 _21b8709d9_Count(jule::Str _26410_s, jule::Str _26418_sub) {
	if ((_26418_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _2689_n = 0LL;;
	jule::I64 _2699_i = 0LL;;
	for (;;) {
		{
			jule::I64 _2719_j = _21b86ae57_FindAt(_26410_s, _26418_sub, _2699_i);;
			if ((_2719_j == -1LL)) {
				goto _iter_end_1c34b7aa8;
			};
			(_2689_n)++;
			_2699_i=(_2719_j + _26418_sub.len());
		}
	_iter_next_1c34b7aa8:;
	}
	_iter_end_1c34b7aa8:;;
	return _2689_n;;
}



inline jule::Str _21b870ec3_Replace(jule::Str _28412_s, jule::Str _28420_sub, jule::Str _28430_new, jule::I64 _28444_n) {
	if (((_28444_n == 0LL) || (_28420_sub == _28430_new))) {
		return _28412_s;;
	};
	jule::I64 _2895_m = _21b8709d9_Count(_28412_s, _28420_sub);;
	if ((_2895_m == 0LL)) {
		return _28412_s;;
	};
	if (((_28444_n < 0LL) || (_2895_m < _28444_n))) {
		_28444_n=_2895_m;
	};
	_234c76a64_StrBuilder _2979_ss = static__234c76ec6_New(((_28412_s.len() + (_28444_n * (_28430_new.len() - _28420_sub.len()))) + 1LL));;
	jule::I64 _2989_i = 0LL;;
	for (; (_28444_n > 0LL); (_28444_n)--) {
		{
			jule::I64 _3009_j = _21b86ae57_FindAt(_28412_s, _28420_sub, _2989_i);;
			if ((_3009_j == -1LL)) {
				goto _iter_end_1c34bb45d;
			};
			_234c77537_WriteStr(&_2979_ss, _28412_s.slice(_2989_i, _3009_j));
			_234c77537_WriteStr(&_2979_ss, _28430_new);
			_2989_i=(_3009_j + _28420_sub.len());
		}
	_iter_next_1c34bb45d:;
	}
	_iter_end_1c34bb45d:;;
	_234c77537_WriteStr(&_2979_ss, _28412_s.slice(_2989_i));
	return _234c77d2e_Str(&_2979_ss);;
}



inline jule::Str _21b871c4e_TrimLeft(jule::Str _34117_s, jule::Str _34125_cutset) {
	jule::I64 _3429_i = 0LL;;
	while ((_3429_i < _34117_s.len())) {
		{
			jule::I32 _3449_r;
			jule::I64 _34412_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _234b9d062_DecodeRuneStr(_34117_s.slice(_3429_i));
				_3449_r = __jule_assign_result.__jule_result_arg0;
				_34412_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_21b86d6a7_FindRune(_34125_cutset, _3449_r) == -1LL)) {
				return _34117_s.slice(_3429_i);;
			};
			_3429_i+=_34412_n;
		}
	_iter_next_1c34c141e:;
	}
	_iter_end_1c34c141e:;;
	return jule::Str();;
}



inline jule::Str _21b8720c3_TrimRight(jule::Str _35514_s, jule::Str _35522_cutset) {
	jule::I64 _3569_i = _35514_s.len();;
	while ((_3569_i > 0LL)) {
		{
			jule::I32 _3589_r;
			jule::I64 _35812_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _234b9d5b2_DecodeLastRuneStr(_35514_s.slice(0LL, _3569_i));
				_3589_r = __jule_assign_result.__jule_result_arg0;
				_35812_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_21b86d6a7_FindRune(_35522_cutset, _3589_r) == -1LL)) {
				return _35514_s.slice(0LL, _3569_i);;
			};
			_3569_i-=_35812_n;
		}
	_iter_next_1c34c2e7b:;
	}
	_iter_end_1c34c2e7b:;;
	return jule::Str();;
}



inline jule::Str _21b872447_Trim(jule::Str _3699_s, jule::Str _36917_cutset) {
	return _21b871c4e_TrimLeft(_21b8720c3_TrimRight(_3699_s, _36917_cutset), _36917_cutset);;
}



inline jule::Bool _234c795e4_IsPathSep(jule::U8 _4914_c) {
	return ((_4914_c == 92LLU) || (_4914_c == '/'));;
}



inline jule::Bool _234c79902_isSlash(jule::U8 _5312_c) {
	return ((_5312_c == '\\') || (_5312_c == '/'));;
}



inline jule::U8 _234c79bbb_toUpper(jule::U8 _5512_c) {
	if ((('a' <= _5512_c) && (_5512_c <= 'z'))) {
		return (_5512_c - 32LL);;
	};
	return _5512_c;;
}



inline jule::I64 _234c7a293_volumeNameLen(jule::Str _8318_path) {
	if ((_8318_path.len() < 2LL)) {
		return 0LL;;
	};
	jule::U8 _885_c = _8318_path[0LL];;
	if (((_8318_path[1LL] == ':') && ((('a' <= _885_c) && (_885_c <= 'z')) || (('A' <= _885_c) && (_885_c <= 'Z'))))) {
		return 2LL;;
	};
	if (((!(_234c79902_isSlash(_8318_path[0LL]))) || (!(_234c79902_isSlash(_8318_path[1LL]))))) {
		return 0LL;;
	};
	jule::Str _965_p1;
	jule::Str _9613_rest;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _234c7a55c_cutPath(_8318_path.slice(2LL));
		_965_p1 = __jule_assign_result.__jule_result_arg0;
		_9613_rest = __jule_assign_result.__jule_result_arg1;
	});
	jule::Str _979_p2 = jule::Str();;
	jule::Bool _989_ok = false;;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _234c7a55c_cutPath(_9613_rest);
		_979_p2 = __jule_assign_result.__jule_result_arg0;
		_9613_rest = __jule_assign_result.__jule_result_arg1;
		_989_ok = __jule_assign_result.__jule_result_arg2;
	});
	if ((!(_989_ok))) {
		return _8318_path.len();;
	};
	if (((!_965_p1.equal(".", 1)) && (!_965_p1.equal("?", 1)))) {
		return ((_8318_path.len() - _9613_rest.len()) - 1LL);;
	};
	if (((((_979_p2.len() == 3LL) && (_234c79bbb_toUpper(_979_p2[0LL]) == 'U')) && (_234c79bbb_toUpper(_979_p2[1LL]) == 'N')) && (_234c79bbb_toUpper(_979_p2[2LL]) == 'C'))) {
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _234c7a55c_cutPath(_9613_rest);
			_9613_rest = __jule_assign_result.__jule_result_arg1;
		});
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _234c7a55c_cutPath(_9613_rest);
			_9613_rest = __jule_assign_result.__jule_result_arg1;
			_989_ok = __jule_assign_result.__jule_result_arg2;
		});
		if ((!(_989_ok))) {
			return _8318_path.len();;
		};
	};
	return ((_8318_path.len() - _9613_rest.len()) - 1LL);;
}



inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _234c7a55c_cutPath(jule::Str _12012_path) {
	__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg2 = false;
	{
		auto expr = &(_12012_path);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c298b9ea:;
		if (it != expr_end) {
			jule::I64 _1219_i = it - expr->begin();
			{
				if (_234c79902_isSlash(_12012_path[_1219_i])) {
					__jule_func_result.__jule_result_arg0 = _12012_path.slice(0LL, _1219_i);
					__jule_func_result.__jule_result_arg1 = _12012_path.slice((_1219_i + 1LL));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1c298b9ea:;
			++it;
			_1219_i++;
			goto _iter_begin_1c298b9ea;
		}
		_iter_end_1c298b9ea:;
	};
	__jule_func_result.__jule_result_arg0 = _12012_path;
	__jule_func_result.__jule_result_arg1 = jule::Str();
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _234c7a826_fullPath(jule::Str _12913_name) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::U16> _1305_utf16Name = _234ab8059_UTF16FromStr(_12913_name);;
	jule::U16* _1315_p = (&(_1305_utf16Name[0LL]));;
	jule::U32 _1329_n = static_cast<jule::U32>(100LLU);;
	for (;;) {
		{
			jule::Slice<jule::U16> _13413_buf = jule::Slice<jule::U16>::alloc(static_cast<jule::I64>(_1329_n), static_cast<jule::I64>(_1329_n), 0);;
			_1329_n=_234ae401e_GetFullPathName(_1315_p, static_cast<jule::U32>(_13413_buf.len()), (&(_13413_buf[0LL])), nullptr);
			if ((_1329_n == 0LLU)) {
				__jule_func_result.__jule_result_arg0 = jule::Str();
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			};
			if ((_1329_n <= static_cast<jule::U32>(_13413_buf.len()))) {
				__jule_func_result.__jule_result_arg0 = _234ab8367_UTF16ToStr(_13413_buf.slice(0LL, static_cast<jule::I64>(_1329_n)));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			};
		}
	_iter_next_1c298aed3:;
	}
	_iter_end_1c298aed3:;;
	__jule_func_result.__jule_result_arg0 = jule::Str();
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _234c7ac00_abs(jule::Str _14612_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_14612_path).empty()) {
		_14612_path=jule::Str::lit(".", 1);
	};
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _234c7a826_fullPath(_14612_path);
		_14612_path = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(__jule_func_result.__jule_result_arg1))) {
		__jule_func_result.__jule_result_arg0 = jule::Str();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _21b8748ab_Clean(_14612_path);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _234c7ae42_join(jule::Slice<jule::Str> _16013_elem) {
	_234c76a64_StrBuilder _1619_s = static__234c76ec6_New(16LL);;
	jule::U8 _1629_lastChar = static_cast<jule::U8>(0LLU);;
	{
		auto expr = &(_16013_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c299221a:;
		if (it != expr_end) {
			jule::Str _16317_e = *it;
			{
				{
					
					if ((_234c782b3_Len(&_1619_s) == 0LL)) {
						_case_begin_1c2993b67:;
					}
					else if (_234c79902_isSlash(_1629_lastChar)) {
						_case_begin_1c2994041:;
						{
							while (((_16317_e.len() > 0LL) && _234c79902_isSlash(_16317_e[0LL]))) {
								{
									(_16317_e).mut_slice(1LL);;
								}
							_iter_next_1c299466d:;
							}
							_iter_end_1c299466d:;;
						}
					}
					else if ((_1629_lastChar == ':')) {
						_case_begin_1c2993848:;
					}
					else {
						_case_begin_1c29937d2:;
						{
							_234c777e0_WriteByte(&_1619_s, '\\');
							_1629_lastChar='\\';
						}
					}
					_match_end_1c29936d3:;
				};
				if ((_16317_e.len() > 0LL)) {
					_234c77537_WriteStr(&_1619_s, _16317_e);
					_1629_lastChar=_16317_e[(_16317_e.len() - 1LL)];
				};
			}
			_iter_next_1c299221a:;
			++it;
			goto _iter_begin_1c299221a;
		}
		_iter_end_1c299221a:;
	};
	if ((_234c782b3_Len(&_1619_s) == 0LL)) {
		return jule::Str();;
	};
	return _21b8748ab_Clean(_234c77d2e_Str(&_1619_s));;
}



inline jule::Str _21b8748ab_Clean(jule::Str _10914_path) {
	jule::Str _1105_originalPath = _10914_path;;
	jule::I64 _1115_volLen = _234c7a293_volumeNameLen(_10914_path);;
	(_10914_path).mut_slice(_1115_volLen);;
	if ((_10914_path).empty()) {
		if ((((_1115_volLen > 1LL) && _234c795e4_IsPathSep(_1105_originalPath[0LL])) && _234c795e4_IsPathSep(_1105_originalPath[1LL]))) {
			return _21b874e83_FromSlash(_1105_originalPath);;
		};
		return (_1105_originalPath + jule::Str::lit(".", 1));;
	};
	jule::Bool _1205_rooted = _234c795e4_IsPathSep(_10914_path[0LL]);;
	jule::I64 _1275_n = _10914_path.len();;
	_21b873a20_lazyBuff _1289_out = _21b873a20_lazyBuff{._field_path=_10914_path, ._field_volAndPath=_1105_originalPath, ._field_volLen=_1115_volLen};;
	jule::I64 _1339_r;
	jule::I64 _13316_dotdot;
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		_1339_r = ___jule_assign_arg;
		_13316_dotdot = _1___jule_assign_arg;
	});
	if (_1205_rooted) {
		_21b87425c_append(&_1289_out, 92LLU);
		({
			jule::I64 ___jule_assign_arg = 1LL;
			jule::I64 _1___jule_assign_arg = 1LL;
			_1339_r = ___jule_assign_arg;
			_13316_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_1339_r < _1275_n)) {
		{
			{
				
				if (_234c795e4_IsPathSep(_10914_path[_1339_r])) {
					_case_begin_1c299de5d:;
					{
						(_1339_r)++;
					}
				}
				else if (((_10914_path[_1339_r] == '.') && (((_1339_r + 1LL) == _1275_n) || _234c795e4_IsPathSep(_10914_path[(_1339_r + 1LL)])))) {
					_case_begin_1c299aa2b:;
					{
						(_1339_r)++;
					}
				}
				else if ((((_10914_path[_1339_r] == '.') && (_10914_path[(_1339_r + 1LL)] == '.')) && (((_1339_r + 2LL) == _1275_n) || _234c795e4_IsPathSep(_10914_path[(_1339_r + 2LL)])))) {
					_case_begin_1c299aa92:;
					{
						_1339_r+=2LL;
						{
							
							if ((_1289_out._field_w > _13316_dotdot)) {
								_case_begin_1c29a203d:;
								{
									(_1289_out._field_w)--;
									while (((_1289_out._field_w > _13316_dotdot) && (!(_234c795e4_IsPathSep(_21b873ea4_index(&_1289_out, _1289_out._field_w)))))) {
										{
											(_1289_out._field_w)--;
										}
									_iter_next_1c29a27be:;
									}
									_iter_end_1c29a27be:;;
								}
							}
							else if ((!(_1205_rooted))) {
								_case_begin_1c29a20c6:;
								{
									if ((_1289_out._field_w > 0LL)) {
										_21b87425c_append(&_1289_out, 92LLU);
									};
									_21b87425c_append(&_1289_out, '.');
									_21b87425c_append(&_1289_out, '.');
									_13316_dotdot=_1289_out._field_w;
								}
							}
							_match_end_1c29a1bb9:;
						};
					}
				}
				else {
					_case_begin_1c299a9b5:;
					{
						if (((_1205_rooted && (_1289_out._field_w != 1LL)) || ((!(_1205_rooted)) && (_1289_out._field_w != 0LL)))) {
							_21b87425c_append(&_1289_out, 92LLU);
						};
						if ((((_1289_out._field_w == 0LL) && (_1289_out._field_volLen == 0LL)) && (_1339_r != 0LL))) {
							jule::I64 _17621_i = _1339_r;;
							for (; ((_17621_i < _1275_n) && (!(_234c795e4_IsPathSep(_10914_path[_17621_i])))); (_17621_i)++) {
								{
									if ((_10914_path[_17621_i] == ':')) {
										_21b87425c_append(&_1289_out, '.');
										_21b87425c_append(&_1289_out, 92LLU);
										goto _iter_end_1c299c49a;
									};
								}
							_iter_next_1c299c49a:;
							}
							_iter_end_1c299c49a:;;
						};
						for (; ((_1339_r < _1275_n) && (!(_234c795e4_IsPathSep(_10914_path[_1339_r])))); (_1339_r)++) {
							{
								_21b87425c_append(&_1289_out, _10914_path[_1339_r]);
							}
						_iter_next_1c299d9a7:;
						}
						_iter_end_1c299d9a7:;;
					}
				}
				_match_end_1c299a696:;
			};
		}
	_iter_next_1c29996d9:;
	}
	_iter_end_1c29996d9:;;
	if ((_1289_out._field_w == 0LL)) {
		_21b87425c_append(&_1289_out, '.');
	};
	return _21b874e83_FromSlash(_21b8744e3_string(&_1289_out));;
}



inline jule::Str _21b874e83_FromSlash(jule::Str _21214_path) {
	;
	return _21b870ec3_Replace(_21214_path, jule::Str::lit("/", 1), jule::Str::lit("\\", 1), -1LL);;
}



inline jule::Str _21b8752c4_Join(jule::Slice<jule::Str> _2269_elem) {
	return _234c7ae42_join(_2269_elem);;
}



inline jule::Str _21b87555a_Ext(jule::Str _2318_path) {
	jule::I64 _2329_i = (_2318_path.len() - 1LL);;
	for (; ((_2329_i >= 0LL) && (!(_234c795e4_IsPathSep(_2318_path[_2329_i])))); (_2329_i)--) {
		{
			if ((_2318_path[_2329_i] == '.')) {
				return _2318_path.slice(_2329_i);;
			};
		}
	_iter_next_1c29a5e21:;
	}
	_iter_end_1c29a5e21:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _21b875824_Abs(jule::Str _2468_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result = std::move(_234c7ac00_abs(_2468_path));
return __jule_func_result;;
}



inline jule::Str _21b875add_Base(jule::Str _25213_path) {
	if ((_25213_path).empty()) {
		return jule::Str::lit(".", 1);;
	};
	while (((_25213_path.len() > 0LL) && _234c795e4_IsPathSep(_25213_path[(_25213_path.len() - 1LL)]))) {
		{
			(_25213_path).mut_slice(0LL, (_25213_path.len() - 1LL));;
		}
	_iter_next_1c29a75d7:;
	}
	_iter_end_1c29a75d7:;;
	(_25213_path).mut_slice(_21b876209_VolumeName(_25213_path).len());;
	jule::I64 _2639_i = (_25213_path.len() - 1LL);;
	while (((_2639_i >= 0LL) && (!(_234c795e4_IsPathSep(_25213_path[_2639_i]))))) {
		{
			(_2639_i)--;
		}
	_iter_next_1c29a79d3:;
	}
	_iter_end_1c29a79d3:;;
	if ((_2639_i >= 0LL)) {
		(_25213_path).mut_slice((_2639_i + 1LL));;
	};
	if ((_25213_path).empty()) {
		return jule::Str::lit("\\", 1);;
	};
	return _25213_path;;
}



inline jule::Str _21b875eb7_Dir(jule::Str _2838_path) {
	jule::Str _2845_vol = _21b876209_VolumeName(_2838_path);;
	jule::I64 _2859_i = (_2838_path.len() - 1LL);;
	while (((_2859_i >= _2845_vol.len()) && (!(_234c795e4_IsPathSep(_2838_path[_2859_i]))))) {
		{
			(_2859_i)--;
		}
	_iter_next_1c29ab267:;
	}
	_iter_end_1c29ab267:;;
	jule::Str _2895_dir = _21b8748ab_Clean(_2838_path.slice(_2845_vol.len(), (_2859_i + 1LL)));;
	if ((_2895_dir.equal(".", 1) && (_2845_vol.len() > 2LL))) {
		return _2845_vol;;
	};
	return (_2845_vol + _2895_dir);;
}



inline jule::Str _21b876209_VolumeName(jule::Str _30115_path) {
	return _21b874e83_FromSlash(_30115_path.slice(0LL, _234c7a293_volumeNameLen(_30115_path)));;
}



inline jule::I64 _234b08e79_getLastFsError(void) {
	jule::I64 _725_err = _234a16183_GetLastErrno();;
	{
		auto &_match_expr{ _725_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1c29be29c:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1c29be18c:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1c29bdad7:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1c29bdb4d:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1c29bdbb4:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1c29bdc2a:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 132LL) {
			_case_begin_1c29bdca2:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1c29bdd29:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1c29be434:;
			{
				return static_cast<jule::I64>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1c29be4ab:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1c29be533:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1c29be5aa:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1c29be632:;
			{
				return static_cast<jule::I64>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1c29be6a9:;
			{
				return static_cast<jule::I64>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1c29be731:;
			{
				return static_cast<jule::I64>(14LL);;
			}
		}
		else if (_match_expr == 124LL) {
			_case_begin_1c29be7a8:;
			{
				return static_cast<jule::I64>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1c29be830:;
			{
				return static_cast<jule::I64>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1c29be8a7:;
			{
				return static_cast<jule::I64>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1c29be92e:;
			{
				return static_cast<jule::I64>(18LL);;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1c29be9a6:;
			{
				return static_cast<jule::I64>(19LL);;
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1c29bea2d:;
			{
				return static_cast<jule::I64>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1c29beaa5:;
			{
				return static_cast<jule::I64>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1c29beb2c:;
			{
				return static_cast<jule::I64>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1c29beba4:;
			{
				return static_cast<jule::I64>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1c29bec2b:;
			{
				return static_cast<jule::I64>(24LL);;
			}
		}
		else if (_match_expr == 119LL) {
			_case_begin_1c29beca3:;
			{
				return static_cast<jule::I64>(25LL);;
			}
		}
		else if (_match_expr == 104LL) {
			_case_begin_1c29bed2a:;
			{
				return static_cast<jule::I64>(26LL);;
			}
		}
		else if (_match_expr == 41LL) {
			_case_begin_1c29beda2:;
			{
				return static_cast<jule::I64>(27LL);;
			}
		}
		else {
			_case_begin_1c29bd92d:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1c29bda82:;
	};
}



inline jule::Bool _234ba89a7_isConsoleHandle(jule::Uintptr _11620_handle) {
	return (((_11620_handle == _234ae1516_STDIN) || (_11620_handle == _234ae17ad_STDOUT)) || (_11620_handle == _234ae1aaa_STDERR));;
}



inline void _21b9875c3_appendEscapeArg(_234c76a64_StrBuilder* _10225_s, jule::Str _10240_arg) {
	if ((_10240_arg.len() == 0LL)) {
		_234c77537_WriteStr(_10225_s, jule::Str::lit("\"\"", 2));
		return;;
	};
	jule::Bool _1089_needsBackslash = false;;
	jule::Bool _1099_hasSpace = false;;
	jule::I64 _1109_i = 0LL;;
	for (; (_1109_i < _10240_arg.len()); (_1109_i)++) {
		{
			{
				auto &_match_expr{ _10240_arg[_1109_i] };
				
				if (_match_expr == '\"' || _match_expr == '\\') {
					_case_begin_1c35a217b:;
					{
						_1089_needsBackslash=true;
					}
				}
				else if (_match_expr == ' ' || _match_expr == '\t') {
					_case_begin_1c35a2467:;
					{
						_1099_hasSpace=true;
					}
				}
				_match_end_1c35a2368:;
			};
		}
	_iter_next_1c35a1bd6:;
	}
	_iter_end_1c35a1bd6:;;
	if (((!(_1089_needsBackslash)) && (!(_1099_hasSpace)))) {
		_234c77537_WriteStr(_10225_s, _10240_arg);
		return;;
	};
	if ((!(_1089_needsBackslash))) {
		_234c777e0_WriteByte(_10225_s, '\"');
		_234c77537_WriteStr(_10225_s, _10240_arg);
		_234c777e0_WriteByte(_10225_s, '\"');
		return;;
	};
	if (_1099_hasSpace) {
		_234c777e0_WriteByte(_10225_s, '\"');
	};
	jule::I64 _1369_slashes = 0LL;;
	_1109_i=0LL;
	for (; (_1109_i < _10240_arg.len()); (_1109_i)++) {
		{
			jule::U8 _1399_c = _10240_arg[_1109_i];;
			{
				auto &_match_expr{ _1399_c };
				
				if (_match_expr == '\\') {
					_case_begin_1c35a5888:;
					{
						(_1369_slashes)++;
					}
				}
				else if (_match_expr == '\"') {
					_case_begin_1c35a54c0:;
					{
						for (; (_1369_slashes > 0LL); (_1369_slashes)--) {
							{
								_234c777e0_WriteByte(_10225_s, '\\');
							}
						_iter_next_1c35a6092:;
						}
						_iter_end_1c35a6092:;;
						_234c777e0_WriteByte(_10225_s, '\\');
					}
				}
				else {
					_case_begin_1c35a5349:;
					{
						_1369_slashes=0LL;
					}
				}
				_match_end_1c35a546a:;
			};
			_234c777e0_WriteByte(_10225_s, _1399_c);
		}
	_iter_next_1c35a4a74:;
	}
	_iter_end_1c35a4a74:;;
	if (_1099_hasSpace) {
		for (; (_1369_slashes > 0LL); (_1369_slashes)--) {
			{
				_234c777e0_WriteByte(_10225_s, '\\');
			}
		_iter_next_1c35a5701:;
		}
		_iter_end_1c35a5701:;;
		_234c777e0_WriteByte(_10225_s, '\"');
	};
}



inline jule::Str _21b98788c_makeCmdLine(jule::Slice<jule::Str> _16316_args) {
	_234c76a64_StrBuilder _1649_s = static__234c76ec6_New(16LL);;
	{
		auto expr = &(_16316_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c35a7868:;
		if (it != expr_end) {
			jule::Str *_16512_arg = it;
			{
				if ((_234c782b3_Len(&_1649_s) > 0LL)) {
					_234c777e0_WriteByte(&_1649_s, ' ');
				};
				_21b9875c3_appendEscapeArg(&(_1649_s), (*(_16512_arg)));
			}
			_iter_next_1c35a7868:;
			++it;
			goto _iter_begin_1c35a7868;
		}
		_iter_end_1c35a7868:;
	};
	return _234c77d2e_Str(&_1649_s);;
}



inline jule::Exceptional<jule::Slice<jule::U16>> _21b987c66_createEnvBlock(jule::Slice<jule::Str> _17919_env) {
	if ((_17919_env.len() == 0LL)) {
		return jule::Exceptional<jule::Slice<jule::U16>>{.result=_234ab76eb_Encode(jule::Slice<jule::I32>::make({0LL,0LL}))};;
	};
	jule::I64 _1839_n = 0LL;;
	{
		auto expr = &(_17919_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c35a91a5:;
		if (it != expr_end) {
			jule::Str *_18412_s = it;
			{
				if ((_21b869ae3_FindByteStr((*(_18412_s)), 0LLU) != -1LL)) {
					return jule::Exceptional<jule::Slice<jule::U16>>{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
				};
				_1839_n+=((*(_18412_s)).len() + 1LL);
			}
			_iter_next_1c35a91a5:;
			++it;
			goto _iter_begin_1c35a91a5;
		}
		_iter_end_1c35a91a5:;
	};
	(_1839_n)++;
	jule::Slice<jule::U16> _1919_b = jule::Slice<jule::U16>::alloc(0LL, _1839_n, 0);;
	{
		auto expr = &(_17919_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c35a1543:;
		if (it != expr_end) {
			jule::Str *_19212_s = it;
			{
				{
					auto expr = _19212_s;
					char *it = expr->operator char*();
					const char *end = it + expr->len();
					std::size_t len;
					jule::I32 _19316_c;
					_iter_begin_1c35ab6a2:;
					std::tie(_19316_c, len) = jule::utf8_decode_rune_str(it, end - it);
					if (it < end) {
						{
							_1919_b=_234ab7d06_AppendRune(_1919_b, _19316_c);
						}
						_iter_next_1c35ab6a2:;
						it += len;
						goto _iter_begin_1c35ab6a2;
					}
				};
				_1919_b=_234ab7d06_AppendRune(_1919_b, 0LL);
			}
			_iter_next_1c35a1543:;
			++it;
			goto _iter_begin_1c35a1543;
		}
		_iter_end_1c35a1543:;
	};
	_1919_b=_234ab7d06_AppendRune(_1919_b, 0LL);
	return jule::Exceptional<jule::Slice<jule::U16>>{.result=_1919_b};;
}



inline jule::I64 _21b988c67_processErrorFromCode(jule::I64 _1125_code) {
	{
		auto &_match_expr{ _1125_code };
		
		if (_match_expr == 5LL) {
			_case_begin_1c35acb37:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 2LL || _match_expr == 3LL) {
			_case_begin_1c35ac4e9:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else {
			_case_begin_1c35a9b56:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		_match_end_1c35ac0dc:;
	};
}



inline jule::I64 _21b988e87_getLastProcessError(void) {
	return _21b988c67_processErrorFromCode(static_cast<jule::I64>(_234ae2a9a_GetLastError()));;
}



inline void _21b9897a1_Exit(jule::I64 _129_code) {
	_234ae8c49_Exit(_129_code);
}



inline jule::Str _21b9899b0_Executable(void) {
	return jule::executable();;
}



inline jule::Bool _21b8b8081_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _21b8b81c4_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_21b8b73d2_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c35cd9e3:;
		if (it != expr_end) {
			jule::Str *_3212_validExt = it;
			{
				if ((_3121_ext == (*(_3212_validExt)))) {
					return true;;
				};
			}
			_iter_next_1c35cd9e3:;
			++it;
			goto _iter_begin_1c35cd9e3;
		}
		_iter_end_1c35cd9e3:;
	};
	return false;;
}



inline jule::Bool _21b8b846b_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_21a2d134c_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c35d040c:;
		if (it != expr_end) {
			jule::Str *_4512_e = it;
			{
				if ((_4118_ext == (*(_4512_e)))) {
					return true;;
				};
			}
			_iter_next_1c35d040c:;
			++it;
			goto _iter_begin_1c35d040c;
		}
		_iter_end_1c35d040c:;
	};
	{
		auto expr = &(_21b8b7e93_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c35cea16:;
		if (it != expr_end) {
			jule::Str *_5012_e = it;
			{
				if ((_4118_ext == (*(_5012_e)))) {
					return true;;
				};
			}
			_iter_next_1c35cea16:;
			++it;
			goto _iter_begin_1c35cea16;
		}
		_iter_end_1c35cea16:;
	};
	return false;;
}



inline jule::Str _21b8c5951_Logf(jule::Str _3239_fmt, jule::Slice<jule::Any> _32322_args) {
	return _21b8c63e1_applyFmt(_3239_fmt, _32322_args);;
}



inline jule::Str _21b8c5c5e_argToStr(jule::Any _32713_arg) {
	{
		auto &_match_expr{ _32713_arg };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1c35d181a:;
			{
				return _32713_arg.unsafe_cast<jule::Str>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1c35d2222:;
			{
				return jule::Str::from_byte(_32713_arg.unsafe_cast<jule::U8>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1c35d2288:;
			{
				return jule::Str::from_rune(_32713_arg.unsafe_cast<jule::I32>());;
			}
		}
		else {
			_case_begin_1c35d1cd2:;
			{
				return jule::Str::lit("<fmt?>", 6);;
			}
		}
		_match_end_1c35d1c7c:;
	};
}



inline jule::I64 _21b8c6028_findNextFmt(jule::Str _34016_fmt) {
	{
		auto expr = &(_34016_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c35d2b3a:;
		if (it != expr_end) {
			jule::I64 _3419_i = it - expr->begin();
			jule::U8 *_34112_b = it;
			{
				if (((*(_34112_b)) == '@')) {
					return _3419_i;;
				};
			}
			_iter_next_1c35d2b3a:;
			++it;
			_3419_i++;
			goto _iter_begin_1c35d2b3a;
		}
		_iter_end_1c35d2b3a:;
	};
	return -1LL;;
}



inline jule::Str _21b8c63e1_applyFmt(jule::Str _34917_fmt, jule::Slice<jule::Any> _34927_args) {
	_234c76a64_StrBuilder _3509_s = static__234c76ec6_New(32LL);;
	{
		auto expr = &(_34927_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c35d3d06:;
		if (it != expr_end) {
			jule::Any *_35112_arg = it;
			{
				jule::I64 _3529_i = _21b8c6028_findNextFmt(_34917_fmt);;
				if ((_3529_i == -1LL)) {
					goto _iter_end_1c35d3d06;
				};
				_234c77537_WriteStr(&_3509_s, _34917_fmt.slice(0LL, _3529_i));
				_234c77537_WriteStr(&_3509_s, _21b8c5c5e_argToStr((*(_35112_arg))));
				(_34917_fmt).mut_slice((_3529_i + 1LL));;
			}
			_iter_next_1c35d3d06:;
			++it;
			goto _iter_begin_1c35d3d06;
		}
		_iter_end_1c35d3d06:;
	};
	_234c77537_WriteStr(&_3509_s, _34917_fmt);
	return _234c77d2e_Str(&_3509_s);;
}



inline jule::Bool _21b8c7249_IsTopDirective(jule::Str _2219_directive) {
	return (_2219_directive.equal("pass", 4) || _2219_directive.equal("build", 5));;
}



inline jule::Bool _21b8c8668_IsWindows(jule::Str _3714_os) {
	return _3714_os.equal("windows", 7);;
}



inline jule::Bool _21b8c8976_IsDarwin(jule::Str _4013_os) {
	return _4013_os.equal("darwin", 6);;
}



inline jule::Bool _21b8c8c40_IsLinux(jule::Str _4312_os) {
	return _4312_os.equal("linux", 5);;
}



inline jule::Bool _21b8c9081_IsI386(jule::Str _4611_arch) {
	return _4611_arch.equal("i386", 4);;
}



inline jule::Bool _21b8c9317_IsAmd64(jule::Str _4912_arch) {
	return _4912_arch.equal("amd64", 5);;
}



inline jule::Bool _21b8c95d1_IsArm64(jule::Str _5212_arch) {
	return _5212_arch.equal("arm64", 5);;
}



inline jule::Bool _21b8c989a_IsUnix(jule::Str _5511_os) {
	return (_21b8c8976_IsDarwin(_5511_os) || _21b8c8c40_IsLinux(_5511_os));;
}



inline jule::Bool _21b8c9c74_Is32Bit(jule::Str _5812_arch) {
	return _21b8c9081_IsI386(_5812_arch);;
}



inline jule::Bool _21b8c9eb6_Is64Bit(jule::Str _6112_arch) {
	return (_21b8c9317_IsAmd64(_6112_arch) || _21b8c95d1_IsArm64(_6112_arch));;
}



inline void _21b98ac47_init(void) {
	jule::Str _259_path = _21b9899b0_Executable();;
	if ((_259_path).empty()) {
		jule::panic(jule::Str::lit("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_21b98a296_PathWd=({
			auto except = _234ca6126_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str::lit("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_21b989eee_PathExec=_21b875eb7_Dir(_259_path);
		_21b989ce0_PathStdlib=_21b8752c4_Join(jule::Slice<jule::Str>::make({_21b989eee_PathExec,jule::Str::lit("..", 2),jule::Str::lit("std", 3)}));
		_21b98a593_PathApi=_21b8752c4_Join(jule::Slice<jule::Str>::make({_21b989eee_PathExec,jule::Str::lit("..", 2),jule::Str::lit("api", 3),jule::Str::lit("jule.hpp", 8)}));
	};
}



inline jule::I64 _20217a2a8_LeadingZeros64(jule::U64 _6119_x) {
	return (64LL - _202182b40_Len64(_6119_x));;
}



inline jule::I64 _20217b1ee_TrailingZeros(jule::U64 _8318_x) {
	;
	return _20217bd9d_TrailingZeros64(static_cast<jule::U64>(_8318_x));;
}



inline jule::I64 _20217bad4_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I64>(_20217a8e6__DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]);;
}



inline jule::I64 _20217bd9d_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I64>(_20217ae8a__DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]);;
}



inline jule::I64 _202182876_Len32(jule::U32 _35214_x) {
	jule::I64 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I64>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I64>(_35214_x))));
	return __jule_func_result;;
}



inline jule::I64 _202182b40_Len64(jule::U64 _36614_x) {
	jule::I64 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I64>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I64>(_36614_x))));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _2021838cc_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=((_41510_x + _41518_y) + _41526_carry);
	__jule_func_result.__jule_result_arg1=(((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _2021851d6_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5015_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5025_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5035_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5045_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5055_w0 = (_5015_x0 * _5035_y0);;
	jule::U64 _5065_t = ((_5025_x1 * _5035_y0) + (_5055_w0 >> 32LLU));;
	jule::U64 _5079_w1 = (_5065_t & 4294967295LLU);;
	jule::U64 _5085_w2 = (_5065_t >> 32LLU);;
	_5079_w1+=(_5015_x0 * _5045_y1);
	__jule_func_result.__jule_result_arg0=(((_5025_x1 * _5045_y1) + _5085_w2) + (_5079_w1 >> 32LLU));
	__jule_func_result.__jule_result_arg1=(_49910_x * _49918_y);
	return __jule_func_result;;
}



inline jule::U32 _2020870b6_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _2020873c4_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _20208768d_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _2020879ce_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _20208a042_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1c36b866b:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_20218ccb0_IsInf(_4714_f, 0LL) || _20218c62d_IsNaN(_4714_f)) {
			_case_begin_1c36b8715:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1c36b858e:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _20218d079_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _569_x = _20208768d_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I64>(((_569_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_569_x=(_569_x & 9227875636482146303LLU);
	_569_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=_2020879ce_F64FromBits(_569_x);
	return __jule_func_result;;
}



inline jule::F64 _20218c320_NaN(void) {
	return _2020879ce_F64FromBits(9221120237041090561LLU);;
}



inline jule::Bool _20218c62d_IsNaN(jule::F64 _5210_f) {
	return false;;
}



inline jule::F64 _20218c8e7_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return _2020879ce_F64FromBits(9218868437227405312LLU);;
	};
	return _2020879ce_F64FromBits(18442240474082181120LLU);;
}



inline jule::Bool _20218ccb0_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _20218d079_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_202190433_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = (_8214_x * 4503599627370496LLU);
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _20218ea4d_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_20218c62d_IsNaN(_1118_x) || _20218ccb0_IsInf(_1118_x, 1LL)) {
			_case_begin_1c29d57e1:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1c29d588a:;
			{
				return _20218c320_NaN();;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1c29d5901:;
			{
				return _20218c8e7_Inf(-1LL);;
			}
		}
		_match_end_1c29d5736:;
	};
	jule::F64 _1339_f1;
	jule::I64 _13317_ki;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _20208a042_Frexp(_1118_x);
		_1339_f1 = __jule_assign_result.__jule_result_arg0;
		_13317_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1339_f1 < 0.7071067811865476)) {
		_1339_f1*=2LL;
		(_13317_ki)--;
	};
	jule::F64 _1385_f = (_1339_f1 - 1LL);;
	jule::F64 _1395_k = static_cast<jule::F64>(_13317_ki);;
	jule::F64 _1425_s = jule::div(_1385_f,(2LL + _1385_f));;
	jule::F64 _1435_s2 = (_1425_s * _1425_s);;
	jule::F64 _1445_s4 = (_1435_s2 * _1435_s2);;
	jule::F64 _1455_t1 = (_1435_s2 * (0.6666666666666735 + (_1445_s4 * (0.2857142874366239 + (_1445_s4 * (0.1818357216161805 + (_1445_s4 * 0.14798198605116586)))))));;
	jule::F64 _1465_t2 = (_1445_s4 * (0.3999999999940942 + (_1445_s4 * (0.22222198432149784 + (_1445_s4 * 0.15313837699209373)))));;
	jule::F64 _1475_R = (_1455_t1 + _1465_t2);;
	jule::F64 _1485_hfsq = ((0.5 * _1385_f) * _1385_f);;
	return ((_1395_k * 0.6931471803691238) - ((_1485_hfsq - ((_1425_s * (_1485_hfsq + _1475_R)) + (_1395_k * 0.00000000019082149292705877))) - _1385_f));;
}



inline jule::F64 _202190433_Abs(jule::F64 _438_x) {
	return _2020879ce_F64FromBits((_20208768d_F64Bits(_438_x) & 9223372036854775807LLU));;
}



inline __jule_tuple_f64__jule_tuple_f64 _20219700b_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _465_absF = _202190433_Abs(_449_f);;
	jule::F64 _479_i = 0LL;;
	if ((_465_absF > 4503599627370496LL)) {
		_479_i=_449_f;
	} else {
		_479_i=(_465_absF + 4503599627370496LL);
		_479_i-=4503599627370496LL;
		while ((_479_i > _465_absF)) {
			{
				(_479_i)--;
			}
		_iter_next_1c2a49c0c:;
		}
		_iter_end_1c2a49c0c:;;
		if ((_449_f < 0LL)) {
			_479_i=(-(_479_i));
		};
	};
	__jule_func_result.__jule_result_arg0 = _479_i;
	__jule_func_result.__jule_result_arg1 = (_449_f - _479_i);
	return __jule_func_result;;
}



inline jule::F64 _202197814_Log2(jule::F64 _449_x) {
	jule::F64 _455_frac;
	jule::I64 _4511_exp;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _20208a042_Frexp(_449_x);
		_455_frac = __jule_assign_result.__jule_result_arg0;
		_4511_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_455_frac == 0.5)) {
		return static_cast<jule::F64>((_4511_exp - 1LL));;
	};
	return ((_20218ea4d_Log(_455_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4511_exp));;
}



inline jule::Str _2021c12aa_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I64 _7932_prec, jule::I64 _7943_bitSize) {
	return _234c7637c_StrFromBytes(_2021c1893_genericFtoa(jule::Slice<jule::U8>::alloc(0LL, _2021c4c4d_max(((_7932_prec + 4LL) + 1LL), 25LL), 0), _7913_f, _7921_fmt, _7932_prec, _7943_bitSize));;
}



inline jule::Slice<jule::U8> _2021c1893_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I64 _8758_prec, jule::I64 _8769_bitSize) {
	jule::U64 _889_bits = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_2021c009a_floatInfo> _8913_flt = nullptr;;
	{
		auto &_match_expr{ _8769_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1c268d356:;
			{
				_889_bits=static_cast<jule::U64>(_2020870b6_F32Bits(static_cast<jule::F32>(_8733_val)));
				_8913_flt=((jule::Ptr<_2021c009a_floatInfo>)((&(_2021c0496_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1c268d3bc:;
			{
				_889_bits=_20208768d_F64Bits(_8733_val);
				_8913_flt=((jule::Ptr<_2021c009a_floatInfo>)((&(_2021c0793_f64info))));
			}
		}
		else {
			_case_begin_1c268b233:;
			{
				jule::panic(jule::Str::lit("std::conv: illegal bitSize", 26) + jule::Str("\nlocation: std/conv/ftoa.jule:98:9"));;
			}
		}
		_match_end_1c268cb4c:;
	};
	jule::Bool _1015_neg = ((_889_bits >> ((*(_8913_flt))._field_expbits + (*_8913_flt.alloc)._field_mantbits)) != 0LLU);;
	jule::I64 _1029_exp = (static_cast<jule::I64>((_889_bits >> (*_8913_flt.alloc)._field_mantbits)) & static_cast<jule::I64>(((1LL << (*_8913_flt.alloc)._field_expbits) - 1LL)));;
	jule::U64 _1039_mant = (_889_bits & ((static_cast<jule::U64>(1LLU) << (*_8913_flt.alloc)._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _1029_exp };
		
		if (_match_expr == static_cast<jule::I64>(((1LL << (*_8913_flt.alloc)._field_expbits) - 1LL))) {
			_case_begin_1c398b037:;
			{
				{
					
					if ((_1039_mant != 0LLU)) {
						_case_begin_1c398c797:;
						{
							return jule::append(_8720_dst,jule::Str::lit("nan", 3));;
						}
					}
					else if (_1015_neg) {
						_case_begin_1c398c885:;
						{
							return jule::append(_8720_dst,jule::Str::lit("-inf", 4));;
						}
					}
					else {
						_case_begin_1c398c126:;
						{
							return jule::append(_8720_dst,jule::Str::lit("+inf", 4));;
						}
					}
					_match_end_1c398c027:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1c398b114:;
			{
				(_1029_exp)++;
			}
		}
		else {
			_case_begin_1c398a179:;
			{
				_1039_mant|=(static_cast<jule::U64>(1LLU) << (*_8913_flt.alloc)._field_mantbits);
			}
		}
		_match_end_1c398aa3c:;
	};
	_1029_exp+=(*_8913_flt.alloc)._field_bias;
	if ((_8743_fmt == 'b')) {
		return _2021c3dc3_fmtB(_8720_dst, _1015_neg, _1039_mant, _1029_exp, &((*_8913_flt.alloc)));;
	};
	if (((_8743_fmt == 'x') || (_8743_fmt == 'X'))) {
		return _2021c4555_fmtX(_8720_dst, _8758_prec, _8743_fmt, _1015_neg, _1039_mant, _1029_exp, &((*_8913_flt.alloc)));;
	};
	;
	_2021c0c27_decimalSlice _1379_digs = _2021c0c27_decimalSlice{};;
	jule::Bool _1389_ok = false;;
	jule::Bool _1405_shortest = (_8758_prec < 0LL);;
	if (_1405_shortest) {
		_1379_digs._field_d=jule::Slice<jule::U8>::alloc(32LL, 32LL, 0);
		_2021ceb9d_ryuFtoaShortest(&(_1379_digs), _1039_mant, (_1029_exp - static_cast<jule::I64>((*_8913_flt.alloc)._field_mantbits)), &((*_8913_flt.alloc)));
		_1389_ok=true;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1c398ab80:;
				{
					_8758_prec=_2021c4c4d_max((_1379_digs._field_nd - 1LL), 0LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1c3991449:;
				{
					_8758_prec=_2021c4c4d_max((_1379_digs._field_nd - _1379_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1c39914b0:;
				{
					_8758_prec=_1379_digs._field_nd;
				}
			}
			_match_end_1c39907de:;
		};
	} else if ((_8743_fmt != 'f')) {
		jule::I64 _15713_digits = _8758_prec;;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1c399345c:;
				{
					(_15713_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1c3993528:;
				{
					if ((_8758_prec == 0LL)) {
						_8758_prec=1LL;
					};
					_15713_digits=_8758_prec;
				}
			}
			else {
				_case_begin_1c399300b:;
				{
					_15713_digits=1LL;
				}
			}
			_match_end_1c39930e9:;
		};
		if (((_8769_bitSize == 32LL) && (_15713_digits <= 9LL))) {
			_1379_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_2021cd8e4_ryuFtoaFixed32(&(_1379_digs), static_cast<jule::U32>(_1039_mant), (_1029_exp - static_cast<jule::I64>((*_8913_flt.alloc)._field_mantbits)), _15713_digits);
			_1389_ok=true;
		} else if ((_15713_digits <= 18LL)) {
			_1379_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_2021cdd89_ryuFtoaFixed64(&(_1379_digs), _1039_mant, (_1029_exp - static_cast<jule::I64>((*_8913_flt.alloc)._field_mantbits)), _15713_digits);
			_1389_ok=true;
		};
	};
	if ((!(_1389_ok))) {
		return _2021c209c_bigFtoa(_8720_dst, _8758_prec, _8743_fmt, _1015_neg, _1039_mant, _1029_exp, &((*_8913_flt.alloc)));;
	};
	return _2021c2773_fmtDigits(_8720_dst, _1405_shortest, _1015_neg, _1379_digs, _8758_prec, _8743_fmt);;
}



inline jule::Slice<jule::U8> _2021c209c_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I64 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1885_mant, jule::I64 _18816_exp, _2021c009a_floatInfo* _18827_flt) {
	_2021d3982_decimal _1899_d = _2021d3982_decimal{};;
	_2021d3d39_assign(&_1899_d, _1885_mant);
	_2021d40e2_shift(&_1899_d, (_18816_exp - static_cast<jule::I64>((*(_18827_flt))._field_mantbits)));
	_2021c0c27_decimalSlice _1929_digs = _2021c0c27_decimalSlice{};;
	jule::Bool _1935_shortest = (_18733_prec < 0LL);;
	if (_1935_shortest) {
		_2021c2b91_roundShortest(&(_1899_d), _1885_mant, _18816_exp, _18827_flt);
		_1929_digs=_2021c0c27_decimalSlice{._field_d=_1899_d._field_d.slice(0LL), ._field_nd=_1899_d._field_nd, ._field_dp=_1899_d._field_dp, };
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1c3999353:;
				{
					_18733_prec=(_1929_digs._field_nd - 1LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1c399a189:;
				{
					_18733_prec=_2021c4c4d_max((_1929_digs._field_nd - _1929_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1c399a200:;
				{
					_18733_prec=_1929_digs._field_nd;
				}
			}
			_match_end_1c399a013:;
		};
	} else {
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1c39990cd:;
				{
					_2021d490b_round(&_1899_d, (_18733_prec + 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1c3999144:;
				{
					_2021d490b_round(&_1899_d, (_1899_d._field_dp + _18733_prec));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1c39991aa:;
				{
					if ((_18733_prec == 0LL)) {
						_18733_prec=1LL;
					};
					_2021d490b_round(&_1899_d, _18733_prec);
				}
			}
			_match_end_1c399b872:;
		};
		_1929_digs=_2021c0c27_decimalSlice{._field_d=_1899_d._field_d.slice(0LL), ._field_nd=_1899_d._field_nd, ._field_dp=_1899_d._field_dp, };
	};
	return _2021c2773_fmtDigits(_18716_dst, _1935_shortest, _18755_neg, _1929_digs, _18733_prec, _18744_fmt);;
}



inline jule::Slice<jule::U8> _2021c2773_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _2021c0c27_decimalSlice _2255_digs, jule::I64 _22529_prec, jule::U8 _22540_fmt) {
	{
		auto &_match_expr{ _22540_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1c399e897:;
			{
				return _2021c3235_fmtE(_22418_dst, _22447_neg, _2255_digs, _22529_prec, _22540_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1c399e90d:;
			{
				return _2021c371e_fmtF(_22418_dst, _22447_neg, _2255_digs, _22529_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1c399e974:;
			{
				jule::I64 _23313_eprec = _22529_prec;;
				if (((_23313_eprec > _2255_digs._field_nd) && (_2255_digs._field_nd >= _2255_digs._field_dp))) {
					_23313_eprec=_2255_digs._field_nd;
				};
				if (_22431_shortest) {
					_23313_eprec=6LL;
				};
				jule::I64 _2439_exp = (_2255_digs._field_dp - 1LL);;
				if (((_2439_exp < -4LL) || (_2439_exp >= _23313_eprec))) {
					if ((_22529_prec > _2255_digs._field_nd)) {
						_22529_prec=_2255_digs._field_nd;
					};
					return _2021c3235_fmtE(_22418_dst, _22447_neg, _2255_digs, (_22529_prec - 1LL), ((_22540_fmt + 'e') - 'g'));;
				};
				if ((_22529_prec > _2255_digs._field_dp)) {
					_22529_prec=_2255_digs._field_nd;
				};
				return _2021c371e_fmtF(_22418_dst, _22447_neg, _2255_digs, _2021c4c4d_max((_22529_prec - _2255_digs._field_dp), 0LL));;
			}
		}
		_match_end_1c399e7ed:;
	};
	return jule::append(_22418_dst,jule::Slice<jule::U8>::make({'%',_22540_fmt}));;
}



inline void _2021c2b91_roundShortest(_2021d3982_decimal* _26223_d, jule::U64 _26235_mant, jule::I64 _26246_exp, _2021c009a_floatInfo* _26257_flt) {
	if ((_26235_mant == 0LLU)) {
		(*(_26223_d))._field_nd=0LL;
		return;;
	};
	jule::I64 _2835_minexp = ((*(_26257_flt))._field_bias + 1LL);;
	if (((_26246_exp > _2835_minexp) && ((332LL * ((*(_26223_d))._field_dp - (*(_26223_d))._field_nd)) >= (100LL * (_26246_exp - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)))))) {
		return;;
	};
	_2021d3982_decimal _2929_upper = _2021d3982_decimal{};;
	_2021d3d39_assign(&_2929_upper, ((_26235_mant << 1LLU) + 1LLU));
	_2021d40e2_shift(&_2929_upper, ((_26246_exp - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::U64 _3029_mantlo = static_cast<jule::U64>(0LLU);;
	jule::I64 _3039_explo = 0LL;;
	if (((_26235_mant > (1LLU << (*(_26257_flt))._field_mantbits)) || (_26246_exp == _2835_minexp))) {
		_3029_mantlo=(_26235_mant - 1LLU);
		_3039_explo=_26246_exp;
	} else {
		_3029_mantlo=((_26235_mant << 1LLU) - 1LLU);
		_3039_explo=(_26246_exp - 1LL);
	};
	_2021d3982_decimal _3119_lower = _2021d3982_decimal{};;
	_2021d3d39_assign(&_3119_lower, ((_3029_mantlo << 1LLU) + 1LLU));
	_2021d40e2_shift(&_3119_lower, ((_3039_explo - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::Bool _3185_inclusive = ((_26235_mant & 1LL) == 0LLU);;
	jule::U8 _3319_upperdelta = static_cast<jule::U8>(0LLU);;
	jule::I64 _3359_ui = 0LL;;
	for (; ; (_3359_ui)++) {
		{
			jule::I64 _3409_mi = ((_3359_ui - _2929_upper._field_dp) + (*(_26223_d))._field_dp);;
			if ((_3409_mi >= (*(_26223_d))._field_nd)) {
				goto _iter_end_1c39ab1de;
			};
			jule::I64 _3449_li = ((_3359_ui - _2929_upper._field_dp) + _3119_lower._field_dp);;
			jule::U8 _34513_l = static_cast<jule::U8>(48LLU);;
			if (((_3449_li >= 0LL) && (_3449_li < _3119_lower._field_nd))) {
				_34513_l=_3119_lower._field_d[_3449_li];
			};
			jule::U8 _34913_m = static_cast<jule::U8>(48LLU);;
			if ((_3409_mi >= 0LL)) {
				_34913_m=(*(_26223_d))._field_d[_3409_mi];
			};
			jule::U8 _35313_u = static_cast<jule::U8>(48LLU);;
			if ((_3359_ui < _2929_upper._field_nd)) {
				_35313_u=_2929_upper._field_d[_3359_ui];
			};
			jule::Bool _3619_okdown = ((_34513_l != _34913_m) || (_3185_inclusive && ((_3449_li + 1LL) == _3119_lower._field_nd)));;
			{
				
				if (((_3319_upperdelta == 0LLU) && ((_34913_m + 1LLU) < _35313_u))) {
					_case_begin_1c385a7ca:;
					{
						_3319_upperdelta=2LLU;
					}
				}
				else if (((_3319_upperdelta == 0LLU) && (_34913_m != _35313_u))) {
					_case_begin_1c38634b4:;
					{
						_3319_upperdelta=1LLU;
					}
				}
				else if (((_3319_upperdelta == 1LLU) && ((_34913_m != '9') || (_35313_u != '0')))) {
					_case_begin_1c386352a:;
					{
						_3319_upperdelta=2LLU;
					}
				}
				_match_end_1c385a70e:;
			};
			jule::Bool _3829_okup = ((_3319_upperdelta > 0LLU) && ((_3185_inclusive || (_3319_upperdelta > 1LLU)) || ((_3359_ui + 1LL) < _2929_upper._field_nd)));;
			{
				
				if ((_3619_okdown && _3829_okup)) {
					_case_begin_1c3865ebc:;
					{
						_2021d490b_round(_26223_d, (_3409_mi + 1LL));
						return;;
					}
				}
				else if (_3619_okdown) {
					_case_begin_1c3866066:;
					{
						_2021d439a_roundDown(_26223_d, (_3409_mi + 1LL));
						return;;
					}
				}
				else if (_3829_okup) {
					_case_begin_1c38660cc:;
					{
						_2021d4653_roundUp(_26223_d, (_3409_mi + 1LL));
						return;;
					}
				}
				_match_end_1c3865e56:;
			};
		}
	_iter_next_1c39ab1de:;
	}
	_iter_end_1c39ab1de:;;
}



inline jule::Slice<jule::U8> _2021c3235_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _2021c0c27_decimalSlice _40137_d, jule::I64 _40154_prec, jule::U8 _40165_fmt) {
	if (_40126_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _4089_ch = '0';;
	if ((_40137_d._field_nd != 0LL)) {
		_4089_ch=_40137_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4089_ch); };
	if ((_40154_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('.'); };
		jule::I64 _41713_i = 1LL;;
		jule::I64 _4189_m = _2021c48c9_min(_40137_d._field_nd, (_40154_prec + 1LL));;
		if ((_41713_i < _4189_m)) {
			(_40113_dst).append(_40137_d._field_d.slice(_41713_i, _4189_m));;
			_41713_i=_4189_m;
		};
		for (; (_41713_i <= _40154_prec); (_41713_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1c386a851:;
		}
		_iter_end_1c386a851:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_40165_fmt); };
	jule::I64 _4309_exp = (_40137_d._field_dp - 1LL);;
	if ((_40137_d._field_nd == 0LL)) {
		_4309_exp=0LL;
	};
	if ((_4309_exp < 0LL)) {
		_4089_ch='-';
		_4309_exp=(-(_4309_exp));
	} else {
		_4089_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4089_ch); };
	{
		
		if ((_4309_exp < 10LL)) {
			_case_begin_1c386cee6:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push((static_cast<jule::U8>(_4309_exp) + '0')); };
			}
		}
		else if ((_4309_exp < 100LL)) {
			_case_begin_1c386d227:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((static_cast<jule::U8>((_4309_exp / 10LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_4309_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1c386c9eb:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((static_cast<jule::U8>((_4309_exp / 100LL)) + '0')); __jule_push_dest.__push(((static_cast<jule::U8>((_4309_exp / 10LL)) % 10LL) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_4309_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1c386c8b9:;
	};
	return _40113_dst;;
}



inline jule::Slice<jule::U8> _2021c371e_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _2021c0c27_decimalSlice _45637_d, jule::I64 _45654_prec) {
	if (_45626_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('-'); };
	};
	if ((_45637_d._field_dp > 0LL)) {
		jule::I64 _46413_m = _2021c48c9_min(_45637_d._field_nd, _45637_d._field_dp);;
		(_45613_dst).append(_45637_d._field_d.slice(0LL, _46413_m));;
		for (; (_46413_m < _45637_d._field_dp); (_46413_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1c3871769:;
		}
		_iter_end_1c3871769:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
	};
	if ((_45654_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('.'); };
		jule::I64 _47513_i = 0LL;;
		for (; (_47513_i < _45654_prec); (_47513_i)++) {
			{
				jule::U8 _47717_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47813_j = (_45637_d._field_dp + _47513_i);;
				if (((0LL <= _47813_j) && (_47813_j < _45637_d._field_nd))) {
					_47717_ch=_45637_d._field_d[_47813_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push(_47717_ch); };
			}
		_iter_next_1c387331a:;
		}
		_iter_end_1c387331a:;;
	};
	return _45613_dst;;
}



inline jule::Slice<jule::U8> _2021c3dc3_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I64 _48952_exp, _2021c009a_floatInfo* _48963_flt) {
	if (_48926_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _2021d8c2e_fmtBits(_48913_dst, _48937_mant, 10LL, false, true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('p'); };
	_48952_exp-=static_cast<jule::I64>((*(_48963_flt))._field_mantbits);
	if ((_48952_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _2021d8c2e_fmtBits(_48913_dst, static_cast<jule::U64>(_48952_exp), 10LL, (_48952_exp < 0LL), true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48913_dst;;
}



inline jule::Slice<jule::U8> _2021c4555_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I64 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5129_mant, jule::I64 _51224_exp, _2021c009a_floatInfo* _51235_flt) {
	if ((_5129_mant == 0LLU)) {
		_51224_exp=0LL;
	};
	_5129_mant<<=(60LLU - (*(_51235_flt))._field_mantbits);
	while (((_5129_mant != 0LLU) && ((_5129_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5129_mant<<=1LLU;
			(_51224_exp)--;
		}
	_iter_next_1c38781dd:;
	}
	_iter_end_1c38781dd:;;
	if (((_51126_prec >= 0LL) && (_51126_prec < 15LL))) {
		jule::U64 _5269_shift = static_cast<jule::U64>((_51126_prec << 2LLU));;
		jule::U64 _5279_extra = ((_5129_mant << _5269_shift) & 1152921504606846975LLU);;
		_5129_mant>>=(60LLU - _5269_shift);
		if (((_5279_extra | (_5129_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5129_mant)++;
		};
		_5129_mant<<=(60LLU - _5269_shift);
		if (((_5129_mant & 2305843009213693952LLU) != 0LLU)) {
			_5129_mant>>=1LLU;
			(_51224_exp)++;
		};
	};
	jule::Str _5409_hex = jule::Str();;
	if ((_51137_fmt == 'X')) {
		_5409_hex=jule::Str::lit("0123456789ABCDEF", 16);
	} else {
		_5409_hex=jule::Str::lit("0123456789abcdef", 16);
	};
	if (_51148_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_51137_fmt); __jule_push_dest.__push(('0' + static_cast<jule::U8>(((_5129_mant >> 60LLU) & 1LLU)))); };
	_5129_mant<<=4LLU;
	if (((_51126_prec < 0LL) && (_5129_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		while ((_5129_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5409_hex[static_cast<jule::I64>(((_5129_mant >> 60LLU) & 15LLU))]); };
				_5129_mant<<=4LLU;
			}
		_iter_next_1c387da95:;
		}
		_iter_end_1c387da95:;;
	} else if ((_51126_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		jule::I64 _56313_i = 0LL;;
		for (; (_56313_i < _51126_prec); (_56313_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5409_hex[static_cast<jule::I64>(((_5129_mant >> 60LLU) & 15LLU))]); };
				_5129_mant<<=4LLU;
			}
		_iter_next_1c388028e:;
		}
		_iter_end_1c388028e:;;
	};
	jule::U8 _5719_ch = static_cast<jule::U8>(80LLU);;
	if ((_51137_fmt == _2021c58db_lower(_51137_fmt))) {
		_5719_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5719_ch); };
	if ((_51224_exp < 0LL)) {
		_5719_ch='-';
		_51224_exp=(-(_51224_exp));
	} else {
		_5719_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5719_ch); };
	{
		
		if ((_51224_exp < 100LL)) {
			_case_begin_1c3882c86:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((static_cast<jule::U8>((_51224_exp / 10LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_51224_exp % 10LL)) + '0')); };
			}
		}
		else if ((_51224_exp < 1000LL)) {
			_case_begin_1c3882318:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((static_cast<jule::U8>((_51224_exp / 100LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>(((_51224_exp / 10LL) % 10LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_51224_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1c3881dc8:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push((static_cast<jule::U8>((_51224_exp / 1000LL)) + '0')); __jule_push_dest.__push(((static_cast<jule::U8>((_51224_exp / 100LL)) % 10LL) + '0')); __jule_push_dest.__push((static_cast<jule::U8>(((_51224_exp / 10LL) % 10LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_51224_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1c3881d73:;
	};
	return _51113_dst;;
}



inline jule::I64 _2021c48c9_min(jule::I64 _5968_a, jule::I64 _59616_b) {
	if ((_5968_a < _59616_b)) {
		return _5968_a;;
	};
	return _59616_b;;
}



inline jule::I64 _2021c4c4d_max(jule::I64 _6038_a, jule::I64 _60316_b) {
	if ((_6038_a > _60316_b)) {
		return _6038_a;;
	};
	return _60316_b;;
}



inline jule::U8 _2021c58db_lower(jule::U8 _4710_c) {
	return (_4710_c | 32LL);;
}



inline __jule_tuple_u64__jule_tuple__201a13724_ConvError _2021c5d5e_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize) {
	__jule_tuple_u64__jule_tuple__201a13724_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (((*(_5119_s))).empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5131_base) && (_5131_base <= 36LL))) {
			_case_begin_1c38889a1:;
		}
		else if ((_5131_base == 0LL)) {
			_case_begin_1c38888d5:;
			{
				_5131_base=10LL;
				if (((*(_5119_s))[0LL] == '0')) {
					{
						
						if ((((*(_5119_s)).len() >= 3LL) && (_2021c58db_lower((*(_5119_s))[1LL]) == 'b'))) {
							_case_begin_1c388a3cb:;
							{
								_5131_base=2LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_2021c58db_lower((*(_5119_s))[1LL]) == 'o'))) {
							_case_begin_1c388a4ca:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_2021c58db_lower((*(_5119_s))[1LL]) == 'x'))) {
							_case_begin_1c388a08a:;
							{
								_5131_base=16LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1c388a024:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(1LL);;
							}
						}
						_match_end_1c3889e58:;
					};
				};
			}
		}
		else {
			_case_begin_1c3887d24:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1c3887cbe:;
	};
	if ((_5146_bitSize == 0LL)) {
		_5146_bitSize=64LL;
	} else if (((_5146_bitSize < 0LL) || (_5146_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _909_cutoff = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5131_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1c388e39c:;
			{
				_909_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1c388e08e:;
			{
				_909_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1c388db60:;
			{
				_909_cutoff=(jule::div(jule::MAX_U64,static_cast<jule::U64>(_5131_base)) + 1LLU);
			}
		}
		_match_end_1c388e039:;
	};
	jule::U64 _1009_maxVal = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5146_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1c388e105:;
			{
				_1009_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1c3889bb1:;
			{
				_1009_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1c3890546:;
	};
	jule::U64 _1089_n = static_cast<jule::U64>(0LLU);;
	{
		auto expr = _5119_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3891404:;
		if (it != expr_end) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11013_d = static_cast<jule::U8>(0LLU);;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1c3892724:;
						{
							_11013_d=(_10912_c - '0');
						}
					}
					else if ((('a' <= _2021c58db_lower(_10912_c)) && (_2021c58db_lower(_10912_c) <= 'z'))) {
						_case_begin_1c3892658:;
						{
							_11013_d=((_2021c58db_lower(_10912_c) - 'a') + 10LLU);
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1c389225c:;
						{
							goto _iter_next_1c3891404;
						}
					}
					else {
						_case_begin_1c38921e6:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1c3892180:;
				};
				if ((_11013_d >= static_cast<jule::U8>(_5131_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
					return __jule_func_result;;
				};
				if ((_1089_n >= _909_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _1009_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1089_n*=static_cast<jule::U64>(_5131_base);
				jule::U64 _1329_n1 = (_1089_n + static_cast<jule::U64>(_11013_d));;
				if (((_1329_n1 < _1089_n) || (_1329_n1 > _1009_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _1009_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1089_n=_1329_n1;
			}
			_iter_next_1c3891404:;
			++it;
			goto _iter_begin_1c3891404;
		}
		_iter_end_1c3891404:;
	};
	__jule_func_result.__jule_result_arg0 = _1089_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _2021c628d_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bitSize) {
	jule::U64 _1475_un;
	jule::I64 _1479_err;
	({
		__jule_tuple_u64__jule_tuple__201a13724_ConvError __jule_assign_result = _2021c5d5e_parseUint(&(_14618_s), _14630_base, _14645_bitSize);
		_1475_un = __jule_assign_result.__jule_result_arg0;
		_1479_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1479_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>{.error=jule::Any(_1479_err, &__jule_any_type0)};
	};
	return jule::Exceptional<jule::U64>{.result=_1475_un};;
}



inline jule::Exceptional<jule::I64> _2021c6744_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if ((_17217_s).empty()) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
	};
	jule::Bool _1789_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_1789_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _1879_un;
	jule::I64 _18713_err;
	({
		__jule_tuple_u64__jule_tuple__201a13724_ConvError __jule_assign_result = _2021c5d5e_parseUint(&(_17217_s), _17225_base, _17240_bitSize);
		_1879_un = __jule_assign_result.__jule_result_arg0;
		_18713_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18713_err != static_cast<jule::I64>(0LL)) && (_18713_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_18713_err, &__jule_any_type0)};
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1965_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17240_bitSize - 1LL))));;
	if (((!(_1789_neg)) && (_1879_un >= _1965_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0)};
	};
	if ((_1789_neg && (_1879_un > _1965_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0)};
	};
	jule::I64 _2039_n = static_cast<jule::I64>(_1879_un);;
	if (_1789_neg) {
		_2039_n=(-(_2039_n));
	};
	return jule::Exceptional<jule::I64>{.result=_2039_n};;
}



inline __jule_tuple_f64__jule_tuple_bool _2021c7404_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=_2020879ce_F64FromBits(9223372036854775808LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _575_clz = _20217a2a8_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U64>(_575_clz);
	;
	jule::U64 _609_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_575_clz));;
	jule::U64 _639_xHi;
	jule::U64 _6318_xLo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _2021851d6_Mul64(_4122_man, _2021c826d_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_639_xHi = __jule_assign_result.__jule_result_arg0;
		_6318_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_639_xHi & 511LLU) == 511LLU) && ((_6318_xLo + _4122_man) < _4122_man))) {
		jule::U64 _679_yHi;
		jule::U64 _6714_yLo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _2021851d6_Mul64(_4122_man, _2021c826d_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_679_yHi = __jule_assign_result.__jule_result_arg0;
			_6714_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _6813_mergedHi;
		jule::U64 _6823_mergedLo;
		({
			jule::U64 ___jule_assign_arg = _639_xHi;
			jule::U64 _1___jule_assign_arg = (_6318_xLo + _679_yHi);
			_6813_mergedHi = ___jule_assign_arg;
			_6823_mergedLo = _1___jule_assign_arg;
		});
		if ((_6823_mergedLo < _6318_xLo)) {
			(_6813_mergedHi)++;
		};
		if (((((_6813_mergedHi & 511LLU) == 511LLU) && ((_6823_mergedLo + 1LLU) == 0LLU)) && ((_6714_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _6813_mergedHi;
			jule::U64 _1___jule_assign_arg = _6823_mergedLo;
			_639_xHi = ___jule_assign_arg;
			_6318_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _795_msb = (_639_xHi >> 63LLU);;
	jule::U64 _809_retMantissa = (_639_xHi >> (_795_msb + 9LLU));;
	_609_retExp2-=(1LLU ^ _795_msb);
	if ((((_6318_xLo == 0LLU) && ((_639_xHi & 511LLU) == 0LLU)) && ((_809_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_809_retMantissa+=(_809_retMantissa & 1LLU);
	_809_retMantissa>>=1LLU;
	if (((_809_retMantissa >> 53LLU) > 0LLU)) {
		_809_retMantissa>>=1LLU;
		_609_retExp2+=1LLU;
	};
	if (((_609_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1039_retBits = ((_609_retExp2 << 52LLU) | (_809_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_1039_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = _2020879ce_F64FromBits(_1039_retBits);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _2021c7877_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=_2020873c4_F32FromBits(2147483648LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _1325_clz = _20217a2a8_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U64>(_1325_clz);
	;
	jule::U64 _1359_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1325_clz));;
	jule::U64 _1389_x_hi;
	jule::U64 _13819_x_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _2021851d6_Mul64(_11022_man, _2021c826d_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_1389_x_hi = __jule_assign_result.__jule_result_arg0;
		_13819_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_1389_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13819_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _1429_y_hi;
		jule::U64 _14215_y_lo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _2021851d6_Mul64(_11022_man, _2021c826d_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_1429_y_hi = __jule_assign_result.__jule_result_arg0;
			_14215_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _14313_merged_hi;
		jule::U64 _14324_merged_lo;
		({
			jule::U64 ___jule_assign_arg = _1389_x_hi;
			jule::U64 _1___jule_assign_arg = (_13819_x_lo + _1429_y_hi);
			_14313_merged_hi = ___jule_assign_arg;
			_14324_merged_lo = _1___jule_assign_arg;
		});
		if ((_14324_merged_lo < _13819_x_lo)) {
			(_14313_merged_hi)++;
		};
		if (((((_14313_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14324_merged_lo + 1LLU) == 0LLU)) && ((_14215_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _14313_merged_hi;
			jule::U64 _1___jule_assign_arg = _14324_merged_lo;
			_1389_x_hi = ___jule_assign_arg;
			_13819_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1545_msb = (_1389_x_hi >> 63LLU);;
	jule::U64 _1559_retMantissa = (_1389_x_hi >> (_1545_msb + 38LLU));;
	_1359_retExp2-=(1LLU ^ _1545_msb);
	if ((((_13819_x_lo == 0LLU) && ((_1389_x_hi & 274877906943LLU) == 0LLU)) && ((_1559_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_1559_retMantissa+=(_1559_retMantissa & 1LLU);
	_1559_retMantissa>>=1LLU;
	if (((_1559_retMantissa >> 24LLU) > 0LLU)) {
		_1559_retMantissa>>=1LLU;
		_1359_retExp2+=1LLU;
	};
	if (((_1359_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1789_retBits = ((_1359_retExp2 << 23LLU) | (_1559_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_1789_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = _2020873c4_F32FromBits(static_cast<jule::U32>(_1789_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I64 _2021c9659_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix) {
	jule::I64 _479_n = _4638_prefix.len();;
	if ((_479_n > _4630_s.len())) {
		_479_n=_4630_s.len();
	};
	jule::I64 _519_i = 0LL;;
	for (; (_519_i < _479_n); (_519_i)++) {
		{
			jule::U8 _5313_c = _4630_s[_519_i];;
			if ((('A' <= _5313_c) && (_5313_c <= 'Z'))) {
				_5313_c+=32LL;
			};
			if ((_5313_c != _4638_prefix[_519_i])) {
				return _519_i;;
			};
		}
	_iter_next_1c38b6e30:;
	}
	_iter_end_1c38b6e30:;;
	return _479_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _2021c9967_special(jule::Str _6912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_6912_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I64 _739_sign = 1LL;;
	jule::I64 _749_nsign = 0LL;;
	{
		auto &_match_expr{ _6912_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1c38ba780:;
			{
				if ((_6912_s[0LL] == '-')) {
					_739_sign=-1LL;
				};
				_749_nsign=1LL;
				{
					jule::Str* _8317_sp = (&(_6912_s));;
					((*(_8317_sp))).mut_slice(1LL);;
				};
				goto _case_begin_1c38ba7e6;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1c38ba7e6:;
			{
				jule::I64 _8813_caseN = _2021c9659_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("infinity", 8));;
				if (((3LL < _8813_caseN) && (_8813_caseN < 8LL))) {
					_8813_caseN=3LL;
				};
				if (((_8813_caseN == 3LL) || (_8813_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = _20218c8e7_Inf(_739_sign);
					__jule_func_result.__jule_result_arg1 = (_749_nsign + __jule_func_result.__jule_result_arg1);
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1c38ba85c:;
			{
				if ((_2021c9659_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = _20218c320_NaN();
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1c38ba6d6:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _2021c9c31_readFloat(jule::Str* _10815_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
		return __jule_func_result;;
	};
	{
		
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1c38c0d90:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1c38c0e06:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1c38c0994:;
	};
	jule::U64 _1229_base = static_cast<jule::U64>(10LLU);;
	jule::I64 _1239_maxMantDigits = 19LL;;
	jule::U8 _1249_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < (*(_10815_s)).len()) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '0')) && (_2021c58db_lower((*(_10815_s))[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_1229_base=16LLU;
		_1239_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_1249_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _1329_sawdot = false;;
	jule::Bool _1339_sawdigits = false;;
	jule::I64 _1349_nd = 0LL;;
	jule::I64 _1359_ndMant = 0LL;;
	jule::I64 _1369_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _1389_c = (*(_10815_s))[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_1389_c == '_')) {
					_case_begin_1c38c5dd9:;
					{
						goto _iter_next_1c38c5229;
					}
				}
				else if ((_1389_c == '.')) {
					_case_begin_1c38c5e83:;
					{
						if (_1329_sawdot) {
							goto _julec_label_1c2a827b1;
						};
						_1329_sawdot=true;
						_1369_dp=_1349_nd;
						goto _iter_next_1c38c5229;
					}
				}
				else if ((('0' <= _1389_c) && (_1389_c <= '9'))) {
					_case_begin_1c38c5ee9:;
					{
						_1339_sawdigits=true;
						if (((_1389_c == '0') && (_1349_nd == 0LL))) {
							(_1369_dp)--;
							goto _iter_next_1c38c5229;
						};
						(_1349_nd)++;
						if ((_1359_ndMant < _1239_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_1229_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((_1389_c - '0'));
							(_1359_ndMant)++;
						} else if ((_1389_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1c38c5229;
					}
				}
				else if ((((_1229_base == 16LLU) && ('a' <= _2021c58db_lower(_1389_c))) && (_2021c58db_lower(_1389_c) <= 'f'))) {
					_case_begin_1c38c6060:;
					{
						_1339_sawdigits=true;
						(_1349_nd)++;
						if ((_1359_ndMant < _1239_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>(((_2021c58db_lower(_1389_c) - 'a') + 10LLU));
							(_1359_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1c38c5229;
					}
				}
				_match_end_1c38c5d0c:;
			};
			goto _iter_end_1c38c5229;
		}
	_iter_next_1c38c5229:;
	}
	_iter_end_1c38c5229:;;
	_julec_label_1c2a827b1:;
	if ((!(_1339_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_1329_sawdot))) {
		_1369_dp=_1349_nd;
	};
	if ((_1229_base == 16LLU)) {
		_1369_dp*=4LL;
		_1359_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && (_2021c58db_lower((*(_10815_s))[__jule_func_result.__jule_result_arg5]) == _1249_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
			return __jule_func_result;;
		};
		jule::I64 _20113_esign = 1LL;;
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_20113_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len()) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] < '0')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _21113_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && ((('0' <= (*(_10815_s))[__jule_func_result.__jule_result_arg5]) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] <= '9')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1c2a852ec;
				};
				if ((_21113_e < 10000LL)) {
					_21113_e=(((_21113_e * 10LL) + static_cast<jule::I64>((*(_10815_s))[__jule_func_result.__jule_result_arg5])) - '0');
				};
			}
		_iter_next_1c2a852ec:;
		}
		_iter_end_1c2a852ec:;;
		_1369_dp+=(_21113_e * _20113_esign);
	} else if ((_1229_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=(_1369_dp - _1359_ndMant);
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _2021cb77c_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_48616_mantissa >> _2021c0793_f64info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_48616_mantissa);
	if (_48645_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_48635_exp == 0LL)) {
			_case_begin_1c2a8e306:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp > 0LL) && (_48635_exp <= 37LL))) {
			_case_begin_1c2a8e36c:;
			{
				if ((_48635_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_2021cab44_f64pow10[(_48635_exp - 22LL)];
					_48635_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _2021cab44_f64pow10[_48635_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp < 0LL) && (_48635_exp >= -22LL))) {
			_case_begin_1c2a8e3d3:;
			{
				__jule_func_result.__jule_result_arg0 = jule::div(__jule_func_result.__jule_result_arg0,_2021cab44_f64pow10[(-(_48635_exp))]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1c2a8dc1d:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _2021cbbab_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_52016_mantissa >> _2021c0496_f32info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_52016_mantissa);
	if (_52049_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_52035_exp == 0LL)) {
			_case_begin_1c2a9354c:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp > 0LL) && (_52035_exp <= 17LL))) {
			_case_begin_1c2a935b3:;
			{
				if ((_52035_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_2021cae74_f32pow10[(_52035_exp - 10LL)];
					_52035_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _2021cae74_f32pow10[_52035_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp < 0LL) && (_52035_exp >= -10LL))) {
			_case_begin_1c2a93629:;
			{
				__jule_func_result.__jule_result_arg0 = jule::div(__jule_func_result.__jule_result_arg0,_2021cae74_f32pow10[(-(_52035_exp))]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1c2a92e64:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__201a13724_ConvError _2021cc250_atofHex(_2021c009a_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc) {
	__jule_tuple_f64__jule_tuple__201a13724_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I64 _5575_maxExp = ((static_cast<jule::I64>((1LL << (*(_55613_flt))._field_expbits)) + (*(_55613_flt))._field_bias) - 2LL);;
	jule::I64 _5585_minExp = ((*(_55613_flt))._field_bias + 1LL);;
	_55652_exp+=static_cast<jule::I64>((*(_55613_flt))._field_mantbits);
	while (((_55633_mantissa != 0LLU) && ((_55633_mantissa >> ((*(_55613_flt))._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55633_mantissa<<=1LLU;
			(_55652_exp)--;
		}
	_iter_next_1c2a96e46:;
	}
	_iter_end_1c2a96e46:;;
	if (_55673_trunc) {
		_55633_mantissa|=1LLU;
	};
	while (((_55633_mantissa >> ((1LLU + (*(_55613_flt))._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1c2a99322:;
	}
	_iter_end_1c2a99322:;;
	while (((_55633_mantissa > 1LLU) && (_55652_exp < (_5585_minExp - 2LL)))) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1c2a996a7:;
	}
	_iter_end_1c2a996a7:;;
	jule::U64 _5889_round = (_55633_mantissa & 3LLU);;
	_55633_mantissa>>=2LLU;
	_5889_round|=(_55633_mantissa & 1LLU);
	_55652_exp+=2LL;
	if ((_5889_round == 3LLU)) {
		(_55633_mantissa)++;
		if ((_55633_mantissa == (1LLU << (1LLU + (*(_55613_flt))._field_mantbits)))) {
			_55633_mantissa>>=1LLU;
			(_55652_exp)++;
		};
	};
	if (((_55633_mantissa >> (*(_55613_flt))._field_mantbits) == 0LLU)) {
		_55652_exp=(*(_55613_flt))._field_bias;
	};
	jule::I64 _6039_err = static_cast<jule::I64>(0LL);;
	if ((_55652_exp > _5575_maxExp)) {
		_55633_mantissa=static_cast<jule::U64>((1LL << (*(_55613_flt))._field_mantbits));
		_55652_exp=(_5575_maxExp + 1LL);
		_6039_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _6109_bits = (_55633_mantissa & ((1LLU << (*(_55613_flt))._field_mantbits) - 1LLU));;
	_6109_bits|=(static_cast<jule::U64>(((_55652_exp - (*(_55613_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_55613_flt))._field_expbits) - 1LL)))) << (*(_55613_flt))._field_mantbits);
	if (_55662_neg) {
		_6109_bits|=((1LLU << (*(_55613_flt))._field_mantbits) << (*(_55613_flt))._field_expbits);
	};
	if (((*(_55613_flt)) == _2021c0496_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_2020873c4_F32FromBits(static_cast<jule::U32>(_6109_bits)));
		__jule_func_result.__jule_result_arg1 = _6039_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _2020879ce_F64FromBits(_6109_bits);
	__jule_func_result.__jule_result_arg1 = _6039_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__201a13724_ConvError _2021cc629_atof32(jule::Str _62111_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__201a13724_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6239_val;
		jule::I64 _62314__n;
		jule::Bool _62318_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _2021c9967_special(_62111_s);
			_6239_val = __jule_assign_result.__jule_result_arg0;
			_62314__n = __jule_assign_result.__jule_result_arg1;
			_62318_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_62318_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6239_val);
			__jule_func_result.__jule_result_arg1 = _62314__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6295_mantissa;
	jule::I64 _62915_exp;
	jule::Bool _62920_neg;
	jule::Bool _62925_trunc;
	jule::Bool _62932_hex;
	jule::I64 _62937__n;
	jule::Bool _62945_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _2021c9c31_readFloat(&(_62111_s));
		_6295_mantissa = __jule_assign_result.__jule_result_arg0;
		_62915_exp = __jule_assign_result.__jule_result_arg1;
		_62920_neg = __jule_assign_result.__jule_result_arg2;
		_62925_trunc = __jule_assign_result.__jule_result_arg3;
		_62932_hex = __jule_assign_result.__jule_result_arg4;
		_62937__n = __jule_assign_result.__jule_result_arg5;
		_62945_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62937__n;
	if ((!(_62945_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_62932_hex) {
		jule::F64 _63613_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__201a13724_ConvError __jule_assign_result = _2021cc250_atofHex(&(_2021c0496_f32info), _6295_mantissa, _62915_exp, _62920_neg, _62925_trunc);
			_63613_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_63613_ff);
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62925_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _2021cbbab_atof32exact(_6295_mantissa, _62915_exp, _62920_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62945_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62945_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _2021c7877_eiselLemire32(_6295_mantissa, _62915_exp, _62920_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62945_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62945_ok) {
			if ((!(_62925_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _65817_fUp = static_cast<jule::F32>(0.0f);;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _2021c7877_eiselLemire32((_6295_mantissa + 1LLU), _62915_exp, _62920_neg);
				_65817_fUp = __jule_assign_result.__jule_result_arg0;
				_62945_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62945_ok && (__jule_func_result.__jule_result_arg0 == _65817_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_2021d3982_decimal _6679_d = _2021d3982_decimal{};;
	if ((!(_2021ca3b3_set(&_6679_d, _234c75d2c_StrBytes(_62111_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _6715_b;
	jule::Bool _6718_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _2021ca704_floatBits(&_6679_d, &(_2021c0496_f32info));
		_6715_b = __jule_assign_result.__jule_result_arg0;
		_6718_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_2020873c4_F32FromBits(static_cast<jule::U32>(_6715_b));
	if (_6718_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__201a13724_ConvError _2021cc86b_atof64(jule::Str _67911_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__201a13724_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6819_val;
		jule::I64 _68114__n;
		jule::Bool _68118_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _2021c9967_special(_67911_s);
			_6819_val = __jule_assign_result.__jule_result_arg0;
			_68114__n = __jule_assign_result.__jule_result_arg1;
			_68118_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_68118_ok) {
			__jule_func_result.__jule_result_arg0 = _6819_val;
			__jule_func_result.__jule_result_arg1 = _68114__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6875_mantissa;
	jule::I64 _68715_exp;
	jule::Bool _68720_neg;
	jule::Bool _68725_trunc;
	jule::Bool _68732_hex;
	jule::I64 _68737__n;
	jule::Bool _68745_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _2021c9c31_readFloat(&(_67911_s));
		_6875_mantissa = __jule_assign_result.__jule_result_arg0;
		_68715_exp = __jule_assign_result.__jule_result_arg1;
		_68720_neg = __jule_assign_result.__jule_result_arg2;
		_68725_trunc = __jule_assign_result.__jule_result_arg3;
		_68732_hex = __jule_assign_result.__jule_result_arg4;
		_68737__n = __jule_assign_result.__jule_result_arg5;
		_68745_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68737__n;
	if ((!(_68745_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_68732_hex) {
		({
			__jule_tuple_f64__jule_tuple__201a13724_ConvError __jule_assign_result = _2021cc250_atofHex(&(_2021c0793_f64info), _6875_mantissa, _68715_exp, _68720_neg, _68725_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68725_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _2021cb77c_atof64exact(_6875_mantissa, _68715_exp, _68720_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68745_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68745_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _2021c7404_eiselLemire64(_6875_mantissa, _68715_exp, _68720_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68745_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68745_ok) {
			if ((!(_68725_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _71517_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _2021c7404_eiselLemire64((_6875_mantissa + 1LLU), _68715_exp, _68720_neg);
				_71517_fUp = __jule_assign_result.__jule_result_arg0;
				_68745_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68745_ok && (__jule_func_result.__jule_result_arg0 == _71517_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_2021d3982_decimal _7249_d = _2021d3982_decimal{};;
	if ((!(_2021ca3b3_set(&_7249_d, _234c75d2c_StrBytes(_67911_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _7285_b;
	jule::Bool _7288_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _2021ca704_floatBits(&_7249_d, &(_2021c0793_f64info));
		_7285_b = __jule_assign_result.__jule_result_arg0;
		_7288_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_2020879ce_F64FromBits(_7285_b);
	if (_7288_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__201a13724_ConvError _2021ccbe0_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__201a13724_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73630_bitSize == 32LL)) {
		jule::F32 _7389_f;
		jule::I64 _73812_n;
		jule::I64 _73815_err;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__201a13724_ConvError __jule_assign_result = _2021cc629_atof32((*(_73622_s)));
			_7389_f = __jule_assign_result.__jule_result_arg0;
			_73812_n = __jule_assign_result.__jule_result_arg1;
			_73815_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_7389_f);
		__jule_func_result.__jule_result_arg1 = _73812_n;
		__jule_func_result.__jule_result_arg2 = _73815_err;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_2021cc86b_atof64((*(_73622_s))));
return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _2021cd064_ParseFloat(jule::Str _76815_s, jule::I64 _76823_bitSize) {
	jule::F64 _7695_f;
	jule::I64 _7698_n;
	jule::I64 _76911_err;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__201a13724_ConvError __jule_assign_result = _2021ccbe0_parseFloatPrefix(&(_76815_s), _76823_bitSize);
		_7695_f = __jule_assign_result.__jule_result_arg0;
		_7698_n = __jule_assign_result.__jule_result_arg1;
		_76911_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_7698_n != _76815_s.len()) && ((_76911_err == static_cast<jule::I64>(0LL)) || (_76911_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
	};
	if ((_76911_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(_76911_err, &__jule_any_type0)};
	};
	return jule::Exceptional<jule::F64>{.result=_7695_f};;
}



inline void _2021cd8e4_ryuFtoaFixed32(_2021c0c27_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _629_e2 = _4956_exp;;
	jule::I64 _635_b = _202182876_Len32(_4945_mant);;
	if ((_635_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U64>((25LL - _635_b));
		_629_e2+=(static_cast<jule::I64>(_635_b) - 25LL);
	};
	jule::I64 _745_q = (((-(_2021cee34_mulByLog2Log10((_629_e2 + 24LL)))) + _4966_prec) - 1LL);;
	jule::Bool _799_exact = ((_745_q <= 27LL) && (_745_q >= 0LL));;
	jule::U32 _819_di;
	jule::I64 _8113_dexp2;
	jule::Bool _8124_d0;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _2021d182b_mult64bitPow10(_4945_mant, _629_e2, _745_q);
		_819_di = __jule_assign_result.__jule_result_arg0;
		_8113_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8124_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8113_dexp2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_745_q < 0LL) && (_745_q >= -10LL)) && _2021d20ce_divisibleByPow5(static_cast<jule::U64>(_4945_mant), (-(_745_q))))) {
		_799_exact=true;
		_8124_d0=true;
	};
	jule::U64 _945_extra = static_cast<jule::U64>((-(_8113_dexp2)));;
	jule::U32 _955_extraMask = static_cast<jule::U32>(((1LL << _945_extra) - 1LL));;
	jule::U32 _979_dfrac = static_cast<jule::U32>(0LLU);;
	({
		jule::U32 ___jule_assign_arg = (_819_di >> _945_extra);
		jule::U32 _1___jule_assign_arg = (_819_di & _955_extraMask);
		_819_di = ___jule_assign_arg;
		_979_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _999_roundUp = false;;
	if (_799_exact) {
		_999_roundUp=(((_979_dfrac > (1LLU << (_945_extra - 1LLU))) || ((_979_dfrac == (1LLU << (_945_extra - 1LLU))) && (!(_8124_d0)))) || (((_979_dfrac == (1LLU << (_945_extra - 1LLU))) && _8124_d0) && ((_819_di & 1LLU) == 1LLU)));
	} else {
		_999_roundUp=((_979_dfrac >> (_945_extra - 1LLU)) == 1LLU);
	};
	if ((_979_dfrac != 0LLU)) {
		_8124_d0=false;
	};
	_2021ce6c5_formatDecimal(_4924_d, static_cast<jule::U64>(_819_di), (!(_8124_d0)), _999_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_745_q;
}



inline void _2021cdd89_ryuFtoaFixed64(_2021c0c27_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _1319_e2 = _12156_exp;;
	jule::I64 _1325_b = _202182b40_Len64(_12145_mant);;
	if ((_1325_b < 55LL)) {
		_12145_mant=(_12145_mant << static_cast<jule::U64>((55LL - _1325_b)));
		_1319_e2+=(static_cast<jule::I64>(_1325_b) - 55LL);
	};
	jule::I64 _1465_q = (((-(_2021cee34_mulByLog2Log10((_1319_e2 + 54LL)))) + _12166_prec) - 1LL);;
	jule::Bool _1519_exact = ((_1465_q <= 55LL) && (_1465_q >= 0LL));;
	jule::U64 _1539_di;
	jule::I64 _15313_dexp2;
	jule::Bool _15324_d0;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _2021d1c5a_mult128bitPow10(_12145_mant, _1319_e2, _1465_q);
		_1539_di = __jule_assign_result.__jule_result_arg0;
		_15313_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15324_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15313_dexp2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1465_q < 0LL) && (_1465_q >= -22LL)) && _2021d20ce_divisibleByPow5(_12145_mant, (-(_1465_q))))) {
		_1519_exact=true;
		_15324_d0=true;
	};
	jule::U64 _1665_extra = static_cast<jule::U64>((-(_15313_dexp2)));;
	jule::U64 _1675_extraMask = static_cast<jule::U64>(((1LL << _1665_extra) - 1LL));;
	jule::U64 _1699_dfrac = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = (_1539_di >> _1665_extra);
		jule::U64 _1___jule_assign_arg = (_1539_di & _1675_extraMask);
		_1539_di = ___jule_assign_arg;
		_1699_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _1719_roundUp = false;;
	if (_1519_exact) {
		_1719_roundUp=(((_1699_dfrac > (1LLU << (_1665_extra - 1LLU))) || ((_1699_dfrac == (1LLU << (_1665_extra - 1LLU))) && (!(_15324_d0)))) || (((_1699_dfrac == (1LLU << (_1665_extra - 1LLU))) && _15324_d0) && ((_1539_di & 1LLU) == 1LLU)));
	} else {
		_1719_roundUp=((_1699_dfrac >> (_1665_extra - 1LLU)) == 1LLU);
	};
	if ((_1699_dfrac != 0LLU)) {
		_15324_d0=false;
	};
	_2021ce6c5_formatDecimal(_12124_d, _1539_di, (!(_15324_d0)), _1719_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1465_q;
}



inline void _2021ce6c5_formatDecimal(_2021c0c27_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2015_max = _2021ce1ca_u64pow10[_20088_prec];;
	jule::I64 _2029_trimmed = 0LL;;
	while ((_20044_m >= _2015_max)) {
		{
			jule::U64 _2049_a;
			jule::U64 _20412_b;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_2049_a = ___jule_assign_arg;
				_20412_b = _1___jule_assign_arg;
			});
			_20044_m=_2049_a;
			(_2029_trimmed)++;
			if ((_20412_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20412_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20412_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1c3b12873:;
	}
	_iter_end_1c3b12873:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2015_max)) {
		_20044_m/=10LLU;
		(_2029_trimmed)++;
	};
	jule::U64 _2299_n = static_cast<jule::U64>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I64>(_20088_prec);
	jule::U64 _2319_v = _20044_m;;
	while ((_2319_v >= 100LLU)) {
		{
			jule::U64 _23313_v1 = static_cast<jule::U64>(0LLU);;
			jule::U64 _23413_v2 = static_cast<jule::U64>(0LLU);;
			if (((_2319_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2319_v) / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2319_v) % 100LL));
					_23313_v1 = ___jule_assign_arg;
					_23413_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = (_2319_v / 100LLU);
					jule::U64 _1___jule_assign_arg = (_2319_v % 100LL);
					_23313_v1 = ___jule_assign_arg;
					_23413_v2 = _1___jule_assign_arg;
				});
			};
			_2299_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I64>((_2299_n + 1LLU))]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(((2LL * _23413_v2) + 1LLU)));
			(*(_20023_d))._field_d[static_cast<jule::I64>(_2299_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((2LL * _23413_v2)));
			_2319_v=_23313_v1;
		}
	_iter_next_1c3c51253:;
	}
	_iter_end_1c3c51253:;;
	if ((_2319_v > 0LLU)) {
		(_2299_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2299_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(((2LL * _2319_v) + 1LLU)));
	};
	if ((_2319_v >= 10LLU)) {
		(_2299_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2299_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((2LL * _2319_v)));
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_2029_trimmed)++;
		}
	_iter_next_1c3c56544:;
	}
	_iter_end_1c3c56544:;;
	(*(_20023_d))._field_dp=((*(_20023_d))._field_nd + _2029_trimmed);
}



inline void _2021ceb9d_ryuFtoaShortest(_2021c0c27_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _2021c009a_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_20217bd9d_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U64>((-(_26157_exp)));
		_2021d0c7b_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _2735_ml;
	jule::U64 _2739_mc;
	jule::U64 _27313_mu;
	jule::I64 _27321_e2;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _2021d062c_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_2735_ml = __jule_assign_result.__jule_result_arg0;
		_2739_mc = __jule_assign_result.__jule_result_arg1;
		_27313_mu = __jule_assign_result.__jule_result_arg2;
		_27321_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27321_e2 == 0LL)) {
		_2021d0c7b_ryuDigits(_26125_d, _2735_ml, _2739_mc, _27313_mu, true, false);
		return;;
	};
	jule::I64 _2795_q = (_2021cee34_mulByLog2Log10((-(_27321_e2))) + 1LL);;
	jule::U64 _2839_dl = static_cast<jule::U64>(0LLU);;
	jule::U64 _2849_dc = static_cast<jule::U64>(0LLU);;
	jule::U64 _2859_du = static_cast<jule::U64>(0LLU);;
	jule::Bool _2869_dl0 = false;;
	jule::Bool _2879_dc0 = false;;
	jule::Bool _2889_du0 = false;;
	if (((*(_26168_flt)) == _2021c0496_f32info)) {
		jule::U32 _29013_dl32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _29113_dc32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _29213_du32 = static_cast<jule::U32>(0LLU);;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _2021d182b_mult64bitPow10(static_cast<jule::U32>(_2735_ml), _27321_e2, _2795_q);
			_29013_dl32 = __jule_assign_result.__jule_result_arg0;
			_2869_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _2021d182b_mult64bitPow10(static_cast<jule::U32>(_2739_mc), _27321_e2, _2795_q);
			_29113_dc32 = __jule_assign_result.__jule_result_arg0;
			_2879_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _2021d182b_mult64bitPow10(static_cast<jule::U32>(_27313_mu), _27321_e2, _2795_q);
			_29213_du32 = __jule_assign_result.__jule_result_arg0;
			_27321_e2 = __jule_assign_result.__jule_result_arg1;
			_2889_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(_29013_dl32);
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(_29113_dc32);
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(_29213_du32);
			_2839_dl = ___jule_assign_arg;
			_2849_dc = _1___jule_assign_arg;
			_2859_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _2021d1c5a_mult128bitPow10(_2735_ml, _27321_e2, _2795_q);
			_2839_dl = __jule_assign_result.__jule_result_arg0;
			_2869_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _2021d1c5a_mult128bitPow10(_2739_mc, _27321_e2, _2795_q);
			_2849_dc = __jule_assign_result.__jule_result_arg0;
			_2879_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _2021d1c5a_mult128bitPow10(_27313_mu, _27321_e2, _2795_q);
			_2859_du = __jule_assign_result.__jule_result_arg0;
			_27321_e2 = __jule_assign_result.__jule_result_arg1;
			_2889_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27321_e2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2795_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_2869_dl0 = ___jule_assign_arg;
			_2879_dc0 = _1___jule_assign_arg;
			_2889_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2795_q < 0LL) && (_2795_q >= -24LL))) {
		if (_2021d20ce_divisibleByPow5(_2735_ml, (-(_2795_q)))) {
			_2869_dl0=true;
		};
		if (_2021d20ce_divisibleByPow5(_2739_mc, (-(_2795_q)))) {
			_2879_dc0=true;
		};
		if (_2021d20ce_divisibleByPow5(_27313_mu, (-(_2795_q)))) {
			_2889_du0=true;
		};
	};
	jule::U64 _3255_extra = static_cast<jule::U64>((-(_27321_e2)));;
	jule::U64 _3265_extraMask = static_cast<jule::U64>(((1LL << _3255_extra) - 1LL));;
	jule::U64 _3289_fracl = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = (_2839_dl >> _3255_extra);
		jule::U64 _1___jule_assign_arg = (_2839_dl & _3265_extraMask);
		_2839_dl = ___jule_assign_arg;
		_3289_fracl = _1___jule_assign_arg;
	});
	jule::U64 _3309_fracc = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = (_2849_dc >> _3255_extra);
		jule::U64 _1___jule_assign_arg = (_2849_dc & _3265_extraMask);
		_2849_dc = ___jule_assign_arg;
		_3309_fracc = _1___jule_assign_arg;
	});
	jule::U64 _3329_fracu = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = (_2859_du >> _3255_extra);
		jule::U64 _1___jule_assign_arg = (_2859_du & _3265_extraMask);
		_2859_du = ___jule_assign_arg;
		_3329_fracu = _1___jule_assign_arg;
	});
	jule::Bool _3389_uok = ((!(_2889_du0)) || (_3329_fracu > 0LLU));;
	if ((_2889_du0 && (_3329_fracu == 0LLU))) {
		_3389_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_3389_uok))) {
		(_2859_du)--;
	};
	jule::Bool _3479_cup = false;;
	if (_2879_dc0) {
		_3479_cup=((_3309_fracc > (1LLU << (_3255_extra - 1LLU))) || ((_3309_fracc == (1LLU << (_3255_extra - 1LLU))) && ((_2849_dc & 1LLU) == 1LLU)));
	} else {
		_3479_cup=((_3309_fracc >> (_3255_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3615_lok = ((_2869_dl0 && (_3289_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3615_lok))) {
		(_2839_dl)++;
	};
	jule::Bool _3665_c0 = (_2879_dc0 && (_3309_fracc == 0LLU));;
	_2021d0c7b_ryuDigits(_26125_d, _2839_dl, _2849_dc, _2859_du, _3665_c0, _3479_cup);
	(*(_26125_d))._field_dp-=_2795_q;
}



inline jule::I64 _2021cee34_mulByLog2Log10(jule::I64 _37719_x) {
	return ((_37719_x * 78913LL) >> 18LL);;
}



inline jule::I64 _2021d01ed_mulByLog10Log2(jule::I64 _38719_x) {
	return ((_38719_x * 108853LL) >> 15LL);;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _2021d062c_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _2021c009a_floatInfo* _3966_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != (1LLU << (*(_3966_flt))._field_mantbits)) || (_39529_exp == (((*(_3966_flt))._field_bias + 1LL) - static_cast<jule::I64>((*(_3966_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = ((2LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (2LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = ((2LL * _39518_mant) + 1LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 1LL);
	} else {
		({
			jule::U64 ___jule_assign_arg = ((4LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (4LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = ((4LL * _39518_mant) + 2LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 2LL);
	};
	return __jule_func_result;;
}



inline void _2021d0c7b_ryuDigits(_2021c0c27_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _4109_lhi;
	jule::U32 _41014_llo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _2021d2398_divmod1e9(_40936_lower);
		_4109_lhi = __jule_assign_result.__jule_result_arg0;
		_41014_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4115_chi;
	jule::U32 _41110_clo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _2021d2398_divmod1e9(_40948_central);
		_4115_chi = __jule_assign_result.__jule_result_arg0;
		_41110_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4125_uhi;
	jule::U32 _41210_ulo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _2021d2398_divmod1e9(_40962_upper);
		_4125_uhi = __jule_assign_result.__jule_result_arg0;
		_41210_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4125_uhi == 0LLU)) {
		_2021d13ec_ryuDigits32(_40919_d, _41014_llo, _41110_clo, _41210_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_4109_lhi < _4125_uhi)) {
		if ((_41014_llo != 0LLU)) {
			(_4109_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41110_clo == 0LLU));
		_40992_cup=((_41110_clo > 500000000LL) || ((_41110_clo == 500000000LL) && _40992_cup));
		_2021d13ec_ryuDigits32(_40919_d, _4109_lhi, _4115_chi, _4125_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U64 _42813_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42913_v = _4115_chi;;
		while ((_42913_v > 0LLU)) {
			{
				jule::U32 _43113_v1;
				jule::U32 _43117_v2;
				({
					jule::U32 ___jule_assign_arg = (_42913_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_42913_v % 10LL);
					_43113_v1 = ___jule_assign_arg;
					_43117_v2 = _1___jule_assign_arg;
				});
				_42913_v=_43113_v1;
				(_42813_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I64>(_42813_n)]=static_cast<jule::U8>((_43117_v2 + '0'));
			}
		_iter_next_1c3c754ca:;
		}
		_iter_end_1c3c754ca:;;
		((*(_40919_d))._field_d).mut_slice(static_cast<jule::I64>(_42813_n));;
		(*(_40919_d))._field_nd=static_cast<jule::I64>((9LL - _42813_n));
		_2021d13ec_ryuDigits32(_40919_d, _41014_llo, _41110_clo, _41210_ulo, _40978_c0, _40992_cup, ((*(_40919_d))._field_nd + 8LL));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1c3c7817b:;
	}
	_iter_end_1c3c7817b:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			((*(_40919_d))._field_d).mut_slice(1LL);;
		}
	_iter_next_1c3c76036:;
	}
	_iter_end_1c3c76036:;;
}



inline void _2021d13ec_ryuDigits32(_2021c0c27_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		(*(_45421_d))._field_dp=(_45554_endindex + 1LL);
		return;;
	};
	jule::I64 _4609_trimmed = 0LL;;
	jule::I64 _4639_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _4709_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47113_c;
			jule::U32 _47120_cdigit;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_47113_c = ___jule_assign_arg;
				_47120_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _4729_u = (_4559_upper / 10LLU);;
			if ((_4709_l > _4729_u)) {
				goto _iter_end_1c3c7a8ba;
			};
			if (((_4709_l == (_47113_c + 1LLU)) && (_47113_c < _4729_u))) {
				(_47113_c)++;
				_47120_cdigit=0LLU;
				_45539_cup=false;
			};
			(_4609_trimmed)++;
			_45525_c0=(_45525_c0 && (_4639_cNextDigit == 0LL));
			_4639_cNextDigit=static_cast<jule::I64>(_47120_cdigit);
			({
				jule::U32 ___jule_assign_arg = _4709_l;
				jule::U32 _1___jule_assign_arg = _47113_c;
				jule::U32 _2___jule_assign_arg = _4729_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4559_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1c3c7a8ba:;
	}
	_iter_end_1c3c7a8ba:;;
	if ((_4609_trimmed > 0LL)) {
		_45539_cup=(((_4639_cNextDigit > 5LL) || ((_4639_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_4639_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_4609_trimmed;
	jule::U32 _5099_v = _45458_central;;
	jule::I64 _5109_n = _45554_endindex;;
	while ((_5109_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _5129_v1;
			jule::U32 _51213_v2;
			({
				jule::U32 ___jule_assign_arg = (_5099_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_5099_v % 100LL);
				_5129_v1 = ___jule_assign_arg;
				_51213_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_5109_n]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(((2LL * _51213_v2) + 1LLU)));
			(*(_45421_d))._field_d[(_5109_n - 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((2LL * _51213_v2)));
			_5109_n-=2LL;
			_5099_v=_5129_v1;
		}
	_iter_next_1c3c7d11a:;
	}
	_iter_end_1c3c7d11a:;;
	if ((_5109_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_5109_n]=static_cast<jule::U8>((_5099_v + '0'));
	};
	(*(_45421_d))._field_nd=(_45554_endindex + 1LL);
	(*(_45421_d))._field_dp=((*(_45421_d))._field_nd + _4609_trimmed);
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _2021d182b_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (_53419_m << 6LLU);
		__jule_func_result.__jule_result_arg1 = (_53431_e2 - 6LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str::lit("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _5439_pow = _2021c826d_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_5439_pow+=1LLU;
	};
	jule::U64 _5485_hi;
	jule::U64 _5489_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _2021851d6_Mul64(static_cast<jule::U64>(_53419_m), _5439_pow);
		_5485_hi = __jule_assign_result.__jule_result_arg0;
		_5489_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_2021d01ed_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(((_5485_hi << 7LLU) | (_5489_lo >> 57LLU)));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((_5489_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _2021d1c5a_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (_56220_m << 8LLU);
		__jule_func_result.__jule_result_arg1 = (_56232_e2 - 8LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str::lit("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _5719_pow = _2021c826d_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_5719_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_2021d01ed_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _5795_l1;
	jule::U64 _5799_l0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _2021851d6_Mul64(_56220_m, _5719_pow[0LL]);
		_5795_l1 = __jule_assign_result.__jule_result_arg0;
		_5799_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5809_h1;
	jule::U64 _58013_h0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _2021851d6_Mul64(_56220_m, _5719_pow[1LL]);
		_5809_h1 = __jule_assign_result.__jule_result_arg0;
		_58013_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5815_mid;
	jule::U64 _58110_carry;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _2021838cc_Add64(_5795_l1, _58013_h0, 0LLU);
		_5815_mid = __jule_assign_result.__jule_result_arg0;
		_58110_carry = __jule_assign_result.__jule_result_arg1;
	});
	_5809_h1+=_58110_carry;
	__jule_func_result.__jule_result_arg0 = ((_5809_h1 << 9LLU) | (_5815_mid >> 55LLU));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((_5815_mid << 9LLU) == 0LLU) && (_5799_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _2021d20ce_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I64 _5909_i = 0LL;;
	for (; (_5909_i < _58632_k); (_5909_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m/=5LLU;
		}
	_iter_next_1c3c90319:;
	}
	_iter_end_1c3c90319:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _2021d2398_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_60214_x / 1000000000LL));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>((_60214_x % 1000000000LL));
		return __jule_func_result;;
	};
}



inline void _2021d52d0_trim(_2021d3982_decimal* _27414_a) {
	while ((((*(_27414_a))._field_nd > 0LL) && ((*(_27414_a))._field_d[((*(_27414_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_27414_a))._field_nd)--;
		}
	_iter_next_1c3c93b25:;
	}
	_iter_end_1c3c93b25:;;
	if (((*(_27414_a))._field_nd == 0LL)) {
		(*(_27414_a))._field_dp=0LL;
	};
}



inline void _2021d55bb_rightShift(_2021d3982_decimal* _28420_a, jule::U64 _28432_k) {
	jule::I64 _2859_r = 0LL;;
	jule::I64 _2869_w = 0LL;;
	jule::U64 _2899_n = static_cast<jule::U64>(0LLU);;
	for (; ((_2899_n >> _28432_k) == 0LLU); (_2859_r)++) {
		{
			if ((_2859_r >= (*(_28420_a))._field_nd)) {
				if ((_2899_n == 0LLU)) {
					(*(_28420_a))._field_nd=0LL;
					return;;
				};
				while (((_2899_n >> _28432_k) == 0LLU)) {
					{
						_2899_n=(_2899_n * 10LLU);
						(_2859_r)++;
					}
				_iter_next_1c3c96a4b:;
				}
				_iter_end_1c3c96a4b:;;
				goto _iter_end_1c3c955a5;
			};
			jule::U64 _3039_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2859_r]);;
			_2899_n=(((_2899_n * 10LLU) + _3039_c) - '0');
		}
	_iter_next_1c3c955a5:;
	}
	_iter_end_1c3c955a5:;;
	(*(_28420_a))._field_dp-=(_2859_r - 1LL);
	jule::U64 _3085_mask = (static_cast<jule::U64>((1LL << _28432_k)) - 1LLU);;
	for (; (_2859_r < (*(_28420_a))._field_nd); (_2859_r)++) {
		{
			jule::U64 _3129_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2859_r]);;
			jule::U64 _3139_dig = (_2899_n >> _28432_k);;
			_2899_n&=_3085_mask;
			(*(_28420_a))._field_d[_2869_w]=static_cast<jule::U8>((_3139_dig + '0'));
			(_2869_w)++;
			_2899_n=(((_2899_n * 10LLU) + _3129_c) - '0');
		}
	_iter_next_1c3c96b39:;
	}
	_iter_end_1c3c96b39:;;
	while ((_2899_n > 0LLU)) {
		{
			jule::U64 _3229_dig = (_2899_n >> _28432_k);;
			_2899_n&=_3085_mask;
			if ((_2869_w < 800LL)) {
				(*(_28420_a))._field_d[_2869_w]=static_cast<jule::U8>((_3229_dig + '0'));
				(_2869_w)++;
			} else if ((_3229_dig > 0LLU)) {
				(*(_28420_a))._field_trunc=true;
			};
			_2899_n=(_2899_n * 10LLU);
		}
	_iter_next_1c3c9918b:;
	}
	_iter_end_1c3c9918b:;;
	(*(_28420_a))._field_nd=_2869_w;
	_2021d52d0_trim(_28420_a);
}



inline jule::Bool _2021d5a72_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s) {
	jule::I64 _3399_i = 0LL;;
	for (; (_3399_i < (*(_33846_s)).len()); (_3399_i)++) {
		{
			if ((_3399_i >= _33835_end)) {
				return true;;
			};
			if ((_33821_b[_3399_i] != (*(_33846_s))[_3399_i])) {
				return (_33821_b[_3399_i] < (*(_33846_s))[_3399_i]);;
			};
		}
	_iter_next_1c3c9d206:;
	}
	_iter_end_1c3c9d206:;;
	return false;;
}



inline void _2021d5d2a_leftShift(_2021d3982_decimal* _35219_a, jule::U64 _35231_k) {
	jule::I64 _3539_delta = _2021d3399_leftCheats[static_cast<jule::I64>(_35231_k)]._field_delta;;
	if (_2021d5a72_prefixIsLessThan((*(_35219_a))._field_d, (*(_35219_a))._field_nd, &(_2021d3399_leftCheats[static_cast<jule::I64>(_35231_k)]._field_cutoff))) {
		(_3539_delta)--;
	};
	jule::I64 _3589_r = (*(_35219_a))._field_nd;;
	jule::I64 _3599_w = ((*(_35219_a))._field_nd + _3539_delta);;
	jule::U64 _3629_n = static_cast<jule::U64>(0LLU);;
	(_3589_r)--;
	for (; (_3589_r >= 0LL); (_3589_r)--) {
		{
			_3629_n+=((static_cast<jule::U64>((*(_35219_a))._field_d[_3589_r]) - '0') << _35231_k);
			jule::U64 _3669_quo = (_3629_n / 10LLU);;
			jule::U64 _3679_rem = (_3629_n - (10LLU * _3669_quo));;
			(_3599_w)--;
			if ((_3599_w < 800LL)) {
				(*(_35219_a))._field_d[_3599_w]=static_cast<jule::U8>((_3679_rem + '0'));
			} else if ((_3679_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3629_n=_3669_quo;
		}
	_iter_next_1c3201b88:;
	}
	_iter_end_1c3201b88:;;
	while ((_3629_n > 0LLU)) {
		{
			jule::U64 _3799_quo = (_3629_n / 10LLU);;
			jule::U64 _3809_rem = (_3629_n - (10LLU * _3799_quo));;
			(_3599_w)--;
			if ((_3599_w < 800LL)) {
				(*(_35219_a))._field_d[_3599_w]=static_cast<jule::U8>((_3809_rem + '0'));
			} else if ((_3809_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3629_n=_3799_quo;
		}
	_iter_next_1c320224e:;
	}
	_iter_end_1c320224e:;;
	(*(_35219_a))._field_nd+=_3539_delta;
	if (((*(_35219_a))._field_nd >= 800LL)) {
		(*(_35219_a))._field_nd=800LL;
	};
	(*(_35219_a))._field_dp+=_3539_delta;
	_2021d52d0_trim(_35219_a);
}



inline jule::Bool _2021d619e_shouldRoundUp(_2021d3982_decimal* _39919_a, jule::I64 _39931_nd) {
	if (((_39931_nd < 0LL) || (_39931_nd >= (*(_39919_a))._field_nd))) {
		return false;;
	};
	if ((((*(_39919_a))._field_d[_39931_nd] == '5') && ((_39931_nd + 1LL) == (*(_39919_a))._field_nd))) {
		if ((*(_39919_a))._field_trunc) {
			return true;;
		};
		return ((_39931_nd > 0LL) && ((((*(_39919_a))._field_d[(_39931_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_39919_a))._field_d[_39931_nd] >= '5');;
}



inline jule::Str _2021d7931_FmtUint(jule::U64 _6112_i, jule::I64 _6120_base) {
	if (((_6112_i < 100LLU) && (_6120_base == 10LL))) {
		return _2021d8404_small(static_cast<jule::I64>(_6112_i));;
	};
	jule::Str _658_s;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _2021d8c2e_fmtBits(nullptr, _6112_i, _6120_base, false, false);
		_658_s = __jule_assign_result.__jule_result_arg1;
	});
	return _658_s;;
}



inline jule::Str _2021d7ce9_FmtInt(jule::I64 _7211_i, jule::I64 _7219_base) {
	if ((((0LL <= _7211_i) && (_7211_i < 100LL)) && (_7219_base == 10LL))) {
		return _2021d8404_small(static_cast<jule::I64>(_7211_i));;
	};
	jule::Str _768_s;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _2021d8c2e_fmtBits(nullptr, static_cast<jule::U64>(_7211_i), _7219_base, (_7211_i < 0LL), false);
		_768_s = __jule_assign_result.__jule_result_arg1;
	});
	return _768_s;;
}



inline jule::Str _2021d80b3_Itoa(jule::I64 _819_i) {
	return _2021d7ce9_FmtInt(static_cast<jule::I64>(_819_i), 10LL);;
}



inline jule::Str _2021d8404_small(jule::I64 _8610_i) {
	if ((_8610_i < 10LL)) {
		return jule::Str::from_byte(static_cast<jule::U8>(('0' + _8610_i)));;
	};
	jule::Slice<jule::U8> _909_buf = jule::Slice<jule::U8>::alloc(3LL, 3LL, 0);;
	_909_buf[0LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, (_8610_i << 1LL));
	_909_buf[1LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, ((_8610_i << 1LL) + 1LL));
	return _234c7637c_StrFromBytes(_909_buf.slice(0LL, 2LL));;
}



inline jule::Bool _2021d868a_isPowerOfTwo(jule::I64 _9617_x) {
	return ((_9617_x & (_9617_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _2021d8c2e_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I64 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10541_base < 2LL) || (_10541_base > 36LL))) {
		jule::panic(jule::Str::lit("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:107:9"));;
	};
	jule::Slice<jule::U8> _1119_a = jule::Slice<jule::U8>::alloc(65LL, 65LL, 0);;
	jule::I64 _1129_i = _1119_a.len();;
	if (_10552_neg) {
		_10533_u=(-(_10533_u));
	};
	{
		
		if ((_10541_base == 10LL)) {
			_case_begin_1c38e5ca5:;
			{
				;
				jule::U64 _15413_us = static_cast<jule::U64>(_10533_u);;
				while ((_15413_us >= 100LLU)) {
					{
						jule::U64 _15613_is = ((_15413_us % 100LL) << 1LLU);;
						_15413_us/=100LLU;
						_1129_i-=2LL;
						_1119_a[(_1129_i + 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((_15613_is + 1LLU)));
						_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(_15613_is));
					}
				_iter_next_1c38e6ee8:;
				}
				_iter_end_1c38e6ee8:;;
				jule::U64 _1649_is = (_15413_us << 1LLU);;
				(_1129_i)--;
				_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((_1649_is + 1LLU)));
				if ((_15413_us >= 10LLU)) {
					(_1129_i)--;
					_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(_1649_is));
				};
			}
		}
		else if (_2021d868a_isPowerOfTwo(_10541_base)) {
			_case_begin_1c38e4c4e:;
			{
				jule::U64 _1799_shift = (static_cast<jule::U64>(_20217b1ee_TrailingZeros(static_cast<jule::U64>(_10541_base))) & 7LLU);;
				jule::U64 _1809_b = static_cast<jule::U64>(_10541_base);;
				jule::U64 _1819_m = (static_cast<jule::U64>(_10541_base) - 1LLU);;
				while ((_10533_u >= _1809_b)) {
					{
						(_1129_i)--;
						_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>((static_cast<jule::U64>(_10533_u) & _1819_m)));
						_10533_u>>=_1799_shift;
					}
				_iter_next_1c38eedad:;
				}
				_iter_end_1c38eedad:;;
				(_1129_i)--;
				_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>(_10533_u)));
			}
		}
		else {
			_case_begin_1c38e46ee:;
			{
				jule::U64 _1929_b = static_cast<jule::U64>(_10541_base);;
				while ((_10533_u >= _1929_b)) {
					{
						(_1129_i)--;
						jule::U64 _19813_q = jule::div(_10533_u,_1929_b);;
						_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>((_10533_u - (_19813_q * _1929_b)))));
						_10533_u=_19813_q;
					}
				_iter_next_1c38e5205:;
				}
				_iter_end_1c38e5205:;;
				(_1129_i)--;
				_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>(_10533_u)));
			}
		}
		_match_end_1c38e4666:;
	};
	if (_10552_neg) {
		(_1129_i)--;
		_1119_a[_1129_i]='-';
	};
	if (_10563_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10516_dst,_1119_a.slice(_1129_i));
		return __jule_func_result;;
	};
	jule::I64 _2175_n = jule::copy(_1119_a, _1119_a.slice(_1129_i));;
	__jule_func_result.__jule_result_arg1=_234c7637c_StrFromBytes(_1119_a.slice(0LL, _2175_n));
	return __jule_func_result;;
}



inline jule::Str _2021da22a_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1c391492d:;
			{
				return _2021d9746_SysInt;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4) || _match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1c391329a:;
			{
				return _2021d99ee_SysUint;;
			}
		}
		else {
			_case_begin_1c3911276:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1c3914c08:;
	};
}



inline jule::I64 _2021da4e4_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str::lit("i8", 2) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1c3915995:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3) || _match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1c3915bb5:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3) || _match_expr == jule::Str::lit("u32", 3) || _match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1c3915c2b:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3) || _match_expr == jule::Str::lit("u64", 3) || _match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1c3915a0b:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4) || _match_expr == jule::Str::lit("int", 3) || _match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1c3915a72:;
			{
				return _2021d9449_BitSize;;
			}
		}
		else {
			_case_begin_1c391580d:;
			{
				return -1LL;;
			}
		}
		_match_end_1c39158eb:;
	};
}



inline jule::Str _2021da835_IntFromBits(jule::I64 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1c3917678:;
			{
				return jule::Str::lit("i8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1c3917e1a:;
			{
				return jule::Str::lit("i16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1c3917e81:;
			{
				return jule::Str::lit("i32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1c39176de:;
			{
				return jule::Str::lit("i64", 3);;
			}
		}
		else {
			_case_begin_1c3917c3e:;
			{
				return jule::Str();;
			}
		}
		_match_end_1c3917d71:;
	};
}



inline jule::Str _2021daabb_UintFromBits(jule::I64 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1c391905e:;
			{
				return jule::Str::lit("u8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1c3918b0d:;
			{
				return jule::Str::lit("u16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1c3918b74:;
			{
				return jule::Str::lit("u32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1c39190c5:;
			{
				return jule::Str::lit("u64", 3);;
			}
		}
		else {
			_case_begin_1c3918db6:;
			{
				return jule::Str();;
			}
		}
		_match_end_1c3918a64:;
	};
}



inline jule::Str _2021dad85_FloatFromBits(jule::I64 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1c391a824:;
			{
				return jule::Str::lit("f32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1c3919d84:;
			{
				return jule::Str::lit("f64", 3);;
			}
		}
		else {
			_case_begin_1c391a13c:;
			{
				return jule::Str();;
			}
		}
		_match_end_1c3919cda:;
	};
}



inline jule::Bool _2021db98a_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit) {
	({
		auto except = _2021cd064_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I64 _2021dbc54_BitsizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1c3920450:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1c391edbc:;
			{
				return 64LLU;;
			}
		}
		_match_end_1c391e7d4:;
	};
}



inline jule::I64 _2021dc01d_BitsizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_1c3921198:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_1c3921286:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_1c39212ec:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1c3920708:;
			{
				return 64LLU;;
			}
		}
		_match_end_1c392063c:;
	};
}



inline jule::I64 _2021dc2d7_BitsizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_1c3922bd3:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_1c3921e02:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_1c3921e68:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1c3921d8b:;
			{
				return 64LLU;;
			}
		}
		_match_end_1c39222ed:;
	};
}



inline void _2021dc480_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _21b98ab04_Arch };
			
			if (_match_expr == jule::Str::lit("arm64", 5) || _match_expr == jule::Str::lit("amd64", 5)) {
				_case_begin_1c3922cd2:;
				{
					_2021d9449_BitSize=64LLU;
					_2021d9746_SysInt=jule::Str::lit("i64", 3);
					_2021d99ee_SysUint=jule::Str::lit("u64", 3);
				}
			}
			else if (_match_expr == jule::Str::lit("i386", 4)) {
				_case_begin_1c3923c17:;
				{
					_2021d9449_BitSize=32LLU;
					_2021d9746_SysInt=jule::Str::lit("i32", 3);
					_2021d99ee_SysUint=jule::Str::lit("u32", 3);
				}
			}
			_match_end_1c3923b18:;
		};
	};
}



inline void _2021dc606_init(void) {
	_2021dc480_UpdateTarget();
}



inline jule::I64 _2021e1264_MinI(jule::Str _6113_k) {
	_6113_k=_2021da22a_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1c3925d6d:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1c3925dd4:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1c3925e4a:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1c3925eb1:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1c3922e9c:;
			{
				return 0LL;;
			}
		}
		_match_end_1c3923079:;
	};
}



inline jule::I64 _2021e1572_MaxI(jule::Str _7913_k) {
	_7913_k=_2021da22a_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1c3927413:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1c3927479:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1c39274e0:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1c3927556:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1c3926038:;
			{
				return 0LL;;
			}
		}
		_match_end_1c3926841:;
	};
}



inline jule::U64 _2021e183b_MaxU(jule::Str _9713_k) {
	_9713_k=_2021da22a_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1c3928a0d:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1c3928a74:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1c3928ada:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1c3928b51:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1c39275de:;
			{
				return 0LLU;;
			}
		}
		_match_end_1c3927e3b:;
	};
}



inline jule::F64 _2021e1b7c_Min(jule::Str _11512_k) {
	_11512_k=_2021da22a_RealKindOf(_11512_k);
	jule::I64 _1175_i = _2021e1264_MinI(_11512_k);;
	if ((_1175_i != 0LL)) {
		return static_cast<jule::F64>(_1175_i);;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1c392b170:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1c392abec:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1c392a4c1:;
			{
				return 0LL;;
			}
		}
		_match_end_1c392a58c:;
	};
}



inline jule::F64 _2021e1e13_Max(jule::Str _13312_k) {
	_13312_k=_2021da22a_RealKindOf(_13312_k);
	jule::I64 _1355_i = _2021e1572_MaxI(_13312_k);;
	if ((_1355_i != 0LL)) {
		return static_cast<jule::F64>(_1355_i);;
	};
	jule::U64 _1395_u = _2021e183b_MaxU(_13312_k);;
	if ((_1395_u != 0LLU)) {
		return static_cast<jule::F64>(_1395_u);;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1c392d480:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1c392d00c:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1c392c748:;
			{
				return 0LL;;
			}
		}
		_match_end_1c392c7d1:;
	};
}



inline jule::Bool _2021e23b9_IsI16Greater(jule::Str _621_k) {
	return _621_k.equal("i8", 2);;
}



inline jule::Bool _2021e26c7_IsI32Greater(jule::Str _1121_k) {
	return (_1121_k.equal("i8", 2) || _1121_k.equal("i16", 3));;
}



inline jule::Bool _2021e2991_IsI64Greater(jule::Str _1621_k) {
	return ((_1621_k.equal("i8", 2) || _1621_k.equal("i16", 3)) || _1621_k.equal("i32", 3));;
}



inline jule::Bool _2021e2cd2_IsU16Greater(jule::Str _2321_k) {
	return _2321_k.equal("u8", 2);;
}



inline jule::Bool _2021e3068_IsU32Greater(jule::Str _2821_k) {
	return (_2821_k.equal("u8", 2) || _2821_k.equal("u16", 3));;
}



inline jule::Bool _2021e3332_IsU64Greater(jule::Str _3421_k) {
	return ((_3421_k.equal("u8", 2) || _3421_k.equal("u16", 3)) || _3421_k.equal("u32", 3));;
}



inline jule::Bool _2021e35eb_IsF32Greater(jule::Str _4117_k) {
	return (!_4117_k.equal("f64", 3));;
}



inline jule::Bool _2021e39c5_IsF64Greater(jule::Str _4617_k) {
	return true;;
}



inline jule::Bool _2021e3cc2_IsGreater(jule::Str _5118_k1, jule::Str _5127_k2) {
	{
		auto &_match_expr{ _5118_k1 };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1c3931b6a:;
			{
				return _2021e4e38_IsSigInt(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1c3931bd1:;
			{
				return _2021e5246_IsUnsigInt(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1c3931c47:;
			{
				return _2021e5246_IsUnsigInt(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1c3931cbe:;
			{
				return _2021e23b9_IsI16Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1c3932044:;
			{
				return _2021e26c7_IsI32Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1c39320bb:;
			{
				return _2021e2991_IsI64Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1c3932143:;
			{
				return _2021e2cd2_IsU16Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1c39321ba:;
			{
				return _2021e3068_IsU32Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1c39322db:;
			{
				return _2021e3332_IsU64Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1c3932352:;
			{
				return _2021e35eb_IsF32Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1c39323b8:;
			{
				return _2021e39c5_IsF64Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1c393242e:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c3931917:;
			{
				return false;;
			}
		}
		_match_end_1c3931ab0:;
	};
}



inline jule::Bool _2021e4e38_IsSigInt(jule::Str _2717_k) {
	return ((((_2717_k.equal("i8", 2) || _2717_k.equal("i16", 3)) || _2717_k.equal("i32", 3)) || _2717_k.equal("i64", 3)) || _2717_k.equal("int", 3));;
}



inline jule::Bool _2021e5246_IsUnsigInt(jule::Str _3619_k) {
	return (((((_3619_k.equal("u8", 2) || _3619_k.equal("u16", 3)) || _3619_k.equal("u32", 3)) || _3619_k.equal("u64", 3)) || _3619_k.equal("uint", 4)) || _3619_k.equal("uintptr", 7));;
}



inline jule::Bool _2021e5510_IsInt(jule::Str _4610_k) {
	return (_2021e4e38_IsSigInt(_4610_k) || _2021e5246_IsUnsigInt(_4610_k));;
}



inline jule::Bool _2021e5851_IsFloat(jule::Str _5112_k) {
	return (_5112_k.equal("f32", 3) || _5112_k.equal("f64", 3));;
}



inline jule::Bool _2021e5ad7_IsNum(jule::Str _5610_k) {
	return (_2021e5510_IsInt(_5610_k) || _2021e5851_IsFloat(_5610_k));;
}



inline jule::Bool _2021e5da1_IsSigNum(jule::Str _6113_k) {
	return (_2021e4e38_IsSigInt(_6113_k) || _2021e5851_IsFloat(_6113_k));;
}



inline void _202200196_lshiftUnsig(_2021e617b_Const* _59021_c, _2021e617b_Const* _59032_x) {
	jule::U64 _5915_l = _2021e8aa7_AsU64(_59021_c);;
	jule::U64 _5925_r = _2021e8aa7_AsU64(_59032_x);;
	_2021e939e_SetU64(_59021_c, (_5915_l << _5925_r));
}



inline void _2022004c6_rshiftUnsig(_2021e617b_Const* _59621_c, _2021e617b_Const* _59632_x) {
	jule::U64 _5975_l = _2021e8aa7_AsU64(_59621_c);;
	jule::U64 _5985_r = _2021e8aa7_AsU64(_59632_x);;
	_2021e939e_SetU64(_59621_c, (_5975_l >> _5985_r));
}



inline jule::Bool _1c0c49bbc_IsUnaryOp(jule::U64 _33414_id) {
	{
		auto expr = &(_1c008e9b3_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3e119eb:;
		if (it != expr_end) {
			jule::U64 *_33512_op = it;
			{
				if ((_33414_id == (*(_33512_op)))) {
					return true;;
				};
			}
			_iter_next_1c3e119eb:;
			++it;
			goto _iter_begin_1c3e119eb;
		}
		_iter_end_1c3e119eb:;
	};
	return false;;
}



inline jule::Bool _1c0c49eca_IsBinOp(jule::U64 _34412_id) {
	{
		auto expr = &(_1c008ec05_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3e12007:;
		if (it != expr_end) {
			jule::U64 *_34512_op = it;
			{
				if ((_34412_id == (*(_34512_op)))) {
					return true;;
				};
			}
			_iter_next_1c3e12007:;
			++it;
			goto _iter_begin_1c3e12007;
		}
		_iter_end_1c3e12007:;
	};
	return false;;
}



inline jule::Bool _1c0c4a5d5_IsStr(jule::Str _36410_k) {
	return (!(_36410_k).empty() && ((_36410_k[0LL] == '\"') || _1c0c4a86b_IsRawStr(_36410_k)));;
}



inline jule::Bool _1c0c4a86b_IsRawStr(jule::Str _36713_k) {
	return (!(_36713_k).empty() && (_36713_k[0LL] == '`'));;
}



inline jule::Bool _1c0c4ab35_IsRune(jule::Str _37111_k) {
	return (!(_37111_k).empty() && (_37111_k[0LL] == '\''));;
}



inline jule::Bool _1c0c4b51a_IsFloat(jule::Str _38012_k) {
	if (_21b86a62c_HasPrefix(_38012_k, jule::Str::lit("0x", 2))) {
		return _21b870665_ContainsAny(_38012_k, jule::Str::lit(".pP", 3));;
	};
	return _21b870665_ContainsAny(_38012_k, jule::Str::lit(".eE", 3));;
}



inline jule::Bool _1c0c4b7d4_IsNum(jule::Str _38810_k) {
	if ((_38810_k).empty()) {
		return false;;
	};
	jule::U8 _3935_b = _38810_k[0LL];;
	return ((_3935_b == '.') || (('0' <= _3935_b) && (_3935_b <= '9')));;
}



inline jule::Bool _1c0c4bd67_IsIgnoreIdent(jule::Str _40318_ident) {
	return _40318_ident.equal("_", 1);;
}



inline jule::Bool _1c0c4c131_IsAnonIdent(jule::Str _40616_ident) {
	return _40616_ident.equal("<anonymous>", 11);;
}



inline jule::Bool _1c0c4c6b4_IsSpace(jule::I32 _41912_r) {
	{
		auto expr = &(_1c008e7a4_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3e193d8:;
		if (it != expr_end) {
			jule::I32 *_42012_cr = it;
			{
				if ((_41912_r == (*(_42012_cr)))) {
					return true;;
				};
			}
			_iter_next_1c3e193d8:;
			++it;
			goto _iter_begin_1c3e193d8;
		}
		_iter_end_1c3e193d8:;
	};
	return false;;
}



inline jule::Bool _1c0c4cbae_IsLetter(jule::I32 _42913_r) {
	return _21b7b2772_IsLetter(_42913_r);;
}



inline jule::Bool _1c0c4d132_IsDecimal(jule::U8 _44914_b) {
	return (('0' <= _44914_b) && (_44914_b <= '9'));;
}



inline jule::Bool _1c0c4d3eb_IsBinary(jule::U8 _45213_b) {
	return ((_45213_b == '0') || (_45213_b == '1'));;
}



inline jule::Bool _1c0c4d6b5_IsOctal(jule::U8 _45512_b) {
	return (('0' <= _45512_b) && (_45512_b <= '7'));;
}



inline jule::Bool _1c0c4d97e_IsHex(jule::U8 _45810_b) {
	{
		
		if ((('0' <= _45810_b) && (_45810_b <= '9'))) {
			_case_begin_1c3e1ce47:;
			{
				return true;;
			}
		}
		else if ((('a' <= _45810_b) && (_45810_b <= 'f'))) {
			_case_begin_1c3e1cee1:;
			{
				return true;;
			}
		}
		else if ((('A' <= _45810_b) && (_45810_b <= 'F'))) {
			_case_begin_1c3e1d068:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c3e1cdae:;
			{
				return false;;
			}
		}
		_match_end_1c3e1bd7a:;
	};
}



inline jule::Bool _1c0c4dc48_IsAssign(jule::U64 _47313_id) {
	return ((((((((_47313_id == static_cast<jule::U64>(1LLU)) || (_47313_id == static_cast<jule::U64>(27LLU))) || (_47313_id == static_cast<jule::U64>(30LLU))) || (_47313_id == static_cast<jule::U64>(32LLU))) || (_47313_id == static_cast<jule::U64>(24LLU))) || (_47313_id == static_cast<jule::U64>(74LLU))) || (_47313_id == static_cast<jule::U64>(62LLU))) || (_47313_id == static_cast<jule::U64>(65LLU)));;
}



inline jule::Bool _1c0c4e012_IsPostfixOp(jule::U64 _48516_id) {
	{
		auto expr = &(_1c0c43963_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3e20bd6:;
		if (it != expr_end) {
			jule::U64 *_48612_op = it;
			{
				if ((_48516_id == (*(_48612_op)))) {
					return true;;
				};
			}
			_iter_next_1c3e20bd6:;
			++it;
			goto _iter_begin_1c3e20bd6;
		}
		_iter_end_1c3e20bd6:;
	};
	return false;;
}



inline jule::Bool _1c0c4e2cb_IsAssignOp(jule::U64 _49515_id) {
	if (_1c0c4e012_IsPostfixOp(_49515_id)) {
		return true;;
	};
	{
		auto expr = &(_1c0c43c4e_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3e21ac7:;
		if (it != expr_end) {
			jule::U64 *_49912_op = it;
			{
				if ((_49515_id == (*(_49912_op)))) {
					return true;;
				};
			}
			_iter_next_1c3e21ac7:;
			++it;
			goto _iter_begin_1c3e21ac7;
		}
		_iter_end_1c3e21ac7:;
	};
	return false;;
}



inline jule::Ptr<_1c0c4ec16_File> _1c0c510e1_NewFileSet(jule::Str _5715_path) {
	return jule::new_ptr<_1c0c4ec16_File>(_1c0c4ec16_File{._field_Path=_5715_path, });;
}



inline _21b8c54de_Log _1c0c52b1a_makeErr(jule::I64 _10012_row, jule::I64 _10022_col, jule::Ptr<_1c0c4ec16_File>* _10033_f, jule::Str _10043_fmt, jule::Slice<jule::Any> _10056_args) {
	return _21b8c54de_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_10012_row, ._field_Column=_10022_col, ._field_Path=(*((*(_10033_f))))._field_Path, ._field_Text=_21b8c5951_Logf(_10043_fmt, _10056_args), };;
}



inline jule::Bool _1c0c52ed3_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix) {
	if (((*(_11020_bytes)).len() < _11035_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_11035_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3e2becd:;
		if (it != expr_end) {
			jule::I64 _1149_i = it - expr->begin();
			{
				if (((*(_11020_bytes))[_1149_i] != _11035_prefix[_1149_i])) {
					return false;;
				};
			}
			_iter_next_1c3e2becd:;
			++it;
			_1149_i++;
			goto _iter_begin_1c3e2becd;
		}
		_iter_end_1c3e2becd:;
	};
	return true;;
}



inline jule::Str _1c0c53357_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I64 _12232_i) {
	jule::Str __jule_func_result;
	(_12232_i)++;
	if ((_12232_i >= (*(_12215_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _1289_b = (*(_12215_txt))[_12232_i];;
	if ((_1289_b == '_')) {
		return __jule_func_result;;
	};
	if (((_1289_b == '+') || (_1289_b == '-'))) {
		(_12232_i)++;
		if ((_12232_i >= (*(_12215_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_12215_txt))[_12232_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I64 _1425_first = _12232_i;;
	for (; (_12232_i < (*(_12215_txt)).len()); (_12232_i)++) {
		{
			_1289_b=(*(_12215_txt))[_12232_i];
			if (((_1289_b != '_') && (!(_1c0c4d132_IsDecimal(_1289_b))))) {
				goto _iter_end_1c3e2ed5a;
			};
		}
	_iter_next_1c3e2ed5a:;
	}
	_iter_end_1c3e2ed5a:;;
	if ((_12232_i == _1425_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_12215_txt)).slice(0LL, _12232_i));
	return __jule_func_result;;
}



inline jule::Str _1c0c53720_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I64 _15628_i) {
	return _1c0c53357_floatFmtE(_15615_txt, _15628_i);;
}



inline jule::Str _1c0c53a94_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I64 _16036_i) {
	if (((*(_16019_txt))[_16036_i] != '.')) {
		return jule::Str();;
	};
	(_16036_i)++;
	_julec_label_1c3e31d29:;
	for (; (_16036_i < (*(_16019_txt)).len()); (_16036_i)++) {
		{
			jule::U8 _1689_b = (*(_16019_txt))[_16036_i];;
			{
				
				if ((_1689_b == '_') || _1c0c4d132_IsDecimal(_1689_b)) {
					_case_begin_1c3e32c1a:;
					{
						goto _iter_next_1c3e31cd5;
					}
				}
				else if (_1c0c55425_isFloatFmtP(_1689_b, _16036_i)) {
					_case_begin_1c3e32cb4:;
					{
						return _1c0c53720_floatFmtP(_16019_txt, _16036_i);;
					}
				}
				else {
					_case_begin_1c3e32b93:;
					{
						goto _iter_end_1c3e31cd5;
					}
				}
				_match_end_1c3e32b2c:;
			};
		}
	_iter_next_1c3e31cd5:;
	}
	_iter_end_1c3e31cd5:;;
	return jule::Str();;
}



inline jule::Str _1c0c53e18_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I64 _18136_i) {
	_18136_i+=2LL;
	return _1c0c53357_floatFmtE(_18119_txt, _18136_i);;
}



inline jule::Str _1c0c5428c_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I64 _18635_i) {
	(_18635_i)++;
	return _1c0c53357_floatFmtE(_18618_txt, _18635_i);;
}



inline jule::Str _1c0c54721_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I64 _19131_i) {
	jule::Str __jule_func_result;
	(_19131_i)++;
	if ((_19131_i >= (*(_19114_txt)).len())) {
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)));
		return __jule_func_result;;
	};
	if (((*(_19114_txt))[_19131_i] == '_')) {
		(_19131_i)--;
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
		return __jule_func_result;;
	};
	for (; (_19131_i < (*(_19114_txt)).len()); (_19131_i)++) {
		{
			jule::U8 _2019_b = (*(_19114_txt))[_19131_i];;
			if (((_19131_i > 1LL) && ((_2019_b == 'e') || (_2019_b == 'E')))) {
				__jule_func_result = _1c0c53357_floatFmtE(_19114_txt, _19131_i);
				return __jule_func_result;;
			};
			if (((_2019_b != '_') && (!(_1c0c4d132_IsDecimal(_2019_b))))) {
				goto _iter_end_1c3e359dc;
			};
		}
	_iter_next_1c3e359dc:;
	}
	_iter_end_1c3e359dc:;;
	if ((_19131_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
	return __jule_func_result;;
}



inline jule::Str _1c0c54963_commonNum(jule::Slice<jule::U8>* _21615_txt) {
	jule::Str __jule_func_result;
	jule::I64 _2179_i = 0LL;;
	_julec_label_1c3e3526c:;
	for (; (_2179_i < (*(_21615_txt)).len()); (_2179_i)++) {
		{
			jule::U8 _2209_b = (*(_21615_txt))[_2179_i];;
			{
				
				if ((_2209_b == '.')) {
					_case_begin_1c3e38b11:;
					{
						__jule_func_result = _1c0c54721_floatNum(_21615_txt, _2179_i);
						return __jule_func_result;;
					}
				}
				else if ((_2209_b == '_')) {
					_case_begin_1c3e38baa:;
					{
						goto _iter_next_1c3e3800b;
					}
				}
				else if (_1c0c550a1_isFloatFmtE(_2209_b, _2179_i)) {
					_case_begin_1c3e38c21:;
					{
						__jule_func_result = _1c0c53357_floatFmtE(_21615_txt, _2179_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_1c0c4d132_IsDecimal(_2209_b)))) {
					_case_begin_1c3e38c87:;
					{
						goto _iter_end_1c3e3800b;
					}
				}
				_match_end_1c3e38a34:;
			};
		}
	_iter_next_1c3e3800b:;
	}
	_iter_end_1c3e3800b:;;
	if ((_2179_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_21615_txt)).slice(0LL, _2179_i));
	return __jule_func_result;;
}



inline jule::Str _1c0c54c2c_binaryNum(jule::Slice<jule::U8>* _23915_txt) {
	jule::Str __jule_func_result;
	if ((!(_1c0c52ed3_bytesHasPrefix(_23915_txt, jule::Str::lit("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_23915_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _2489_i = 2LL;;
	for (; (_2489_i < (*(_23915_txt)).len()); (_2489_i)++) {
		{
			if ((((*(_23915_txt))[_2489_i] != '_') && (!(_1c0c4d3eb_IsBinary((*(_23915_txt))[_2489_i]))))) {
				goto _iter_end_1c3e3ba04;
			};
		}
	_iter_next_1c3e3ba04:;
	}
	_iter_end_1c3e3ba04:;;
	if ((_2489_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_23915_txt)).slice(0LL, _2489_i));
	return __jule_func_result;;
}



inline jule::Bool _1c0c550a1_isFloatFmtE(jule::U8 _26116_b, jule::I64 _26125_i) {
	return ((_26125_i > 0LL) && ((_26116_b == 'e') || (_26116_b == 'E')));;
}



inline jule::Bool _1c0c55425_isFloatFmtP(jule::U8 _26516_b, jule::I64 _26525_i) {
	return ((_26525_i > 0LL) && ((_26516_b == 'p') || (_26516_b == 'P')));;
}



inline jule::Bool _1c0c55799_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I64 _26938_i) {
	if (((*(_26921_txt))[_26938_i] != '.')) {
		return false;;
	};
	(_26938_i)++;
	_julec_label_1c3e3e5c8:;
	for (; (_26938_i < (*(_26921_txt)).len()); (_26938_i)++) {
		{
			jule::U8 _2769_b = (*(_26921_txt))[_26938_i];;
			{
				
				if ((_2769_b == '_') || _1c0c4d132_IsDecimal(_2769_b)) {
					_case_begin_1c3e405da:;
					{
						goto _iter_next_1c3e3e51d;
					}
				}
				else if (_1c0c55425_isFloatFmtP(_2769_b, _26938_i)) {
					_case_begin_1c3e40684:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1c3e40563:;
					{
						goto _iter_end_1c3e3e51d;
					}
				}
				_match_end_1c3e404ec:;
			};
		}
	_iter_next_1c3e3e51d:;
	}
	_iter_end_1c3e3e51d:;;
	return false;;
}



inline jule::Bool _1c0c55b1d_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I64 _29033_i) {
	{
		
		if (((*(_29020_txt)).len() < 3LL)) {
			_case_begin_1c3e418e9:;
			{
				goto _case_begin_1c3e41993;
			}
		}
		else if (((*(_29020_txt))[_29033_i] != '.')) {
			_case_begin_1c3e41993:;
			{
				goto _case_begin_1c3e41a1a;
			}
		}
		else if ((((*(_29020_txt))[(_29033_i + 1LL)] != 'p') && ((*(_29020_txt))[(_29033_i + 1LL)] != 'P'))) {
			_case_begin_1c3e41a1a:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1c3e41861:;
			{
				return true;;
			}
		}
		_match_end_1c3e41762:;
	};
}



inline jule::Bool _1c0c55e92_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I64 _30334_i) {
	{
		
		if (((*(_30321_txt)).len() < 4LL)) {
			_case_begin_1c3e43665:;
			{
				goto _case_begin_1c3e436dc;
			}
		}
		else if (((*(_30321_txt))[_30334_i] != '.')) {
			_case_begin_1c3e436dc:;
			{
				goto _case_begin_1c3e43764;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 1LL)] != 'f') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'F'))) {
			_case_begin_1c3e43764:;
			{
				goto _case_begin_1c3e437db;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 2LL)] != 'p') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'P'))) {
			_case_begin_1c3e437db:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1c3e4327a:;
			{
				return true;;
			}
		}
		_match_end_1c3e4317b:;
	};
}



inline jule::Str _1c0c5648c_octalNum(jule::Slice<jule::U8>* _31814_txt) {
	jule::Str __jule_func_result;
	if (((*(_31814_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31814_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I64 _3269_octalStart = 1LL;;
	jule::Bool _3289_o = false;;
	if (((*(_31814_txt))[1LL] == 'o')) {
		if (((*(_31814_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_3269_octalStart)++;
		_3289_o=true;
	};
	jule::I64 _3379_i = _3269_octalStart;;
	for (; (_3379_i < (*(_31814_txt)).len()); (_3379_i)++) {
		{
			jule::U8 _3399_b = (*(_31814_txt))[_3379_i];;
			if ((_3399_b == '.')) {
				if (_3289_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _1c0c54721_floatNum(_31814_txt, _3379_i);
				return __jule_func_result;;
			};
			if (_1c0c550a1_isFloatFmtE(_3399_b, _3379_i)) {
				__jule_func_result = _1c0c53357_floatFmtE(_31814_txt, _3379_i);
				return __jule_func_result;;
			};
			if (((_3399_b != '_') && (!(_1c0c4d6b5_IsOctal(_3399_b))))) {
				goto _iter_end_1c3e47d1d;
			};
		}
	_iter_next_1c3e47d1d:;
	}
	_iter_end_1c3e47d1d:;;
	if ((_3379_i == _3269_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_31814_txt)).slice(0LL, _3379_i));
	return __jule_func_result;;
}



inline jule::Str _1c0c56668_hexNum(jule::Slice<jule::U8>* _36012_txt) {
	jule::Str __jule_func_result;
	if (((*(_36012_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_36012_txt))[0LL] != '0') || (((*(_36012_txt))[1LL] != 'x') && ((*(_36012_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3699_i = 2LL;;
	_julec_label_1c3e4b7d3:;
	for (; (_3699_i < (*(_36012_txt)).len()); (_3699_i)++) {
		{
			jule::U8 _3729_b = (*(_36012_txt))[_3699_i];;
			{
				
				if (_1c0c55b1d_isFloatFmtDotp(_36012_txt, _3699_i)) {
					_case_begin_1c3e4c4c6:;
					{
						__jule_func_result = _1c0c5428c_floatFmtDotp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_1c0c55e92_isFloatFmtDotfp(_36012_txt, _3699_i)) {
					_case_begin_1c3e4c570:;
					{
						__jule_func_result = _1c0c53e18_floatFmtDotfp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_1c0c55425_isFloatFmtP(_3729_b, _3699_i)) {
					_case_begin_1c3e4c5d6:;
					{
						__jule_func_result = _1c0c53720_floatFmtP(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_1c0c55799_isFloatFmtDotnp(_36012_txt, _3699_i)) {
					_case_begin_1c3e4c64c:;
					{
						__jule_func_result = _1c0c53a94_floatFmtDotnp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (((_3729_b != '_') && (!(_1c0c4d97e_IsHex(_3729_b))))) {
					_case_begin_1c3e4c6b3:;
					{
						goto _iter_end_1c3e4b926;
					}
				}
				_match_end_1c3e4c3d8:;
			};
		}
	_iter_next_1c3e4b926:;
	}
	_iter_end_1c3e4b926:;;
	if ((_3699_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_36012_txt)).slice(0LL, _3699_i));
	return __jule_func_result;;
}



inline jule::Str _1c0c569ba_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I64 _39328_n) {
	jule::Str __jule_func_result;
	if (((*(_39315_txt)).len() < _39328_n)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3999_i = 2LL;;
	for (; (_3999_i < _39328_n); (_3999_i)++) {
		{
			if ((!(_1c0c4d97e_IsHex((*(_39315_txt))[_3999_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1c3e4ec48:;
	}
	_iter_end_1c3e4ec48:;;
	__jule_func_result=static_cast<jule::Str>((*(_39315_txt)).slice(0LL, _39328_n));
	return __jule_func_result;;
}



inline jule::Str _1c0c56c84_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt) {
	return _1c0c569ba_hexEscape(_41127_txt, 10LL);;
}



inline jule::Str _1c0c5704d_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt) {
	return _1c0c569ba_hexEscape(_41630_txt, 6LL);;
}



inline jule::Str _1c0c57317_hexByteEscape(jule::Slice<jule::U8>* _42119_txt) {
	return _1c0c569ba_hexEscape(_42119_txt, 4LL);;
}



inline jule::Str _1c0c575d1_byteEscape(jule::Slice<jule::U8>* _42616_txt) {
	jule::Str __jule_func_result;
	if (((*(_42616_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_1c0c4d6b5_IsOctal((*(_42616_txt))[1LL]))) || (!(_1c0c4d6b5_IsOctal((*(_42616_txt))[2LL])))) || (!(_1c0c4d6b5_IsOctal((*(_42616_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_42616_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_21b8c54de_Log> _1c0c5c5c5_Lex(jule::Ptr<_1c0c4ec16_File> _80912_f, jule::I64 _80922_mode) {
	if ((_80912_f == nullptr)) {
		return nullptr;;
	};
	_1c0c57d51_lex _8149_lex = _1c0c57d51_lex{._field_mode=_80922_mode, ._field_file=_80912_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_1c0c5ab67_newLine(&_8149_lex);
	_1c0c58945_lex(&_8149_lex);
	if ((_8149_lex._field_errors.len() > 0LL)) {
		return _8149_lex._field_errors;;
	};
	(*(_80912_f))._field_Tokens=_8149_lex._field_tokens;
	return nullptr;;
}



inline jule::Bool _1c0d27272_FindModuleFile(jule::Slice<jule::Ptr<_234b095c8_DirEntry>>* _1320_dirents) {
	{
		auto expr = _1320_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3b1701a:;
		if (it != expr_end) {
			jule::Ptr<_234b095c8_DirEntry> *_1412_d = it;
			{
				if (((!(_234b0d06b_IsDir((*((*(_1412_d))))._field_Stat.ptr()))) && (*(*(_1412_d)).alloc)._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1c3b1701a:;
			++it;
			goto _iter_begin_1c3b1701a;
		}
		_iter_end_1c3b1701a:;
	};
	return false;;
}



inline jule::Str _1c0d2752a_FindModuleFileDeep(jule::Str _2527_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_234b095c8_DirEntry>> _2713_dirents = ({
				auto except = static__21b8768ad_Read(_2527_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1c3b174d2;
				} jule::Slice<jule::Ptr<_234b095c8_DirEntry>>(nullptr);});
			});;
			jule::Bool _319_exist = _1c0d27272_FindModuleFile(&(_2713_dirents));;
			if (_319_exist) {
				return _2527_path;;
			};
			jule::I64 _369_n = _2527_path.len();;
			_2527_path=_21b875eb7_Dir(_2527_path);
			if ((_2527_path.len() == _369_n)) {
				goto _iter_end_1c3b174d2;
			};
		}
	_iter_next_1c3b174d2:;
	}
	_iter_end_1c3b174d2:;;
	return jule::Str();;
}



inline jule::Slice<_21b8c54de_Log> _1c0d277e4_CheckModuleFile(jule::Str* _4721_path) {
	jule::Slice<jule::U8> _485_bytes = ({
		auto except = static__234b0b50e_Read(_21b8752c4_Join(jule::Slice<jule::Str>::make({(*(_4721_path)),jule::Str::lit("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_21b8c54de_Log>::make({_21b8c54de_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str::lit("module file could not checked because of a problem", 50), }});;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _545_s = _21b872447_Trim(_234c760b3_BytesStr(_485_bytes), jule::Str::lit(" \n\r\t\v", 5));;
	if ((_545_s.len() != 0LL)) {
		return jule::Slice<_21b8c54de_Log>::make({_21b8c54de_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str::lit("module file has syntax error(s)", 31), }});;
	};
	return nullptr;;
}



inline jule::Bool _1c0d28141_IsPub(jule::Str _910_ident) {
	if ((_910_ident[0LL] < 128LLU)) {
		jule::U8 _119_b = _910_ident[0LL];;
		return (('A' <= _119_b) && (_119_b <= 'Z'));;
	};
	jule::I32 _145_r;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _234b9d062_DecodeRuneStr(_910_ident);
		_145_r = __jule_assign_result.__jule_result_arg0;
	});
	return _21b828b7e_IsUpper(_145_r);;
}



inline jule::Bool _1c0d709a2_IsAscii(jule::I32 _1112_r) {
	;
	return (_1112_r <= 127LL);;
}



inline jule::I32 _1c0d8a9cd_ToRune(jule::Str _2015_lit) {
	jule::I32 _219_r = static_cast<jule::I32>(0LL);;
	(_2015_lit).mut_slice(1LL, (_2015_lit.len() - 1LL));;
	if (((_2015_lit[0LL] == '\\') && (_2015_lit.len() > 1LL))) {
		jule::I64 _2413_i = 0LL;;
		_219_r=_1c0d8b638_runeFromEsqSeq(_2015_lit, &(_2413_i));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _234b9d062_DecodeRuneStr(_2015_lit);
			_219_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _219_r;;
}



inline jule::Str _1c0d8abdc_ToRawStr(jule::Str _3613_lit) {
	if ((_3613_lit.len() == 2LL)) {
		return jule::Str();;
	};
	return _3613_lit.slice(1LL, (_3613_lit.len() - 1LL));;
}



inline jule::Str _1c0d8b02d_ToStr(jule::Str _4714_lit) {
	if ((_4714_lit.len() == 2LL)) {
		return jule::Str();;
	};
	jule::Bool _539_isPure = true;;
	{
		auto expr = &(_4714_lit);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3b24863:;
		if (it != expr_end) {
			jule::U8 _5412_b = *it;
			{
				if (((_5412_b >= 128LLU) || (_5412_b == '\\'))) {
					_539_isPure=false;
					goto _iter_end_1c3b24863;
				};
			}
			_iter_next_1c3b24863:;
			++it;
			goto _iter_begin_1c3b24863;
		}
		_iter_end_1c3b24863:;
	};
	if (_539_isPure) {
		return _4714_lit.slice(1LL, (_4714_lit.len() - 1LL));;
	};
	(_4714_lit).mut_slice(1LL, (_4714_lit.len() - 1LL));;
	jule::Slice<jule::U8> _689_s = jule::Slice<jule::U8>::alloc(0LL, _4714_lit.len(), 0);;
	jule::I64 _699_i = 0LL;;
	while ((_699_i < _4714_lit.len())) {
		{
			jule::U8 _719_b = _4714_lit[_699_i];;
			if ((_719_b == '\\')) {
				_1c0d8b9ce_strEsqSeq(&(_689_s), _4714_lit, &(_699_i));
			} else {
				jule::I32 _7513_r;
				jule::I64 _7516_size;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _234b9d062_DecodeRuneStr(_4714_lit.slice(_699_i));
					_7513_r = __jule_assign_result.__jule_result_arg0;
					_7516_size = __jule_assign_result.__jule_result_arg1;
				});
				_699_i+=_7516_size;
				_689_s=_234b9e10c_AppendRune(_689_s, _7513_r);
			};
		}
	_iter_next_1c3b26843:;
	}
	_iter_end_1c3b26843:;;
	return _234c7637c_StrFromBytes(_689_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1c0d8b2b4_tryBtoaCommonEsq(jule::Str _8321_s) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_8321_s.len() < 2LL) || (_8321_s[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _8321_s[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1c3b28d1d:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1c3b29538:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1c3b2959e:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1c3b29615:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1c3b2967b:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1c3b29703:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1c3b2977a:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1c3b29802:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1c3b29879:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1c3b29901:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1c3b293a1:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1c0d8b638_runeFromEsqSeq(jule::Str _11319_s, jule::I64* _11332_i) {
	jule::U8 _1145_b;
	jule::Bool _1148_ok;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1c0d8b2b4_tryBtoaCommonEsq(_11319_s.slice((*(_11332_i))));
		_1145_b = __jule_assign_result.__jule_result_arg0;
		_1148_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_11332_i)))++;
	if (_1148_ok) {
		((*(_11332_i)))++;
		return static_cast<jule::I32>(_1145_b);;
	};
	{
		auto &_match_expr{ _11319_s[(*(_11332_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1c3b2e50a:;
			{
				;
				jule::I32 _1249_r = static_cast<jule::I32>(({
					auto except = _2021c628d_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 5LL)), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:124:19"));
					(except.result);
				}));;
				(*(_11332_i))+=5LL;
				return _1249_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1c3b2dc35:;
			{
				;
				jule::I32 _1299_r = static_cast<jule::I32>(({
					auto except = _2021c628d_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 9LL)), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:129:19"));
					(except.result);
				}));;
				(*(_11332_i))+=9LL;
				return _1299_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1c3b2e31d:;
			{
				;
				jule::Str _1349_seq = _11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _2021c628d_ParseUint(_1349_seq, 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:136:18"));
					(except.result);
				}));;
			}
		}
		else {
			_case_begin_1c3b2ca25:;
			{
				;
				jule::Str _1399_seq = _11319_s.slice((*(_11332_i)), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _2021c628d_ParseUint(_1399_seq.slice(1LL), 8LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:141:18"));
					(except.result);
				}));;
			}
		}
		_match_end_1c3b2d152:;
	};
}



inline void _1c0d8b9ce_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I64* _14545_i) {
	jule::I32 _1465_r = _1c0d8b638_runeFromEsqSeq(_14532_s, _14545_i);;
	if ((_1465_r <= 255LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = (*(_14519_buf)); __jule_push_dest.push(static_cast<jule::U8>(_1465_r)); };
		return;;
	};
	(*(_14519_buf))=_234b9e10c_AppendRune((*(_14519_buf)), _1465_r);
}



inline jule::I64 _1c0ec4452_findFormatPrefix(jule::Slice<jule::U8>* _1122_bytes, jule::I64 _1141_i) {
	while ((_1141_i < (*(_1122_bytes)).len())) {
		{
			jule::I32 _139_r;
			jule::I64 _1312_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _234b9cc21_DecodeRune((*(_1122_bytes)).slice(_1141_i));
				_139_r = __jule_assign_result.__jule_result_arg0;
				_1312_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_139_r == '{')) {
				return _1141_i;;
			};
			_1141_i+=_1312_size;
		}
	_iter_next_1c3b5a28e:;
	}
	_iter_end_1c3b5a28e:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1c0ec4782_getFormatRange(jule::I64* _2724_i, jule::Slice<jule::U8>* _2737_bytes) {
	jule::I64 _285_start = (*(_2724_i));;
	jule::I64 _299_braces = 0LL;;
	while (((*(_2724_i)) < (*(_2737_bytes)).len())) {
		{
			jule::I32 _319_r;
			jule::I64 _3112_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _234b9cc21_DecodeRune((*(_2737_bytes)).slice((*(_2724_i))));
				_319_r = __jule_assign_result.__jule_result_arg0;
				_3112_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2724_i))+=_3112_size;
			{
				auto &_match_expr{ _319_r };
				
				if (_match_expr == '{') {
					_case_begin_1c3b5cbed:;
					{
						(_299_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1c3b5ce73:;
					{
						(_299_braces)--;
						if ((_299_braces == 0LL)) {
							return (*(_2737_bytes)).slice(_285_start, (*(_2724_i)));;
						};
					}
				}
				_match_end_1c3b5ccca:;
			};
		}
	_iter_next_1c3b5bcda:;
	}
	_iter_end_1c3b5bcda:;;
	return nullptr;;
}



inline void _1c0ec4a6d_FmtByDefault(_234c76a64_StrBuilder* _4722_buf, jule::Any* _4740_arg) {
	if (((*(_4740_arg)) == nullptr)) {
		_234c77537_WriteStr(_4722_buf, jule::Str::lit("<nil>", 5));
		return;;
	};
	{
		auto &_match_expr{ (*(_4740_arg)) };
		
		if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1c3b5c208:;
			{
				_234c77537_WriteStr(_4722_buf, _2021c12aa_FmtFloat(static_cast<jule::F64>((*(_4740_arg)).cast<jule::F32>(&__jule_any_type135)), 'g', -1LL, 32LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1c3b5eb12:;
			{
				_234c77537_WriteStr(_4722_buf, _2021c12aa_FmtFloat((*(_4740_arg)).cast<jule::F64>(&__jule_any_type5), 'g', -1LL, 64LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1c3b5e4c4:;
			{
				_234c77537_WriteStr(_4722_buf, _2021d7ce9_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I8>(&__jule_any_type136)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type137) {
			_case_begin_1c3b5e53a:;
			{
				_234c77537_WriteStr(_4722_buf, _2021d7ce9_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I16>(&__jule_any_type137)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1c3b5e5a1:;
			{
				_234c77537_WriteStr(_4722_buf, _2021d7ce9_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I32>(&__jule_any_type6)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1c3b5e617:;
			{
				_234c77537_WriteStr(_4722_buf, _2021d7ce9_FmtInt((*(_4740_arg)).cast<jule::I64>(&__jule_any_type1), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1c3b5ec33:;
			{
				_234c77537_WriteStr(_4722_buf, _2021d7931_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U8>(&__jule_any_type134)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type138) {
			_case_begin_1c3b5ec99:;
			{
				_234c77537_WriteStr(_4722_buf, _2021d7931_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U16>(&__jule_any_type138)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type139) {
			_case_begin_1c3b5ed10:;
			{
				_234c77537_WriteStr(_4722_buf, _2021d7931_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U32>(&__jule_any_type139)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1c3b5ed76:;
			{
				_234c77537_WriteStr(_4722_buf, _2021d7931_FmtUint((*(_4740_arg)).cast<jule::U64>(&__jule_any_type2), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1c3b5eddc:;
			{
				_234c77537_WriteStr(_4722_buf, (*(_4740_arg)).cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1c3b5ee53:;
			{
				if ((*(_4740_arg)).cast<jule::Bool>(&__jule_any_type3)) {
					_234c77537_WriteStr(_4722_buf, jule::Str::lit("true", 4));
				} else {
					_234c77537_WriteStr(_4722_buf, jule::Str::lit("false", 5));
				};
			}
		}
		else {
			_case_begin_1c3b5de0d:;
			{
				_234c77537_WriteStr(_4722_buf, jule::to_str((*(_4740_arg))));
			}
		}
		_match_end_1c3b5e44c:;
	};
}



inline void _1c0ec4e8b_applyFmtByDefault(_234c76a64_StrBuilder* _8627_buf, jule::I64* _8649_j, jule::Slice<jule::Any> _8657_args) {
	jule::Any _875_arg = _8657_args[(*(_8649_j))];;
	((*(_8649_j)))++;
	_1c0ec4a6d_FmtByDefault(_8627_buf, &(_875_arg));
}



inline void _1c0ec53a9_applyFmt(jule::Slice<jule::U8>* _9418_fmt, _234c76a64_StrBuilder* _9436_buf, jule::I64* _9458_j, jule::Slice<jule::Any> _9466_args) {
	if (((*(_9418_fmt)).len() == 2LL)) {
		_1c0ec4e8b_applyFmtByDefault(_9436_buf, _9458_j, _9466_args);
		return;;
	};
	if (((((((*(_9418_fmt)).len() == 4LL) && ((*(_9418_fmt))[0LL] == '{')) && ((*(_9418_fmt))[1LL] == '{')) && ((*(_9418_fmt))[2LL] == '}')) && ((*(_9418_fmt))[3LL] == '}'))) {
		_234c77537_WriteStr(_9436_buf, jule::Str::lit("{}", 2));
		return;;
	};
	_234c7727e_Write(_9436_buf, (*(_9418_fmt)));
}



inline jule::Slice<jule::U8> _1c0ec572d_Format(jule::Str _11511_fmt, jule::Slice<jule::Any> _11521_args) {
	jule::Slice<jule::U8> _1169_fmtBytes = _234c75d2c_StrBytes(_11511_fmt);;
	if ((_11521_args.len() == 0LL)) {
		return _1169_fmtBytes;;
	};
	jule::I64 _1209_i = _1c0ec4452_findFormatPrefix(&(_1169_fmtBytes), 0LL);;
	if ((_1209_i == -1LL)) {
		return _1169_fmtBytes;;
	};
	jule::I64 _1249_j = 0LL;;
	jule::I64 _1259_last = 0LL;;
	_234c76a64_StrBuilder _1269_buf = static__234c76ec6_New(_11511_fmt.len());;
	for (; (_1209_i != -1LL); _1209_i=_1c0ec4452_findFormatPrefix(&(_1169_fmtBytes), _1209_i)) {
		{
			_234c7727e_Write(&_1269_buf, _1169_fmtBytes.slice(_1259_last, _1209_i));
			jule::Slice<jule::U8> _12913_format = _1c0ec4782_getFormatRange(&(_1209_i), &(_1169_fmtBytes));;
			if ((_12913_format == nullptr)) {
				goto _iter_next_1c3b6c12a;
			};
			_1c0ec53a9_applyFmt(&(_12913_format), &(_1269_buf), &(_1249_j), _11521_args);
			if ((_1249_j >= _11521_args.len())) {
				_234c7727e_Write(&_1269_buf, _1169_fmtBytes.slice(_1209_i));
				_1259_last=_1169_fmtBytes.len();
				goto _iter_end_1c3b6c12a;
			};
			_1259_last=_1209_i;
		}
	_iter_next_1c3b6c12a:;
	}
	_iter_end_1c3b6c12a:;;
	if ((_1259_last < _1169_fmtBytes.len())) {
		_234c7727e_Write(&_1269_buf, _1169_fmtBytes.slice(_1259_last));
	};
	return _234c787d0_Buf(&_1269_buf);;
}



inline jule::Str _1c0ec77eb_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args) {
	return _234c7637c_StrFromBytes(_1c0ec572d_Format(_3111_fmt, _3121_args));;
}



inline jule::Bool _1c0c9a976_parameterUsesGenerics(jule::Ptr<_1c0c976ed_ParamIns>* _38431_p, jule::Slice<jule::Ptr<_1c0c6bb45_GenericDecl>>* _38446_generics) {
	if (_1c0c943dc_IsSelf((*((*(_38431_p))))._field_Decl.ptr())) {
		return false;;
	};
	return _1c0e0364a_kindUsesGenerics(&((*((*(_38431_p))))._field_Kind), _38446_generics);;
}



inline jule::Ptr<_1c0de00b5_TypeSymbol> _1c0c9d1e8_buildType(jule::Ptr<_1c0c5e93a_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1c0de00b5_TypeSymbol>(_1c0de00b5_TypeSymbol{._field_Decl=_9418_t, });;
}



inline jule::Ptr<_1c0da7b71_Value> _1c0c9d506_buildExpr(jule::Ptr<_1c0c63c6e_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1c0da7b71_Value>(_1c0da7b71_Value{._field_Expr=_10318_expr, });;
}



inline jule::Ptr<_1c0dd7101_TypeAlias> _1c0c9d7c0_buildTypeAlias(jule::Ptr<_1c0c76457_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1c0dd7101_TypeAlias>(_1c0dd7101_TypeAlias{._field_Scope=(*(_11223_decl))._field_Scope, ._field_Public=(*_11223_decl.alloc)._field_Public, ._field_Binded=(*_11223_decl.alloc)._field_Binded, ._field_Token=(*_11223_decl.alloc)._field_Token, ._field_Ident=(*_11223_decl.alloc)._field_Ident, ._field_Kind=_1c0c9d1e8_buildType((*_11223_decl.alloc)._field_Kind), });;
}



inline jule::Ptr<_1c0c7c89d_Field> _1c0c9db11_buildField(jule::Ptr<_1c0c79d0c_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1c0c7c89d_Field>(_1c0c7c89d_Field{._field_Token=(*(_12319_decl))._field_Token, ._field_Public=(*_12319_decl.alloc)._field_Public, ._field_Mutable=(*_12319_decl.alloc)._field_Mutable, ._field_Ident=(*_12319_decl.alloc)._field_Ident, ._field_Kind=_1c0c9d1e8_buildType((*_12319_decl.alloc)._field_Kind), ._field_Default=(*_12319_decl.alloc)._field_Default});;
}



inline jule::Slice<jule::Ptr<_1c0c7c89d_Field>> _1c0c9dd97_buildFields(jule::Slice<jule::Ptr<_1c0c79d0c_FieldDecl>>* _13421_decls) {
	jule::Slice<jule::Ptr<_1c0c7c89d_Field>> _1359_fields = jule::Slice<jule::Ptr<_1c0c7c89d_Field>>::alloc(0LL, (*(_13421_decls)).len());;
	{
		auto expr = _13421_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c41d5055:;
		if (it != expr_end) {
			jule::Ptr<_1c0c79d0c_FieldDecl> _13617_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1c0c7c89d_Field>> &__jule_push_dest = _1359_fields; __jule_push_dest.push(_1c0c9db11_buildField(_13617_decl)); };
			}
			_iter_next_1c41d5055:;
			++it;
			goto _iter_begin_1c41d5055;
		}
		_iter_end_1c41d5055:;
	};
	return _1359_fields;;
}



inline jule::Ptr<_1c0c807c4_Struct> _1c0c9e161_buildStruct(jule::Ptr<_1c0c7a703_StructDecl> _14220_decl) {
	return jule::new_ptr<_1c0c807c4_Struct>(_1c0c807c4_Struct{._field_Token=(*(_14220_decl))._field_Token, ._field_Ident=(*_14220_decl.alloc)._field_Ident, ._field_Fields=_1c0c9dd97_buildFields(&((*_14220_decl.alloc)._field_Fields)), ._field_Public=(*_14220_decl.alloc)._field_Public, ._field_Binded=(*_14220_decl.alloc)._field_Binded, ._field_Directives=(*_14220_decl.alloc)._field_Directives, ._field_Generics=(*_14220_decl.alloc)._field_Generics, });;
}



inline jule::Ptr<_1c0c93cc1_Param> _1c0c9e42a_buildParam(jule::Ptr<_1c0c70198_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1c0c93cc1_Param>(_1c0c93cc1_Param{._field_Token=(*(_15419_decl))._field_Token, ._field_Mutable=(*_15419_decl.alloc)._field_Mutable, ._field_Variadic=(*_15419_decl.alloc)._field_Variadic, ._field_Reference=(*_15419_decl.alloc)._field_Reference, ._field_Kind=_1c0c9d1e8_buildType((*_15419_decl.alloc)._field_Kind), ._field_Ident=(*_15419_decl.alloc)._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1c0c93cc1_Param>> _1c0c9e804_buildParams(jule::Slice<jule::Ptr<_1c0c70198_ParamDecl>>* _16521_decls) {
	jule::Slice<jule::Ptr<_1c0c93cc1_Param>> _1669_params = jule::Slice<jule::Ptr<_1c0c93cc1_Param>>::alloc(0LL, (*(_16521_decls)).len());;
	{
		auto expr = _16521_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3ed2ccb:;
		if (it != expr_end) {
			jule::Ptr<_1c0c70198_ParamDecl> _16717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1c0c93cc1_Param>> &__jule_push_dest = _1669_params; __jule_push_dest.push(_1c0c9e42a_buildParam(_16717_decl)); };
			}
			_iter_next_1c3ed2ccb:;
			++it;
			goto _iter_begin_1c3ed2ccb;
		}
		_iter_end_1c3ed2ccb:;
	};
	return _1669_params;;
}



inline jule::Ptr<_1c0c93540_RetType> _1c0c9ea46_buildRetType(jule::Ptr<_1c0c6282d_RetTypeDecl> _17321_decl) {
	if ((((*(_17321_decl))._field_Idents == nullptr) && ((*_17321_decl.alloc)._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1c0c93540_RetType>(_1c0c93540_RetType{._field_Kind=_1c0c9d1e8_buildType((*_17321_decl.alloc)._field_Kind), ._field_Idents=(*_17321_decl.alloc)._field_Idents});;
}



inline jule::Ptr<_1c0c95795_Fn> _1c0c9ed10_buildFunc(jule::Ptr<_1c0c715ea_FnDecl> _18318_decl) {
	return jule::new_ptr<_1c0c95795_Fn>(_1c0c95795_Fn{._field_Token=(*(_18318_decl))._field_Token, ._field_Global=(*_18318_decl.alloc)._field_Global, ._field_Unsafety=(*_18318_decl.alloc)._field_Unsafety, ._field_Public=(*_18318_decl.alloc)._field_Public, ._field_Binded=(*_18318_decl.alloc)._field_Binded, ._field_Statically=(*_18318_decl.alloc)._field_Statically, ._field_Exceptional=(*_18318_decl.alloc)._field_Exceptional, ._field_Ident=(*_18318_decl.alloc)._field_Ident, ._field_Directives=(*_18318_decl.alloc)._field_Directives, ._field_Scope=(*_18318_decl.alloc)._field_Scope, ._field_Generics=(*_18318_decl.alloc)._field_Generics, ._field_Result=_1c0c9ea46_buildRetType((*_18318_decl.alloc)._field_Result), ._field_Params=_1c0c9e804_buildParams(&((*_18318_decl.alloc)._field_Params)), });;
}



inline jule::Slice<jule::Ptr<_1c0c95795_Fn>> _1c0ca00c9_buildMethods(jule::Slice<jule::Ptr<_1c0c715ea_FnDecl>>* _20122_decls) {
	jule::Slice<jule::Ptr<_1c0c95795_Fn>> _2029_methods = jule::Slice<jule::Ptr<_1c0c95795_Fn>>::alloc(0LL, (*(_20122_decls)).len());;
	{
		auto expr = _20122_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3ed665e:;
		if (it != expr_end) {
			jule::Ptr<_1c0c715ea_FnDecl> _20317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1c0c95795_Fn>> &__jule_push_dest = _2029_methods; __jule_push_dest.push(_1c0c9ed10_buildFunc(_20317_decl)); };
			}
			_iter_next_1c3ed665e:;
			++it;
			goto _iter_begin_1c3ed665e;
		}
		_iter_end_1c3ed665e:;
	};
	return _2029_methods;;
}



inline jule::Slice<jule::Ptr<_1c0de00b5_TypeSymbol>> _1c0ca0393_buildTraitInherits(jule::Slice<jule::Ptr<_1c0c5e93a_TypeDecl>>* _20928_inherits) {
	jule::Slice<jule::Ptr<_1c0de00b5_TypeSymbol>> _2109_symbols = jule::Slice<jule::Ptr<_1c0de00b5_TypeSymbol>>::alloc(0LL, (*(_20928_inherits)).len());;
	{
		auto expr = _20928_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3eda410:;
		if (it != expr_end) {
			jule::Ptr<_1c0c5e93a_TypeDecl> _21117_it = *it;
			{
				{ jule::Slice<jule::Ptr<_1c0de00b5_TypeSymbol>> &__jule_push_dest = _2109_symbols; __jule_push_dest.push(_1c0c9d1e8_buildType(_21117_it)); };
			}
			_iter_next_1c3eda410:;
			++it;
			goto _iter_begin_1c3eda410;
		}
		_iter_end_1c3eda410:;
	};
	return _2109_symbols;;
}



inline jule::Ptr<_1c0ca8a72_Trait> _1c0ca065c_buildTrait(jule::Ptr<_1c0c7ae40_TraitDecl> _21719_decl) {
	return jule::new_ptr<_1c0ca8a72_Trait>(_1c0ca8a72_Trait{._field_Token=(*(_21719_decl))._field_Token, ._field_Ident=(*_21719_decl.alloc)._field_Ident, ._field_Public=(*_21719_decl.alloc)._field_Public, ._field_Inherits=_1c0ca0393_buildTraitInherits(&((*_21719_decl.alloc)._field_Inherits)), ._field_Methods=_1c0ca00c9_buildMethods(&((*_21719_decl.alloc)._field_Methods)), });;
}



inline jule::Ptr<_1c0caa711_EnumItem> _1c0ca0926_buildEnumItem(jule::Ptr<_1c0c77ee7_EnumItemDecl> _22722_decl) {
	return jule::new_ptr<_1c0caa711_EnumItem>(_1c0caa711_EnumItem{._field_Token=(*(_22722_decl))._field_Token, ._field_Ident=(*_22722_decl.alloc)._field_Ident, ._field_Value=_1c0c9d506_buildExpr((*_22722_decl.alloc)._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1c0caa711_EnumItem>> _1c0ca0be0_buildEnumItems(jule::Slice<jule::Ptr<_1c0c77ee7_EnumItemDecl>>* _23524_decls) {
	jule::Slice<jule::Ptr<_1c0caa711_EnumItem>> _2369_items = jule::Slice<jule::Ptr<_1c0caa711_EnumItem>>::alloc(0LL, (*(_23524_decls)).len());;
	{
		auto expr = _23524_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3edc7db:;
		if (it != expr_end) {
			jule::Ptr<_1c0c77ee7_EnumItemDecl> _23717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1c0caa711_EnumItem>> &__jule_push_dest = _2369_items; __jule_push_dest.push(_1c0ca0926_buildEnumItem(_23717_decl)); };
			}
			_iter_next_1c3edc7db:;
			++it;
			goto _iter_begin_1c3edc7db;
		}
		_iter_end_1c3edc7db:;
	};
	return _2369_items;;
}



inline jule::Ptr<_1c0cab27d_Enum> _1c0ca11da_buildEnum(jule::Ptr<_1c0c78aa8_EnumDecl> _24318_decl) {
	return jule::new_ptr<_1c0cab27d_Enum>(_1c0cab27d_Enum{._field_Token=(*(_24318_decl))._field_Token, ._field_Public=(*_24318_decl.alloc)._field_Public, ._field_Ident=(*_24318_decl.alloc)._field_Ident, ._field_Kind=_1c0c9d1e8_buildType((*_24318_decl.alloc)._field_Kind), ._field_Items=_1c0ca0be0_buildEnumItems(&((*_24318_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1c0cac3b1_TypeEnumItem> _1c0ca13b6_buildTypeEnumItem(jule::Ptr<_1c0c793d3_TypeEnumItemDecl> _25326_decl) {
	return jule::new_ptr<_1c0cac3b1_TypeEnumItem>(_1c0cac3b1_TypeEnumItem{._field_Token=(*(_25326_decl))._field_Token, ._field_Ident=(*_25326_decl.alloc)._field_Ident, ._field_Kind=_1c0c9d1e8_buildType((*_25326_decl.alloc)._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1c0cac3b1_TypeEnumItem>> _1c0ca165d_buildTypeEnumItems(jule::Slice<jule::Ptr<_1c0c793d3_TypeEnumItemDecl>>* _26128_decls) {
	jule::Slice<jule::Ptr<_1c0cac3b1_TypeEnumItem>> _2629_items = jule::Slice<jule::Ptr<_1c0cac3b1_TypeEnumItem>>::alloc(0LL, (*(_26128_decls)).len());;
	{
		auto expr = _26128_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3ee0a86:;
		if (it != expr_end) {
			jule::Ptr<_1c0c793d3_TypeEnumItemDecl> _26317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1c0cac3b1_TypeEnumItem>> &__jule_push_dest = _2629_items; __jule_push_dest.push(_1c0ca13b6_buildTypeEnumItem(_26317_decl)); };
			}
			_iter_next_1c3ee0a86:;
			++it;
			goto _iter_begin_1c3ee0a86;
		}
		_iter_end_1c3ee0a86:;
	};
	return _2629_items;;
}



inline jule::Ptr<_1c0cac988_TypeEnum> _1c0ca1927_buildTypeEnum(jule::Ptr<_1c0c79a43_TypeEnumDecl> _26922_decl) {
	return jule::new_ptr<_1c0cac988_TypeEnum>(_1c0cac988_TypeEnum{._field_Token=(*(_26922_decl))._field_Token, ._field_Public=(*_26922_decl.alloc)._field_Public, ._field_Ident=(*_26922_decl.alloc)._field_Ident, ._field_Items=_1c0ca165d_buildTypeEnumItems(&((*_26922_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1c0d4dde2_Var> _1c0ca1be1_buildVar(jule::Ptr<_1c0c727a5_VarDecl> _27817_decl) {
	return jule::new_ptr<_1c0d4dde2_Var>(_1c0d4dde2_Var{._field_Token=(*(_27817_decl))._field_Token, ._field_Ident=(*_27817_decl.alloc)._field_Ident, ._field_Binded=(*_27817_decl.alloc)._field_Binded, ._field_Constant=(*_27817_decl.alloc)._field_Constant, ._field_Mutable=(*_27817_decl.alloc)._field_Mutable, ._field_Public=(*_27817_decl.alloc)._field_Public, ._field_Statically=(*_27817_decl.alloc)._field_Statically, ._field_Reference=(*_27817_decl.alloc)._field_Reference, ._field_Kind=_1c0c9d1e8_buildType((*_27817_decl.alloc)._field_Kind), ._field_Value=_1c0c9d506_buildExpr((*_27817_decl.alloc)._field_Expr), ._field_Refers=static__1c0c9bb64_new(), ._field_Directives=(*_27817_decl.alloc)._field_Directives, });;
}



inline jule::Slice<jule::Ptr<_1c0d4dde2_Var>> _1c0ca1eaa_buildVars(jule::Slice<jule::Ptr<_1c0c727a5_VarDecl>> _29518_decls) {
	jule::Slice<jule::Ptr<_1c0d4dde2_Var>> _2969_vars = jule::Slice<jule::Ptr<_1c0d4dde2_Var>>::alloc(0LL, _29518_decls.len());;
	{
		auto expr = &(_29518_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3ee39e0:;
		if (it != expr_end) {
			jule::Ptr<_1c0c727a5_VarDecl> _29717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1c0d4dde2_Var>> &__jule_push_dest = _2969_vars; __jule_push_dest.push(_1c0ca1be1_buildVar(_29717_decl)); };
			}
			_iter_next_1c3ee39e0:;
			++it;
			goto _iter_begin_1c3ee39e0;
		}
		_iter_end_1c3ee39e0:;
	};
	return _2969_vars;;
}



inline jule::Ptr<_1c0cd21d8_Impl> _1c0ca2274_buildImpl(jule::Ptr<_1c0c7b5a0_Impl> _30318_decl) {
	return jule::new_ptr<_1c0cd21d8_Impl>(_1c0cd21d8_Impl{._field_Base=(*(_30318_decl))._field_Base, ._field_Dest=(*_30318_decl.alloc)._field_Dest, ._field_Methods=_1c0ca00c9_buildMethods(&((*_30318_decl.alloc)._field_Methods)), ._field_Statics=_1c0ca1eaa_buildVars((*_30318_decl.alloc)._field_Statics)});;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0ccc634_buildAsComptimeMethodData(jule::Ptr<_1c0c98699_FnIns>* _142135_f) {
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>((*(_142135_f)), 1)}), });;
}



inline jule::Ptr<_1c0d09782_ImportInfo> _1c0ccc942_findComptimePackage(jule::Ptr<_1c0d2b078_Sema>* _142929_s) {
	return _1c0d2b51d_SelectPackage((*(_142929_s)).ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1c0d09782_ImportInfo>>((void*)__jule_anon_1c432e534, jule::Ptr<__jule_anon_1c432e534_ctx>::make(__jule_anon_1c432e534_ctx{}).as<jule::Uintptr>(), __jule_anon_1c432e534_ctx_handler));;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0ccccb6_buildComptimeTypeInfoData(jule::Ptr<_1c0d2b078_Sema>* _143535_s, jule::Ptr<_1c0dd7de3_TypeKind>* _143550_t) {
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(_1c0d2a8b3_pushComptimeTypeInfo((*((*(_143535_s))))._field_meta.ptr(), _143550_t), 15)}), });;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0ccd107_buildComptimeValue(jule::Ptr<_1c0da69e9_Data>* _144328_d) {
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(jule::new_ptr<_1c0cc692a_comptimeValue>(_1c0cc692a_comptimeValue{._field_data=(*(_144328_d))}), 16)}), });;
}



inline jule::Str _1c0cd1182_toStrConstraints(jule::Ptr<_1c0dd650c_InsGeneric> _14321_g) {
	_234c76a64_StrBuilder _1449_sb = static__234c76ec6_New(128LL);;
	{
		auto expr = &((*_14321_g.alloc)._field_Constraint);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c42111a2:;
		if (it != expr_end) {
			jule::I64 _1459_i = it - expr->begin();
			jule::Ptr<_1c0dd7de3_TypeKind> *_14512_c = it;
			{
				_234c77537_WriteStr(&_1449_sb, _1c0dd82ab_Str((*(_14512_c)).ptr()));
				if ((((*(_14321_g))._field_Constraint.len() - _1459_i) > 1LL)) {
					_234c77537_WriteStr(&_1449_sb, jule::Str::lit(" | ", 3));
				};
			}
			_iter_next_1c42111a2:;
			++it;
			_1459_i++;
			goto _iter_begin_1c42111a2;
		}
		_iter_end_1c42111a2:;
	};
	return _234c77d2e_Str(&_1449_sb);;
}



inline jule::Bool _1c0cd154a_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1c0dd7de3_TypeKind>* _15434_g) {
	{
		auto &_match_expr{ (*(_15421_c)) };
		
		if (_match_expr == jule::Str::lit("signed", 6)) {
			_case_begin_1c421332a:;
			{
				jule::Ptr<_1c0de09bc_Prim> _1579_prim = _1c0dda544_Prim((*(_15434_g)).ptr());;
				if ((_1579_prim == nullptr)) {
					return false;;
				};
				return _2021e5da1_IsSigNum((*(_1579_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("unsigned", 8)) {
			_case_begin_1c4213391:;
			{
				jule::Ptr<_1c0de09bc_Prim> _1639_prim = _1c0dda544_Prim((*(_15434_g)).ptr());;
				if ((_1639_prim == nullptr)) {
					return false;;
				};
				return _2021e5246_IsUnsigInt((*(_1639_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("float", 5)) {
			_case_begin_1c4213407:;
			{
				jule::Ptr<_1c0de09bc_Prim> _1699_prim = _1c0dda544_Prim((*(_15434_g)).ptr());;
				if ((_1699_prim == nullptr)) {
					return false;;
				};
				return _2021e5851_IsFloat((*(_1699_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("numeric", 7)) {
			_case_begin_1c421347e:;
			{
				jule::Ptr<_1c0de09bc_Prim> _1759_prim = _1c0dda544_Prim((*(_15434_g)).ptr());;
				if ((_1759_prim == nullptr)) {
					return false;;
				};
				return _2021e5ad7_IsNum((*(_1759_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("mutable", 7)) {
			_case_begin_1c421365a:;
			{
				return _1c0dd9774_Mutable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str::lit("immutable", 9)) {
			_case_begin_1c42136c1:;
			{
				return (!(_1c0dd9774_Mutable((*(_15434_g)).ptr())));;
			}
		}
		else if (_match_expr == jule::Str::lit("comparable", 10)) {
			_case_begin_1c4213737:;
			{
				return _1c0dd94dd_Comparable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str::lit("ordered", 7)) {
			_case_begin_1c421379d:;
			{
				return _1c0dd9a0a_Ordered((*(_15434_g)).ptr());;
			}
		}
		else {
			_case_begin_1c421277a:;
			{
				return false;;
			}
		}
		_match_end_1c421313d:;
	};
}



inline jule::Bool _1c0cd1814_isBuiltinConstraint(jule::Str* _19325_ident) {
	{
		auto expr = &(_1c0cce548_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c42191aa:;
		if (it != expr_end) {
			jule::Str *_19412_bc = it;
			{
				if (((*(_19325_ident)) == (*(_19412_bc)))) {
					return true;;
				};
			}
			_iter_next_1c42191aa:;
			++it;
			goto _iter_begin_1c42191aa;
		}
		_iter_end_1c42191aa:;
	};
	return false;;
}



inline jule::Ptr<_1c0cdeaec_scopeChecker> _1c0cd441b_newScopeCheckerBase(jule::Ptr<_1c0d2b078_Sema>* _5829_s, jule::Ptr<_1c0c98699_FnIns> _5843_owner) {
	return jule::new_ptr<_1c0cdeaec_scopeChecker>(_1c0cdeaec_scopeChecker{._field_s=(*(_5829_s)), ._field_owner=_5843_owner, ._field_table=jule::new_ptr<_1c0da1681_SymbolTable>(), });;
}



inline jule::Ptr<_1c0cdeaec_scopeChecker> _1c0cd47d4_newScopeChecker(jule::Ptr<_1c0d2b078_Sema>* _6625_s, jule::Ptr<_1c0c98699_FnIns> _6639_owner) {
	jule::Ptr<_1c0cdeaec_scopeChecker> _679_base = _1c0cd441b_newScopeCheckerBase(_6625_s, _6639_owner);;
	(*(_679_base))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1c0cdd579_scopeLabel>>>(nullptr);
	(*_679_base.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1c0cddb0c_scopeGoto>>>(nullptr);
	return _679_base;;
}



inline jule::Ptr<_1c0cdd579_scopeLabel> _1c0cd4b58_findLabelParent(jule::Str* _7621_ident, jule::Ptr<_1c0cdeaec_scopeChecker> _7637_scope) {
	jule::Ptr<_1c0cdd579_scopeLabel> _779_label = _1c0ce3caa_findLabelScope(_7637_scope, _7621_ident);;
	while ((_779_label == nullptr)) {
		{
			if ((((*_7637_scope.alloc)._field_parent == nullptr) || ((*_7637_scope.alloc)._field_owner != nullptr))) {
				return nullptr;;
			};
			_7637_scope=(*_7637_scope.alloc)._field_parent;
			_779_label=_1c0ce3caa_findLabelScope(_7637_scope, _7621_ident);
		}
	_iter_next_1c4231db5:;
	}
	_iter_end_1c4231db5:;;
	return _779_label;;
}



inline jule::Bool _1c0cd5021_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_1c0cd763e_Scope>* _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1c4234ea6:;
			{
				jule::Ptr<_1c0c89932_FnCallExprModel> _939_fcem = _9021_Model.unsafe_cast_ptr<_1c0c89932_FnCallExprModel>();;
				if (((*(_939_fcem))._field_Except == (*(_9034_sc)))) {
					return true;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1c4233823:;
			{
				jule::Ptr<_1c0da69e9_Data> _989_d = _9021_Model.unsafe_cast_ptr<_1c0da69e9_Data>();;
				return _1c0cd5021_modelIsGotoScope((*(_989_d))._field_Model, _9034_sc);;
			}
		}
		_match_end_1c4234e51:;
	};
	return false;;
}



inline jule::Bool _1c0cd5395_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_1c0cd763e_Scope>* _10434_sc) {
	{
		auto &_match_expr{ (*(_10421_stmt)) };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1c4237492:;
			{
				return ((*(_10421_stmt)).cast_ptr<_1c0cd763e_Scope>(&__jule_any_type21) == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1c4237508:;
			{
				return ((*((*(_10421_stmt)).cast_ptr<_1c0cd8574_InfIter>(&__jule_any_type35)))._field_Scope == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1c423756e:;
			{
				jule::Ptr<_1c0cd9476_RangeIter> _1119_it = (*(_10421_stmt)).cast_ptr<_1c0cd9476_RangeIter>(&__jule_any_type39);;
				return (((*(_1119_it))._field_Scope == (*(_10434_sc))) || _1c0cd5021_modelIsGotoScope((*((*_1119_it.alloc)._field_Expr))._field_Model, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1c423712e:;
			{
				jule::Ptr<_1c0cd8a2a_WhileIter> _1149_it = (*(_10421_stmt)).cast_ptr<_1c0cd8a2a_WhileIter>(&__jule_any_type37);;
				return ((((*(_1149_it))._field_Scope == (*(_10434_sc))) || _1c0cd5021_modelIsGotoScope((*_1149_it.alloc)._field_Expr, _10434_sc)) || _1c0cd5021_modelIsGotoScope((*_1149_it.alloc)._field_Next, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1c4237195:;
			{
				jule::Ptr<_1c0cdb852_Match> _1199_m = (*(_10421_stmt)).cast_ptr<_1c0cdb852_Match>(&__jule_any_type46);;
				{
					auto expr = &((*(_1199_m))._field_Cases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c423b8d6:;
					if (it != expr_end) {
						jule::Ptr<_1c0cdc37a_Case> *_12016_c = it;
						{
							if (((*((*(_12016_c))))._field_Scope == (*(_10434_sc)))) {
								return true;;
							};
							{
								auto expr = &((*(*(_12016_c)).alloc)._field_Exprs);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c423c82c:;
								if (it != expr_end) {
									jule::Ptr<_1c0da69e9_Data> *_12420_expr = it;
									{
										if (_1c0cd5021_modelIsGotoScope((*((*(_12420_expr))))._field_Model, _10434_sc)) {
											return true;;
										};
									}
									_iter_next_1c423c82c:;
									++it;
									goto _iter_begin_1c423c82c;
								}
								_iter_end_1c423c82c:;
							};
						}
						_iter_next_1c423b8d6:;
						++it;
						goto _iter_begin_1c423b8d6;
					}
					_iter_end_1c423b8d6:;
				};
				return (((*_1199_m.alloc)._field_Default != nullptr) && ((*(*_1199_m.alloc)._field_Default.alloc)._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1c423720b:;
			{
				jule::Ptr<_1c0cd8277_Conditional> _1329_c = (*(_10421_stmt)).cast_ptr<_1c0cd8277_Conditional>(&__jule_any_type34);;
				{
					auto expr = &((*(_1329_c))._field_Elifs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c423e3cd:;
					if (it != expr_end) {
						jule::Ptr<_1c0cd7a5c_If> *_13316_elif = it;
						{
							if ((((*((*(_13316_elif))))._field_Scope == (*(_10434_sc))) || _1c0cd5021_modelIsGotoScope((*(*(_13316_elif)).alloc)._field_Expr, _10434_sc))) {
								return true;;
							};
						}
						_iter_next_1c423e3cd:;
						++it;
						goto _iter_begin_1c423e3cd;
					}
					_iter_end_1c423e3cd:;
				};
				return (((*_1329_c.alloc)._field_Default != nullptr) && ((*(*_1329_c.alloc)._field_Default.alloc)._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1c4237272:;
			{
				jule::Ptr<_1c0da69e9_Data> _1409_d = (*(_10421_stmt)).cast_ptr<_1c0da69e9_Data>(&__jule_any_type23);;
				return _1c0cd5021_modelIsGotoScope((*(_1409_d))._field_Model, _10434_sc);;
			}
		}
		else {
			_case_begin_1c4235517:;
			{
				return false;;
			}
		}
		_match_end_1c42354b2:;
	};
}



inline jule::I64 _1c0cd5719_countMatchType(jule::Ptr<_1c0cdb852_Match>* _14720_m, jule::Ptr<_1c0dd7de3_TypeKind>* _14732_t) {
	jule::I64 _1489_n = 0LL;;
	jule::Str _1495_kind = _1c0dd82ab_Str((*(_14732_t)).ptr());;
	_julec_label_1c4242304:;
	{
		auto expr = &((*((*(_14720_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4242733:;
		if (it != expr_end) {
			jule::Ptr<_1c0cdc37a_Case> *_15112_c = it;
			{
				if (((*(_15112_c)) == nullptr)) {
					goto _iter_next_1c4242733;
				};
				{
					auto expr = &((*((*(_15112_c))))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c424346a:;
					if (it != expr_end) {
						jule::Ptr<_1c0da69e9_Data> *_15616_expr = it;
						{
							if (((*(_15616_expr)) == nullptr)) {
								goto _iter_end_1c4242733;
							};
							if ((_1495_kind == _1c0dd82ab_Str((*((*(_15616_expr))))._field_Model.cast_ptr<_1c0dd7de3_TypeKind>(&__jule_any_type84).ptr()))) {
								(_1489_n)++;
							};
						}
						_iter_next_1c424346a:;
						++it;
						goto _iter_begin_1c424346a;
					}
					_iter_end_1c424346a:;
				};
			}
			_iter_next_1c4242733:;
			++it;
			goto _iter_begin_1c4242733;
		}
		_iter_end_1c4242733:;
	};
	return _1489_n;;
}



inline jule::Slice<jule::Ptr<_1c0da69e9_Data>> _1c0cd59d3_getDatasFromTupleData(jule::Ptr<_1c0da69e9_Data>* _17131_d) {
	if ((_1c0ddc36a_Tup((*((*(_17131_d))))._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_17131_d))))._field_Model };
			
			if (_match_expr.type == &__jule_any_type81) {
				_case_begin_1c4247903:;
				{
					return (*((*((*(_17131_d))))._field_Model.unsafe_cast_ptr<_1c0c8d11c_TupleExprModel>()))._field_Datas;;
				}
			}
			else {
				_case_begin_1c4244eb6:;
				{
					jule::Ptr<_1c0de5ab0_Tuple> _17717_t = _1c0ddc36a_Tup((*((*(_17131_d))))._field_Kind);;
					jule::Slice<jule::Ptr<_1c0da69e9_Data>> _17817_r = jule::Slice<jule::Ptr<_1c0da69e9_Data>>::alloc(0LL, (*(_17717_t))._field_Types.len());;
					{
						auto expr = &((*_17717_t.alloc)._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c424679d:;
						if (it != expr_end) {
							jule::Ptr<_1c0dd7de3_TypeKind> _17925_kind = *it;
							{
								{ jule::Slice<jule::Ptr<_1c0da69e9_Data>> &__jule_push_dest = _17817_r; __jule_push_dest.push(jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_17925_kind, ._field_Mutable=true, })); };
							}
							_iter_next_1c424679d:;
							++it;
							goto _iter_begin_1c424679d;
						}
						_iter_end_1c424679d:;
					};
					return _17817_r;;
				}
			}
			_match_end_1c4244e61:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1c0da69e9_Data>>::make({(*(_17131_d))});;
	};
}



inline jule::Bool _1c0cd631e_checkMut(jule::Ptr<_1c0d2b078_Sema>* _20618_s, jule::Ptr<_1c0da69e9_Data>* _20629_left, jule::Ptr<_1c0da69e9_Data> _20646_right, jule::Ptr<_1c0c49480_Token> _20660_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*((*(_20629_left))))._field_Mutable))) {
			_case_begin_1c424aa27:;
			{
				_1c0d2dbb3_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str::lit("cannot assign to immutable storage", 34), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_20646_right != nullptr) && (!((*_20646_right.alloc)._field_Mutable))) && _1c0dd9774_Mutable((*_20646_right.alloc)._field_Kind.ptr()))) {
			_case_begin_1c424aac1:;
			{
				if ((((*(_20660_op))._field_Id != static_cast<jule::U64>(71LLU)) && (_1c0ddbab7_Struct((*_20646_right.alloc)._field_Kind) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1c0d2dbb3_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*_20646_right.alloc)._field_Kind), &__jule_any_type4)}));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c424a9a0:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1c424a8d4:;
	};
}



inline jule::Bool _1c0cd6808_checkAssign(jule::Ptr<_1c0d2b078_Sema>* _22521_s, jule::Ptr<_1c0da69e9_Data>* _22536_left, jule::Ptr<_1c0da69e9_Data> _22553_right, jule::Ptr<_1c0c49480_Token> _22567_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c0c98699_FnIns> _2265_f = _1c0ddb831_Fn((*((*(_22536_left))))._field_Kind.ptr());;
	if ((((_2265_f != nullptr) && ((*_2265_f.alloc)._field_Decl != nullptr)) && (*(*_2265_f.alloc)._field_Decl.alloc)._field_Global)) {
		_1c0d2dbb3_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("type is not support assignment", 30), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1c0da7401_IsConst((*(_22536_left)).ptr())) {
			_case_begin_1c42512e1:;
			{
				_1c0d2dbb3_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("constants is can't assign", 25), jule::Slice<jule::Any>());
				_1c0d2e026_pushSuggestion((*(_22521_s)).ptr(), jule::Str::lit("remove constant qualifer if you need to assign", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*((*(_22536_left))))._field_Lvalue))) {
			_case_begin_1c4251357:;
			{
				_1c0d2dbb3_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("invalid expression: expected lvalue for assignment", 50), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1c0cd631e_checkMut(_22521_s, _22536_left, _22553_right, _22567_op)))) {
			_case_begin_1c42513bd:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c4251236:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1c42510d2:;
	};
}



inline jule::Bool _1c0cd6ac2_isValidAstStForNextSt(jule::Any* _24731_n) {
	{
		auto &_match_expr{ (*(_24731_n)) };
		
		if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1c42537cc:;
			{
				return (!((*((*(_24731_n)).cast_ptr<_1c0c6d3d8_AssignSt>(&__jule_any_type57)))._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1c4253568:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c4253425:;
			{
				return false;;
			}
		}
		_match_end_1c42533c0:;
	};
}



inline jule::Bool _1c0cd6d8b_isValidStForNextSt(jule::Any* _25824_st) {
	{
		auto &_match_expr{ (*(_25824_st)) };
		
		if (_match_expr.type == &__jule_any_type42 || _match_expr.type == &__jule_any_type43 || _match_expr.type == &__jule_any_type45) {
			_case_begin_1c4254514:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1c4253c1c:;
			{
				{
					auto &_match_expr{ (*((*(_25824_st)).cast_ptr<_1c0da69e9_Data>(&__jule_any_type23)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type33) {
						_case_begin_1c42553a0:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1c4255867:;
						{
							return false;;
						}
					}
					_match_end_1c4255812:;
				};
			}
		}
		else {
			_case_begin_1c4253ba6:;
			{
				return false;;
			}
		}
		_match_end_1c4253b51:;
	};
}



inline jule::Bool _1c0cd7155_stmtIsDef(jule::Any* _27615_st) {
	{
		auto &_match_expr{ (*(_27615_st)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c425644a:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c4254e4e:;
			{
				return false;;
			}
		}
		_match_end_1c42548aa:;
	};
}



inline jule::U64 _1c0d020b5_removeEqFromOp(jule::U64 _219419_op) {
	{
		auto &_match_expr{ _219419_op };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1c4256868:;
			{
				return static_cast<jule::U64>(60LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1c42568ce:;
			{
				return static_cast<jule::U64>(61LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1c42569cd:;
			{
				return static_cast<jule::U64>(62LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1c4256a44:;
			{
				return static_cast<jule::U64>(63LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1c4256bcb:;
			{
				return static_cast<jule::U64>(64LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1c4256c42:;
			{
				return static_cast<jule::U64>(56LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1c4256ca8:;
			{
				return static_cast<jule::U64>(57LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1c4256d30:;
			{
				return static_cast<jule::U64>(67LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1c4256da7:;
			{
				return static_cast<jule::U64>(65LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1c4256e2e:;
			{
				return static_cast<jule::U64>(66LLU);;
			}
		}
		else {
			_case_begin_1c4254ec6:;
			{
				return _219419_op;;
			}
		}
		_match_end_1c4256703:;
	};
}



inline void _1c0d022e6_makeComptimeRange(jule::Ptr<_1c0da69e9_Data>* _222327_d) {
	{
		
		if ((_1c0ddc887_comptimeStructFields((*((*(_222327_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c4257391:;
			{
				(*((*(_222327_d))))._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(jule::new_ptr<_1c0cb0ae0_comptimeRange>(_1c0cb0ae0_comptimeRange{._field_kind=jule::Trait<_1c0cb08c0_comptimeRangeKind>(_1c0ddc887_comptimeStructFields((*((*(_222327_d))))._field_Kind), 0)}), 5)});
			}
		}
		else if ((_1c0ddcda4_comptimeEnumFields((*((*(_222327_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c425a916:;
			{
				(*((*(_222327_d))))._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(jule::new_ptr<_1c0cb0ae0_comptimeRange>(_1c0cb0ae0_comptimeRange{._field_kind=jule::Trait<_1c0cb08c0_comptimeRangeKind>(_1c0ddcda4_comptimeEnumFields((*((*(_222327_d))))._field_Kind), 2)}), 5)});
			}
		}
		else if ((_1c0dddb74_comptimeTypeInfos((*((*(_222327_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c425a97c:;
			{
				(*((*(_222327_d))))._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(jule::new_ptr<_1c0cb0ae0_comptimeRange>(_1c0cb0ae0_comptimeRange{._field_kind=jule::Trait<_1c0cb08c0_comptimeRangeKind>(_1c0dddb74_comptimeTypeInfos((*((*(_222327_d))))._field_Kind), 4)}), 5)});
			}
		}
		else if ((_1c0ddd3c1_comptimeParams((*((*(_222327_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c4257407:;
			{
				(*((*(_222327_d))))._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(jule::new_ptr<_1c0cb0ae0_comptimeRange>(_1c0cb0ae0_comptimeRange{._field_kind=jule::Trait<_1c0cb08c0_comptimeRangeKind>(_1c0ddd3c1_comptimeParams((*((*(_222327_d))))._field_Kind), 3)}), 5)});
			}
		}
		else if ((_1c0dde191_comptimeStatics((*((*(_222327_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c425746d:;
			{
				(*((*(_222327_d))))._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(jule::new_ptr<_1c0cb0ae0_comptimeRange>(_1c0cb0ae0_comptimeRange{._field_kind=jule::Trait<_1c0cb08c0_comptimeRangeKind>(_1c0dde191_comptimeStatics((*((*(_222327_d))))._field_Kind), 1)}), 5)});
			}
		}
		else if ((_1c0ddebca_comptimeFiles((*((*(_222327_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c42574d4:;
			{
				(*((*(_222327_d))))._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(jule::new_ptr<_1c0cb0ae0_comptimeRange>(_1c0cb0ae0_comptimeRange{._field_kind=jule::Trait<_1c0cb08c0_comptimeRangeKind>(_1c0ddebca_comptimeFiles((*((*(_222327_d))))._field_Kind), 5)}), 5)});
			}
		}
		else {
			_case_begin_1c425732a:;
			{
				(*((*(_222327_d))))._field_Decl=true;
			}
		}
		_match_end_1c425a5d6:;
	};
}



inline jule::Bool _1c0d027e1_canComptimeMatch(jule::Ptr<_1c0da69e9_Data>* _224426_d) {
	if ((!(_1c0da077e_isGoodValueToInfer(_224426_d)))) {
		return false;;
	};
	return (_1c0da7401_IsConst((*(_224426_d)).ptr()) || (_1c0ddde0a_comptimeTypeInfo((*((*(_224426_d))))._field_Kind.ptr()) != nullptr));;
}



inline jule::Ptr<_1c0d4dde2_Var> _1c0d06c68_findVarInPackage(jule::Slice<jule::Ptr<_1c0da1681_SymbolTable>>* _4626_files, jule::Str* _4650_ident, jule::Bool _4662_binded) {
	{
		auto expr = _4626_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c45c28e8:;
		if (it != expr_end) {
			jule::Ptr<_1c0da1681_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1c0d4dde2_Var> _4813_v = _1c0da2066_FindVar(_4717_f.ptr(), (*(_4650_ident)), _4662_binded);;
				if ((_4813_v != nullptr)) {
					return _4813_v;;
				};
			}
			_iter_next_1c45c28e8:;
			++it;
			goto _iter_begin_1c45c28e8;
		}
		_iter_end_1c45c28e8:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0dd7101_TypeAlias> _1c0d071db_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1c0da1681_SymbolTable>>* _5832_files, jule::Str* _5856_ident, jule::Bool _5868_binded) {
	{
		auto expr = _5832_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c45c3a09:;
		if (it != expr_end) {
			jule::Ptr<_1c0da1681_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1c0dd7101_TypeAlias> _6013_ta = _1c0da2462_FindTypeAlias(_5917_f.ptr(), (*(_5856_ident)), _5868_binded);;
				if ((_6013_ta != nullptr)) {
					return _6013_ta;;
				};
			}
			_iter_next_1c45c3a09:;
			++it;
			goto _iter_begin_1c45c3a09;
		}
		_iter_end_1c45c3a09:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0c807c4_Struct> _1c0d0761a_findStructInPackage(jule::Slice<jule::Ptr<_1c0da1681_SymbolTable>>* _7029_files, jule::Str* _7053_ident, jule::Bool _7065_binded) {
	{
		auto expr = _7029_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c45c5016:;
		if (it != expr_end) {
			jule::Ptr<_1c0da1681_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1c0c807c4_Struct> _7213_s = _1c0da285d_FindStruct(_7117_f.ptr(), (*(_7053_ident)), _7065_binded);;
				if ((_7213_s != nullptr)) {
					return _7213_s;;
				};
			}
			_iter_next_1c45c5016:;
			++it;
			goto _iter_begin_1c45c5016;
		}
		_iter_end_1c45c5016:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0c95795_Fn> _1c0d07ac1_findFnInPackage(jule::Slice<jule::Ptr<_1c0da1681_SymbolTable>>* _8225_files, jule::Str* _8249_ident, jule::Bool _8261_binded) {
	{
		auto expr = _8225_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c45c6523:;
		if (it != expr_end) {
			jule::Ptr<_1c0da1681_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1c0c95795_Fn> _8413_f = _1c0da2c59_FindFn(_8317_file.ptr(), (*(_8249_ident)), _8261_binded);;
				if ((_8413_f != nullptr)) {
					return _8413_f;;
				};
			}
			_iter_next_1c45c6523:;
			++it;
			goto _iter_begin_1c45c6523;
		}
		_iter_end_1c45c6523:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0ca8a72_Trait> _1c0d07e12_findTraitInPackage(jule::Slice<jule::Ptr<_1c0da1681_SymbolTable>>* _9428_files, jule::Str* _9452_ident) {
	{
		auto expr = _9428_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c45c7887:;
		if (it != expr_end) {
			jule::Ptr<_1c0da1681_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1c0ca8a72_Trait> _9613_t = _1c0da309a_FindTrait(_9517_f.ptr(), (*(_9452_ident)));;
				if ((_9613_t != nullptr)) {
					return _9613_t;;
				};
			}
			_iter_next_1c45c7887:;
			++it;
			goto _iter_begin_1c45c7887;
		}
		_iter_end_1c45c7887:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0cab27d_Enum> _1c0d08286_findEnumInPackage(jule::Slice<jule::Ptr<_1c0da1681_SymbolTable>>* _10627_files, jule::Str* _10651_ident) {
	{
		auto expr = _10627_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c45c90c5:;
		if (it != expr_end) {
			jule::Ptr<_1c0da1681_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1c0cab27d_Enum> _10813_e = _1c0da33db_FindEnum(_10717_f.ptr(), (*(_10651_ident)));;
				if ((_10813_e != nullptr)) {
					return _10813_e;;
				};
			}
			_iter_next_1c45c90c5:;
			++it;
			goto _iter_begin_1c45c90c5;
		}
		_iter_end_1c45c90c5:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0cac988_TypeEnum> _1c0d0860a_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1c0da1681_SymbolTable>>* _11831_files, jule::Str* _11855_ident) {
	{
		auto expr = _11831_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c45ca406:;
		if (it != expr_end) {
			jule::Ptr<_1c0da1681_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_1c0cac988_TypeEnum> _12013_e = _1c0da372c_FindTypeEnum(_11917_f.ptr(), (*(_11855_ident)));;
				if ((_12013_e != nullptr)) {
					return _12013_e;;
				};
			}
			_iter_next_1c45ca406:;
			++it;
			goto _iter_begin_1c45ca406;
		}
		_iter_end_1c45ca406:;
	};
	return nullptr;;
}



inline jule::Any _1c0d08b49_defByIdentPackage(jule::Slice<jule::Ptr<_1c0da1681_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_binded) {
	{
		auto expr = _12927_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c45cb8be:;
		if (it != expr_end) {
			jule::Ptr<_1c0da1681_SymbolTable> _13017_file = *it;
			{
				jule::Any _13113_def = _1c0da46ea_defByIdent(_13017_file.ptr(), _12951_ident, _12963_binded);;
				if ((_13113_def != nullptr)) {
					return _13113_def;;
				};
			}
			_iter_next_1c45cb8be:;
			++it;
			goto _iter_begin_1c45cb8be;
		}
		_iter_end_1c45cb8be:;
	};
	return nullptr;;
}



inline jule::Bool _1c0d0eb83_isStdPackage(jule::Str* _35518_f, jule::Str _35526_p) {
	return _21b86a62c_HasPrefix((*(_35518_f)), _21b8752c4_Join(jule::Slice<jule::Str>::make({_21b989ce0_PathStdlib,_35526_p})));;
}



inline jule::Bool _1c0d28718_isValidModelForRef(jule::Any* _1328_m) {
	{
		auto &_match_expr{ (*(_1328_m)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c45dc5c2:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1c45dc638:;
			{
				jule::Ptr<_1c0c8c5a0_StructSubIdentExprModel> _1813_model = (*(_1328_m)).cast_ptr<_1c0c8c5a0_StructSubIdentExprModel>(&__jule_any_type98);;
				return (((*(_1813_model))._field_Field != nullptr) && _1c0d28718_isValidModelForRef(&((*((*_1813_model.alloc)._field_Expr))._field_Model)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1c45dc69e:;
			{
				jule::Ptr<_1c0c87d2b_UnaryExprModel> _2113_unary = (*(_1328_m)).cast_ptr<_1c0c87d2b_UnaryExprModel>(&__jule_any_type110);;
				if (((*((*(_2113_unary))._field_Op))._field_Id != static_cast<jule::U64>(62LLU))) {
					return false;;
				};
				if ((_1c0ddaa61_Ptr((*((*_2113_unary.alloc)._field_Expr))._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1c0dda7ca_Sptr((*(*_2113_unary.alloc)._field_Expr.alloc)._field_Kind) == nullptr)) {
					return false;;
				};
				return _1c0d28718_isValidModelForRef(&((*(*_2113_unary.alloc)._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1c45dc715:;
			{
				jule::Ptr<_1c0c8a2b2_IndexingExprModel> _3513_indexing = (*(_1328_m)).cast_ptr<_1c0c8a2b2_IndexingExprModel>(&__jule_any_type44);;
				return _1c0d28718_isValidModelForRef(&((*((*(_3513_indexing))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1c45dbcdb:;
			{
				return false;;
			}
		}
		_match_end_1c45dbc86:;
	};
}



inline _21b8c54de_Log _1c0d28bbe_compilerErr(jule::Ptr<_1c0c49480_Token>* _4217_token, jule::Bool _4232_line, jule::Str _4244_fmt, jule::Slice<jule::Any> _4257_args) {
	_21b8c54de_Log _439_log = _21b8c54de_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_4217_token))))._field_Row, ._field_Column=(*((*(_4217_token))))._field_Column, ._field_Path=(*((*((*(_4217_token))))._field_File))._field_Path, ._field_Text=_21b8c5951_Logf(_4244_fmt, _4257_args), };;
	if (_4232_line) {
		_439_log._field_Line=_1c0c50c28_GetRow((*((*(_4217_token))))._field_File, (*((*(_4217_token))))._field_Row);
	};
	return _439_log;;
}



inline jule::Bool _1c0d29043_impIsLookupable(jule::Ptr<_1c0d09782_ImportInfo>* _5621_i, jule::Str* _5638_ident) {
	if ((*((*(_5621_i))))._field_Binded) {
		return false;;
	};
	if ((!((*((*(_5621_i))))._field_ImportAll))) {
		if (((*((*(_5621_i))))._field_Selected.len() > 0LL)) {
			return _1c0d0c114_existIdent((*(_5621_i)).ptr(), (*(_5638_ident)));;
		};
	};
	return (*((*(_5621_i))))._field_ImportAll;;
}



inline void _1c0d29373_appendRetVars(jule::Slice<jule::Ptr<_1c0d4dde2_Var>>* _6823_dest, jule::Ptr<_1c0c98699_FnIns>* _6842_f) {
	if ((_1c0c95c18_IsVoid((*((*(_6842_f))))._field_Decl.ptr()) || ((*((*(_6842_f))))._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1c0dd7de3_TypeKind>> _739_types = _1c0c99898_Types((*(_6842_f)).ptr());;
	{
		auto expr = &((*((*(*((*(_6842_f))))._field_Decl.alloc)._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c45e8358:;
		if (it != expr_end) {
			jule::I64 _7410_i = it - expr->begin();
			jule::Ptr<_1c0c49480_Token> _7417_ident = *it;
			{
				if ((_1c0c4bd67_IsIgnoreIdent((*(_7417_ident))._field_Kind) || _1c0c4c131_IsAnonIdent((*_7417_ident.alloc)._field_Kind))) {
					goto _iter_next_1c45e8358;
				};
				{ jule::Slice<jule::Ptr<_1c0d4dde2_Var>> &__jule_push_dest = (*(_6823_dest)); __jule_push_dest.push(jule::new_ptr<_1c0d4dde2_Var>(_1c0d4dde2_Var{._field_Scope=(*((*(_6842_f))))._field_Scope, ._field_Token=_7417_ident, ._field_Ident=(*_7417_ident.alloc)._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_1c0de00b5_TypeSymbol>(_1c0de00b5_TypeSymbol{._field_Kind=_739_types[_7410_i]}), ._field_Value=jule::new_ptr<_1c0da7b71_Value>(_1c0da7b71_Value{._field_Data=jule::new_ptr<_1c0da69e9_Data>()}), ._field_RetOrder=_7410_i, })); };
			}
			_iter_next_1c45e8358:;
			++it;
			_7410_i++;
			goto _iter_begin_1c45e8358;
		}
		_iter_end_1c45e8358:;
	};
	if ((((*(*(*((*(_6842_f))))._field_Decl.alloc)._field_Result.alloc)._field_Idents.len() == 1LL) && ((*(_6823_dest)).len() == 1LL))) {
		(*((*(_6823_dest))[((*(_6823_dest)).len() - 1LL)]))._field_RetOrder=-1LL;
	};
}



inline void _1c0d2965e_appendParamVars(jule::Slice<jule::Ptr<_1c0d4dde2_Var>>* _9825_dest, jule::Ptr<_1c0c98699_FnIns>* _9844_f) {
	if (((*((*(_9844_f))))._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_9844_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c45ecbdc:;
		if (it != expr_end) {
			jule::Ptr<_1c0c976ed_ParamIns> _10317_p = *it;
			{
				if ((_1c0c4bd67_IsIgnoreIdent((*((*(_10317_p))._field_Decl))._field_Ident) || _1c0c4c131_IsAnonIdent((*(*_10317_p.alloc)._field_Decl.alloc)._field_Ident))) {
					goto _iter_next_1c45ecbdc;
				};
				jule::Ptr<_1c0d4dde2_Var> _10813_v = jule::new_ptr<_1c0d4dde2_Var>(_1c0d4dde2_Var{._field_Scope=(*((*(_9844_f))))._field_Scope, ._field_Token=(*(*_10317_p.alloc)._field_Decl.alloc)._field_Token, ._field_Ident=(*(*_10317_p.alloc)._field_Decl.alloc)._field_Ident, ._field_Mutable=(*(*_10317_p.alloc)._field_Decl.alloc)._field_Mutable, ._field_Used=true, ._field_Reference=(*(*_10317_p.alloc)._field_Decl.alloc)._field_Reference, ._field_Kind=jule::new_ptr<_1c0de00b5_TypeSymbol>(), ._field_Value=jule::new_ptr<_1c0da7b71_Value>(_1c0da7b71_Value{._field_Data=jule::new_ptr<_1c0da69e9_Data>()}), });;
				{
					
					if (_1c0c943dc_IsSelf((*_10317_p.alloc)._field_Decl)) {
						_case_begin_1c4601a37:;
						{
							(*((*(_10813_v))._field_Kind))._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1c0dd793c_Kind>((*((*(_9844_f))))._field_Owner, 0)});
							(*_10813_v.alloc)._field_Reference=(!(_1c0c94673_IsRef((*_10317_p.alloc)._field_Decl)));
							if (_1c0c94673_IsRef((*_10317_p.alloc)._field_Decl)) {
								((*(_10813_v))._field_Ident).mut_slice(1LL);;
								(*((*(*_10813_v.alloc)._field_Kind.alloc)._field_Kind))._field_Kind=jule::Trait<_1c0dd793c_Kind>(jule::new_ptr<_1c0de44e8_Sptr>(_1c0de44e8_Sptr{._field_Elem=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_BindIdent=(*(*(*_10813_v.alloc)._field_Kind.alloc)._field_Kind.alloc)._field_BindIdent, ._field_Kind=(*(*(*_10813_v.alloc)._field_Kind.alloc)._field_Kind.alloc)._field_Kind})}), 21);
							};
						}
					}
					else if ((*(*_10317_p.alloc)._field_Decl.alloc)._field_Variadic) {
						_case_begin_1c460176d:;
						{
							(*((*(_10813_v))._field_Kind))._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1c0dd793c_Kind>(jule::new_ptr<_1c0de4ebb_Slc>(_1c0de4ebb_Slc{._field_Elem=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_BindIdent=(*((*_10317_p.alloc)._field_Kind))._field_BindIdent, ._field_Kind=(*(*_10317_p.alloc)._field_Kind.alloc)._field_Kind})}), 22)});
						}
					}
					else {
						_case_begin_1c4601707:;
						{
							(*((*(_10813_v))._field_Kind))._field_Kind=(*_10317_p.alloc)._field_Kind;
						}
					}
					_match_end_1c46015e7:;
				};
				{ jule::Slice<jule::Ptr<_1c0d4dde2_Var>> &__jule_push_dest = (*(_9825_dest)); __jule_push_dest.push(_10813_v); };
			}
			_iter_next_1c45ecbdc:;
			++it;
			goto _iter_begin_1c45ecbdc;
		}
		_iter_end_1c45ecbdc:;
	};
}



inline void _1c0d2994a_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1c0dd7101_TypeAlias>>* _15834_dest, jule::Ptr<_1c0c98699_FnIns>* _15859_f) {
	jule::I64 _1599_size = (*((*(_15859_f))))._field_Generics.len();;
	if (((*((*((*(_15859_f))))._field_Decl))._field_Owner != nullptr)) {
		_1599_size+=(*(*(*((*(_15859_f))))._field_Decl.alloc)._field_Owner.alloc)._field_Generics.len();
	};
	if ((_1599_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_15859_f))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4609ec4:;
		if (it != expr_end) {
			jule::I64 _16810_i = it - expr->begin();
			jule::Ptr<_1c0dd650c_InsGeneric> _16817_g = *it;
			{
				jule::Ptr<_1c0c6bb45_GenericDecl> _16913_decl = (*(*((*(_15859_f))))._field_Decl.alloc)._field_Generics[_16810_i];;
				{ jule::Slice<jule::Ptr<_1c0dd7101_TypeAlias>> &__jule_push_dest = (*(_15834_dest)); __jule_push_dest.push(jule::new_ptr<_1c0dd7101_TypeAlias>(_1c0dd7101_TypeAlias{._field_Scope=(*(*((*(_15859_f))))._field_Decl.alloc)._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_16913_decl.alloc)._field_Token, ._field_Ident=(*(_16913_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1c0de00b5_TypeSymbol>(_1c0de00b5_TypeSymbol{._field_Kind=(*(_16817_g))._field_Kind}), })); };
			}
			_iter_next_1c4609ec4:;
			++it;
			_16810_i++;
			goto _iter_begin_1c4609ec4;
		}
		_iter_end_1c4609ec4:;
	};
	if (((*(*((*(_15859_f))))._field_Decl.alloc)._field_Owner != nullptr)) {
		jule::Ptr<_1c0c83552_StructIns> _18113_owner = (*((*(_15859_f))))._field_Owner;;
		{
			auto expr = &((*_18113_owner.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c460b4ae:;
			if (it != expr_end) {
				jule::I64 _18214_i = it - expr->begin();
				jule::Ptr<_1c0dd650c_InsGeneric> _18221_g = *it;
				{
					jule::Ptr<_1c0c6bb45_GenericDecl> _18317_decl = (*((*(_18113_owner))._field_Decl))._field_Generics[_18214_i];;
					{ jule::Slice<jule::Ptr<_1c0dd7101_TypeAlias>> &__jule_push_dest = (*(_15834_dest)); __jule_push_dest.push(jule::new_ptr<_1c0dd7101_TypeAlias>(_1c0dd7101_TypeAlias{._field_Scope=(*(*((*(_15859_f))))._field_Decl.alloc)._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_18317_decl.alloc)._field_Token, ._field_Ident=(*(_18317_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1c0de00b5_TypeSymbol>(_1c0de00b5_TypeSymbol{._field_Kind=(*(_18221_g))._field_Kind}), })); };
				}
				_iter_next_1c460b4ae:;
				++it;
				_18214_i++;
				goto _iter_begin_1c460b4ae;
			}
			_iter_end_1c460b4ae:;
		};
	};
}



inline jule::Ptr<_1c0da1681_SymbolTable> _1c0d29cbe_findFile(jule::Slice<jule::Ptr<_1c0da1681_SymbolTable>>* _19618_files, jule::Ptr<_1c0c4ec16_File>* _19642_handler) {
	{
		auto expr = _19618_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c46104e6:;
		if (it != expr_end) {
			jule::Ptr<_1c0da1681_SymbolTable> _19717_fl = *it;
			{
				if (((*(_19717_fl))._field_File == (*(_19642_handler)))) {
					return _19717_fl;;
				};
			}
			_iter_next_1c46104e6:;
			++it;
			goto _iter_begin_1c46104e6;
		}
		_iter_end_1c46104e6:;
	};
	return nullptr;;
}



inline void _1c0d2a275_pushSuggestion(_21b8c54de_Log* _20530_log, jule::Str _20541_fmt, jule::Slice<jule::Any> _20554_args) {
	(*(_20530_log))._field_Suggestion=_21b8c5951_Logf(_20541_fmt, _20554_args);
}



inline void _1c0d4c5c7_pushImplemented(jule::Ptr<_1c0ca8a72_Trait> _288224_t, jule::Ptr<_1c0c807c4_Struct>* _288240_d) {
	_julec_label_1c46123e9:;
	{
		
		if (((*(_288224_t))._field_Implemented.len() > 0LL)) {
			_case_begin_1c4613285:;
			{
				{
					auto expr = &((*_288224_t.alloc)._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c4613be2:;
					if (it != expr_end) {
						jule::Ptr<_1c0c807c4_Struct> _288616_s = *it;
						{
							if ((_288616_s == (*(_288240_d)))) {
								goto _match_end_1c4612729;
							};
						}
						_iter_next_1c4613be2:;
						++it;
						goto _iter_begin_1c4613be2;
					}
					_iter_end_1c4613be2:;
				};
				goto _case_begin_1c46127c3;
			}
		}
		else {
			_case_begin_1c46127c3:;
			{
				(*(_288224_t))._field_Implemented=jule::append((*_288224_t.alloc)._field_Implemented,jule::Slice<jule::Ptr<_1c0c807c4_Struct>>::make({(*(_288240_d))}));
			}
		}
		_match_end_1c4612729:;
	};
	{
		auto expr = &((*(_288224_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4614066:;
		if (it != expr_end) {
			jule::Ptr<_1c0de00b5_TypeSymbol> _289517_i = *it;
			{
				_1c0d4c5c7_pushImplemented(_1c0ddbd4d_Trait((*(_289517_i))._field_Kind.ptr()), _288240_d);
			}
			_iter_next_1c4614066:;
			++it;
			goto _iter_begin_1c4614066;
		}
		_iter_end_1c4614066:;
	};
}



inline void _1c0d4c8b3_pushImplements(jule::Ptr<_1c0c807c4_Struct>* _290024_s, jule::Ptr<_1c0ca8a72_Trait> _290040_t) {
	_julec_label_1c4615452:;
	{
		
		if (((*((*(_290024_s))))._field_Implements.len() > 0LL)) {
			_case_begin_1c4616200:;
			{
				{
					auto expr = &((*((*(_290024_s))))._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c4616b5c:;
					if (it != expr_end) {
						jule::Ptr<_1c0ca8a72_Trait> _290416_b = *it;
						{
							if ((_290416_b == _290040_t)) {
								goto _match_end_1c4615694;
							};
						}
						_iter_next_1c4616b5c:;
						++it;
						goto _iter_begin_1c4616b5c;
					}
					_iter_end_1c4616b5c:;
				};
				goto _case_begin_1c461573d;
			}
		}
		else {
			_case_begin_1c461573d:;
			{
				{ jule::Slice<jule::Ptr<_1c0ca8a72_Trait>> &__jule_push_dest = (*((*(_290024_s))))._field_Implements; __jule_push_dest.push(_290040_t); };
			}
		}
		_match_end_1c4615694:;
	};
	{
		auto expr = &((*(_290040_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4616ed1:;
		if (it != expr_end) {
			jule::Ptr<_1c0de00b5_TypeSymbol> _291317_i = *it;
			{
				_1c0d4c8b3_pushImplements(_290024_s, _1c0ddbd4d_Trait((*(_291317_i))._field_Kind.ptr()));
			}
			_iter_next_1c4616ed1:;
			++it;
			goto _iter_begin_1c4616ed1;
		}
		_iter_end_1c4616ed1:;
	};
}



inline jule::Bool _1c0d8c260_traitHasReferenceReceiver(jule::Ptr<_1c0ca8a72_Trait>* _2831_t) {
	{
		auto expr = &((*((*(_2831_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c551b8da:;
		if (it != expr_end) {
			jule::Ptr<_1c0c95795_Fn> *_2912_f = it;
			{
				if ((*((*(_2912_f))))._field_Statically) {
					goto _iter_next_1c551b8da;
				};
				jule::Ptr<_1c0c93cc1_Param> _359_p = (*(*(_2912_f)).alloc)._field_Params[0LL];;
				if ((_1c0c94673_IsRef(_359_p.ptr()) && _1c0c943dc_IsSelf(_359_p))) {
					return true;;
				};
			}
			_iter_next_1c551b8da:;
			++it;
			goto _iter_begin_1c551b8da;
		}
		_iter_end_1c551b8da:;
	};
	return false;;
}



inline jule::Bool _1c0d8c617_floatAssignable(jule::Str* _4321_kind, jule::Ptr<_1c0da69e9_Data>* _4333_d) {
	jule::Str _445_value = _2021c12aa_FmtFloat(_2021e8d3d_AsF64((*((*(_4333_d))))._field_Constant.ptr()), 'g', -1LL, 64LL);;
	return _2021db98a_CheckBitFloat(_445_value, _2021da4e4_BitsizeOf((*(_4321_kind))));;
}



inline jule::Bool _1c0d8c98b_sigAssignable(jule::Str _4818_kind, jule::Ptr<_1c0da69e9_Data>* _4830_d) {
	jule::F64 _495_min = _2021e1b7c_Min(_4818_kind);;
	jule::F64 _505_max = _2021e1e13_Max(_4818_kind);;
	{
		
		if (_2021eab86_IsF64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_1c5520427:;
			{
				jule::F64 _539_x = _2021e858a_ReadF64((*((*(_4830_d))))._field_Constant);;
				jule::F64 _549_i;
				jule::F64 _5412_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _20219700b_Modf(_539_x);
					_549_i = __jule_assign_result.__jule_result_arg0;
					_5412_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_5412_frac != 0LL)) {
					return false;;
				};
				return ((_549_i >= _495_min) && (_549_i <= _505_max));;
			}
		}
		else if (_2021ea3d3_IsU64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_1c552048d:;
			{
				jule::F64 _609_x = _2021e8d3d_AsF64((*((*(_4830_d))))._field_Constant);;
				if ((_609_x <= _505_max)) {
					return true;;
				};
			}
		}
		else if (_2021ea14c_IsI64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_1c5520504:;
			{
				jule::F64 _659_x = _2021e8d3d_AsF64((*((*(_4830_d))))._field_Constant);;
				return ((_495_min <= _659_x) && (_659_x <= _505_max));;
			}
		}
		_match_end_1c5520317:;
	};
	return false;;
}



inline jule::Bool _1c0d8cd54_unsigAssignable(jule::Str _7120_kind, jule::Ptr<_1c0da69e9_Data>* _7132_d) {
	jule::F64 _725_max = _2021e1e13_Max(_7120_kind);;
	if (((*((*(_7132_d))))._field_IsRune && _7120_kind.equal("u8", 2))) {
		return _1c0d709a2_IsAscii(static_cast<jule::I32>(_2021e7a51_ReadI64((*((*(_7132_d))))._field_Constant.ptr())));;
	};
	{
		
		if (_2021eab86_IsF64((*((*(_7132_d))))._field_Constant)) {
			_case_begin_1c55260ba:;
			{
				jule::F64 _799_x = _2021e858a_ReadF64((*((*(_7132_d))))._field_Constant);;
				if ((_799_x < 0LL)) {
					return false;;
				};
				jule::F64 _839_i;
				jule::F64 _8312_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _20219700b_Modf(_799_x);
					_839_i = __jule_assign_result.__jule_result_arg0;
					_8312_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_8312_frac != 0LL)) {
					return false;;
				};
				return (_839_i <= _725_max);;
			}
		}
		else if (_2021ea3d3_IsU64((*((*(_7132_d))))._field_Constant)) {
			_case_begin_1c5526131:;
			{
				jule::F64 _899_x = _2021e8d3d_AsF64((*((*(_7132_d))))._field_Constant);;
				if ((_899_x <= _725_max)) {
					return true;;
				};
			}
		}
		else if (_2021ea14c_IsI64((*((*(_7132_d))))._field_Constant)) {
			_case_begin_1c5526197:;
			{
				jule::F64 _949_x = _2021e8d3d_AsF64((*((*(_7132_d))))._field_Constant);;
				return ((0LL <= _949_x) && (_949_x <= _725_max));;
			}
		}
		_match_end_1c5525718:;
	};
	return false;;
}



inline jule::Bool _1c0d8d1c8_intAssignable(jule::Str _10018_kind, jule::Ptr<_1c0da69e9_Data>* _10030_d) {
	{
		
		if (_2021e4e38_IsSigInt(_10018_kind)) {
			_case_begin_1c552ac6d:;
			{
				return _1c0d8c98b_sigAssignable(_10018_kind, _10030_d);;
			}
		}
		else if (_2021e5246_IsUnsigInt(_10018_kind)) {
			_case_begin_1c552ad06:;
			{
				return _1c0d8cd54_unsigAssignable(_10018_kind, _10030_d);;
			}
		}
		else {
			_case_begin_1c552a762:;
			{
				return false;;
			}
		}
		_match_end_1c552962e:;
	};
}



inline void _1c0d995e1_checkMutRiskOfStructLit(jule::Ptr<_1c0d2b078_Sema>* _92033_s, jule::Ptr<_1c0c88700_StructLitExprModel>* _92044_m) {
	{
		auto expr = &((*((*(_92044_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c552bd7e:;
		if (it != expr_end) {
			jule::Ptr<_1c0c88359_StructArgExprModel> *_92112_arg = it;
			{
				if ((*((*((*((*(_92112_arg))))._field_Field))._field_Decl))._field_Mutable) {
					goto _iter_next_1c552bd7e;
				};
				if (((!((*((*(*(_92112_arg)).alloc)._field_Expr))._field_Mutable)) && _1c0dd9774_Mutable((*(*(*(_92112_arg)).alloc)._field_Expr.alloc)._field_Kind.ptr()))) {
					_1c0d2dbb3_pushErr((*(_92033_s)).ptr(), (*(*(_92112_arg)).alloc)._field_Token, jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*(*(*(_92112_arg)).alloc)._field_Expr.alloc)._field_Kind), &__jule_any_type4)}));
				};
			}
			_iter_next_1c552bd7e:;
			++it;
			goto _iter_begin_1c552bd7e;
		}
		_iter_end_1c552bd7e:;
	};
}



inline jule::Ptr<_1c0dd7de3_TypeKind> _1c0da042c_lenKind(void) {
	return _1c0ec9ea2_primInt;;
}



inline jule::Bool _1c0da077e_isGoodValueToInfer(jule::Ptr<_1c0da69e9_Data>* _142124_d) {
	return (!(_1c0da6dd4_IsNil((*(_142124_d)).ptr())));;
}



inline jule::Ptr<_1c0c5dd57_Directive> _1c0dd0391_findDirective(jule::Slice<jule::Ptr<_1c0c5dd57_Directive>>* _425723_directives, jule::Str _425754_d) {
	{
		auto expr = _425723_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c566a4a6:;
		if (it != expr_end) {
			jule::Ptr<_1c0c5dd57_Directive> _425817_dr = *it;
			{
				if (((*((*(_425817_dr))._field_Tag))._field_Kind == _425754_d)) {
					return _425817_dr;;
				};
			}
			_iter_next_1c566a4a6:;
			++it;
			goto _iter_begin_1c566a4a6;
		}
		_iter_end_1c566a4a6:;
	};
	return nullptr;;
}



inline jule::Any _1c0dd0759_findBuiltinsImport(jule::Str* _426624_ident, jule::Ptr<_1c0d09782_ImportInfo> _426636_imp) {
	return _1c0ecd5b0_findPackageBuiltinDef(&((*(_426636_imp))._field_LinkPath), _426624_ident);;
}



inline void _1c0dd098a_fitBitsize(jule::Ptr<_1c0da69e9_Data>* _427520_d) {
	jule::Ptr<_1c0de09bc_Prim> _42769_prim = _1c0dda544_Prim((*((*(_427520_d))))._field_Kind.ptr());;
	jule::I64 _42775_z = _2021da4e4_BitsizeOf(_1c0de0d0d_Str(_42769_prim.ptr()));;
	{
		
		if (_2021ea14c_IsI64((*((*(_427520_d))))._field_Constant.ptr())) {
			_case_begin_1c566d60d:;
			{
				jule::I64 _42809_k = _2021dc01d_BitsizeOfInt(_2021e7a51_ReadI64((*((*(_427520_d))))._field_Constant));;
				if (((_42809_k > _42775_z) || _2021e5246_IsUnsigInt((*_42769_prim.alloc)._field_Kind))) {
					(*(*((*(_427520_d))))._field_Constant.alloc)._field_Kind=_2021da835_IntFromBits(_42809_k);
					(*((*(_427520_d))))._field_Kind=(*((*(_1c0ecc306_findBuiltinTypeAlias((*(*((*(_427520_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_2021ea3d3_IsU64((*((*(_427520_d))))._field_Constant.ptr())) {
			_case_begin_1c566d674:;
			{
				jule::I64 _42869_k = _2021dc2d7_BitsizeOfUint(_2021e7cd7_ReadU64((*((*(_427520_d))))._field_Constant));;
				if (((_42869_k > _42775_z) || _2021e4e38_IsSigInt((*_42769_prim.alloc)._field_Kind))) {
					(*(*((*(_427520_d))))._field_Constant.alloc)._field_Kind=_2021daabb_UintFromBits(_42869_k);
					(*((*(_427520_d))))._field_Kind=(*((*(_1c0ecc306_findBuiltinTypeAlias((*(*((*(_427520_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_2021eab86_IsF64((*((*(_427520_d))))._field_Constant.ptr())) {
			_case_begin_1c566d6da:;
			{
				if ((_42775_z == 64LLU)) {
					return;;
				};
				jule::I64 _42969_k = _2021dbc54_BitsizeOfFloat(_2021e858a_ReadF64((*((*(_427520_d))))._field_Constant));;
				if ((_42969_k > _42775_z)) {
					(*(*((*(_427520_d))))._field_Constant.alloc)._field_Kind=_2021dad85_FloatFromBits(_42969_k);
					(*((*(_427520_d))))._field_Kind=(*((*(_1c0ecc306_findBuiltinTypeAlias((*(*((*(_427520_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		_match_end_1c566d4ed:;
	};
}



inline void _1c0dd0cba_makeStructLitAlloc(jule::Ptr<_1c0da69e9_Data>* _430428_d, jule::Ptr<_1c0c88700_StructLitExprModel>* _430443_lit) {
	(*((*(_430428_d))))._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(jule::new_ptr<_1c0de44e8_Sptr>(_1c0de44e8_Sptr{._field_Elem=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>((*((*(_430443_lit))))._field_Strct, 0)})}), 21)});
	(*((*(_430428_d))))._field_Model=jule::Any(jule::new_ptr<_1c0c889ec_AllocStructLitExprModel>(_1c0c889ec_AllocStructLitExprModel{._field_Lit=(*(_430443_lit))}), &__jule_any_type112);
}



inline jule::Ptr<_1c0d4dde2_Var> _1c0dd113e_buildErrorVar(jule::Ptr<_1c0cd763e_Scope>* _431523_s, jule::Ptr<_1c0c67998_FnCallExpr>* _431539_fc) {
	return jule::new_ptr<_1c0d4dde2_Var>(_1c0d4dde2_Var{._field_Scope=(*(_431523_s)), ._field_Token=(*((*(_431539_fc))))._field_Token, ._field_Ident=jule::Str::lit("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=(*(_1c0ecc306_findBuiltinTypeAlias(jule::Str::lit("any", 3))))._field_Kind, ._field_Value=jule::new_ptr<_1c0da7b71_Value>(_1c0da7b71_Value{._field_Data=jule::new_ptr<_1c0da69e9_Data>()}), });;
}



inline jule::Any _1c0dd14b3_findBuiltinsSema(jule::Str* _433022_ident, jule::Ptr<_1c0d2b078_Sema> _433038_s) {
	{
		auto expr = &((*((*(_433038_s))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5679cac:;
		if (it != expr_end) {
			jule::Ptr<_1c0d09782_ImportInfo> _433117_imp = *it;
			{
				if (((*(_433117_imp))._field_ImportAll || _1c0d0c114_existIdent(_433117_imp, (*(_433022_ident))))) {
					jule::Any _433317_def = _1c0dd0759_findBuiltinsImport(_433022_ident, _433117_imp);;
					if ((_433317_def != nullptr)) {
						return _433317_def;;
					};
				};
			}
			_iter_next_1c5679cac:;
			++it;
			goto _iter_begin_1c5679cac;
		}
		_iter_end_1c5679cac:;
	};
	jule::Str _43419_ppath = _1c0c503ba_Dir((*(*_433038_s.alloc)._field_file.alloc)._field_File.ptr());;
	if (_21b86a62c_HasPrefix(_43419_ppath, _21b989ce0_PathStdlib)) {
		(_43419_ppath).mut_slice(_21b989ce0_PathStdlib.len());;
		_43419_ppath=(jule::Str::lit("std", 3) + _21b870ec3_Replace(_43419_ppath, jule::Str::lit("\\", 1), jule::Str::lit("::", 2), -1LL));
		return _1c0ecd5b0_findPackageBuiltinDef(&(_43419_ppath), _433022_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1c0dd177c_isOkForShifting(jule::Ptr<_1c0da69e9_Data>* _435525_d) {
	if (_1c0da7401_IsConst((*(_435525_d)).ptr())) {
		{
			
			if (_2021ea14c_IsI64((*((*(_435525_d))))._field_Constant.ptr())) {
				_case_begin_1c567d1ab:;
				{
					return (_2021e7a51_ReadI64((*((*(_435525_d))))._field_Constant) >= 0LL);;
				}
			}
			else if (_2021ea3d3_IsU64((*((*(_435525_d))))._field_Constant.ptr())) {
				_case_begin_1c567d255:;
				{
					return true;;
				}
			}
			else if (_2021eab86_IsF64((*((*(_435525_d))))._field_Constant.ptr())) {
				_case_begin_1c567d2cc:;
				{
					return (_2021e858a_ReadF64((*((*(_435525_d))))._field_Constant) >= 0LL);;
				}
			}
			else {
				_case_begin_1c567d123:;
				{
					return false;;
				}
			}
			_match_end_1c567d068:;
		};
	};
	jule::Ptr<_1c0de09bc_Prim> _43685_prim = _1c0dda544_Prim((*((*(_435525_d))))._field_Kind.ptr());;
	return ((_43685_prim != nullptr) && _2021e5510_IsInt(_1c0de0d0d_Str(_43685_prim)));;
}



inline jule::Bool _1c0dd1b56_isInstancedStruct(jule::Ptr<_1c0c83552_StructIns> _437222_s) {
	return ((*((*(_437222_s))._field_Decl))._field_Generics.len() == (*_437222_s.alloc)._field_Generics.len());;
}



inline jule::Bool _1c0dd1e53_isPtrArithmeticCompatible(jule::Ptr<_1c0da69e9_Data>* _437635_l, jule::Ptr<_1c0da69e9_Data>* _437650_r) {
	jule::Ptr<_1c0de7cb0_Ptr> _43775_ptr = _1c0ddaa61_Ptr((*((*(_437650_r))))._field_Kind.ptr());;
	if ((_43775_ptr != nullptr)) {
		return _1c0dd85ec_Equal((*(_1c0ddaa61_Ptr((*((*(_437635_l))))._field_Kind)))._field_Elem, (*_43775_ptr.alloc)._field_Elem);;
	};
	if (_1c0da7401_IsConst((*(_437650_r)).ptr())) {
		return _1c0d8d1c8_intAssignable(jule::Str::lit("int", 3), _437650_r);;
	};
	_1c0d8d6b2_typeCompatibilityChecker _43849_tcc = _1c0d8d6b2_typeCompatibilityChecker{._field_dest=_1c0ec9ea2_primInt, ._field_src=(*((*(_437650_r))))._field_Kind, };;
	return _1c0d8ed78_check(&_43849_tcc);;
}



inline void _1c0dd22e9_applyCastKindModel(jule::Ptr<_1c0da69e9_Data>* _439128_d, jule::Ptr<_1c0dd7de3_TypeKind>* _439143_t, jule::Ptr<_1c0c49480_Token>* _439162_token) {
	(*((*(_439128_d))))._field_Model=jule::Any(jule::new_ptr<_1c0c89080_CastingExprModel>(_1c0c89080_CastingExprModel{._field_Token=(*(_439162_token)), ._field_Expr=jule::new_ptr<_1c0da69e9_Data>((*((*(_439128_d))))), ._field_Kind=(*(_439143_t)), ._field_ExprKind=(*((*(_439128_d))))._field_Kind}), &__jule_any_type93);
}



inline void _1c0dd2690_applyCastKind(jule::Ptr<_1c0da69e9_Data>* _440023_d, jule::Ptr<_1c0dd7de3_TypeKind>* _440038_t, jule::Ptr<_1c0c49480_Token>* _440057_token) {
	_1c0dd22e9_applyCastKindModel(_440023_d, _440038_t, _440057_token);
	(*((*(_440023_d))))._field_Kind=(*(_440038_t));
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dd289e_buildVoidData(void) {
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec8c1a_primVoid, });;
}



inline jule::Str _1c0dd2c23_checkDataForIntegerIndexing(jule::Ptr<_1c0da69e9_Data>* _441137_d, jule::Ptr<_1c0c49480_Token>* _441152_token) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_441137_d)) == nullptr)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	{
		
		if ((_1c0dda544_Prim((*((*(_441137_d))))._field_Kind.ptr()) == nullptr)) {
			_case_begin_1c5687946:;
			{
				__jule_func_result = jule::Str::lit("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if ((!(_2021e5510_IsInt(_1c0de0d0d_Str(_1c0dda544_Prim((*((*(_441137_d))))._field_Kind.ptr()).ptr()))))) {
			_case_begin_1c56879ce:;
			{
				__jule_func_result = jule::Str::lit("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if (_1c0da7401_IsConst((*(_441137_d)).ptr())) {
			_case_begin_1c5687a45:;
			{
				if ((_2021e8d3d_AsF64((*((*(_441137_d))))._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = jule::Str::lit("overflow the limit of data-type", 31);
					return __jule_func_result;;
				};
			}
		}
		else if ((_1c0dda544_Prim((*((*(_441137_d))))._field_Kind.ptr()) == nullptr) || _1c0da7401_IsConst((*(_441137_d)).ptr()) || (_2021da22a_RealKindOf(_1c0de0d0d_Str(_1c0dda544_Prim((*((*(_441137_d))))._field_Kind).ptr())) != _2021da22a_RealKindOf(jule::Str::lit("int", 3)))) {
			_case_begin_1c5687aab:;
			{
				_1c0dd2690_applyCastKind(_441137_d, &(_1c0ec9ea2_primInt), _441152_token);
			}
		}
		_match_end_1c56875c2:;
	};
	__jule_func_result = jule::Str();
	return __jule_func_result;;
}



inline void _1c0dd30b9_applyCastModelByEnum(jule::Ptr<_1c0da69e9_Data>* _443630_d, jule::Ptr<_1c0cab27d_Enum> _443644_e, jule::Ptr<_1c0c49480_Token>* _443659_token) {
	if ((_443644_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1c0de09bc_Prim> _44405_p = _1c0dda544_Prim((*((*(_443644_e))._field_Kind))._field_Kind.ptr());;
	if (_1c0de3e54_IsStr(_44405_p.ptr())) {
		return;;
	};
	_1c0dd22e9_applyCastKindModel(_443630_d, &((*(*(_443644_e))._field_Kind.alloc)._field_Kind), _443659_token);
}



inline void _1c0dd33a5_castConstByType(jule::Str* _444721_t, jule::Ptr<_1c0da69e9_Data>* _444734_d) {
	{
		
		if (_2021e4e38_IsSigInt((*(_444721_t)))) {
			_case_begin_1c568d8e7:;
			{
				{
					auto _match_expr{ _2021da4e4_BitsizeOf(_2021da22a_RealKindOf((*(_444721_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1c568e4ca:;
						{
							_2021e90e6_SetI64((*((*(_444734_d))))._field_Constant.ptr(), _2021e8821_AsI64((*((*(_444734_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1c568e541:;
						{
							_2021e90e6_SetI64((*((*(_444734_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I32>(_2021e8821_AsI64((*((*(_444734_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1c568e5a7:;
						{
							_2021e90e6_SetI64((*((*(_444734_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I16>(_2021e8821_AsI64((*((*(_444734_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1c568e61d:;
						{
							_2021e90e6_SetI64((*((*(_444734_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I8>(_2021e8821_AsI64((*((*(_444734_d))))._field_Constant))));
						}
					}
					_match_end_1c568e1ab:;
				};
			}
		}
		else if (_2021e5246_IsUnsigInt((*(_444721_t)))) {
			_case_begin_1c568d991:;
			{
				{
					auto _match_expr{ _2021da4e4_BitsizeOf(_2021da22a_RealKindOf((*(_444721_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1c5693622:;
						{
							_2021e939e_SetU64((*((*(_444734_d))))._field_Constant.ptr(), _2021e8aa7_AsU64((*((*(_444734_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1c5693688:;
						{
							_2021e939e_SetU64((*((*(_444734_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U32>(_2021e8aa7_AsU64((*((*(_444734_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1c56936ee:;
						{
							_2021e939e_SetU64((*((*(_444734_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U16>(_2021e8aa7_AsU64((*((*(_444734_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1c5693765:;
						{
							_2021e939e_SetU64((*((*(_444734_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U8>(_2021e8aa7_AsU64((*((*(_444734_d))))._field_Constant))));
						}
					}
					_match_end_1c56925dd:;
				};
			}
		}
		else if (_2021e5851_IsFloat((*(_444721_t)))) {
			_case_begin_1c568da07:;
			{
				{
					auto _match_expr{ _2021da4e4_BitsizeOf(_2021da22a_RealKindOf((*(_444721_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1c5693aea:;
						{
							_2021e9bb8_SetF64((*((*(_444734_d))))._field_Constant.ptr(), _2021e8d3d_AsF64((*((*(_444734_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1c5697758:;
						{
							_2021e9bb8_SetF64((*((*(_444734_d))))._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F32>(_2021e8d3d_AsF64((*((*(_444734_d))))._field_Constant))));
						}
					}
					_match_end_1c56967ac:;
				};
			}
		}
		_match_end_1c568d793:;
	};
}



inline void _1c0dd38c2_updateModelToGenericIns(jule::Any* _448133_m, jule::Ptr<_1c0c98699_FnIns>* _448152_f) {
	{
		auto &_match_expr{ (*(_448133_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c5697a00:;
			{
				(*(_448133_m))=jule::Any((*(_448152_f)), &__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1c5698ade:;
			{
				(*((*(_448133_m)).cast_ptr<_1c0c8c5a0_StructSubIdentExprModel>(&__jule_any_type98)))._field_Method=(*(_448152_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1c5697a66:;
			{
				(*((*(_448133_m)).cast_ptr<_1c0c8c946_StructStaticIdentExprModel>(&__jule_any_type96)))._field_Method=(*(_448152_f));
			}
		}
		_match_end_1c568eaa2:;
	};
}



inline jule::Bool _1c0dd3b36_pushSubIdentFromExpr(jule::Any _449229_expr, jule::Ptr<_1c0c6030e_SubIdentTypeDecl>* _449250_t) {
	{
		auto &_match_expr{ _449229_expr };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1c569a30a:;
			{
				jule::Ptr<_1c0c65589_IdentExpr> _449513_e = _449229_expr.unsafe_cast_ptr<_1c0c65589_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1c0c60045_IdentTypeDecl>> &__jule_push_dest = (*((*(_449250_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1c0c60045_IdentTypeDecl>(_1c0c60045_IdentTypeDecl{._field_Token=(*(_449513_e))._field_Token, ._field_Ident=(*_449513_e.alloc)._field_Ident, })); };
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1c569b592:;
			{
				jule::Ptr<_1c0c66d82_SubIdentExpr> _450113_e = _449229_expr.unsafe_cast_ptr<_1c0c66d82_SubIdentExpr>();;
				if ((!(_1c0dd3b36_pushSubIdentFromExpr((*((*(_450113_e))._field_Expr))._field_Kind, _449250_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_1c0c60045_IdentTypeDecl>> &__jule_push_dest = (*((*(_449250_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1c0c60045_IdentTypeDecl>(_1c0c60045_IdentTypeDecl{._field_Token=(*_450113_e.alloc)._field_Ident, ._field_Ident=(*((*_450113_e.alloc)._field_Ident))._field_Kind, })); };
			}
		}
		else {
			_case_begin_1c569b11e:;
			{
				return false;;
			}
		}
		_match_end_1c569b0b9:;
	};
	return true;;
}



inline jule::Str _1c0dd3e00_constoa(jule::Ptr<_2021e617b_Const>* _451513_c) {
	{
		
		if (_2021ea14c_IsI64((*(_451513_c)).ptr())) {
			_case_begin_1c569b817:;
			{
				return _2021d7ce9_FmtInt(_2021e7a51_ReadI64((*(_451513_c)).ptr()), 10LL);;
			}
		}
		else if (_2021ea3d3_IsU64((*(_451513_c)).ptr())) {
			_case_begin_1c569e2ed:;
			{
				return _2021d7931_FmtUint(_2021e7cd7_ReadU64((*(_451513_c)).ptr()), 10LL);;
			}
		}
		else {
			_case_begin_1c569b7a1:;
			{
				return jule::Str();;
			}
		}
		_match_end_1c569ca05:;
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0dd432e_evalEnumStatic(jule::Ptr<_1c0cab27d_Enum>* _452624_enm, jule::Ptr<_1c0caa711_EnumItem>* _452641_item, jule::Ptr<_1c0c49480_Token>* _452663_token) {
	jule::Ptr<_1c0da69e9_Data> _45279_d = jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>((*(_452624_enm)), 3)}), });;
	if (((*(_452641_item)) != nullptr)) {
		(*(_45279_d))._field_Constant=jule::new_ptr<_2021e617b_Const>((*(*((*((*((*(_452641_item))))._field_Value))._field_Data))._field_Constant.alloc));
		(*_45279_d.alloc)._field_Model=jule::Any((*_45279_d.alloc)._field_Constant, &__jule_any_type19);
		_1c0dd30b9_applyCastModelByEnum(&(_45279_d), (*(_452624_enm)), _452663_token);
	};
	return _45279_d;;
}



inline jule::Ptr<_1c0c88700_StructLitExprModel> _1c0dd45e8_isLitBased(jule::Any* _454320_m) {
	{
		auto &_match_expr{ (*(_454320_m)) };
		
		if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1c56a40c2:;
			{
				return (*(_454320_m)).cast_ptr<_1c0c88700_StructLitExprModel>(&__jule_any_type95);;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1c56a4138:;
			{
				return (*((*(_454320_m)).cast_ptr<_1c0c889ec_AllocStructLitExprModel>(&__jule_any_type112)))._field_Lit;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1c56a419e:;
			{
				jule::Ptr<_1c0c8c5a0_StructSubIdentExprModel> _455013_ssi = (*(_454320_m)).cast_ptr<_1c0c8c5a0_StructSubIdentExprModel>(&__jule_any_type98);;
				return _1c0dd45e8_isLitBased(&((*((*(_455013_ssi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1c56a4215:;
			{
				jule::Ptr<_1c0c89080_CastingExprModel> _455313_c = (*(_454320_m)).cast_ptr<_1c0c89080_CastingExprModel>(&__jule_any_type93);;
				return _1c0dd45e8_isLitBased(&((*((*(_455313_c))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1c56a3b82:;
			{
				return nullptr;;
			}
		}
		_match_end_1c56a2499:;
	};
}



inline void _1c0dd48d4_makeImplicitDeref(jule::Ptr<_1c0da69e9_Data>* _456027_d, jule::Ptr<_1c0c49480_Token> _456041_baseToken) {
	jule::Ptr<_1c0c87d2b_UnaryExprModel> _45619_unary = jule::new_ptr<_1c0c87d2b_UnaryExprModel>(_1c0c87d2b_UnaryExprModel{._field_Expr=jule::new_ptr<_1c0da69e9_Data>((*((*(_456027_d))))), ._field_Op=jule::new_ptr<_1c0c49480_Token>((*(_456041_baseToken)))});;
	(*((*(_45619_unary))._field_Op))._field_Id=static_cast<jule::U64>(62LLU);
	(*(*_45619_unary.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit("*", 1);
	(*((*(_456027_d))))._field_Model=jule::Any(_45619_unary, &__jule_any_type110);
}



inline void _1c44e6762_updateRefer(jule::Ptr<_1c0c9b878_ReferenceStack> _457123_ref, jule::Ptr<_1c0c98699_FnIns>* _457146_old, jule::Ptr<_1c0c98699_FnIns>* _457159_new) {
	{
		auto expr = &((*_457123_ref.alloc)._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c44e7378:;
		if (it != expr_end) {
			jule::I64 _45729_i = it - expr->begin();
			jule::Any _457212_sym = *it;
			{
				if ((__jule_any_type7_compare(_457212_sym, (*(_457146_old))))) {
					(*(_457123_ref))._field_buffer[_45729_i]=jule::Any((*(_457159_new)), &__jule_any_type7);
				};
			}
			_iter_next_1c44e7378:;
			++it;
			_45729_i++;
			goto _iter_begin_1c44e7378;
		}
		_iter_end_1c44e7378:;
	};
}



inline void _1c0dd5066_makeVariadic(jule::Ptr<_1c0da69e9_Data>* _457922_d, jule::Ptr<_1c0dd7de3_TypeKind> _457936_elem) {
	(*((*(_457922_d))))._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_BindIdent=(*_457936_elem.alloc)._field_BindIdent, ._field_Generic=(*(_457936_elem))._field_Generic, ._field_Variadic=true, ._field_Kind=(*_457936_elem.alloc)._field_Kind});
}



inline jule::Bool _1c0dd5495_isVarCaptured(jule::Ptr<_1c0cdeaec_scopeChecker> _459318_r, jule::Ptr<_1c0cdeaec_scopeChecker> _459340_s, jule::Ptr<_1c0d4dde2_Var> _459358_v) {
	if (((*(_459358_v))._field_Scope == nullptr)) {
		return false;;
	};
	for (;;) {
		{
			if (((*(_459340_s))._field_scope == (*_459358_v.alloc)._field_Scope)) {
				return false;;
			};
			if ((((*_459340_s.alloc)._field_parent == nullptr) || (_459340_s == _459318_r))) {
				goto _iter_end_1c56aa727;
			};
			_459340_s=(*_459340_s.alloc)._field_parent;
		}
	_iter_next_1c56aa727:;
	}
	_iter_end_1c56aa727:;;
	return true;;
}



inline jule::Bool _1c0e0364a_kindUsesGenerics(jule::Ptr<_1c0dd7de3_TypeKind>* _171126_k, jule::Slice<jule::Ptr<_1c0c6bb45_GenericDecl>>* _171141_generics) {
	{
		auto expr = _171141_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5a55660:;
		if (it != expr_end) {
			jule::Ptr<_1c0c6bb45_GenericDecl> *_171212_g = it;
			{
				if (static__1c0e0321b_exist(&((*((*(_171212_g))))._field_Ident), _171126_k)) {
					return true;;
				};
			}
			_iter_next_1c5a55660:;
			++it;
			goto _iter_begin_1c5a55660;
		}
		_iter_end_1c5a55660:;
	};
	return false;;
}



inline jule::Bool _1c0e03a13_hasDirective(jule::Slice<jule::Ptr<_1c0c5dd57_Directive>>* _172122_directives, jule::Str _172153_tag) {
	{
		auto expr = _172122_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5a55e24:;
		if (it != expr_end) {
			jule::Ptr<_1c0c5dd57_Directive> _172217_dr = *it;
			{
				if (((*((*(_172217_dr))._field_Tag))._field_Kind == _172153_tag)) {
					return true;;
				};
			}
			_iter_next_1c5a55e24:;
			++it;
			goto _iter_begin_1c5a55e24;
		}
		_iter_end_1c5a55e24:;
	};
	return false;;
}



inline jule::Bool _1c0e03ccc_canGetPtr(jule::Ptr<_1c0da69e9_Data>* _173019_d) {
	{
		
		if ((!((*((*(_173019_d))))._field_Lvalue)) || _1c0da7401_IsConst((*(_173019_d)).ptr())) {
			_case_begin_1c5a5784e:;
			{
				return false;;
			}
		}
		else if ((_1c0ddb831_Fn((*((*(_173019_d))))._field_Kind.ptr()) != nullptr) || (_1c0ddace7_Enum((*((*(_173019_d))))._field_Kind) != nullptr)) {
			_case_begin_1c5a578d7:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1c5a577d8:;
			{
				return true;;
			}
		}
		_match_end_1c5a56cb0:;
	};
}



inline jule::Bool _1c0e0411d_isValidForSptrType(jule::Ptr<_1c0dd7de3_TypeKind>* _174228_t) {
	jule::Ptr<_1c0c83552_StructIns> _17439_s = _1c0ddbab7_Struct((*(_174228_t)).ptr());;
	if ((((_17439_s != nullptr) && ((*_17439_s.alloc)._field_Decl != nullptr)) && (*(*_17439_s.alloc)._field_Decl.alloc)._field_Binded)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1c0e043a4_isValidForRef(jule::Ptr<_1c0dd7de3_TypeKind>* _175123_t) {
	return (_1c0ddb831_Fn((*(_175123_t)).ptr()) == nullptr);;
}



inline jule::Bool _1c0e0466d_isBuiltinStrConvertable(jule::Ptr<_1c0dd7de3_TypeKind>* _175433_t) {
	return ((((!(_1c0dd9257_Void((*(_175433_t)).ptr()))) && (_1c0ddb831_Fn((*(_175433_t)).ptr()) == nullptr)) && (_1c0ddc36a_Tup((*(_175433_t)).ptr()) == nullptr)) && (!(_1c0ddc601_comptime((*(_175433_t)).ptr()))));;
}



inline jule::Str _1c0e04937_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1c0c49480_Token>>* _175827_tokens) {
	if ((((*(_175827_tokens)).len() == 1LL) && ((*((*(_175827_tokens))[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		return jule::Str::lit("std::unsafe", 11);;
	};
	jule::I64 _17629_n = 0LL;;
	{
		auto expr = _175827_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5a5d6e0:;
		if (it != expr_end) {
			jule::Ptr<_1c0c49480_Token> *_176312_token = it;
			{
				_17629_n+=(*((*(_176312_token))))._field_Kind.len();
				_17629_n+=2LL;
			}
			_iter_next_1c5a5d6e0:;
			++it;
			goto _iter_begin_1c5a5d6e0;
		}
		_iter_end_1c5a5d6e0:;
	};
	_234c76a64_StrBuilder _17679_s = static__234c76ec6_New(_17629_n);;
	{
		auto expr = _175827_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5a5e603:;
		if (it != expr_end) {
			jule::I64 _17689_i = it - expr->begin();
			jule::Ptr<_1c0c49480_Token> *_176812_token = it;
			{
				_234c77537_WriteStr(&_17679_s, (*((*(_176812_token))))._field_Kind);
				if ((((*(_175827_tokens)).len() - _17689_i) > 1LL)) {
					_234c77537_WriteStr(&_17679_s, jule::Str::lit("::", 2));
				};
			}
			_iter_next_1c5a5e603:;
			++it;
			_17689_i++;
			goto _iter_begin_1c5a5e603;
		}
		_iter_end_1c5a5e603:;
	};
	return _234c77d2e_Str(&_17679_s);;
}



inline jule::Ptr<_1c0de09bc_Prim> _1c0e04d11_buildPrimType(jule::Str _177718_kind) {
	return jule::new_ptr<_1c0de09bc_Prim>(_1c0de09bc_Prim{._field_Kind=_177718_kind});;
}



inline void _1c0e053e9_applyImplicitCast(jule::Ptr<_1c0dd7de3_TypeKind>* _180527_dest, jule::Ptr<_1c0da69e9_Data>* _180549_d, jule::Ptr<_1c0c49480_Token>* _180564_token) {
	if (_1c0dd8ec1_IsNil((*((*(_180549_d))))._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1c0de09bc_Prim> _18095_destPrim = _1c0dda544_Prim((*(_180527_dest)).ptr());;
	if (((_18095_destPrim != nullptr) && _1c0de41da_IsAny(_18095_destPrim))) {
		jule::Ptr<_1c0de09bc_Prim> _18119_prim = _1c0dda544_Prim((*((*(_180549_d))))._field_Kind);;
		if (((_18119_prim == nullptr) || (!(_1c0de41da_IsAny(_18119_prim.ptr()))))) {
			_1c0dd2690_applyCastKind(_180549_d, _180527_dest, _180564_token);
		};
		return;;
	};
	jule::Ptr<_1c0ca8a72_Trait> _18185_dt = _1c0ddbd4d_Trait((*(_180527_dest)).ptr());;
	if ((_18185_dt != nullptr)) {
		jule::Ptr<_1c0ca8a72_Trait> _18209_bt = _1c0ddbd4d_Trait((*((*(_180549_d))))._field_Kind);;
		if (((_18209_bt == nullptr) || (_18209_bt != _18185_dt))) {
			_1c0dd22e9_applyCastKindModel(_180549_d, _180527_dest, _180564_token);
			return;;
		};
	};
	if (((_1c0ddb07d_TypeEnum((*(_180527_dest)).ptr()) != nullptr) && (_1c0ddb07d_TypeEnum((*((*(_180549_d))))._field_Kind) == nullptr))) {
		_1c0dd22e9_applyCastKindModel(_180549_d, _180527_dest, _180564_token);
		return;;
	};
}



inline jule::Bool _1c0e056b3_validTypeForXof(jule::Ptr<_1c0dd7de3_TypeKind>* _183325_t) {
	return ((!(_1c0dd9257_Void((*(_183325_t)).ptr()))) && (_1c0ddb831_Fn((*(_183325_t)).ptr()) == nullptr));;
}



inline __jule_tuple_x_1c0da1681_SymbolTable__jule_tuple_s_21b8c54de_Log _1c0e087c6_buildSymbols(jule::Ptr<_1c0c5ca26_Ast>* _1622_ast, jule::Trait<_1c0d0686c_Importer>* _1638_importer, jule::Ptr<_1c0ca283a_symbolBuilder> _1662_owner) {
	__jule_tuple_x_1c0da1681_SymbolTable__jule_tuple_s_21b8c54de_Log __jule_func_result;
	jule::Ptr<_1c0ca283a_symbolBuilder> _179_sb = jule::new_ptr<_1c0ca283a_symbolBuilder>(_1c0ca283a_symbolBuilder{._field_owner=_1662_owner, ._field_importer=(*(_1638_importer)), ._field_ast=(*(_1622_ast)), });;
	_1c0ca7e39_build(_179_sb);
	if (((*_179_sb.alloc)._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*_179_sb.alloc)._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = (*_179_sb.alloc)._field_errors;
	return __jule_func_result;;
}



inline __jule_tuple_x_1c0d0c6a8_Package__jule_tuple_s_21b8c54de_Log _1c0e08c49_analyzePackage(jule::Slice<jule::Ptr<_1c0c5ca26_Ast>>* _3024_files, jule::Trait<_1c0d0686c_Importer>* _3044_importer, jule::I64* _3065_flags) {
	__jule_tuple_x_1c0d0c6a8_Package__jule_tuple_s_21b8c54de_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1c0da1681_SymbolTable>> _329_tables = jule::Slice<jule::Ptr<_1c0da1681_SymbolTable>>::alloc(0LL, (*(_3024_files)).len());;
	{
		auto expr = _3024_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5b82b00:;
		if (it != expr_end) {
			jule::Ptr<_1c0c5ca26_Ast> _3317_f = *it;
			{
				jule::Ptr<_1c0da1681_SymbolTable> _3413_table;
				jule::Slice<_21b8c54de_Log> _3424_errors;
				({
					__jule_tuple_x_1c0da1681_SymbolTable__jule_tuple_s_21b8c54de_Log __jule_assign_result = _1c0e087c6_buildSymbols(&(_3317_f), _3044_importer, nullptr);
					_3413_table = __jule_assign_result.__jule_result_arg0;
					_3424_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_3424_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _3424_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_1c0da1681_SymbolTable>> &__jule_push_dest = _329_tables; __jule_push_dest.push(_3413_table); };
			}
			_iter_next_1c5b82b00:;
			++it;
			goto _iter_begin_1c5b82b00;
		}
		_iter_end_1c5b82b00:;
	};
	jule::Ptr<_1c0d2b078_Sema> _419_sema = jule::new_ptr<_1c0d2b078_Sema>(_1c0d2b078_Sema{._field_flags=(*(_3065_flags)), ._field_meta=jule::new_ptr<_1c0d2a473_commonSemaMeta>()});;
	_1c0d4a817_check(_419_sema, &(_329_tables));
	if (((*_419_sema.alloc)._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = (*_419_sema.alloc)._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1c0d0c6a8_Package> _509_pkg = jule::new_ptr<_1c0d0c6a8_Package>(_1c0d0c6a8_Package{._field_Files=(*_419_sema.alloc)._field_files});;
	__jule_func_result.__jule_result_arg0 = _509_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1c0d0c6a8_Package__jule_tuple_s_21b8c54de_Log _1c0e09178_AnalyzePackage(jule::Slice<jule::Ptr<_1c0c5ca26_Ast>> _7423_files, jule::Trait<_1c0d0686c_Importer> _7442_importer, jule::I64 _7462_flags) {
	__jule_tuple_x_1c0d0c6a8_Package__jule_tuple_s_21b8c54de_Log __jule_func_result;
	if ((_7423_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_1c0e08c49_analyzePackage(&(_7423_files), &(_7442_importer), &(_7462_flags)));
return __jule_func_result;;
}



inline jule::Ptr<_1c0c98699_FnIns> _1c0ec8302_findBuiltinFunc(jule::Str* _2621_ident) {
	{
		auto &_match_expr{ (*(_2621_ident)) };
		
		if (_match_expr == jule::Str::lit("out", 3)) {
			_case_begin_1c5b8bd6d:;
			{
				static jule::Ptr<_1c0c98699_FnIns> _2920_f = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>(_1c0ecdd63_builtinCallerOut), });;
				return _2920_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("outln", 5)) {
			_case_begin_1c5b8bdd4:;
			{
				static jule::Ptr<_1c0c98699_FnIns> _3220_f = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>(_1c0ece292_builtinCallerOutln), });;
				return _3220_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("new", 3)) {
			_case_begin_1c5b8be4a:;
			{
				static jule::Ptr<_1c0c98699_FnIns> _3520_f = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>(_1c0ece6c1_builtinCallerNew), });;
				return _3520_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("panic", 5)) {
			_case_begin_1c5b8bec2:;
			{
				static jule::Ptr<_1c0c98699_FnIns> _3820_f = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>(_1c0eceb00_builtinCallerPanic), });;
				return _3820_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("make", 4)) {
			_case_begin_1c5b8c16a:;
			{
				static jule::Ptr<_1c0c98699_FnIns> _4120_f = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>(_1c0ed0260_builtinCallerMake), });;
				return _4120_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("append", 6)) {
			_case_begin_1c5b8c1d1:;
			{
				static jule::Ptr<_1c0c98699_FnIns> _4420_f = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>(_1c0ed057e_builtinCallerAppend), });;
				return _4420_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("copy", 4)) {
			_case_begin_1c5b8c258:;
			{
				static jule::Ptr<_1c0c98699_FnIns> _4720_f = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>(_1c0ed0e97_builtinCallerCopy), });;
				return _4720_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("len", 3)) {
			_case_begin_1c5b8c2d0:;
			{
				static jule::Ptr<_1c0c98699_FnIns> _5020_f = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>(_1c0ed263b_builtinCallerLen), });;
				return _5020_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("cap", 3)) {
			_case_begin_1c5b8c412:;
			{
				static jule::Ptr<_1c0c98699_FnIns> _5320_f = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>(_1c0ed2dde_builtinCallerCap), });;
				return _5320_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("delete", 6)) {
			_case_begin_1c5b8c478:;
			{
				static jule::Ptr<_1c0c98699_FnIns> _5620_f = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>(_1c0ed3807_builtinCallerDelete), });;
				return _5620_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("assert", 6)) {
			_case_begin_1c5b8c4de:;
			{
				static jule::Ptr<_1c0c98699_FnIns> _5920_f = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>(_1c0ed3c36_builtinCallerAssert), });;
				return _5920_f;;
			}
		}
		else {
			_case_begin_1c5b8bb09:;
			{
				return nullptr;;
			}
		}
		_match_end_1c5b8bc2a:;
	};
}



inline jule::Ptr<_1c0dd7101_TypeAlias> _1c0ec8610_primTypeAlias(jule::Ptr<_1c0dd7de3_TypeKind>* _6623_k) {
	return jule::new_ptr<_1c0dd7101_TypeAlias>(_1c0dd7101_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1c0de00b5_TypeSymbol>(_1c0de00b5_TypeSymbol{._field_Kind=(*(_6623_k))}), });;
}



inline jule::Ptr<_1c0d4dde2_Var> _1c0ecbeb5_findBuiltinVar(jule::Str* _9420_ident) {
	{
		auto &_match_expr{ (*(_9420_ident)) };
		
		if (_match_expr == jule::Str::lit("nil", 3)) {
			_case_begin_1c5b9479e:;
			{
				static jule::Ptr<_1c0d4dde2_Var> _9720_v = jule::new_ptr<_1c0d4dde2_Var>(_1c0d4dde2_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=jule::new_ptr<_1c0de00b5_TypeSymbol>(_1c0de00b5_TypeSymbol{._field_Kind=_1c0ec891d_primNil}), ._field_Value=jule::new_ptr<_1c0da7b71_Value>(_1c0da7b71_Value{._field_Data=jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Constant=static__2021e73e1_NewNil()})}), });;
				return _9720_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("true", 4)) {
			_case_begin_1c5b94815:;
			{
				static jule::Ptr<_1c0d4dde2_Var> _11220_v = jule::new_ptr<_1c0d4dde2_Var>(_1c0d4dde2_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=(*(_1c0ecc306_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1c0da7b71_Value>(_1c0da7b71_Value{._field_Data=jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Constant=static__2021e6b4e_NewBool(true)})}), });;
				return _11220_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("false", 5)) {
			_case_begin_1c5b9487b:;
			{
				static jule::Ptr<_1c0d4dde2_Var> _12520_v = jule::new_ptr<_1c0d4dde2_Var>(_1c0d4dde2_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=(*(_1c0ecc306_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1c0da7b71_Value>(_1c0da7b71_Value{._field_Data=jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Constant=static__2021e6b4e_NewBool(false)})}), });;
				return _12520_v;;
			}
		}
		else {
			_case_begin_1c5b93e85:;
			{
				return nullptr;;
			}
		}
		_match_end_1c5b8c90c:;
	};
}



inline jule::Ptr<_1c0dd7101_TypeAlias> _1c0ecc306_findBuiltinTypeAlias(jule::Str _14225_ident) {
	{
		auto &_match_expr{ _14225_ident };
		
		if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1c5b995ea:;
			{
				static jule::Ptr<_1c0dd7101_TypeAlias> _14520_t = _1c0ec8610_primTypeAlias(&(_1c0ec8ec3_primAny));;
				return _14520_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("str", 3)) {
			_case_begin_1c5b99683:;
			{
				static jule::Ptr<_1c0dd7101_TypeAlias> _14820_t = _1c0ec8610_primTypeAlias(&(_1c0ec92c0_primStr));;
				return _14820_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("bool", 4)) {
			_case_begin_1c5b996e9:;
			{
				static jule::Ptr<_1c0dd7101_TypeAlias> _15120_t = _1c0ec8610_primTypeAlias(&(_1c0ec9578_primBool));;
				return _15120_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1c5b99881:;
			{
				static jule::Ptr<_1c0dd7101_TypeAlias> _15420_t = _1c0ec8610_primTypeAlias(&(_1c0ec9831_primUintptr));;
				return _15420_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1c5b998e7:;
			{
				static jule::Ptr<_1c0dd7101_TypeAlias> _15720_t = _1c0ec8610_primTypeAlias(&(_1c0ec9ad9_primUint));;
				return _15720_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1c5b9995d:;
			{
				static jule::Ptr<_1c0dd7101_TypeAlias> _16020_t = _1c0ec8610_primTypeAlias(&(_1c0ec9ea2_primInt));;
				return _16020_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1c5b999c4:;
			{
				static jule::Ptr<_1c0dd7101_TypeAlias> _16320_t = _1c0ec8610_primTypeAlias(&(_1c0eca1e4_primI8));;
				return _16320_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1c5b99a4b:;
			{
				static jule::Ptr<_1c0dd7101_TypeAlias> _16620_t = _1c0ec8610_primTypeAlias(&(_1c0eca48b_primI16));;
				return _16620_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1c5b99b28:;
			{
				static jule::Ptr<_1c0dd7101_TypeAlias> _16920_t = _1c0ec8610_primTypeAlias(&(_1c0eca9ec_primI64));;
				return _16920_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1c5b99ba0:;
			{
				static jule::Ptr<_1c0dd7101_TypeAlias> _17220_t = _1c0ec8610_primTypeAlias(&(_1c0ecb05d_primU16));;
				return _17220_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1c5b99c27:;
			{
				static jule::Ptr<_1c0dd7101_TypeAlias> _17520_t = _1c0ec8610_primTypeAlias(&(_1c0ecb316_primU32));;
				return _17520_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1c5b99c9e:;
			{
				static jule::Ptr<_1c0dd7101_TypeAlias> _17820_t = _1c0ec8610_primTypeAlias(&(_1c0ecb800_primU64));;
				return _17820_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1c5b99d26:;
			{
				static jule::Ptr<_1c0dd7101_TypeAlias> _18120_t = _1c0ec8610_primTypeAlias(&(_1c0ecba42_primF32));;
				return _18120_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1c5b99d9d:;
			{
				static jule::Ptr<_1c0dd7101_TypeAlias> _18420_t = _1c0ec8610_primTypeAlias(&(_1c0ecbc51_primF64));;
				return _18420_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("byte", 4) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1c5b99e25:;
			{
				static jule::Ptr<_1c0dd7101_TypeAlias> _18720_t = _1c0ec8610_primTypeAlias(&(_1c0ecaca5_primU8));;
				return _18720_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("rune", 4) || _match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1c5b99e9c:;
			{
				static jule::Ptr<_1c0dd7101_TypeAlias> _19020_t = _1c0ec8610_primTypeAlias(&(_1c0eca744_primI32));;
				return _19020_t;;
			}
		}
		else {
			_case_begin_1c5b94d98:;
			{
				return nullptr;;
			}
		}
		_match_end_1c5b94e97:;
	};
}



inline jule::Any _1c0ecc58c_findBuiltinDef(jule::Str* _19720_ident) {
	jule::Ptr<_1c0d4dde2_Var> _1989_v = _1c0ecbeb5_findBuiltinVar(_19720_ident);;
	if ((_1989_v != nullptr)) {
		return jule::Any(_1989_v, &__jule_any_type8);;
	};
	jule::Ptr<_1c0c98699_FnIns> _2029_f = _1c0ec8302_findBuiltinFunc(_19720_ident);;
	if ((_2029_f != nullptr)) {
		return jule::Any(_2029_f, &__jule_any_type7);;
	};
	jule::Ptr<_1c0dd7101_TypeAlias> _2069_ta = _1c0ecc306_findBuiltinTypeAlias((*(_19720_ident)));;
	if ((_2069_ta != nullptr)) {
		return jule::Any(_2069_ta, &__jule_any_type65);;
	};
	return nullptr;;
}



inline jule::Any _1c0ecc856_findBuiltinDefStdDebug(jule::Str* _21328_ident) {
	{
		auto &_match_expr{ (*(_21328_ident)) };
		
		if (_match_expr == jule::Str::lit("Out", 3)) {
			_case_begin_1c5ba46e3:;
			{
				static jule::Ptr<_1c0c98699_FnIns> _21620_f = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>(_1c0ed74cb_builtinCallerStdDebugOut), });;
				return jule::Any(_21620_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Outln", 5)) {
			_case_begin_1c5ba477b:;
			{
				static jule::Ptr<_1c0c98699_FnIns> _21920_f = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>(_1c0ed790a_builtinCallerStdDebugOutln), });;
				return jule::Any(_21920_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1c5ba2e0b:;
			{
				return nullptr;;
			}
		}
		_match_end_1c5ba3527:;
	};
}



inline jule::Any _1c0eccb20_findBuiltinDefStdMem(jule::Str* _22626_ident) {
	{
		auto &_match_expr{ (*(_22626_ident)) };
		
		if (_match_expr == jule::Str::lit("SizeOf", 6)) {
			_case_begin_1c5ba60b8:;
			{
				static jule::Ptr<_1c0c98699_FnIns> _22920_f = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>(_1c0ed5dd1_builtinCallerStdMemSizeOf), });;
				return jule::Any(_22920_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("AlignOf", 7)) {
			_case_begin_1c5ba645e:;
			{
				static jule::Ptr<_1c0c98699_FnIns> _23220_f = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>(_1c0ed6310_builtinCallerStdMemAlignOf), });;
				return jule::Any(_23220_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Free", 4)) {
			_case_begin_1c5ba6151:;
			{
				static jule::Ptr<_1c0c98699_FnIns> _23520_f = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>(_1c0ed673e_builtinCallerStdMemFree), });;
				return jule::Any(_23520_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1c5ba4814:;
			{
				return nullptr;;
			}
		}
		_match_end_1c5ba4b55:;
	};
}



inline jule::Any _1c0eccee9_findBuiltinDefStdComptime(jule::Str* _24231_ident) {
	{
		auto &_match_expr{ (*(_24231_ident)) };
		
		if (_match_expr == jule::Str::lit("TypeOf", 6)) {
			_case_begin_1c5ba85b5:;
			{
				static jule::Ptr<_1c0c98699_FnIns> _24520_f = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>(_1c0ed4165_builtinCallerStdComptimeTypeOf), });;
				return jule::Any(_24520_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("ValueOf", 7)) {
			_case_begin_1c5ba88c3:;
			{
				static jule::Ptr<_1c0c98699_FnIns> _24820_f = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>(_1c0ed47d6_builtinCallerStdComptimeValueOf), });;
				return jule::Any(_24820_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Line", 4)) {
			_case_begin_1c5ba8939:;
			{
				static jule::Ptr<_1c0c98699_FnIns> _25120_f = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>(_1c0ed4c15_builtinCallerStdComptimeLine), });;
				return jule::Any(_25120_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("File", 4)) {
			_case_begin_1c5ba862b:;
			{
				static jule::Ptr<_1c0c98699_FnIns> _25420_f = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>(_1c0ed5144_builtinCallerStdComptimeFile), });;
				return jule::Any(_25420_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Files", 5)) {
			_case_begin_1c5ba86a3:;
			{
				static jule::Ptr<_1c0c98699_FnIns> _25720_f = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>(_1c0ed5573_builtinCallerStdComptimeFiles), });;
				return jule::Any(_25720_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("TypeAlias", 9)) {
			_case_begin_1c5ba89d3:;
			{
				static jule::Ptr<_1c0c98699_FnIns> _26020_f = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>(_1c0ed59a2_builtinCallerStdComptimeTypeAlias), });;
				return jule::Any(_26020_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1c5ba61b7:;
			{
				return nullptr;;
			}
		}
		_match_end_1c5ba687c:;
	};
}



inline jule::Any _1c0ecd23b_findBuiltinDefStdJuleIntegrated(jule::Str* _26737_ident) {
	{
		auto &_match_expr{ (*(_26737_ident)) };
		
		if (_match_expr == jule::Str::lit("ToStr", 5)) {
			_case_begin_1c5bac92c:;
			{
				static jule::Ptr<_1c0c98699_FnIns> _27020_f = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>(_1c0ed6b6d_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_27020_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Emit", 4)) {
			_case_begin_1c5baccb2:;
			{
				static jule::Ptr<_1c0c98699_FnIns> _27320_f = jule::new_ptr<_1c0c98699_FnIns>(_1c0c98699_FnIns{._field_Decl=jule::new_ptr<_1c0c95795_Fn>(_1c0c95795_Fn{._field_Generics=jule::Slice<jule::Ptr<_1c0c6bb45_GenericDecl>>::alloc(1LL, 1LL), }), ._field_caller=jule::Fn<jule::Ptr<_1c0da69e9_Data>,jule::Ptr<_1c0da8721_Eval>*,jule::Ptr<_1c0c67998_FnCallExpr>*,jule::Ptr<_1c0da69e9_Data>*>(_1c0ed709c_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_27320_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1c5ba8a6b:;
			{
				return nullptr;;
			}
		}
		_match_end_1c5ba98d5:;
	};
}



inline jule::Any _1c0ecd5b0_findPackageBuiltinDef(jule::Str* _28527_linkPath, jule::Str* _28543_ident) {
	{
		auto &_match_expr{ (*(_28527_linkPath)) };
		
		if (_match_expr == jule::Str::lit("std::comptime", 13)) {
			_case_begin_1c5baeda2:;
			{
				return _1c0eccee9_findBuiltinDefStdComptime(_28543_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::debug", 10)) {
			_case_begin_1c5baeb0a:;
			{
				return _1c0ecc856_findBuiltinDefStdDebug(_28543_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::mem", 8)) {
			_case_begin_1c5baeb71:;
			{
				return _1c0eccb20_findBuiltinDefStdMem(_28543_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::jule::integrated", 21)) {
			_case_begin_1c5baee18:;
			{
				return _1c0ecd23b_findBuiltinDefStdJuleIntegrated(_28543_ident);;
			}
		}
		else {
			_case_begin_1c5bad015:;
			{
				return nullptr;;
			}
		}
		_match_end_1c5baea50:;
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0ecd934_builtinCallerError(jule::Ptr<_1c0da8721_Eval>* _30028_e, jule::Ptr<_1c0c67998_FnCallExpr>* _30043_fc) {
	if (((*((*(_30043_fc))))._field_Args.len() < 1LL)) {
		_1c0da8c71_pushErr((*(_30028_e)).ptr(), (*((*(_30043_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("err", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_30043_fc))))._field_Args.len() > 1LL)) {
		_1c0da8c71_pushErr((*(_30028_e)).ptr(), (*((*((*(_30043_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("error", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1c0da69e9_Data> _3089_expr = _1c0dc6981_evalExpr((*(_30028_e)), (*((*(_30043_fc))))._field_Args[0LL]);;
	if ((_3089_expr == nullptr)) {
		return nullptr;;
	};
	if (_1c0da6dd4_IsNil(_3089_expr.ptr())) {
		_1c0da8c71_pushErr((*(_30028_e)).ptr(), (*((*((*(_30043_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("you cannot call error function with nil", 39), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c0da69e9_Data> _3179_d = _1c0dd289e_buildVoidData();;
	(*(_3179_d))._field_Model=jule::Any(jule::new_ptr<_1c0c91230_BuiltinErrorCallExprModel>(_1c0c91230_BuiltinErrorCallExprModel{._field_Err=_3089_expr}), &__jule_any_type22);
	return _3179_d;;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0ecdd63_builtinCallerOut(jule::Ptr<_1c0da8721_Eval>* _32226_e, jule::Ptr<_1c0c67998_FnCallExpr>* _32241_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	if (((*((*(_32241_fc))))._field_Args.len() < 1LL)) {
		_1c0da8c71_pushErr((*(_32226_e)).ptr(), (*((*(_32241_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("v", 1), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_32241_fc))))._field_Args.len() > 1LL)) {
		_1c0da8c71_pushErr((*(_32226_e)).ptr(), (*((*((*(_32241_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("out", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1c0da69e9_Data> _3319_expr = _1c0dc6981_evalExpr((*(_32226_e)), (*((*(_32241_fc))))._field_Args[0LL]);;
	if ((_3319_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1c0e0466d_isBuiltinStrConvertable(&((*(_3319_expr))._field_Kind))))) {
		_1c0da8c71_pushErr((*(_32226_e)).ptr(), (*((*((*(_32241_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c0da69e9_Data> _3419_d = _1c0dd289e_buildVoidData();;
	(*(_3419_d))._field_Model=jule::Any(jule::new_ptr<_1c0c8d4e6_BuiltinOutCallExprModel>(_1c0c8d4e6_BuiltinOutCallExprModel{._field_Expr=(*(_3319_expr))._field_Model, }), &__jule_any_type26);
	return _3419_d;;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0ece292_builtinCallerOutln(jule::Ptr<_1c0da8721_Eval>* _34628_e, jule::Ptr<_1c0c67998_FnCallExpr>* _34643_fc, jule::Ptr<_1c0da69e9_Data>* _34665_d) {
	(*(_34665_d))=_1c0ecdd63_builtinCallerOut(_34628_e, _34643_fc, _34665_d);
	if (((*(_34665_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*(_34665_d))))._field_Model=jule::Any(jule::new_ptr<_1c0c8d8c0_BuiltinOutlnCallExprModel>(_1c0c8d8c0_BuiltinOutlnCallExprModel{._field_Expr=(*((*((*(_34665_d))))._field_Model.cast_ptr<_1c0c8d4e6_BuiltinOutCallExprModel>(&__jule_any_type26)))._field_Expr, }), &__jule_any_type27);
	return (*(_34665_d));;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0ece6c1_builtinCallerNew(jule::Ptr<_1c0da8721_Eval>* _35826_e, jule::Ptr<_1c0c67998_FnCallExpr>* _35841_fc, jule::Ptr<_1c0da69e9_Data>* _35863_d) {
	if (((*((*(_35841_fc))))._field_Args.len() < 1LL)) {
		_1c0da8c71_pushErr((*(_35826_e)).ptr(), (*((*(_35841_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_35841_fc))))._field_Args.len() > 2LL)) {
		_1c0da8c71_pushErr((*(_35826_e)).ptr(), (*((*((*(_35841_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("new", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1c0da69e9_Data> _3679_t = _1c0dc5b6c_evalExprKind((*(_35826_e)), (*((*((*(_35841_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_3679_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_3679_t))._field_Decl))) {
		_1c0da8c71_pushErr((*(_35826_e)).ptr(), (*((*((*(_35841_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1c0e0411d_isValidForSptrType(&((*(_3679_t))._field_Kind))))) {
		jule::Ptr<_1c0c83552_StructIns> _37813_s = _1c0ddbab7_Struct((*(_3679_t))._field_Kind.ptr());;
		if ((((_37813_s != nullptr) && ((*_37813_s.alloc)._field_Decl != nullptr)) && (*(*_37813_s.alloc)._field_Decl.alloc)._field_Binded)) {
			_1c0da8c71_pushErr((*(_35826_e)).ptr(), (*((*((*(_35841_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*((*(_35863_d))))._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(jule::new_ptr<_1c0de44e8_Sptr>(_1c0de44e8_Sptr{._field_Elem=(*(_3679_t))._field_Kind}), 21)});
	if (((*((*(_35841_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1c0dd7de3_TypeKind> _39213_old = (*((*(_35826_e))))._field_prefix;;
		(*((*(_35826_e))))._field_prefix=(*(_3679_t))._field_Kind;
		jule::Ptr<_1c0da69e9_Data> _39513_init = _1c0dc6981_evalExpr((*(_35826_e)), (*((*(_35841_fc))))._field_Args[1LL]);;
		(*((*(_35826_e))))._field_prefix=_39213_old;
		if ((_39513_init != nullptr)) {
			jule::Ptr<_1c0c49480_Token> _40017_token = (*((*((*(_35841_fc))))._field_Args[1LL]))._field_Token;;
			;
			_1c0d3aa5a_checkValidityForInitExpr((*((*(_35826_e))))._field_s, (!((*((*(_35826_e))))._field_immutable)), false, &((*(_3679_t))._field_Kind), &(_39513_init), &(_40017_token));
			_1c0d366c1_checkAssignType((*((*(_35826_e))))._field_s, false, &((*(_3679_t))._field_Kind), &(_39513_init), _40017_token);
			(*((*(_35863_d))))._field_Model=jule::Any(jule::new_ptr<_1c0c8dc99_BuiltinNewCallExprModel>(_1c0c8dc99_BuiltinNewCallExprModel{._field_Kind=(*(_3679_t))._field_Kind, ._field_Init=(*_39513_init.alloc)._field_Model}), &__jule_any_type113);
		};
	} else {
		(*((*(_35863_d))))._field_Model=jule::Any(jule::new_ptr<_1c0c8dc99_BuiltinNewCallExprModel>(_1c0c8dc99_BuiltinNewCallExprModel{._field_Kind=(*(_3679_t))._field_Kind, }), &__jule_any_type113);
	};
	return (*(_35863_d));;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0eceb00_builtinCallerPanic(jule::Ptr<_1c0da8721_Eval>* _42028_e, jule::Ptr<_1c0c67998_FnCallExpr>* _42043_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	if (((*((*(_42043_fc))))._field_Args.len() < 1LL)) {
		_1c0da8c71_pushErr((*(_42028_e)).ptr(), (*((*(_42043_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("message", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_42043_fc))))._field_Args.len() > 1LL)) {
		_1c0da8c71_pushErr((*(_42028_e)).ptr(), (*((*((*(_42043_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("panic", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1c0da69e9_Data> _4299_expr = _1c0dc6981_evalExpr((*(_42028_e)), (*((*(_42043_fc))))._field_Args[0LL]);;
	if ((_4299_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1c0dda544_Prim((*(_4299_expr))._field_Kind.ptr()) == nullptr) || (!(_1c0de3e54_IsStr(_1c0dda544_Prim((*(_4299_expr))._field_Kind).ptr()))))) {
		_1c0da8c71_pushErr((*(_42028_e)).ptr(), (*((*(_42043_fc))))._field_Token, jule::Str::lit("panic function only accepts strings", 35), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c0da69e9_Data> _4389_d = _1c0dd289e_buildVoidData();;
	(*(_4389_d))._field_Model=jule::Any(jule::new_ptr<_1c0c8e173_BuiltinPanicCallExprModel>(_1c0c8e173_BuiltinPanicCallExprModel{._field_Token=(*((*(_42043_fc))))._field_Token, ._field_Expr=(*(_4299_expr))._field_Model}), &__jule_any_type28);
	return _4389_d;;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0ed0260_builtinCallerMake(jule::Ptr<_1c0da8721_Eval>* _44627_e, jule::Ptr<_1c0c67998_FnCallExpr>* _44642_fc, jule::Ptr<_1c0da69e9_Data>* _44664_d) {
	if (((*((*(_44642_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_44642_fc))))._field_Args.len() == 1LL)) {
			_1c0da8c71_pushErr((*(_44627_e)).ptr(), (*((*(_44642_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("size", 4), &__jule_any_type4)}));
			return nullptr;;
		};
		_1c0da8c71_pushErr((*(_44627_e)).ptr(), (*((*(_44642_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type, size", 10), &__jule_any_type4)}));
		return nullptr;;
	} else if (((*((*(_44642_fc))))._field_Args.len() > 3LL)) {
		_1c0da8c71_pushErr((*(_44627_e)).ptr(), (*((*((*(_44642_fc))))._field_Args[3LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("make", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c0da69e9_Data> _4599_t = _1c0dc5b6c_evalExprKind((*(_44627_e)), (*((*((*(_44642_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_4599_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_4599_t))._field_Decl))) {
		_1c0da8c71_pushErr((*(_44627_e)).ptr(), (*((*((*(_44642_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_1c0ddb59a_Slc((*(_4599_t))._field_Kind.ptr()) == nullptr)) {
		_1c0da8c71_pushErr((*(_44627_e)).ptr(), (*((*((*(_44642_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*(_4599_t))._field_Kind), &__jule_any_type4),jule::Any(jule::Str::lit("make", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	(*((*(_44664_d))))._field_Kind=(*(_4599_t))._field_Kind;
	jule::Ptr<_1c0da69e9_Data> _4749_lenExpr = _1c0dc6981_evalExpr(_1c0d35d1e_evalp((*((*(_44627_e))))._field_s, (*((*(_44627_e))))._field_lookup, (*(_4599_t))._field_Kind), (*((*(_44642_fc))))._field_Args[1LL]);;
	if ((_4749_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1c0db295b_checkIntegerIndexingByData((*(_44627_e)).ptr(), &(_4749_lenExpr), (*((*((*(_44642_fc))))._field_Args[1LL]))._field_Token);
	jule::Ptr<_1c0c8ead0_BuiltinMakeCallExprModel> _4819_model = jule::new_ptr<_1c0c8ead0_BuiltinMakeCallExprModel>(_1c0c8ead0_BuiltinMakeCallExprModel{._field_Kind=(*(_4599_t))._field_Kind, ._field_Len=(*(_4749_lenExpr))._field_Model, });;
	(*((*(_44664_d))))._field_Model=jule::Any(_4819_model, &__jule_any_type114);
	if (((*((*(_44642_fc))))._field_Args.len() == 3LL)) {
		jule::Ptr<_1c0da69e9_Data> _48713_capExpr = _1c0dc6981_evalExpr(_1c0d35d1e_evalp((*((*(_44627_e))))._field_s, (*((*(_44627_e))))._field_lookup, (*(_4599_t))._field_Kind), (*((*(_44642_fc))))._field_Args[2LL]);;
		if ((_48713_capExpr == nullptr)) {
			return (*(_44664_d));;
		};
		_1c0db295b_checkIntegerIndexingByData((*(_44627_e)).ptr(), &(_48713_capExpr), (*((*((*(_44642_fc))))._field_Args[2LL]))._field_Token);
		(*(_4819_model))._field_Cap=(*(_48713_capExpr))._field_Model;
	};
	return (*(_44664_d));;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0ed057e_builtinCallerAppend(jule::Ptr<_1c0da8721_Eval>* _49729_e, jule::Ptr<_1c0c67998_FnCallExpr>* _49744_fc, jule::Ptr<_1c0da69e9_Data>* _49766_d) {
	if (((*((*(_49744_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_49744_fc))))._field_Args.len() == 1LL)) {
			_1c0da8c71_pushErr((*(_49729_e)).ptr(), (*((*(_49744_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("values", 6), &__jule_any_type4)}));
			return nullptr;;
		};
		_1c0da8c71_pushErr((*(_49729_e)).ptr(), (*((*(_49744_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c0da69e9_Data> _5079_t = _1c0dc6981_evalExpr((*(_49729_e)), (*((*(_49744_fc))))._field_Args[0LL]);;
	if ((_5079_t == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c0de4ebb_Slc> _5129_s = _1c0ddb59a_Slc((*(_5079_t))._field_Kind.ptr());;
	if ((_5129_s == nullptr)) {
		_1c0da8c71_pushErr((*(_49729_e)).ptr(), (*((*((*(_49744_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c0dd7de3_TypeKind> _5189_prefix = (*((*(_49729_e))))._field_prefix;;
	(*((*(_49729_e))))._field_prefix=(*(_5079_t))._field_Kind;
	__JULE_DEFER({
		(*((*(_49729_e))))._field_prefix=_5189_prefix;
	});;
	;
	;
	(*(_49766_d))=jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=(*(_5079_t))._field_Kind, ._field_Mutable=true, });
	{
		auto &_match_expr{ (*((*((*(_49744_fc))))._field_Args[1LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1c5be7e2e:;
			{
				if (((*((*(_49744_fc))))._field_Args.len() > 2LL)) {
					_1c0da8c71_pushErr((*(_49729_e)).ptr(), (*((*((*(_49744_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1c0da69e9_Data> _53513_e1 = _1c0dc6981_evalExpr((*(_49729_e)), (*((*((*((*(_49744_fc))))._field_Args[1LL]))._field_Kind.unsafe_cast_ptr<_1c0c66205_VariadicExpr>()))._field_Expr);;
				if ((_53513_e1 == nullptr)) {
					return nullptr;;
				};
				if (((_1c0dda544_Prim((*(_5129_s))._field_Elem.ptr()) != nullptr) && _1c0de23b4_IsU8(_1c0dda544_Prim((*(_5129_s))._field_Elem).ptr()))) {
					if (((_1c0dda544_Prim((*(_53513_e1))._field_Kind) != nullptr) && _1c0de3e54_IsStr(_1c0dda544_Prim((*(_53513_e1))._field_Kind).ptr()))) {
						_1c0dd5066_makeVariadic(&(_53513_e1), _1c0ecaca5_primU8);
						(*((*(_49766_d))))._field_Model=jule::Any(jule::new_ptr<_1c0c8eea9_BuiltinAppendCallExprModel>(_1c0c8eea9_BuiltinAppendCallExprModel{._field_Dest=(*(_5079_t))._field_Model, ._field_Elements=(*(_53513_e1))._field_Model}), &__jule_any_type25);
						return (*(_49766_d));;
					};
				};
				if ((!(_1c0dda2ad_Variadicable((*(_53513_e1))._field_Kind)))) {
					_1c0da8c71_pushErr((*(_49729_e)).ptr(), (*((*((*(_49744_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*(_53513_e1))._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				_1c0dd5066_makeVariadic(&(_53513_e1), (*(_5129_s))._field_Elem);
				if (_1c0d3aa5a_checkValidityForInitExpr((*((*(_49729_e))))._field_s, true, false, &((*(_5129_s))._field_Elem), &(_53513_e1), &((*((*((*(_49744_fc))))._field_Args[1LL]))._field_Token))) {
					_1c0d366c1_checkAssignType((*((*(_49729_e))))._field_s, false, &((*(_5129_s))._field_Elem), &(_53513_e1), (*((*((*(_49744_fc))))._field_Args[1LL]))._field_Token);
				};
				(*((*(_49766_d))))._field_Model=jule::Any(jule::new_ptr<_1c0c8eea9_BuiltinAppendCallExprModel>(_1c0c8eea9_BuiltinAppendCallExprModel{._field_Dest=(*(_5079_t))._field_Model, ._field_Elements=(*(_53513_e1))._field_Model}), &__jule_any_type25);
				return (*(_49766_d));;
			}
		}
		_match_end_1c5be7d85:;
	};
	jule::Ptr<_1c0da69e9_Data> _5699_e1 = _1c0dc6981_evalExpr((*(_49729_e)), (*((*(_49744_fc))))._field_Args[1LL]);;
	if ((_5699_e1 == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c0c89d0b_SliceExprModel> _5749_slice = jule::new_ptr<_1c0c89d0b_SliceExprModel>(_1c0c89d0b_SliceExprModel{._field_ElemKind=(*(_5129_s))._field_Elem, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, ((*((*(_49744_fc))))._field_Args.len() - 1LL), jule::Any(nullptr))});;
	{
		auto expr = (*((*(_49744_fc))))._field_Args.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1c5c051d3:;
		if (it != expr_end) {
			jule::Ptr<_1c0c63c6e_Expr> _57817_arg = *it;
			{
				_5699_e1=_1c0dc6981_evalExpr((*(_49729_e)), _57817_arg);
				if ((_5699_e1 == nullptr)) {
					return nullptr;;
				};
				if ((*(*(_5699_e1))._field_Kind.alloc)._field_Variadic) {
					_1c0da8c71_pushErr((*(_49729_e)).ptr(), (*(_57817_arg))._field_Token, jule::Str::lit("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
				};
				if (_1c0d3aa5a_checkValidityForInitExpr((*((*(_49729_e))))._field_s, true, false, &((*(_5129_s))._field_Elem), &(_5699_e1), &((*_57817_arg.alloc)._field_Token))) {
					_1c0d366c1_checkAssignType((*((*(_49729_e))))._field_s, false, &((*(_5129_s))._field_Elem), &(_5699_e1), (*_57817_arg.alloc)._field_Token);
				};
				(*(_5749_slice))._field_Elems=jule::append((*_5749_slice.alloc)._field_Elems,jule::Slice<jule::Any>::make({(*(_5699_e1))._field_Model}));
			}
			_iter_next_1c5c051d3:;
			++it;
			goto _iter_begin_1c5c051d3;
		}
		_iter_end_1c5c051d3:;
	};
	(*((*(_49766_d))))._field_Model=jule::Any(jule::new_ptr<_1c0c8eea9_BuiltinAppendCallExprModel>(_1c0c8eea9_BuiltinAppendCallExprModel{._field_Dest=(*(_5079_t))._field_Model, ._field_Elements=jule::Any(_5749_slice, &__jule_any_type76)}), &__jule_any_type25);
	return (*(_49766_d));;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0ed0a68_callerCopySlice(jule::Ptr<_1c0da69e9_Data>* _60025_dest, jule::Ptr<_1c0da8721_Eval>* _60043_e, jule::Ptr<_1c0c67998_FnCallExpr>* _60058_fc, jule::Ptr<_1c0da69e9_Data>* _60080_d) {
	if ((!((*((*(_60025_dest))))._field_Mutable))) {
		_1c0da8c71_pushErr((*(_60043_e)).ptr(), (*((*((*(_60058_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c0da69e9_Data> _6059_src = _1c0dc6981_evalExpr((*(_60043_e)), (*((*(_60058_fc))))._field_Args[1LL]);;
	if ((_6059_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c0de4ebb_Slc> _6099_slc = _1c0ddb59a_Slc((*(_6059_src))._field_Kind.ptr());;
	if ((_6099_slc != nullptr)) {
		if (((!((*(_6059_src))._field_Mutable)) && _1c0dd9774_Mutable((*_6099_slc.alloc)._field_Elem.ptr()))) {
			_1c0da8c71_pushErr((*(_60043_e)).ptr(), (*((*((*(_60058_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		};
		if ((!(_1c0dd85ec_Equal((*((*(_60025_dest))))._field_Kind, (*(_6059_src))._field_Kind)))) {
			_1c0da8c71_pushErr((*(_60043_e)).ptr(), (*((*((*(_60058_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*((*(_60025_dest))))._field_Kind), &__jule_any_type4),jule::Any(_1c0dd82ab_Str((*(_6059_src))._field_Kind), &__jule_any_type4)}));
		};
	} else {
		jule::Ptr<_1c0de09bc_Prim> _6199_destPrim = _1c0dda544_Prim((*(_1c0ddb59a_Slc((*((*(_60025_dest))))._field_Kind)))._field_Elem.ptr());;
		jule::Ptr<_1c0de09bc_Prim> _6209_prim = _1c0dda544_Prim((*(_6059_src))._field_Kind);;
		if (((((_6199_destPrim == nullptr) || (_6209_prim == nullptr)) || (!(_1c0de3e54_IsStr(_6209_prim.ptr())))) || (!(_1c0de23b4_IsU8(_6199_destPrim.ptr()))))) {
			_1c0da8c71_pushErr((*(_60043_e)).ptr(), (*((*((*(_60058_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*((*(_60025_dest))))._field_Kind), &__jule_any_type4),jule::Any(_1c0dd82ab_Str((*(_6059_src))._field_Kind), &__jule_any_type4)}));
		};
	};
	(*((*(_60080_d))))._field_Kind=_1c0da042c_lenKind();
	(*((*(_60080_d))))._field_Model=jule::Any(jule::new_ptr<_1c0c90d56_BuiltinCopyCallExprModel>(_1c0c90d56_BuiltinCopyCallExprModel{._field_Dest=(*(_60025_dest)), ._field_Src=_6059_src}), &__jule_any_type30);
	return (*(_60080_d));;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0ed0e97_builtinCallerCopy(jule::Ptr<_1c0da8721_Eval>* _63427_e, jule::Ptr<_1c0c67998_FnCallExpr>* _63442_fc, jule::Ptr<_1c0da69e9_Data>* _63464_d) {
	if (((*((*(_63442_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_63442_fc))))._field_Args.len() == 1LL)) {
			_1c0da8c71_pushErr((*(_63427_e)).ptr(), (*((*(_63442_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src", 3), &__jule_any_type4)}));
			return nullptr;;
		};
		_1c0da8c71_pushErr((*(_63427_e)).ptr(), (*((*(_63442_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_63442_fc))))._field_Args.len() > 2LL)) {
		_1c0da8c71_pushErr((*(_63427_e)).ptr(), (*((*((*(_63442_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("copy", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1c0da69e9_Data> _6479_dest = _1c0dc6981_evalExpr((*(_63427_e)), (*((*(_63442_fc))))._field_Args[0LL]);;
	{
		
		if ((_6479_dest == nullptr)) {
			_case_begin_1c5c19d52:;
			{
				return nullptr;;
			}
		}
		else if ((_1c0ddb59a_Slc((*(_6479_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c5c1a9e0:;
			{
				return _1c0ed0a68_callerCopySlice(&(_6479_dest), _63427_e, _63442_fc, _63464_d);;
			}
		}
		else {
			_case_begin_1c5c1999a:;
			{
				_1c0da8c71_pushErr((*(_63427_e)).ptr(), (*((*((*(_63442_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c5c17e3d:;
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0ed131b_callerLenSlice(jule::Ptr<_1c0da69e9_Data>* _65924_expr, jule::Ptr<_1c0da69e9_Data>* _65942_d) {
	(*((*(_65942_d))))._field_Kind=_1c0da042c_lenKind();
	(*((*(_65942_d))))._field_Model=jule::Any(jule::new_ptr<_1c0c902a6_BuiltinLenCallExprModel>(_1c0c902a6_BuiltinLenCallExprModel{._field_Expr=(*(_65924_expr))}), &__jule_any_type115);
	return (*(_65942_d));;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0ed1690_callerLenMap(jule::Ptr<_1c0da69e9_Data>* _66722_expr, jule::Ptr<_1c0da69e9_Data>* _66740_d) {
	(*((*(_66740_d))))._field_Kind=_1c0da042c_lenKind();
	(*((*(_66740_d))))._field_Model=jule::Any(jule::new_ptr<_1c0c902a6_BuiltinLenCallExprModel>(_1c0c902a6_BuiltinLenCallExprModel{._field_Expr=(*(_66722_expr))}), &__jule_any_type115);
	return (*(_66740_d));;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0ed1a14_callerLenArr(jule::Ptr<_1c0da69e9_Data>* _67522_expr, jule::Ptr<_1c0da69e9_Data>* _67540_d) {
	(*((*(_67540_d))))._field_Kind=_1c0da042c_lenKind();
	(*((*(_67540_d))))._field_Constant=static__2021e65bb_NewI64(static_cast<jule::I64>((*(_1c0ddb314_Arr((*((*(_67522_expr))))._field_Kind.ptr())))._field_N));
	(*((*(_67540_d))))._field_Model=jule::Any((*((*(_67540_d))))._field_Constant, &__jule_any_type19);
	return (*(_67540_d));;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0ed1d88_callerLenStr(jule::Ptr<_1c0da69e9_Data>* _68222_expr, jule::Ptr<_1c0da69e9_Data>* _68240_d) {
	(*((*(_68240_d))))._field_Kind=_1c0da042c_lenKind();
	if (_1c0da7401_IsConst((*(_68222_expr)).ptr())) {
		(*((*(_68240_d))))._field_Constant=static__2021e65bb_NewI64(static_cast<jule::I64>(_2021e8304_ReadStr((*((*(_68222_expr))))._field_Constant.ptr()).len()));
		(*((*(_68240_d))))._field_Model=jule::Any((*((*(_68240_d))))._field_Constant, &__jule_any_type19);
	} else {
		(*((*(_68240_d))))._field_Model=jule::Any(jule::new_ptr<_1c0c902a6_BuiltinLenCallExprModel>(_1c0c902a6_BuiltinLenCallExprModel{._field_Expr=(*(_68222_expr))}), &__jule_any_type115);
	};
	return (*(_68240_d));;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0ed220c_callerLenComptime(jule::Ptr<_1c0da69e9_Data>* _69527_d, jule::I64 _69537_n) {
	(*((*(_69527_d))))._field_Kind=_1c0da042c_lenKind();
	(*((*(_69527_d))))._field_Constant=static__2021e65bb_NewI64(static_cast<jule::I64>(_69537_n));
	(*((*(_69527_d))))._field_Model=jule::Any((*((*(_69527_d))))._field_Constant, &__jule_any_type19);
	return (*(_69527_d));;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0ed263b_builtinCallerLen(jule::Ptr<_1c0da8721_Eval>* _70226_e, jule::Ptr<_1c0c67998_FnCallExpr>* _70241_fc, jule::Ptr<_1c0da69e9_Data>* _70263_d) {
	if (((*((*(_70241_fc))))._field_Args.len() < 1LL)) {
		_1c0da8c71_pushErr((*(_70226_e)).ptr(), (*((*(_70241_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_70241_fc))))._field_Args.len() > 1LL)) {
		_1c0da8c71_pushErr((*(_70226_e)).ptr(), (*((*((*(_70241_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("len", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1c0da69e9_Data> _7109_dest = _1c0dc6640_evalExpr1((*(_70226_e)), (*((*(_70241_fc))))._field_Args[0LL]);;
	{
		
		if ((_7109_dest == nullptr)) {
			_case_begin_1c5c27e3c:;
			{
				return nullptr;;
			}
		}
		else if ((_1c0ddb59a_Slc((*(_7109_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c5c271c2:;
			{
				return _1c0ed131b_callerLenSlice(&(_7109_dest), _70263_d);;
			}
		}
		else if ((_1c0ddb314_Arr((*(_7109_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c5c26d81:;
			{
				return _1c0ed1a14_callerLenArr(&(_7109_dest), _70263_d);;
			}
		}
		else if ((_1c0ddc0d4_Map((*(_7109_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c5c26de7:;
			{
				return _1c0ed1690_callerLenMap(&(_7109_dest), _70263_d);;
			}
		}
		else if (((_1c0dda544_Prim((*(_7109_dest))._field_Kind.ptr()) != nullptr) && _1c0de3e54_IsStr(_1c0dda544_Prim((*_7109_dest.alloc)._field_Kind).ptr()))) {
			_case_begin_1c5c26e5d:;
			{
				return _1c0ed1d88_callerLenStr(&(_7109_dest), _70263_d);;
			}
		}
		else if ((_1c0ddc887_comptimeStructFields((*(_7109_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c5c26ec4:;
			{
				return _1c0ed220c_callerLenComptime(_70263_d, (*(_1c0ddc887_comptimeStructFields((*_7109_dest.alloc)._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1c0ddcda4_comptimeEnumFields((*(_7109_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c5c2703a:;
			{
				return _1c0ed220c_callerLenComptime(_70263_d, (*(_1c0ddcda4_comptimeEnumFields((*_7109_dest.alloc)._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1c0dddb74_comptimeTypeInfos((*(_7109_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c5c270a1:;
			{
				return _1c0ed220c_callerLenComptime(_70263_d, (*(_1c0dddb74_comptimeTypeInfos((*_7109_dest.alloc)._field_Kind)))._field_types.len());;
			}
		}
		else if ((_1c0ddd3c1_comptimeParams((*(_7109_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c5c28008:;
			{
				return _1c0ed220c_callerLenComptime(_70263_d, (*(_1c0ddd3c1_comptimeParams((*_7109_dest.alloc)._field_Kind)))._field_params.len());;
			}
		}
		else if ((_1c0dde191_comptimeStatics((*(_7109_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c5c2806e:;
			{
				return _1c0ed220c_callerLenComptime(_70263_d, (*(_1c0dde191_comptimeStatics((*_7109_dest.alloc)._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1c0ddebca_comptimeFiles((*(_7109_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c5c280d5:;
			{
				return _1c0ed220c_callerLenComptime(_70263_d, (*(_1c0ddebca_comptimeFiles((*_7109_dest.alloc)._field_Kind)))._field_files.len());;
			}
		}
		else {
			_case_begin_1c5c26d1a:;
			{
				_1c0da8c71_pushErr((*(_70226_e)).ptr(), (*((*((*(_70241_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c5c252ad:;
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0ed29b0_callerCapSlice(jule::Ptr<_1c0da69e9_Data>* _74024_expr, jule::Ptr<_1c0da69e9_Data>* _74042_d) {
	(*((*(_74042_d))))._field_Kind=_1c0da042c_lenKind();
	(*((*(_74042_d))))._field_Model=jule::Any(jule::new_ptr<_1c0c905a3_BuiltinCapCallExprModel>(_1c0c905a3_BuiltinCapCallExprModel{._field_Expr=(*(_74024_expr))}), &__jule_any_type116);
	return (*(_74042_d));;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0ed2dde_builtinCallerCap(jule::Ptr<_1c0da8721_Eval>* _74826_e, jule::Ptr<_1c0c67998_FnCallExpr>* _74841_fc, jule::Ptr<_1c0da69e9_Data>* _74863_d) {
	if (((*((*(_74841_fc))))._field_Args.len() < 1LL)) {
		_1c0da8c71_pushErr((*(_74826_e)).ptr(), (*((*(_74841_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_74841_fc))))._field_Args.len() > 1LL)) {
		_1c0da8c71_pushErr((*(_74826_e)).ptr(), (*((*((*(_74841_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("cap", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1c0da69e9_Data> _7569_dest = _1c0dc6981_evalExpr((*(_74826_e)), (*((*(_74841_fc))))._field_Args[0LL]);;
	{
		
		if ((_7569_dest == nullptr)) {
			_case_begin_1c5c36d5d:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7569_dest))._field_Decl) {
			_case_begin_1c5c379eb:;
			{
				_1c0da8c71_pushErr((*(_74826_e)).ptr(), (*((*((*(_74841_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1c0ddb59a_Slc((*(_7569_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c5c37a62:;
			{
				return _1c0ed29b0_callerCapSlice(&(_7569_dest), _74863_d);;
			}
		}
		else {
			_case_begin_1c5c369a6:;
			{
				_1c0da8c71_pushErr((*(_74826_e)).ptr(), (*((*((*(_74841_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c5c34e49:;
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0ed33c8_callerDeleteMap(jule::Ptr<_1c0da8721_Eval>* _77125_e, jule::Ptr<_1c0c67998_FnCallExpr>* _77140_fc, jule::Ptr<_1c0da69e9_Data>* _77162_expr, jule::Ptr<_1c0da69e9_Data>* _77180_d) {
	if ((!((*((*(_77162_expr))))._field_Mutable))) {
		_1c0da8c71_pushErr((*(_77125_e)).ptr(), (*((*((*(_77140_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	(*(_77180_d))=_1c0dd289e_buildVoidData();
	jule::Ptr<_1c0c9097c_BuiltinDeleteCallExprModel> _7769_model = jule::new_ptr<_1c0c9097c_BuiltinDeleteCallExprModel>(_1c0c9097c_BuiltinDeleteCallExprModel{._field_Dest=(*(_77162_expr)), });;
	if (((*((*(_77140_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1c0da69e9_Data> _78013_key = _1c0dc6981_evalExpr((*(_77125_e)), (*((*(_77140_fc))))._field_Args[1LL]);;
		{
			
			if ((_78013_key == nullptr)) {
				_case_begin_1c5c3d837:;
				{
					return nullptr;;
				}
			}
			else if ((*(_78013_key))._field_Decl) {
				_case_begin_1c5c3d89d:;
				{
					_1c0da8c71_pushErr((*(_77125_e)).ptr(), (*((*((*(_77140_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1c5c3c407:;
				{
					;
					jule::Ptr<_1c0dd7de3_TypeKind> _78917_keyType = (*(_1c0ddc0d4_Map((*((*(_77162_expr))))._field_Kind.ptr())))._field_Key;;
					if ((!(_1c0d366c1_checkAssignType((*((*(_77125_e))))._field_s, false, &(_78917_keyType), &(_78013_key), (*((*((*(_77140_fc))))._field_Args[1LL]))._field_Token)))) {
						return nullptr;;
					};
				}
			}
			_match_end_1c5c3c391:;
		};
		(*(_7769_model))._field_Key=_78013_key;
	};
	(*((*(_77180_d))))._field_Model=jule::Any(_7769_model, &__jule_any_type31);
	return (*(_77180_d));;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0ed3807_builtinCallerDelete(jule::Ptr<_1c0da8721_Eval>* _80029_e, jule::Ptr<_1c0c67998_FnCallExpr>* _80044_fc, jule::Ptr<_1c0da69e9_Data>* _80066_d) {
	if (((*((*(_80044_fc))))._field_Args.len() < 1LL)) {
		_1c0da8c71_pushErr((*(_80029_e)).ptr(), (*((*(_80044_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("map", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_80044_fc))))._field_Args.len() > 2LL)) {
		_1c0da8c71_pushErr((*(_80029_e)).ptr(), (*((*((*(_80044_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("delete", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1c0da69e9_Data> _8089_dest = _1c0dc6981_evalExpr((*(_80029_e)), (*((*(_80044_fc))))._field_Args[0LL]);;
	{
		
		if ((_8089_dest == nullptr)) {
			_case_begin_1c5c448e8:;
			{
				return nullptr;;
			}
		}
		else if ((*(_8089_dest))._field_Decl) {
			_case_begin_1c5c45586:;
			{
				_1c0da8c71_pushErr((*(_80029_e)).ptr(), (*((*((*(_80044_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1c0ddc0d4_Map((*(_8089_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c5c455ec:;
			{
				return _1c0ed33c8_callerDeleteMap(_80029_e, _80044_fc, &(_8089_dest), _80066_d);;
			}
		}
		else {
			_case_begin_1c5c44541:;
			{
				_1c0da8c71_pushErr((*(_80029_e)).ptr(), (*((*((*(_80044_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c5c429d4:;
	};
}



inline jule::Ptr<_1c0da69e9_Data> _1c0ed3c36_builtinCallerAssert(jule::Ptr<_1c0da8721_Eval>* _82329_e, jule::Ptr<_1c0c67998_FnCallExpr>* _82344_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	if (((*((*(_82344_fc))))._field_Args.len() < 1LL)) {
		_1c0da8c71_pushErr((*(_82329_e)).ptr(), (*((*(_82344_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_82344_fc))))._field_Args.len() > 2LL)) {
		_1c0da8c71_pushErr((*(_82329_e)).ptr(), (*((*((*(_82344_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("assert", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1c0da69e9_Data> _8329_expr = _1c0dc6981_evalExpr((*(_82329_e)), (*((*(_82344_fc))))._field_Args[0LL]);;
	if ((_8329_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1c0dda544_Prim((*(_8329_expr))._field_Kind.ptr()) == nullptr) || (!(_1c0de3bbd_IsBool(_1c0dda544_Prim((*(_8329_expr))._field_Kind).ptr()))))) {
		_1c0da8c71_pushErr((*(_82329_e)).ptr(), (*((*(_82344_fc))))._field_Token, jule::Str::lit("assertion requires boolean expression", 37), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c0c8e629_BuiltinAssertCallExprModel> _8419_model = jule::new_ptr<_1c0c8e629_BuiltinAssertCallExprModel>(_1c0c8e629_BuiltinAssertCallExprModel{._field_Token=(*((*(_82344_fc))))._field_Token, ._field_Expr=(*(_8329_expr))._field_Model, ._field_Log=jule::Str::lit("assertion failed", 16)});;
	if (((*((*(_82344_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1c0da69e9_Data> _84913_log = _1c0dc6981_evalExpr((*(_82329_e)), (*((*(_82344_fc))))._field_Args[1LL]);;
		if ((_84913_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_1c0da7401_IsConst(_84913_log.ptr()))) || (_1c0dda544_Prim((*(_84913_log))._field_Kind) == nullptr)) || (!(_1c0de3e54_IsStr(_1c0dda544_Prim((*(_84913_log))._field_Kind).ptr()))))) {
			_1c0da8c71_pushErr((*(_82329_e)).ptr(), (*((*((*(_82344_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("const str", 9), &__jule_any_type4),jule::Any(_1c0dd82ab_Str((*(_84913_log))._field_Kind), &__jule_any_type4)}));
			return nullptr;;
		};
		(*(_8419_model))._field_Log=_2021e8304_ReadStr((*(_84913_log))._field_Constant.ptr());
	};
	jule::Ptr<_1c0da69e9_Data> _8629_d = _1c0dd289e_buildVoidData();;
	(*(_8629_d))._field_Model=jule::Any(_8419_model, &__jule_any_type29);
	return _8629_d;;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0ed4165_builtinCallerStdComptimeTypeOf(jule::Ptr<_1c0da8721_Eval>* _86740_e, jule::Ptr<_1c0c67998_FnCallExpr>* _86755_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	if (((*((*(_86755_fc))))._field_Args.len() < 1LL)) {
		_1c0da8c71_pushErr((*(_86740_e)).ptr(), (*((*(_86755_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_86755_fc))))._field_Args.len() > 1LL)) {
		_1c0da8c71_pushErr((*(_86740_e)).ptr(), (*((*((*(_86755_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeOf", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1c0da69e9_Data> _8769_d = _1c0dc5b6c_evalExprKind((*(_86740_e)), (*((*((*(_86755_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_8769_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c0c98699_FnIns> _8805_f = _1c0ddb831_Fn((*(_8769_d))._field_Kind.ptr());;
	if ((_8805_f != nullptr)) {
		if (_1c0c99b2e_IsBuiltin(_8805_f)) {
			_1c0da8c71_pushErr((*(_86740_e)).ptr(), (*((*((*(_86755_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("<built-in fn>", 13), &__jule_any_type4)}));
			return nullptr;;
		};
		if (((*_8805_f.alloc)._field_Generics.len() != (*((*_8805_f.alloc)._field_Decl))._field_Generics.len())) {
			_1c0da8c71_pushErr((*(_86740_e)).ptr(), (*((*((*(_86755_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1c0c83552_StructIns> _8915_s = _1c0ddbab7_Struct((*(_8769_d))._field_Kind);;
	if (((_8915_s != nullptr) && ((*_8915_s.alloc)._field_Generics.len() != (*((*_8915_s.alloc)._field_Decl))._field_Generics.len()))) {
		_1c0da8c71_pushErr((*(_86740_e)).ptr(), (*((*((*(_86755_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_1c0ddc601_comptime((*(_8769_d))._field_Kind)) {
		_1c0da8c71_pushErr((*(_86740_e)).ptr(), (*((*((*(_86755_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*(_8769_d))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1c0ccccb6_buildComptimeTypeInfoData(&((*((*(_86740_e))))._field_s), &((*(_8769_d))._field_Kind));;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0ed47d6_builtinCallerStdComptimeValueOf(jule::Ptr<_1c0da8721_Eval>* _90341_e, jule::Ptr<_1c0c67998_FnCallExpr>* _90356_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	if (((*((*(_90356_fc))))._field_Args.len() < 1LL)) {
		_1c0da8c71_pushErr((*(_90341_e)).ptr(), (*((*(_90356_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_90356_fc))))._field_Args.len() > 1LL)) {
		_1c0da8c71_pushErr((*(_90341_e)).ptr(), (*((*((*(_90356_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4)}));
	};
	jule::Ptr<_1c0da69e9_Data> _9119_d = _1c0dc6981_evalExpr((*(_90341_e)), (*((*(_90356_fc))))._field_Args[0LL]);;
	if ((_9119_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1c0da077e_isGoodValueToInfer(&(_9119_d))))) {
		_1c0da8c71_pushErr((*(_90341_e)).ptr(), (*((*((*(_90356_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*(_9119_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1c0ccd107_buildComptimeValue(&(_9119_d));;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0ed4c15_builtinCallerStdComptimeLine(jule::Ptr<_1c0da8721_Eval>* _92338_e, jule::Ptr<_1c0c67998_FnCallExpr>* _92353_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	if (((*((*(_92353_fc))))._field_Args.len() > 0LL)) {
		_1c0da8c71_pushErr((*(_92338_e)).ptr(), (*((*((*(_92353_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Line", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_2021e617b_Const> _9279_constant = static__2021e65bb_NewI64(static_cast<jule::I64>((*((*((*(_92353_fc))))._field_Token))._field_Row));;
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec9ea2_primInt, ._field_Model=jule::Any(_9279_constant, &__jule_any_type19), ._field_Constant=_9279_constant});;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0ed5144_builtinCallerStdComptimeFile(jule::Ptr<_1c0da8721_Eval>* _93538_e, jule::Ptr<_1c0c67998_FnCallExpr>* _93553_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	if (((*((*(_93553_fc))))._field_Args.len() > 0LL)) {
		_1c0da8c71_pushErr((*(_93538_e)).ptr(), (*((*((*(_93553_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("File", 4), &__jule_any_type4)}));
	};
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(jule::new_ptr<_1c0cca874_comptimeFile>(_1c0cca874_comptimeFile{._field_file=(*((*((*(_93538_e))))._field_s))._field_file}), 18)}), });;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0ed5573_builtinCallerStdComptimeFiles(jule::Ptr<_1c0da8721_Eval>* _94839_e, jule::Ptr<_1c0c67998_FnCallExpr>* _94854_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	if (((*((*(_94854_fc))))._field_Args.len() > 0LL)) {
		_1c0da8c71_pushErr((*(_94839_e)).ptr(), (*((*((*(_94854_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Files", 5), &__jule_any_type4)}));
	};
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(jule::new_ptr<_1c0cc9279_comptimeFiles>(_1c0cc9279_comptimeFiles{._field_files=(*((*((*(_94839_e))))._field_s))._field_files}), 17)}), });;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0ed59a2_builtinCallerStdComptimeTypeAlias(jule::Ptr<_1c0da8721_Eval>* _96143_e, jule::Ptr<_1c0c67998_FnCallExpr>* _96158_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	if (((*((*(_96158_fc))))._field_Args.len() > 2LL)) {
		_1c0da8c71_pushErr((*(_96143_e)).ptr(), (*((*((*(_96158_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_96158_fc))))._field_Args.len() == 0LL)) {
		_1c0da8c71_pushErr((*(_96143_e)).ptr(), (*((*(_96158_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ident, type", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_96158_fc))))._field_Args.len() == 1LL)) {
		_1c0da8c71_pushErr((*(_96143_e)).ptr(), (*((*(_96158_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_96158_fc))))._field_Args[0LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1c5c6d933:;
			{
				goto _match_end_1c5c6e15e;
			}
		}
		else {
			_case_begin_1c5c6e1c5:;
			{
				_1c0da8c71_pushErr((*(_96143_e)).ptr(), (*((*((*(_96158_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1c0da90d4_pushSuggestion((*(_96143_e)).ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c5c6e15e:;
	};
	jule::Ptr<_1c0c49480_Token> _9829_ident = (*((*((*((*(_96158_fc))))._field_Args[0LL]))._field_Kind.cast_ptr<_1c0c65589_IdentExpr>(&__jule_any_type79)))._field_Token;;
	{
		auto &_match_expr{ (*((*(_96143_e))))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1c5c714b3:;
			{
				goto _match_end_1c5c71705;
			}
		}
		else {
			_case_begin_1c5c7175a:;
			{
				_1c0da8c71_pushErr((*(_96143_e)).ptr(), (*((*(_96158_fc))))._field_Token, jule::Str::lit("you can call @ function in the scopes only", 42), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1c5c71705:;
	};
	jule::Ptr<_1c0cdeaec_scopeChecker> _9919_sc = (*((*(_96143_e))))._field_lookup.cast_ptr<_1c0cdeaec_scopeChecker>(0);;
	jule::Ptr<_1c0dd7101_TypeAlias> _9929_alias = jule::new_ptr<_1c0dd7101_TypeAlias>(_1c0dd7101_TypeAlias{._field_Scope=(*(_9919_sc))._field_tree, ._field_Public=_1c0d28141_IsPub((*(_9829_ident))._field_Kind), ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=_9829_ident, ._field_Ident=(*_9829_ident.alloc)._field_Kind, ._field_Kind=jule::new_ptr<_1c0de00b5_TypeSymbol>(), });;
	jule::Ptr<_1c0da69e9_Data> _10029_t = _1c0dc5ead_eval1((*(_96143_e)), (*((*(_96158_fc))))._field_Args[1LL]);;
	if ((_10029_t == nullptr)) {
		return nullptr;;
	};
	if ((*(_10029_t))._field_Decl) {
		(*((*(_9929_alias))._field_Kind))._field_Kind=(*(_10029_t))._field_Kind;
	} else {
		jule::Ptr<_1c0cc0418_comptimeTypeInfo> _100913_cti = _1c0ddde0a_comptimeTypeInfo((*(_10029_t))._field_Kind.ptr());;
		if ((_100913_cti == nullptr)) {
			_1c0da8c71_pushErr((*(_96143_e)).ptr(), (*((*((*(_96158_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			_1c0da90d4_pushSuggestion((*(_96143_e)).ptr(), jule::Str::lit("expected type declaration", 25), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*((*(_9929_alias))._field_Kind))._field_Kind=(*(_100913_cti))._field_base;
	};
	_1c0ce4a58_checkTypeAlias(_9919_sc, &(_9929_alias));
	return _1c0dd289e_buildVoidData();;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0ed5dd1_builtinCallerStdMemSizeOf(jule::Ptr<_1c0da8721_Eval>* _102135_e, jule::Ptr<_1c0c67998_FnCallExpr>* _102150_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	jule::Ptr<_1c0da69e9_Data> _10229_result = jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec9ad9_primUint, });;
	if (((*((*(_102150_fc))))._field_Args.len() < 1LL)) {
		_1c0da8c71_pushErr((*(_102135_e)).ptr(), (*((*(_102150_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return _10229_result;;
	};
	if (((*((*(_102150_fc))))._field_Args.len() > 1LL)) {
		_1c0da8c71_pushErr((*(_102135_e)).ptr(), (*((*((*(_102150_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1c0da69e9_Data> _10349_d = _1c0dc5b6c_evalExprKind((*(_102135_e)), (*((*((*(_102150_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10349_d == nullptr)) {
		return _10229_result;;
	};
	if ((!(_1c0e056b3_validTypeForXof(&((*(_10349_d))._field_Kind))))) {
		_1c0da8c71_pushErr((*(_102135_e)).ptr(), (*((*((*(_102150_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*(_10349_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4)}));
	};
	(*(_10229_result))._field_Model=jule::Any(jule::new_ptr<_1c0c918d4_SizeofExprModel>(_1c0c918d4_SizeofExprModel{._field_Expr=(*(_10349_d))._field_Model}), &__jule_any_type117);
	return _10229_result;;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0ed6310_builtinCallerStdMemAlignOf(jule::Ptr<_1c0da8721_Eval>* _104636_e, jule::Ptr<_1c0c67998_FnCallExpr>* _104651_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	jule::Ptr<_1c0da69e9_Data> _10479_result = jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec9ad9_primUint, });;
	if (((*((*(_104651_fc))))._field_Args.len() < 1LL)) {
		_1c0da8c71_pushErr((*(_104636_e)).ptr(), (*((*(_104651_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return _10479_result;;
	};
	if (((*((*(_104651_fc))))._field_Args.len() > 1LL)) {
		_1c0da8c71_pushErr((*(_104636_e)).ptr(), (*((*((*(_104651_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4)}));
	};
	jule::Ptr<_1c0da69e9_Data> _10599_d = _1c0dc5b6c_evalExprKind((*(_104636_e)), (*((*((*(_104651_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10599_d == nullptr)) {
		return _10479_result;;
	};
	if ((!(_1c0e056b3_validTypeForXof(&((*(_10599_d))._field_Kind))))) {
		_1c0da8c71_pushErr((*(_104636_e)).ptr(), (*((*((*(_104651_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c0dd82ab_Str((*(_10599_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4)}));
	};
	(*(_10479_result))._field_Model=jule::Any(jule::new_ptr<_1c0c91ac1_AlignofExprModel>(_1c0c91ac1_AlignofExprModel{._field_Expr=(*(_10599_d))._field_Model}), &__jule_any_type118);
	return _10479_result;;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0ed673e_builtinCallerStdMemFree(jule::Ptr<_1c0da8721_Eval>* _107133_e, jule::Ptr<_1c0c67998_FnCallExpr>* _107148_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	if (((*((*(_107148_fc))))._field_Args.len() < 1LL)) {
		_1c0da8c71_pushErr((*(_107133_e)).ptr(), (*((*(_107148_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("h", 1), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_107148_fc))))._field_Args.len() > 1LL)) {
		_1c0da8c71_pushErr((*(_107133_e)).ptr(), (*((*((*(_107148_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Free", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1c0da69e9_Data> _10809_d = _1c0dc6981_evalExpr((*(_107133_e)), (*((*(_107148_fc))))._field_Args[0LL]);;
	if ((_10809_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1c0dda027_PerformsRC((*(_10809_d))._field_Kind.ptr())))) {
		_1c0da8c71_pushErr((*(_107133_e)).ptr(), (*((*((*(_107148_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c0da69e9_Data> _10899_result = _1c0dd289e_buildVoidData();;
	(*(_10899_result))._field_Model=jule::Any(jule::new_ptr<_1c0c9283b_FreeExprModel>(_1c0c9283b_FreeExprModel{._field_Expr=(*(_10809_d))._field_Model}), &__jule_any_type32);
	return _10899_result;;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0ed6b6d_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1c0da8721_Eval>* _109445_e, jule::Ptr<_1c0c67998_FnCallExpr>* _109460_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	if (((*((*(_109460_fc))))._field_Args.len() < 1LL)) {
		_1c0da8c71_pushErr((*(_109445_e)).ptr(), (*((*(_109460_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_109460_fc))))._field_Args.len() > 1LL)) {
		_1c0da8c71_pushErr((*(_109445_e)).ptr(), (*((*((*(_109460_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ToStr", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1c0da69e9_Data> _11039_d = _1c0dc6981_evalExpr((*(_109445_e)), (*((*(_109460_fc))))._field_Args[0LL]);;
	if ((_11039_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1c0e0466d_isBuiltinStrConvertable(&((*(_11039_d))._field_Kind))))) {
		_1c0da8c71_pushErr((*(_109445_e)).ptr(), (*((*((*(_109460_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1c0da69e9_Data>(_1c0da69e9_Data{._field_Kind=_1c0ec92c0_primStr, ._field_Model=jule::Any(jule::new_ptr<_1c0c92165_IntegratedToStrExprModel>(_1c0c92165_IntegratedToStrExprModel{._field_Expr=(*(_11039_d))._field_Model}), &__jule_any_type119), });;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0ed709c_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1c0da8721_Eval>* _112144_e, jule::Ptr<_1c0c67998_FnCallExpr>* _112159_fc, jule::Ptr<_1c0da69e9_Data>* _112181_d) {
	if ((!(_1c0da9766_isUnsafe((*(_112144_e)).ptr())))) {
		_1c0da8c71_pushErr((*(_112144_e)).ptr(), (*((*(_112159_fc))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	if (((*((*(_112159_fc))))._field_Args.len() < 1LL)) {
		_1c0da8c71_pushErr((*(_112144_e)).ptr(), (*((*(_112159_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("code", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c0da69e9_Data> _11319_argd = _1c0dc6981_evalExpr((*(_112144_e)), (*((*(_112159_fc))))._field_Args[0LL]);;
	if ((_11319_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1c0dda544_Prim((*(_11319_argd))._field_Kind.ptr()) == nullptr) || (!(_1c0de3e54_IsStr(_1c0dda544_Prim((*(_11319_argd))._field_Kind).ptr()))))) {
		_1c0da8c71_pushErr((*(_112144_e)).ptr(), (*((*((*(_112159_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1c0dd82ab_Str((*(_11319_argd))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((!(_1c0da7401_IsConst(_11319_argd.ptr()))) || (!(_2021ea900_IsStr((*(_11319_argd))._field_Constant.ptr()))))) {
		_1c0da8c71_pushErr((*(_112144_e)).ptr(), (*((*((*(_112159_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c0da69e9_Data> _11469_r = _1c0dd289e_buildVoidData();;
	jule::Ptr<_1c0c98699_FnIns> _11489_f = _1c0ddb831_Fn((*((*(_112181_d))))._field_Kind);;
	if (((*(_11489_f))._field_Generics.len() > 0LL)) {
		(*(_11469_r))._field_Kind=(*((*_11489_f.alloc)._field_Generics[0LL]))._field_Kind;
	};
	jule::Ptr<_1c0c9253e_BackendEmitExprModel> _11539_model = jule::new_ptr<_1c0c9253e_BackendEmitExprModel>(_1c0c9253e_BackendEmitExprModel{._field_Code=_2021e8304_ReadStr((*(_11319_argd))._field_Constant), });;
	if (((*((*(_112159_fc))))._field_Args.len() > 1LL)) {
		(*(_11539_model))._field_Exprs=jule::Slice<jule::Any>::alloc(0LL, ((*((*(_112159_fc))))._field_Args.len() - 1LL), jule::Any(nullptr));
		{
			auto expr = (*((*(_112159_fc))))._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1c5c9b367:;
			if (it != expr_end) {
				jule::Ptr<_1c0c63c6e_Expr> _115921_arg = *it;
				{
					_11319_argd=_1c0dc5ead_eval1((*(_112144_e)), _115921_arg);
					if ((_11319_argd == nullptr)) {
						return nullptr;;
					};
					(*_11539_model.alloc)._field_Exprs=jule::append((*_11539_model.alloc)._field_Exprs,jule::Slice<jule::Any>::make({(*(_11319_argd))._field_Model}));
				}
				_iter_next_1c5c9b367:;
				++it;
				goto _iter_begin_1c5c9b367;
			}
			_iter_end_1c5c9b367:;
		};
	};
	(*_11469_r.alloc)._field_Model=jule::Any(_11539_model, &__jule_any_type24);
	return _11469_r;;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0ed74cb_builtinCallerStdDebugOut(jule::Ptr<_1c0da8721_Eval>* _117234_e, jule::Ptr<_1c0c67998_FnCallExpr>* _117249_fc, jule::Ptr<_1c0da69e9_Data>* _117271_d) {
	(*(_117271_d))=_1c0ecdd63_builtinCallerOut(_117234_e, _117249_fc, _117271_d);
	if (((*(_117271_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_117271_d))))._field_Model.cast_ptr<_1c0c8d4e6_BuiltinOutCallExprModel>(&__jule_any_type26)))._field_Debug=true;
	return (*(_117271_d));;
}



inline jule::Ptr<_1c0da69e9_Data> _1c0ed790a_builtinCallerStdDebugOutln(jule::Ptr<_1c0da8721_Eval>* _118136_e, jule::Ptr<_1c0c67998_FnCallExpr>* _118151_fc, jule::Ptr<_1c0da69e9_Data>* _118173_d) {
	(*(_118173_d))=_1c0ece292_builtinCallerOutln(_118136_e, _118151_fc, _118173_d);
	if (((*(_118173_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_118173_d))))._field_Model.cast_ptr<_1c0c8d8c0_BuiltinOutlnCallExprModel>(&__jule_any_type27)))._field_Debug=true;
	return (*(_118173_d));;
}



inline jule::Ptr<_1c1905ec6_FileInfo> _1c194e7d3_ParseFile(jule::Ptr<_1c0c4ec16_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c1905ec6_FileInfo> _279_finf = jule::new_ptr<_1c1905ec6_FileInfo>();;
	({
		__jule_tuple_x_1c0c5ca26_Ast__jule_tuple_s_21b8c54de_Log __jule_assign_result = _1c194ed77_parseFileset(_2318_f);
		(*_279_finf.alloc)._field_Ast = __jule_assign_result.__jule_result_arg0;
		(*_279_finf.alloc)._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if (((*_279_finf.alloc)._field_Errors.len() > 0LL)) {
		(*_279_finf.alloc)._field_Ast=nullptr;
	};
	return _279_finf;;
}



inline __jule_tuple_x_1c0c5ca26_Ast__jule_tuple_s_21b8c54de_Log _1c194ed77_parseFileset(jule::Ptr<_1c0c4ec16_File> _5521_f) {
	__jule_tuple_x_1c0c5ca26_Ast__jule_tuple_s_21b8c54de_Log __jule_func_result;
	jule::Ptr<_1c19706e4_parser> _569_p = jule::new_ptr<_1c19706e4_parser>();;
	_1c198154b_parse(_569_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = (*_569_p.alloc)._field_ast;
	__jule_func_result.__jule_result_arg1 = (*_569_p.alloc)._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1c0c6e95b_ScopeTree> _1c1950817_newScope(void) {
	return jule::new_ptr<_1c0c6e95b_ScopeTree>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1c1950b9c_isSt(jule::Ptr<_1c0c49480_Token> _499_current, jule::Ptr<_1c0c49480_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=(((*(_499_current))._field_Id == static_cast<jule::U64>(3LLU)) || ((*(_4926_prev))._field_Row < (*_499_current.alloc)._field_Row));
	__jule_func_result.__jule_result_arg1=((*_499_current.alloc)._field_Id == static_cast<jule::U64>(3LLU));
	return __jule_func_result;;
}



inline jule::Bool _1c1951021_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1c0c49480_Token>>* _5526_tokens, jule::I64* _5545_i) {
	if ((((*(_5545_i)) > 1LL) && ((*((*(_5526_tokens))[((*(_5545_i)) - 2LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_1c0c49480_Token> _619_prev = (*(_5526_tokens))[((*(_5545_i)) - 1LL)];;
		return (((*(_619_prev))._field_Id == static_cast<jule::U64>(17LLU)) || (_1c0c49eca_IsBinOp((*_619_prev.alloc)._field_Id) && ((*_619_prev.alloc)._field_Row < (*((*(_5526_tokens))[(*(_5545_i))]))._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1c19513d9_nextStPos(jule::Slice<jule::Ptr<_1c0c49480_Token>>* _6815_tokens, jule::I64 _6833_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _699_braceN = 0LL;;
	jule::I64 _709_i = _6833_start;;
	for (; (_709_i < (*(_6815_tokens)).len()); (_709_i)++) {
		{
			jule::Bool _7213_ok = false;;
			jule::Bool _7313_terminated = false;;
			jule::Ptr<_1c0c49480_Token> _749_tok = (*(_6815_tokens))[_709_i];;
			{
				auto &_match_expr{ (*(_749_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1c5d2da6a:;
					{
						if (((_699_braceN == 0LL) && (_709_i > _6833_start))) {
							if ((!(_1c1951021_prevIsIncompleteExpr(_6815_tokens, &(_709_i))))) {
								({
									__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c1950b9c_isSt(_749_tok, (*(_6815_tokens))[(_709_i - 1LL)]);
									_7213_ok = __jule_assign_result.__jule_result_arg0;
									_7313_terminated = __jule_assign_result.__jule_result_arg1;
								});
								if (_7213_ok) {
									goto _julec_label_1c5d34b1a;
								};
							};
						};
						(_699_braceN)++;
						goto _iter_next_1c5d2c67e;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1c5d2dd12:;
					{
						(_699_braceN)--;
						if (((_699_braceN == 0LL) && ((_709_i + 1LL) < (*(_6815_tokens)).len()))) {
							({
								__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c1950b9c_isSt((*(_6815_tokens))[(_709_i + 1LL)], _749_tok);
								_7213_ok = __jule_assign_result.__jule_result_arg0;
								_7313_terminated = __jule_assign_result.__jule_result_arg1;
							});
							if (_7213_ok) {
								(_709_i)++;
								goto _julec_label_1c5d34b1a;
							};
						};
						goto _iter_next_1c5d2c67e;
					}
				}
				_match_end_1c5d2d097:;
			};
			if ((_699_braceN != 0LL)) {
				goto _iter_next_1c5d2c67e;
			};
			if ((_709_i > _6833_start)) {
				if (_1c1951021_prevIsIncompleteExpr(_6815_tokens, &(_709_i))) {
					goto _iter_next_1c5d2c67e;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c1950b9c_isSt(_749_tok, (*(_6815_tokens))[(_709_i - 1LL)]);
					_7213_ok = __jule_assign_result.__jule_result_arg0;
					_7313_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c1950b9c_isSt(_749_tok, _749_tok);
					_7213_ok = __jule_assign_result.__jule_result_arg0;
					_7313_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_7213_ok))) {
				goto _iter_next_1c5d2c67e;
			};
			_julec_label_1c5d34b1a:;
			if (_7313_terminated) {
				(_709_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _709_i;
			__jule_func_result.__jule_result_arg1 = _7313_terminated;
			return __jule_func_result;;
		}
	_iter_next_1c5d2c67e:;
	}
	_iter_end_1c5d2c67e:;;
	__jule_func_result.__jule_result_arg0 = _709_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1c0c49480_Token__jule_tuple_bool _1c195175d_skipSt(jule::I64* _13016_i, jule::Slice<jule::Ptr<_1c0c49480_Token>> _13028_tokens) {
	__jule_tuple_sx_1c0c49480_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _1315_start = (*(_13016_i));;
	jule::Bool _1329_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c19513d9_nextStPos(&(_13028_tokens), _1315_start);
		(*(_13016_i)) = __jule_assign_result.__jule_result_arg0;
		_1329_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1c0c49480_Token>> _1349_stTokens = _13028_tokens.slice(_1315_start, (*(_13016_i)));;
	if (_1329_terminated) {
		if ((_1349_stTokens.len() == 1LL)) {
			__jule_func_result = std::move(_1c195175d_skipSt(_13016_i, _13028_tokens));
return __jule_func_result;;
		};
		(_1349_stTokens).mut_slice(0LL, (_1349_stTokens.len() - 1LL));;
	};
	__jule_func_result.__jule_result_arg0 = _1349_stTokens;
	__jule_func_result.__jule_result_arg1 = _1329_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1c1951a8d_stmt>> _1c1951e45_splitStmts(jule::Slice<jule::Ptr<_1c0c49480_Token>>* _15120_tokens) {
	jule::Slice<jule::Ptr<_1c1951a8d_stmt>> _1529_stmts = jule::Slice<jule::Ptr<_1c1951a8d_stmt>>::alloc(0LL, 20LL);;
	jule::I64 _1539_pos = 0LL;;
	while ((_1539_pos < (*(_15120_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_1c0c49480_Token>> _15513_stmt;
			jule::Bool _15519_terminated;
			({
				__jule_tuple_sx_1c0c49480_Token__jule_tuple_bool __jule_assign_result = _1c195175d_skipSt(&(_1539_pos), (*(_15120_tokens)));
				_15513_stmt = __jule_assign_result.__jule_result_arg0;
				_15519_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_1c1951a8d_stmt>> &__jule_push_dest = _1529_stmts; __jule_push_dest.push(jule::new_ptr<_1c1951a8d_stmt>(_1c1951a8d_stmt{._field_tokens=_15513_stmt, ._field_terminated=_15519_terminated})); };
		}
	_iter_next_1c5d38855:;
	}
	_iter_end_1c5d38855:;;
	return _1529_stmts;;
}



inline jule::Bool _1c196a59b_isTypeOp(jule::U64* _88514_id) {
	return ((((*(_88514_id)) == static_cast<jule::U64>(65LLU)) || ((*(_88514_id)) == static_cast<jule::U64>(54LLU))) || ((*(_88514_id)) == static_cast<jule::U64>(62LLU)));;
}



inline jule::Bool _1c196a8a9_isTypeRange(jule::Slice<jule::Ptr<_1c0c49480_Token>>* _89221_tokens) {
	jule::Bool _8939_op = false;;
	{
		auto expr = _89221_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5e07209:;
		if (it != expr_end) {
			jule::I64 _8949_i = it - expr->begin();
			jule::Ptr<_1c0c49480_Token> _89412_token = *it;
			{
				if (((*(_89412_token))._field_Id == static_cast<jule::U64>(76LLU))) {
					if (_8939_op) {
						return true;;
					};
					jule::I64 _89917_rangeN = 0LL;;
					jule::Slice<jule::Ptr<_1c0c49480_Token>> _90017_lTokens = (*(_89221_tokens)).slice(_8949_i);;
					{
						auto expr = &(_90017_lTokens);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c5e08b45:;
						if (it != expr_end) {
							jule::Ptr<_1c0c49480_Token> _90120_lToken = *it;
							{
								{
									auto &_match_expr{ (*(_90120_lToken))._field_Id };
									
									if (_match_expr == static_cast<jule::U64>(76LLU)) {
										_case_begin_1c5e093c6:;
										{
											(_89917_rangeN)++;
											goto _iter_next_1c5e08b45;
										}
									}
									else if (_match_expr == static_cast<jule::U64>(77LLU)) {
										_case_begin_1c5e097a0:;
										{
											(_89917_rangeN)--;
											goto _iter_next_1c5e08b45;
										}
									}
									_match_end_1c5e096c3:;
								};
								if ((_89917_rangeN == 0LL)) {
									return _1c196a59b_isTypeOp(&((*(_90120_lToken))._field_Id));;
								};
							}
							_iter_next_1c5e08b45:;
							++it;
							goto _iter_begin_1c5e08b45;
						}
						_iter_end_1c5e08b45:;
					};
					return true;;
				};
				if ((!(_1c196a59b_isTypeOp(&((*_89412_token.alloc)._field_Id))))) {
					return false;;
				};
				_8939_op=true;
			}
			_iter_next_1c5e07209:;
			++it;
			_8949_i++;
			goto _iter_begin_1c5e07209;
		}
		_iter_end_1c5e07209:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1c0c49480_Token>> _1c196ab73_getBlockExpr(jule::Slice<jule::Ptr<_1c0c49480_Token>>* _92522_tokens) {
	jule::I64 _9269_braceN = 0LL;;
	jule::I64 _9279_skipToNextBraceClose = 0LL;;
	{
		auto expr = _92522_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5e0ad9a:;
		if (it != expr_end) {
			jule::I64 _9289_i = it - expr->begin();
			jule::Ptr<_1c0c49480_Token> _92812_tok = *it;
			{
				{
					auto &_match_expr{ (*(_92812_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1c5e0c484:;
						{
							if (((((*(_92522_tokens)).len() - _9289_i) > 1LL) && ((*((*(_92522_tokens))[(_9289_i + 1LL)]))._field_Id == static_cast<jule::U64>(72LLU)))) {
								(_9279_skipToNextBraceClose)++;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1c5e0c50b:;
						{
							if (((_9269_braceN > 0LL) || (_9279_skipToNextBraceClose > 0LL))) {
								if ((_9279_skipToNextBraceClose > 0LL)) {
									(_9279_skipToNextBraceClose)--;
								};
								(_9269_braceN)++;
								goto _match_end_1c5e0c3da;
							};
							return (*(_92522_tokens)).slice(0LL, _9289_i);;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1c5e0c572:;
						{
							(_9269_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1c5e0c5d8:;
						{
							(_9269_braceN)--;
						}
					}
					_match_end_1c5e0c3da:;
				};
			}
			_iter_next_1c5e0ad9a:;
			++it;
			_9289_i++;
			goto _iter_begin_1c5e0ad9a;
		}
		_iter_end_1c5e0ad9a:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1c0c49480_Token__jule_tuple_sx_1c0c49480_Token _1c196b03b_splitDelim(jule::Slice<jule::Ptr<_1c0c49480_Token>>* _95720_tokens, jule::U64 _95738_delim) {
	__jule_tuple_sx_1c0c49480_Token__jule_tuple_sx_1c0c49480_Token __jule_func_result;
	jule::I64 _9589_rangeN = 0LL;;
	{
		auto expr = _95720_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5e1080b:;
		if (it != expr_end) {
			jule::I64 _9599_i = it - expr->begin();
			jule::Ptr<_1c0c49480_Token> _95912_token = *it;
			{
				{
					auto &_match_expr{ (*(_95912_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1c5e16702:;
						{
							(_9589_rangeN)++;
							goto _iter_next_1c5e1080b;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1c5e16768:;
						{
							(_9589_rangeN)--;
						}
					}
					else if (_match_expr == _95738_delim) {
						_case_begin_1c5e167ce:;
						{
							if ((_9589_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_1c0c49480_Token>> _97221_l = (*(_95720_tokens)).slice(0LL, _9599_i);;
								jule::Slice<jule::Ptr<_1c0c49480_Token>> _97321_r = (*(_95720_tokens)).slice((_9599_i + 1LL));;
								__jule_func_result.__jule_result_arg0 = _97221_l;
								__jule_func_result.__jule_result_arg1 = _97321_r;
								return __jule_func_result;;
							};
						}
					}
					_match_end_1c5e1668b:;
				};
			}
			_iter_next_1c5e1080b:;
			++it;
			_9599_i++;
			goto _iter_begin_1c5e1080b;
		}
		_iter_end_1c5e1080b:;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I64 _1c196b305_findLowestPrecOp(jule::Slice<jule::Ptr<_1c0c49480_Token>>* _98322_tokens) {
	jule::U8 _9889_prec = 255LLU;;
	jule::I64 _9899_precPos = -1LL;;
	jule::I64 _9919_braceN = 0LL;;
	jule::Bool _9929_skipToNextBraceOpen = false;;
	{
		auto expr = _98322_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5e19cdd:;
		if (it != expr_end) {
			jule::I64 _9939_i = it - expr->begin();
			jule::Ptr<_1c0c49480_Token> *_99312_token = it;
			{
				{
					auto &_match_expr{ (*((*(_99312_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1c5e1aaad:;
						{
							_9929_skipToNextBraceOpen=false;
							goto _case_begin_1c5e1ab35;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1c5e1ab35:;
						{
							(_9919_braceN)++;
							goto _iter_next_1c5e19cdd;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1c5e1ab9b:;
						{
							(_9919_braceN)--;
							goto _iter_next_1c5e19cdd;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(13LLU)) {
						_case_begin_1c5e1ac12:;
						{
							_9929_skipToNextBraceOpen=true;
							goto _iter_next_1c5e19cdd;
						}
					}
					_match_end_1c5e1aa03:;
				};
				{
					
					if (_9929_skipToNextBraceOpen) {
						_case_begin_1c5e1c43e:;
						{
							goto _iter_next_1c5e19cdd;
						}
					}
					else if ((_9939_i == 0LL)) {
						_case_begin_1c5e1c4a5:;
						{
							goto _iter_next_1c5e19cdd;
						}
					}
					else if ((_9919_braceN > 0LL)) {
						_case_begin_1c5e1c51b:;
						{
							goto _iter_next_1c5e19cdd;
						}
					}
					else if ((!(_1c0c49eca_IsBinOp((*((*(_99312_token))))._field_Id)))) {
						_case_begin_1c5e1c582:;
						{
							goto _iter_next_1c5e19cdd;
						}
					}
					_match_end_1c5e1c2b8:;
				};
				jule::Ptr<_1c0c49480_Token> _10229_left = (*(_98322_tokens))[(_9939_i - 1LL)];;
				if ((_1c0c49bbc_IsUnaryOp((*(_10229_left))._field_Id) || ((*_10229_left.alloc)._field_Id == static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1c5e19cdd;
				};
				if (((_9939_i > 1LL) && ((*_10229_left.alloc)._field_Id == static_cast<jule::U64>(77LLU)))) {
					jule::Ptr<_1c0c49480_Token> _103013_lleft = (*(_98322_tokens))[(_9939_i - 2LL)];;
					if (((*(_103013_lleft))._field_Id == static_cast<jule::U64>(76LLU))) {
						if ((((*((*(_99312_token))))._field_Id == static_cast<jule::U64>(65LLU)) || ((*(*(_99312_token)).alloc)._field_Id == static_cast<jule::U64>(62LLU)))) {
							goto _iter_next_1c5e19cdd;
						};
					};
				};
				jule::U8 _10399_p = _1c0c49804_Prec((*(_99312_token)));;
				if (((_10399_p != 0LLU) && (_10399_p <= _9889_prec))) {
					_9889_prec=_10399_p;
					_9899_precPos=_9939_i;
				};
			}
			_iter_next_1c5e19cdd:;
			++it;
			_9939_i++;
			goto _iter_begin_1c5e19cdd;
		}
		_iter_end_1c5e19cdd:;
	};
	return _9899_precPos;;
}



inline jule::Ptr<_1c0c65589_IdentExpr> _1c196b5be_buildIdentExpr(jule::Ptr<_1c0c49480_Token>* _104824_token) {
	return jule::new_ptr<_1c0c65589_IdentExpr>(_1c0c65589_IdentExpr{._field_Token=(*(_104824_token)), ._field_Ident=(*((*(_104824_token))))._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_1c0c49480_Token__jule_tuple_int _1c196b888_getRangeExprTokens(jule::Slice<jule::Ptr<_1c0c49480_Token>>* _105628_tokens) {
	__jule_tuple_sx_1c0c49480_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I64 _10579_rangeN = 0LL;;
	jule::I64 _10589_i = ((*(_105628_tokens)).len() - 1LL);;
	for (; (_10589_i >= 0LL); (_10589_i)--) {
		{
			jule::Ptr<_1c0c49480_Token> _10609_tok = (*(_105628_tokens))[_10589_i];;
			{
				auto &_match_expr{ (*(_10609_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1c5e24402:;
					{
						(_10579_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1c5e24754:;
					{
						(_10579_rangeN)--;
					}
				}
				_match_end_1c5e246dd:;
			};
			if ((_10579_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_105628_tokens)).slice(0LL, _10589_i);
				__jule_func_result.__jule_result_arg1 = _10579_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1c5e239ea:;
	}
	_iter_end_1c5e239ea:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _10579_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1c196c69c_checkAssignTokens(jule::Slice<jule::Ptr<_1c0c49480_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_1c0c4dc48_IsAssign((*((*(_1623_tokens))[0LL]))._field_Id))))) {
		return false;;
	};
	jule::I64 _209_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5eb47e4:;
		if (it != expr_end) {
			jule::Ptr<_1c0c49480_Token> *_2112_t = it;
			{
				{
					auto &_match_expr{ (*((*(_2112_t))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1c5eb4eed:;
						{
							(_209_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1c5eb5394:;
						{
							(_209_braceN)--;
						}
					}
					_match_end_1c5eb52c8:;
				};
				{
					
					if ((_209_braceN < 0LL)) {
						_case_begin_1c5eb653d:;
						{
							return false;;
						}
					}
					else if ((_209_braceN > 0LL)) {
						_case_begin_1c5eb65a4:;
						{
							goto _iter_next_1c5eb47e4;
						}
					}
					else if (_1c0c4e2cb_IsAssignOp((*((*(_2112_t))))._field_Id) || ((*(*(_2112_t)).alloc)._field_Id == static_cast<jule::U64>(38LLU))) {
						_case_begin_1c5eb661a:;
						{
							return true;;
						}
					}
					_match_end_1c5eb64d8:;
				};
			}
			_iter_next_1c5eb47e4:;
			++it;
			goto _iter_begin_1c5eb47e4;
		}
		_iter_end_1c5eb47e4:;
	};
	return false;;
}



inline _21b8c54de_Log _1c196d868_makeErr(jule::I64 _5112_row, jule::I64 _5122_col, jule::Ptr<_1c0c4ec16_File>* _5133_f, jule::Str _5143_fmt, jule::Slice<jule::Any> _5156_args) {
	return _21b8c54de_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5112_row, ._field_Column=_5122_col, ._field_Path=(*((*(_5133_f))))._field_Path, ._field_Text=_21b8c5951_Logf(_5143_fmt, _5156_args), };;
}



inline jule::Slice<jule::Ptr<_1c0c49480_Token>> _1c196dd96_range(jule::I64* _6915_i, jule::U64 _6923_open, jule::U64 _6938_close, jule::Slice<jule::Ptr<_1c0c49480_Token>>* _6959_tokens) {
	if (((*(_6915_i)) >= (*(_6959_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_1c0c49480_Token> _735_tok = (*(_6959_tokens))[(*(_6915_i))];;
	if (((*(_735_tok))._field_Id != _6923_open)) {
		return nullptr;;
	};
	((*(_6915_i)))++;
	jule::I64 _789_rangeN = 1LL;;
	jule::I64 _795_start = (*(_6915_i));;
	for (; ((_789_rangeN != 0LL) && ((*(_6915_i)) < (*(_6959_tokens)).len())); ((*(_6915_i)))++) {
		{
			jule::Ptr<_1c0c49480_Token> _819_token = (*(_6959_tokens))[(*(_6915_i))];;
			{
				auto &_match_expr{ (*(_819_token))._field_Id };
				
				if (_match_expr == _6923_open) {
					_case_begin_1c5ebb5a9:;
					{
						(_789_rangeN)++;
					}
				}
				else if (_match_expr == _6938_close) {
					_case_begin_1c5ebb8ea:;
					{
						(_789_rangeN)--;
					}
				}
				_match_end_1c5ebb895:;
			};
		}
	_iter_next_1c5eb919a:;
	}
	_iter_end_1c5eb919a:;;
	return (*(_6959_tokens)).slice(_795_start, ((*(_6915_i)) - 1LL));;
}



inline __jule_tuple_sx_1c0c49480_Token__jule_tuple_sx_1c0c49480_Token _1c196e160_rangeLast(jule::Slice<jule::Ptr<_1c0c49480_Token>>* _9919_tokens) {
	__jule_tuple_sx_1c0c49480_Token__jule_tuple_sx_1c0c49480_Token __jule_func_result;
	if (((*(_9919_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::U64 _1035_first = (*((*(_9919_tokens))[((*(_9919_tokens)).len() - 1LL)]))._field_Id;;
	if ((((_1035_first != static_cast<jule::U64>(73LLU)) && (_1035_first != static_cast<jule::U64>(76LLU))) && (_1035_first != static_cast<jule::U64>(75LLU)))) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _1099_braceN = 0LL;;
	jule::I64 _1109_i = ((*(_9919_tokens)).len() - 1LL);;
	for (; (_1109_i >= 0LL); (_1109_i)--) {
		{
			jule::Ptr<_1c0c49480_Token> _1129_token = (*(_9919_tokens))[_1109_i];;
			{
				auto &_match_expr{ (*(_1129_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1c5ec0833:;
					{
						(_1099_braceN)++;
						goto _iter_next_1c5ebeb51;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1c5ec0b85:;
					{
						(_1099_braceN)--;
					}
				}
				_match_end_1c5ec0b1e:;
			};
			if ((_1099_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_9919_tokens)).slice(0LL, _1109_i);
				__jule_func_result.__jule_result_arg1 = (*(_9919_tokens)).slice(_1109_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1c5ebeb51:;
	}
	_iter_end_1c5ebeb51:;;
	__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1c0c49480_Token__jule_tuple_s_21b8c54de_Log _1c196e616_parts(jule::Slice<jule::Ptr<_1c0c49480_Token>>* _13715_tokens, jule::U64 _13733_id, jule::Bool _13746_exprMust) {
	__jule_tuple_ssx_1c0c49480_Token__jule_tuple_s_21b8c54de_Log __jule_func_result;
	if (((*(_13715_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _1419_rangeN = 0LL;;
	jule::I64 _1429_last = 0LL;;
	{
		auto expr = _13715_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5ec2bba:;
		if (it != expr_end) {
			jule::I64 _1439_i = it - expr->begin();
			jule::Ptr<_1c0c49480_Token> _14312_token = *it;
			{
				{
					auto &_match_expr{ (*(_14312_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1c5ec4a02:;
						{
							(_1419_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1c5ec4a68:;
						{
							(_1419_rangeN)--;
						}
					}
					else if (_match_expr == _13733_id) {
						_case_begin_1c5ec4ace:;
						{
							if ((_1419_rangeN > 0LL)) {
								goto _iter_next_1c5ec2bba;
							};
							if ((_13746_exprMust && ((_1439_i - _1429_last) <= 0LL))) {
								_21b8c54de_Log _15417_err = _1c196d868_makeErr((*(_14312_token))._field_Row, (*_14312_token.alloc)._field_Column, &((*_14312_token.alloc)._field_File), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());;
								{ jule::Slice<_21b8c54de_Log> &__jule_push_dest = __jule_func_result.__jule_result_arg1; __jule_push_dest.push(_15417_err); };
							};
							{ jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_13715_tokens)).slice(_1429_last, _1439_i)); };
							_1429_last=(_1439_i + 1LL);
						}
					}
					_match_end_1c5ec4947:;
				};
			}
			_iter_next_1c5ec2bba:;
			++it;
			_1439_i++;
			goto _iter_begin_1c5ec2bba;
		}
		_iter_end_1c5ec2bba:;
	};
	if ((_1429_last < (*(_13715_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1c0c49480_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_13715_tokens)).slice(_1429_last)); };
	};
	return __jule_func_result;;
}



inline jule::U64 _1c196e89c_getCloseOfBrace(jule::U64 _16720_left) {
	{
		auto &_match_expr{ _16720_left };
		
		if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1c5ec8022:;
			{
				return static_cast<jule::U64>(74LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1c5ec80bb:;
			{
				return static_cast<jule::U64>(72LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1c5ec8143:;
			{
				return static_cast<jule::U64>(76LLU);;
			}
		}
		else {
			_case_begin_1c5ec43e7:;
			{
				return _16720_left;;
			}
		}
		_match_end_1c5ec44d5:;
	};
}



inline _21b8c54de_Log _1c196eccb_compilerErr(jule::Ptr<_1c0c49480_Token>* _18017_token, jule::Str* _18033_fmt, jule::Slice<jule::Any> _18046_args) {
	return _21b8c54de_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_18017_token))))._field_Row, ._field_Column=(*((*(_18017_token))))._field_Column, ._field_Path=(*((*((*(_18017_token))))._field_File))._field_Path, ._field_Text=_21b8c5951_Logf((*(_18033_fmt)), _18046_args), ._field_Line=_1c0c50c28_GetRow((*((*(_18017_token))))._field_File, (*((*(_18017_token))))._field_Row), };;
}



inline void _1c1970172_pushSuggestion(_21b8c54de_Log* _19130_log, jule::Str _19141_fmt, jule::Slice<jule::Any> _19154_args) {
	(*(_19130_log))._field_Suggestion=_21b8c5951_Logf(_19141_fmt, _19154_args);
}



inline jule::Ptr<_1c0c5e93a_TypeDecl> _1c1982052_buildVoidType(void) {
	return jule::new_ptr<_1c0c5e93a_TypeDecl>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1c113299a_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str::lit("windows", 7)) {
			_case_begin_1c619041a:;
			{
				__jule_func_result.__jule_result_arg0=_21b8c8668_IsWindows(_21b98a84b_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("darwin", 6)) {
			_case_begin_1c6190481:;
			{
				__jule_func_result.__jule_result_arg0=_21b8c8976_IsDarwin(_21b98a84b_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("linux", 5)) {
			_case_begin_1c6190151:;
			{
				__jule_func_result.__jule_result_arg0=_21b8c8c40_IsLinux(_21b98a84b_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("unix", 4)) {
			_case_begin_1c61901b7:;
			{
				__jule_func_result.__jule_result_arg0=_21b8c989a_IsUnix(_21b98a84b_Os);
			}
		}
		else {
			_case_begin_1c618eb56:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1c618ec88:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1c114c3bb_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str::lit("i386", 4)) {
			_case_begin_1c619265e:;
			{
				__jule_func_result.__jule_result_arg0=_21b8c9081_IsI386(_21b98ab04_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("amd64", 5)) {
			_case_begin_1c619232e:;
			{
				__jule_func_result.__jule_result_arg0=_21b8c9317_IsAmd64(_21b98ab04_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("arm64", 5)) {
			_case_begin_1c6192395:;
			{
				__jule_func_result.__jule_result_arg0=_21b8c95d1_IsArm64(_21b98ab04_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("x64", 3)) {
			_case_begin_1c619240b:;
			{
				__jule_func_result.__jule_result_arg0=_21b8c9eb6_Is64Bit(_21b98ab04_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("x32", 3)) {
			_case_begin_1c6192472:;
			{
				__jule_func_result.__jule_result_arg0=_21b8c9c74_Is32Bit(_21b98ab04_Arch);
			}
		}
		else {
			_case_begin_1c6191d45:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1c6191e77:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c114c641_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_21b875add_Base(_5029_p);
	jule::I64 _525_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_525_n - _21b87555a_Ext(_5029_p).len()));;
	jule::Str _589_a1 = jule::Str();;
	jule::Str _619_a2 = jule::Str();;
	jule::I64 _649_i = _21b86d333_FindLastByte(_5029_p, '_');;
	if ((_649_i == -1LL)) {
		jule::Bool _6713_ok;
		jule::Bool _6721_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c113299a_checkOs(_5029_p);
			_6713_ok = __jule_assign_result.__jule_result_arg0;
			_6721_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6721_exist) {
			return _6713_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c114c3bb_checkArch(_5029_p);
			_6713_ok = __jule_assign_result.__jule_result_arg0;
			_6721_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6721_exist)) || _6713_ok);;
	};
	if (((_649_i + 1LL) >= _525_n)) {
		return true;;
	};
	_589_a1=_5029_p.slice((_649_i + 1LL));
	(_5029_p).mut_slice(0LL, _649_i);;
	_649_i=_21b86d333_FindLastByte(_5029_p, '_');
	if ((_649_i != -1LL)) {
		_619_a2=_5029_p.slice((_649_i + 1LL));
	};
	if ((_619_a2).empty()) {
		jule::Bool _8813_ok;
		jule::Bool _8821_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c113299a_checkOs(_589_a1);
			_8813_ok = __jule_assign_result.__jule_result_arg0;
			_8821_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8821_exist) {
			return _8813_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c114c3bb_checkArch(_589_a1);
			_8813_ok = __jule_assign_result.__jule_result_arg0;
			_8821_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8821_exist)) || _8813_ok);;
	};
	jule::Bool _969_ok;
	jule::Bool _9617_exist;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c114c3bb_checkArch(_589_a1);
		_969_ok = __jule_assign_result.__jule_result_arg0;
		_9617_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9617_exist) {
		if ((!(_969_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c113299a_checkOs(_619_a2);
			_969_ok = __jule_assign_result.__jule_result_arg0;
			_9617_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9617_exist)) || _969_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c113299a_checkOs(_589_a1);
		_969_ok = __jule_assign_result.__jule_result_arg0;
		_9617_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9617_exist)) || _969_ok);;
}



inline void _1c114d8c8_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(_21b98a84b_Os); };
	if (_21b8c989a_IsUnix(_21b98a84b_Os)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(jule::Str::lit("unix", 4)); };
	};
}



inline void _1c114db4d_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(_21b98ab04_Arch); };
	if (_21b8c9eb6_Is64Bit(_21b98ab04_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x64", 3)); };
	};
	if (_21b8c9c74_Is32Bit(_21b98ab04_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x32", 3)); };
	};
}



inline void _1c114de39_initVars(jule::Slice<jule::Str>* _5518_vars, _1c114d5a9_CompileInfo* _5532_info) {
	_1c114d8c8_setOsVars(_5518_vars);
	_1c114db4d_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("production", 10)); };
	};
	if ((*(_5532_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1c619d26e:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("clang", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1c619cba8:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("gcc", 3)); };
			}
		}
		_match_end_1c619cb31:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1c619cc41:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp14", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1c619d934:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp17", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1c619d99a:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp20", 5)); };
			}
		}
		_match_end_1c619e3b3:;
	};
}



inline jule::Slice<jule::U8> _1c1986155_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__234b0b50e_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str::lit("error: file cannot read", 23));
			;
			_21b9897a1_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _21b8c54de_Log _1c1986463_flatCompilerErr(jule::Str _4120_text) {
	return _21b8c54de_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Text=_4120_text, };;
}



inline void _1c198aba4_pushPasses(jule::Ptr<_1c0d0c6a8_Package>* _11120_p, jule::Slice<jule::Str>* _11144_passes) {
	{
		auto expr = &((*((*(_11120_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c61d44c5:;
		if (it != expr_end) {
			jule::Ptr<_1c0da1681_SymbolTable> _11217_f = *it;
			{
				_julec_label_1c61d421c:;
				{
					auto expr = &((*(_11217_f))._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c61d5053:;
					if (it != expr_end) {
						_1c0c9cd85_Pass _11416_pass = *it;
						{
							if ((_11416_pass._field_Text).empty()) {
								goto _iter_next_1c61d5053;
							};
							{
								auto expr = _11144_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c61d5b25:;
								if (it != expr_end) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_1c61d5053;
										};
									}
									_iter_next_1c61d5b25:;
									++it;
									goto _iter_begin_1c61d5b25;
								}
								_iter_end_1c61d5b25:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_11144_passes)); __jule_push_dest.push(_11416_pass._field_Text); };
						}
						_iter_next_1c61d5053:;
						++it;
						goto _iter_begin_1c61d5053;
					}
					_iter_end_1c61d5053:;
				};
			}
			_iter_next_1c61d44c5:;
			++it;
			goto _iter_begin_1c61d44c5;
		}
		_iter_end_1c61d44c5:;
	};
}



inline jule::Slice<jule::Str> _1c198b06c_getAllUniquePasses(jule::Ptr<_1c0d0c6a8_Package>* _12828_pkg, jule::Slice<jule::Ptr<_1c0d09782_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_1c198aba4_pushPasses(_12828_pkg, &(_12913_passes));
	{
		auto expr = &(_12853_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c61d720e:;
		if (it != expr_end) {
			jule::Ptr<_1c0d09782_ImportInfo> _13217_u = *it;
			{
				if ((!((*(_13217_u))._field_Binded))) {
					_1c198aba4_pushPasses(&((*_13217_u.alloc)._field_Package), &(_12913_passes));
				};
			}
			_iter_next_1c61d720e:;
			++it;
			goto _iter_begin_1c61d720e;
		}
		_iter_end_1c61d720e:;
	};
	return _12913_passes;;
}



inline _1c114d5a9_CompileInfo _1c198b27b_buildCompileInfo(void) {
	_1c114d5a9_CompileInfo _1429_info = _1c114d5a9_CompileInfo{._field_Prod=_2336c522d_Production, ._field_Test=_2336c486a_Test, };;
	{
		auto &_match_expr{ _2336c29bc_Compiler };
		
		if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1c61d85c8:;
			{
				_1429_info._field_Compiler=jule::Str::lit("clang", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1c61d873d:;
			{
				_1429_info._field_Compiler=jule::Str::lit("gcc", 3);
			}
		}
		_match_end_1c61d86c7:;
	};
	{
		auto &_match_expr{ _2336c40c8_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1c61d87c6:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1c61d9387:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1c61d8b17:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp20", 5);
			}
		}
		_match_end_1c61d9530:;
	};
	return _1429_info;;
}



inline void _1c1344706_EliminateDefines(jule::Ptr<_1c1989301_IR>* _30526_ir) {
	jule::Ptr<_1c13417e1_ObjectDeadCode> _3069_ocd = static__1c1341c86_new(_30526_ir);;
	_1c13443c6_elimanate(_3069_ocd);
}



inline jule::Ptr<_1c0c5dd57_Directive> _1c1344abe_findDirective(jule::Slice<jule::Ptr<_1c0c5dd57_Directive>>* _31123_directives, jule::Str _31154_tag) {
	{
		auto expr = _31123_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c62256d1:;
		if (it != expr_end) {
			jule::Ptr<_1c0c5dd57_Directive> _31217_dr = *it;
			{
				if (((*((*(_31217_dr))._field_Tag))._field_Kind == _31154_tag)) {
					return _31217_dr;;
				};
			}
			_iter_next_1c62256d1:;
			++it;
			goto _iter_begin_1c62256d1;
		}
		_iter_end_1c62256d1:;
	};
	return nullptr;;
}



inline jule::Bool _1c1344e43_hasDirective(jule::Slice<jule::Ptr<_1c0c5dd57_Directive>>* _32118_directives, jule::Str _32149_tag) {
	return (_1c1344abe_findDirective(&((*(_32118_directives))), _32149_tag) != nullptr);;
}



inline jule::Bool _1c134530b_isTraitMethod(jule::Ptr<_1c0c83552_StructIns>* _32623_owner, jule::Ptr<_1c0c98699_FnIns>* _32643_f) {
	{
		auto expr = &((*((*((*(_32623_owner))))._field_Decl))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c62270a6:;
		if (it != expr_end) {
			jule::Ptr<_1c0ca8a72_Trait> _32717_t = *it;
			{
				if ((_1c0ca9721_FindMethod(_32717_t.ptr(), (*((*((*(_32643_f))))._field_Decl))._field_Ident) != nullptr)) {
					return true;;
				};
			}
			_iter_next_1c62270a6:;
			++it;
			goto _iter_begin_1c62270a6;
		}
		_iter_end_1c62270a6:;
	};
	return false;;
}



inline void _1c1349310_eliminateDeadCodeOfScope(jule::Ptr<_1c0cd763e_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_1c0cd9ed2_Label>> _2425_labels = jule::Slice<jule::Ptr<_1c0cd9ed2_Label>>::alloc(0LL, 16LLU);;
	jule::Slice<jule::Ptr<_1c0cda3ab_GotoSt>> _2435_gotos = jule::Slice<jule::Ptr<_1c0cda3ab_GotoSt>>::alloc(0LL, 16LLU);;
	jule::Ptr<_1c13460cb_scopeDeadCode> _2449_sdc = jule::new_ptr<_1c13460cb_scopeDeadCode>(_1c13460cb_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&((*(_24133_s))._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1c0cd9ed2_Label>>>)((&(_2425_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1c0cda3ab_GotoSt>>>)((&(_2435_gotos)))), });;
	{
		_1c1348ed0_optimizeStmts(_2449_sdc);
	};
}



inline void _1c1349585_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1c0c95795_Fn>>* _25433_funcs) {
	{
		auto expr = _25433_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c62820bc:;
		if (it != expr_end) {
			jule::Ptr<_1c0c95795_Fn> _25517_func = *it;
			{
				{
					auto expr = &((*(_25517_func))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c6284630:;
					if (it != expr_end) {
						jule::Ptr<_1c0c98699_FnIns> _25621_ins = *it;
						{
							_1c1349310_eliminateDeadCodeOfScope((*(_25621_ins))._field_Scope);
						}
						_iter_next_1c6284630:;
						++it;
						goto _iter_begin_1c6284630;
					}
					_iter_end_1c6284630:;
				};
			}
			_iter_next_1c62820bc:;
			++it;
			goto _iter_begin_1c62820bc;
		}
		_iter_end_1c62820bc:;
	};
}



inline void _1c13497b6_eliminateFunctionsScopePackage(jule::Ptr<_1c0d0c6a8_Package>* _26240_pkg) {
	{
		auto expr = &((*((*(_26240_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c62850c0:;
		if (it != expr_end) {
			jule::Ptr<_1c0da1681_SymbolTable> _26317_f = *it;
			{
				_1c1349585_eliminateScopeFunctions(&((*(_26317_f))._field_Funcs));
			}
			_iter_next_1c62850c0:;
			++it;
			goto _iter_begin_1c62850c0;
		}
		_iter_end_1c62850c0:;
	};
}



inline void _1c1349a6e_eliminateScopePackage(jule::Ptr<_1c0d0c6a8_Package>* _26831_pkg) {
	_1c13497b6_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _1c1349c6c_EliminateScopes(jule::Ptr<_1c1989301_IR>* _27325_ir) {
	jule::I64 _2749_i = ((*((*(_27325_ir))))._field_Used.len() - 1LL);;
	for (; (_2749_i >= 0LL); (_2749_i)--) {
		{
			jule::Ptr<_1c0d09782_ImportInfo> _27613_u = (*((*(_27325_ir))))._field_Used[_2749_i];;
			if ((!((*(_27613_u))._field_Binded))) {
				_1c1349a6e_eliminateScopePackage(&((*_27613_u.alloc)._field_Package));
			};
		}
	_iter_next_1c6286236:;
	}
	_iter_end_1c6286236:;;
	_1c1349a6e_eliminateScopePackage(&((*((*(_27325_ir))))._field_Main));
}



inline jule::Uintptr _1c0ed7a81_typeData(jule::Any* _1714_m) {
	return ((jule::Uintptr)(((*(_1714_m))).type));;
}



inline jule::Bool _1c0ed7e49_equalConst(jule::Ptr<_2021e617b_Const> _2115_l, jule::Ptr<_2021e617b_Const> _2126_r) {
	{
		
		if (_2021ea14c_IsI64(_2115_l.ptr())) {
			_case_begin_1c632b9b3:;
			{
				return (_2021ea14c_IsI64(_2126_r.ptr()) && (_2021e7a51_ReadI64(_2115_l) == _2021e7a51_ReadI64(_2126_r)));;
			}
		}
		else if (_2021ea3d3_IsU64(_2115_l.ptr())) {
			_case_begin_1c632ba29:;
			{
				return (_2021ea3d3_IsU64(_2126_r.ptr()) && (_2021e7cd7_ReadU64(_2115_l) == _2021e7cd7_ReadU64(_2126_r)));;
			}
		}
		else if (_2021eab86_IsF64(_2115_l.ptr())) {
			_case_begin_1c632baa1:;
			{
				return (_2021eab86_IsF64(_2126_r.ptr()) && (_2021e858a_ReadF64(_2115_l) == _2021e858a_ReadF64(_2126_r)));;
			}
		}
		else if (_2021ea900_IsStr(_2115_l.ptr())) {
			_case_begin_1c632bb28:;
			{
				return (_2021ea900_IsStr(_2126_r.ptr()) && (_2021e8304_ReadStr(_2115_l) == _2021e8304_ReadStr(_2126_r)));;
			}
		}
		else if (_2021ea669_IsBool(_2115_l.ptr())) {
			_case_begin_1c632bba0:;
			{
				return (_2021ea669_IsBool(_2126_r.ptr()) && (_2021e806d_ReadBool(_2115_l) == _2021e806d_ReadBool(_2126_r)));;
			}
		}
		else if (_2021eae1c_IsNil(_2115_l.ptr())) {
			_case_begin_1c632bd37:;
			{
				return _2021eae1c_IsNil(_2126_r.ptr());;
			}
		}
		else {
			_case_begin_1c632b8c5:;
			{
				return false;;
			}
		}
		_match_end_1c632b485:;
	};
}



inline jule::Bool _1c0ed82bd_equalCasting(jule::Ptr<_1c0c89080_CastingExprModel> _4017_l, jule::Ptr<_1c0c89080_CastingExprModel> _4039_r) {
	if ((!(_1c0dd85ec_Equal((*(_4017_l))._field_Kind, (*(_4039_r))._field_Kind)))) {
		return false;;
	};
	return _1c0ed9203_equalModels((*((*_4017_l.alloc)._field_Expr))._field_Model, (*(*_4039_r.alloc)._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1c0ed8686_equalUnary(jule::Ptr<_1c0c87d2b_UnaryExprModel> _4715_l, jule::Ptr<_1c0c87d2b_UnaryExprModel> _4735_r) {
	if ((((*((*(_4715_l))._field_Op))._field_Id != (*(*(_4735_r))._field_Op.alloc)._field_Id) || ((*(*_4715_l.alloc)._field_Op.alloc)._field_Kind != (*(*_4735_r.alloc)._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return _1c0ed9203_equalModels((*((*_4715_l.alloc)._field_Expr))._field_Model, (*(*_4735_r.alloc)._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1c0ed8a0a_equalIndexing(jule::Ptr<_1c0c8a2b2_IndexingExprModel> _5418_l, jule::Ptr<_1c0c8a2b2_IndexingExprModel> _5441_r) {
	return (_1c0ed9203_equalModels((*((*(_5418_l))._field_Expr))._field_Model, (*(*(_5441_r))._field_Expr.alloc)._field_Model) && _1c0ed9203_equalModels((*((*_5418_l.alloc)._field_Index))._field_Model, (*(*_5441_r.alloc)._field_Index.alloc)._field_Model));;
}



inline jule::Bool _1c0ed8d7e_equalBinary(jule::Ptr<_1c0c87952_BinaryExprModel> _5916_l, jule::Ptr<_1c0c87952_BinaryExprModel> _5937_r) {
	if ((((*((*(_5916_l))._field_Op))._field_Id != (*(*(_5937_r))._field_Op.alloc)._field_Id) || ((*(*_5916_l.alloc)._field_Op.alloc)._field_Kind != (*(*_5937_r.alloc)._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return (_1c0ed9203_equalModels((*((*_5916_l.alloc)._field_Left))._field_Model, (*(*_5937_r.alloc)._field_Left.alloc)._field_Model) && _1c0ed9203_equalModels((*((*_5916_l.alloc)._field_Right))._field_Model, (*(*_5937_r.alloc)._field_Right.alloc)._field_Model));;
}



inline jule::Bool _1c0ed9203_equalModels(jule::Any _7016_l, jule::Any _7030_r) {
	if ((_1c0ed7a81_typeData(&(_7016_l)) != _1c0ed7a81_typeData(&(_7030_r)))) {
		return false;;
	};
	{
		auto &_match_expr{ _7016_l };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c6340e5b:;
			{
				return (_7016_l.unsafe_cast_ptr<_1c0d4dde2_Var>() == _7030_r.cast_ptr<_1c0d4dde2_Var>(&__jule_any_type8));;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1c6340ec2:;
			{
				jule::Ptr<_1c0c8c5a0_StructSubIdentExprModel> _789_li = _7016_l.unsafe_cast_ptr<_1c0c8c5a0_StructSubIdentExprModel>();;
				jule::Ptr<_1c0c8c5a0_StructSubIdentExprModel> _799_ri = _7030_r.cast_ptr<_1c0c8c5a0_StructSubIdentExprModel>(&__jule_any_type98);;
				return (((*(_789_li))._field_Field == (*(_799_ri))._field_Field) && _1c0ed9203_equalModels((*((*_789_li.alloc)._field_Expr))._field_Model, (*(*_799_ri.alloc)._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1c6341038:;
			{
				return _1c0ed7e49_equalConst(_7016_l.unsafe_cast_ptr<_2021e617b_Const>(), _7030_r.cast_ptr<_2021e617b_Const>(&__jule_any_type19));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1c6340a93:;
			{
				return _1c0ed82bd_equalCasting(_7016_l.unsafe_cast_ptr<_1c0c89080_CastingExprModel>(), _7030_r.cast_ptr<_1c0c89080_CastingExprModel>(&__jule_any_type93));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1c6340b09:;
			{
				return _1c0ed8686_equalUnary(_7016_l.unsafe_cast_ptr<_1c0c87d2b_UnaryExprModel>(), _7030_r.cast_ptr<_1c0c87d2b_UnaryExprModel>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1c6340b70:;
			{
				return _1c0ed8a0a_equalIndexing(_7016_l.unsafe_cast_ptr<_1c0c8a2b2_IndexingExprModel>(), _7030_r.cast_ptr<_1c0c8a2b2_IndexingExprModel>(&__jule_any_type44));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1c6340bd6:;
			{
				return _1c0ed8d7e_equalBinary(_7016_l.unsafe_cast_ptr<_1c0c87952_BinaryExprModel>(), _7030_r.cast_ptr<_1c0c87952_BinaryExprModel>(&__jule_any_type111));;
			}
		}
		else {
			_case_begin_1c6340862:;
			{
				return false;;
			}
		}
		_match_end_1c6340664:;
	};
}



inline void _1c0eded1e_possibleNilRemove(jule::Ptr<_1c0eddd40_nils>* _7827_n, jule::Any _7837_m) {
	if (((*(_7827_n)) != nullptr)) {
		_1c0ede5e3_removeVar((*(_7827_n)).ptr(), _1c0ee07e2_getNilVar(_7837_m));
	};
}



inline jule::Bool _1c0ee01d7_isGuaranteedNonNilExpr(jule::Ptr<_1c0eddd40_nils>* _8432_n, jule::Any _8442_m) {
	{
		auto &_match_expr{ _8442_m };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1c6346d96:;
			{
				return true;;
			}
		}
		_match_end_1c6346d41:;
	};
	return (((*(_8432_n)) != nullptr) && _1c0ede934_isSafe((*(_8432_n)).ptr(), _1c0ee07e2_getNilVar(_8442_m)));;
}



inline jule::Bool _1c0ee04a1_isNilValidType(jule::Ptr<_1c0dd7de3_TypeKind> _9223_t) {
	return (_1c0dda7ca_Sptr(_9223_t.ptr()) != nullptr);;
}



inline jule::Uintptr _1c0ee07e2_getNilVar(jule::Any _9414_m) {
	if ((!(_1c100b764_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _9414_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c634845d:;
			{
				jule::Ptr<_1c0d4dde2_Var> _1009_v = _9414_m.unsafe_cast_ptr<_1c0d4dde2_Var>();;
				if ((!((*(_1009_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_9414_m.unsafe_cast_ptr<_1c0d4dde2_Var>());;
				};
				return _1c0ee07e2_getNilVar((*((*((*_1009_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1c63484d5:;
			{
				return static_cast<jule::Uintptr>((*(_9414_m.unsafe_cast_ptr<_1c0c8c5a0_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		_match_end_1c6348408:;
	};
	return 0LLU;;
}



inline jule::Bool _1c0ee672c_isStdPackage(jule::Str* _67718_f, jule::Str _67726_p) {
	return _21b86a62c_HasPrefix((*(_67718_f)), _21b8752c4_Join(jule::Slice<jule::Str>::make({_21b989ce0_PathStdlib,_67726_p})));;
}



inline jule::Bool _1c0ee6a3a_isConstantValidConditionalCase(jule::Ptr<_1c0cd7a5c_If>* _68136_i) {
	{
		auto &_match_expr{ (*((*(_68136_i))))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1c6351873:;
			{
				jule::Ptr<_2021e617b_Const> _6849_c = (*((*(_68136_i))))._field_Expr.unsafe_cast_ptr<_2021e617b_Const>();;
				return (_2021ea669_IsBool(_6849_c.ptr()) && _2021e806d_ReadBool(_6849_c));;
			}
		}
		_match_end_1c635181d:;
	};
	return false;;
}



inline jule::Bool _1c0ee6d04_isUnreachableExpr(jule::Any* _69023_expr) {
	{
		auto &_match_expr{ (*(_69023_expr)) };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1c6352841:;
			{
				jule::Ptr<_2021e617b_Const> _6939_c = (*(_69023_expr)).cast_ptr<_2021e617b_Const>(&__jule_any_type19);;
				return (_2021ea669_IsBool(_6939_c.ptr()) && (!(_2021e806d_ReadBool(_6939_c))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1c635191c:;
			{
				jule::Ptr<_1c0c87952_BinaryExprModel> _6969_m = (*(_69023_expr)).cast_ptr<_1c0c87952_BinaryExprModel>(&__jule_any_type111);;
				if (((*((*(_6969_m))._field_Op))._field_Id == static_cast<jule::U64>(54LLU))) {
					return (_1c0ee6d04_isUnreachableExpr(&((*((*_6969_m.alloc)._field_Left))._field_Model)) || _1c0ee6d04_isUnreachableExpr(&((*((*_6969_m.alloc)._field_Right))._field_Model)));;
				};
			}
		}
		_match_end_1c6352764:;
	};
	return false;;
}



inline jule::Bool _1c0ee7145_isConstantValidMatchCase(jule::Ptr<_1c0cdc37a_Case>* _70530_case) {
	{
		auto expr = &((*((*(_70530_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6356092:;
		if (it != expr_end) {
			jule::Ptr<_1c0da69e9_Data> *_70612_expr = it;
			{
				if (((_1c0da7401_IsConst((*(_70612_expr)).ptr()) && _2021ea669_IsBool((*(*(_70612_expr)).alloc)._field_Constant.ptr())) && _2021e806d_ReadBool((*(*(_70612_expr)).alloc)._field_Constant))) {
					return true;;
				};
			}
			_iter_next_1c6356092:;
			++it;
			goto _iter_begin_1c6356092;
		}
		_iter_end_1c6356092:;
	};
	return false;;
}



inline jule::Bool _1c0ee73cb_isUnreachableConditionalCase(jule::Ptr<_1c0cd7a5c_If>* _71434_i) {
	return _1c0ee6d04_isUnreachableExpr(&((*((*(_71434_i))))._field_Expr));;
}



inline jule::Bool _1c0ee7695_isUnreachableMatchCase(jule::Ptr<_1c0cdc37a_Case>* _71828_case) {
	{
		auto expr = &((*((*(_71828_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c635803e:;
		if (it != expr_end) {
			jule::Ptr<_1c0da69e9_Data> *_71912_expr = it;
			{
				if ((!(_1c0ee6d04_isUnreachableExpr(&((*((*(_71912_expr))))._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1c635803e:;
			++it;
			goto _iter_begin_1c635803e;
		}
		_iter_end_1c635803e:;
	};
	return true;;
}



inline jule::Bool _1c0ee795e_isForwarded(jule::Ptr<_1c0cd763e_Scope>* _72717_s) {
	jule::Any _7285_last = (*((*(_72717_s))))._field_Stmts[((*((*(_72717_s))))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _7285_last };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1c6359859:;
			{
				{
					auto &_match_expr{ (*(_7285_last.cast_ptr<_1c0da69e9_Data>(&__jule_any_type23)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1c6359a46:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1c635a717:;
						{
							return false;;
						}
					}
					_match_end_1c635a6b2:;
				};
			}
		}
		else {
			_case_begin_1c63599d0:;
			{
				return true;;
			}
		}
		_match_end_1c635997a:;
	};
}



inline __jule_tuple_bool__jule_tuple_u64 _1c10022d7_checkForBitShiftOpt(jule::Ptr<_1c0c87457_OperandExprModel>* _77925_l, jule::Ptr<_1c0c87457_OperandExprModel>* _77948_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_2021e5510_IsInt(_1c0dd82ab_Str((*((*(_77925_l))))._field_Kind.ptr())))) || (!(_2021e5510_IsInt(_1c0dd82ab_Str((*((*(_77948_r))))._field_Kind)))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=_2021e8aa7_AsU64((*((*(_77948_r))))._field_Model.cast_ptr<_2021e617b_Const>(&__jule_any_type19).ptr());
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _7875_j = _202197814_Log2(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1));;
	jule::U64 _7885_z = static_cast<jule::U64>(_7875_j);;
	if ((static_cast<jule::F64>(_7885_z) != _7875_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _7885_z;
	return __jule_func_result;;
}



inline jule::Bool _1c10026a0_areSameLvalueExprModel(jule::Any* _79628_l, jule::Any* _79643_r) {
	{
		auto &_match_expr{ (*(_79628_l)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c63ea642:;
			{
				return ((*(_79643_r)) == (*(_79628_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1c63e8420:;
			{
				{
					auto &_match_expr{ (*(_79643_r)) };
					
					if (_match_expr.type == &__jule_any_type98) {
						_case_begin_1c63eb0e3:;
						{
							goto _match_end_1c63eae8e;
						}
					}
					else {
						_case_begin_1c63eb2d0:;
						{
							return false;;
						}
					}
					_match_end_1c63eae8e:;
				};
				jule::Ptr<_1c0c8c5a0_StructSubIdentExprModel> _8099_lsi = (*(_79628_l)).cast_ptr<_1c0c8c5a0_StructSubIdentExprModel>(&__jule_any_type98);;
				jule::Ptr<_1c0c8c5a0_StructSubIdentExprModel> _8109_rsi = (*(_79643_r)).cast_ptr<_1c0c8c5a0_StructSubIdentExprModel>(&__jule_any_type98);;
				if (((*(_8099_lsi))._field_Field != (*(_8109_rsi))._field_Field)) {
					return false;;
				};
				return _1c10026a0_areSameLvalueExprModel(&((*((*_8099_lsi.alloc)._field_Expr))._field_Model), &((*(*_8109_rsi.alloc)._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1c63ea6ca:;
			{
				{
					auto &_match_expr{ (*(_79643_r)) };
					
					if (_match_expr.type == &__jule_any_type110) {
						_case_begin_1c63ecc2c:;
						{
							jule::Ptr<_1c0c87d2b_UnaryExprModel> _82213_ul = (*(_79628_l)).cast_ptr<_1c0c87d2b_UnaryExprModel>(&__jule_any_type110);;
							jule::Ptr<_1c0c87d2b_UnaryExprModel> _82313_ur = (*(_79643_r)).cast_ptr<_1c0c87d2b_UnaryExprModel>(&__jule_any_type110);;
							if ((((*((*(_82213_ul))._field_Op))._field_Id != (*(*(_82313_ur))._field_Op.alloc)._field_Id) || ((*(*_82213_ul.alloc)._field_Op.alloc)._field_Kind != (*(*_82313_ur.alloc)._field_Op.alloc)._field_Kind))) {
								return false;;
							};
							return _1c10026a0_areSameLvalueExprModel(&((*((*_82213_ul.alloc)._field_Expr))._field_Model), &((*(*_82313_ur.alloc)._field_Expr.alloc)._field_Model));;
						}
					}
					_match_end_1c63ec80e:;
				};
			}
		}
		_match_end_1c63ea5dc:;
	};
	return false;;
}



inline void _1c10046b3_possibleDynamicRemove(jule::Ptr<_1c1003629_dynamic>* _8031_d, jule::Any _8044_m) {
	if (((*(_8031_d)) != nullptr)) {
		_1c1003dcc_removeVar((*(_8031_d)).ptr(), _1c1005241_getDynamicVar(_8044_m));
	};
}



inline jule::Bool _1c10049c1_isDynamicValidType(jule::Ptr<_1c0dd7de3_TypeKind> _8627_t) {
	return _1c10054c7_isAny(&(_8627_t));;
}



inline jule::Ptr<_1c0dd7de3_TypeKind> _1c1004e00_isTypeGuaranteedDynamicData(jule::Ptr<_1c1003629_dynamic>* _8837_dy, jule::Ptr<_1c0dd7de3_TypeKind> _8855_t, jule::Any _8873_m) {
	jule::Bool _895_isAny = _1c10054c7_isAny(&(_8855_t));;
	if (((!(_895_isAny)) && (_1c0ddbd4d_Trait(_8855_t.ptr()) == nullptr))) {
		return _8855_t;;
	};
	if ((!(_895_isAny))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _8873_m };
		
		if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1c649cd54:;
			{
				jule::Ptr<_1c0c89080_CastingExprModel> _9813_cem = _8873_m.unsafe_cast_ptr<_1c0c89080_CastingExprModel>();;
				return _1c1004e00_isTypeGuaranteedDynamicData(_8837_dy, (*(_9813_cem))._field_ExprKind, (*((*_9813_cem.alloc)._field_Expr))._field_Model);;
			}
		}
		_match_end_1c649ccee:;
	};
	jule::Uintptr _1015_var = _1c1005241_getDynamicVar(_8873_m);;
	if ((_1015_var == 0LLU)) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_8837_dy))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c649e9d2:;
		if (it != expr_end) {
			_1c10032d8_dynamicVar _10517_v = *it;
			{
				if ((_10517_v._field_var == _1015_var)) {
					return _10517_v._field_kind;;
				};
			}
			_iter_next_1c649e9d2:;
			++it;
			goto _iter_begin_1c649e9d2;
		}
		_iter_end_1c649e9d2:;
	};
	return nullptr;;
}



inline jule::Uintptr _1c1005241_getDynamicVar(jule::Any _11318_m) {
	if ((!(_1c100d249_Dynamic))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _11318_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c64a0142:;
			{
				jule::Ptr<_1c0d4dde2_Var> _1199_v = _11318_m.unsafe_cast_ptr<_1c0d4dde2_Var>();;
				if ((!((*(_1199_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_11318_m.unsafe_cast_ptr<_1c0d4dde2_Var>());;
				};
				return _1c1005241_getDynamicVar((*((*((*_1199_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1c64a052c:;
			{
				return static_cast<jule::Uintptr>((*(_11318_m.unsafe_cast_ptr<_1c0c8c5a0_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1c64a0ac1:;
			{
				jule::Ptr<_1c0c87d2b_UnaryExprModel> _1309_uem = _11318_m.unsafe_cast_ptr<_1c0c87d2b_UnaryExprModel>();;
				if (((*((*(_1309_uem))._field_Op))._field_Id == static_cast<jule::U64>(62LLU))) {
					return _1c1005241_getDynamicVar((*((*_1309_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1c64a0098:;
	};
	return 0LLU;;
}



inline jule::Bool _1c10054c7_isAny(jule::Ptr<_1c0dd7de3_TypeKind>* _13915_t) {
	if ((_1c0ddb07d_TypeEnum((*(_13915_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1c0de09bc_Prim> _1435_prim = _1c0dda544_Prim((*(_13915_t)).ptr());;
	return ((_1435_prim != nullptr) && _1c0de41da_IsAny(_1435_prim));;
}



inline jule::Bool _1c1008ed1_isValidBoundaryInfo(jule::Any _8424_m) {
	return _1c100971d_fitsSize(_8424_m, _8424_m);;
}



inline jule::I64 _1c1009399_fitsMaxSize(jule::Slice<jule::Any> _8916_max, jule::Any _8934_expr) {
	{
		auto expr = &(_8916_max);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c64b1582:;
		if (it != expr_end) {
			jule::I64 _909_i = it - expr->begin();
			jule::Any *_9012_m = it;
			{
				if (_1c100971d_fitsSize((*(_9012_m)), _8934_expr)) {
					return _909_i;;
				};
			}
			_iter_next_1c64b1582:;
			++it;
			_909_i++;
			goto _iter_begin_1c64b1582;
		}
		_iter_end_1c64b1582:;
	};
	return -1LL;;
}



inline jule::Bool _1c100971d_fitsSize(jule::Any _9813_e1, jule::Any _9828_e2) {
	if ((_1c0ed7a81_typeData(&(_9813_e1)) != _1c0ed7a81_typeData(&(_9828_e2)))) {
		return false;;
	};
	{
		auto &_match_expr{ _9813_e1 };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1c64b309a:;
			{
				jule::Ptr<_2021e617b_Const> _1049_exprConst = _9828_e2.cast_ptr<_2021e617b_Const>(&__jule_any_type19);;
				return ((_2021e8d3d_AsF64(_1049_exprConst.ptr()) >= 0LL) && _2021eca45_GtEq(_9813_e1.unsafe_cast_ptr<_2021e617b_Const>().ptr(), (*_1049_exprConst.alloc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c64b3111:;
			{
				return (_9828_e2 == _9813_e1);;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1c64b3177:;
			{
				jule::Ptr<_1c0c8c5a0_StructSubIdentExprModel> _1099_ssi1 = _9813_e1.unsafe_cast_ptr<_1c0c8c5a0_StructSubIdentExprModel>();;
				jule::Ptr<_1c0c8c5a0_StructSubIdentExprModel> _1109_ssi2 = _9828_e2.cast_ptr<_1c0c8c5a0_StructSubIdentExprModel>(&__jule_any_type98);;
				return (_1c0ed9203_equalModels((*((*(_1099_ssi1))._field_Expr))._field_Model, (*(*(_1109_ssi2))._field_Expr.alloc)._field_Model) && ((*_1099_ssi1.alloc)._field_Field == (*_1109_ssi2.alloc)._field_Field));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1c64b31dd:;
			{
				jule::Ptr<_1c0c87d2b_UnaryExprModel> _1139_uem1 = _9813_e1.unsafe_cast_ptr<_1c0c87d2b_UnaryExprModel>();;
				jule::Ptr<_1c0c87d2b_UnaryExprModel> _1149_uem2 = _9828_e2.cast_ptr<_1c0c87d2b_UnaryExprModel>(&__jule_any_type110);;
				if ((((*((*(_1139_uem1))._field_Op))._field_Id != static_cast<jule::U64>(62LLU)) || ((*(*_1139_uem1.alloc)._field_Op.alloc)._field_Id != (*(*(_1149_uem2))._field_Op.alloc)._field_Id))) {
					return false;;
				};
				return _1c100971d_fitsSize((*((*_1139_uem1.alloc)._field_Expr))._field_Model, (*(*_1149_uem2.alloc)._field_Expr.alloc)._field_Model);;
			}
		}
		else {
			_case_begin_1c64b2594:;
			{
				return false;;
			}
		}
		_match_end_1c64b253e:;
	};
}



inline void _1c1009a4d_possibleBoundaryRemove(jule::Ptr<_1c1007e69_boundary>* _12432_b, jule::Any _12446_model) {
	{
		auto expr = &((*((*(_12432_b))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c64b34eb:;
		if (it != expr_end) {
			_1c1007b28_boundaryVar _12617_v = *it;
			{
				{
					auto expr = &(_12617_v._field_maxSize);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c64b9e1a:;
					if (it != expr_end) {
						jule::I64 _12713_i = it - expr->begin();
						jule::Any _12716_max = *it;
						{
							if (_1c0ed9203_equalModels(_12716_max, _12446_model)) {
								_12617_v._field_maxSize=jule::append(_12617_v._field_maxSize.slice(0LL, _12713_i),_12617_v._field_maxSize.slice((_12713_i + 1LL)));
								goto _iter_end_1c64b9e1a;
							};
						}
						_iter_next_1c64b9e1a:;
						++it;
						_12713_i++;
						goto _iter_begin_1c64b9e1a;
					}
					_iter_end_1c64b9e1a:;
				};
			}
			_iter_next_1c64b34eb:;
			++it;
			goto _iter_begin_1c64b34eb;
		}
		_iter_end_1c64b34eb:;
	};
}



inline jule::Bool _1c1009d17_isBoundaryRiskyType(jule::Ptr<_1c0dd7de3_TypeKind> _13628_t) {
	return (_1c0ddb314_Arr(_13628_t.ptr()) == nullptr);;
}



inline jule::Bool _1c100a0d1_isBoundaryValidType(jule::Ptr<_1c0dd7de3_TypeKind> _14128_t) {
	return ((_1c0ddb59a_Slc(_14128_t.ptr()) != nullptr) || (_1c0ddb314_Arr(_14128_t) != nullptr));;
}



inline jule::Uintptr _1c100a39a_getBoundaryVar(jule::Any _14319_m) {
	if ((!(_1c100b764_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _14319_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c64bc47d:;
			{
				jule::Ptr<_1c0d4dde2_Var> _1499_v = _14319_m.unsafe_cast_ptr<_1c0d4dde2_Var>();;
				if ((!((*(_1499_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_14319_m.unsafe_cast_ptr<_1c0d4dde2_Var>());;
				};
				return _1c100a39a_getBoundaryVar((*((*((*_1499_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1c64bc769:;
			{
				return static_cast<jule::Uintptr>((*(_14319_m.unsafe_cast_ptr<_1c0c8c5a0_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1c64bc4e4:;
			{
				jule::Ptr<_1c0c87d2b_UnaryExprModel> _1609_uem = _14319_m.unsafe_cast_ptr<_1c0c87d2b_UnaryExprModel>();;
				if (((*((*(_1609_uem))._field_Op))._field_Id == static_cast<jule::U64>(62LLU))) {
					return _1c100a39a_getBoundaryVar((*((*_1609_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1c64bc3d4:;
	};
	return 0LLU;;
}



inline void _1c100d425_PushOptLevel(jule::I64 _3217_level) {
	jule::Bool _335_l1 = (_3217_level >= static_cast<jule::I64>(1LL));;
	_1c100ab09_Copy=_335_l1;
	_1c100ae06_Deadcode=_335_l1;
	_1c100b1ae_Append=_335_l1;
	_1c100b4ab_Math=_335_l1;
	_1c100b764_Access=_335_l1;
	_1c100ba1c_Inline=_335_l1;
	_1c100bcc5_Ptr=_335_l1;
	_1c100c18d_Cond=_335_l1;
	_1c100c3d0_Str=_335_l1;
	_1c100c677_Slice=_335_l1;
	_1c100c930_Assign=_335_l1;
	_1c100cbd8_Exceptional=_335_l1;
	_1c100ce91_Iter=_335_l1;
	_1c100d249_Dynamic=_335_l1;
}



inline void _1c1354282_detectEnabled(void) {
	_1c1351e94_exprEnabled=(((_1c100bcc5_Ptr || _1c100b4ab_Math) || _1c100b764_Access) || _1c100c18d_Cond);
	_1c1352280_scopeEnabled=((((((((_1c100c18d_Cond || _1c100b1ae_Append) || _1c100ab09_Copy) || _1c100c3d0_Str) || _1c100c677_Slice) || _1c100c930_Assign) || _1c100cbd8_Exceptional) || _1c100ce91_Iter) || _1c100d249_Dynamic);
}



inline void _1c0e5aa59_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_21b9897a1_Exit(1LL);
}



inline jule::U64 _1c25435b3_unix(void) {
	return static_cast<jule::U64>(time(nullptr));;
}



inline jule::Bool _1c2472c84_isCopyOptimizable(jule::Ptr<_1c0da69e9_Data>* _103723_expr) {
	if ((!((*((*(_103723_expr))))._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_103723_expr))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1c65b6be8:;
			{
				return false;;
			}
		}
		_match_end_1c65b6b93:;
	};
	return true;;
}



inline jule::Bool _1c247314c_isIterCopyOptimizable(jule::Ptr<_1c0da69e9_Data>* _104827_expr, jule::Ptr<_1c0d4dde2_Var>* _104841_v) {
	if (((!((*((*(_104827_expr))))._field_Lvalue)) && (!(_1c0dd9774_Mutable((*((*(_104827_expr))))._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*((*(_104841_v))))._field_Mutable)) && (!((*((*(_104827_expr))))._field_Mutable)));;
}



inline jule::Bool _1c247357b_captureVarHandling(jule::Ptr<_1c254b467_ObjectCoder>* _105528_oc, jule::Ptr<_1c0c8a768_AnonFnExprModel>* _105551_m, jule::Ptr<_1c0d4dde2_Var>* _105577_v) {
	{
		auto expr = &((*((*(_105551_m))))._field_Captured);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c65b8d82:;
		if (it != expr_end) {
			jule::Ptr<_1c0d4dde2_Var> _105612_cv = *it;
			{
				if ((_105612_cv == (*(_105577_v)))) {
					_1c254bb4e_write((*(_105528_oc)), jule::Str::lit("__jule_closure_ctx->", 20));
					static__1c248c4eb_var(&((*((*(_105528_oc))))._field_Buf), (*(_105577_v)));
					return true;;
				};
			}
			_iter_next_1c65b8d82:;
			++it;
			goto _iter_begin_1c65b8d82;
		}
		_iter_end_1c65b8d82:;
	};
	return false;;
}



inline jule::Str _1c24842b2_decomposeCommonEsq(jule::U8 _156723_b) {
	{
		auto &_match_expr{ _156723_b };
		
		if (_match_expr == '\\') {
			_case_begin_1c670806a:;
			{
				return jule::Str::lit("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1c6707d06:;
			{
				return jule::Str::lit("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1c6707d6c:;
			{
				return jule::Str::lit("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1c6707de4:;
			{
				return jule::Str::lit("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1c6707e6b:;
			{
				return jule::Str::lit("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1c6707a2b:;
			{
				return jule::Str::lit("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1c6707aa3:;
			{
				return jule::Str::lit("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1c6707b2a:;
			{
				return jule::Str::lit("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1c6707ba2:;
			{
				return jule::Str::lit("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1c67080e2:;
			{
				return jule::Str::lit("\\v", 2);;
			}
		}
		else {
			_case_begin_1c67061ab:;
			{
				return jule::Str();;
			}
		}
		_match_end_1c67078e9:;
	};
}



inline jule::Str _1c24845c0_sbtoa(jule::U8 _159410_b) {
	if ((_159410_b == 0LLU)) {
		return jule::Str::lit("\\x00", 4);;
	};
	if ((_159410_b < 128LLU)) {
		jule::Str _15999_seq = _1c24842b2_decomposeCommonEsq(_159410_b);;
		if (!(_15999_seq).empty()) {
			return _15999_seq;;
		};
		if (((32LL <= _159410_b) && (_159410_b <= 126LLU))) {
			return jule::Str::from_byte(_159410_b);;
		};
	};
	jule::Str _16075_seq = _2021d7931_FmtUint(static_cast<jule::U64>(_159410_b), 8LL);;
	if ((_16075_seq.len() == 2LL)) {
		return (jule::Str::lit("\\0", 2) + _16075_seq);;
	};
	return (jule::Str::lit("\\", 1) + _16075_seq);;
}



inline void _1c24848ab_cstrBytes(_234c76a64_StrBuilder* _161419_s, jule::Str _161434_ctx) {
	{
		auto expr = &(_161434_ctx);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c670cd50:;
		if (it != expr_end) {
			jule::U8 *_161512_b = it;
			{
				_234c77537_WriteStr(_161419_s, _1c24845c0_sbtoa((*(_161512_b))));
			}
			_iter_next_1c670cd50:;
			++it;
			goto _iter_begin_1c670cd50;
		}
		_iter_end_1c670cd50:;
	};
}



inline void _1c2484bdb_cstrLit(_234c76a64_StrBuilder* _162017_s, jule::Str _162032_ctx) {
	_234c777e0_WriteByte(_162017_s, '\"');
	_1c24848ab_cstrBytes(_162017_s, _162032_ctx);
	_234c777e0_WriteByte(_162017_s, '\"');
}



inline void _1c2485082_ftoa(_234c76a64_StrBuilder* _162614_s, jule::F64 _162629_f, jule::I64 _162637_bitsize) {
	if ((_162637_bitsize != 32LL)) {
		if ((_162629_f == static_cast<jule::F64>(static_cast<jule::I64>(_162629_f)))) {
			_1c248536d_itoa(_162614_s, static_cast<jule::I64>(_162629_f));
			return;;
		};
		if ((_162629_f == static_cast<jule::F64>(static_cast<jule::U64>(_162629_f)))) {
			_1c2485659_utoa(_162614_s, static_cast<jule::U64>(_162629_f));
			return;;
		};
	};
	jule::Str _16375_m = _2021c12aa_FmtFloat(_162629_f, 'f', -1LL, _162637_bitsize);;
	_234c77537_WriteStr(_162614_s, _16375_m);
	if ((!(_21b86eae8_Contains(_16375_m, jule::Str::lit(".", 1))))) {
		_234c77537_WriteStr(_162614_s, jule::Str::lit(".0", 2));
	};
}



inline void _1c248536d_itoa(_234c76a64_StrBuilder* _164414_s, jule::I64 _164429_x) {
	{
		
		if ((_164429_x == jule::MAX_I64)) {
			_case_begin_1c671211d:;
			{
				_234c77537_WriteStr(_164414_s, jule::Str::lit("jule::MAX_I64", 13));
				return;;
			}
		}
		else if ((_164429_x == jule::MIN_I64)) {
			_case_begin_1c67121b7:;
			{
				_234c77537_WriteStr(_164414_s, jule::Str::lit("jule::MIN_I64", 13));
				return;;
			}
		}
		_match_end_1c671200d:;
	};
	_234c77537_WriteStr(_164414_s, _2021d7ce9_FmtInt(_164429_x, 10LL));
	if (_21b8c9eb6_Is64Bit(jule::Str::lit("amd64", 5))) {
		_234c777e0_WriteByte(_164414_s, 'L');
	};
	_234c777e0_WriteByte(_164414_s, 'L');
}



inline void _1c2485659_utoa(_234c76a64_StrBuilder* _166114_s, jule::U64 _166129_x) {
	{
		
		if ((_166129_x == jule::MAX_U64)) {
			_case_begin_1c6714263:;
			{
				_234c77537_WriteStr(_166114_s, jule::Str::lit("jule::MAX_U64", 13));
				return;;
			}
		}
		_match_end_1c6714131:;
	};
	_234c77537_WriteStr(_166114_s, _2021d7931_FmtUint(_166129_x, 10LL));
	if (_21b8c9eb6_Is64Bit(jule::Str::lit("amd64", 5))) {
		_234c777e0_WriteByte(_166114_s, 'L');
	};
	_234c77537_WriteStr(_166114_s, jule::Str::lit("LU", 2));
}



inline jule::Bool _1c2485a33_isForwarded(jule::Ptr<_1c0cd763e_Scope>* _167517_s) {
	jule::Any _16765_last = (*((*(_167517_s))))._field_Stmts[((*((*(_167517_s))))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _16765_last };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1c67164a7:;
			{
				{
					auto &_match_expr{ (*(_16765_last.cast_ptr<_1c0da69e9_Data>(&__jule_any_type23)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1c6716694:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1c6717343:;
						{
							return false;;
						}
					}
					_match_end_1c67172cc:;
				};
			}
		}
		else {
			_case_begin_1c671662d:;
			{
				return true;;
			}
		}
		_match_end_1c6716540:;
	};
}



inline jule::Bool _1c2485c75_isExprComesFromBind(jule::Ptr<_1c0da69e9_Data>* _169025_d) {
	{
		auto &_match_expr{ (*((*(_169025_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c6717585:;
			{
				return (*((*((*(_169025_d))))._field_Model.unsafe_cast_ptr<_1c0d4dde2_Var>()))._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1c6717ed1:;
			{
				return (*((*((*((*((*(_169025_d))))._field_Model.unsafe_cast_ptr<_1c0c8c5a0_StructSubIdentExprModel>()))._field_Owner))._field_Decl))._field_Binded;;
			}
		}
		else {
			_case_begin_1c6717a4c:;
			{
				return false;;
			}
		}
		_match_end_1c67179e7:;
	};
}



inline jule::Bool _1c248603e_isAny(jule::Ptr<_1c0dd7de3_TypeKind>* _170215_t) {
	if ((_1c0ddb07d_TypeEnum((*(_170215_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1c0de09bc_Prim> _17065_prim = _1c0dda544_Prim((*(_170215_t)).ptr());;
	return ((_17065_prim != nullptr) && _1c0de41da_IsAny(_17065_prim));;
}



inline void _1c25596c8_iterFiles(jule::Ptr<_1c0d0c6a8_Package>* _145319_pkg, jule::Fn<void,jule::Ptr<_1c0da1681_SymbolTable>*> _145334_f) {
	{
		auto expr = &((*((*(_145319_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6933b8b:;
		if (it != expr_end) {
			jule::Ptr<_1c0da1681_SymbolTable> _145417_file = *it;
			{
				_145334_f(&(_145417_file));
			}
			_iter_next_1c6933b8b:;
			++it;
			goto _iter_begin_1c6933b8b;
		}
		_iter_end_1c6933b8b:;
	};
}



inline jule::Slice<jule::U8> _1c25599d6_concatAllParts(jule::Slice<jule::Ptr<_1c0c49480_Token>> _146019_parts) {
	jule::I64 _14619_n = 0LL;;
	{
		auto expr = &(_146019_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6934b59:;
		if (it != expr_end) {
			jule::Ptr<_1c0c49480_Token> *_146212_part = it;
			{
				_14619_n+=(*((*(_146212_part))))._field_Kind.len();
			}
			_iter_next_1c6934b59:;
			++it;
			goto _iter_begin_1c6934b59;
		}
		_iter_end_1c6934b59:;
	};
	if ((_14619_n == 0LL)) {
		return nullptr;;
	};
	_234c76a64_StrBuilder _14689_s = static__234c76ec6_New(_14619_n);;
	{
		auto expr = &(_146019_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6935c6a:;
		if (it != expr_end) {
			jule::Ptr<_1c0c49480_Token> *_146912_p = it;
			{
				_234c77537_WriteStr(&_14689_s, (*((*(_146912_p))))._field_Kind);
			}
			_iter_next_1c6935c6a:;
			++it;
			goto _iter_begin_1c6935c6a;
		}
		_iter_end_1c6935c6a:;
	};
	return _234c787d0_Buf(&_14689_s);;
}



inline jule::Bool _1c2559d5a_containsTraitMethod(jule::Ptr<_1c0ca8a72_Trait>* _147629_t, jule::Str* _147641_ident) {
	{
		auto expr = &((*((*(_147629_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6936c7c:;
		if (it != expr_end) {
			jule::Ptr<_1c0c95795_Fn> _147712_m = *it;
			{
				if (((*(_147712_m))._field_Ident == (*(_147641_ident)))) {
					return true;;
				};
			}
			_iter_next_1c6936c7c:;
			++it;
			goto _iter_begin_1c6936c7c;
		}
		_iter_end_1c6936c7c:;
	};
	return false;;
}



inline void _1c255a18a_pushMethodsFromInherit(jule::Ptr<_1c0ca8a72_Trait>* _148832_dest, jule::Ptr<_1c0ca8a72_Trait>* _148851_src) {
	_1c255a476_pushMethodsFromInherits(_148832_dest, _148851_src);
	{
		auto expr = &((*((*(_148851_src))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6938014:;
		if (it != expr_end) {
			jule::Ptr<_1c0c95795_Fn> _149017_m = *it;
			{
				if ((!(_1c2559d5a_containsTraitMethod(_148832_dest, &((*(_149017_m))._field_Ident))))) {
					{ jule::Slice<jule::Ptr<_1c0c95795_Fn>> &__jule_push_dest = (*((*(_148832_dest))))._field_Methods; __jule_push_dest.push(_149017_m); };
				};
			}
			_iter_next_1c6938014:;
			++it;
			goto _iter_begin_1c6938014;
		}
		_iter_end_1c6938014:;
	};
}



inline void _1c255a476_pushMethodsFromInherits(jule::Ptr<_1c0ca8a72_Trait>* _149933_dest, jule::Ptr<_1c0ca8a72_Trait>* _149952_src) {
	{
		auto expr = &((*((*(_149952_src))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6939576:;
		if (it != expr_end) {
			jule::Ptr<_1c0de00b5_TypeSymbol> _150017_inh = *it;
			{
				jule::Ptr<_1c0ca8a72_Trait> _150113_t2 = _1c0ddbd4d_Trait((*(_150017_inh))._field_Kind.ptr());;
				_1c255a18a_pushMethodsFromInherit(_149933_dest, &(_150113_t2));
			}
			_iter_next_1c6939576:;
			++it;
			goto _iter_begin_1c6939576;
		}
		_iter_end_1c6939576:;
	};
}



inline jule::Bool _1c255a740_isOpMethod(jule::Ptr<_1c0c95795_Fn>* _150716_m) {
	if ((((*((*(_150716_m))))._field_Generics.len() > 0LL) || ((*((*(_150716_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	jule::Ptr<_1c0c98699_FnIns> _15115_mi = (*((*(_150716_m))))._field_Instances[0LL];;
	;
	;
	{
		if ((_15115_mi == (*(*_15115_mi.alloc)._field_Owner.alloc)._field_Operators._field_Eq)) {
			return true;;
		};
	};
	{
		if ((_15115_mi == (*(*_15115_mi.alloc)._field_Owner.alloc)._field_Operators._field_Gt)) {
			return true;;
		};
	};
	{
		if ((_15115_mi == (*(*_15115_mi.alloc)._field_Owner.alloc)._field_Operators._field_GtEq)) {
			return true;;
		};
	};
	{
		if ((_15115_mi == (*(*_15115_mi.alloc)._field_Owner.alloc)._field_Operators._field_Lt)) {
			return true;;
		};
	};
	{
		if ((_15115_mi == (*(*_15115_mi.alloc)._field_Owner.alloc)._field_Operators._field_LtEq)) {
			return true;;
		};
	};
	{
		if ((_15115_mi == (*(*_15115_mi.alloc)._field_Owner.alloc)._field_Operators._field_Shl)) {
			return true;;
		};
	};
	{
		if ((_15115_mi == (*(*_15115_mi.alloc)._field_Owner.alloc)._field_Operators._field_Shr)) {
			return true;;
		};
	};
	{
		if ((_15115_mi == (*(*_15115_mi.alloc)._field_Owner.alloc)._field_Operators._field_Add)) {
			return true;;
		};
	};
	{
		if ((_15115_mi == (*(*_15115_mi.alloc)._field_Owner.alloc)._field_Operators._field_Sub)) {
			return true;;
		};
	};
	{
		if ((_15115_mi == (*(*_15115_mi.alloc)._field_Owner.alloc)._field_Operators._field_Div)) {
			return true;;
		};
	};
	{
		if ((_15115_mi == (*(*_15115_mi.alloc)._field_Owner.alloc)._field_Operators._field_Mul)) {
			return true;;
		};
	};
	{
		if ((_15115_mi == (*(*_15115_mi.alloc)._field_Owner.alloc)._field_Operators._field_Mod)) {
			return true;;
		};
	};
	{
		if ((_15115_mi == (*(*_15115_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitAnd)) {
			return true;;
		};
	};
	{
		if ((_15115_mi == (*(*_15115_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitOr)) {
			return true;;
		};
	};
	{
		if ((_15115_mi == (*(*_15115_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitXor)) {
			return true;;
		};
	};
	{
		if ((_15115_mi == (*(*_15115_mi.alloc)._field_Owner.alloc)._field_Operators._field_Neg)) {
			return true;;
		};
	};
	{
		if ((_15115_mi == (*(*_15115_mi.alloc)._field_Owner.alloc)._field_Operators._field_Pos)) {
			return true;;
		};
	};
	{
		if ((_15115_mi == (*(*_15115_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitNot)) {
			return true;;
		};
	};
	{
		if ((_15115_mi == (*(*_15115_mi.alloc)._field_Owner.alloc)._field_Operators._field_AddAssign)) {
			return true;;
		};
	};
	{
		if ((_15115_mi == (*(*_15115_mi.alloc)._field_Owner.alloc)._field_Operators._field_SubAssign)) {
			return true;;
		};
	};
	{
		if ((_15115_mi == (*(*_15115_mi.alloc)._field_Owner.alloc)._field_Operators._field_DivAssign)) {
			return true;;
		};
	};
	{
		if ((_15115_mi == (*(*_15115_mi.alloc)._field_Owner.alloc)._field_Operators._field_MulAssign)) {
			return true;;
		};
	};
	{
		if ((_15115_mi == (*(*_15115_mi.alloc)._field_Owner.alloc)._field_Operators._field_ModAssign)) {
			return true;;
		};
	};
	{
		if ((_15115_mi == (*(*_15115_mi.alloc)._field_Owner.alloc)._field_Operators._field_ShlAssign)) {
			return true;;
		};
	};
	{
		if ((_15115_mi == (*(*_15115_mi.alloc)._field_Owner.alloc)._field_Operators._field_ShrAssign)) {
			return true;;
		};
	};
	{
		if ((_15115_mi == (*(*_15115_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitOrAssign)) {
			return true;;
		};
	};
	{
		if ((_15115_mi == (*(*_15115_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitAndAssign)) {
			return true;;
		};
	};
	{
		if ((_15115_mi == (*(*_15115_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitXorAssign)) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1c255aa09_isHeadDecl(jule::Ptr<_1c0c95795_Fn>* _152320_m) {
	if ((((*((*(_152320_m))))._field_Generics.len() > 0LL) || ((*((*(_152320_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	if (_1c255a740_isOpMethod(_152320_m)) {
		return true;;
	};
	jule::Ptr<_1c0c98699_FnIns> _15309_mi = (*((*(_152320_m))))._field_Instances[0LL];;
	;
	return static__1c0d50388_Dispose(_1c0c845b9_FindMethod((*(_15309_mi))._field_Owner.ptr(), jule::Str::lit("Dispose", 7), false));;
}



inline jule::Ptr<_1c0c5dd57_Directive> _1c2569c5a_findDirective(jule::Slice<jule::Ptr<_1c0c5dd57_Directive>>* _47223_directives, jule::Str _47254_tag) {
	{
		auto expr = _47223_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6a949bc:;
		if (it != expr_end) {
			jule::Ptr<_1c0c5dd57_Directive> _47317_dr = *it;
			{
				if (((*((*(_47317_dr))._field_Tag))._field_Kind == _47254_tag)) {
					return _47317_dr;;
				};
			}
			_iter_next_1c6a949bc:;
			++it;
			goto _iter_begin_1c6a949bc;
		}
		_iter_end_1c6a949bc:;
	};
	return nullptr;;
}



inline jule::Bool _1c256a123_hasDirective(jule::Slice<jule::Ptr<_1c0c5dd57_Directive>>* _48218_directives, jule::Str _48249_tag) {
	return (_1c2569c5a_findDirective(&((*(_48218_directives))), _48249_tag) != nullptr);;
}



inline jule::Bool _1c256a3dc_shouldInitialized(jule::Ptr<_1c0dd7de3_TypeKind>* _48927_t) {
	jule::Ptr<_1c0de09bc_Prim> _4905_prim = _1c0dda544_Prim((*(_48927_t)).ptr());;
	if ((_4905_prim != nullptr)) {
		return ((!(_1c0de41da_IsAny(_4905_prim))) && (!(_1c0de3e54_IsStr(_4905_prim))));;
	};
	{
		
		if ((_1c0dda7ca_Sptr((*(_48927_t)).ptr()) != nullptr)) {
			_case_begin_1c6a977a0:;
			{
				return false;;
			}
		}
		else if ((_1c0ddc0d4_Map((*(_48927_t)).ptr()) != nullptr)) {
			_case_begin_1c6a97816:;
			{
				return false;;
			}
		}
		else if ((_1c0ddb59a_Slc((*(_48927_t)).ptr()) != nullptr)) {
			_case_begin_1c6a9787c:;
			{
				return false;;
			}
		}
		else if ((_1c0ddbd4d_Trait((*(_48927_t)).ptr()) != nullptr)) {
			_case_begin_1c6a9699c:;
			{
				return false;;
			}
		}
		else if ((_1c0ddb831_Fn((*(_48927_t)).ptr()) != nullptr)) {
			_case_begin_1c6a96a24:;
			{
				return false;;
			}
		}
		else if ((_1c0ddb314_Arr((*(_48927_t)).ptr()) != nullptr)) {
			_case_begin_1c6a97948:;
			{
				jule::Ptr<_1c0de72dc_Arr> _50613_arr = _1c0ddb314_Arr((*(_48927_t)).ptr());;
				return _1c256a3dc_shouldInitialized(&((*(_50613_arr))._field_Elem));;
			}
		}
		else if ((_1c0ddbab7_Struct((*(_48927_t)).ptr()) != nullptr)) {
			_case_begin_1c6a979c0:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1c6a96936:;
			{
				return true;;
			}
		}
		_match_end_1c6a96c22:;
	};
}



inline void _21b98db5c_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _21b98ddd2_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_21b98db5c_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I64 _419_max = _21b98d981_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_21b98d981_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6b3e407:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_4212_k = it;
			{
				jule::I64 _439_n = (*(_4212_k))[0LL].len();;
				if ((_439_n > _419_max)) {
					_419_max=_439_n;
				};
			}
			_iter_next_1c6b3e407:;
			++it;
			goto _iter_begin_1c6b3e407;
		}
		_iter_end_1c6b3e407:;
	};
	_234c76a64_StrBuilder _499_s = static__234c76ec6_New(32LL);;
	;
	{
		auto expr = &(_21b98d981_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6b40c44:;
		if (it != expr_end) {
			jule::I64 _519_i = it - expr->begin();
			jule::Array<jule::Str,2> *_5112_part = it;
			{
				_234c77537_WriteStr(&_499_s, (*(_5112_part))[0LL]);
				_234c77537_WriteStr(&_499_s, _21b86a264_Repeat(jule::Str::lit(" ", 1), ((_419_max - (*(_5112_part))[0LL].len()) + 5LL)));
				_234c77537_WriteStr(&_499_s, (*(_5112_part))[1LL]);
				if (((_519_i + 1LL) < 5LL)) {
					_234c777e0_WriteByte(&_499_s, '\n');
				};
			}
			_iter_next_1c6b40c44:;
			++it;
			_519_i++;
			goto _iter_begin_1c6b40c44;
		}
		_iter_end_1c6b40c44:;
	};
	jule::outln(_499_s);
}



inline void _21b98e113_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_21b98db5c_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str::lit("jule0.0.16 @master", 18));
}



inline void _21b98e322_toolDistos(void) {
	jule::out(jule::Str::lit("supported operating systems:\n ", 30));
	jule::out(jule::Str::lit("windows", 7));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("linux", 5));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("darwin", 6));
	jule::outln(jule::Str());
}



inline void _21b98e487_toolDistarch(void) {
	jule::out(jule::Str::lit("supported architects:\n ", 23));
	jule::out(jule::Str::lit("amd64", 5));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("i386", 4));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("arm64", 5));
	jule::outln(jule::Str());
}



inline void _21b98e685_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(jule::Str::lit("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_21b98db5c_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1055_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1055_cmd };
		
		if (_match_expr == jule::Str::lit("distos", 6)) {
			_case_begin_1c6b46a80:;
			{
				_21b98e322_toolDistos();
			}
		}
		else if (_match_expr == jule::Str::lit("distarch", 8)) {
			_case_begin_1c6b46b4b:;
			{
				_21b98e487_toolDistarch();
			}
		}
		else {
			_case_begin_1c6b45551:;
			{
				_21b98db5c_printErrorMessage((jule::Str::lit("undefined command: ", 19) + _1055_cmd));
			}
		}
		_match_end_1c6b46673:;
	};
}



inline void _21b98e8b6_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_21b98db5c_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str::lit("julec version: jule0.0.16 @master", 33));
	jule::outln(jule::Str::lit("architecture: amd64", 19));
	jule::outln(jule::Str::lit("operating system: windows", 25));
	jule::outln((jule::Str::lit("default compiler: ", 18) + _2336c29bc_Compiler));
	jule::outln((jule::Str::lit("default C++ standard: ", 22) + _2336c40c8_CppStd));
}



inline void _21b98ec07_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(jule::Str::lit("command is not given, try julec mod init", 40));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_21b98db5c_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str::lit("init", 4)) {
			_case_begin_1c6b4a08e:;
			{
				({
					auto except = static__234b0b8a5_Write(jule::Str::lit("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_21b98db5c_printErrorMessage(jule::Str::lit("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1c6b48c4c:;
			{
				_21b98db5c_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1c6b49b4e:;
	};
}



inline jule::Bool _21b98ee49_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str::lit("help", 4)) {
			_case_begin_1c6b4b601:;
			{
				_21b98ddd2_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("version", 7)) {
			_case_begin_1c6b4b667:;
			{
				_21b98e113_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("tool", 4)) {
			_case_begin_1c6b4b6cd:;
			{
				_21b98e685_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("julenv", 6)) {
			_case_begin_1c6b4b744:;
			{
				_21b98e8b6_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("mod", 3)) {
			_case_begin_1c6b4ae08:;
			{
				_21b98ec07_mod(_15320_args);
			}
		}
		else {
			_case_begin_1c6b4a18d:;
			{
				return false;;
			}
		}
		_match_end_1c6b4a831:;
	};
	return true;;
}



inline void _21b9900e2_showInfo(void) {
	jule::outln(jule::Str::lit("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307));
}



void entry_point(void) {
	jule::Slice<jule::Str> _1899_args = _234ca5bb4_Args();;
	if ((_1899_args.len() < 2LL)) {
		_21b9900e2_showInfo();
		return;;
	};
	if (_21b98ee49_processCommand(&(_1899_args))) {
		return;;
	};
	_1c1cdcad8_compileCommand(&(_1899_args));
}



inline void _21b990a71_enableVtp(void) {
	jule::Uintptr _195_hOut = _234ae1d1e_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551605LLU));;
	if ((_195_hOut == jule::MAX_U64)) {
		return;;
	};
	jule::I64 _249_dwMode = 0LL;;
	if ((!(_234ae4393_GetConsoleMode(_195_hOut, &(_249_dwMode))))) {
		return;;
	};
	_249_dwMode|=4LL;
	_234ae499d_SetConsoleMode(_195_hOut, _249_dwMode);
}



inline void _21b990c3b_init(void) {
	_21b990a71_enableVtp();
}



inline void _1c1cd9a08_init(void) {
	_2336c29bc_Compiler=jule::Str::lit("clang", 5);
}



inline jule::Ptr<_234b0aa5d_File> _1c1cd9cc2_openOutput(jule::Str* _4316_path) {
	jule::Str _445_dir = _21b875eb7_Dir((*(_4316_path)));;
	({
		auto except = static__21b87777c_Of(_445_dir);
		if (!except.ok()) {
			({
				auto except = static__21b876ade_Create(_445_dir);
				if (!except.ok()) {
					_1c0e5aa59_Throw(jule::Str::lit("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__234b0b245_Create((*(_4316_path)));
		(except.ok()) ? (except.result) : ({
			_1c0e5aa59_Throw(jule::Str::lit("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1c1cd9e6a_clearObjects(void) {
	({
		auto except = static__234ba7d5d_Remove(_1c1cdb0c0_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str::lit("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__21b876d20_Remove(_1c1cd92aa_OutDir);
}



inline void _1c1cda278_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_21b9826bc_Cmd> _739_cmd = static__21b982ab8_New(_7214_compiler);;
	(*(_739_cmd))._field_Args=_21b86e774_Split(_7229_compilerCmd, jule::Str::lit(" ", 1), -1LL);
	({
		auto except = _21b982cb6_Spawn(_739_cmd);
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1c6b53ac0:;
					{
						static__1c0e57eeb_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1c6b537a1:;
					{
						static__1c0e57eeb_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1c6b535c5:;
					{
						static__1c0e57eeb_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1c6b536e6:;
			};
			_1c0e5aa59_Throw(jule::Str());
		}
	});
	jule::I64 _865_status = ({
		auto except = _21b98324a_Wait(_739_cmd);
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:86:15"));
		(except.result);
	});;
	if ((_865_status != 0LL)) {
		jule::Str _889_errorMessage = ((jule::Str::lit("\n>>> your backend compiler (", 28) + _2336c29bc_Compiler) + jule::Str::lit(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1c0e57eeb_Print(jule::Str::lit("\033[31m", 5), _889_errorMessage);
		_1c0e5aa59_Throw(jule::Str());
	};
	_1c1cd9e6a_clearObjects();
}



inline jule::Bool _1c1cda542_isCppSourceFile(jule::Str _9920_path) {
	jule::I64 _1005_offset = _21b86d333_FindLastByte(_9920_path, '.');;
	if ((_1005_offset == -1LL)) {
		return false;;
	};
	return _21b8b846b_IsValidCppExt(_9920_path.slice(_1005_offset));;
}



inline void _1c1cda773_pushCompCmdClang(_234c76a64_StrBuilder* _10726_cmd) {
	_234c77537_WriteStr(_10726_cmd, jule::Str::lit("-Wno-everything ", 16));
	_234c77537_WriteStr(_10726_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _2336c40c8_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1c6b56c05:;
			{
				_234c77537_WriteStr(_10726_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1c6b57794:;
			{
				_234c77537_WriteStr(_10726_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1c6b5780a:;
			{
				_234c77537_WriteStr(_10726_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1c6b5673d:;
	};
	_234c777e0_WriteByte(_10726_cmd, ' ');
	if (_2336c522d_Production) {
		_234c77537_WriteStr(_10726_cmd, jule::Str::lit("-O3 ", 4));
		_234c77537_WriteStr(_10726_cmd, jule::Str::lit("-flto ", 6));
		_234c77537_WriteStr(_10726_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_234c77537_WriteStr(_10726_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_234c77537_WriteStr(_10726_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline void _1c1cda9a4_pushCompCmdGcc(_234c76a64_StrBuilder* _13324_cmd) {
	_234c77537_WriteStr(_13324_cmd, jule::Str::lit("-w ", 3));
	_234c77537_WriteStr(_13324_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _2336c40c8_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1c6b58d4a:;
			{
				_234c77537_WriteStr(_13324_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1c6b5a775:;
			{
				_234c77537_WriteStr(_13324_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1c6b5a7db:;
			{
				_234c77537_WriteStr(_13324_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1c6b58dd3:;
	};
	_234c777e0_WriteByte(_13324_cmd, ' ');
	if (_2336c522d_Production) {
		_234c77537_WriteStr(_13324_cmd, jule::Str::lit("-O3 ", 4));
		_234c77537_WriteStr(_13324_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_234c77537_WriteStr(_13324_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_234c77537_WriteStr(_13324_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline __jule_tuple_str__jule_tuple_str _1c1cdae38_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1c1989301_IR>* _15936_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_1606_compiler = &(_2336c3db9_CompilerPath);;
	_234c76a64_StrBuilder _1619_cmd = static__234c76ec6_New(64LL);;
	{
		auto &_match_expr{ _2336c29bc_Compiler };
		
		if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1c6b5d46a:;
			{
				_1c1cda9a4_pushCompCmdGcc(&(_1619_cmd));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1c6b5d9ba:;
			{
				_1c1cda773_pushCompCmdClang(&(_1619_cmd));
			}
		}
		_match_end_1c6b5d888:;
	};
	{
		auto expr = &((*((*(_15936_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6b5dc51:;
		if (it != expr_end) {
			jule::Ptr<_1c0d09782_ImportInfo> *_17112_u = it;
			{
				if (((*((*(_17112_u))))._field_Binded && _1c1cda542_isCppSourceFile((*(*(_17112_u)).alloc)._field_Path))) {
					_234c77537_WriteStr(&_1619_cmd, (*(*(_17112_u)).alloc)._field_Path);
					_234c777e0_WriteByte(&_1619_cmd, ' ');
				};
			}
			_iter_next_1c6b5dc51:;
			++it;
			goto _iter_begin_1c6b5dc51;
		}
		_iter_end_1c6b5dc51:;
	};
	if (!(_1c1cd984e_Out).empty()) {
		_234c77537_WriteStr(&_1619_cmd, jule::Str::lit("-o ", 3));
		_234c77537_WriteStr(&_1619_cmd, _1c1cd984e_Out);
		_234c777e0_WriteByte(&_1619_cmd, ' ');
	};
	_234c77537_WriteStr(&_1619_cmd, _15918_sourcePath);
	{
		auto expr = &((*((*(_15936_ir))))._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6b6177b:;
		if (it != expr_end) {
			jule::Str *_18612_pass = it;
			{
				_234c777e0_WriteByte(&_1619_cmd, ' ');
				_234c77537_WriteStr(&_1619_cmd, (*(_18612_pass)));
			}
			_iter_next_1c6b6177b:;
			++it;
			goto _iter_begin_1c6b6177b;
		}
		_iter_end_1c6b6177b:;
	};
	if (_21b98a84b_Os.equal("windows", 7)) {
		_234c77537_WriteStr(&_1619_cmd, jule::Str::lit(" -lshell32", 10));
	};
	__jule_func_result.__jule_result_arg0 = (*(_1606_compiler));
	__jule_func_result.__jule_result_arg1 = _234c77d2e_Str(&_1619_cmd);
	return __jule_func_result;;
}



inline jule::Str _1c1cdb0c0_getCompilePath(void) {
	return _21b8752c4_Join(jule::Slice<jule::Str>::make({_1c1cd92aa_OutDir,_1c1cd9596_OutName}));;
}



inline void _1c1cdb301_applyTargetIndependentOptimizations(jule::Ptr<_1c1989301_IR>* _20545_ir) {
	jule::Ptr<_1c135247d_Optimizer> _2069_opt = static__1c1352901_New(_20545_ir);;
	_1c1353eda_Optimize(_2069_opt.ptr());
}



inline void _1c1cdb499_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _2336c29bc_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1c6b63e54:;
			{
				_1c0e5aa59_Throw(jule::Str::lit("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1c6b63d88:;
			{
				if ((_2336c3db9_CompilerPath).empty()) {
					_2336c3db9_CompilerPath=jule::Str::lit("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1c6b63a58:;
			{
				if ((_2336c3db9_CompilerPath).empty()) {
					_2336c3db9_CompilerPath=jule::Str::lit("g++", 3);
				};
			}
		}
		else {
			_case_begin_1c6b6364b:;
			{
				_1c0e5aa59_Throw((jule::Str::lit("invalid option value for --compiler: ", 37) + _2336c29bc_Compiler));
			}
		}
		_match_end_1c6b6389e:;
	};
}



inline void _1c1cdb6a8_checkTargetArch(jule::Str _22720_arch) {
	if ((((!_22720_arch.equal("amd64", 5)) && (!_22720_arch.equal("arm64", 5))) && (!_22720_arch.equal("i386", 4)))) {
		_1c0e5aa59_Throw((jule::Str::lit("--target: unsupported/undefined architecture: ", 46) + _22720_arch));
	};
}



inline void _1c1cdb8d9_checkTargetOs(jule::Str _23518_os) {
	if ((((!_23518_os.equal("windows", 7)) && (!_23518_os.equal("linux", 5))) && (!_23518_os.equal("darwin", 6)))) {
		_1c0e5aa59_Throw((jule::Str::lit("--target: unsupported/undefined operating system: ", 50) + _23518_os));
	};
}



inline void _1c1cdbb1a_checkTargetFlag(jule::Str* _24321_target) {
	if (((*(_24321_target))).empty()) {
		_1c0e5aa59_Throw(jule::Str::lit("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2485_parts = _21b86e774_Split((*(_24321_target)), jule::Str::lit("-", 1), -1LL);;
	if ((_2485_parts.len() != 2LL)) {
		_1c0e5aa59_Throw((jule::Str::lit("--target: undefined platform target format: ", 44) + (*(_24321_target))));
	};
	jule::Str _2535_os;
	jule::Str _2539_arch;
	({
		jule::Str ___jule_assign_arg = _2485_parts[0LL];
		jule::Str _1___jule_assign_arg = _2485_parts[1LL];
		_2535_os = ___jule_assign_arg;
		_2539_arch = _1___jule_assign_arg;
	});
	if ((!_2535_os.equal("native", 6))) {
		_1c1cdb8d9_checkTargetOs(_2535_os);
		_21b98a84b_Os=_2535_os;
	};
	if ((!_2539_arch.equal("native", 6))) {
		_1c1cdb6a8_checkTargetArch(_2539_arch);
		_21b98ab04_Arch=_2539_arch;
	};
	_2021dc480_UpdateTarget();
}



inline void _1c1cdbd4b_checkOptFlag(jule::Str* _26618_opt) {
	if (((*(_26618_opt))).empty()) {
		_1c0e5aa59_Throw(jule::Str::lit("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_26618_opt)) };
		
		if (_match_expr == jule::Str::lit("L0", 2)) {
			_case_begin_1c6b6a862:;
			{
				goto _match_end_1c6b6a08c;
			}
		}
		else if (_match_expr == jule::Str::lit("L1", 2)) {
			_case_begin_1c6b6a8c8:;
			{
				_1c100d425_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1c6b6a17a:;
			{
				_1c0e5aa59_Throw((jule::Str::lit("--opt: invalid optimization level: ", 35) + (*(_26618_opt))));
			}
		}
		_match_end_1c6b6a08c:;
	};
}



inline void _1c1cdc214_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _2336c40c8_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5) || _match_expr == jule::Str::lit("cpp17", 5) || _match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1c6b6b632:;
			{
				goto _match_end_1c6b6b16a;
			}
		}
		else {
			_case_begin_1c6b6a565:;
			{
				_1c0e5aa59_Throw((jule::Str::lit("--cppstd: invalid cpp standard: ", 32) + _2336c40c8_CppStd));
			}
		}
		_match_end_1c6b6b16a:;
	};
}



inline jule::Slice<jule::Str> _1c1cdc3ce_checkFlags(jule::Slice<jule::Str>* _29216_args) {
	jule::Str _2939_opt = jule::Str::lit("L0", 2);;
	jule::Str _2949_target = jule::Str::lit("native-native", 13);;
	jule::Ptr<_1c1cd423e_FlagSet> _2969_fs = static__1c1cd452a_New();;
	_1c6b6d05c_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2939_opt)))), jule::Str::lit("opt", 3), 0LL, jule::Str::lit("Optimization level", 18));
	_1c6b6d05c_AddVar(_2969_fs, ((jule::Ptr<jule::Str>)((&(_2949_target)))), jule::Str::lit("target", 6), 0LL, jule::Str::lit("Target system", 13));
	_1c6b6d05c_AddVar(_2969_fs, ((jule::Ptr<jule::Str>)((&(_1c1cd984e_Out)))), jule::Str::lit("out", 3), 'o', jule::Str::lit("Output identifier", 17));
	_1c6b74e98_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_2336c4309_Shadowing)))), jule::Str::lit("shadowing", 9), 0LL, jule::Str::lit("Allow shadowing", 15));
	_1c6b74e98_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_2336c45b2_Transpilation)))), jule::Str::lit("transpile", 9), 't', jule::Str::lit("Transpile code", 14));
	_1c6b6d05c_AddVar(_2969_fs, ((jule::Ptr<jule::Str>)((&(_2336c29bc_Compiler)))), jule::Str::lit("compiler", 8), 0LL, jule::Str::lit("Backend compiler", 16));
	_1c6b6d05c_AddVar(_2969_fs, ((jule::Ptr<jule::Str>)((&(_2336c3db9_CompilerPath)))), jule::Str::lit("compiler-path", 13), 0LL, jule::Str::lit("Path of backend compiler", 24));
	_1c6b74e98_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_2336c522d_Production)))), jule::Str::lit("production", 10), 'p', jule::Str::lit("Compile for production", 22));
	_1c6b74e98_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_2336c4b23_RC)))), jule::Str::lit("disable-rc", 10), 0LL, jule::Str::lit("Disable reference counting", 26));
	_1c6b74e98_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_2336c4edb_Safety)))), jule::Str::lit("disable-safety", 14), 0LL, jule::Str::lit("Disable safety", 14));
	_1c6b6d05c_AddVar(_2969_fs, ((jule::Ptr<jule::Str>)((&(_2336c40c8_CppStd)))), jule::Str::lit("cppstd", 6), 0LL, jule::Str::lit("C++ standard", 12));
	_1c6b74e98_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1c100ab09_Copy)))), jule::Str::lit("opt-copy", 8), 0LL, jule::Str::lit("Copy optimization", 17));
	_1c6b74e98_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1c100ae06_Deadcode)))), jule::Str::lit("opt-deadcode", 12), 0LL, jule::Str::lit("Deadcode optimization", 21));
	_1c6b74e98_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1c100b1ae_Append)))), jule::Str::lit("opt-append", 10), 0LL, jule::Str::lit("Append optimization", 19));
	_1c6b74e98_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1c100b4ab_Math)))), jule::Str::lit("opt-math", 8), 0LL, jule::Str::lit("Math optimization", 17));
	_1c6b74e98_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1c100b764_Access)))), jule::Str::lit("opt-access", 10), 0LL, jule::Str::lit("Access optimization", 19));
	_1c6b74e98_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1c100ba1c_Inline)))), jule::Str::lit("opt-inline", 10), 0LL, jule::Str::lit("Inline optimization", 19));
	_1c6b74e98_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1c100bcc5_Ptr)))), jule::Str::lit("opt-ptr", 7), 0LL, jule::Str::lit("Pointer optimizations", 21));
	_1c6b74e98_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1c100c18d_Cond)))), jule::Str::lit("opt-cond", 8), 0LL, jule::Str::lit("Conditional optimizations", 25));
	_1c6b74e98_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1c100c3d0_Str)))), jule::Str::lit("opt-str", 7), 0LL, jule::Str::lit("String optimizations", 20));
	_1c6b74e98_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1c100c677_Slice)))), jule::Str::lit("opt-slice", 9), 0LL, jule::Str::lit("Slice optimizations", 19));
	_1c6b74e98_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1c100c930_Assign)))), jule::Str::lit("opt-assign", 10), 0LL, jule::Str::lit("Assignment optimizations", 24));
	_1c6b74e98_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1c100cbd8_Exceptional)))), jule::Str::lit("opt-exceptional", 15), 0LL, jule::Str::lit("Exceptional optimizations", 25));
	_1c6b74e98_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1c100ce91_Iter)))), jule::Str::lit("opt-iter", 8), 0LL, jule::Str::lit("Iterations optimizations", 24));
	_1c6b74e98_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1c100d249_Dynamic)))), jule::Str::lit("opt-dynamic", 11), 0LL, jule::Str::lit("Dynamic programming optimizations", 33));
	jule::Slice<jule::Str> _3249_content = ({
		auto except = _1c1cd53e9_Parse(_2969_fs, (*(_29216_args)));
		(except.ok()) ? (except.result) : ({
			_1c0e5aa59_Throw(except.error.cast<jule::Str>(&__jule_any_type4));

			nullptr;
		});
	});;
	_1c1cdb499_checkCompilerFlag();
	_1c1cdc214_checkCppStdFlag();
	_1c1cdbb1a_checkTargetFlag(&(_2949_target));
	_1c1cdbd4b_checkOptFlag(&(_2939_opt));
	return _3249_content;;
}



inline void _1c1cdc5dd_setupSemaFlags(jule::I64* _33724_flags) {
	if (_2336c4309_Shadowing) {
		(*(_33724_flags))|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1c1989301_IR> _1c1cdc8a7_buildIr(jule::Slice<jule::Str>* _34313_args) {
	jule::Slice<jule::Str> _3445_content = _1c1cdc3ce_checkFlags(_34313_args);;
	jule::I64 _3469_semaFlags = static_cast<jule::I64>(0LL);;
	_1c1cdc5dd_setupSemaFlags(&(_3469_semaFlags));
	if ((_3445_content.len() == 0LL)) {
		_1c0e5aa59_Throw(_21b8c5951_Logf(jule::Str::lit("missing compile path", 20), jule::Slice<jule::Any>()));
	} else if ((_3445_content.len() > 1LL)) {
		_1c0e5aa59_Throw((jule::Str::lit("undefined content: ", 19) + _3445_content[1LL]));
	};
	jule::Str _3549_path;
	jule::Bool _35415_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21b875824_Abs(_3445_content[0LL]);
		_3549_path = __jule_assign_result.__jule_result_arg0;
		_35415_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_35415_ok))) {
		_1c0e5aa59_Throw(jule::Str::lit("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_234b0cb92_Status> _3605_inf = ({
		auto except = static__21b87777c_Of(_21b989ce0_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1c0e5aa59_Throw(_21b8c5951_Logf(jule::Str::lit("standard library directory not found", 36), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_234b0cb92_Status>(nullptr);});
	});;
	if ((!(_234b0d06b_IsDir(_3605_inf.ptr())))) {
		_1c0e5aa59_Throw(_21b8c5951_Logf(jule::Str::lit("standard library directory not found", 36), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1c1989301_IR> _3689_ir;
	jule::Slice<_21b8c54de_Log> _36813_logs;
	({
		__jule_tuple_x_1c1989301_IR__jule_tuple_s_21b8c54de_Log __jule_assign_result = static__1c1989796_Build(_3549_path, _3469_semaFlags);
		_3689_ir = __jule_assign_result.__jule_result_arg0;
		_36813_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3689_ir == nullptr) && (_36813_logs == nullptr))) {
		_1c0e5aa59_Throw(_21b8c5951_Logf(jule::Str::lit("there is no Jule source code in package: @", 42), jule::Slice<jule::Any>::make({jule::Any(_3549_path, &__jule_any_type4)})));
	};
	if ((_36813_logs != nullptr)) {
		static__1c0e5a097_PrintLogs(&(_36813_logs));
		_1c0e5aa59_Throw(jule::Str());
	};
	return _3689_ir;;
}



inline void _1c1cdcad8_compileCommand(jule::Slice<jule::Str>* _38324_args) {
	((*(_38324_args))).mut_slice(1LL);;
	if ((*(_38324_args))[0LL].equal("test", 4)) {
		_2336c486a_Test=true;
		((*(_38324_args))).mut_slice(1LL);;
	};
	jule::Ptr<_1c1989301_IR> _3899_ir = _1c1cdc8a7_buildIr(_38324_args);;
	;
	if ((!(_2336c486a_Test))) {
		jule::Ptr<_1c0c95795_Fn> _39413_main = _1c0d0dc3c_FindFn((*(_3899_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);;
		if ((_39413_main == nullptr)) {
			_1c0e5aa59_Throw(_21b8c5951_Logf(jule::Str::lit("missing entry point: entry point (main) function is not defined", 63), jule::Slice<jule::Any>()));
		};
	};
	_1c1cdb301_applyTargetIndependentOptimizations(&(_3899_ir));
	_1c198a80d_Order(_3899_ir);
	jule::Str _4055_compPath = _1c1cdb0c0_getCompilePath();;
	jule::Str _4065_compiler;
	jule::Str _40615_compilerCmd;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1c1cdae38_genCompileCmd(_4055_compPath, &(_3899_ir));
		_4065_compiler = __jule_assign_result.__jule_result_arg0;
		_40615_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1c254b467_ObjectCoder> _4089_oc = static__1c254b896_New(&(_3899_ir), _1c25493ee_SerializationInfo{._field_Compiler=_4065_compiler, ._field_CompilerCommand=_40615_compilerCmd});;
	if (_2336c486a_Test) {
		jule::Ptr<_1c2487084_TestCoder> _41313_tc = static__1c2487507_New(&(_4089_oc));;
		_1c248887c_Serialize(_41313_tc);
	} else {
		_1c25592dd_Serialize(_4089_oc);
	};
	jule::Ptr<_234b0aa5d_File> _4199_file = _1c1cd9cc2_openOutput(&(_4055_compPath));;
	({
		auto except = _234ba82e2_Write(_4199_file.ptr(), _234c787d0_Buf(&(*(_4089_oc))._field_Buf));
		if (!except.ok()) {
			_1c0e5aa59_Throw(jule::Str::lit("object code could not write", 27));
		}
	});
	({
		auto except = _234b0c0e2_Close(_4199_file);
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:423:5"));
	});
	if ((!(_2336c45b2_Transpilation))) {
		_1c1cda278_compileIr(_4065_compiler, _40615_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_21b98ac47_init();
	_2021dc606_init();
	_21b990c3b_init();
	_1c1cd9a08_init();

}

inline jule::Bool __jule_anon_1c41b9765(jule::Ptr<_1c0c976ed_ParamIns> _23927_p1, jule::Ptr<_1c0c976ed_ParamIns> _23942_p2) {
	__jule_anon_1c41b9765_ctx *__jule_closure_ctx = (__jule_anon_1c41b9765_ctx*)jule::__closure_get_ctx();
	if (((*((*(_23927_p1))._field_Decl))._field_Mutable != (*(*(_23942_p2))._field_Decl.alloc)._field_Mutable)) {
		return false;;
	};
	if (_1c0c943dc_IsSelf((*_23927_p1.alloc)._field_Decl)) {
		if ((!(_1c0c943dc_IsSelf((*_23942_p2.alloc)._field_Decl)))) {
			return false;;
		};
		if ((_1c0c94673_IsRef((*_23927_p1.alloc)._field_Decl) != _1c0c94673_IsRef((*_23942_p2.alloc)._field_Decl))) {
			return false;;
		};
		return true;;
	};
	if (((*(*_23927_p1.alloc)._field_Decl.alloc)._field_Reference != (*(*_23942_p2.alloc)._field_Decl.alloc)._field_Reference)) {
		return false;;
	};
	if (((*(*_23927_p1.alloc)._field_Decl.alloc)._field_Variadic != (*(*_23942_p2.alloc)._field_Decl.alloc)._field_Variadic)) {
		return false;;
	};
	return _1c0dd85ec_Equal((*_23927_p1.alloc)._field_Kind, (*_23942_p2.alloc)._field_Kind);;
}

inline jule::Bool __jule_anon_1c42d6b90(jule::Ptr<_1c0d09782_ImportInfo> _50045_spkg) {
	__jule_anon_1c42d6b90_ctx *__jule_closure_ctx = (__jule_anon_1c42d6b90_ctx*)jule::__closure_get_ctx();
	return ((*((*(__jule_closure_ctx->_49841_pkg))))._field_Path == (*(_50045_spkg))._field_Path);;
}

inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c433b167(jule::Ptr<_1c0da8721_Eval>* _8833_e, jule::Ptr<_1c0c67998_FnCallExpr>* _8848_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	__jule_anon_1c433b167_ctx *__jule_closure_ctx = (__jule_anon_1c433b167_ctx*)jule::__closure_get_ctx();
	return _1c0cb2361__Name(__jule_closure_ctx->_self_, _8833_e, _8848_fc);;
}

inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c433d114(jule::Ptr<_1c0da8721_Eval>* _9533_e, jule::Ptr<_1c0c67998_FnCallExpr>* _9548_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	__jule_anon_1c433d114_ctx *__jule_closure_ctx = (__jule_anon_1c433d114_ctx*)jule::__closure_get_ctx();
	return _1c0cb2b58__Public(__jule_closure_ctx->_self_, _9533_e, _9548_fc);;
}

inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c434006c(jule::Ptr<_1c0da8721_Eval>* _10233_e, jule::Ptr<_1c0c67998_FnCallExpr>* _10248_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	__jule_anon_1c434006c_ctx *__jule_closure_ctx = (__jule_anon_1c434006c_ctx*)jule::__closure_get_ctx();
	return _1c0cb275c__Type(__jule_closure_ctx->_self_, _10233_e, _10248_fc);;
}

inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c4351ce8(jule::Ptr<_1c0da8721_Eval>* _21133_e, jule::Ptr<_1c0c67998_FnCallExpr>* _21148_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	__jule_anon_1c4351ce8_ctx *__jule_closure_ctx = (__jule_anon_1c4351ce8_ctx*)jule::__closure_get_ctx();
	return _1c0cb5661__Name(__jule_closure_ctx->_self_, _21133_e, _21148_fc);;
}

inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c4353c51(jule::Ptr<_1c0da8721_Eval>* _21833_e, jule::Ptr<_1c0c67998_FnCallExpr>* _21848_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	__jule_anon_1c4353c51_ctx *__jule_closure_ctx = (__jule_anon_1c4353c51_ctx*)jule::__closure_get_ctx();
	return _1c0cb5e58__Public(__jule_closure_ctx->_self_, _21833_e, _21848_fc);;
}

inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c4355ba9(jule::Ptr<_1c0da8721_Eval>* _22533_e, jule::Ptr<_1c0c67998_FnCallExpr>* _22548_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	__jule_anon_1c4355ba9_ctx *__jule_closure_ctx = (__jule_anon_1c4355ba9_ctx*)jule::__closure_get_ctx();
	return _1c0cb5a5c__Type(__jule_closure_ctx->_self_, _22533_e, _22548_fc);;
}

inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c43629c9(jule::Ptr<_1c0da8721_Eval>* _31333_e, jule::Ptr<_1c0c67998_FnCallExpr>* _31348_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	__jule_anon_1c43629c9_ctx *__jule_closure_ctx = (__jule_anon_1c43629c9_ctx*)jule::__closure_get_ctx();
	return _1c0cb8873__Name(__jule_closure_ctx->_self_, _31333_e, _31348_fc);;
}

inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c4377549(jule::Ptr<_1c0da8721_Eval>* _43533_e, jule::Ptr<_1c0c67998_FnCallExpr>* _43548_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	__jule_anon_1c4377549_ctx *__jule_closure_ctx = (__jule_anon_1c4377549_ctx*)jule::__closure_get_ctx();
	return _1c0cbb4e1__Name(__jule_closure_ctx->_self_, _43533_e, _43548_fc);;
}

inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c43794a2(jule::Ptr<_1c0da8721_Eval>* _44233_e, jule::Ptr<_1c0c67998_FnCallExpr>* _44248_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	__jule_anon_1c43794a2_ctx *__jule_closure_ctx = (__jule_anon_1c43794a2_ctx*)jule::__closure_get_ctx();
	return _1c0cbbcd8__Variadic(__jule_closure_ctx->_self_, _44233_e, _44248_fc);;
}

inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c437b40a(jule::Ptr<_1c0da8721_Eval>* _44933_e, jule::Ptr<_1c0c67998_FnCallExpr>* _44948_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	__jule_anon_1c437b40a_ctx *__jule_closure_ctx = (__jule_anon_1c437b40a_ctx*)jule::__closure_get_ctx();
	return _1c0cbc1d4__Reference(__jule_closure_ctx->_self_, _44933_e, _44948_fc);;
}

inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c437d363(jule::Ptr<_1c0da8721_Eval>* _45633_e, jule::Ptr<_1c0c67998_FnCallExpr>* _45648_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	__jule_anon_1c437d363_ctx *__jule_closure_ctx = (__jule_anon_1c437d363_ctx*)jule::__closure_get_ctx();
	return _1c0cbb8dc__Type(__jule_closure_ctx->_self_, _45633_e, _45648_fc);;
}

inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c4410aaa(jule::Ptr<_1c0da8721_Eval>* _99833_e, jule::Ptr<_1c0c67998_FnCallExpr>* _99848_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	__jule_anon_1c4410aaa_ctx *__jule_closure_ctx = (__jule_anon_1c4410aaa_ctx*)jule::__closure_get_ctx();
	return _1c0cc122c__Str(__jule_closure_ctx->_self_, _99833_e, _99848_fc);;
}

inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c4412a13(jule::Ptr<_1c0da8721_Eval>* _100533_e, jule::Ptr<_1c0c67998_FnCallExpr>* _100548_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	__jule_anon_1c4412a13_ctx *__jule_closure_ctx = (__jule_anon_1c4412a13_ctx*)jule::__closure_get_ctx();
	return _1c0cc1a24__Bits(__jule_closure_ctx->_self_, _100533_e, _100548_fc);;
}

inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c441496b(jule::Ptr<_1c0da8721_Eval>* _101233_e, jule::Ptr<_1c0c67998_FnCallExpr>* _101248_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	__jule_anon_1c441496b_ctx *__jule_closure_ctx = (__jule_anon_1c441496b_ctx*)jule::__closure_get_ctx();
	return _1c0cc1e20__Elem(__jule_closure_ctx->_self_, _101233_e, _101248_fc);;
}

inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c44168c4(jule::Ptr<_1c0da8721_Eval>* _101933_e, jule::Ptr<_1c0c67998_FnCallExpr>* _101948_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	__jule_anon_1c44168c4_ctx *__jule_closure_ctx = (__jule_anon_1c44168c4_ctx*)jule::__closure_get_ctx();
	return _1c0cc231b__Size(__jule_closure_ctx->_self_, _101933_e, _101948_fc);;
}

inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c441882c(jule::Ptr<_1c0da8721_Eval>* _102633_e, jule::Ptr<_1c0c67998_FnCallExpr>* _102648_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	__jule_anon_1c441882c_ctx *__jule_closure_ctx = (__jule_anon_1c441882c_ctx*)jule::__closure_get_ctx();
	return _1c0cc2717__Key(__jule_closure_ctx->_self_, _102633_e, _102648_fc);;
}

inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c441a785(jule::Ptr<_1c0da8721_Eval>* _103333_e, jule::Ptr<_1c0c67998_FnCallExpr>* _103348_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	__jule_anon_1c441a785_ctx *__jule_closure_ctx = (__jule_anon_1c441a785_ctx*)jule::__closure_get_ctx();
	return _1c0cc2b13__Value(__jule_closure_ctx->_self_, _103333_e, _103348_fc);;
}

inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c441c6dd(jule::Ptr<_1c0da8721_Eval>* _104033_e, jule::Ptr<_1c0c67998_FnCallExpr>* _104048_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	__jule_anon_1c441c6dd_ctx *__jule_closure_ctx = (__jule_anon_1c441c6dd_ctx*)jule::__closure_get_ctx();
	return _1c0cc300e__Fields(__jule_closure_ctx->_self_, _104033_e, _104048_fc);;
}

inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c441e646(jule::Ptr<_1c0da8721_Eval>* _104733_e, jule::Ptr<_1c0c67998_FnCallExpr>* _104748_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	__jule_anon_1c441e646_ctx *__jule_closure_ctx = (__jule_anon_1c441e646_ctx*)jule::__closure_get_ctx();
	return _1c0cc340a__Statics(__jule_closure_ctx->_self_, _104733_e, _104748_fc);;
}

inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c4421824(jule::Ptr<_1c0da8721_Eval>* _105433_e, jule::Ptr<_1c0c67998_FnCallExpr>* _105448_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	__jule_anon_1c4421824_ctx *__jule_closure_ctx = (__jule_anon_1c4421824_ctx*)jule::__closure_get_ctx();
	return _1c0cc62cb__Params(__jule_closure_ctx->_self_, _105433_e, _105448_fc);;
}

inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c442377c(jule::Ptr<_1c0da8721_Eval>* _106133_e, jule::Ptr<_1c0c67998_FnCallExpr>* _106148_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	__jule_anon_1c442377c_ctx *__jule_closure_ctx = (__jule_anon_1c442377c_ctx*)jule::__closure_get_ctx();
	return _1c0cc4ce1__Types(__jule_closure_ctx->_self_, _106133_e, _106148_fc);;
}

inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c44256d5(jule::Ptr<_1c0da8721_Eval>* _106833_e, jule::Ptr<_1c0c67998_FnCallExpr>* _106848_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	__jule_anon_1c44256d5_ctx *__jule_closure_ctx = (__jule_anon_1c44256d5_ctx*)jule::__closure_get_ctx();
	return _1c0cc3806__Public(__jule_closure_ctx->_self_, _106833_e, _106848_fc);;
}

inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c442763d(jule::Ptr<_1c0da8721_Eval>* _107533_e, jule::Ptr<_1c0c67998_FnCallExpr>* _107548_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	__jule_anon_1c442763d_ctx *__jule_closure_ctx = (__jule_anon_1c442763d_ctx*)jule::__closure_get_ctx();
	return _1c0cc3c02__Binded(__jule_closure_ctx->_self_, _107533_e, _107548_fc);;
}

inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c4429596(jule::Ptr<_1c0da8721_Eval>* _108233_e, jule::Ptr<_1c0c67998_FnCallExpr>* _108248_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	__jule_anon_1c4429596_ctx *__jule_closure_ctx = (__jule_anon_1c4429596_ctx*)jule::__closure_get_ctx();
	return _1c0cc40ed__Ordered(__jule_closure_ctx->_self_, _108233_e, _108248_fc);;
}

inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c442b4ee(jule::Ptr<_1c0da8721_Eval>* _108933_e, jule::Ptr<_1c0c67998_FnCallExpr>* _108948_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	__jule_anon_1c442b4ee_ctx *__jule_closure_ctx = (__jule_anon_1c442b4ee_ctx*)jule::__closure_get_ctx();
	return _1c0cc44e9__Comparable(__jule_closure_ctx->_self_, _108933_e, _108948_fc);;
}

inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c442d457(jule::Ptr<_1c0da8721_Eval>* _109633_e, jule::Ptr<_1c0c67998_FnCallExpr>* _109648_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	__jule_anon_1c442d457_ctx *__jule_closure_ctx = (__jule_anon_1c442d457_ctx*)jule::__closure_get_ctx();
	return _1c0cc48e5__Mutable(__jule_closure_ctx->_self_, _109633_e, _109648_fc);;
}

inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c44303b0(jule::Ptr<_1c0da8721_Eval>* _110333_e, jule::Ptr<_1c0c67998_FnCallExpr>* _110348_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	__jule_anon_1c44303b0_ctx *__jule_closure_ctx = (__jule_anon_1c44303b0_ctx*)jule::__closure_get_ctx();
	return _1c0cc51dc__Exceptional(__jule_closure_ctx->_self_, _110333_e, _110348_fc);;
}

inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c4432318(jule::Ptr<_1c0da8721_Eval>* _111033_e, jule::Ptr<_1c0c67998_FnCallExpr>* _111048_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	__jule_anon_1c4432318_ctx *__jule_closure_ctx = (__jule_anon_1c4432318_ctx*)jule::__closure_get_ctx();
	return _1c0cc55d8__CanNil(__jule_closure_ctx->_self_, _111033_e, _111048_fc);;
}

inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c4439144(jule::Ptr<_1c0da8721_Eval>* _111733_e, jule::Ptr<_1c0c67998_FnCallExpr>* _111748_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	__jule_anon_1c4439144_ctx *__jule_closure_ctx = (__jule_anon_1c4439144_ctx*)jule::__closure_get_ctx();
	return _1c0cc59d4__RC(__jule_closure_ctx->_self_, _111733_e, _111748_fc);;
}

inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c443b036(jule::Ptr<_1c0da8721_Eval>* _112433_e, jule::Ptr<_1c0c67998_FnCallExpr>* _112448_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	__jule_anon_1c443b036_ctx *__jule_closure_ctx = (__jule_anon_1c443b036_ctx*)jule::__closure_get_ctx();
	return _1c0cc5dd0__Result(__jule_closure_ctx->_self_, _112433_e, _112448_fc);;
}

inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c443ce8e(jule::Ptr<_1c0da8721_Eval>* _113133_e, jule::Ptr<_1c0c67998_FnCallExpr>* _113148_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	__jule_anon_1c443ce8e_ctx *__jule_closure_ctx = (__jule_anon_1c443ce8e_ctx*)jule::__closure_get_ctx();
	return _1c0cc1628__Kind(__jule_closure_ctx->_self_, _113133_e, _113148_fc);;
}

inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c41dd3c1(jule::Ptr<_1c0da8721_Eval>* _124733_e, jule::Ptr<_1c0c67998_FnCallExpr>* _124748_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	__jule_anon_1c41dd3c1_ctx *__jule_closure_ctx = (__jule_anon_1c41dd3c1_ctx*)jule::__closure_get_ctx();
	return _1c0cc7640__Unwrap(__jule_closure_ctx->_self_, _124733_e, _124748_fc);;
}

inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c41e0390(jule::Ptr<_1c0da8721_Eval>* _125433_e, jule::Ptr<_1c0c67998_FnCallExpr>* _125448_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	__jule_anon_1c41e0390_ctx *__jule_closure_ctx = (__jule_anon_1c41e0390_ctx*)jule::__closure_get_ctx();
	return _1c0cc7a3b__Type(__jule_closure_ctx->_self_, _125433_e, _125448_fc);;
}

inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c41e22e8(jule::Ptr<_1c0da8721_Eval>* _126133_e, jule::Ptr<_1c0c67998_FnCallExpr>* _126148_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	__jule_anon_1c41e22e8_ctx *__jule_closure_ctx = (__jule_anon_1c41e22e8_ctx*)jule::__closure_get_ctx();
	return _1c0cc7e37__Lvalue(__jule_closure_ctx->_self_, _126133_e, _126148_fc);;
}

inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c41e4251(jule::Ptr<_1c0da8721_Eval>* _126833_e, jule::Ptr<_1c0c67998_FnCallExpr>* _126848_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	__jule_anon_1c41e4251_ctx *__jule_closure_ctx = (__jule_anon_1c41e4251_ctx*)jule::__closure_get_ctx();
	return _1c0cc8333__Mutable(__jule_closure_ctx->_self_, _126833_e, _126848_fc);;
}

inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c41e61a9(jule::Ptr<_1c0da8721_Eval>* _127533_e, jule::Ptr<_1c0c67998_FnCallExpr>* _127548_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	__jule_anon_1c41e61a9_ctx *__jule_closure_ctx = (__jule_anon_1c41e61a9_ctx*)jule::__closure_get_ctx();
	return _1c0cc872e__Const(__jule_closure_ctx->_self_, _127533_e, _127548_fc);;
}

inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c41e8112(jule::Ptr<_1c0da8721_Eval>* _128233_e, jule::Ptr<_1c0c67998_FnCallExpr>* _128248_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	__jule_anon_1c41e8112_ctx *__jule_closure_ctx = (__jule_anon_1c41e8112_ctx*)jule::__closure_get_ctx();
	return _1c0cc8b2a__Field(__jule_closure_ctx->_self_, _128233_e, _128248_fc);;
}

inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c420ab4c(jule::Ptr<_1c0da8721_Eval>* _139633_e, jule::Ptr<_1c0c67998_FnCallExpr>* _139648_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	__jule_anon_1c420ab4c_ctx *__jule_closure_ctx = (__jule_anon_1c420ab4c_ctx*)jule::__closure_get_ctx();
	return _1c0ccb677__Path(__jule_closure_ctx->_self_, _139633_e, _139648_fc);;
}

inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c420caa5(jule::Ptr<_1c0da8721_Eval>* _140333_e, jule::Ptr<_1c0c67998_FnCallExpr>* _140348_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	__jule_anon_1c420caa5_ctx *__jule_closure_ctx = (__jule_anon_1c420caa5_ctx*)jule::__closure_get_ctx();
	return _1c0ccba73__Name(__jule_closure_ctx->_self_, _140333_e, _140348_fc);;
}

inline jule::Ptr<_1c0da69e9_Data> __jule_anon_1c420ea0d(jule::Ptr<_1c0da8721_Eval>* _141033_e, jule::Ptr<_1c0c67998_FnCallExpr>* _141048_fc, jule::Ptr<_1c0da69e9_Data>* ) {
	__jule_anon_1c420ea0d_ctx *__jule_closure_ctx = (__jule_anon_1c420ea0d_ctx*)jule::__closure_get_ctx();
	return _1c0ccbe6e__Dir(__jule_closure_ctx->_self_, _141033_e, _141048_fc);;
}

inline jule::Bool __jule_anon_1c421a530(jule::Ptr<_1c0d2b078_Sema>* _6421_sema, jule::Slice<jule::Ptr<_1c0dd7101_TypeAlias>>* _6439_generics) {
	__jule_anon_1c421a530_ctx *__jule_closure_ctx = (__jule_anon_1c421a530_ctx*)jule::__closure_get_ctx();
	{
		auto expr = &((*__jule_closure_ctx->_self_.alloc)._field_genericsD);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c421b5ec:;
		if (it != expr_end) {
			jule::I64 _6518_i = it - expr->begin();
			jule::Ptr<_1c0c6bb45_GenericDecl> _6525_g = *it;
			{
				jule::Ptr<_1c0dd650c_InsGeneric> _6621_generic = (*(__jule_closure_ctx->_self_))._field_generics[_6518_i];;
				if ((((*(_6525_g))._field_Constraint == nullptr) || ((*((*_6525_g.alloc)._field_Constraint))._field_Mask.len() == 0LL))) {
					goto _iter_next_1c421b5ec;
				};
				(*(_6621_generic))._field_Constraint=jule::Slice<jule::Ptr<_1c0dd7de3_TypeKind>>::alloc(0LL, (*((*_6525_g.alloc)._field_Constraint))._field_Mask.len());
				{
					auto expr = &((*((*_6525_g.alloc)._field_Constraint))._field_Mask);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c421e369:;
					if (it != expr_end) {
						jule::Ptr<_1c0c5e93a_TypeDecl> _7129_mask = *it;
						{
							jule::I64 _7221_n = (*((*(_6421_sema))))._field_errors.len();;
							jule::Ptr<_1c0dd7de3_TypeKind> _7325_kind = _1c0d33b41_buildTypeWithRefers((*(_6421_sema)), &(_7129_mask), jule::Trait<_1c0e079d4_Lookup>((*(_6421_sema)), 3), (*(_6439_generics)), nullptr);;
							if ((_7325_kind == nullptr)) {
								{
									auto &_match_expr{ (*(_7129_mask))._field_Kind };
									
									if (_match_expr.type == &__jule_any_type74) {
										_case_begin_1c422115c:;
										{
											jule::Ptr<_1c0c60045_IdentTypeDecl> _7733_itd = (*(_7129_mask))._field_Kind.unsafe_cast_ptr<_1c0c60045_IdentTypeDecl>();;
											if ((((*(_7733_itd))._field_Generics.len() == 0LL) && _1c0cd1814_isBuiltinConstraint(&((*_7733_itd.alloc)._field_Ident)))) {
												_7325_kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(_1c0e04d11_buildPrimType((*_7733_itd.alloc)._field_Ident), 20)});
												((*((*(_6421_sema))))._field_errors).mut_slice(0LL, _7221_n);;
												goto _julec_label_1c4223cca;
											};
										}
									}
									_match_end_1c42210e6:;
								};
								return false;;
							};
							_julec_label_1c4223cca:;
							(*_6621_generic.alloc)._field_Constraint=jule::append((*_6621_generic.alloc)._field_Constraint,jule::Slice<jule::Ptr<_1c0dd7de3_TypeKind>>::make({_7325_kind}));
						}
						_iter_next_1c421e369:;
						++it;
						goto _iter_begin_1c421e369;
					}
					_iter_end_1c421e369:;
				};
			}
			_iter_next_1c421b5ec:;
			++it;
			_6518_i++;
			goto _iter_begin_1c421b5ec;
		}
		_iter_end_1c421b5ec:;
	};
	return true;;
}

inline jule::Bool __jule_anon_1c46cd66e(jule::Ptr<_1c0d2b078_Sema>* _110543_sema, jule::Slice<jule::Ptr<_1c0dd7101_TypeAlias>>* _110561_generics) {
	__jule_anon_1c46cd66e_ctx *__jule_closure_ctx = (__jule_anon_1c46cd66e_ctx*)jule::__closure_get_ctx();
	jule::Bool _110617_ok = true;;
	{
		auto expr = &((*__jule_closure_ctx->_110140_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c46ceb26:;
		if (it != expr_end) {
			jule::Ptr<_1c0c976ed_ParamIns> _110725_p = *it;
			{
				if (_1c0c943dc_IsSelf((*(_110725_p))._field_Decl.ptr())) {
					if (_1c0c94673_IsRef((*_110725_p.alloc)._field_Decl)) {
						(*_110725_p.alloc)._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>(jule::new_ptr<_1c0de44e8_Sptr>(_1c0de44e8_Sptr{._field_Elem=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>((*__jule_closure_ctx->_110140_f.alloc)._field_Owner, 0)})}), 21)});
					} else {
						(*_110725_p.alloc)._field_Kind=jule::new_ptr<_1c0dd7de3_TypeKind>(_1c0dd7de3_TypeKind{._field_Kind=jule::Trait<_1c0dd793c_Kind>((*__jule_closure_ctx->_110140_f.alloc)._field_Owner, 0)});
					};
				} else {
					(*(_110725_p))._field_Kind=_1c0d34cda_buildTypeWithGenerics((*(_110543_sema)), &((*((*((*_110725_p.alloc)._field_Decl))._field_Kind))._field_Decl), (*(_110561_generics)), (*__jule_closure_ctx->_110140_f.alloc)._field_Refers);
					if (((*_110725_p.alloc)._field_Kind != nullptr)) {
						_1c0d39806_checkFnParamKind(__jule_closure_ctx->_self_, &(_110725_p));
					} else {
						_110617_ok=false;
					};
				};
			}
			_iter_next_1c46ceb26:;
			++it;
			goto _iter_begin_1c46ceb26;
		}
		_iter_end_1c46ceb26:;
	};
	if ((!(_1c0c95c18_IsVoid((*__jule_closure_ctx->_110140_f.alloc)._field_Decl.ptr())))) {
		(*__jule_closure_ctx->_110140_f.alloc)._field_Result=_1c0d34cda_buildTypeWithGenerics((*(_110543_sema)), &((*((*((*(*__jule_closure_ctx->_110140_f.alloc)._field_Decl.alloc)._field_Result))._field_Kind))._field_Decl), (*(_110561_generics)), (*__jule_closure_ctx->_110140_f.alloc)._field_Refers);
		_110617_ok=(((*__jule_closure_ctx->_110140_f.alloc)._field_Result != nullptr) && _110617_ok);
	};
	return _110617_ok;;
}

inline jule::Bool __jule_anon_1c572da75(jule::Ptr<_1c0d09782_ImportInfo> _183149_imp) {
	__jule_anon_1c572da75_ctx *__jule_closure_ctx = (__jule_anon_1c572da75_ctx*)jule::__closure_get_ctx();
	if ((((*__jule_closure_ctx->_182934_s.alloc)._field_Ns.len() == 1LL) && ((*(_183149_imp))._field_Alias == __jule_closure_ctx->_18309_path))) {
		return true;;
	};
	return (((*_183149_imp.alloc)._field_LinkPath == __jule_closure_ctx->_18309_path) && _1c0d0c39a_isAccessibleViaSelection(_183149_imp));;
}

inline jule::Str __jule_anon_1c5ac8859(jule::Any* _84325_def) {
	__jule_anon_1c5ac8859_ctx *__jule_closure_ctx = (__jule_anon_1c5ac8859_ctx*)jule::__closure_get_ctx();
	{
		auto &_match_expr{ (*(_84325_def)) };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1c5ac9937:;
			{
				return (*((*(_84325_def)).cast_ptr<_1c0dd7101_TypeAlias>(&__jule_any_type65)))._field_Ident;;
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1c5ac9173:;
			{
				return (*((*(_84325_def)).cast_ptr<_1c0c807c4_Struct>(&__jule_any_type64)))._field_Ident;;
			}
		}
		else {
			_case_begin_1c5ac932c:;
			{
				return jule::Str();;
			}
		}
		_match_end_1c5ac92c7:;
	};
}

inline jule::Bool __jule_anon_1c5b5949a(jule::Ptr<_1c0d09782_ImportInfo> _151449_imp) {
	__jule_anon_1c5b5949a_ctx *__jule_closure_ctx = (__jule_anon_1c5b5949a_ctx*)jule::__closure_get_ctx();
	if ((((*__jule_closure_ctx->_151239_decl.alloc)._field_Idents.len() == 1LL) && ((*(_151449_imp))._field_Alias == __jule_closure_ctx->_15139_path))) {
		return true;;
	};
	return (((*_151449_imp.alloc)._field_LinkPath == __jule_closure_ctx->_15139_path) && _1c0d0c39a_isAccessibleViaSelection(_151449_imp));;
}

inline void __jule_anon_1c65cd65a(void) {
	__jule_anon_1c65cd65a_ctx *__jule_closure_ctx = (__jule_anon_1c65cd65a_ctx*)jule::__closure_get_ctx();
	if (__jule_closure_ctx->_13513_ref) {
		_1c254bb4e_write((*__jule_closure_ctx->_self_.alloc)._field_oc, jule::Str::lit("it - expr->begin()", 18));
	} else {
		_1c254bb4e_write((*__jule_closure_ctx->_self_.alloc)._field_oc, jule::Str::lit("it - expr.begin()", 17));
	};
}

inline void __jule_anon_1c65d2120(void) {
	__jule_anon_1c65d2120_ctx *__jule_closure_ctx = (__jule_anon_1c65d2120_ctx*)jule::__closure_get_ctx();
	{
		if ((*(*((*(__jule_closure_ctx->_12739_it))))._field_KeyB.alloc)._field_Reference) {
			_1c254bb4e_write((*__jule_closure_ctx->_self_.alloc)._field_oc, jule::Str::lit("it", 2));
		} else {
			_1c254bb4e_write((*__jule_closure_ctx->_self_.alloc)._field_oc, jule::Str::lit("*it", 3));
		};
	};
}

inline void __jule_anon_1c65e15e6(void) {
	__jule_anon_1c65e15e6_ctx *__jule_closure_ctx = (__jule_anon_1c65e15e6_ctx*)jule::__closure_get_ctx();
	_1c254bb4e_write((*__jule_closure_ctx->_self_.alloc)._field_oc, jule::Str::lit("it->first", 9));
}

inline void __jule_anon_1c65e3a6b(void) {
	__jule_anon_1c65e3a6b_ctx *__jule_closure_ctx = (__jule_anon_1c65e3a6b_ctx*)jule::__closure_get_ctx();
	_1c254bb4e_write((*__jule_closure_ctx->_self_.alloc)._field_oc, jule::Str::lit("it->second", 10));
}

inline void __jule_anon_1c6612606(void) {
	__jule_anon_1c6612606_ctx *__jule_closure_ctx = (__jule_anon_1c6612606_ctx*)jule::__closure_get_ctx();
	_1c254bb4e_write((*__jule_closure_ctx->_self_.alloc)._field_oc, jule::Str::lit("0", 1));
}

inline void __jule_anon_1c667d496(void) {
	__jule_anon_1c667d496_ctx *__jule_closure_ctx = (__jule_anon_1c667d496_ctx*)jule::__closure_get_ctx();
	_1c254bb4e_write((*(__jule_closure_ctx->_self_))._field_oc, jule::Str::lit("_match_expr", 11));
}

inline void __jule_anon_1c667e7a5(void) {
	__jule_anon_1c667e7a5_ctx *__jule_closure_ctx = (__jule_anon_1c667e7a5_ctx*)jule::__closure_get_ctx();
	_1c2479274_possibleRefExpr((*(*__jule_closure_ctx->_self_.alloc)._field_oc.alloc)._field_ec, (*(*__jule_closure_ctx->_63233_m.alloc)._field_Expr.alloc)._field_Model);
}

inline jule::Bool __jule_anon_1c66ed093(jule::Ptr<_1c0d4dde2_Var> _100472_v) {
	__jule_anon_1c66ed093_ctx *__jule_closure_ctx = (__jule_anon_1c66ed093_ctx*)jule::__closure_get_ctx();
	return _1c247357b_captureVarHandling(&((*__jule_closure_ctx->_self_.alloc)._field_oc), &(__jule_closure_ctx->_100037_m), &(_100472_v));;
}

inline __jule_tuple_i64__jule_tuple_bool __jule_anon_1c6b1b89b(jule::Str _22565_s, jule::I64 _22573_base) {
	__jule_anon_1c6b1b89b_ctx *__jule_closure_ctx = (__jule_anon_1c6b1b89b_ctx*)jule::__closure_get_ctx();
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _2021c6744_ParseInt(_22565_s, _22573_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool __jule_anon_1c6b242cc(jule::Str _23366_s, jule::I64 _23374_base) {
	__jule_anon_1c6b242cc_ctx *__jule_closure_ctx = (__jule_anon_1c6b242cc_ctx*)jule::__closure_get_ctx();
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _2021c628d_ParseUint(_23366_s, _23374_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LLU;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline void __jule_anon_1c69a886a(jule::Ptr<_1c0d0c6a8_Package>* _52335_pkg) {
	__jule_anon_1c69a886a_ctx *__jule_closure_ctx = (__jule_anon_1c69a886a_ctx*)jule::__closure_get_ctx();
	_1c25596c8_iterFiles(_52335_pkg, jule::__new_closure<void,jule::Ptr<_1c0da1681_SymbolTable>*>((void*)__jule_anon_1c69a977d, jule::Ptr<__jule_anon_1c69a977d_ctx>::make(__jule_anon_1c69a977d_ctx{._self_=__jule_closure_ctx->_self_}).as<jule::Uintptr>(), __jule_anon_1c69a977d_ctx_handler));
}

inline void __jule_anon_1c69a8bbc(jule::Ptr<_1c0d0c6a8_Package>* _56535_pkg) {
	__jule_anon_1c69a8bbc_ctx *__jule_closure_ctx = (__jule_anon_1c69a8bbc_ctx*)jule::__closure_get_ctx();
	_1c25596c8_iterFiles(_56535_pkg, jule::__new_closure<void,jule::Ptr<_1c0da1681_SymbolTable>*>((void*)__jule_anon_1c69b2830, jule::Ptr<__jule_anon_1c69b2830_ctx>::make(__jule_anon_1c69b2830_ctx{._self_=__jule_closure_ctx->_self_}).as<jule::Uintptr>(), __jule_anon_1c69b2830_ctx_handler));
}

inline void __jule_anon_1c6a0e88d(jule::Ptr<_1c0d0c6a8_Package>* _91435_pkg) {
	__jule_anon_1c6a0e88d_ctx *__jule_closure_ctx = (__jule_anon_1c6a0e88d_ctx*)jule::__closure_get_ctx();
	_1c25596c8_iterFiles(_91435_pkg, jule::__new_closure<void,jule::Ptr<_1c0da1681_SymbolTable>*>((void*)__jule_anon_1c6a107a1, jule::Ptr<__jule_anon_1c6a107a1_ctx>::make(__jule_anon_1c6a107a1_ctx{._self_=__jule_closure_ctx->_self_}).as<jule::Uintptr>(), __jule_anon_1c6a107a1_ctx_handler));
}

inline void __jule_anon_1c6a18ba5(jule::Ptr<_1c0d0c6a8_Package>* _96235_pkg) {
	__jule_anon_1c6a18ba5_ctx *__jule_closure_ctx = (__jule_anon_1c6a18ba5_ctx*)jule::__closure_get_ctx();
	_1c25596c8_iterFiles(_96235_pkg, jule::__new_closure<void,jule::Ptr<_1c0da1681_SymbolTable>*>((void*)__jule_anon_1c6a1a965, jule::Ptr<__jule_anon_1c6a1a965_ctx>::make(__jule_anon_1c6a1a965_ctx{._self_=__jule_closure_ctx->_self_}).as<jule::Uintptr>(), __jule_anon_1c6a1a965_ctx_handler));
}

inline void __jule_anon_1c6a2d3d4(void) {
	__jule_anon_1c6a2d3d4_ctx *__jule_closure_ctx = (__jule_anon_1c6a2d3d4_ctx*)jule::__closure_get_ctx();
	_1c254bb4e_write(__jule_closure_ctx->_self_, jule::Str::lit("&(", 2));
	_1c2483b41_model((*__jule_closure_ctx->_self_.alloc)._field_ec, (*(*(*__jule_closure_ctx->_102427_v.alloc)._field_Value.alloc)._field_Data.alloc)._field_Model);
	_1c254bb4e_write(__jule_closure_ctx->_self_, jule::Str::lit(")", 1));
}

inline void __jule_anon_1c6a304d5(void) {
	__jule_anon_1c6a304d5_ctx *__jule_closure_ctx = (__jule_anon_1c6a304d5_ctx*)jule::__closure_get_ctx();
	_1c2479274_possibleRefExpr((*__jule_closure_ctx->_self_.alloc)._field_ec, (*(*(*__jule_closure_ctx->_102427_v.alloc)._field_Value.alloc)._field_Data.alloc)._field_Model);
}

inline void __jule_anon_1c6a32c02(void) {
	__jule_anon_1c6a32c02_ctx *__jule_closure_ctx = (__jule_anon_1c6a32c02_ctx*)jule::__closure_get_ctx();
	_1c254bb4e_write(__jule_closure_ctx->_self_, jule::Str::lit("nullptr", 7));
}

inline void __jule_anon_1c6a33d79(void) {
	__jule_anon_1c6a33d79_ctx *__jule_closure_ctx = (__jule_anon_1c6a33d79_ctx*)jule::__closure_get_ctx();
	_1c2483de9_initExpr((*__jule_closure_ctx->_self_.alloc)._field_ec, (*(*__jule_closure_ctx->_102427_v.alloc)._field_Kind.alloc)._field_Kind);
}

inline void __jule_anon_1c6a799e6(jule::Ptr<_1c0d0c6a8_Package>* _133335_pkg) {
	__jule_anon_1c6a799e6_ctx *__jule_closure_ctx = (__jule_anon_1c6a799e6_ctx*)jule::__closure_get_ctx();
	_1c25596c8_iterFiles(_133335_pkg, jule::__new_closure<void,jule::Ptr<_1c0da1681_SymbolTable>*>((void*)__jule_anon_1c6a7a909, jule::Ptr<__jule_anon_1c6a7a909_ctx>::make(__jule_anon_1c6a7a909_ctx{._self_=__jule_closure_ctx->_self_}).as<jule::Uintptr>(), __jule_anon_1c6a7a909_ctx_handler));
}

inline void __jule_anon_1c6a7d5aa(jule::Ptr<_1c0da1681_SymbolTable>* _134932_file) {
	__jule_anon_1c6a7d5aa_ctx *__jule_closure_ctx = (__jule_anon_1c6a7d5aa_ctx*)jule::__closure_get_ctx();
	{
		auto expr = &((*((*(_134932_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6a7de7e:;
		if (it != expr_end) {
			jule::Ptr<_1c0c95795_Fn> _135020_f = *it;
			{
				if ((*(_135020_f))._field_Ident.equal("init", 4)) {
					_1c254c501_indent(__jule_closure_ctx->_self_);
					static__1c248ae89_func(&((*__jule_closure_ctx->_self_.alloc)._field_Buf), &(_135020_f));
					_1c254bb4e_write(__jule_closure_ctx->_self_, jule::Str::lit("();\n", 4));
				};
			}
			_iter_next_1c6a7de7e:;
			++it;
			goto _iter_begin_1c6a7de7e;
		}
		_iter_end_1c6a7de7e:;
	};
}

inline void __jule_anon_1c6a83c97(jule::Ptr<_1c0d0c6a8_Package>* _137835_pkg) {
	__jule_anon_1c6a83c97_ctx *__jule_closure_ctx = (__jule_anon_1c6a83c97_ctx*)jule::__closure_get_ctx();
	_1c25587e8_pushInit(__jule_closure_ctx->_self_, _137835_pkg);
}

inline jule::Bool __jule_anon_1c432e534(jule::Ptr<_1c0d09782_ImportInfo> _143028_pkg) {
	__jule_anon_1c432e534_ctx *__jule_closure_ctx = (__jule_anon_1c432e534_ctx*)jule::__closure_get_ctx();
	return (*(_143028_pkg))._field_LinkPath.equal("std::comptime", 13);;
}

inline void __jule_anon_1c69a977d(jule::Ptr<_1c0da1681_SymbolTable>* _52436_file) {
	__jule_anon_1c69a977d_ctx *__jule_closure_ctx = (__jule_anon_1c69a977d_ctx*)jule::__closure_get_ctx();
	{
		auto expr = &((*((*(_52436_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c69aa21d:;
		if (it != expr_end) {
			jule::Ptr<_1c0ca8a72_Trait> _52529_t = *it;
			{
				if (((*(_52529_t))._field_Token == nullptr)) {
					return;;
				};
				if (((*_52529_t.alloc)._field_Implemented.len() == 0LL)) {
					jule::Ptr<_1c25499c6_traitHash> _53029_hash = jule::new_ptr<_1c25499c6_traitHash>(_1c25499c6_traitHash{._field_t=_52529_t, ._field_s=nullptr, ._field_i=0LL});;
					_234c76a64_StrBuilder _53529_b = static__234c76ec6_New((*_52529_t.alloc)._field_Ident.len());;
					static__1c248a3a6_writeIdentTo(&(_53529_b), &((*_52529_t.alloc)._field_Ident));
					(*(_53029_hash))._field_ti=_234c77d2e_Str(&_53529_b);
					(*__jule_closure_ctx->_self_.alloc)._field_tmap=jule::append((*__jule_closure_ctx->_self_.alloc)._field_tmap,jule::Slice<jule::Ptr<_1c25499c6_traitHash>>::make({_53029_hash}));
					goto _iter_next_1c69aa21d;
				};
				jule::I64 _54125_i = 0LL;;
				{
					auto expr = &((*_52529_t.alloc)._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c69aaac0:;
					if (it != expr_end) {
						jule::Ptr<_1c0c807c4_Struct> _54233_s = *it;
						{
							{
								auto expr = &((*(_54233_s))._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c69ae585:;
								if (it != expr_end) {
									jule::Ptr<_1c0c83552_StructIns> _54337_ins = *it;
									{
										jule::Ptr<_1c25499c6_traitHash> _54433_hash = jule::new_ptr<_1c25499c6_traitHash>(_1c25499c6_traitHash{._field_t=_52529_t, ._field_s=_54337_ins, ._field_i=_54125_i});;
										_234c76a64_StrBuilder _54933_b = static__234c76ec6_New((*_52529_t.alloc)._field_Ident.len());;
										static__1c248a3a6_writeIdentTo(&(_54933_b), &((*_52529_t.alloc)._field_Ident));
										(*(_54433_hash))._field_ti=_234c77d2e_Str(&_54933_b);
										(*__jule_closure_ctx->_self_.alloc)._field_tmap=jule::append((*__jule_closure_ctx->_self_.alloc)._field_tmap,jule::Slice<jule::Ptr<_1c25499c6_traitHash>>::make({_54433_hash}));
										(_54125_i)++;
									}
									_iter_next_1c69ae585:;
									++it;
									goto _iter_begin_1c69ae585;
								}
								_iter_end_1c69ae585:;
							};
						}
						_iter_next_1c69aaac0:;
						++it;
						goto _iter_begin_1c69aaac0;
					}
					_iter_end_1c69aaac0:;
				};
				_1c255a476_pushMethodsFromInherits(&(_52529_t), &(_52529_t));
			}
			_iter_next_1c69aa21d:;
			++it;
			goto _iter_begin_1c69aa21d;
		}
		_iter_end_1c69aa21d:;
	};
}

inline void __jule_anon_1c69b2830(jule::Ptr<_1c0da1681_SymbolTable>* _56636_file) {
	__jule_anon_1c69b2830_ctx *__jule_closure_ctx = (__jule_anon_1c69b2830_ctx*)jule::__closure_get_ctx();
	{
		auto expr = &((*((*(_56636_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c69b32c0:;
		if (it != expr_end) {
			jule::Ptr<_1c0ca8a72_Trait> _56729_t = *it;
			{
				if (((*(_56729_t))._field_Token == nullptr)) {
					return;;
				};
				_1c254c501_indent(__jule_closure_ctx->_self_);
				_1c254bb4e_write(__jule_closure_ctx->_self_, jule::Str::lit("struct ", 7));
				static__1c248b561_traitDecl(&((*__jule_closure_ctx->_self_.alloc)._field_Buf), _56729_t);
				_1c254bb4e_write(__jule_closure_ctx->_self_, jule::Str::lit("{};\n", 4));
			}
			_iter_next_1c69b32c0:;
			++it;
			goto _iter_begin_1c69b32c0;
		}
		_iter_end_1c69b32c0:;
	};
}

inline void __jule_anon_1c6a107a1(jule::Ptr<_1c0da1681_SymbolTable>* _91536_file) {
	__jule_anon_1c6a107a1_ctx *__jule_closure_ctx = (__jule_anon_1c6a107a1_ctx*)jule::__closure_get_ctx();
	{
		auto expr = &((*((*(_91536_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6a11241:;
		if (it != expr_end) {
			jule::Ptr<_1c0c95795_Fn> _91629_f = *it;
			{
				if (((!((*(_91629_f))._field_Binded)) && ((*_91629_f.alloc)._field_Token != nullptr))) {
					_1c254d535_pushResult(__jule_closure_ctx->_self_, &(_91629_f));
					_1c2553727_funcDecl(__jule_closure_ctx->_self_, &(_91629_f), false);
				};
			}
			_iter_next_1c6a11241:;
			++it;
			goto _iter_begin_1c6a11241;
		}
		_iter_end_1c6a11241:;
	};
}

inline void __jule_anon_1c6a1a965(jule::Ptr<_1c0da1681_SymbolTable>* _96336_file) {
	__jule_anon_1c6a1a965_ctx *__jule_closure_ctx = (__jule_anon_1c6a1a965_ctx*)jule::__closure_get_ctx();
	{
		auto expr = &((*((*(_96336_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6a1b405:;
		if (it != expr_end) {
			jule::Ptr<_1c0ca8a72_Trait> _96429_t = *it;
			{
				if (((*(_96429_t))._field_Token == nullptr)) {
					return;;
				};
				if (((*_96429_t.alloc)._field_Methods.len() == 0LL)) {
					goto _iter_next_1c6a1b405;
				};
				_1c254bb4e_write(__jule_closure_ctx->_self_, jule::Str::lit("struct ", 7));
				static__1c248b561_traitDecl(&((*__jule_closure_ctx->_self_.alloc)._field_Buf), _96429_t);
				_1c254bb4e_write(__jule_closure_ctx->_self_, jule::Str::lit("MptrData", 8));
				_1c254bb4e_write(__jule_closure_ctx->_self_, jule::Str::lit(" {\n", 3));
				_1c254c105_addIndent(__jule_closure_ctx->_self_);
				_1c25541a6_traitDataTypeMethods(__jule_closure_ctx->_self_, &(_96429_t), &(_96429_t));
				_1c254c303_doneIndent(__jule_closure_ctx->_self_);
				_1c254c501_indent(__jule_closure_ctx->_self_);
				_1c254bb4e_write(__jule_closure_ctx->_self_, jule::Str::lit("};\n\n", 4));
			}
			_iter_next_1c6a1b405:;
			++it;
			goto _iter_begin_1c6a1b405;
		}
		_iter_end_1c6a1b405:;
	};
}

inline void __jule_anon_1c6a7a909(jule::Ptr<_1c0da1681_SymbolTable>* _133436_file) {
	__jule_anon_1c6a7a909_ctx *__jule_closure_ctx = (__jule_anon_1c6a7a909_ctx*)jule::__closure_get_ctx();
	{
		auto expr = &((*((*(_133436_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6a7b399:;
		if (it != expr_end) {
			jule::Ptr<_1c0c95795_Fn> _133529_f = *it;
			{
				if (((!(_2336c486a_Test)) && _1c256a123_hasDirective(&((*(_133529_f))._field_Directives), jule::Str::lit("test", 4)))) {
					goto _iter_next_1c6a7b399;
				};
				if (((!((*_133529_f.alloc)._field_Binded)) && ((*_133529_f.alloc)._field_Token != nullptr))) {
					_1c2555dcd_func(__jule_closure_ctx->_self_, &(_133529_f));
					_1c254bb4e_write(__jule_closure_ctx->_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1c6a7b399:;
			++it;
			goto _iter_begin_1c6a7b399;
		}
		_iter_end_1c6a7b399:;
	};
}

int main(int argc, char *argv[], char *envp[]) {
    jule::__closure_init();
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}